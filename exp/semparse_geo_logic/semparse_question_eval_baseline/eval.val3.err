I1203 08:13:07.034609 139656110184192 hlog.py:24] # --noTEST
I1203 08:13:07.035002 139656110184192 hlog.py:24] # --seed=3
I1203 08:13:07.035098 139656110184192 hlog.py:24] # --dataset=semparse
I1203 08:13:07.035185 139656110184192 hlog.py:24] # --model_dir=model
I1203 08:13:07.035269 139656110184192 hlog.py:24] # --n_checkpoint=10
I1203 08:13:07.035352 139656110184192 hlog.py:24] # --nologtostderr
I1203 08:13:07.035449 139656110184192 hlog.py:24] # --noalsologtostderr
I1203 08:13:07.035532 139656110184192 hlog.py:24] # --log_dir=
I1203 08:13:07.035614 139656110184192 hlog.py:24] # --verbosity=0
I1203 08:13:07.035696 139656110184192 hlog.py:24] # --verbosity=0
I1203 08:13:07.035777 139656110184192 hlog.py:24] # --stderrthreshold=fatal
I1203 08:13:07.035858 139656110184192 hlog.py:24] # --showprefixforinfo
I1203 08:13:07.035938 139656110184192 hlog.py:24] # --nodedup
I1203 08:13:07.036020 139656110184192 hlog.py:24] # --nobuild_comp_table
I1203 08:13:07.036100 139656110184192 hlog.py:24] # --semparse_split=query
I1203 08:13:07.036180 139656110184192 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 08:13:07.036261 139656110184192 hlog.py:24] # --semparse_mrl=logic
I1203 08:13:07.036341 139656110184192 hlog.py:24] # --val_fold=8
I1203 08:13:07.036422 139656110184192 hlog.py:24] # --test_fold=9
I1203 08:13:07.036502 139656110184192 hlog.py:24] # --n_emb=64
I1203 08:13:07.036585 139656110184192 hlog.py:24] # --n_enc=512
I1203 08:13:07.036665 139656110184192 hlog.py:24] # --dropout=0.5
I1203 08:13:07.036745 139656110184192 hlog.py:24] # --copy_sup
I1203 08:13:07.036825 139656110184192 hlog.py:24] # --n_epochs=150
I1203 08:13:07.036906 139656110184192 hlog.py:24] # --n_epoch_batches=32
I1203 08:13:07.036986 139656110184192 hlog.py:24] # --n_batch=64
I1203 08:13:07.037066 139656110184192 hlog.py:24] # --lr=0.001
I1203 08:13:07.037146 139656110184192 hlog.py:24] # --clip=1.0
I1203 08:13:07.037226 139656110184192 hlog.py:24] # --sched_factor=0.5
I1203 08:13:07.037306 139656110184192 hlog.py:24] # --norun_with_pdb
I1203 08:13:07.037386 139656110184192 hlog.py:24] # --nopdb_post_mortem
I1203 08:13:07.037467 139656110184192 hlog.py:24] # --norun_with_profiling
I1203 08:13:07.037547 139656110184192 hlog.py:24] # --use_cprofile_for_profiling
I1203 08:13:07.037627 139656110184192 hlog.py:24] # --noonly_check_args
I1203 08:13:07.037707 139656110184192 hlog.py:24] # --augment=composed.val3.json
I1203 08:13:07.037787 139656110184192 hlog.py:24] # --aug_ratio=0.3
I1203 08:13:07.037867 139656110184192 hlog.py:24] # --noinvert
I1203 08:13:07.037946 139656110184192 hlog.py:24] # --nohelp
I1203 08:13:07.038027 139656110184192 hlog.py:24] # --nohelp
I1203 08:13:07.038107 139656110184192 hlog.py:24] # --nohelpshort
I1203 08:13:07.038187 139656110184192 hlog.py:24] # --nohelpfull
I1203 08:13:07.038267 139656110184192 hlog.py:24] # --nohelpxml
I1203 08:13:07.038347 139656110184192 hlog.py:24] # 
I1203 08:13:07.081249 139656110184192 hlog.py:32] train 543
I1203 08:13:07.081445 139656110184192 hlog.py:32] aug 1000
I1203 08:13:23.016002 139656110184192 hlog.py:32] train/00000/loss 3.0517
I1203 08:13:32.131382 139656110184192 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 08:13:33.678976 139656110184192 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 08:13:33.679561 139656110184192 hlog.py:18] train/00000{22.77s}
I1203 08:13:46.044402 139656110184192 hlog.py:32] train/00001/loss 1.1465
I1203 08:13:48.700185 139656110184192 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 08:13:49.169404 139656110184192 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 08:13:49.169851 139656110184192 hlog.py:18] train/00001{15.49s}
I1203 08:14:02.120768 139656110184192 hlog.py:32] train/00002/loss 0.7222
I1203 08:14:04.834288 139656110184192 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 08:14:05.285394 139656110184192 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 08:14:05.285864 139656110184192 hlog.py:18] train/00002{16.12s}
I1203 08:14:16.751668 139656110184192 hlog.py:32] train/00003/loss 0.5333
I1203 08:14:21.825361 139656110184192 hlog.py:32] train/00003/eval_train/acc 0.0970
I1203 08:14:23.021293 139656110184192 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 08:14:23.021763 139656110184192 hlog.py:18] train/00003{17.74s}
I1203 08:14:35.032808 139656110184192 hlog.py:32] train/00004/loss 0.4346
I1203 08:14:39.779072 139656110184192 hlog.py:32] train/00004/eval_train/acc 0.1270
I1203 08:14:40.662503 139656110184192 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 08:14:40.663000 139656110184192 hlog.py:18] train/00004{17.64s}
I1203 08:14:53.295916 139656110184192 hlog.py:32] train/00005/loss 0.3845
I1203 08:14:58.798685 139656110184192 hlog.py:32] train/00005/eval_train/acc 0.1860
I1203 08:14:59.585733 139656110184192 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 08:14:59.586233 139656110184192 hlog.py:18] train/00005{18.92s}
I1203 08:15:11.110735 139656110184192 hlog.py:32] train/00006/loss 0.3016
I1203 08:15:17.480053 139656110184192 hlog.py:32] train/00006/eval_train/acc 0.2160
I1203 08:15:18.712635 139656110184192 hlog.py:32] train/00006/eval_val/acc 0.0000
I1203 08:15:18.713179 139656110184192 hlog.py:18] train/00006{19.13s}
I1203 08:15:29.304656 139656110184192 hlog.py:32] train/00007/loss 0.2651
I1203 08:15:33.688007 139656110184192 hlog.py:32] train/00007/eval_train/acc 0.3190
I1203 08:15:34.264702 139656110184192 hlog.py:32] train/00007/eval_val/acc 0.0338
I1203 08:15:34.265204 139656110184192 hlog.py:18] train/00007{15.55s}
I1203 08:15:45.253217 139656110184192 hlog.py:32] train/00008/loss 0.2332
I1203 08:15:49.972316 139656110184192 hlog.py:32] train/00008/eval_train/acc 0.3420
I1203 08:15:50.533022 139656110184192 hlog.py:32] train/00008/eval_val/acc 0.0743
I1203 08:15:50.533532 139656110184192 hlog.py:18] train/00008{16.27s}
I1203 08:16:01.453351 139656110184192 hlog.py:32] train/00009/loss 0.1943
I1203 08:16:05.213597 139656110184192 hlog.py:32] train/00009/eval_train/acc 0.4990
I1203 08:16:05.794353 139656110184192 hlog.py:32] train/00009/eval_val/acc 0.2838
I1203 08:16:05.915249 139656110184192 hlog.py:18] train/00009{15.38s}
I1203 08:16:17.744741 139656110184192 hlog.py:32] train/00010/loss 0.1870
I1203 08:16:21.488687 139656110184192 hlog.py:32] train/00010/eval_train/acc 0.5170
I1203 08:16:22.071665 139656110184192 hlog.py:32] train/00010/eval_val/acc 0.3176
I1203 08:16:22.072154 139656110184192 hlog.py:18] train/00010{16.16s}
I1203 08:16:33.316474 139656110184192 hlog.py:32] train/00011/loss 0.1660
I1203 08:16:36.775051 139656110184192 hlog.py:32] train/00011/eval_train/acc 0.4630
I1203 08:16:37.328884 139656110184192 hlog.py:32] train/00011/eval_val/acc 0.3176
I1203 08:16:37.329585 139656110184192 hlog.py:18] train/00011{15.26s}
I1203 08:16:49.410418 139656110184192 hlog.py:32] train/00012/loss 0.1820
I1203 08:16:53.257699 139656110184192 hlog.py:32] train/00012/eval_train/acc 0.5740
I1203 08:16:53.833981 139656110184192 hlog.py:32] train/00012/eval_val/acc 0.4122
I1203 08:16:53.834469 139656110184192 hlog.py:18] train/00012{16.50s}
I1203 08:17:06.633470 139656110184192 hlog.py:32] train/00013/loss 0.1341
I1203 08:17:10.299237 139656110184192 hlog.py:32] train/00013/eval_train/acc 0.6190
I1203 08:17:10.892077 139656110184192 hlog.py:32] train/00013/eval_val/acc 0.3919
I1203 08:17:10.892670 139656110184192 hlog.py:18] train/00013{17.06s}
I1203 08:17:22.138687 139656110184192 hlog.py:32] train/00014/loss 0.1209
I1203 08:17:25.890119 139656110184192 hlog.py:32] train/00014/eval_train/acc 0.5960
I1203 08:17:26.417485 139656110184192 hlog.py:32] train/00014/eval_val/acc 0.3986
I1203 08:17:26.417946 139656110184192 hlog.py:18] train/00014{15.53s}
I1203 08:17:37.876373 139656110184192 hlog.py:32] train/00015/loss 0.1133
I1203 08:17:43.349721 139656110184192 hlog.py:32] train/00015/eval_train/acc 0.6950
I1203 08:17:44.160147 139656110184192 hlog.py:32] train/00015/eval_val/acc 0.4932
I1203 08:17:44.160860 139656110184192 hlog.py:18] train/00015{17.74s}
I1203 08:17:55.554440 139656110184192 hlog.py:32] train/00016/loss 0.1048
I1203 08:17:59.412055 139656110184192 hlog.py:32] train/00016/eval_train/acc 0.7160
I1203 08:18:00.051264 139656110184192 hlog.py:32] train/00016/eval_val/acc 0.4730
I1203 08:18:00.051865 139656110184192 hlog.py:18] train/00016{15.89s}
I1203 08:18:11.434231 139656110184192 hlog.py:32] train/00017/loss 0.0884
I1203 08:18:15.303942 139656110184192 hlog.py:32] train/00017/eval_train/acc 0.7220
I1203 08:18:15.920208 139656110184192 hlog.py:32] train/00017/eval_val/acc 0.4730
I1203 08:18:15.920684 139656110184192 hlog.py:18] train/00017{15.87s}
I1203 08:18:27.181599 139656110184192 hlog.py:32] train/00018/loss 0.0708
I1203 08:18:30.793125 139656110184192 hlog.py:32] train/00018/eval_train/acc 0.8000
I1203 08:18:31.366631 139656110184192 hlog.py:32] train/00018/eval_val/acc 0.5541
I1203 08:18:31.367147 139656110184192 hlog.py:18] train/00018{15.45s}
I1203 08:18:43.092448 139656110184192 hlog.py:32] train/00019/loss 0.0621
I1203 08:18:46.866081 139656110184192 hlog.py:32] train/00019/eval_train/acc 0.8180
I1203 08:18:47.676627 139656110184192 hlog.py:32] train/00019/eval_val/acc 0.5338
I1203 08:18:47.706516 139656110184192 hlog.py:18] train/00019{16.34s}
I1203 08:18:59.318368 139656110184192 hlog.py:32] train/00020/loss 0.0637
I1203 08:19:02.928154 139656110184192 hlog.py:32] train/00020/eval_train/acc 0.8490
I1203 08:19:03.570228 139656110184192 hlog.py:32] train/00020/eval_val/acc 0.5270
I1203 08:19:03.570775 139656110184192 hlog.py:18] train/00020{15.86s}
I1203 08:19:15.027543 139656110184192 hlog.py:32] train/00021/loss 0.0588
I1203 08:19:19.718275 139656110184192 hlog.py:32] train/00021/eval_train/acc 0.8240
I1203 08:19:20.340097 139656110184192 hlog.py:32] train/00021/eval_val/acc 0.5473
I1203 08:19:20.340580 139656110184192 hlog.py:18] train/00021{16.77s}
I1203 08:19:32.197581 139656110184192 hlog.py:32] train/00022/loss 0.0582
I1203 08:19:37.188113 139656110184192 hlog.py:32] train/00022/eval_train/acc 0.8550
I1203 08:19:37.814409 139656110184192 hlog.py:32] train/00022/eval_val/acc 0.5878
I1203 08:19:37.814919 139656110184192 hlog.py:18] train/00022{17.47s}
I1203 08:19:49.594208 139656110184192 hlog.py:32] train/00023/loss 0.0640
I1203 08:19:53.504922 139656110184192 hlog.py:32] train/00023/eval_train/acc 0.8410
I1203 08:19:54.145411 139656110184192 hlog.py:32] train/00023/eval_val/acc 0.5270
I1203 08:19:54.146061 139656110184192 hlog.py:18] train/00023{16.33s}
I1203 08:20:05.788244 139656110184192 hlog.py:32] train/00024/loss 0.0635
I1203 08:20:11.934285 139656110184192 hlog.py:32] train/00024/eval_train/acc 0.7630
I1203 08:20:12.992980 139656110184192 hlog.py:32] train/00024/eval_val/acc 0.5608
I1203 08:20:12.993466 139656110184192 hlog.py:18] train/00024{18.85s}
I1203 08:20:24.170861 139656110184192 hlog.py:32] train/00025/loss 0.0745
I1203 08:20:27.808511 139656110184192 hlog.py:32] train/00025/eval_train/acc 0.8230
I1203 08:20:28.401232 139656110184192 hlog.py:32] train/00025/eval_val/acc 0.5338
I1203 08:20:28.401777 139656110184192 hlog.py:18] train/00025{15.41s}
I1203 08:20:40.643239 139656110184192 hlog.py:32] train/00026/loss 0.0775
I1203 08:20:44.898569 139656110184192 hlog.py:32] train/00026/eval_train/acc 0.7920
I1203 08:20:45.442350 139656110184192 hlog.py:32] train/00026/eval_val/acc 0.5676
I1203 08:20:45.442962 139656110184192 hlog.py:18] train/00026{17.04s}
I1203 08:20:57.452869 139656110184192 hlog.py:32] train/00027/loss 0.0783
I1203 08:21:01.129786 139656110184192 hlog.py:32] train/00027/eval_train/acc 0.8710
I1203 08:21:01.738688 139656110184192 hlog.py:32] train/00027/eval_val/acc 0.5811
I1203 08:21:01.739214 139656110184192 hlog.py:18] train/00027{16.30s}
I1203 08:21:14.058765 139656110184192 hlog.py:32] train/00028/loss 0.0580
I1203 08:21:17.702366 139656110184192 hlog.py:32] train/00028/eval_train/acc 0.8490
I1203 08:21:18.332351 139656110184192 hlog.py:32] train/00028/eval_val/acc 0.5338
I1203 08:21:18.332890 139656110184192 hlog.py:18] train/00028{16.59s}
I1203 08:21:29.640310 139656110184192 hlog.py:32] train/00029/loss 0.0459
I1203 08:21:33.311521 139656110184192 hlog.py:32] train/00029/eval_train/acc 0.9010
I1203 08:21:33.868537 139656110184192 hlog.py:32] train/00029/eval_val/acc 0.6149
I1203 08:21:33.899601 139656110184192 hlog.py:18] train/00029{15.57s}
I1203 08:21:45.189420 139656110184192 hlog.py:32] train/00030/loss 0.0522
I1203 08:21:49.523249 139656110184192 hlog.py:32] train/00030/eval_train/acc 0.9140
I1203 08:21:50.058922 139656110184192 hlog.py:32] train/00030/eval_val/acc 0.5541
I1203 08:21:50.059418 139656110184192 hlog.py:18] train/00030{16.16s}
I1203 08:22:02.501206 139656110184192 hlog.py:32] train/00031/loss 0.0581
I1203 08:22:06.216857 139656110184192 hlog.py:32] train/00031/eval_train/acc 0.8820
I1203 08:22:06.736811 139656110184192 hlog.py:32] train/00031/eval_val/acc 0.6216
I1203 08:22:06.737274 139656110184192 hlog.py:18] train/00031{16.68s}
I1203 08:22:18.080392 139656110184192 hlog.py:32] train/00032/loss 0.0516
I1203 08:22:21.823736 139656110184192 hlog.py:32] train/00032/eval_train/acc 0.8850
I1203 08:22:22.409878 139656110184192 hlog.py:32] train/00032/eval_val/acc 0.6014
I1203 08:22:22.410395 139656110184192 hlog.py:18] train/00032{15.67s}
I1203 08:22:34.417704 139656110184192 hlog.py:32] train/00033/loss 0.0489
I1203 08:22:38.395026 139656110184192 hlog.py:32] train/00033/eval_train/acc 0.8630
I1203 08:22:38.951431 139656110184192 hlog.py:32] train/00033/eval_val/acc 0.5743
I1203 08:22:38.951977 139656110184192 hlog.py:18] train/00033{16.54s}
I1203 08:22:50.172724 139656110184192 hlog.py:32] train/00034/loss 0.0380
I1203 08:22:54.495441 139656110184192 hlog.py:32] train/00034/eval_train/acc 0.9310
I1203 08:22:54.993910 139656110184192 hlog.py:32] train/00034/eval_val/acc 0.5878
I1203 08:22:54.994393 139656110184192 hlog.py:18] train/00034{16.04s}
I1203 08:23:06.486476 139656110184192 hlog.py:32] train/00035/loss 0.0387
I1203 08:23:11.381282 139656110184192 hlog.py:32] train/00035/eval_train/acc 0.8730
I1203 08:23:11.904448 139656110184192 hlog.py:32] train/00035/eval_val/acc 0.5878
I1203 08:23:11.904944 139656110184192 hlog.py:18] train/00035{16.91s}
I1203 08:23:23.479454 139656110184192 hlog.py:32] train/00036/loss 0.0455
I1203 08:23:27.342367 139656110184192 hlog.py:32] train/00036/eval_train/acc 0.8610
I1203 08:23:27.941288 139656110184192 hlog.py:32] train/00036/eval_val/acc 0.5811
I1203 08:23:27.941968 139656110184192 hlog.py:18] train/00036{16.04s}
I1203 08:23:39.701916 139656110184192 hlog.py:32] train/00037/loss 0.0440
I1203 08:23:43.487004 139656110184192 hlog.py:32] train/00037/eval_train/acc 0.9030
I1203 08:23:44.116248 139656110184192 hlog.py:32] train/00037/eval_val/acc 0.6216
I1203 08:23:44.116767 139656110184192 hlog.py:18] train/00037{16.17s}
I1203 08:23:55.395947 139656110184192 hlog.py:32] train/00038/loss 0.0427
I1203 08:23:59.238672 139656110184192 hlog.py:32] train/00038/eval_train/acc 0.9050
I1203 08:23:59.839876 139656110184192 hlog.py:32] train/00038/eval_val/acc 0.5541
I1203 08:23:59.840349 139656110184192 hlog.py:18] train/00038{15.72s}
I1203 08:24:10.999450 139656110184192 hlog.py:32] train/00039/loss 0.0323
I1203 08:24:14.651442 139656110184192 hlog.py:32] train/00039/eval_train/acc 0.9630
I1203 08:24:15.194586 139656110184192 hlog.py:32] train/00039/eval_val/acc 0.6554
I1203 08:24:15.289839 139656110184192 hlog.py:18] train/00039{15.45s}
I1203 08:24:28.041923 139656110184192 hlog.py:32] train/00040/loss 0.0298
I1203 08:24:32.593328 139656110184192 hlog.py:32] train/00040/eval_train/acc 0.9560
I1203 08:24:33.186820 139656110184192 hlog.py:32] train/00040/eval_val/acc 0.6486
I1203 08:24:33.187332 139656110184192 hlog.py:18] train/00040{17.90s}
I1203 08:24:44.551767 139656110184192 hlog.py:32] train/00041/loss 0.0315
I1203 08:24:49.042712 139656110184192 hlog.py:32] train/00041/eval_train/acc 0.9470
I1203 08:24:49.593048 139656110184192 hlog.py:32] train/00041/eval_val/acc 0.6284
I1203 08:24:49.593528 139656110184192 hlog.py:18] train/00041{16.41s}
I1203 08:25:01.132363 139656110184192 hlog.py:32] train/00042/loss 0.0273
I1203 08:25:05.229922 139656110184192 hlog.py:32] train/00042/eval_train/acc 0.9540
I1203 08:25:05.846010 139656110184192 hlog.py:32] train/00042/eval_val/acc 0.6622
I1203 08:25:05.846495 139656110184192 hlog.py:18] train/00042{16.25s}
I1203 08:25:16.767538 139656110184192 hlog.py:32] train/00043/loss 0.0293
I1203 08:25:21.213814 139656110184192 hlog.py:32] train/00043/eval_train/acc 0.9280
I1203 08:25:21.759793 139656110184192 hlog.py:32] train/00043/eval_val/acc 0.6554
I1203 08:25:21.760285 139656110184192 hlog.py:18] train/00043{15.91s}
I1203 08:25:33.832919 139656110184192 hlog.py:32] train/00044/loss 0.0278
I1203 08:25:37.530168 139656110184192 hlog.py:32] train/00044/eval_train/acc 0.9400
I1203 08:25:38.101523 139656110184192 hlog.py:32] train/00044/eval_val/acc 0.6689
I1203 08:25:38.101988 139656110184192 hlog.py:18] train/00044{16.34s}
I1203 08:25:49.481076 139656110184192 hlog.py:32] train/00045/loss 0.0223
I1203 08:25:53.430436 139656110184192 hlog.py:32] train/00045/eval_train/acc 0.9340
I1203 08:25:53.965723 139656110184192 hlog.py:32] train/00045/eval_val/acc 0.6689
I1203 08:25:53.966202 139656110184192 hlog.py:18] train/00045{15.86s}
I1203 08:26:05.641803 139656110184192 hlog.py:32] train/00046/loss 0.0206
I1203 08:26:09.474889 139656110184192 hlog.py:32] train/00046/eval_train/acc 0.9590
I1203 08:26:10.052986 139656110184192 hlog.py:32] train/00046/eval_val/acc 0.6554
I1203 08:26:10.053478 139656110184192 hlog.py:18] train/00046{16.09s}
I1203 08:26:21.145883 139656110184192 hlog.py:32] train/00047/loss 0.0186
I1203 08:26:24.764040 139656110184192 hlog.py:32] train/00047/eval_train/acc 0.9550
I1203 08:26:25.343613 139656110184192 hlog.py:32] train/00047/eval_val/acc 0.6892
I1203 08:26:25.344095 139656110184192 hlog.py:18] train/00047{15.29s}
I1203 08:26:36.896977 139656110184192 hlog.py:32] train/00048/loss 0.0267
I1203 08:26:40.984033 139656110184192 hlog.py:32] train/00048/eval_train/acc 0.9600
I1203 08:26:41.544167 139656110184192 hlog.py:32] train/00048/eval_val/acc 0.6757
I1203 08:26:41.544671 139656110184192 hlog.py:18] train/00048{16.20s}
I1203 08:26:52.750159 139656110184192 hlog.py:32] train/00049/loss 0.0345
I1203 08:26:56.856003 139656110184192 hlog.py:32] train/00049/eval_train/acc 0.9510
I1203 08:26:57.458219 139656110184192 hlog.py:32] train/00049/eval_val/acc 0.6149
I1203 08:26:57.490036 139656110184192 hlog.py:18] train/00049{15.95s}
I1203 08:27:08.639427 139656110184192 hlog.py:32] train/00050/loss 0.0396
I1203 08:27:12.431612 139656110184192 hlog.py:32] train/00050/eval_train/acc 0.9260
I1203 08:27:12.969591 139656110184192 hlog.py:32] train/00050/eval_val/acc 0.6486
I1203 08:27:12.970094 139656110184192 hlog.py:18] train/00050{15.48s}
I1203 08:27:24.076617 139656110184192 hlog.py:32] train/00051/loss 0.0558
I1203 08:27:27.804779 139656110184192 hlog.py:32] train/00051/eval_train/acc 0.9470
I1203 08:27:28.353036 139656110184192 hlog.py:32] train/00051/eval_val/acc 0.6351
I1203 08:27:28.353612 139656110184192 hlog.py:18] train/00051{15.38s}
I1203 08:27:40.073990 139656110184192 hlog.py:32] train/00052/loss 0.0361
I1203 08:27:44.257925 139656110184192 hlog.py:32] train/00052/eval_train/acc 0.9200
I1203 08:27:44.788855 139656110184192 hlog.py:32] train/00052/eval_val/acc 0.6216
I1203 08:27:44.789355 139656110184192 hlog.py:18] train/00052{16.44s}
I1203 08:27:56.971804 139656110184192 hlog.py:32] train/00053/loss 0.0431
I1203 08:28:00.565965 139656110184192 hlog.py:32] train/00053/eval_train/acc 0.9560
I1203 08:28:01.116880 139656110184192 hlog.py:32] train/00053/eval_val/acc 0.6081
I1203 08:28:01.117437 139656110184192 hlog.py:18] train/00053{16.33s}
I1203 08:28:13.256095 139656110184192 hlog.py:32] train/00054/loss 0.0348
I1203 08:28:16.979348 139656110184192 hlog.py:32] train/00054/eval_train/acc 0.9370
I1203 08:28:17.512862 139656110184192 hlog.py:32] train/00054/eval_val/acc 0.6757
I1203 08:28:17.513550 139656110184192 hlog.py:18] train/00054{16.40s}
I1203 08:28:28.176615 139656110184192 hlog.py:32] train/00055/loss 0.0290
I1203 08:28:31.860001 139656110184192 hlog.py:32] train/00055/eval_train/acc 0.9680
I1203 08:28:32.524237 139656110184192 hlog.py:32] train/00055/eval_val/acc 0.6149
I1203 08:28:32.524710 139656110184192 hlog.py:18] train/00055{15.01s}
I1203 08:28:44.233274 139656110184192 hlog.py:32] train/00056/loss 0.0466
I1203 08:28:48.422314 139656110184192 hlog.py:32] train/00056/eval_train/acc 0.9570
I1203 08:28:48.959503 139656110184192 hlog.py:32] train/00056/eval_val/acc 0.6486
I1203 08:28:48.960042 139656110184192 hlog.py:18] train/00056{16.44s}
I1203 08:29:00.381432 139656110184192 hlog.py:32] train/00057/loss 0.0395
I1203 08:29:05.109380 139656110184192 hlog.py:32] train/00057/eval_train/acc 0.9280
I1203 08:29:05.675620 139656110184192 hlog.py:32] train/00057/eval_val/acc 0.6622
I1203 08:29:05.676102 139656110184192 hlog.py:18] train/00057{16.72s}
I1203 08:29:17.158449 139656110184192 hlog.py:32] train/00058/loss 0.0470
I1203 08:29:21.039441 139656110184192 hlog.py:32] train/00058/eval_train/acc 0.9470
I1203 08:29:21.552636 139656110184192 hlog.py:32] train/00058/eval_val/acc 0.6757
I1203 08:29:21.553199 139656110184192 hlog.py:18] train/00058{15.88s}
I1203 08:29:33.955670 139656110184192 hlog.py:32] train/00059/loss 0.0318
I1203 08:29:38.775308 139656110184192 hlog.py:32] train/00059/eval_train/acc 0.9600
I1203 08:29:39.298193 139656110184192 hlog.py:32] train/00059/eval_val/acc 0.6689
I1203 08:29:39.328348 139656110184192 hlog.py:18] train/00059{17.78s}
I1203 08:29:51.030927 139656110184192 hlog.py:32] train/00060/loss 0.0241
I1203 08:29:54.727095 139656110184192 hlog.py:32] train/00060/eval_train/acc 0.9790
I1203 08:29:55.261080 139656110184192 hlog.py:32] train/00060/eval_val/acc 0.6892
I1203 08:29:55.261635 139656110184192 hlog.py:18] train/00060{15.93s}
I1203 08:30:06.618999 139656110184192 hlog.py:32] train/00061/loss 0.0194
I1203 08:30:10.776854 139656110184192 hlog.py:32] train/00061/eval_train/acc 0.9790
I1203 08:30:11.314572 139656110184192 hlog.py:32] train/00061/eval_val/acc 0.6757
I1203 08:30:11.315069 139656110184192 hlog.py:18] train/00061{16.05s}
I1203 08:30:23.355348 139656110184192 hlog.py:32] train/00062/loss 0.0197
I1203 08:30:27.399047 139656110184192 hlog.py:32] train/00062/eval_train/acc 0.9830
I1203 08:30:27.928211 139656110184192 hlog.py:32] train/00062/eval_val/acc 0.6959
I1203 08:30:27.928711 139656110184192 hlog.py:18] train/00062{16.61s}
I1203 08:30:40.626150 139656110184192 hlog.py:32] train/00063/loss 0.0172
I1203 08:30:44.606277 139656110184192 hlog.py:32] train/00063/eval_train/acc 0.9900
I1203 08:30:45.123457 139656110184192 hlog.py:32] train/00063/eval_val/acc 0.6959
I1203 08:30:45.123937 139656110184192 hlog.py:18] train/00063{17.20s}
I1203 08:30:56.952757 139656110184192 hlog.py:32] train/00064/loss 0.0152
I1203 08:31:00.729058 139656110184192 hlog.py:32] train/00064/eval_train/acc 0.9950
I1203 08:31:01.308691 139656110184192 hlog.py:32] train/00064/eval_val/acc 0.7162
I1203 08:31:01.309164 139656110184192 hlog.py:18] train/00064{16.19s}
I1203 08:31:12.173221 139656110184192 hlog.py:32] train/00065/loss 0.0126
I1203 08:31:15.823917 139656110184192 hlog.py:32] train/00065/eval_train/acc 0.9870
I1203 08:31:16.353298 139656110184192 hlog.py:32] train/00065/eval_val/acc 0.6959
I1203 08:31:16.353780 139656110184192 hlog.py:18] train/00065{15.04s}
I1203 08:31:28.132046 139656110184192 hlog.py:32] train/00066/loss 0.0130
I1203 08:31:31.907257 139656110184192 hlog.py:32] train/00066/eval_train/acc 0.9780
I1203 08:31:32.453316 139656110184192 hlog.py:32] train/00066/eval_val/acc 0.6959
I1203 08:31:32.453894 139656110184192 hlog.py:18] train/00066{16.10s}
I1203 08:31:43.993476 139656110184192 hlog.py:32] train/00067/loss 0.0095
I1203 08:31:48.405997 139656110184192 hlog.py:32] train/00067/eval_train/acc 0.9890
I1203 08:31:48.960882 139656110184192 hlog.py:32] train/00067/eval_val/acc 0.6554
I1203 08:31:48.961564 139656110184192 hlog.py:18] train/00067{16.51s}
I1203 08:31:59.698501 139656110184192 hlog.py:32] train/00068/loss 0.0101
I1203 08:32:03.275905 139656110184192 hlog.py:32] train/00068/eval_train/acc 0.9860
I1203 08:32:03.814184 139656110184192 hlog.py:32] train/00068/eval_val/acc 0.6824
I1203 08:32:03.814780 139656110184192 hlog.py:18] train/00068{14.85s}
I1203 08:32:16.071638 139656110184192 hlog.py:32] train/00069/loss 0.0117
I1203 08:32:19.890535 139656110184192 hlog.py:32] train/00069/eval_train/acc 0.9870
I1203 08:32:20.437641 139656110184192 hlog.py:32] train/00069/eval_val/acc 0.6757
I1203 08:32:20.469504 139656110184192 hlog.py:18] train/00069{16.65s}
I1203 08:32:32.997650 139656110184192 hlog.py:32] train/00070/loss 0.0095
I1203 08:32:36.996339 139656110184192 hlog.py:32] train/00070/eval_train/acc 0.9800
I1203 08:32:37.526934 139656110184192 hlog.py:32] train/00070/eval_val/acc 0.6959
I1203 08:32:37.527473 139656110184192 hlog.py:18] train/00070{17.06s}
I1203 08:32:49.458960 139656110184192 hlog.py:32] train/00071/loss 0.0107
I1203 08:32:53.281847 139656110184192 hlog.py:32] train/00071/eval_train/acc 0.9940
I1203 08:32:53.842678 139656110184192 hlog.py:32] train/00071/eval_val/acc 0.6689
I1203 08:32:53.843204 139656110184192 hlog.py:18] train/00071{16.32s}
I1203 08:33:07.158769 139656110184192 hlog.py:32] train/00072/loss 0.0116
I1203 08:33:11.242225 139656110184192 hlog.py:32] train/00072/eval_train/acc 0.9880
I1203 08:33:11.763479 139656110184192 hlog.py:32] train/00072/eval_val/acc 0.7297
I1203 08:33:11.763993 139656110184192 hlog.py:18] train/00072{17.92s}
I1203 08:33:22.934756 139656110184192 hlog.py:32] train/00073/loss 0.0091
I1203 08:33:27.158252 139656110184192 hlog.py:32] train/00073/eval_train/acc 0.9960
I1203 08:33:27.672448 139656110184192 hlog.py:32] train/00073/eval_val/acc 0.6959
I1203 08:33:27.672937 139656110184192 hlog.py:18] train/00073{15.91s}
I1203 08:33:40.357332 139656110184192 hlog.py:32] train/00074/loss 0.0099
I1203 08:33:44.007836 139656110184192 hlog.py:32] train/00074/eval_train/acc 0.9910
I1203 08:33:44.525835 139656110184192 hlog.py:32] train/00074/eval_val/acc 0.6892
I1203 08:33:44.526302 139656110184192 hlog.py:18] train/00074{16.85s}
I1203 08:33:55.741730 139656110184192 hlog.py:32] train/00075/loss 0.0093
I1203 08:33:59.476520 139656110184192 hlog.py:32] train/00075/eval_train/acc 0.9930
I1203 08:34:00.024456 139656110184192 hlog.py:32] train/00075/eval_val/acc 0.6824
I1203 08:34:00.024944 139656110184192 hlog.py:18] train/00075{15.50s}
I1203 08:34:12.293484 139656110184192 hlog.py:32] train/00076/loss 0.0099
I1203 08:34:16.281398 139656110184192 hlog.py:32] train/00076/eval_train/acc 0.9940
I1203 08:34:16.828957 139656110184192 hlog.py:32] train/00076/eval_val/acc 0.6892
I1203 08:34:16.829438 139656110184192 hlog.py:18] train/00076{16.80s}
I1203 08:34:28.265603 139656110184192 hlog.py:32] train/00077/loss 0.0082
I1203 08:34:32.295755 139656110184192 hlog.py:32] train/00077/eval_train/acc 0.9890
I1203 08:34:32.833216 139656110184192 hlog.py:32] train/00077/eval_val/acc 0.7230
I1203 08:34:32.833676 139656110184192 hlog.py:18] train/00077{16.00s}
I1203 08:34:44.748708 139656110184192 hlog.py:32] train/00078/loss 0.0074
I1203 08:34:48.442632 139656110184192 hlog.py:32] train/00078/eval_train/acc 0.9940
I1203 08:34:49.028939 139656110184192 hlog.py:32] train/00078/eval_val/acc 0.6824
I1203 08:34:49.029588 139656110184192 hlog.py:18] train/00078{16.20s}
I1203 08:35:00.868152 139656110184192 hlog.py:32] train/00079/loss 0.0091
I1203 08:35:04.608122 139656110184192 hlog.py:32] train/00079/eval_train/acc 0.9890
I1203 08:35:05.164244 139656110184192 hlog.py:32] train/00079/eval_val/acc 0.6824
I1203 08:35:05.194776 139656110184192 hlog.py:18] train/00079{16.16s}
I1203 08:35:16.748080 139656110184192 hlog.py:32] train/00080/loss 0.0073
I1203 08:35:20.539891 139656110184192 hlog.py:32] train/00080/eval_train/acc 0.9960
I1203 08:35:21.069071 139656110184192 hlog.py:32] train/00080/eval_val/acc 0.6959
I1203 08:35:21.069565 139656110184192 hlog.py:18] train/00080{15.87s}
I1203 08:35:33.299925 139656110184192 hlog.py:32] train/00081/loss 0.0073
I1203 08:35:37.137829 139656110184192 hlog.py:32] train/00081/eval_train/acc 0.9950
I1203 08:35:37.668075 139656110184192 hlog.py:32] train/00081/eval_val/acc 0.6689
I1203 08:35:37.668634 139656110184192 hlog.py:18] train/00081{16.60s}
I1203 08:35:49.448327 139656110184192 hlog.py:32] train/00082/loss 0.0065
I1203 08:35:53.300855 139656110184192 hlog.py:32] train/00082/eval_train/acc 0.9920
I1203 08:35:53.847907 139656110184192 hlog.py:32] train/00082/eval_val/acc 0.7027
I1203 08:35:53.848331 139656110184192 hlog.py:18] train/00082{16.18s}
I1203 08:36:05.552526 139656110184192 hlog.py:32] train/00083/loss 0.0063
I1203 08:36:09.174919 139656110184192 hlog.py:32] train/00083/eval_train/acc 0.9950
I1203 08:36:09.723751 139656110184192 hlog.py:32] train/00083/eval_val/acc 0.6959
I1203 08:36:09.724328 139656110184192 hlog.py:18] train/00083{15.88s}
I1203 08:36:21.541582 139656110184192 hlog.py:32] train/00084/loss 0.0053
I1203 08:36:25.368244 139656110184192 hlog.py:32] train/00084/eval_train/acc 0.9960
I1203 08:36:25.959320 139656110184192 hlog.py:32] train/00084/eval_val/acc 0.6757
I1203 08:36:25.962218 139656110184192 hlog.py:18] train/00084{16.24s}
I1203 08:36:37.831098 139656110184192 hlog.py:32] train/00085/loss 0.0056
I1203 08:36:41.725731 139656110184192 hlog.py:32] train/00085/eval_train/acc 0.9990
I1203 08:36:42.255719 139656110184192 hlog.py:32] train/00085/eval_val/acc 0.6622
I1203 08:36:42.256432 139656110184192 hlog.py:18] train/00085{16.29s}
I1203 08:36:53.716619 139656110184192 hlog.py:32] train/00086/loss 0.0055
I1203 08:36:57.460513 139656110184192 hlog.py:32] train/00086/eval_train/acc 0.9990
I1203 08:36:58.036747 139656110184192 hlog.py:32] train/00086/eval_val/acc 0.6824
I1203 08:36:58.037270 139656110184192 hlog.py:18] train/00086{15.78s}
I1203 08:37:10.663459 139656110184192 hlog.py:32] train/00087/loss 0.0056
I1203 08:37:14.419985 139656110184192 hlog.py:32] train/00087/eval_train/acc 0.9990
I1203 08:37:14.974922 139656110184192 hlog.py:32] train/00087/eval_val/acc 0.6892
I1203 08:37:14.975604 139656110184192 hlog.py:18] train/00087{16.94s}
I1203 08:37:26.578365 139656110184192 hlog.py:32] train/00088/loss 0.0054
I1203 08:37:30.564990 139656110184192 hlog.py:32] train/00088/eval_train/acc 0.9990
I1203 08:37:31.112617 139656110184192 hlog.py:32] train/00088/eval_val/acc 0.7027
I1203 08:37:31.113291 139656110184192 hlog.py:18] train/00088{16.14s}
I1203 08:37:43.437528 139656110184192 hlog.py:32] train/00089/loss 0.0058
I1203 08:37:47.249151 139656110184192 hlog.py:32] train/00089/eval_train/acc 0.9940
I1203 08:37:47.798477 139656110184192 hlog.py:32] train/00089/eval_val/acc 0.6892
I1203 08:37:47.912222 139656110184192 hlog.py:18] train/00089{16.80s}
I1203 08:37:59.059928 139656110184192 hlog.py:32] train/00090/loss 0.0049
I1203 08:38:02.692413 139656110184192 hlog.py:32] train/00090/eval_train/acc 0.9980
I1203 08:38:03.236897 139656110184192 hlog.py:32] train/00090/eval_val/acc 0.7027
I1203 08:38:03.237386 139656110184192 hlog.py:18] train/00090{15.32s}
I1203 08:38:15.169133 139656110184192 hlog.py:32] train/00091/loss 0.0050
I1203 08:38:18.837492 139656110184192 hlog.py:32] train/00091/eval_train/acc 0.9970
I1203 08:38:19.373306 139656110184192 hlog.py:32] train/00091/eval_val/acc 0.7027
I1203 08:38:19.373849 139656110184192 hlog.py:18] train/00091{16.14s}
I1203 08:38:30.144415 139656110184192 hlog.py:32] train/00092/loss 0.0046
I1203 08:38:34.006774 139656110184192 hlog.py:32] train/00092/eval_train/acc 1.0000
I1203 08:38:34.521361 139656110184192 hlog.py:32] train/00092/eval_val/acc 0.6824
I1203 08:38:34.521849 139656110184192 hlog.py:18] train/00092{15.15s}
I1203 08:38:46.196710 139656110184192 hlog.py:32] train/00093/loss 0.0046
I1203 08:38:49.948695 139656110184192 hlog.py:32] train/00093/eval_train/acc 1.0000
I1203 08:38:50.506351 139656110184192 hlog.py:32] train/00093/eval_val/acc 0.6689
I1203 08:38:50.506834 139656110184192 hlog.py:18] train/00093{15.98s}
I1203 08:39:02.563707 139656110184192 hlog.py:32] train/00094/loss 0.0048
I1203 08:39:06.440354 139656110184192 hlog.py:32] train/00094/eval_train/acc 0.9970
I1203 08:39:06.999976 139656110184192 hlog.py:32] train/00094/eval_val/acc 0.6622
I1203 08:39:07.000513 139656110184192 hlog.py:18] train/00094{16.49s}
I1203 08:39:18.773553 139656110184192 hlog.py:32] train/00095/loss 0.0041
I1203 08:39:22.591287 139656110184192 hlog.py:32] train/00095/eval_train/acc 0.9980
I1203 08:39:23.151044 139656110184192 hlog.py:32] train/00095/eval_val/acc 0.6757
I1203 08:39:23.151557 139656110184192 hlog.py:18] train/00095{16.15s}
I1203 08:39:34.622205 139656110184192 hlog.py:32] train/00096/loss 0.0046
I1203 08:39:38.463641 139656110184192 hlog.py:32] train/00096/eval_train/acc 0.9980
I1203 08:39:39.039718 139656110184192 hlog.py:32] train/00096/eval_val/acc 0.6892
I1203 08:39:39.040247 139656110184192 hlog.py:18] train/00096{15.89s}
I1203 08:39:50.594298 139656110184192 hlog.py:32] train/00097/loss 0.0044
I1203 08:39:54.802419 139656110184192 hlog.py:32] train/00097/eval_train/acc 0.9970
I1203 08:39:55.387543 139656110184192 hlog.py:32] train/00097/eval_val/acc 0.6757
I1203 08:39:55.388070 139656110184192 hlog.py:18] train/00097{16.35s}
I1203 08:40:07.223963 139656110184192 hlog.py:32] train/00098/loss 0.0044
I1203 08:40:10.938778 139656110184192 hlog.py:32] train/00098/eval_train/acc 0.9980
I1203 08:40:11.498265 139656110184192 hlog.py:32] train/00098/eval_val/acc 0.6622
I1203 08:40:11.498747 139656110184192 hlog.py:18] train/00098{16.11s}
I1203 08:40:22.930355 139656110184192 hlog.py:32] train/00099/loss 0.0036
I1203 08:40:26.657286 139656110184192 hlog.py:32] train/00099/eval_train/acc 0.9980
I1203 08:40:27.242322 139656110184192 hlog.py:32] train/00099/eval_val/acc 0.6622
I1203 08:40:27.273787 139656110184192 hlog.py:18] train/00099{15.77s}
I1203 08:40:38.819428 139656110184192 hlog.py:32] train/00100/loss 0.0035
I1203 08:40:42.532057 139656110184192 hlog.py:32] train/00100/eval_train/acc 0.9970
I1203 08:40:43.093405 139656110184192 hlog.py:32] train/00100/eval_val/acc 0.6689
I1203 08:40:43.093838 139656110184192 hlog.py:18] train/00100{15.82s}
I1203 08:40:54.547081 139656110184192 hlog.py:32] train/00101/loss 0.0037
I1203 08:40:58.607040 139656110184192 hlog.py:32] train/00101/eval_train/acc 0.9990
I1203 08:40:59.182206 139656110184192 hlog.py:32] train/00101/eval_val/acc 0.6757
I1203 08:40:59.182690 139656110184192 hlog.py:18] train/00101{16.09s}
I1203 08:41:10.015657 139656110184192 hlog.py:32] train/00102/loss 0.0036
I1203 08:41:13.864767 139656110184192 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 08:41:14.409708 139656110184192 hlog.py:32] train/00102/eval_val/acc 0.6689
I1203 08:41:14.410208 139656110184192 hlog.py:18] train/00102{15.23s}
I1203 08:41:26.510852 139656110184192 hlog.py:32] train/00103/loss 0.0039
I1203 08:41:30.510779 139656110184192 hlog.py:32] train/00103/eval_train/acc 1.0000
I1203 08:41:31.039623 139656110184192 hlog.py:32] train/00103/eval_val/acc 0.6757
I1203 08:41:31.040107 139656110184192 hlog.py:18] train/00103{16.63s}
I1203 08:41:43.175351 139656110184192 hlog.py:32] train/00104/loss 0.0036
I1203 08:41:46.768885 139656110184192 hlog.py:32] train/00104/eval_train/acc 0.9980
I1203 08:41:47.345136 139656110184192 hlog.py:32] train/00104/eval_val/acc 0.6689
I1203 08:41:47.345654 139656110184192 hlog.py:18] train/00104{16.31s}
I1203 08:41:58.859822 139656110184192 hlog.py:32] train/00105/loss 0.0033
I1203 08:42:03.122917 139656110184192 hlog.py:32] train/00105/eval_train/acc 0.9940
I1203 08:42:03.658851 139656110184192 hlog.py:32] train/00105/eval_val/acc 0.6689
I1203 08:42:03.659415 139656110184192 hlog.py:18] train/00105{16.31s}
I1203 08:42:14.802983 139656110184192 hlog.py:32] train/00106/loss 0.0041
I1203 08:42:18.508345 139656110184192 hlog.py:32] train/00106/eval_train/acc 0.9980
I1203 08:42:19.068187 139656110184192 hlog.py:32] train/00106/eval_val/acc 0.6959
I1203 08:42:19.068694 139656110184192 hlog.py:18] train/00106{15.41s}
I1203 08:42:29.920282 139656110184192 hlog.py:32] train/00107/loss 0.0033
I1203 08:42:33.761156 139656110184192 hlog.py:32] train/00107/eval_train/acc 0.9990
I1203 08:42:34.299924 139656110184192 hlog.py:32] train/00107/eval_val/acc 0.7027
I1203 08:42:34.300505 139656110184192 hlog.py:18] train/00107{15.23s}
I1203 08:42:46.084137 139656110184192 hlog.py:32] train/00108/loss 0.0035
I1203 08:42:50.313341 139656110184192 hlog.py:32] train/00108/eval_train/acc 0.9970
I1203 08:42:50.842036 139656110184192 hlog.py:32] train/00108/eval_val/acc 0.6892
I1203 08:42:50.842510 139656110184192 hlog.py:18] train/00108{16.54s}
I1203 08:43:02.578843 139656110184192 hlog.py:32] train/00109/loss 0.0036
I1203 08:43:06.461551 139656110184192 hlog.py:32] train/00109/eval_train/acc 0.9990
I1203 08:43:06.990808 139656110184192 hlog.py:32] train/00109/eval_val/acc 0.6757
I1203 08:43:07.022452 139656110184192 hlog.py:18] train/00109{16.18s}
I1203 08:43:18.246961 139656110184192 hlog.py:32] train/00110/loss 0.0029
I1203 08:43:21.900218 139656110184192 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 08:43:22.429457 139656110184192 hlog.py:32] train/00110/eval_val/acc 0.6824
I1203 08:43:22.430013 139656110184192 hlog.py:18] train/00110{15.41s}
I1203 08:43:34.258969 139656110184192 hlog.py:32] train/00111/loss 0.0038
I1203 08:43:38.029026 139656110184192 hlog.py:32] train/00111/eval_train/acc 0.9990
I1203 08:43:38.613718 139656110184192 hlog.py:32] train/00111/eval_val/acc 0.6892
I1203 08:43:38.614229 139656110184192 hlog.py:18] train/00111{16.18s}
I1203 08:43:50.923326 139656110184192 hlog.py:32] train/00112/loss 0.0037
I1203 08:43:54.738395 139656110184192 hlog.py:32] train/00112/eval_train/acc 0.9990
I1203 08:43:55.290082 139656110184192 hlog.py:32] train/00112/eval_val/acc 0.6757
I1203 08:43:55.290604 139656110184192 hlog.py:18] train/00112{16.68s}
I1203 08:44:06.572898 139656110184192 hlog.py:32] train/00113/loss 0.0032
I1203 08:44:10.497287 139656110184192 hlog.py:32] train/00113/eval_train/acc 0.9970
I1203 08:44:11.057739 139656110184192 hlog.py:32] train/00113/eval_val/acc 0.6824
I1203 08:44:11.058338 139656110184192 hlog.py:18] train/00113{15.77s}
I1203 08:44:21.887687 139656110184192 hlog.py:32] train/00114/loss 0.0045
I1203 08:44:25.690709 139656110184192 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 08:44:26.267374 139656110184192 hlog.py:32] train/00114/eval_val/acc 0.6824
I1203 08:44:26.267879 139656110184192 hlog.py:18] train/00114{15.21s}
I1203 08:44:38.716171 139656110184192 hlog.py:32] train/00115/loss 0.0034
I1203 08:44:42.443295 139656110184192 hlog.py:32] train/00115/eval_train/acc 0.9970
I1203 08:44:42.994109 139656110184192 hlog.py:32] train/00115/eval_val/acc 0.6689
I1203 08:44:42.994602 139656110184192 hlog.py:18] train/00115{16.73s}
I1203 08:44:54.904015 139656110184192 hlog.py:32] train/00116/loss 0.0033
I1203 08:44:58.657824 139656110184192 hlog.py:32] train/00116/eval_train/acc 0.9950
I1203 08:44:59.231122 139656110184192 hlog.py:32] train/00116/eval_val/acc 0.6689
I1203 08:44:59.231706 139656110184192 hlog.py:18] train/00116{16.24s}
I1203 08:45:10.888705 139656110184192 hlog.py:32] train/00117/loss 0.0034
I1203 08:45:14.567878 139656110184192 hlog.py:32] train/00117/eval_train/acc 0.9960
I1203 08:45:15.132235 139656110184192 hlog.py:32] train/00117/eval_val/acc 0.6824
I1203 08:45:15.132712 139656110184192 hlog.py:18] train/00117{15.90s}
I1203 08:45:27.290326 139656110184192 hlog.py:32] train/00118/loss 0.0040
I1203 08:45:31.037080 139656110184192 hlog.py:32] train/00118/eval_train/acc 0.9990
I1203 08:45:31.610532 139656110184192 hlog.py:32] train/00118/eval_val/acc 0.6892
I1203 08:45:31.611097 139656110184192 hlog.py:18] train/00118{16.48s}
I1203 08:45:43.492522 139656110184192 hlog.py:32] train/00119/loss 0.0034
I1203 08:45:47.076197 139656110184192 hlog.py:32] train/00119/eval_train/acc 0.9960
I1203 08:45:47.629816 139656110184192 hlog.py:32] train/00119/eval_val/acc 0.6824
I1203 08:45:47.661270 139656110184192 hlog.py:18] train/00119{16.05s}
I1203 08:45:59.410312 139656110184192 hlog.py:32] train/00120/loss 0.0033
I1203 08:46:03.290639 139656110184192 hlog.py:32] train/00120/eval_train/acc 0.9950
I1203 08:46:03.857156 139656110184192 hlog.py:32] train/00120/eval_val/acc 0.6824
I1203 08:46:03.857708 139656110184192 hlog.py:18] train/00120{16.20s}
I1203 08:46:14.659095 139656110184192 hlog.py:32] train/00121/loss 0.0031
I1203 08:46:18.707721 139656110184192 hlog.py:32] train/00121/eval_train/acc 0.9970
I1203 08:46:19.277026 139656110184192 hlog.py:32] train/00121/eval_val/acc 0.6824
I1203 08:46:19.277563 139656110184192 hlog.py:18] train/00121{15.42s}
I1203 08:46:31.697492 139656110184192 hlog.py:32] train/00122/loss 0.0035
I1203 08:46:35.706316 139656110184192 hlog.py:32] train/00122/eval_train/acc 0.9990
I1203 08:46:36.270526 139656110184192 hlog.py:32] train/00122/eval_val/acc 0.6892
I1203 08:46:36.271036 139656110184192 hlog.py:18] train/00122{16.99s}
I1203 08:46:47.964341 139656110184192 hlog.py:32] train/00123/loss 0.0032
I1203 08:46:51.671574 139656110184192 hlog.py:32] train/00123/eval_train/acc 0.9990
I1203 08:46:52.241376 139656110184192 hlog.py:32] train/00123/eval_val/acc 0.6824
I1203 08:46:52.241848 139656110184192 hlog.py:18] train/00123{15.97s}
I1203 08:47:04.037398 139656110184192 hlog.py:32] train/00124/loss 0.0033
I1203 08:47:08.207780 139656110184192 hlog.py:32] train/00124/eval_train/acc 0.9990
I1203 08:47:08.757552 139656110184192 hlog.py:32] train/00124/eval_val/acc 0.6892
I1203 08:47:08.758056 139656110184192 hlog.py:18] train/00124{16.52s}
I1203 08:47:19.790457 139656110184192 hlog.py:32] train/00125/loss 0.0028
I1203 08:47:23.549700 139656110184192 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 08:47:24.136950 139656110184192 hlog.py:32] train/00125/eval_val/acc 0.6824
I1203 08:47:24.137560 139656110184192 hlog.py:18] train/00125{15.38s}
I1203 08:47:36.304704 139656110184192 hlog.py:32] train/00126/loss 0.0035
I1203 08:47:40.352888 139656110184192 hlog.py:32] train/00126/eval_train/acc 0.9970
I1203 08:47:40.906953 139656110184192 hlog.py:32] train/00126/eval_val/acc 0.6959
I1203 08:47:40.907453 139656110184192 hlog.py:18] train/00126{16.77s}
I1203 08:47:52.123085 139656110184192 hlog.py:32] train/00127/loss 0.0030
I1203 08:47:55.783512 139656110184192 hlog.py:32] train/00127/eval_train/acc 0.9990
I1203 08:47:56.331896 139656110184192 hlog.py:32] train/00127/eval_val/acc 0.6892
I1203 08:47:56.332413 139656110184192 hlog.py:18] train/00127{15.42s}
I1203 08:48:07.657470 139656110184192 hlog.py:32] train/00128/loss 0.0029
I1203 08:48:11.499395 139656110184192 hlog.py:32] train/00128/eval_train/acc 0.9980
I1203 08:48:12.050409 139656110184192 hlog.py:32] train/00128/eval_val/acc 0.6959
I1203 08:48:12.050836 139656110184192 hlog.py:18] train/00128{15.72s}
I1203 08:48:23.454514 139656110184192 hlog.py:32] train/00129/loss 0.0028
I1203 08:48:27.206642 139656110184192 hlog.py:32] train/00129/eval_train/acc 0.9980
I1203 08:48:27.768633 139656110184192 hlog.py:32] train/00129/eval_val/acc 0.6959
I1203 08:48:27.801114 139656110184192 hlog.py:18] train/00129{15.75s}
I1203 08:48:39.031985 139656110184192 hlog.py:32] train/00130/loss 0.0031
I1203 08:48:42.783886 139656110184192 hlog.py:32] train/00130/eval_train/acc 0.9990
I1203 08:48:43.334799 139656110184192 hlog.py:32] train/00130/eval_val/acc 0.6959
I1203 08:48:43.335294 139656110184192 hlog.py:18] train/00130{15.53s}
I1203 08:48:55.029214 139656110184192 hlog.py:32] train/00131/loss 0.0029
I1203 08:48:58.866575 139656110184192 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 08:48:59.427043 139656110184192 hlog.py:32] train/00131/eval_val/acc 0.6959
I1203 08:48:59.427488 139656110184192 hlog.py:18] train/00131{16.09s}
I1203 08:49:10.493099 139656110184192 hlog.py:32] train/00132/loss 0.0031
I1203 08:49:14.173986 139656110184192 hlog.py:32] train/00132/eval_train/acc 0.9960
I1203 08:49:14.721671 139656110184192 hlog.py:32] train/00132/eval_val/acc 0.6959
I1203 08:49:14.722092 139656110184192 hlog.py:18] train/00132{15.29s}
I1203 08:49:27.186868 139656110184192 hlog.py:32] train/00133/loss 0.0033
I1203 08:49:31.090773 139656110184192 hlog.py:32] train/00133/eval_train/acc 0.9990
I1203 08:49:31.670637 139656110184192 hlog.py:32] train/00133/eval_val/acc 0.6959
I1203 08:49:31.671302 139656110184192 hlog.py:18] train/00133{16.95s}
I1203 08:49:43.210012 139656110184192 hlog.py:32] train/00134/loss 0.0031
I1203 08:49:46.914957 139656110184192 hlog.py:32] train/00134/eval_train/acc 0.9990
I1203 08:49:47.461852 139656110184192 hlog.py:32] train/00134/eval_val/acc 0.6959
I1203 08:49:47.462332 139656110184192 hlog.py:18] train/00134{15.79s}
I1203 08:49:58.426294 139656110184192 hlog.py:32] train/00135/loss 0.0032
I1203 08:50:02.145746 139656110184192 hlog.py:32] train/00135/eval_train/acc 0.9990
I1203 08:50:02.743751 139656110184192 hlog.py:32] train/00135/eval_val/acc 0.6824
I1203 08:50:02.744221 139656110184192 hlog.py:18] train/00135{15.28s}
I1203 08:50:14.579555 139656110184192 hlog.py:32] train/00136/loss 0.0046
I1203 08:50:18.157551 139656110184192 hlog.py:32] train/00136/eval_train/acc 0.9970
I1203 08:50:18.697857 139656110184192 hlog.py:32] train/00136/eval_val/acc 0.6824
I1203 08:50:18.698358 139656110184192 hlog.py:18] train/00136{15.95s}
I1203 08:50:29.883722 139656110184192 hlog.py:32] train/00137/loss 0.0029
I1203 08:50:34.084346 139656110184192 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 08:50:34.661694 139656110184192 hlog.py:32] train/00137/eval_val/acc 0.6892
I1203 08:50:34.662358 139656110184192 hlog.py:18] train/00137{15.96s}
I1203 08:50:45.921795 139656110184192 hlog.py:32] train/00138/loss 0.0032
I1203 08:50:49.908404 139656110184192 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 08:50:50.452008 139656110184192 hlog.py:32] train/00138/eval_val/acc 0.6824
I1203 08:50:50.452619 139656110184192 hlog.py:18] train/00138{15.79s}
I1203 08:51:01.752902 139656110184192 hlog.py:32] train/00139/loss 0.0030
I1203 08:51:05.504760 139656110184192 hlog.py:32] train/00139/eval_train/acc 0.9970
I1203 08:51:06.046234 139656110184192 hlog.py:32] train/00139/eval_val/acc 0.6824
I1203 08:51:06.078380 139656110184192 hlog.py:18] train/00139{15.63s}
I1203 08:51:17.233266 139656110184192 hlog.py:32] train/00140/loss 0.0026
I1203 08:51:21.010427 139656110184192 hlog.py:32] train/00140/eval_train/acc 0.9970
I1203 08:51:21.534899 139656110184192 hlog.py:32] train/00140/eval_val/acc 0.6824
I1203 08:51:21.535452 139656110184192 hlog.py:18] train/00140{15.46s}
I1203 08:51:33.725092 139656110184192 hlog.py:32] train/00141/loss 0.0041
I1203 08:51:37.393485 139656110184192 hlog.py:32] train/00141/eval_train/acc 0.9990
I1203 08:51:37.971861 139656110184192 hlog.py:32] train/00141/eval_val/acc 0.6824
I1203 08:51:37.972379 139656110184192 hlog.py:18] train/00141{16.44s}
I1203 08:51:48.905882 139656110184192 hlog.py:32] train/00142/loss 0.0034
I1203 08:51:52.741581 139656110184192 hlog.py:32] train/00142/eval_train/acc 0.9990
I1203 08:51:53.291623 139656110184192 hlog.py:32] train/00142/eval_val/acc 0.6824
I1203 08:51:53.292181 139656110184192 hlog.py:18] train/00142{15.32s}
I1203 08:52:05.008386 139656110184192 hlog.py:32] train/00143/loss 0.0026
I1203 08:52:09.119592 139656110184192 hlog.py:32] train/00143/eval_train/acc 0.9980
I1203 08:52:09.652051 139656110184192 hlog.py:32] train/00143/eval_val/acc 0.6824
I1203 08:52:09.652547 139656110184192 hlog.py:18] train/00143{16.36s}
I1203 08:52:21.132325 139656110184192 hlog.py:32] train/00144/loss 0.0031
I1203 08:52:25.129886 139656110184192 hlog.py:32] train/00144/eval_train/acc 0.9950
I1203 08:52:25.657776 139656110184192 hlog.py:32] train/00144/eval_val/acc 0.6824
I1203 08:52:25.658307 139656110184192 hlog.py:18] train/00144{16.01s}
I1203 08:52:38.423352 139656110184192 hlog.py:32] train/00145/loss 0.0028
I1203 08:52:42.218599 139656110184192 hlog.py:32] train/00145/eval_train/acc 0.9980
I1203 08:52:42.765920 139656110184192 hlog.py:32] train/00145/eval_val/acc 0.6824
I1203 08:52:42.766427 139656110184192 hlog.py:18] train/00145{17.11s}
I1203 08:52:54.243536 139656110184192 hlog.py:32] train/00146/loss 0.0027
I1203 08:52:58.125939 139656110184192 hlog.py:32] train/00146/eval_train/acc 0.9980
I1203 08:52:58.649919 139656110184192 hlog.py:32] train/00146/eval_val/acc 0.6824
I1203 08:52:58.650394 139656110184192 hlog.py:18] train/00146{15.88s}
I1203 08:53:10.108072 139656110184192 hlog.py:32] train/00147/loss 0.0033
I1203 08:53:14.367911 139656110184192 hlog.py:32] train/00147/eval_train/acc 0.9980
I1203 08:53:14.893125 139656110184192 hlog.py:32] train/00147/eval_val/acc 0.6824
I1203 08:53:14.893607 139656110184192 hlog.py:18] train/00147{16.24s}
I1203 08:53:27.022123 139656110184192 hlog.py:32] train/00148/loss 0.0038
I1203 08:53:30.826596 139656110184192 hlog.py:32] train/00148/eval_train/acc 0.9990
I1203 08:53:31.371489 139656110184192 hlog.py:32] train/00148/eval_val/acc 0.6892
I1203 08:53:31.372003 139656110184192 hlog.py:18] train/00148{16.48s}
I1203 08:53:44.361064 139656110184192 hlog.py:32] train/00149/loss 0.0032
I1203 08:53:48.135200 139656110184192 hlog.py:32] train/00149/eval_train/acc 0.9980
I1203 08:53:48.331473 139656110184192 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 08:53:48.331693 139656110184192 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.331793 139656110184192 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.331875 139656110184192 hlog.py:32] train/00149/eval_val/0/corr True
I1203 08:53:48.331948 139656110184192 hlog.py:32] train/00149/eval_val/0 
I1203 08:53:48.332028 139656110184192 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 08:53:48.332122 139656110184192 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 08:53:48.332216 139656110184192 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.332303 139656110184192 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.332385 139656110184192 hlog.py:32] train/00149/eval_val/1/corr False
I1203 08:53:48.332457 139656110184192 hlog.py:32] train/00149/eval_val/1 
I1203 08:53:48.332526 139656110184192 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 08:53:48.332613 139656110184192 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 08:53:48.332703 139656110184192 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 08:53:48.332788 139656110184192 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 08:53:48.332862 139656110184192 hlog.py:32] train/00149/eval_val/2/corr False
I1203 08:53:48.332933 139656110184192 hlog.py:32] train/00149/eval_val/2 
I1203 08:53:48.333002 139656110184192 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 08:53:48.333087 139656110184192 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 08:53:48.333178 139656110184192 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.333263 139656110184192 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.333339 139656110184192 hlog.py:32] train/00149/eval_val/3/corr False
I1203 08:53:48.333408 139656110184192 hlog.py:32] train/00149/eval_val/3 
I1203 08:53:48.333477 139656110184192 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 08:53:48.333563 139656110184192 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 08:53:48.333653 139656110184192 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1203 08:53:48.333739 139656110184192 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 08:53:48.333814 139656110184192 hlog.py:32] train/00149/eval_val/4/corr False
I1203 08:53:48.333884 139656110184192 hlog.py:32] train/00149/eval_val/4 
I1203 08:53:48.333952 139656110184192 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 08:53:48.334036 139656110184192 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 08:53:48.334126 139656110184192 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.334211 139656110184192 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.334286 139656110184192 hlog.py:32] train/00149/eval_val/5/corr False
I1203 08:53:48.334356 139656110184192 hlog.py:32] train/00149/eval_val/5 
I1203 08:53:48.334424 139656110184192 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 08:53:48.334509 139656110184192 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 08:53:48.334615 139656110184192 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.334701 139656110184192 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.334776 139656110184192 hlog.py:32] train/00149/eval_val/6/corr False
I1203 08:53:48.334846 139656110184192 hlog.py:32] train/00149/eval_val/6 
I1203 08:53:48.334915 139656110184192 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 08:53:48.334999 139656110184192 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 08:53:48.335089 139656110184192 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.335174 139656110184192 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.335249 139656110184192 hlog.py:32] train/00149/eval_val/7/corr False
I1203 08:53:48.335319 139656110184192 hlog.py:32] train/00149/eval_val/7 
I1203 08:53:48.335401 139656110184192 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 08:53:48.335503 139656110184192 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 08:53:48.335596 139656110184192 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:53:48.335697 139656110184192 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:53:48.335772 139656110184192 hlog.py:32] train/00149/eval_val/8/corr True
I1203 08:53:48.335842 139656110184192 hlog.py:32] train/00149/eval_val/8 
I1203 08:53:48.335911 139656110184192 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 08:53:48.335999 139656110184192 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 08:53:48.336089 139656110184192 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:53:48.336173 139656110184192 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:53:48.336248 139656110184192 hlog.py:32] train/00149/eval_val/9/corr True
I1203 08:53:48.336318 139656110184192 hlog.py:32] train/00149/eval_val/9 
I1203 08:53:48.336385 139656110184192 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 08:53:48.336474 139656110184192 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 08:53:48.336563 139656110184192 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.336648 139656110184192 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.336723 139656110184192 hlog.py:32] train/00149/eval_val/10/corr True
I1203 08:53:48.336793 139656110184192 hlog.py:32] train/00149/eval_val/10 
I1203 08:53:48.336861 139656110184192 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 08:53:48.336952 139656110184192 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 08:53:48.337051 139656110184192 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:53:48.337142 139656110184192 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:53:48.337217 139656110184192 hlog.py:32] train/00149/eval_val/11/corr True
I1203 08:53:48.337286 139656110184192 hlog.py:32] train/00149/eval_val/11 
I1203 08:53:48.337354 139656110184192 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 08:53:48.337445 139656110184192 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 08:53:48.337543 139656110184192 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 08:53:48.337641 139656110184192 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 08:53:48.337716 139656110184192 hlog.py:32] train/00149/eval_val/12/corr True
I1203 08:53:48.337786 139656110184192 hlog.py:32] train/00149/eval_val/12 
I1203 08:53:48.337854 139656110184192 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 08:53:48.337945 139656110184192 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 08:53:48.338042 139656110184192 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 08:53:48.338133 139656110184192 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 08:53:48.338207 139656110184192 hlog.py:32] train/00149/eval_val/13/corr True
I1203 08:53:48.338277 139656110184192 hlog.py:32] train/00149/eval_val/13 
I1203 08:53:48.338345 139656110184192 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 08:53:48.338436 139656110184192 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 08:53:48.338533 139656110184192 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 08:53:48.338623 139656110184192 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 08:53:48.338699 139656110184192 hlog.py:32] train/00149/eval_val/14/corr True
I1203 08:53:48.338769 139656110184192 hlog.py:32] train/00149/eval_val/14 
I1203 08:53:48.338837 139656110184192 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 08:53:48.338929 139656110184192 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 08:53:48.339026 139656110184192 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 08:53:48.339117 139656110184192 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 08:53:48.339192 139656110184192 hlog.py:32] train/00149/eval_val/15/corr True
I1203 08:53:48.339262 139656110184192 hlog.py:32] train/00149/eval_val/15 
I1203 08:53:48.339330 139656110184192 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 08:53:48.339443 139656110184192 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 08:53:48.339547 139656110184192 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:53:48.339640 139656110184192 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:53:48.339729 139656110184192 hlog.py:32] train/00149/eval_val/16/corr True
I1203 08:53:48.339798 139656110184192 hlog.py:32] train/00149/eval_val/16 
I1203 08:53:48.339867 139656110184192 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 08:53:48.339951 139656110184192 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 08:53:48.340045 139656110184192 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 08:53:48.340136 139656110184192 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 08:53:48.340217 139656110184192 hlog.py:32] train/00149/eval_val/17/corr False
I1203 08:53:48.340287 139656110184192 hlog.py:32] train/00149/eval_val/17 
I1203 08:53:48.340355 139656110184192 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 08:53:48.340439 139656110184192 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 08:53:48.340533 139656110184192 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1203 08:53:48.340624 139656110184192 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 08:53:48.340700 139656110184192 hlog.py:32] train/00149/eval_val/18/corr False
I1203 08:53:48.340769 139656110184192 hlog.py:32] train/00149/eval_val/18 
I1203 08:53:48.340838 139656110184192 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 08:53:48.340921 139656110184192 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 08:53:48.341015 139656110184192 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:53:48.341106 139656110184192 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 08:53:48.341181 139656110184192 hlog.py:32] train/00149/eval_val/19/corr False
I1203 08:53:48.341250 139656110184192 hlog.py:32] train/00149/eval_val/19 
I1203 08:53:48.341319 139656110184192 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 08:53:48.341403 139656110184192 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 08:53:48.341497 139656110184192 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 08:53:48.341587 139656110184192 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 08:53:48.341662 139656110184192 hlog.py:32] train/00149/eval_val/20/corr False
I1203 08:53:48.341732 139656110184192 hlog.py:32] train/00149/eval_val/20 
I1203 08:53:48.341800 139656110184192 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 08:53:48.341892 139656110184192 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 08:53:48.341990 139656110184192 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 08:53:48.342081 139656110184192 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 08:53:48.342156 139656110184192 hlog.py:32] train/00149/eval_val/21/corr True
I1203 08:53:48.342226 139656110184192 hlog.py:32] train/00149/eval_val/21 
I1203 08:53:48.342294 139656110184192 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 08:53:48.342380 139656110184192 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 08:53:48.342470 139656110184192 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1203 08:53:48.342556 139656110184192 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 08:53:48.342631 139656110184192 hlog.py:32] train/00149/eval_val/22/corr False
I1203 08:53:48.342700 139656110184192 hlog.py:32] train/00149/eval_val/22 
I1203 08:53:48.342769 139656110184192 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 08:53:48.342853 139656110184192 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 08:53:48.342959 139656110184192 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 08:53:48.343053 139656110184192 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 08:53:48.343131 139656110184192 hlog.py:32] train/00149/eval_val/23/corr False
I1203 08:53:48.343203 139656110184192 hlog.py:32] train/00149/eval_val/23 
I1203 08:53:48.343274 139656110184192 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 08:53:48.343371 139656110184192 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 08:53:48.343488 139656110184192 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( mississippi ) ) ) )
I1203 08:53:48.343576 139656110184192 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 08:53:48.343654 139656110184192 hlog.py:32] train/00149/eval_val/24/corr False
I1203 08:53:48.343738 139656110184192 hlog.py:32] train/00149/eval_val/24 
I1203 08:53:48.343806 139656110184192 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 08:53:48.343895 139656110184192 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 08:53:48.343987 139656110184192 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:53:48.344074 139656110184192 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:53:48.344149 139656110184192 hlog.py:32] train/00149/eval_val/25/corr True
I1203 08:53:48.344219 139656110184192 hlog.py:32] train/00149/eval_val/25 
I1203 08:53:48.344287 139656110184192 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 08:53:48.344372 139656110184192 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 08:53:48.344465 139656110184192 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 08:53:48.344551 139656110184192 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 08:53:48.344627 139656110184192 hlog.py:32] train/00149/eval_val/26/corr False
I1203 08:53:48.344696 139656110184192 hlog.py:32] train/00149/eval_val/26 
I1203 08:53:48.344765 139656110184192 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 08:53:48.344848 139656110184192 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 08:53:48.344943 139656110184192 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , A ) ) )
I1203 08:53:48.345030 139656110184192 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:53:48.345105 139656110184192 hlog.py:32] train/00149/eval_val/27/corr False
I1203 08:53:48.345174 139656110184192 hlog.py:32] train/00149/eval_val/27 
I1203 08:53:48.345242 139656110184192 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 08:53:48.345330 139656110184192 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 08:53:48.345422 139656110184192 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:53:48.345509 139656110184192 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:53:48.345584 139656110184192 hlog.py:32] train/00149/eval_val/28/corr True
I1203 08:53:48.345654 139656110184192 hlog.py:32] train/00149/eval_val/28 
I1203 08:53:48.345722 139656110184192 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 08:53:48.345810 139656110184192 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 08:53:48.345902 139656110184192 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 08:53:48.345994 139656110184192 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 08:53:48.346070 139656110184192 hlog.py:32] train/00149/eval_val/29/corr True
I1203 08:53:48.346140 139656110184192 hlog.py:32] train/00149/eval_val/29 
I1203 08:53:48.346208 139656110184192 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 08:53:48.346297 139656110184192 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 08:53:48.346390 139656110184192 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 08:53:48.346477 139656110184192 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 08:53:48.346552 139656110184192 hlog.py:32] train/00149/eval_val/30/corr True
I1203 08:53:48.346637 139656110184192 hlog.py:32] train/00149/eval_val/30 
I1203 08:53:48.346708 139656110184192 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 08:53:48.346799 139656110184192 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 08:53:48.346907 139656110184192 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 08:53:48.346993 139656110184192 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 08:53:48.347068 139656110184192 hlog.py:32] train/00149/eval_val/31/corr True
I1203 08:53:48.347138 139656110184192 hlog.py:32] train/00149/eval_val/31 
I1203 08:53:48.347206 139656110184192 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 08:53:48.347290 139656110184192 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 08:53:48.347380 139656110184192 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 08:53:48.347493 139656110184192 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 08:53:48.347571 139656110184192 hlog.py:32] train/00149/eval_val/32/corr False
I1203 08:53:48.347643 139656110184192 hlog.py:32] train/00149/eval_val/32 
I1203 08:53:48.347726 139656110184192 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 08:53:48.347815 139656110184192 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 08:53:48.347907 139656110184192 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:53:48.347993 139656110184192 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:53:48.348068 139656110184192 hlog.py:32] train/00149/eval_val/33/corr True
I1203 08:53:48.348138 139656110184192 hlog.py:32] train/00149/eval_val/33 
I1203 08:53:48.348206 139656110184192 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 08:53:48.348295 139656110184192 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 08:53:48.348387 139656110184192 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:53:48.348473 139656110184192 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:53:48.348548 139656110184192 hlog.py:32] train/00149/eval_val/34/corr True
I1203 08:53:48.348618 139656110184192 hlog.py:32] train/00149/eval_val/34 
I1203 08:53:48.348686 139656110184192 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 08:53:48.348777 139656110184192 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 08:53:48.348872 139656110184192 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.348966 139656110184192 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.349041 139656110184192 hlog.py:32] train/00149/eval_val/35/corr True
I1203 08:53:48.349111 139656110184192 hlog.py:32] train/00149/eval_val/35 
I1203 08:53:48.349179 139656110184192 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 08:53:48.349269 139656110184192 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 08:53:48.349364 139656110184192 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.349452 139656110184192 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.349527 139656110184192 hlog.py:32] train/00149/eval_val/36/corr True
I1203 08:53:48.349597 139656110184192 hlog.py:32] train/00149/eval_val/36 
I1203 08:53:48.349665 139656110184192 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 08:53:48.349755 139656110184192 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 08:53:48.349850 139656110184192 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.349938 139656110184192 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.350013 139656110184192 hlog.py:32] train/00149/eval_val/37/corr True
I1203 08:53:48.350082 139656110184192 hlog.py:32] train/00149/eval_val/37 
I1203 08:53:48.350150 139656110184192 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 08:53:48.350240 139656110184192 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 08:53:48.350335 139656110184192 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.350423 139656110184192 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.350498 139656110184192 hlog.py:32] train/00149/eval_val/38/corr True
I1203 08:53:48.350568 139656110184192 hlog.py:32] train/00149/eval_val/38 
I1203 08:53:48.350636 139656110184192 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 08:53:48.350726 139656110184192 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 08:53:48.350821 139656110184192 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.350909 139656110184192 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:53:48.350984 139656110184192 hlog.py:32] train/00149/eval_val/39/corr True
I1203 08:53:48.351054 139656110184192 hlog.py:32] train/00149/eval_val/39 
I1203 08:53:48.351122 139656110184192 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 08:53:48.351204 139656110184192 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 08:53:48.351299 139656110184192 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( are ) ) ) , A ) )
I1203 08:53:48.351397 139656110184192 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 08:53:48.351485 139656110184192 hlog.py:32] train/00149/eval_val/40/corr False
I1203 08:53:48.351557 139656110184192 hlog.py:32] train/00149/eval_val/40 
I1203 08:53:48.351627 139656110184192 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 08:53:48.351724 139656110184192 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 08:53:48.351825 139656110184192 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 08:53:48.351912 139656110184192 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 08:53:48.351987 139656110184192 hlog.py:32] train/00149/eval_val/41/corr False
I1203 08:53:48.352056 139656110184192 hlog.py:32] train/00149/eval_val/41 
I1203 08:53:48.352125 139656110184192 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 08:53:48.352207 139656110184192 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 08:53:48.352304 139656110184192 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( are ) ) ) , A ) )
I1203 08:53:48.352389 139656110184192 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 08:53:48.352464 139656110184192 hlog.py:32] train/00149/eval_val/42/corr False
I1203 08:53:48.352533 139656110184192 hlog.py:32] train/00149/eval_val/42 
I1203 08:53:48.352601 139656110184192 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 08:53:48.352694 139656110184192 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 08:53:48.352794 139656110184192 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 08:53:48.352886 139656110184192 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 08:53:48.352961 139656110184192 hlog.py:32] train/00149/eval_val/43/corr True
I1203 08:53:48.353030 139656110184192 hlog.py:32] train/00149/eval_val/43 
I1203 08:53:48.353098 139656110184192 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 08:53:48.353190 139656110184192 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 08:53:48.353291 139656110184192 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 08:53:48.353382 139656110184192 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 08:53:48.353457 139656110184192 hlog.py:32] train/00149/eval_val/44/corr True
I1203 08:53:48.353527 139656110184192 hlog.py:32] train/00149/eval_val/44 
I1203 08:53:48.353595 139656110184192 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 08:53:48.353682 139656110184192 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 08:53:48.353777 139656110184192 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 08:53:48.353866 139656110184192 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 08:53:48.353940 139656110184192 hlog.py:32] train/00149/eval_val/45/corr False
I1203 08:53:48.354010 139656110184192 hlog.py:32] train/00149/eval_val/45 
I1203 08:53:48.354078 139656110184192 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 08:53:48.354161 139656110184192 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 08:53:48.354255 139656110184192 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) , A ) )
I1203 08:53:48.354343 139656110184192 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 08:53:48.354418 139656110184192 hlog.py:32] train/00149/eval_val/46/corr False
I1203 08:53:48.354493 139656110184192 hlog.py:32] train/00149/eval_val/46 
I1203 08:53:48.354562 139656110184192 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 08:53:48.354652 139656110184192 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 08:53:48.354749 139656110184192 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 08:53:48.354839 139656110184192 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 08:53:48.354913 139656110184192 hlog.py:32] train/00149/eval_val/47/corr True
I1203 08:53:48.354982 139656110184192 hlog.py:32] train/00149/eval_val/47 
I1203 08:53:48.355051 139656110184192 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 08:53:48.355142 139656110184192 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 08:53:48.355241 139656110184192 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 08:53:48.355331 139656110184192 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 08:53:48.355427 139656110184192 hlog.py:32] train/00149/eval_val/48/corr True
I1203 08:53:48.355501 139656110184192 hlog.py:32] train/00149/eval_val/48 
I1203 08:53:48.355571 139656110184192 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 08:53:48.355665 139656110184192 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 08:53:48.355777 139656110184192 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:53:48.355867 139656110184192 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:53:48.355943 139656110184192 hlog.py:32] train/00149/eval_val/49/corr True
I1203 08:53:48.356012 139656110184192 hlog.py:32] train/00149/eval_val/49 
I1203 08:53:48.356081 139656110184192 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 08:53:48.356171 139656110184192 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 08:53:48.356270 139656110184192 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 08:53:48.356359 139656110184192 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 08:53:48.356434 139656110184192 hlog.py:32] train/00149/eval_val/50/corr True
I1203 08:53:48.356503 139656110184192 hlog.py:32] train/00149/eval_val/50 
I1203 08:53:48.356572 139656110184192 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 08:53:48.356662 139656110184192 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 08:53:48.356760 139656110184192 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:53:48.356850 139656110184192 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:53:48.356926 139656110184192 hlog.py:32] train/00149/eval_val/51/corr False
I1203 08:53:48.356995 139656110184192 hlog.py:32] train/00149/eval_val/51 
I1203 08:53:48.357064 139656110184192 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 08:53:48.357146 139656110184192 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 08:53:48.357245 139656110184192 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 08:53:48.357332 139656110184192 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 08:53:48.357407 139656110184192 hlog.py:32] train/00149/eval_val/52/corr False
I1203 08:53:48.357477 139656110184192 hlog.py:32] train/00149/eval_val/52 
I1203 08:53:48.357546 139656110184192 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 08:53:48.357628 139656110184192 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 08:53:48.357721 139656110184192 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 08:53:48.357808 139656110184192 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 08:53:48.357883 139656110184192 hlog.py:32] train/00149/eval_val/53/corr False
I1203 08:53:48.357952 139656110184192 hlog.py:32] train/00149/eval_val/53 
I1203 08:53:48.358020 139656110184192 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 08:53:48.358109 139656110184192 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 08:53:48.358201 139656110184192 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.358287 139656110184192 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.358362 139656110184192 hlog.py:32] train/00149/eval_val/54/corr True
I1203 08:53:48.358432 139656110184192 hlog.py:32] train/00149/eval_val/54 
I1203 08:53:48.358499 139656110184192 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 08:53:48.358587 139656110184192 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 08:53:48.358680 139656110184192 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 08:53:48.358766 139656110184192 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 08:53:48.358841 139656110184192 hlog.py:32] train/00149/eval_val/55/corr True
I1203 08:53:48.358910 139656110184192 hlog.py:32] train/00149/eval_val/55 
I1203 08:53:48.358979 139656110184192 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 08:53:48.359067 139656110184192 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 08:53:48.359159 139656110184192 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:53:48.359246 139656110184192 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:53:48.359321 139656110184192 hlog.py:32] train/00149/eval_val/56/corr True
I1203 08:53:48.359412 139656110184192 hlog.py:32] train/00149/eval_val/56 
I1203 08:53:48.359485 139656110184192 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 08:53:48.359577 139656110184192 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 08:53:48.359673 139656110184192 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.359772 139656110184192 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.359848 139656110184192 hlog.py:32] train/00149/eval_val/57/corr True
I1203 08:53:48.359917 139656110184192 hlog.py:32] train/00149/eval_val/57 
I1203 08:53:48.359985 139656110184192 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 08:53:48.360074 139656110184192 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 08:53:48.360166 139656110184192 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.360258 139656110184192 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.360332 139656110184192 hlog.py:32] train/00149/eval_val/58/corr True
I1203 08:53:48.360402 139656110184192 hlog.py:32] train/00149/eval_val/58 
I1203 08:53:48.360470 139656110184192 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 08:53:48.360559 139656110184192 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 08:53:48.360650 139656110184192 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 08:53:48.360737 139656110184192 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 08:53:48.360811 139656110184192 hlog.py:32] train/00149/eval_val/59/corr True
I1203 08:53:48.360881 139656110184192 hlog.py:32] train/00149/eval_val/59 
I1203 08:53:48.360949 139656110184192 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 08:53:48.361038 139656110184192 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 08:53:48.361130 139656110184192 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 08:53:48.361217 139656110184192 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 08:53:48.361292 139656110184192 hlog.py:32] train/00149/eval_val/60/corr True
I1203 08:53:48.361361 139656110184192 hlog.py:32] train/00149/eval_val/60 
I1203 08:53:48.361429 139656110184192 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 08:53:48.361518 139656110184192 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 08:53:48.361611 139656110184192 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.361698 139656110184192 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.361773 139656110184192 hlog.py:32] train/00149/eval_val/61/corr True
I1203 08:53:48.361843 139656110184192 hlog.py:32] train/00149/eval_val/61 
I1203 08:53:48.361912 139656110184192 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 08:53:48.362000 139656110184192 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 08:53:48.362092 139656110184192 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 08:53:48.362178 139656110184192 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 08:53:48.362253 139656110184192 hlog.py:32] train/00149/eval_val/62/corr True
I1203 08:53:48.362323 139656110184192 hlog.py:32] train/00149/eval_val/62 
I1203 08:53:48.362392 139656110184192 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 08:53:48.362480 139656110184192 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 08:53:48.362572 139656110184192 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.362658 139656110184192 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.362733 139656110184192 hlog.py:32] train/00149/eval_val/63/corr True
I1203 08:53:48.362802 139656110184192 hlog.py:32] train/00149/eval_val/63 
I1203 08:53:48.362870 139656110184192 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 08:53:48.570647 139656110184192 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 08:53:48.570842 139656110184192 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 08:53:48.570956 139656110184192 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 08:53:48.571039 139656110184192 hlog.py:32] train/00149/eval_val/64/corr True
I1203 08:53:48.571114 139656110184192 hlog.py:32] train/00149/eval_val/64 
I1203 08:53:48.571189 139656110184192 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 08:53:48.571283 139656110184192 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 08:53:48.571378 139656110184192 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.571493 139656110184192 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.571572 139656110184192 hlog.py:32] train/00149/eval_val/65/corr True
I1203 08:53:48.571645 139656110184192 hlog.py:32] train/00149/eval_val/65 
I1203 08:53:48.571730 139656110184192 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 08:53:48.571820 139656110184192 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 08:53:48.571913 139656110184192 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.572000 139656110184192 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.572076 139656110184192 hlog.py:32] train/00149/eval_val/66/corr True
I1203 08:53:48.572146 139656110184192 hlog.py:32] train/00149/eval_val/66 
I1203 08:53:48.572215 139656110184192 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 08:53:48.572300 139656110184192 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 08:53:48.572400 139656110184192 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( states ) ) ) ) )
I1203 08:53:48.572487 139656110184192 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.572562 139656110184192 hlog.py:32] train/00149/eval_val/67/corr False
I1203 08:53:48.572632 139656110184192 hlog.py:32] train/00149/eval_val/67 
I1203 08:53:48.572701 139656110184192 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 08:53:48.572791 139656110184192 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 08:53:48.572886 139656110184192 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 08:53:48.572974 139656110184192 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 08:53:48.573049 139656110184192 hlog.py:32] train/00149/eval_val/68/corr True
I1203 08:53:48.573119 139656110184192 hlog.py:32] train/00149/eval_val/68 
I1203 08:53:48.573187 139656110184192 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 08:53:48.573278 139656110184192 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 08:53:48.573372 139656110184192 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.573460 139656110184192 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.573535 139656110184192 hlog.py:32] train/00149/eval_val/69/corr True
I1203 08:53:48.573605 139656110184192 hlog.py:32] train/00149/eval_val/69 
I1203 08:53:48.573674 139656110184192 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 08:53:48.573763 139656110184192 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 08:53:48.573853 139656110184192 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.573944 139656110184192 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.574019 139656110184192 hlog.py:32] train/00149/eval_val/70/corr True
I1203 08:53:48.574089 139656110184192 hlog.py:32] train/00149/eval_val/70 
I1203 08:53:48.574157 139656110184192 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 08:53:48.574246 139656110184192 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 08:53:48.574336 139656110184192 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:53:48.574421 139656110184192 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:53:48.574496 139656110184192 hlog.py:32] train/00149/eval_val/71/corr True
I1203 08:53:48.574565 139656110184192 hlog.py:32] train/00149/eval_val/71 
I1203 08:53:48.574634 139656110184192 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 08:53:48.574722 139656110184192 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 08:53:48.574812 139656110184192 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:53:48.574897 139656110184192 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:53:48.574972 139656110184192 hlog.py:32] train/00149/eval_val/72/corr True
I1203 08:53:48.575042 139656110184192 hlog.py:32] train/00149/eval_val/72 
I1203 08:53:48.575110 139656110184192 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 08:53:48.575199 139656110184192 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 08:53:48.575289 139656110184192 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 08:53:48.575374 139656110184192 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 08:53:48.575477 139656110184192 hlog.py:32] train/00149/eval_val/73/corr True
I1203 08:53:48.575550 139656110184192 hlog.py:32] train/00149/eval_val/73 
I1203 08:53:48.575621 139656110184192 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 08:53:48.575724 139656110184192 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 08:53:48.575815 139656110184192 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:53:48.575900 139656110184192 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:53:48.575974 139656110184192 hlog.py:32] train/00149/eval_val/74/corr True
I1203 08:53:48.576044 139656110184192 hlog.py:32] train/00149/eval_val/74 
I1203 08:53:48.576113 139656110184192 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 08:53:48.576203 139656110184192 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 08:53:48.576293 139656110184192 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 08:53:48.576378 139656110184192 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 08:53:48.576453 139656110184192 hlog.py:32] train/00149/eval_val/75/corr True
I1203 08:53:48.576523 139656110184192 hlog.py:32] train/00149/eval_val/75 
I1203 08:53:48.576591 139656110184192 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 08:53:48.576681 139656110184192 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 08:53:48.576771 139656110184192 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.576856 139656110184192 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:53:48.576931 139656110184192 hlog.py:32] train/00149/eval_val/76/corr True
I1203 08:53:48.577006 139656110184192 hlog.py:32] train/00149/eval_val/76 
I1203 08:53:48.577076 139656110184192 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 08:53:48.577165 139656110184192 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 08:53:48.577255 139656110184192 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:53:48.577340 139656110184192 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:53:48.577415 139656110184192 hlog.py:32] train/00149/eval_val/77/corr True
I1203 08:53:48.577485 139656110184192 hlog.py:32] train/00149/eval_val/77 
I1203 08:53:48.577553 139656110184192 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 08:53:48.577641 139656110184192 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 08:53:48.577732 139656110184192 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 08:53:48.577817 139656110184192 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 08:53:48.577892 139656110184192 hlog.py:32] train/00149/eval_val/78/corr True
I1203 08:53:48.577961 139656110184192 hlog.py:32] train/00149/eval_val/78 
I1203 08:53:48.578030 139656110184192 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 08:53:48.578119 139656110184192 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 08:53:48.578209 139656110184192 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 08:53:48.578295 139656110184192 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 08:53:48.578370 139656110184192 hlog.py:32] train/00149/eval_val/79/corr True
I1203 08:53:48.578439 139656110184192 hlog.py:32] train/00149/eval_val/79 
I1203 08:53:48.578508 139656110184192 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 08:53:48.578596 139656110184192 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 08:53:48.578686 139656110184192 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.578771 139656110184192 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.578845 139656110184192 hlog.py:32] train/00149/eval_val/80/corr True
I1203 08:53:48.578916 139656110184192 hlog.py:32] train/00149/eval_val/80 
I1203 08:53:48.578984 139656110184192 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 08:53:48.579068 139656110184192 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 08:53:48.579159 139656110184192 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) , _state ( B ) ) )
I1203 08:53:48.579245 139656110184192 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.579320 139656110184192 hlog.py:32] train/00149/eval_val/81/corr False
I1203 08:53:48.579403 139656110184192 hlog.py:32] train/00149/eval_val/81 
I1203 08:53:48.579487 139656110184192 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 08:53:48.579578 139656110184192 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 08:53:48.579671 139656110184192 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 08:53:48.579770 139656110184192 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 08:53:48.579845 139656110184192 hlog.py:32] train/00149/eval_val/82/corr True
I1203 08:53:48.579915 139656110184192 hlog.py:32] train/00149/eval_val/82 
I1203 08:53:48.579983 139656110184192 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 08:53:48.580072 139656110184192 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 08:53:48.580168 139656110184192 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 08:53:48.580253 139656110184192 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 08:53:48.580328 139656110184192 hlog.py:32] train/00149/eval_val/83/corr True
I1203 08:53:48.580398 139656110184192 hlog.py:32] train/00149/eval_val/83 
I1203 08:53:48.580466 139656110184192 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 08:53:48.580551 139656110184192 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 08:53:48.580638 139656110184192 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _state ( B ) ) )
I1203 08:53:48.580723 139656110184192 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.580798 139656110184192 hlog.py:32] train/00149/eval_val/84/corr False
I1203 08:53:48.580868 139656110184192 hlog.py:32] train/00149/eval_val/84 
I1203 08:53:48.580936 139656110184192 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 08:53:48.581026 139656110184192 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 08:53:48.581116 139656110184192 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.581201 139656110184192 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.581276 139656110184192 hlog.py:32] train/00149/eval_val/85/corr True
I1203 08:53:48.581345 139656110184192 hlog.py:32] train/00149/eval_val/85 
I1203 08:53:48.581413 139656110184192 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 08:53:48.581499 139656110184192 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 08:53:48.581601 139656110184192 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , _riverid ( a ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1203 08:53:48.581691 139656110184192 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 08:53:48.581766 139656110184192 hlog.py:32] train/00149/eval_val/86/corr False
I1203 08:53:48.581836 139656110184192 hlog.py:32] train/00149/eval_val/86 
I1203 08:53:48.581905 139656110184192 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 08:53:48.581999 139656110184192 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 08:53:48.582101 139656110184192 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:53:48.582195 139656110184192 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:53:48.582270 139656110184192 hlog.py:32] train/00149/eval_val/87/corr True
I1203 08:53:48.582340 139656110184192 hlog.py:32] train/00149/eval_val/87 
I1203 08:53:48.582408 139656110184192 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 08:53:48.582498 139656110184192 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 08:53:48.582590 139656110184192 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 08:53:48.582676 139656110184192 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 08:53:48.582751 139656110184192 hlog.py:32] train/00149/eval_val/88/corr True
I1203 08:53:48.582821 139656110184192 hlog.py:32] train/00149/eval_val/88 
I1203 08:53:48.582895 139656110184192 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 08:53:48.582989 139656110184192 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 08:53:48.583088 139656110184192 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:53:48.583179 139656110184192 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:53:48.583254 139656110184192 hlog.py:32] train/00149/eval_val/89/corr True
I1203 08:53:48.583323 139656110184192 hlog.py:32] train/00149/eval_val/89 
I1203 08:53:48.583411 139656110184192 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 08:53:48.583512 139656110184192 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 08:53:48.583618 139656110184192 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 08:53:48.583726 139656110184192 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 08:53:48.583803 139656110184192 hlog.py:32] train/00149/eval_val/90/corr True
I1203 08:53:48.583873 139656110184192 hlog.py:32] train/00149/eval_val/90 
I1203 08:53:48.583941 139656110184192 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 08:53:48.584031 139656110184192 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 08:53:48.584125 139656110184192 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.584213 139656110184192 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.584288 139656110184192 hlog.py:32] train/00149/eval_val/91/corr True
I1203 08:53:48.584358 139656110184192 hlog.py:32] train/00149/eval_val/91 
I1203 08:53:48.584426 139656110184192 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 08:53:48.584516 139656110184192 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 08:53:48.584610 139656110184192 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.584698 139656110184192 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.584773 139656110184192 hlog.py:32] train/00149/eval_val/92/corr True
I1203 08:53:48.584842 139656110184192 hlog.py:32] train/00149/eval_val/92 
I1203 08:53:48.584911 139656110184192 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 08:53:48.585000 139656110184192 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 08:53:48.585094 139656110184192 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.585181 139656110184192 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.585257 139656110184192 hlog.py:32] train/00149/eval_val/93/corr True
I1203 08:53:48.585326 139656110184192 hlog.py:32] train/00149/eval_val/93 
I1203 08:53:48.585394 139656110184192 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 08:53:48.585484 139656110184192 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 08:53:48.585579 139656110184192 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.585672 139656110184192 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.585747 139656110184192 hlog.py:32] train/00149/eval_val/94/corr True
I1203 08:53:48.585817 139656110184192 hlog.py:32] train/00149/eval_val/94 
I1203 08:53:48.585886 139656110184192 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 08:53:48.585976 139656110184192 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 08:53:48.586070 139656110184192 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.586158 139656110184192 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.586233 139656110184192 hlog.py:32] train/00149/eval_val/95/corr True
I1203 08:53:48.586303 139656110184192 hlog.py:32] train/00149/eval_val/95 
I1203 08:53:48.586371 139656110184192 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 08:53:48.586463 139656110184192 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 08:53:48.586562 139656110184192 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 08:53:48.586653 139656110184192 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 08:53:48.586728 139656110184192 hlog.py:32] train/00149/eval_val/96/corr True
I1203 08:53:48.586798 139656110184192 hlog.py:32] train/00149/eval_val/96 
I1203 08:53:48.586866 139656110184192 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 08:53:48.586952 139656110184192 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 08:53:48.587050 139656110184192 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) )
I1203 08:53:48.587217 139656110184192 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 08:53:48.587294 139656110184192 hlog.py:32] train/00149/eval_val/97/corr False
I1203 08:53:48.587364 139656110184192 hlog.py:32] train/00149/eval_val/97 
I1203 08:53:48.587458 139656110184192 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 08:53:48.587553 139656110184192 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 08:53:48.587652 139656110184192 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 08:53:48.587756 139656110184192 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 08:53:48.587831 139656110184192 hlog.py:32] train/00149/eval_val/98/corr True
I1203 08:53:48.587901 139656110184192 hlog.py:32] train/00149/eval_val/98 
I1203 08:53:48.587970 139656110184192 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 08:53:48.588061 139656110184192 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 08:53:48.588157 139656110184192 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:53:48.588246 139656110184192 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:53:48.588326 139656110184192 hlog.py:32] train/00149/eval_val/99/corr True
I1203 08:53:48.588397 139656110184192 hlog.py:32] train/00149/eval_val/99 
I1203 08:53:48.588465 139656110184192 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 08:53:48.588549 139656110184192 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 08:53:48.588644 139656110184192 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.588734 139656110184192 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 08:53:48.588809 139656110184192 hlog.py:32] train/00149/eval_val/100/corr False
I1203 08:53:48.588879 139656110184192 hlog.py:32] train/00149/eval_val/100 
I1203 08:53:48.588948 139656110184192 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 08:53:48.589032 139656110184192 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 08:53:48.589132 139656110184192 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:53:48.589222 139656110184192 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 08:53:48.589297 139656110184192 hlog.py:32] train/00149/eval_val/101/corr False
I1203 08:53:48.589367 139656110184192 hlog.py:32] train/00149/eval_val/101 
I1203 08:53:48.589435 139656110184192 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 08:53:48.589520 139656110184192 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 08:53:48.589614 139656110184192 hlog.py:32] train/00149/eval_val/102/pred ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( over ohio ) ) ) ) )
I1203 08:53:48.589701 139656110184192 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:53:48.589776 139656110184192 hlog.py:32] train/00149/eval_val/102/corr False
I1203 08:53:48.589847 139656110184192 hlog.py:32] train/00149/eval_val/102 
I1203 08:53:48.589915 139656110184192 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 08:53:48.590003 139656110184192 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 08:53:48.590095 139656110184192 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 08:53:48.590182 139656110184192 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 08:53:48.590257 139656110184192 hlog.py:32] train/00149/eval_val/103/corr True
I1203 08:53:48.590327 139656110184192 hlog.py:32] train/00149/eval_val/103 
I1203 08:53:48.590395 139656110184192 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 08:53:48.590484 139656110184192 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 08:53:48.590576 139656110184192 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.590662 139656110184192 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.590737 139656110184192 hlog.py:32] train/00149/eval_val/104/corr True
I1203 08:53:48.590807 139656110184192 hlog.py:32] train/00149/eval_val/104 
I1203 08:53:48.590876 139656110184192 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 08:53:48.590964 139656110184192 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 08:53:48.591056 139656110184192 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 08:53:48.591148 139656110184192 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 08:53:48.591224 139656110184192 hlog.py:32] train/00149/eval_val/105/corr True
I1203 08:53:48.591294 139656110184192 hlog.py:32] train/00149/eval_val/105 
I1203 08:53:48.591362 139656110184192 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 08:53:48.591475 139656110184192 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 08:53:48.591570 139656110184192 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 08:53:48.591659 139656110184192 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 08:53:48.591748 139656110184192 hlog.py:32] train/00149/eval_val/106/corr True
I1203 08:53:48.591818 139656110184192 hlog.py:32] train/00149/eval_val/106 
I1203 08:53:48.591886 139656110184192 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 08:53:48.591975 139656110184192 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 08:53:48.592066 139656110184192 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.592153 139656110184192 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.592228 139656110184192 hlog.py:32] train/00149/eval_val/107/corr True
I1203 08:53:48.592297 139656110184192 hlog.py:32] train/00149/eval_val/107 
I1203 08:53:48.592365 139656110184192 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 08:53:48.592454 139656110184192 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 08:53:48.592546 139656110184192 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 08:53:48.592632 139656110184192 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 08:53:48.592708 139656110184192 hlog.py:32] train/00149/eval_val/108/corr True
I1203 08:53:48.592777 139656110184192 hlog.py:32] train/00149/eval_val/108 
I1203 08:53:48.592846 139656110184192 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 08:53:48.592934 139656110184192 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 08:53:48.593027 139656110184192 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 08:53:48.593113 139656110184192 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 08:53:48.593188 139656110184192 hlog.py:32] train/00149/eval_val/109/corr True
I1203 08:53:48.593257 139656110184192 hlog.py:32] train/00149/eval_val/109 
I1203 08:53:48.593326 139656110184192 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 08:53:48.593415 139656110184192 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 08:53:48.593507 139656110184192 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.593593 139656110184192 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:53:48.593668 139656110184192 hlog.py:32] train/00149/eval_val/110/corr True
I1203 08:53:48.593738 139656110184192 hlog.py:32] train/00149/eval_val/110 
I1203 08:53:48.593806 139656110184192 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 08:53:48.593894 139656110184192 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 08:53:48.593986 139656110184192 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 08:53:48.594080 139656110184192 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 08:53:48.594155 139656110184192 hlog.py:32] train/00149/eval_val/111/corr True
I1203 08:53:48.594225 139656110184192 hlog.py:32] train/00149/eval_val/111 
I1203 08:53:48.594293 139656110184192 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 08:53:48.594381 139656110184192 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 08:53:48.594473 139656110184192 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:53:48.594559 139656110184192 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:53:48.594634 139656110184192 hlog.py:32] train/00149/eval_val/112/corr True
I1203 08:53:48.594704 139656110184192 hlog.py:32] train/00149/eval_val/112 
I1203 08:53:48.594773 139656110184192 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 08:53:48.594862 139656110184192 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 08:53:48.594954 139656110184192 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:53:48.595041 139656110184192 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:53:48.595116 139656110184192 hlog.py:32] train/00149/eval_val/113/corr True
I1203 08:53:48.595186 139656110184192 hlog.py:32] train/00149/eval_val/113 
I1203 08:53:48.595254 139656110184192 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 08:53:48.595342 139656110184192 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 08:53:48.595457 139656110184192 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.595548 139656110184192 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:53:48.595625 139656110184192 hlog.py:32] train/00149/eval_val/114/corr True
I1203 08:53:48.595710 139656110184192 hlog.py:32] train/00149/eval_val/114 
I1203 08:53:48.595780 139656110184192 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 08:53:48.595869 139656110184192 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 08:53:48.595962 139656110184192 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 08:53:48.596049 139656110184192 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 08:53:48.596124 139656110184192 hlog.py:32] train/00149/eval_val/115/corr True
I1203 08:53:48.596194 139656110184192 hlog.py:32] train/00149/eval_val/115 
I1203 08:53:48.596263 139656110184192 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 08:53:48.596352 139656110184192 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 08:53:48.596444 139656110184192 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.596530 139656110184192 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:53:48.596605 139656110184192 hlog.py:32] train/00149/eval_val/116/corr True
I1203 08:53:48.596675 139656110184192 hlog.py:32] train/00149/eval_val/116 
I1203 08:53:48.596743 139656110184192 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 08:53:48.596834 139656110184192 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 08:53:48.596929 139656110184192 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.597022 139656110184192 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.597097 139656110184192 hlog.py:32] train/00149/eval_val/117/corr True
I1203 08:53:48.597167 139656110184192 hlog.py:32] train/00149/eval_val/117 
I1203 08:53:48.597235 139656110184192 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 08:53:48.597326 139656110184192 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 08:53:48.597420 139656110184192 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.597507 139656110184192 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.597582 139656110184192 hlog.py:32] train/00149/eval_val/118/corr True
I1203 08:53:48.597652 139656110184192 hlog.py:32] train/00149/eval_val/118 
I1203 08:53:48.597720 139656110184192 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 08:53:48.597810 139656110184192 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 08:53:48.597904 139656110184192 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.597992 139656110184192 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.598067 139656110184192 hlog.py:32] train/00149/eval_val/119/corr True
I1203 08:53:48.598136 139656110184192 hlog.py:32] train/00149/eval_val/119 
I1203 08:53:48.598205 139656110184192 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 08:53:48.598291 139656110184192 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 08:53:48.598377 139656110184192 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 08:53:48.598459 139656110184192 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 08:53:48.598534 139656110184192 hlog.py:32] train/00149/eval_val/120/corr True
I1203 08:53:48.598603 139656110184192 hlog.py:32] train/00149/eval_val/120 
I1203 08:53:48.598672 139656110184192 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 08:53:48.598758 139656110184192 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 08:53:48.598844 139656110184192 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 08:53:48.598926 139656110184192 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 08:53:48.599001 139656110184192 hlog.py:32] train/00149/eval_val/121/corr True
I1203 08:53:48.599070 139656110184192 hlog.py:32] train/00149/eval_val/121 
I1203 08:53:48.599138 139656110184192 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 08:53:48.599228 139656110184192 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 08:53:48.599323 139656110184192 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 08:53:48.599432 139656110184192 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 08:53:48.599512 139656110184192 hlog.py:32] train/00149/eval_val/122/corr True
I1203 08:53:48.599585 139656110184192 hlog.py:32] train/00149/eval_val/122 
I1203 08:53:48.599655 139656110184192 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 08:53:48.599760 139656110184192 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 08:53:48.599854 139656110184192 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 08:53:48.599947 139656110184192 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 08:53:48.600023 139656110184192 hlog.py:32] train/00149/eval_val/123/corr True
I1203 08:53:48.600093 139656110184192 hlog.py:32] train/00149/eval_val/123 
I1203 08:53:48.600161 139656110184192 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 08:53:48.600251 139656110184192 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 08:53:48.600346 139656110184192 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 08:53:48.600433 139656110184192 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 08:53:48.600508 139656110184192 hlog.py:32] train/00149/eval_val/124/corr True
I1203 08:53:48.600578 139656110184192 hlog.py:32] train/00149/eval_val/124 
I1203 08:53:48.600646 139656110184192 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 08:53:48.600736 139656110184192 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 08:53:48.600830 139656110184192 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 08:53:48.600918 139656110184192 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 08:53:48.600992 139656110184192 hlog.py:32] train/00149/eval_val/125/corr True
I1203 08:53:48.601062 139656110184192 hlog.py:32] train/00149/eval_val/125 
I1203 08:53:48.601130 139656110184192 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 08:53:48.601219 139656110184192 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 08:53:48.601308 139656110184192 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.601393 139656110184192 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.601468 139656110184192 hlog.py:32] train/00149/eval_val/126/corr True
I1203 08:53:48.601537 139656110184192 hlog.py:32] train/00149/eval_val/126 
I1203 08:53:48.601605 139656110184192 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 08:53:48.601692 139656110184192 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 08:53:48.601782 139656110184192 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.601867 139656110184192 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.601942 139656110184192 hlog.py:32] train/00149/eval_val/127/corr False
I1203 08:53:48.602011 139656110184192 hlog.py:32] train/00149/eval_val/127 
I1203 08:53:48.602080 139656110184192 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 08:53:48.730217 139656110184192 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 08:53:48.730341 139656110184192 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.730437 139656110184192 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.730519 139656110184192 hlog.py:32] train/00149/eval_val/128/corr True
I1203 08:53:48.730593 139656110184192 hlog.py:32] train/00149/eval_val/128 
I1203 08:53:48.730665 139656110184192 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 08:53:48.730755 139656110184192 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 08:53:48.730847 139656110184192 hlog.py:32] train/00149/eval_val/129/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.730939 139656110184192 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.731016 139656110184192 hlog.py:32] train/00149/eval_val/129/corr False
I1203 08:53:48.731086 139656110184192 hlog.py:32] train/00149/eval_val/129 
I1203 08:53:48.731155 139656110184192 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 08:53:48.731240 139656110184192 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 08:53:48.731335 139656110184192 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _loc ( B , A ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.731445 139656110184192 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.731525 139656110184192 hlog.py:32] train/00149/eval_val/130/corr False
I1203 08:53:48.731597 139656110184192 hlog.py:32] train/00149/eval_val/130 
I1203 08:53:48.731668 139656110184192 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 08:53:48.731772 139656110184192 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 08:53:48.731862 139656110184192 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.731946 139656110184192 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.732021 139656110184192 hlog.py:32] train/00149/eval_val/131/corr True
I1203 08:53:48.732091 139656110184192 hlog.py:32] train/00149/eval_val/131 
I1203 08:53:48.732159 139656110184192 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 08:53:48.732243 139656110184192 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 08:53:48.732337 139656110184192 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:53:48.732422 139656110184192 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:53:48.732497 139656110184192 hlog.py:32] train/00149/eval_val/132/corr False
I1203 08:53:48.732567 139656110184192 hlog.py:32] train/00149/eval_val/132 
I1203 08:53:48.732635 139656110184192 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 08:53:48.732720 139656110184192 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 08:53:48.732810 139656110184192 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:53:48.732894 139656110184192 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 08:53:48.732969 139656110184192 hlog.py:32] train/00149/eval_val/133/corr False
I1203 08:53:48.733038 139656110184192 hlog.py:32] train/00149/eval_val/133 
I1203 08:53:48.733106 139656110184192 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 08:53:48.733191 139656110184192 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 08:53:48.733293 139656110184192 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) ) )
I1203 08:53:48.733384 139656110184192 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:53:48.733460 139656110184192 hlog.py:32] train/00149/eval_val/134/corr False
I1203 08:53:48.733530 139656110184192 hlog.py:32] train/00149/eval_val/134 
I1203 08:53:48.733598 139656110184192 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 08:53:48.733691 139656110184192 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 08:53:48.733796 139656110184192 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:53:48.733887 139656110184192 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:53:48.733962 139656110184192 hlog.py:32] train/00149/eval_val/135/corr True
I1203 08:53:48.734032 139656110184192 hlog.py:32] train/00149/eval_val/135 
I1203 08:53:48.734101 139656110184192 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 08:53:48.734190 139656110184192 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 08:53:48.734283 139656110184192 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.734371 139656110184192 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.734446 139656110184192 hlog.py:32] train/00149/eval_val/136/corr True
I1203 08:53:48.734515 139656110184192 hlog.py:32] train/00149/eval_val/136 
I1203 08:53:48.734584 139656110184192 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 08:53:48.734673 139656110184192 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 08:53:48.734766 139656110184192 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.734853 139656110184192 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.734928 139656110184192 hlog.py:32] train/00149/eval_val/137/corr True
I1203 08:53:48.734997 139656110184192 hlog.py:32] train/00149/eval_val/137 
I1203 08:53:48.735065 139656110184192 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 08:53:48.735154 139656110184192 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 08:53:48.735247 139656110184192 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.735334 139656110184192 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.735431 139656110184192 hlog.py:32] train/00149/eval_val/138/corr True
I1203 08:53:48.735505 139656110184192 hlog.py:32] train/00149/eval_val/138 
I1203 08:53:48.735576 139656110184192 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 08:53:48.735668 139656110184192 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 08:53:48.735774 139656110184192 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.735861 139656110184192 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:53:48.735936 139656110184192 hlog.py:32] train/00149/eval_val/139/corr True
I1203 08:53:48.736005 139656110184192 hlog.py:32] train/00149/eval_val/139 
I1203 08:53:48.736073 139656110184192 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 08:53:48.736158 139656110184192 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 08:53:48.736254 139656110184192 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:53:48.736345 139656110184192 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:53:48.736420 139656110184192 hlog.py:32] train/00149/eval_val/140/corr False
I1203 08:53:48.736490 139656110184192 hlog.py:32] train/00149/eval_val/140 
I1203 08:53:48.736558 139656110184192 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 08:53:48.736649 139656110184192 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 08:53:48.736745 139656110184192 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:53:48.736835 139656110184192 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:53:48.736910 139656110184192 hlog.py:32] train/00149/eval_val/141/corr False
I1203 08:53:48.736980 139656110184192 hlog.py:32] train/00149/eval_val/141 
I1203 08:53:48.737049 139656110184192 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 08:53:48.737131 139656110184192 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 08:53:48.737222 139656110184192 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 08:53:48.737308 139656110184192 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 08:53:48.737382 139656110184192 hlog.py:32] train/00149/eval_val/142/corr False
I1203 08:53:48.737452 139656110184192 hlog.py:32] train/00149/eval_val/142 
I1203 08:53:48.737521 139656110184192 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 08:53:48.737603 139656110184192 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 08:53:48.737693 139656110184192 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 08:53:48.737778 139656110184192 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 08:53:48.737854 139656110184192 hlog.py:32] train/00149/eval_val/143/corr False
I1203 08:53:48.737923 139656110184192 hlog.py:32] train/00149/eval_val/143 
I1203 08:53:48.737991 139656110184192 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 08:53:48.738074 139656110184192 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 08:53:48.738160 139656110184192 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 08:53:48.738245 139656110184192 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 08:53:48.738319 139656110184192 hlog.py:32] train/00149/eval_val/144/corr False
I1203 08:53:48.738388 139656110184192 hlog.py:32] train/00149/eval_val/144 
I1203 08:53:48.738456 139656110184192 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 08:53:48.738539 139656110184192 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 08:53:48.738633 139656110184192 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) ) )
I1203 08:53:48.738719 139656110184192 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 08:53:48.738793 139656110184192 hlog.py:32] train/00149/eval_val/145/corr False
I1203 08:53:48.738862 139656110184192 hlog.py:32] train/00149/eval_val/145 
I1203 08:53:48.738930 139656110184192 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 08:53:48.739017 139656110184192 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 08:53:48.739115 139656110184192 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:53:48.739209 139656110184192 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 08:53:48.739284 139656110184192 hlog.py:32] train/00149/eval_val/146/corr False
I1203 08:53:48.739354 139656110184192 hlog.py:32] train/00149/eval_val/146 
I1203 08:53:48.739450 139656110184192 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 08:53:48.739545 139656110184192 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 08:53:48.739643 139656110184192 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 08:53:48.739747 139656110184192 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 08:53:48.739822 139656110184192 hlog.py:32] train/00149/eval_val/147/corr True
I1203 08:53:48.739891 139656110184192 hlog.py:32] train/00149/eval_val/147 
I1203 08:53:48.739959 139656110184192 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 08:53:48.740035 139656110184192 hlog.py:32] train/00149/eval_val/acc 0.6892
I1203 08:53:48.770959 139656110184192 hlog.py:18] train/00149{17.40s}
I1203 08:53:48.773289 139656110184192 hlog.py:18] train{2437.86s}
