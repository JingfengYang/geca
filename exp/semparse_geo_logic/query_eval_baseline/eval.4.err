I0105 12:10:37.280924 140409914992384 hlog.py:24] # --TEST
I0105 12:10:37.281118 140409914992384 hlog.py:24] # --seed=4
I0105 12:10:37.281162 140409914992384 hlog.py:24] # --dataset=semparse
I0105 12:10:37.281198 140409914992384 hlog.py:24] # --model_dir=model
I0105 12:10:37.281230 140409914992384 hlog.py:24] # --n_checkpoint=10
I0105 12:10:37.281261 140409914992384 hlog.py:24] # --device=cuda:0
I0105 12:10:37.281304 140409914992384 hlog.py:24] # --nologtostderr
I0105 12:10:37.281335 140409914992384 hlog.py:24] # --noalsologtostderr
I0105 12:10:37.281365 140409914992384 hlog.py:24] # --log_dir=
I0105 12:10:37.281395 140409914992384 hlog.py:24] # --verbosity=0
I0105 12:10:37.281425 140409914992384 hlog.py:24] # --verbosity=0
I0105 12:10:37.281455 140409914992384 hlog.py:24] # --stderrthreshold=fatal
I0105 12:10:37.281485 140409914992384 hlog.py:24] # --showprefixforinfo
I0105 12:10:37.281516 140409914992384 hlog.py:24] # --nodedup
I0105 12:10:37.281546 140409914992384 hlog.py:24] # --wug_size=4
I0105 12:10:37.281576 140409914992384 hlog.py:24] # --wug_count=2
I0105 12:10:37.281605 140409914992384 hlog.py:24] # --nocompute_adjacency
I0105 12:10:37.281635 140409914992384 hlog.py:24] # --semparse_split=query
I0105 12:10:37.281665 140409914992384 hlog.py:24] # --semparse_dataset=/data/jda/text2sql-data/data/non-sql-data/geography-logic.txt
I0105 12:10:37.281694 140409914992384 hlog.py:24] # --semparse_mrl=logic
I0105 12:10:37.281724 140409914992384 hlog.py:24] # --val_fold=8
I0105 12:10:37.281753 140409914992384 hlog.py:24] # --test_fold=9
I0105 12:10:37.281782 140409914992384 hlog.py:24] # --n_emb=64
I0105 12:10:37.281812 140409914992384 hlog.py:24] # --n_enc=512
I0105 12:10:37.281841 140409914992384 hlog.py:24] # --dropout=0.5
I0105 12:10:37.281871 140409914992384 hlog.py:24] # --copy_sup
I0105 12:10:37.281900 140409914992384 hlog.py:24] # --n_epochs=150
I0105 12:10:37.281929 140409914992384 hlog.py:24] # --n_epoch_batches=32
I0105 12:10:37.281959 140409914992384 hlog.py:24] # --n_batch=64
I0105 12:10:37.281988 140409914992384 hlog.py:24] # --lr=0.001
I0105 12:10:37.282017 140409914992384 hlog.py:24] # --clip=1.0
I0105 12:10:37.282047 140409914992384 hlog.py:24] # --sched_factor=0.5
I0105 12:10:37.282076 140409914992384 hlog.py:24] # --norun_with_pdb
I0105 12:10:37.282105 140409914992384 hlog.py:24] # --nopdb_post_mortem
I0105 12:10:37.282135 140409914992384 hlog.py:24] # --norun_with_profiling
I0105 12:10:37.282164 140409914992384 hlog.py:24] # --use_cprofile_for_profiling
I0105 12:10:37.282193 140409914992384 hlog.py:24] # --noonly_check_args
I0105 12:10:37.282223 140409914992384 hlog.py:24] # --aug_ratio=0.0
I0105 12:10:37.282253 140409914992384 hlog.py:24] # --noinvert
I0105 12:10:37.282283 140409914992384 hlog.py:24] # --nohelp
I0105 12:10:37.282312 140409914992384 hlog.py:24] # --nohelp
I0105 12:10:37.282341 140409914992384 hlog.py:24] # --nohelpshort
I0105 12:10:37.282371 140409914992384 hlog.py:24] # --nohelpfull
I0105 12:10:37.282400 140409914992384 hlog.py:24] # --nohelpxml
I0105 12:10:37.282430 140409914992384 hlog.py:24] # 
I0105 12:10:37.294742 140409914992384 hlog.py:32] train 691
I0105 12:10:37.294842 140409914992384 hlog.py:32] aug 0
I0105 12:10:53.196578 140409914992384 hlog.py:32] train/00000/loss 3.2900
I0105 12:11:02.674127 140409914992384 hlog.py:32] train/00000/eval_train/acc 0.0000
I0105 12:11:04.470579 140409914992384 hlog.py:32] train/00000/eval_val/acc 0.0000
I0105 12:11:06.447187 140409914992384 hlog.py:32] train/00000/eval_test/acc 0.0000
I0105 12:11:06.447614 140409914992384 hlog.py:18] train/00000{26.93s}
I0105 12:11:32.232169 140409914992384 hlog.py:32] train/00001/loss 1.1467
I0105 12:11:34.973950 140409914992384 hlog.py:32] train/00001/eval_train/acc 0.0000
I0105 12:11:35.453585 140409914992384 hlog.py:32] train/00001/eval_val/acc 0.0000
I0105 12:11:35.883586 140409914992384 hlog.py:32] train/00001/eval_test/acc 0.0000
I0105 12:11:35.883935 140409914992384 hlog.py:18] train/00001{29.44s}
I0105 12:12:08.162157 140409914992384 hlog.py:32] train/00002/loss 0.7377
I0105 12:12:16.809720 140409914992384 hlog.py:32] train/00002/eval_train/acc 0.0040
I0105 12:12:17.994468 140409914992384 hlog.py:32] train/00002/eval_val/acc 0.0000
I0105 12:12:18.824154 140409914992384 hlog.py:32] train/00002/eval_test/acc 0.0376
I0105 12:12:18.824633 140409914992384 hlog.py:18] train/00002{42.94s}
I0105 12:12:42.841735 140409914992384 hlog.py:32] train/00003/loss 0.5622
I0105 12:12:54.469582 140409914992384 hlog.py:32] train/00003/eval_train/acc 0.0150
I0105 12:12:56.431982 140409914992384 hlog.py:32] train/00003/eval_val/acc 0.0000
I0105 12:12:58.241313 140409914992384 hlog.py:32] train/00003/eval_test/acc 0.1505
I0105 12:12:58.241698 140409914992384 hlog.py:18] train/00003{39.42s}
I0105 12:13:27.668723 140409914992384 hlog.py:32] train/00004/loss 0.5172
I0105 12:13:38.459220 140409914992384 hlog.py:32] train/00004/eval_train/acc 0.0510
I0105 12:13:40.472176 140409914992384 hlog.py:32] train/00004/eval_val/acc 0.0068
I0105 12:13:42.335939 140409914992384 hlog.py:32] train/00004/eval_test/acc 0.0108
I0105 12:13:42.336447 140409914992384 hlog.py:18] train/00004{44.09s}
I0105 12:14:09.776830 140409914992384 hlog.py:32] train/00005/loss 0.4303
I0105 12:14:18.823141 140409914992384 hlog.py:32] train/00005/eval_train/acc 0.1230
I0105 12:14:20.084583 140409914992384 hlog.py:32] train/00005/eval_val/acc 0.0000
I0105 12:14:21.322432 140409914992384 hlog.py:32] train/00005/eval_test/acc 0.0753
I0105 12:14:21.322903 140409914992384 hlog.py:18] train/00005{38.99s}
I0105 12:14:48.755342 140409914992384 hlog.py:32] train/00006/loss 0.3530
I0105 12:14:53.899672 140409914992384 hlog.py:32] train/00006/eval_train/acc 0.1750
I0105 12:14:54.672590 140409914992384 hlog.py:32] train/00006/eval_val/acc 0.0541
I0105 12:14:55.518683 140409914992384 hlog.py:32] train/00006/eval_test/acc 0.0323
I0105 12:14:55.519122 140409914992384 hlog.py:18] train/00006{34.20s}
I0105 12:15:20.202817 140409914992384 hlog.py:32] train/00007/loss 0.3166
I0105 12:15:26.898963 140409914992384 hlog.py:32] train/00007/eval_train/acc 0.3170
I0105 12:15:28.551028 140409914992384 hlog.py:32] train/00007/eval_val/acc 0.3041
I0105 12:15:29.259254 140409914992384 hlog.py:32] train/00007/eval_test/acc 0.0376
I0105 12:15:29.259618 140409914992384 hlog.py:18] train/00007{33.74s}
I0105 12:15:59.237757 140409914992384 hlog.py:32] train/00008/loss 0.2954
I0105 12:16:07.282179 140409914992384 hlog.py:32] train/00008/eval_train/acc 0.3750
I0105 12:16:08.876207 140409914992384 hlog.py:32] train/00008/eval_val/acc 0.3311
I0105 12:16:10.485859 140409914992384 hlog.py:32] train/00008/eval_test/acc 0.1075
I0105 12:16:10.486398 140409914992384 hlog.py:18] train/00008{41.23s}
I0105 12:16:38.977865 140409914992384 hlog.py:32] train/00009/loss 0.2329
I0105 12:16:48.207975 140409914992384 hlog.py:32] train/00009/eval_train/acc 0.3720
I0105 12:16:49.535431 140409914992384 hlog.py:32] train/00009/eval_val/acc 0.3243
I0105 12:16:50.644878 140409914992384 hlog.py:32] train/00009/eval_test/acc 0.0968
I0105 12:16:50.745235 140409914992384 hlog.py:18] train/00009{40.26s}
I0105 12:17:16.291693 140409914992384 hlog.py:32] train/00010/loss 0.1945
I0105 12:17:25.810410 140409914992384 hlog.py:32] train/00010/eval_train/acc 0.4410
I0105 12:17:27.293986 140409914992384 hlog.py:32] train/00010/eval_val/acc 0.4932
I0105 12:17:27.981159 140409914992384 hlog.py:32] train/00010/eval_test/acc 0.1398
I0105 12:17:27.981595 140409914992384 hlog.py:18] train/00010{37.24s}
I0105 12:17:53.735786 140409914992384 hlog.py:32] train/00011/loss 0.1901
I0105 12:17:57.635244 140409914992384 hlog.py:32] train/00011/eval_train/acc 0.4910
I0105 12:17:58.218976 140409914992384 hlog.py:32] train/00011/eval_val/acc 0.4730
I0105 12:17:58.827925 140409914992384 hlog.py:32] train/00011/eval_test/acc 0.1667
I0105 12:17:58.828299 140409914992384 hlog.py:18] train/00011{30.85s}
I0105 12:18:26.155877 140409914992384 hlog.py:32] train/00012/loss 0.1800
I0105 12:18:33.955080 140409914992384 hlog.py:32] train/00012/eval_train/acc 0.5280
I0105 12:18:35.019946 140409914992384 hlog.py:32] train/00012/eval_val/acc 0.5068
I0105 12:18:36.293553 140409914992384 hlog.py:32] train/00012/eval_test/acc 0.2957
I0105 12:18:36.294115 140409914992384 hlog.py:18] train/00012{37.47s}
I0105 12:19:04.151314 140409914992384 hlog.py:32] train/00013/loss 0.1550
I0105 12:19:09.339772 140409914992384 hlog.py:32] train/00013/eval_train/acc 0.6700
I0105 12:19:10.115950 140409914992384 hlog.py:32] train/00013/eval_val/acc 0.7162
I0105 12:19:10.945205 140409914992384 hlog.py:32] train/00013/eval_test/acc 0.2258
I0105 12:19:10.945584 140409914992384 hlog.py:18] train/00013{34.65s}
I0105 12:19:36.055387 140409914992384 hlog.py:32] train/00014/loss 0.1201
I0105 12:19:41.273273 140409914992384 hlog.py:32] train/00014/eval_train/acc 0.6750
I0105 12:19:41.973040 140409914992384 hlog.py:32] train/00014/eval_val/acc 0.7500
I0105 12:19:42.818382 140409914992384 hlog.py:32] train/00014/eval_test/acc 0.3763
I0105 12:19:42.818732 140409914992384 hlog.py:18] train/00014{31.87s}
I0105 12:20:07.971872 140409914992384 hlog.py:32] train/00015/loss 0.1096
I0105 12:20:12.471013 140409914992384 hlog.py:32] train/00015/eval_train/acc 0.6780
I0105 12:20:13.219996 140409914992384 hlog.py:32] train/00015/eval_val/acc 0.7162
I0105 12:20:13.906064 140409914992384 hlog.py:32] train/00015/eval_test/acc 0.3441
I0105 12:20:13.906442 140409914992384 hlog.py:18] train/00015{31.09s}
I0105 12:20:39.244344 140409914992384 hlog.py:32] train/00016/loss 0.1076
I0105 12:20:43.907132 140409914992384 hlog.py:32] train/00016/eval_train/acc 0.7360
I0105 12:20:44.527470 140409914992384 hlog.py:32] train/00016/eval_val/acc 0.7568
I0105 12:20:45.257829 140409914992384 hlog.py:32] train/00016/eval_test/acc 0.3387
I0105 12:20:45.258341 140409914992384 hlog.py:18] train/00016{31.35s}
I0105 12:21:11.747494 140409914992384 hlog.py:32] train/00017/loss 0.1076
I0105 12:21:16.999757 140409914992384 hlog.py:32] train/00017/eval_train/acc 0.7580
I0105 12:21:17.787804 140409914992384 hlog.py:32] train/00017/eval_val/acc 0.7500
I0105 12:21:18.479492 140409914992384 hlog.py:32] train/00017/eval_test/acc 0.4247
I0105 12:21:18.480032 140409914992384 hlog.py:18] train/00017{33.22s}
I0105 12:21:44.793173 140409914992384 hlog.py:32] train/00018/loss 0.1407
I0105 12:21:49.445932 140409914992384 hlog.py:32] train/00018/eval_train/acc 0.7330
I0105 12:21:50.215917 140409914992384 hlog.py:32] train/00018/eval_val/acc 0.8176
I0105 12:21:51.002545 140409914992384 hlog.py:32] train/00018/eval_test/acc 0.4301
I0105 12:21:51.003080 140409914992384 hlog.py:18] train/00018{32.52s}
I0105 12:22:16.682475 140409914992384 hlog.py:32] train/00019/loss 0.1037
I0105 12:22:22.316423 140409914992384 hlog.py:32] train/00019/eval_train/acc 0.7570
I0105 12:22:23.047031 140409914992384 hlog.py:32] train/00019/eval_val/acc 0.7973
I0105 12:22:23.832026 140409914992384 hlog.py:32] train/00019/eval_test/acc 0.4032
I0105 12:22:23.850799 140409914992384 hlog.py:18] train/00019{32.85s}
I0105 12:22:50.525116 140409914992384 hlog.py:32] train/00020/loss 0.0940
I0105 12:22:57.844425 140409914992384 hlog.py:32] train/00020/eval_train/acc 0.7190
I0105 12:22:58.999071 140409914992384 hlog.py:32] train/00020/eval_val/acc 0.7568
I0105 12:22:59.782902 140409914992384 hlog.py:32] train/00020/eval_test/acc 0.3925
I0105 12:22:59.783237 140409914992384 hlog.py:18] train/00020{35.93s}
I0105 12:23:25.576132 140409914992384 hlog.py:32] train/00021/loss 0.0945
I0105 12:23:29.828880 140409914992384 hlog.py:32] train/00021/eval_train/acc 0.8150
I0105 12:23:30.592914 140409914992384 hlog.py:32] train/00021/eval_val/acc 0.8176
I0105 12:23:31.400590 140409914992384 hlog.py:32] train/00021/eval_test/acc 0.4247
I0105 12:23:31.401027 140409914992384 hlog.py:18] train/00021{31.62s}
I0105 12:23:56.747791 140409914992384 hlog.py:32] train/00022/loss 0.0929
I0105 12:24:01.874268 140409914992384 hlog.py:32] train/00022/eval_train/acc 0.7900
I0105 12:24:02.615157 140409914992384 hlog.py:32] train/00022/eval_val/acc 0.8649
I0105 12:24:03.397958 140409914992384 hlog.py:32] train/00022/eval_test/acc 0.4086
I0105 12:24:03.398477 140409914992384 hlog.py:18] train/00022{32.00s}
I0105 12:24:32.453321 140409914992384 hlog.py:32] train/00023/loss 0.0781
I0105 12:24:37.535924 140409914992384 hlog.py:32] train/00023/eval_train/acc 0.8570
I0105 12:24:38.272757 140409914992384 hlog.py:32] train/00023/eval_val/acc 0.8851
I0105 12:24:39.084727 140409914992384 hlog.py:32] train/00023/eval_test/acc 0.4140
I0105 12:24:39.085087 140409914992384 hlog.py:18] train/00023{35.69s}
I0105 12:25:07.586767 140409914992384 hlog.py:32] train/00024/loss 0.0724
I0105 12:25:12.690255 140409914992384 hlog.py:32] train/00024/eval_train/acc 0.8620
I0105 12:25:13.583897 140409914992384 hlog.py:32] train/00024/eval_val/acc 0.8919
I0105 12:25:14.333009 140409914992384 hlog.py:32] train/00024/eval_test/acc 0.5753
I0105 12:25:14.333518 140409914992384 hlog.py:18] train/00024{35.25s}
I0105 12:25:42.510746 140409914992384 hlog.py:32] train/00025/loss 0.0705
I0105 12:25:48.152616 140409914992384 hlog.py:32] train/00025/eval_train/acc 0.8420
I0105 12:25:48.904517 140409914992384 hlog.py:32] train/00025/eval_val/acc 0.8716
I0105 12:25:50.255083 140409914992384 hlog.py:32] train/00025/eval_test/acc 0.3656
I0105 12:25:50.255613 140409914992384 hlog.py:18] train/00025{35.92s}
I0105 12:26:18.572966 140409914992384 hlog.py:32] train/00026/loss 0.0579
I0105 12:26:23.538044 140409914992384 hlog.py:32] train/00026/eval_train/acc 0.8460
I0105 12:26:24.421034 140409914992384 hlog.py:32] train/00026/eval_val/acc 0.8581
I0105 12:26:25.196244 140409914992384 hlog.py:32] train/00026/eval_test/acc 0.4516
I0105 12:26:25.196588 140409914992384 hlog.py:18] train/00026{34.94s}
I0105 12:26:48.849593 140409914992384 hlog.py:32] train/00027/loss 0.0482
I0105 12:26:51.934660 140409914992384 hlog.py:32] train/00027/eval_train/acc 0.8760
I0105 12:26:52.332133 140409914992384 hlog.py:32] train/00027/eval_val/acc 0.8851
I0105 12:26:52.772979 140409914992384 hlog.py:32] train/00027/eval_test/acc 0.4516
I0105 12:26:52.773307 140409914992384 hlog.py:18] train/00027{27.58s}
I0105 12:27:07.185931 140409914992384 hlog.py:32] train/00028/loss 0.0442
I0105 12:27:10.031272 140409914992384 hlog.py:32] train/00028/eval_train/acc 0.8940
I0105 12:27:10.432620 140409914992384 hlog.py:32] train/00028/eval_val/acc 0.9189
I0105 12:27:10.890363 140409914992384 hlog.py:32] train/00028/eval_test/acc 0.4247
I0105 12:27:10.890695 140409914992384 hlog.py:18] train/00028{18.12s}
I0105 12:27:26.162505 140409914992384 hlog.py:32] train/00029/loss 0.0505
I0105 12:27:29.873306 140409914992384 hlog.py:32] train/00029/eval_train/acc 0.9170
I0105 12:27:30.272358 140409914992384 hlog.py:32] train/00029/eval_val/acc 0.9392
I0105 12:27:30.697825 140409914992384 hlog.py:32] train/00029/eval_test/acc 0.4785
I0105 12:27:30.715648 140409914992384 hlog.py:18] train/00029{19.82s}
I0105 12:27:45.214332 140409914992384 hlog.py:32] train/00030/loss 0.0435
I0105 12:27:48.201708 140409914992384 hlog.py:32] train/00030/eval_train/acc 0.9320
I0105 12:27:48.612642 140409914992384 hlog.py:32] train/00030/eval_val/acc 0.9392
I0105 12:27:49.055478 140409914992384 hlog.py:32] train/00030/eval_test/acc 0.4946
I0105 12:27:49.055800 140409914992384 hlog.py:18] train/00030{18.34s}
I0105 12:28:03.197204 140409914992384 hlog.py:32] train/00031/loss 0.0449
I0105 12:28:06.041946 140409914992384 hlog.py:32] train/00031/eval_train/acc 0.9170
I0105 12:28:06.458871 140409914992384 hlog.py:32] train/00031/eval_val/acc 0.9189
I0105 12:28:06.886824 140409914992384 hlog.py:32] train/00031/eval_test/acc 0.4785
I0105 12:28:06.887145 140409914992384 hlog.py:18] train/00031{17.83s}
I0105 12:28:22.760120 140409914992384 hlog.py:32] train/00032/loss 0.0551
I0105 12:28:25.554469 140409914992384 hlog.py:32] train/00032/eval_train/acc 0.8810
I0105 12:28:25.973976 140409914992384 hlog.py:32] train/00032/eval_val/acc 0.8851
I0105 12:28:26.382875 140409914992384 hlog.py:32] train/00032/eval_test/acc 0.4624
I0105 12:28:26.383216 140409914992384 hlog.py:18] train/00032{19.50s}
I0105 12:28:42.733686 140409914992384 hlog.py:32] train/00033/loss 0.0533
I0105 12:28:45.461291 140409914992384 hlog.py:32] train/00033/eval_train/acc 0.9020
I0105 12:28:45.891024 140409914992384 hlog.py:32] train/00033/eval_val/acc 0.9392
I0105 12:28:46.330143 140409914992384 hlog.py:32] train/00033/eval_test/acc 0.4785
I0105 12:28:46.330458 140409914992384 hlog.py:18] train/00033{19.95s}
I0105 12:29:00.213948 140409914992384 hlog.py:32] train/00034/loss 0.0521
I0105 12:29:03.223307 140409914992384 hlog.py:32] train/00034/eval_train/acc 0.8950
I0105 12:29:03.671402 140409914992384 hlog.py:32] train/00034/eval_val/acc 0.9122
I0105 12:29:04.127512 140409914992384 hlog.py:32] train/00034/eval_test/acc 0.4355
I0105 12:29:04.127803 140409914992384 hlog.py:18] train/00034{17.80s}
I0105 12:29:18.012421 140409914992384 hlog.py:32] train/00035/loss 0.0407
I0105 12:29:20.555914 140409914992384 hlog.py:32] train/00035/eval_train/acc 0.9280
I0105 12:29:20.952464 140409914992384 hlog.py:32] train/00035/eval_val/acc 0.9595
I0105 12:29:21.373833 140409914992384 hlog.py:32] train/00035/eval_test/acc 0.4892
I0105 12:29:21.374149 140409914992384 hlog.py:18] train/00035{17.25s}
I0105 12:29:37.419080 140409914992384 hlog.py:32] train/00036/loss 0.0436
I0105 12:29:40.104226 140409914992384 hlog.py:32] train/00036/eval_train/acc 0.9270
I0105 12:29:40.534199 140409914992384 hlog.py:32] train/00036/eval_val/acc 0.9527
I0105 12:29:40.979727 140409914992384 hlog.py:32] train/00036/eval_test/acc 0.4462
I0105 12:29:40.980046 140409914992384 hlog.py:18] train/00036{19.61s}
I0105 12:29:54.439860 140409914992384 hlog.py:32] train/00037/loss 0.0541
I0105 12:29:57.896035 140409914992384 hlog.py:32] train/00037/eval_train/acc 0.9160
I0105 12:29:58.340520 140409914992384 hlog.py:32] train/00037/eval_val/acc 0.9189
I0105 12:29:58.799170 140409914992384 hlog.py:32] train/00037/eval_test/acc 0.4839
I0105 12:29:58.799498 140409914992384 hlog.py:18] train/00037{17.82s}
I0105 12:30:13.567613 140409914992384 hlog.py:32] train/00038/loss 0.0621
I0105 12:30:16.448389 140409914992384 hlog.py:32] train/00038/eval_train/acc 0.8530
I0105 12:30:16.876533 140409914992384 hlog.py:32] train/00038/eval_val/acc 0.8514
I0105 12:30:17.288616 140409914992384 hlog.py:32] train/00038/eval_test/acc 0.4355
I0105 12:30:17.288933 140409914992384 hlog.py:18] train/00038{18.49s}
I0105 12:30:32.121650 140409914992384 hlog.py:32] train/00039/loss 0.0524
I0105 12:30:34.663561 140409914992384 hlog.py:32] train/00039/eval_train/acc 0.9120
I0105 12:30:35.075431 140409914992384 hlog.py:32] train/00039/eval_val/acc 0.9189
I0105 12:30:35.512433 140409914992384 hlog.py:32] train/00039/eval_test/acc 0.4785
I0105 12:30:35.530706 140409914992384 hlog.py:18] train/00039{18.24s}
I0105 12:30:50.008135 140409914992384 hlog.py:32] train/00040/loss 0.0413
I0105 12:30:52.866107 140409914992384 hlog.py:32] train/00040/eval_train/acc 0.9310
I0105 12:30:53.278419 140409914992384 hlog.py:32] train/00040/eval_val/acc 0.9527
I0105 12:30:53.697864 140409914992384 hlog.py:32] train/00040/eval_test/acc 0.4462
I0105 12:30:53.698186 140409914992384 hlog.py:18] train/00040{18.17s}
I0105 12:31:08.855634 140409914992384 hlog.py:32] train/00041/loss 0.0346
I0105 12:31:12.250412 140409914992384 hlog.py:32] train/00041/eval_train/acc 0.9210
I0105 12:31:12.788395 140409914992384 hlog.py:32] train/00041/eval_val/acc 0.9189
I0105 12:31:13.290278 140409914992384 hlog.py:32] train/00041/eval_test/acc 0.4570
I0105 12:31:13.290670 140409914992384 hlog.py:18] train/00041{19.59s}
I0105 12:31:35.877223 140409914992384 hlog.py:32] train/00042/loss 0.0457
I0105 12:31:40.852488 140409914992384 hlog.py:32] train/00042/eval_train/acc 0.9490
I0105 12:31:41.813458 140409914992384 hlog.py:32] train/00042/eval_val/acc 0.9459
I0105 12:31:42.542016 140409914992384 hlog.py:32] train/00042/eval_test/acc 0.4677
I0105 12:31:42.542640 140409914992384 hlog.py:18] train/00042{29.25s}
I0105 12:32:10.107838 140409914992384 hlog.py:32] train/00043/loss 0.0282
I0105 12:32:15.113273 140409914992384 hlog.py:32] train/00043/eval_train/acc 0.9590
I0105 12:32:15.760890 140409914992384 hlog.py:32] train/00043/eval_val/acc 0.9392
I0105 12:32:16.436634 140409914992384 hlog.py:32] train/00043/eval_test/acc 0.4677
I0105 12:32:16.437239 140409914992384 hlog.py:18] train/00043{33.89s}
I0105 12:32:42.827282 140409914992384 hlog.py:32] train/00044/loss 0.0454
I0105 12:32:47.233415 140409914992384 hlog.py:32] train/00044/eval_train/acc 0.9490
I0105 12:32:47.947875 140409914992384 hlog.py:32] train/00044/eval_val/acc 0.9189
I0105 12:32:48.645415 140409914992384 hlog.py:32] train/00044/eval_test/acc 0.4946
I0105 12:32:48.645825 140409914992384 hlog.py:18] train/00044{32.21s}
I0105 12:33:14.698323 140409914992384 hlog.py:32] train/00045/loss 0.0337
I0105 12:33:20.769265 140409914992384 hlog.py:32] train/00045/eval_train/acc 0.9180
I0105 12:33:21.473996 140409914992384 hlog.py:32] train/00045/eval_val/acc 0.9189
I0105 12:33:22.144316 140409914992384 hlog.py:32] train/00045/eval_test/acc 0.4462
I0105 12:33:22.144654 140409914992384 hlog.py:18] train/00045{33.50s}
I0105 12:33:51.806258 140409914992384 hlog.py:32] train/00046/loss 0.0401
I0105 12:33:56.257539 140409914992384 hlog.py:32] train/00046/eval_train/acc 0.9380
I0105 12:33:56.986500 140409914992384 hlog.py:32] train/00046/eval_val/acc 0.9392
I0105 12:33:57.693747 140409914992384 hlog.py:32] train/00046/eval_test/acc 0.4785
I0105 12:33:57.694200 140409914992384 hlog.py:18] train/00046{35.55s}
I0105 12:34:23.662386 140409914992384 hlog.py:32] train/00047/loss 0.0282
I0105 12:34:28.384409 140409914992384 hlog.py:32] train/00047/eval_train/acc 0.9790
I0105 12:34:29.089853 140409914992384 hlog.py:32] train/00047/eval_val/acc 0.9730
I0105 12:34:30.001877 140409914992384 hlog.py:32] train/00047/eval_test/acc 0.4946
I0105 12:34:30.002236 140409914992384 hlog.py:18] train/00047{32.31s}
I0105 12:34:55.157064 140409914992384 hlog.py:32] train/00048/loss 0.0224
I0105 12:34:59.373524 140409914992384 hlog.py:32] train/00048/eval_train/acc 0.9810
I0105 12:35:00.141432 140409914992384 hlog.py:32] train/00048/eval_val/acc 0.9865
I0105 12:35:00.804832 140409914992384 hlog.py:32] train/00048/eval_test/acc 0.4946
I0105 12:35:00.805433 140409914992384 hlog.py:18] train/00048{30.80s}
I0105 12:35:26.890859 140409914992384 hlog.py:32] train/00049/loss 0.0206
I0105 12:35:32.769077 140409914992384 hlog.py:32] train/00049/eval_train/acc 0.9790
I0105 12:35:33.558223 140409914992384 hlog.py:32] train/00049/eval_val/acc 0.9932
I0105 12:35:34.327217 140409914992384 hlog.py:32] train/00049/eval_test/acc 0.4839
I0105 12:35:34.346701 140409914992384 hlog.py:18] train/00049{33.54s}
I0105 12:36:02.264558 140409914992384 hlog.py:32] train/00050/loss 0.0188
I0105 12:36:07.099990 140409914992384 hlog.py:32] train/00050/eval_train/acc 0.9880
I0105 12:36:07.880286 140409914992384 hlog.py:32] train/00050/eval_val/acc 1.0000
I0105 12:36:08.544157 140409914992384 hlog.py:32] train/00050/eval_test/acc 0.5000
I0105 12:36:08.544684 140409914992384 hlog.py:18] train/00050{34.20s}
I0105 12:36:34.524602 140409914992384 hlog.py:32] train/00051/loss 0.0167
I0105 12:36:39.491071 140409914992384 hlog.py:32] train/00051/eval_train/acc 0.9870
I0105 12:36:40.205683 140409914992384 hlog.py:32] train/00051/eval_val/acc 0.9932
I0105 12:36:40.998797 140409914992384 hlog.py:32] train/00051/eval_test/acc 0.4946
I0105 12:36:40.999318 140409914992384 hlog.py:18] train/00051{32.45s}
I0105 12:37:07.128894 140409914992384 hlog.py:32] train/00052/loss 0.0155
I0105 12:37:11.807963 140409914992384 hlog.py:32] train/00052/eval_train/acc 0.9860
I0105 12:37:12.522782 140409914992384 hlog.py:32] train/00052/eval_val/acc 0.9865
I0105 12:37:13.168538 140409914992384 hlog.py:32] train/00052/eval_test/acc 0.4946
I0105 12:37:13.168979 140409914992384 hlog.py:18] train/00052{32.17s}
I0105 12:37:40.207053 140409914992384 hlog.py:32] train/00053/loss 0.0148
I0105 12:37:44.812526 140409914992384 hlog.py:32] train/00053/eval_train/acc 0.9890
I0105 12:37:45.579045 140409914992384 hlog.py:32] train/00053/eval_val/acc 1.0000
I0105 12:37:46.262847 140409914992384 hlog.py:32] train/00053/eval_test/acc 0.5269
I0105 12:37:46.263398 140409914992384 hlog.py:18] train/00053{33.09s}
I0105 12:38:10.961128 140409914992384 hlog.py:32] train/00054/loss 0.0138
I0105 12:38:15.629790 140409914992384 hlog.py:32] train/00054/eval_train/acc 0.9890
I0105 12:38:16.290991 140409914992384 hlog.py:32] train/00054/eval_val/acc 0.9932
I0105 12:38:17.070556 140409914992384 hlog.py:32] train/00054/eval_test/acc 0.5108
I0105 12:38:17.071007 140409914992384 hlog.py:18] train/00054{30.81s}
I0105 12:38:45.312271 140409914992384 hlog.py:32] train/00055/loss 0.0177
I0105 12:38:50.117735 140409914992384 hlog.py:32] train/00055/eval_train/acc 0.9880
I0105 12:38:50.835668 140409914992384 hlog.py:32] train/00055/eval_val/acc 0.9932
I0105 12:38:51.463913 140409914992384 hlog.py:32] train/00055/eval_test/acc 0.5000
I0105 12:38:51.464322 140409914992384 hlog.py:18] train/00055{34.39s}
I0105 12:39:16.803498 140409914992384 hlog.py:32] train/00056/loss 0.0136
I0105 12:39:21.647708 140409914992384 hlog.py:32] train/00056/eval_train/acc 0.9900
I0105 12:39:22.481609 140409914992384 hlog.py:32] train/00056/eval_val/acc 0.9865
I0105 12:39:23.112964 140409914992384 hlog.py:32] train/00056/eval_test/acc 0.5215
I0105 12:39:23.113313 140409914992384 hlog.py:18] train/00056{31.65s}
I0105 12:39:47.460957 140409914992384 hlog.py:32] train/00057/loss 0.0123
I0105 12:39:53.138011 140409914992384 hlog.py:32] train/00057/eval_train/acc 0.9830
I0105 12:39:53.894691 140409914992384 hlog.py:32] train/00057/eval_val/acc 1.0000
I0105 12:39:54.558911 140409914992384 hlog.py:32] train/00057/eval_test/acc 0.4785
I0105 12:39:54.559287 140409914992384 hlog.py:18] train/00057{31.45s}
I0105 12:40:22.770487 140409914992384 hlog.py:32] train/00058/loss 0.0131
I0105 12:40:27.727983 140409914992384 hlog.py:32] train/00058/eval_train/acc 0.9890
I0105 12:40:28.396872 140409914992384 hlog.py:32] train/00058/eval_val/acc 0.9797
I0105 12:40:29.123676 140409914992384 hlog.py:32] train/00058/eval_test/acc 0.4892
I0105 12:40:29.124184 140409914992384 hlog.py:18] train/00058{34.56s}
I0105 12:40:55.388548 140409914992384 hlog.py:32] train/00059/loss 0.0111
I0105 12:41:00.749429 140409914992384 hlog.py:32] train/00059/eval_train/acc 0.9940
I0105 12:41:01.436170 140409914992384 hlog.py:32] train/00059/eval_val/acc 1.0000
I0105 12:41:02.195473 140409914992384 hlog.py:32] train/00059/eval_test/acc 0.5161
I0105 12:41:02.214584 140409914992384 hlog.py:18] train/00059{33.09s}
I0105 12:41:26.819582 140409914992384 hlog.py:32] train/00060/loss 0.0094
I0105 12:41:31.636938 140409914992384 hlog.py:32] train/00060/eval_train/acc 0.9930
I0105 12:41:32.450433 140409914992384 hlog.py:32] train/00060/eval_val/acc 1.0000
I0105 12:41:33.214515 140409914992384 hlog.py:32] train/00060/eval_test/acc 0.4946
I0105 12:41:33.215042 140409914992384 hlog.py:18] train/00060{31.00s}
I0105 12:41:58.498243 140409914992384 hlog.py:32] train/00061/loss 0.0099
I0105 12:42:03.373534 140409914992384 hlog.py:32] train/00061/eval_train/acc 0.9910
I0105 12:42:04.132617 140409914992384 hlog.py:32] train/00061/eval_val/acc 0.9932
I0105 12:42:04.817172 140409914992384 hlog.py:32] train/00061/eval_test/acc 0.4785
I0105 12:42:04.817541 140409914992384 hlog.py:18] train/00061{31.60s}
I0105 12:42:28.472990 140409914992384 hlog.py:32] train/00062/loss 0.0089
I0105 12:42:32.620872 140409914992384 hlog.py:32] train/00062/eval_train/acc 0.9950
I0105 12:42:33.305494 140409914992384 hlog.py:32] train/00062/eval_val/acc 1.0000
I0105 12:42:33.947014 140409914992384 hlog.py:32] train/00062/eval_test/acc 0.4892
I0105 12:42:33.947410 140409914992384 hlog.py:18] train/00062{29.13s}
I0105 12:42:58.251407 140409914992384 hlog.py:32] train/00063/loss 0.0080
I0105 12:43:03.414064 140409914992384 hlog.py:32] train/00063/eval_train/acc 0.9970
I0105 12:43:04.131417 140409914992384 hlog.py:32] train/00063/eval_val/acc 1.0000
I0105 12:43:04.799403 140409914992384 hlog.py:32] train/00063/eval_test/acc 0.4892
I0105 12:43:04.799777 140409914992384 hlog.py:18] train/00063{30.85s}
I0105 12:43:32.691737 140409914992384 hlog.py:32] train/00064/loss 0.0086
I0105 12:43:37.664394 140409914992384 hlog.py:32] train/00064/eval_train/acc 0.9930
I0105 12:43:38.391276 140409914992384 hlog.py:32] train/00064/eval_val/acc 0.9865
I0105 12:43:39.120554 140409914992384 hlog.py:32] train/00064/eval_test/acc 0.4785
I0105 12:43:39.121161 140409914992384 hlog.py:18] train/00064{34.32s}
I0105 12:44:03.522626 140409914992384 hlog.py:32] train/00065/loss 0.0078
I0105 12:44:08.839276 140409914992384 hlog.py:32] train/00065/eval_train/acc 0.9950
I0105 12:44:09.509147 140409914992384 hlog.py:32] train/00065/eval_val/acc 1.0000
I0105 12:44:10.202283 140409914992384 hlog.py:32] train/00065/eval_test/acc 0.5000
I0105 12:44:10.202867 140409914992384 hlog.py:18] train/00065{31.08s}
I0105 12:44:35.675634 140409914992384 hlog.py:32] train/00066/loss 0.0086
I0105 12:44:40.502480 140409914992384 hlog.py:32] train/00066/eval_train/acc 0.9960
I0105 12:44:41.240478 140409914992384 hlog.py:32] train/00066/eval_val/acc 1.0000
I0105 12:44:41.947307 140409914992384 hlog.py:32] train/00066/eval_test/acc 0.4785
I0105 12:44:41.947940 140409914992384 hlog.py:18] train/00066{31.74s}
I0105 12:45:07.078383 140409914992384 hlog.py:32] train/00067/loss 0.0066
I0105 12:45:12.583855 140409914992384 hlog.py:32] train/00067/eval_train/acc 0.9940
I0105 12:45:13.325617 140409914992384 hlog.py:32] train/00067/eval_val/acc 1.0000
I0105 12:45:13.935333 140409914992384 hlog.py:32] train/00067/eval_test/acc 0.4946
I0105 12:45:13.935704 140409914992384 hlog.py:18] train/00067{31.99s}
I0105 12:45:38.897469 140409914992384 hlog.py:32] train/00068/loss 0.0067
I0105 12:45:43.770374 140409914992384 hlog.py:32] train/00068/eval_train/acc 0.9970
I0105 12:45:44.492887 140409914992384 hlog.py:32] train/00068/eval_val/acc 1.0000
I0105 12:45:45.186594 140409914992384 hlog.py:32] train/00068/eval_test/acc 0.4892
I0105 12:45:45.186931 140409914992384 hlog.py:18] train/00068{31.25s}
I0105 12:46:11.167330 140409914992384 hlog.py:32] train/00069/loss 0.0074
I0105 12:46:15.432533 140409914992384 hlog.py:32] train/00069/eval_train/acc 1.0000
I0105 12:46:16.068298 140409914992384 hlog.py:32] train/00069/eval_val/acc 1.0000
I0105 12:46:16.795468 140409914992384 hlog.py:32] train/00069/eval_test/acc 0.4946
I0105 12:46:16.818131 140409914992384 hlog.py:18] train/00069{31.63s}
I0105 12:46:45.248265 140409914992384 hlog.py:32] train/00070/loss 0.0070
I0105 12:46:49.730940 140409914992384 hlog.py:32] train/00070/eval_train/acc 0.9980
I0105 12:46:50.409847 140409914992384 hlog.py:32] train/00070/eval_val/acc 1.0000
I0105 12:46:51.078347 140409914992384 hlog.py:32] train/00070/eval_test/acc 0.5054
I0105 12:46:51.078774 140409914992384 hlog.py:18] train/00070{34.26s}
I0105 12:47:15.397883 140409914992384 hlog.py:32] train/00071/loss 0.0068
I0105 12:47:20.672189 140409914992384 hlog.py:32] train/00071/eval_train/acc 0.9970
I0105 12:47:21.352780 140409914992384 hlog.py:32] train/00071/eval_val/acc 0.9932
I0105 12:47:22.067300 140409914992384 hlog.py:32] train/00071/eval_test/acc 0.5000
I0105 12:47:22.067728 140409914992384 hlog.py:18] train/00071{30.99s}
I0105 12:47:49.432551 140409914992384 hlog.py:32] train/00072/loss 0.0060
I0105 12:47:54.028219 140409914992384 hlog.py:32] train/00072/eval_train/acc 0.9950
I0105 12:47:54.794336 140409914992384 hlog.py:32] train/00072/eval_val/acc 1.0000
I0105 12:47:55.533148 140409914992384 hlog.py:32] train/00072/eval_test/acc 0.5000
I0105 12:47:55.533623 140409914992384 hlog.py:18] train/00072{33.47s}
I0105 12:48:22.165834 140409914992384 hlog.py:32] train/00073/loss 0.0065
I0105 12:48:26.828076 140409914992384 hlog.py:32] train/00073/eval_train/acc 0.9940
I0105 12:48:27.575134 140409914992384 hlog.py:32] train/00073/eval_val/acc 0.9932
I0105 12:48:28.332206 140409914992384 hlog.py:32] train/00073/eval_test/acc 0.5000
I0105 12:48:28.332581 140409914992384 hlog.py:18] train/00073{32.80s}
I0105 12:48:54.152617 140409914992384 hlog.py:32] train/00074/loss 0.0069
I0105 12:48:58.729081 140409914992384 hlog.py:32] train/00074/eval_train/acc 0.9980
I0105 12:48:59.435740 140409914992384 hlog.py:32] train/00074/eval_val/acc 0.9932
I0105 12:49:00.170692 140409914992384 hlog.py:32] train/00074/eval_test/acc 0.4892
I0105 12:49:00.171128 140409914992384 hlog.py:18] train/00074{31.84s}
I0105 12:49:24.873932 140409914992384 hlog.py:32] train/00075/loss 0.0067
I0105 12:49:29.632364 140409914992384 hlog.py:32] train/00075/eval_train/acc 0.9990
I0105 12:49:30.307085 140409914992384 hlog.py:32] train/00075/eval_val/acc 1.0000
I0105 12:49:31.073301 140409914992384 hlog.py:32] train/00075/eval_test/acc 0.5000
I0105 12:49:31.073696 140409914992384 hlog.py:18] train/00075{30.90s}
I0105 12:49:55.490136 140409914992384 hlog.py:32] train/00076/loss 0.0057
I0105 12:50:00.097398 140409914992384 hlog.py:32] train/00076/eval_train/acc 0.9970
I0105 12:50:00.822730 140409914992384 hlog.py:32] train/00076/eval_val/acc 0.9932
I0105 12:50:01.516274 140409914992384 hlog.py:32] train/00076/eval_test/acc 0.5000
I0105 12:50:01.516942 140409914992384 hlog.py:18] train/00076{30.44s}
I0105 12:50:28.692776 140409914992384 hlog.py:32] train/00077/loss 0.0060
I0105 12:50:33.442147 140409914992384 hlog.py:32] train/00077/eval_train/acc 0.9940
I0105 12:50:34.164340 140409914992384 hlog.py:32] train/00077/eval_val/acc 0.9932
I0105 12:50:34.895870 140409914992384 hlog.py:32] train/00077/eval_test/acc 0.5000
I0105 12:50:34.896231 140409914992384 hlog.py:18] train/00077{33.38s}
I0105 12:51:00.951054 140409914992384 hlog.py:32] train/00078/loss 0.0060
I0105 12:51:06.108347 140409914992384 hlog.py:32] train/00078/eval_train/acc 0.9990
I0105 12:51:06.830996 140409914992384 hlog.py:32] train/00078/eval_val/acc 1.0000
I0105 12:51:07.576565 140409914992384 hlog.py:32] train/00078/eval_test/acc 0.4946
I0105 12:51:07.576913 140409914992384 hlog.py:18] train/00078{32.68s}
I0105 12:51:33.060908 140409914992384 hlog.py:32] train/00079/loss 0.0054
I0105 12:51:38.040096 140409914992384 hlog.py:32] train/00079/eval_train/acc 0.9960
I0105 12:51:38.802408 140409914992384 hlog.py:32] train/00079/eval_val/acc 0.9932
I0105 12:51:39.429065 140409914992384 hlog.py:32] train/00079/eval_test/acc 0.5000
I0105 12:51:39.448628 140409914992384 hlog.py:18] train/00079{31.87s}
I0105 12:52:04.550414 140409914992384 hlog.py:32] train/00080/loss 0.0054
I0105 12:52:09.530112 140409914992384 hlog.py:32] train/00080/eval_train/acc 0.9980
I0105 12:52:10.287894 140409914992384 hlog.py:32] train/00080/eval_val/acc 1.0000
I0105 12:52:11.028064 140409914992384 hlog.py:32] train/00080/eval_test/acc 0.5054
I0105 12:52:11.028487 140409914992384 hlog.py:18] train/00080{31.58s}
I0105 12:52:35.708914 140409914992384 hlog.py:32] train/00081/loss 0.0058
I0105 12:52:40.156311 140409914992384 hlog.py:32] train/00081/eval_train/acc 0.9970
I0105 12:52:40.820139 140409914992384 hlog.py:32] train/00081/eval_val/acc 0.9932
I0105 12:52:41.595024 140409914992384 hlog.py:32] train/00081/eval_test/acc 0.4946
I0105 12:52:41.595673 140409914992384 hlog.py:18] train/00081{30.57s}
I0105 12:53:05.731710 140409914992384 hlog.py:32] train/00082/loss 0.0057
I0105 12:53:10.244242 140409914992384 hlog.py:32] train/00082/eval_train/acc 0.9990
I0105 12:53:10.988393 140409914992384 hlog.py:32] train/00082/eval_val/acc 1.0000
I0105 12:53:11.679658 140409914992384 hlog.py:32] train/00082/eval_test/acc 0.5054
I0105 12:53:11.680016 140409914992384 hlog.py:18] train/00082{30.08s}
I0105 12:53:36.763406 140409914992384 hlog.py:32] train/00083/loss 0.0054
I0105 12:53:40.911286 140409914992384 hlog.py:32] train/00083/eval_train/acc 1.0000
I0105 12:53:41.585367 140409914992384 hlog.py:32] train/00083/eval_val/acc 1.0000
I0105 12:53:42.284923 140409914992384 hlog.py:32] train/00083/eval_test/acc 0.5054
I0105 12:53:42.285393 140409914992384 hlog.py:18] train/00083{30.61s}
I0105 12:54:09.069546 140409914992384 hlog.py:32] train/00084/loss 0.0060
I0105 12:54:13.676754 140409914992384 hlog.py:32] train/00084/eval_train/acc 1.0000
I0105 12:54:14.306570 140409914992384 hlog.py:32] train/00084/eval_val/acc 1.0000
I0105 12:54:15.055128 140409914992384 hlog.py:32] train/00084/eval_test/acc 0.5108
I0105 12:54:15.055510 140409914992384 hlog.py:18] train/00084{32.77s}
I0105 12:54:40.921845 140409914992384 hlog.py:32] train/00085/loss 0.0050
I0105 12:54:46.121287 140409914992384 hlog.py:32] train/00085/eval_train/acc 1.0000
I0105 12:54:46.850527 140409914992384 hlog.py:32] train/00085/eval_val/acc 1.0000
I0105 12:54:47.528818 140409914992384 hlog.py:32] train/00085/eval_test/acc 0.5108
I0105 12:54:47.529286 140409914992384 hlog.py:18] train/00085{32.47s}
I0105 12:55:14.578438 140409914992384 hlog.py:32] train/00086/loss 0.0056
I0105 12:55:19.844429 140409914992384 hlog.py:32] train/00086/eval_train/acc 0.9990
I0105 12:55:20.515597 140409914992384 hlog.py:32] train/00086/eval_val/acc 1.0000
I0105 12:55:21.249809 140409914992384 hlog.py:32] train/00086/eval_test/acc 0.5054
I0105 12:55:21.250335 140409914992384 hlog.py:18] train/00086{33.72s}
I0105 12:55:50.559455 140409914992384 hlog.py:32] train/00087/loss 0.0063
I0105 12:55:55.201958 140409914992384 hlog.py:32] train/00087/eval_train/acc 0.9980
I0105 12:55:55.950022 140409914992384 hlog.py:32] train/00087/eval_val/acc 0.9932
I0105 12:55:56.709446 140409914992384 hlog.py:32] train/00087/eval_test/acc 0.5054
I0105 12:55:56.709815 140409914992384 hlog.py:18] train/00087{35.46s}
I0105 12:56:24.132167 140409914992384 hlog.py:32] train/00088/loss 0.0052
I0105 12:56:28.946898 140409914992384 hlog.py:32] train/00088/eval_train/acc 0.9980
I0105 12:56:29.679180 140409914992384 hlog.py:32] train/00088/eval_val/acc 1.0000
I0105 12:56:30.401756 140409914992384 hlog.py:32] train/00088/eval_test/acc 0.5000
I0105 12:56:30.402111 140409914992384 hlog.py:18] train/00088{33.69s}
I0105 12:56:57.565241 140409914992384 hlog.py:32] train/00089/loss 0.0069
I0105 12:57:02.080579 140409914992384 hlog.py:32] train/00089/eval_train/acc 0.9990
I0105 12:57:02.783766 140409914992384 hlog.py:32] train/00089/eval_val/acc 1.0000
I0105 12:57:03.468924 140409914992384 hlog.py:32] train/00089/eval_test/acc 0.5108
I0105 12:57:03.488176 140409914992384 hlog.py:18] train/00089{33.09s}
I0105 12:57:29.753288 140409914992384 hlog.py:32] train/00090/loss 0.0057
I0105 12:57:34.609583 140409914992384 hlog.py:32] train/00090/eval_train/acc 0.9960
I0105 12:57:35.357915 140409914992384 hlog.py:32] train/00090/eval_val/acc 1.0000
I0105 12:57:36.094350 140409914992384 hlog.py:32] train/00090/eval_test/acc 0.5108
I0105 12:57:36.094768 140409914992384 hlog.py:18] train/00090{32.61s}
I0105 12:58:03.490953 140409914992384 hlog.py:32] train/00091/loss 0.0049
I0105 12:58:08.277714 140409914992384 hlog.py:32] train/00091/eval_train/acc 0.9990
I0105 12:58:08.956022 140409914992384 hlog.py:32] train/00091/eval_val/acc 1.0000
I0105 12:58:09.671163 140409914992384 hlog.py:32] train/00091/eval_test/acc 0.5108
I0105 12:58:09.671542 140409914992384 hlog.py:18] train/00091{33.58s}
I0105 12:58:39.282856 140409914992384 hlog.py:32] train/00092/loss 0.0056
I0105 12:58:43.875005 140409914992384 hlog.py:32] train/00092/eval_train/acc 1.0000
I0105 12:58:44.613647 140409914992384 hlog.py:32] train/00092/eval_val/acc 1.0000
I0105 12:58:45.329972 140409914992384 hlog.py:32] train/00092/eval_test/acc 0.5108
I0105 12:58:45.330357 140409914992384 hlog.py:18] train/00092{35.66s}
I0105 12:59:12.955576 140409914992384 hlog.py:32] train/00093/loss 0.0050
I0105 12:59:17.879642 140409914992384 hlog.py:32] train/00093/eval_train/acc 0.9970
I0105 12:59:18.582930 140409914992384 hlog.py:32] train/00093/eval_val/acc 1.0000
I0105 12:59:19.308363 140409914992384 hlog.py:32] train/00093/eval_test/acc 0.5054
I0105 12:59:19.308777 140409914992384 hlog.py:18] train/00093{33.98s}
I0105 12:59:46.786566 140409914992384 hlog.py:32] train/00094/loss 0.0050
I0105 12:59:51.279329 140409914992384 hlog.py:32] train/00094/eval_train/acc 0.9950
I0105 12:59:52.072958 140409914992384 hlog.py:32] train/00094/eval_val/acc 0.9932
I0105 12:59:52.711126 140409914992384 hlog.py:32] train/00094/eval_test/acc 0.5054
I0105 12:59:52.711572 140409914992384 hlog.py:18] train/00094{33.40s}
I0105 13:00:19.875373 140409914992384 hlog.py:32] train/00095/loss 0.0054
I0105 13:00:24.499386 140409914992384 hlog.py:32] train/00095/eval_train/acc 0.9970
I0105 13:00:25.192083 140409914992384 hlog.py:32] train/00095/eval_val/acc 1.0000
I0105 13:00:25.845621 140409914992384 hlog.py:32] train/00095/eval_test/acc 0.5054
I0105 13:00:25.845986 140409914992384 hlog.py:18] train/00095{33.13s}
I0105 13:00:51.185882 140409914992384 hlog.py:32] train/00096/loss 0.0047
I0105 13:00:56.227092 140409914992384 hlog.py:32] train/00096/eval_train/acc 0.9990
I0105 13:00:56.995954 140409914992384 hlog.py:32] train/00096/eval_val/acc 1.0000
I0105 13:00:57.726470 140409914992384 hlog.py:32] train/00096/eval_test/acc 0.5108
I0105 13:00:57.726869 140409914992384 hlog.py:18] train/00096{31.88s}
I0105 13:01:21.329473 140409914992384 hlog.py:32] train/00097/loss 0.0042
I0105 13:01:25.861042 140409914992384 hlog.py:32] train/00097/eval_train/acc 0.9990
I0105 13:01:26.517202 140409914992384 hlog.py:32] train/00097/eval_val/acc 1.0000
I0105 13:01:27.174851 140409914992384 hlog.py:32] train/00097/eval_test/acc 0.5108
I0105 13:01:27.175225 140409914992384 hlog.py:18] train/00097{29.45s}
I0105 13:01:52.050106 140409914992384 hlog.py:32] train/00098/loss 0.0051
I0105 13:01:56.393419 140409914992384 hlog.py:32] train/00098/eval_train/acc 0.9990
I0105 13:01:57.078704 140409914992384 hlog.py:32] train/00098/eval_val/acc 1.0000
I0105 13:01:57.731115 140409914992384 hlog.py:32] train/00098/eval_test/acc 0.5108
I0105 13:01:57.731498 140409914992384 hlog.py:18] train/00098{30.56s}
I0105 13:02:24.512836 140409914992384 hlog.py:32] train/00099/loss 0.0052
I0105 13:02:29.073552 140409914992384 hlog.py:32] train/00099/eval_train/acc 0.9970
I0105 13:02:29.759651 140409914992384 hlog.py:32] train/00099/eval_val/acc 1.0000
I0105 13:02:30.453864 140409914992384 hlog.py:32] train/00099/eval_test/acc 0.5000
I0105 13:02:30.473677 140409914992384 hlog.py:18] train/00099{32.74s}
I0105 13:02:55.842110 140409914992384 hlog.py:32] train/00100/loss 0.0045
I0105 13:03:00.685050 140409914992384 hlog.py:32] train/00100/eval_train/acc 1.0000
I0105 13:03:01.405474 140409914992384 hlog.py:32] train/00100/eval_val/acc 1.0000
I0105 13:03:02.125262 140409914992384 hlog.py:32] train/00100/eval_test/acc 0.5000
I0105 13:03:02.125632 140409914992384 hlog.py:18] train/00100{31.65s}
I0105 13:03:27.661572 140409914992384 hlog.py:32] train/00101/loss 0.0042
I0105 13:03:32.749253 140409914992384 hlog.py:32] train/00101/eval_train/acc 0.9980
I0105 13:03:33.438783 140409914992384 hlog.py:32] train/00101/eval_val/acc 1.0000
I0105 13:03:34.130164 140409914992384 hlog.py:32] train/00101/eval_test/acc 0.5000
I0105 13:03:34.130555 140409914992384 hlog.py:18] train/00101{32.00s}
I0105 13:03:58.597901 140409914992384 hlog.py:32] train/00102/loss 0.0044
I0105 13:04:03.757361 140409914992384 hlog.py:32] train/00102/eval_train/acc 0.9990
I0105 13:04:04.328835 140409914992384 hlog.py:32] train/00102/eval_val/acc 1.0000
I0105 13:04:05.057791 140409914992384 hlog.py:32] train/00102/eval_test/acc 0.5000
I0105 13:04:05.058217 140409914992384 hlog.py:18] train/00102{30.93s}
I0105 13:04:30.349593 140409914992384 hlog.py:32] train/00103/loss 0.0047
I0105 13:04:34.760321 140409914992384 hlog.py:32] train/00103/eval_train/acc 0.9950
I0105 13:04:35.420069 140409914992384 hlog.py:32] train/00103/eval_val/acc 1.0000
I0105 13:04:36.146332 140409914992384 hlog.py:32] train/00103/eval_test/acc 0.5000
I0105 13:04:36.146989 140409914992384 hlog.py:18] train/00103{31.09s}
I0105 13:05:01.917898 140409914992384 hlog.py:32] train/00104/loss 0.0045
I0105 13:05:06.956009 140409914992384 hlog.py:32] train/00104/eval_train/acc 0.9990
I0105 13:05:07.646623 140409914992384 hlog.py:32] train/00104/eval_val/acc 1.0000
I0105 13:05:08.353399 140409914992384 hlog.py:32] train/00104/eval_test/acc 0.4892
I0105 13:05:08.354062 140409914992384 hlog.py:18] train/00104{32.21s}
I0105 13:05:33.402865 140409914992384 hlog.py:32] train/00105/loss 0.0037
I0105 13:05:37.882919 140409914992384 hlog.py:32] train/00105/eval_train/acc 0.9980
I0105 13:05:38.585875 140409914992384 hlog.py:32] train/00105/eval_val/acc 1.0000
I0105 13:05:39.315770 140409914992384 hlog.py:32] train/00105/eval_test/acc 0.4892
I0105 13:05:39.316142 140409914992384 hlog.py:18] train/00105{30.96s}
I0105 13:06:05.994325 140409914992384 hlog.py:32] train/00106/loss 0.0045
I0105 13:06:11.299307 140409914992384 hlog.py:32] train/00106/eval_train/acc 0.9990
I0105 13:06:11.975909 140409914992384 hlog.py:32] train/00106/eval_val/acc 1.0000
I0105 13:06:12.682271 140409914992384 hlog.py:32] train/00106/eval_test/acc 0.4892
I0105 13:06:12.682638 140409914992384 hlog.py:18] train/00106{33.37s}
I0105 13:06:38.420388 140409914992384 hlog.py:32] train/00107/loss 0.0051
I0105 13:06:43.143620 140409914992384 hlog.py:32] train/00107/eval_train/acc 0.9970
I0105 13:06:43.940285 140409914992384 hlog.py:32] train/00107/eval_val/acc 1.0000
I0105 13:06:44.692061 140409914992384 hlog.py:32] train/00107/eval_test/acc 0.4946
I0105 13:06:44.692493 140409914992384 hlog.py:18] train/00107{32.01s}
I0105 13:07:11.111764 140409914992384 hlog.py:32] train/00108/loss 0.0045
I0105 13:07:15.776651 140409914992384 hlog.py:32] train/00108/eval_train/acc 1.0000
I0105 13:07:16.471412 140409914992384 hlog.py:32] train/00108/eval_val/acc 1.0000
I0105 13:07:17.260768 140409914992384 hlog.py:32] train/00108/eval_test/acc 0.4946
I0105 13:07:17.261177 140409914992384 hlog.py:18] train/00108{32.57s}
I0105 13:07:40.994684 140409914992384 hlog.py:32] train/00109/loss 0.0045
I0105 13:07:45.560435 140409914992384 hlog.py:32] train/00109/eval_train/acc 0.9990
I0105 13:07:46.276317 140409914992384 hlog.py:32] train/00109/eval_val/acc 1.0000
I0105 13:07:47.011624 140409914992384 hlog.py:32] train/00109/eval_test/acc 0.4946
I0105 13:07:47.034396 140409914992384 hlog.py:18] train/00109{29.77s}
I0105 13:08:14.481988 140409914992384 hlog.py:32] train/00110/loss 0.0071
I0105 13:08:19.356941 140409914992384 hlog.py:32] train/00110/eval_train/acc 0.9970
I0105 13:08:20.081512 140409914992384 hlog.py:32] train/00110/eval_val/acc 1.0000
I0105 13:08:20.818731 140409914992384 hlog.py:32] train/00110/eval_test/acc 0.4946
I0105 13:08:20.819202 140409914992384 hlog.py:18] train/00110{33.78s}
I0105 13:08:44.554355 140409914992384 hlog.py:32] train/00111/loss 0.0044
I0105 13:08:49.482362 140409914992384 hlog.py:32] train/00111/eval_train/acc 1.0000
I0105 13:08:50.228874 140409914992384 hlog.py:32] train/00111/eval_val/acc 1.0000
I0105 13:08:50.989140 140409914992384 hlog.py:32] train/00111/eval_test/acc 0.5000
I0105 13:08:50.989618 140409914992384 hlog.py:18] train/00111{30.17s}
I0105 13:09:17.837346 140409914992384 hlog.py:32] train/00112/loss 0.0047
I0105 13:09:22.650212 140409914992384 hlog.py:32] train/00112/eval_train/acc 1.0000
I0105 13:09:23.357711 140409914992384 hlog.py:32] train/00112/eval_val/acc 1.0000
I0105 13:09:24.101753 140409914992384 hlog.py:32] train/00112/eval_test/acc 0.5000
I0105 13:09:24.102122 140409914992384 hlog.py:18] train/00112{33.11s}
I0105 13:09:47.891275 140409914992384 hlog.py:32] train/00113/loss 0.0040
I0105 13:09:52.503973 140409914992384 hlog.py:32] train/00113/eval_train/acc 0.9990
I0105 13:09:53.245879 140409914992384 hlog.py:32] train/00113/eval_val/acc 1.0000
I0105 13:09:54.006809 140409914992384 hlog.py:32] train/00113/eval_test/acc 0.5000
I0105 13:09:54.007202 140409914992384 hlog.py:18] train/00113{29.90s}
I0105 13:10:20.438648 140409914992384 hlog.py:32] train/00114/loss 0.0048
I0105 13:10:25.411336 140409914992384 hlog.py:32] train/00114/eval_train/acc 1.0000
I0105 13:10:26.134319 140409914992384 hlog.py:32] train/00114/eval_val/acc 1.0000
I0105 13:10:26.835201 140409914992384 hlog.py:32] train/00114/eval_test/acc 0.5000
I0105 13:10:26.835575 140409914992384 hlog.py:18] train/00114{32.83s}
I0105 13:10:52.042573 140409914992384 hlog.py:32] train/00115/loss 0.0046
I0105 13:10:56.642412 140409914992384 hlog.py:32] train/00115/eval_train/acc 0.9990
I0105 13:10:57.350673 140409914992384 hlog.py:32] train/00115/eval_val/acc 1.0000
I0105 13:10:58.029578 140409914992384 hlog.py:32] train/00115/eval_test/acc 0.5000
I0105 13:10:58.030016 140409914992384 hlog.py:18] train/00115{31.19s}
I0105 13:11:24.891891 140409914992384 hlog.py:32] train/00116/loss 0.0043
I0105 13:11:29.483380 140409914992384 hlog.py:32] train/00116/eval_train/acc 1.0000
I0105 13:11:30.177721 140409914992384 hlog.py:32] train/00116/eval_val/acc 1.0000
I0105 13:11:30.929359 140409914992384 hlog.py:32] train/00116/eval_test/acc 0.5000
I0105 13:11:30.929742 140409914992384 hlog.py:18] train/00116{32.90s}
I0105 13:11:56.494141 140409914992384 hlog.py:32] train/00117/loss 0.0046
I0105 13:12:01.609434 140409914992384 hlog.py:32] train/00117/eval_train/acc 1.0000
I0105 13:12:02.341728 140409914992384 hlog.py:32] train/00117/eval_val/acc 1.0000
I0105 13:12:03.081933 140409914992384 hlog.py:32] train/00117/eval_test/acc 0.5000
I0105 13:12:03.082430 140409914992384 hlog.py:18] train/00117{32.15s}
I0105 13:12:29.198180 140409914992384 hlog.py:32] train/00118/loss 0.0041
I0105 13:12:33.763891 140409914992384 hlog.py:32] train/00118/eval_train/acc 1.0000
I0105 13:12:34.482725 140409914992384 hlog.py:32] train/00118/eval_val/acc 1.0000
I0105 13:12:35.162041 140409914992384 hlog.py:32] train/00118/eval_test/acc 0.5000
I0105 13:12:35.162439 140409914992384 hlog.py:18] train/00118{32.08s}
I0105 13:13:00.096600 140409914992384 hlog.py:32] train/00119/loss 0.0043
I0105 13:13:05.189367 140409914992384 hlog.py:32] train/00119/eval_train/acc 1.0000
I0105 13:13:05.917063 140409914992384 hlog.py:32] train/00119/eval_val/acc 1.0000
I0105 13:13:06.592895 140409914992384 hlog.py:32] train/00119/eval_test/acc 0.4946
I0105 13:13:06.614044 140409914992384 hlog.py:18] train/00119{31.45s}
I0105 13:13:33.262030 140409914992384 hlog.py:32] train/00120/loss 0.0040
I0105 13:13:38.116267 140409914992384 hlog.py:32] train/00120/eval_train/acc 0.9990
I0105 13:13:38.803161 140409914992384 hlog.py:32] train/00120/eval_val/acc 1.0000
I0105 13:13:39.466211 140409914992384 hlog.py:32] train/00120/eval_test/acc 0.4946
I0105 13:13:39.466555 140409914992384 hlog.py:18] train/00120{32.85s}
I0105 13:14:04.917431 140409914992384 hlog.py:32] train/00121/loss 0.0042
I0105 13:14:09.657241 140409914992384 hlog.py:32] train/00121/eval_train/acc 0.9980
I0105 13:14:10.365934 140409914992384 hlog.py:32] train/00121/eval_val/acc 1.0000
I0105 13:14:10.996050 140409914992384 hlog.py:32] train/00121/eval_test/acc 0.4946
I0105 13:14:10.996406 140409914992384 hlog.py:18] train/00121{31.53s}
I0105 13:14:37.371009 140409914992384 hlog.py:32] train/00122/loss 0.0044
I0105 13:14:42.401695 140409914992384 hlog.py:32] train/00122/eval_train/acc 0.9980
I0105 13:14:43.094557 140409914992384 hlog.py:32] train/00122/eval_val/acc 1.0000
I0105 13:14:43.807280 140409914992384 hlog.py:32] train/00122/eval_test/acc 0.5000
I0105 13:14:43.807714 140409914992384 hlog.py:18] train/00122{32.81s}
I0105 13:15:10.593364 140409914992384 hlog.py:32] train/00123/loss 0.0040
I0105 13:15:15.233666 140409914992384 hlog.py:32] train/00123/eval_train/acc 0.9990
I0105 13:15:15.974529 140409914992384 hlog.py:32] train/00123/eval_val/acc 1.0000
I0105 13:15:16.704239 140409914992384 hlog.py:32] train/00123/eval_test/acc 0.5000
I0105 13:15:16.704707 140409914992384 hlog.py:18] train/00123{32.90s}
I0105 13:15:42.060100 140409914992384 hlog.py:32] train/00124/loss 0.0045
I0105 13:15:47.262302 140409914992384 hlog.py:32] train/00124/eval_train/acc 0.9980
I0105 13:15:47.962970 140409914992384 hlog.py:32] train/00124/eval_val/acc 1.0000
I0105 13:15:48.645295 140409914992384 hlog.py:32] train/00124/eval_test/acc 0.5054
I0105 13:15:48.645656 140409914992384 hlog.py:18] train/00124{31.94s}
I0105 13:16:14.050744 140409914992384 hlog.py:32] train/00125/loss 0.0040
I0105 13:16:18.412628 140409914992384 hlog.py:32] train/00125/eval_train/acc 1.0000
I0105 13:16:19.112520 140409914992384 hlog.py:32] train/00125/eval_val/acc 1.0000
I0105 13:16:19.780118 140409914992384 hlog.py:32] train/00125/eval_test/acc 0.5000
I0105 13:16:19.780571 140409914992384 hlog.py:18] train/00125{31.13s}
I0105 13:16:43.374192 140409914992384 hlog.py:32] train/00126/loss 0.0042
I0105 13:16:47.523661 140409914992384 hlog.py:32] train/00126/eval_train/acc 0.9960
I0105 13:16:48.141254 140409914992384 hlog.py:32] train/00126/eval_val/acc 1.0000
I0105 13:16:48.781379 140409914992384 hlog.py:32] train/00126/eval_test/acc 0.5000
I0105 13:16:48.781762 140409914992384 hlog.py:18] train/00126{29.00s}
I0105 13:17:13.857288 140409914992384 hlog.py:32] train/00127/loss 0.0045
I0105 13:17:18.266550 140409914992384 hlog.py:32] train/00127/eval_train/acc 0.9990
I0105 13:17:18.903511 140409914992384 hlog.py:32] train/00127/eval_val/acc 1.0000
I0105 13:17:19.508945 140409914992384 hlog.py:32] train/00127/eval_test/acc 0.5000
I0105 13:17:19.509337 140409914992384 hlog.py:18] train/00127{30.73s}
I0105 13:17:42.636633 140409914992384 hlog.py:32] train/00128/loss 0.0040
I0105 13:17:46.681725 140409914992384 hlog.py:32] train/00128/eval_train/acc 1.0000
I0105 13:17:47.386544 140409914992384 hlog.py:32] train/00128/eval_val/acc 1.0000
I0105 13:17:48.001512 140409914992384 hlog.py:32] train/00128/eval_test/acc 0.5000
I0105 13:17:48.001863 140409914992384 hlog.py:18] train/00128{28.49s}
I0105 13:18:10.924524 140409914992384 hlog.py:32] train/00129/loss 0.0041
I0105 13:18:15.812948 140409914992384 hlog.py:32] train/00129/eval_train/acc 0.9980
I0105 13:18:16.512015 140409914992384 hlog.py:32] train/00129/eval_val/acc 1.0000
I0105 13:18:17.185214 140409914992384 hlog.py:32] train/00129/eval_test/acc 0.5000
I0105 13:18:17.207230 140409914992384 hlog.py:18] train/00129{29.21s}
I0105 13:18:39.902332 140409914992384 hlog.py:32] train/00130/loss 0.0043
I0105 13:18:44.255437 140409914992384 hlog.py:32] train/00130/eval_train/acc 1.0000
I0105 13:18:44.903919 140409914992384 hlog.py:32] train/00130/eval_val/acc 1.0000
I0105 13:18:45.514938 140409914992384 hlog.py:32] train/00130/eval_test/acc 0.5000
I0105 13:18:45.515417 140409914992384 hlog.py:18] train/00130{28.31s}
I0105 13:19:09.961337 140409914992384 hlog.py:32] train/00131/loss 0.0043
I0105 13:19:14.315875 140409914992384 hlog.py:32] train/00131/eval_train/acc 0.9980
I0105 13:19:14.971182 140409914992384 hlog.py:32] train/00131/eval_val/acc 1.0000
I0105 13:19:15.592113 140409914992384 hlog.py:32] train/00131/eval_test/acc 0.5000
I0105 13:19:15.592494 140409914992384 hlog.py:18] train/00131{30.08s}
I0105 13:19:40.063499 140409914992384 hlog.py:32] train/00132/loss 0.0038
I0105 13:19:44.687401 140409914992384 hlog.py:32] train/00132/eval_train/acc 0.9980
I0105 13:19:45.307418 140409914992384 hlog.py:32] train/00132/eval_val/acc 1.0000
I0105 13:19:45.851532 140409914992384 hlog.py:32] train/00132/eval_test/acc 0.5000
I0105 13:19:45.851922 140409914992384 hlog.py:18] train/00132{30.26s}
I0105 13:20:11.613751 140409914992384 hlog.py:32] train/00133/loss 0.0043
I0105 13:20:16.125054 140409914992384 hlog.py:32] train/00133/eval_train/acc 1.0000
I0105 13:20:16.842702 140409914992384 hlog.py:32] train/00133/eval_val/acc 1.0000
I0105 13:20:17.482551 140409914992384 hlog.py:32] train/00133/eval_test/acc 0.5000
I0105 13:20:17.483021 140409914992384 hlog.py:18] train/00133{31.63s}
I0105 13:20:41.184168 140409914992384 hlog.py:32] train/00134/loss 0.0042
I0105 13:20:45.505319 140409914992384 hlog.py:32] train/00134/eval_train/acc 1.0000
I0105 13:20:46.167382 140409914992384 hlog.py:32] train/00134/eval_val/acc 1.0000
I0105 13:20:46.808247 140409914992384 hlog.py:32] train/00134/eval_test/acc 0.5000
I0105 13:20:46.808654 140409914992384 hlog.py:18] train/00134{29.33s}
I0105 13:21:10.591277 140409914992384 hlog.py:32] train/00135/loss 0.0047
I0105 13:21:14.820023 140409914992384 hlog.py:32] train/00135/eval_train/acc 0.9990
I0105 13:21:15.462155 140409914992384 hlog.py:32] train/00135/eval_val/acc 1.0000
I0105 13:21:16.053142 140409914992384 hlog.py:32] train/00135/eval_test/acc 0.5000
I0105 13:21:16.053540 140409914992384 hlog.py:18] train/00135{29.24s}
I0105 13:21:38.968955 140409914992384 hlog.py:32] train/00136/loss 0.0039
I0105 13:21:43.289628 140409914992384 hlog.py:32] train/00136/eval_train/acc 0.9970
I0105 13:21:43.935398 140409914992384 hlog.py:32] train/00136/eval_val/acc 1.0000
I0105 13:21:44.526721 140409914992384 hlog.py:32] train/00136/eval_test/acc 0.5000
I0105 13:21:44.527297 140409914992384 hlog.py:18] train/00136{28.47s}
I0105 13:22:07.266421 140409914992384 hlog.py:32] train/00137/loss 0.0040
I0105 13:22:11.955643 140409914992384 hlog.py:32] train/00137/eval_train/acc 0.9990
I0105 13:22:12.645948 140409914992384 hlog.py:32] train/00137/eval_val/acc 1.0000
I0105 13:22:13.323472 140409914992384 hlog.py:32] train/00137/eval_test/acc 0.5000
I0105 13:22:13.323935 140409914992384 hlog.py:18] train/00137{28.80s}
I0105 13:22:37.958950 140409914992384 hlog.py:32] train/00138/loss 0.0041
I0105 13:22:43.015702 140409914992384 hlog.py:32] train/00138/eval_train/acc 0.9980
I0105 13:22:43.654142 140409914992384 hlog.py:32] train/00138/eval_val/acc 1.0000
I0105 13:22:44.323103 140409914992384 hlog.py:32] train/00138/eval_test/acc 0.5000
I0105 13:22:44.323522 140409914992384 hlog.py:18] train/00138{31.00s}
I0105 13:23:07.547124 140409914992384 hlog.py:32] train/00139/loss 0.0041
I0105 13:23:11.819154 140409914992384 hlog.py:32] train/00139/eval_train/acc 0.9980
I0105 13:23:12.543127 140409914992384 hlog.py:32] train/00139/eval_val/acc 1.0000
I0105 13:23:13.240552 140409914992384 hlog.py:32] train/00139/eval_test/acc 0.5000
I0105 13:23:13.264214 140409914992384 hlog.py:18] train/00139{28.94s}
I0105 13:23:35.692758 140409914992384 hlog.py:32] train/00140/loss 0.0043
I0105 13:23:40.010048 140409914992384 hlog.py:32] train/00140/eval_train/acc 1.0000
I0105 13:23:40.670603 140409914992384 hlog.py:32] train/00140/eval_val/acc 1.0000
I0105 13:23:41.295980 140409914992384 hlog.py:32] train/00140/eval_test/acc 0.5000
I0105 13:23:41.296539 140409914992384 hlog.py:18] train/00140{28.03s}
I0105 13:24:03.180039 140409914992384 hlog.py:32] train/00141/loss 0.0039
I0105 13:24:07.600825 140409914992384 hlog.py:32] train/00141/eval_train/acc 0.9980
I0105 13:24:08.301699 140409914992384 hlog.py:32] train/00141/eval_val/acc 1.0000
I0105 13:24:08.988047 140409914992384 hlog.py:32] train/00141/eval_test/acc 0.5000
I0105 13:24:08.988392 140409914992384 hlog.py:18] train/00141{27.69s}
I0105 13:24:32.568924 140409914992384 hlog.py:32] train/00142/loss 0.0043
I0105 13:24:36.834832 140409914992384 hlog.py:32] train/00142/eval_train/acc 0.9990
I0105 13:24:37.384828 140409914992384 hlog.py:32] train/00142/eval_val/acc 1.0000
I0105 13:24:38.032114 140409914992384 hlog.py:32] train/00142/eval_test/acc 0.5000
I0105 13:24:38.032507 140409914992384 hlog.py:18] train/00142{29.04s}
I0105 13:25:03.904291 140409914992384 hlog.py:32] train/00143/loss 0.0044
I0105 13:25:08.208572 140409914992384 hlog.py:32] train/00143/eval_train/acc 0.9980
I0105 13:25:08.840564 140409914992384 hlog.py:32] train/00143/eval_val/acc 1.0000
I0105 13:25:09.471956 140409914992384 hlog.py:32] train/00143/eval_test/acc 0.5000
I0105 13:25:09.472339 140409914992384 hlog.py:18] train/00143{31.44s}
I0105 13:25:34.106963 140409914992384 hlog.py:32] train/00144/loss 0.0042
I0105 13:25:38.446506 140409914992384 hlog.py:32] train/00144/eval_train/acc 1.0000
I0105 13:25:39.107339 140409914992384 hlog.py:32] train/00144/eval_val/acc 1.0000
I0105 13:25:39.741408 140409914992384 hlog.py:32] train/00144/eval_test/acc 0.5000
I0105 13:25:39.741880 140409914992384 hlog.py:18] train/00144{30.27s}
I0105 13:26:02.982571 140409914992384 hlog.py:32] train/00145/loss 0.0040
I0105 13:26:07.209874 140409914992384 hlog.py:32] train/00145/eval_train/acc 1.0000
I0105 13:26:07.933401 140409914992384 hlog.py:32] train/00145/eval_val/acc 1.0000
I0105 13:26:08.627899 140409914992384 hlog.py:32] train/00145/eval_test/acc 0.5000
I0105 13:26:08.628289 140409914992384 hlog.py:18] train/00145{28.89s}
I0105 13:26:32.486396 140409914992384 hlog.py:32] train/00146/loss 0.0040
I0105 13:26:36.852469 140409914992384 hlog.py:32] train/00146/eval_train/acc 0.9990
I0105 13:26:37.557101 140409914992384 hlog.py:32] train/00146/eval_val/acc 1.0000
I0105 13:26:38.215215 140409914992384 hlog.py:32] train/00146/eval_test/acc 0.5000
I0105 13:26:38.215636 140409914992384 hlog.py:18] train/00146{29.59s}
I0105 13:27:00.562230 140409914992384 hlog.py:32] train/00147/loss 0.0040
I0105 13:27:04.863290 140409914992384 hlog.py:32] train/00147/eval_train/acc 0.9990
I0105 13:27:05.556704 140409914992384 hlog.py:32] train/00147/eval_val/acc 1.0000
I0105 13:27:06.206620 140409914992384 hlog.py:32] train/00147/eval_test/acc 0.5000
I0105 13:27:06.207019 140409914992384 hlog.py:18] train/00147{27.99s}
I0105 13:27:28.342457 140409914992384 hlog.py:32] train/00148/loss 0.0041
I0105 13:27:32.608750 140409914992384 hlog.py:32] train/00148/eval_train/acc 0.9970
I0105 13:27:33.284444 140409914992384 hlog.py:32] train/00148/eval_val/acc 1.0000
I0105 13:27:33.902446 140409914992384 hlog.py:32] train/00148/eval_test/acc 0.5000
I0105 13:27:33.902800 140409914992384 hlog.py:18] train/00148{27.70s}
I0105 13:27:56.726591 140409914992384 hlog.py:32] train/00149/loss 0.0043
I0105 13:28:01.323081 140409914992384 hlog.py:32] train/00149/eval_train/acc 0.9990
I0105 13:28:01.493015 140409914992384 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I0105 13:28:01.493156 140409914992384 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.493227 140409914992384 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.493282 140409914992384 hlog.py:32] train/00149/eval_val/0/corr True
I0105 13:28:01.493326 140409914992384 hlog.py:32] train/00149/eval_val/0 
I0105 13:28:01.493365 140409914992384 hlog.py:18] train/00149/eval_val/0{0.00s}
I0105 13:28:01.493415 140409914992384 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I0105 13:28:01.493464 140409914992384 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.493508 140409914992384 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.493545 140409914992384 hlog.py:32] train/00149/eval_val/1/corr True
I0105 13:28:01.493579 140409914992384 hlog.py:32] train/00149/eval_val/1 
I0105 13:28:01.493612 140409914992384 hlog.py:18] train/00149/eval_val/1{0.00s}
I0105 13:28:01.493656 140409914992384 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I0105 13:28:01.493700 140409914992384 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I0105 13:28:01.493742 140409914992384 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I0105 13:28:01.493777 140409914992384 hlog.py:32] train/00149/eval_val/2/corr True
I0105 13:28:01.493809 140409914992384 hlog.py:32] train/00149/eval_val/2 
I0105 13:28:01.493840 140409914992384 hlog.py:18] train/00149/eval_val/2{0.00s}
I0105 13:28:01.493882 140409914992384 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I0105 13:28:01.493926 140409914992384 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.493967 140409914992384 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.494002 140409914992384 hlog.py:32] train/00149/eval_val/3/corr True
I0105 13:28:01.494034 140409914992384 hlog.py:32] train/00149/eval_val/3 
I0105 13:28:01.494064 140409914992384 hlog.py:18] train/00149/eval_val/3{0.00s}
I0105 13:28:01.494106 140409914992384 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I0105 13:28:01.494149 140409914992384 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I0105 13:28:01.494189 140409914992384 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I0105 13:28:01.494223 140409914992384 hlog.py:32] train/00149/eval_val/4/corr True
I0105 13:28:01.494255 140409914992384 hlog.py:32] train/00149/eval_val/4 
I0105 13:28:01.494285 140409914992384 hlog.py:18] train/00149/eval_val/4{0.00s}
I0105 13:28:01.494326 140409914992384 hlog.py:32] train/00149/eval_val/5/input how big is texas
I0105 13:28:01.494369 140409914992384 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.494410 140409914992384 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.494445 140409914992384 hlog.py:32] train/00149/eval_val/5/corr True
I0105 13:28:01.494485 140409914992384 hlog.py:32] train/00149/eval_val/5 
I0105 13:28:01.494517 140409914992384 hlog.py:18] train/00149/eval_val/5{0.00s}
I0105 13:28:01.494559 140409914992384 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I0105 13:28:01.494601 140409914992384 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.494641 140409914992384 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.494675 140409914992384 hlog.py:32] train/00149/eval_val/6/corr True
I0105 13:28:01.494707 140409914992384 hlog.py:32] train/00149/eval_val/6 
I0105 13:28:01.494738 140409914992384 hlog.py:18] train/00149/eval_val/6{0.00s}
I0105 13:28:01.494778 140409914992384 hlog.py:32] train/00149/eval_val/7/input how large is texas
I0105 13:28:01.494821 140409914992384 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.494862 140409914992384 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.494896 140409914992384 hlog.py:32] train/00149/eval_val/7/corr True
I0105 13:28:01.494927 140409914992384 hlog.py:32] train/00149/eval_val/7 
I0105 13:28:01.494957 140409914992384 hlog.py:18] train/00149/eval_val/7{0.00s}
I0105 13:28:01.494999 140409914992384 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I0105 13:28:01.495042 140409914992384 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0105 13:28:01.495081 140409914992384 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0105 13:28:01.495115 140409914992384 hlog.py:32] train/00149/eval_val/8/corr True
I0105 13:28:01.495147 140409914992384 hlog.py:32] train/00149/eval_val/8 
I0105 13:28:01.495177 140409914992384 hlog.py:18] train/00149/eval_val/8{0.00s}
I0105 13:28:01.495218 140409914992384 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I0105 13:28:01.495261 140409914992384 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0105 13:28:01.495301 140409914992384 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0105 13:28:01.495336 140409914992384 hlog.py:32] train/00149/eval_val/9/corr True
I0105 13:28:01.495367 140409914992384 hlog.py:32] train/00149/eval_val/9 
I0105 13:28:01.495397 140409914992384 hlog.py:18] train/00149/eval_val/9{0.00s}
I0105 13:28:01.495438 140409914992384 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I0105 13:28:01.495481 140409914992384 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.495520 140409914992384 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.495555 140409914992384 hlog.py:32] train/00149/eval_val/10/corr True
I0105 13:28:01.495587 140409914992384 hlog.py:32] train/00149/eval_val/10 
I0105 13:28:01.495617 140409914992384 hlog.py:18] train/00149/eval_val/10{0.00s}
I0105 13:28:01.495661 140409914992384 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I0105 13:28:01.495709 140409914992384 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0105 13:28:01.495753 140409914992384 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0105 13:28:01.495788 140409914992384 hlog.py:32] train/00149/eval_val/11/corr True
I0105 13:28:01.495819 140409914992384 hlog.py:32] train/00149/eval_val/11 
I0105 13:28:01.495850 140409914992384 hlog.py:18] train/00149/eval_val/11{0.00s}
I0105 13:28:01.495899 140409914992384 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I0105 13:28:01.495948 140409914992384 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I0105 13:28:01.495992 140409914992384 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I0105 13:28:01.496026 140409914992384 hlog.py:32] train/00149/eval_val/12/corr True
I0105 13:28:01.496058 140409914992384 hlog.py:32] train/00149/eval_val/12 
I0105 13:28:01.496088 140409914992384 hlog.py:18] train/00149/eval_val/12{0.00s}
I0105 13:28:01.496132 140409914992384 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I0105 13:28:01.496180 140409914992384 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I0105 13:28:01.496223 140409914992384 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I0105 13:28:01.496258 140409914992384 hlog.py:32] train/00149/eval_val/13/corr True
I0105 13:28:01.496290 140409914992384 hlog.py:32] train/00149/eval_val/13 
I0105 13:28:01.496320 140409914992384 hlog.py:18] train/00149/eval_val/13{0.00s}
I0105 13:28:01.496363 140409914992384 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I0105 13:28:01.496411 140409914992384 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I0105 13:28:01.496454 140409914992384 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I0105 13:28:01.496489 140409914992384 hlog.py:32] train/00149/eval_val/14/corr True
I0105 13:28:01.496520 140409914992384 hlog.py:32] train/00149/eval_val/14 
I0105 13:28:01.496551 140409914992384 hlog.py:18] train/00149/eval_val/14{0.00s}
I0105 13:28:01.496595 140409914992384 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I0105 13:28:01.496644 140409914992384 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I0105 13:28:01.496688 140409914992384 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I0105 13:28:01.496722 140409914992384 hlog.py:32] train/00149/eval_val/15/corr True
I0105 13:28:01.496754 140409914992384 hlog.py:32] train/00149/eval_val/15 
I0105 13:28:01.496784 140409914992384 hlog.py:18] train/00149/eval_val/15{0.00s}
I0105 13:28:01.496829 140409914992384 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I0105 13:28:01.496877 140409914992384 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0105 13:28:01.496921 140409914992384 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0105 13:28:01.496956 140409914992384 hlog.py:32] train/00149/eval_val/16/corr True
I0105 13:28:01.496987 140409914992384 hlog.py:32] train/00149/eval_val/16 
I0105 13:28:01.497018 140409914992384 hlog.py:18] train/00149/eval_val/16{0.00s}
I0105 13:28:01.497061 140409914992384 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I0105 13:28:01.497109 140409914992384 hlog.py:32] train/00149/eval_val/17/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I0105 13:28:01.497157 140409914992384 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I0105 13:28:01.497192 140409914992384 hlog.py:32] train/00149/eval_val/17/corr True
I0105 13:28:01.497225 140409914992384 hlog.py:32] train/00149/eval_val/17 
I0105 13:28:01.497255 140409914992384 hlog.py:18] train/00149/eval_val/17{0.00s}
I0105 13:28:01.497304 140409914992384 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I0105 13:28:01.497354 140409914992384 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I0105 13:28:01.497398 140409914992384 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I0105 13:28:01.497433 140409914992384 hlog.py:32] train/00149/eval_val/18/corr True
I0105 13:28:01.497464 140409914992384 hlog.py:32] train/00149/eval_val/18 
I0105 13:28:01.497495 140409914992384 hlog.py:18] train/00149/eval_val/18{0.00s}
I0105 13:28:01.497537 140409914992384 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I0105 13:28:01.497584 140409914992384 hlog.py:32] train/00149/eval_val/19/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I0105 13:28:01.497628 140409914992384 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I0105 13:28:01.497662 140409914992384 hlog.py:32] train/00149/eval_val/19/corr True
I0105 13:28:01.497694 140409914992384 hlog.py:32] train/00149/eval_val/19 
I0105 13:28:01.497724 140409914992384 hlog.py:18] train/00149/eval_val/19{0.00s}
I0105 13:28:01.497767 140409914992384 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I0105 13:28:01.497815 140409914992384 hlog.py:32] train/00149/eval_val/20/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I0105 13:28:01.497858 140409914992384 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I0105 13:28:01.497893 140409914992384 hlog.py:32] train/00149/eval_val/20/corr True
I0105 13:28:01.497924 140409914992384 hlog.py:32] train/00149/eval_val/20 
I0105 13:28:01.497954 140409914992384 hlog.py:18] train/00149/eval_val/20{0.00s}
I0105 13:28:01.497998 140409914992384 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I0105 13:28:01.498046 140409914992384 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I0105 13:28:01.498090 140409914992384 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I0105 13:28:01.498124 140409914992384 hlog.py:32] train/00149/eval_val/21/corr True
I0105 13:28:01.498156 140409914992384 hlog.py:32] train/00149/eval_val/21 
I0105 13:28:01.498186 140409914992384 hlog.py:18] train/00149/eval_val/21{0.00s}
I0105 13:28:01.498227 140409914992384 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I0105 13:28:01.498271 140409914992384 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I0105 13:28:01.498311 140409914992384 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I0105 13:28:01.498345 140409914992384 hlog.py:32] train/00149/eval_val/22/corr True
I0105 13:28:01.498376 140409914992384 hlog.py:32] train/00149/eval_val/22 
I0105 13:28:01.498413 140409914992384 hlog.py:18] train/00149/eval_val/22{0.00s}
I0105 13:28:01.498454 140409914992384 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I0105 13:28:01.498497 140409914992384 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0105 13:28:01.498537 140409914992384 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0105 13:28:01.498571 140409914992384 hlog.py:32] train/00149/eval_val/23/corr True
I0105 13:28:01.498602 140409914992384 hlog.py:32] train/00149/eval_val/23 
I0105 13:28:01.498632 140409914992384 hlog.py:18] train/00149/eval_val/23{0.00s}
I0105 13:28:01.498672 140409914992384 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I0105 13:28:01.498715 140409914992384 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0105 13:28:01.498755 140409914992384 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0105 13:28:01.498789 140409914992384 hlog.py:32] train/00149/eval_val/24/corr True
I0105 13:28:01.498820 140409914992384 hlog.py:32] train/00149/eval_val/24 
I0105 13:28:01.498850 140409914992384 hlog.py:18] train/00149/eval_val/24{0.00s}
I0105 13:28:01.498892 140409914992384 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I0105 13:28:01.498936 140409914992384 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0105 13:28:01.498977 140409914992384 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0105 13:28:01.499011 140409914992384 hlog.py:32] train/00149/eval_val/25/corr True
I0105 13:28:01.499042 140409914992384 hlog.py:32] train/00149/eval_val/25 
I0105 13:28:01.499073 140409914992384 hlog.py:18] train/00149/eval_val/25{0.00s}
I0105 13:28:01.499115 140409914992384 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I0105 13:28:01.499159 140409914992384 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I0105 13:28:01.499200 140409914992384 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I0105 13:28:01.499234 140409914992384 hlog.py:32] train/00149/eval_val/26/corr True
I0105 13:28:01.499266 140409914992384 hlog.py:32] train/00149/eval_val/26 
I0105 13:28:01.499296 140409914992384 hlog.py:18] train/00149/eval_val/26{0.00s}
I0105 13:28:01.499338 140409914992384 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I0105 13:28:01.499382 140409914992384 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.499423 140409914992384 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.499457 140409914992384 hlog.py:32] train/00149/eval_val/27/corr True
I0105 13:28:01.499488 140409914992384 hlog.py:32] train/00149/eval_val/27 
I0105 13:28:01.499517 140409914992384 hlog.py:18] train/00149/eval_val/27{0.00s}
I0105 13:28:01.499558 140409914992384 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I0105 13:28:01.499602 140409914992384 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.499643 140409914992384 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.499677 140409914992384 hlog.py:32] train/00149/eval_val/28/corr True
I0105 13:28:01.499708 140409914992384 hlog.py:32] train/00149/eval_val/28 
I0105 13:28:01.499738 140409914992384 hlog.py:18] train/00149/eval_val/28{0.00s}
I0105 13:28:01.499783 140409914992384 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I0105 13:28:01.499827 140409914992384 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I0105 13:28:01.499868 140409914992384 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I0105 13:28:01.499903 140409914992384 hlog.py:32] train/00149/eval_val/29/corr True
I0105 13:28:01.499935 140409914992384 hlog.py:32] train/00149/eval_val/29 
I0105 13:28:01.499965 140409914992384 hlog.py:18] train/00149/eval_val/29{0.00s}
I0105 13:28:01.500007 140409914992384 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I0105 13:28:01.500052 140409914992384 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I0105 13:28:01.500093 140409914992384 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I0105 13:28:01.500128 140409914992384 hlog.py:32] train/00149/eval_val/30/corr True
I0105 13:28:01.500159 140409914992384 hlog.py:32] train/00149/eval_val/30 
I0105 13:28:01.500190 140409914992384 hlog.py:18] train/00149/eval_val/30{0.00s}
I0105 13:28:01.500232 140409914992384 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I0105 13:28:01.500275 140409914992384 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I0105 13:28:01.500316 140409914992384 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I0105 13:28:01.500351 140409914992384 hlog.py:32] train/00149/eval_val/31/corr True
I0105 13:28:01.500383 140409914992384 hlog.py:32] train/00149/eval_val/31 
I0105 13:28:01.500413 140409914992384 hlog.py:18] train/00149/eval_val/31{0.00s}
I0105 13:28:01.500455 140409914992384 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I0105 13:28:01.500500 140409914992384 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I0105 13:28:01.500542 140409914992384 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I0105 13:28:01.500576 140409914992384 hlog.py:32] train/00149/eval_val/32/corr True
I0105 13:28:01.500607 140409914992384 hlog.py:32] train/00149/eval_val/32 
I0105 13:28:01.500638 140409914992384 hlog.py:18] train/00149/eval_val/32{0.00s}
I0105 13:28:01.500680 140409914992384 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I0105 13:28:01.500724 140409914992384 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0105 13:28:01.500765 140409914992384 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0105 13:28:01.500799 140409914992384 hlog.py:32] train/00149/eval_val/33/corr True
I0105 13:28:01.500831 140409914992384 hlog.py:32] train/00149/eval_val/33 
I0105 13:28:01.500861 140409914992384 hlog.py:18] train/00149/eval_val/33{0.00s}
I0105 13:28:01.500903 140409914992384 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I0105 13:28:01.500947 140409914992384 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.500989 140409914992384 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0105 13:28:01.501023 140409914992384 hlog.py:32] train/00149/eval_val/34/corr True
I0105 13:28:01.501055 140409914992384 hlog.py:32] train/00149/eval_val/34 
I0105 13:28:01.501085 140409914992384 hlog.py:18] train/00149/eval_val/34{0.00s}
I0105 13:28:01.501132 140409914992384 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I0105 13:28:01.501179 140409914992384 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501222 140409914992384 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501256 140409914992384 hlog.py:32] train/00149/eval_val/35/corr True
I0105 13:28:01.501293 140409914992384 hlog.py:32] train/00149/eval_val/35 
I0105 13:28:01.501326 140409914992384 hlog.py:18] train/00149/eval_val/35{0.00s}
I0105 13:28:01.501369 140409914992384 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I0105 13:28:01.501416 140409914992384 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501459 140409914992384 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501494 140409914992384 hlog.py:32] train/00149/eval_val/36/corr True
I0105 13:28:01.501526 140409914992384 hlog.py:32] train/00149/eval_val/36 
I0105 13:28:01.501556 140409914992384 hlog.py:18] train/00149/eval_val/36{0.00s}
I0105 13:28:01.501599 140409914992384 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I0105 13:28:01.501644 140409914992384 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501687 140409914992384 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501721 140409914992384 hlog.py:32] train/00149/eval_val/37/corr True
I0105 13:28:01.501753 140409914992384 hlog.py:32] train/00149/eval_val/37 
I0105 13:28:01.501784 140409914992384 hlog.py:18] train/00149/eval_val/37{0.00s}
I0105 13:28:01.501826 140409914992384 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I0105 13:28:01.501871 140409914992384 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501913 140409914992384 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.501948 140409914992384 hlog.py:32] train/00149/eval_val/38/corr True
I0105 13:28:01.501979 140409914992384 hlog.py:32] train/00149/eval_val/38 
I0105 13:28:01.502009 140409914992384 hlog.py:18] train/00149/eval_val/38{0.00s}
I0105 13:28:01.502052 140409914992384 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I0105 13:28:01.502097 140409914992384 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.502139 140409914992384 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0105 13:28:01.502173 140409914992384 hlog.py:32] train/00149/eval_val/39/corr True
I0105 13:28:01.502204 140409914992384 hlog.py:32] train/00149/eval_val/39 
I0105 13:28:01.502235 140409914992384 hlog.py:18] train/00149/eval_val/39{0.00s}
I0105 13:28:01.502277 140409914992384 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I0105 13:28:01.502321 140409914992384 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0105 13:28:01.502362 140409914992384 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0105 13:28:01.502396 140409914992384 hlog.py:32] train/00149/eval_val/40/corr True
I0105 13:28:01.502427 140409914992384 hlog.py:32] train/00149/eval_val/40 
I0105 13:28:01.502461 140409914992384 hlog.py:18] train/00149/eval_val/40{0.00s}
I0105 13:28:01.502503 140409914992384 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I0105 13:28:01.502547 140409914992384 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0105 13:28:01.502588 140409914992384 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0105 13:28:01.502622 140409914992384 hlog.py:32] train/00149/eval_val/41/corr True
I0105 13:28:01.502653 140409914992384 hlog.py:32] train/00149/eval_val/41 
I0105 13:28:01.502683 140409914992384 hlog.py:18] train/00149/eval_val/41{0.00s}
I0105 13:28:01.502724 140409914992384 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I0105 13:28:01.502767 140409914992384 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I0105 13:28:01.502806 140409914992384 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I0105 13:28:01.502840 140409914992384 hlog.py:32] train/00149/eval_val/42/corr True
I0105 13:28:01.502871 140409914992384 hlog.py:32] train/00149/eval_val/42 
I0105 13:28:01.502902 140409914992384 hlog.py:18] train/00149/eval_val/42{0.00s}
I0105 13:28:01.502945 140409914992384 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I0105 13:28:01.502994 140409914992384 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I0105 13:28:01.503038 140409914992384 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I0105 13:28:01.503072 140409914992384 hlog.py:32] train/00149/eval_val/43/corr True
I0105 13:28:01.503104 140409914992384 hlog.py:32] train/00149/eval_val/43 
I0105 13:28:01.503134 140409914992384 hlog.py:18] train/00149/eval_val/43{0.00s}
I0105 13:28:01.503177 140409914992384 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I0105 13:28:01.503227 140409914992384 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I0105 13:28:01.503271 140409914992384 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I0105 13:28:01.503306 140409914992384 hlog.py:32] train/00149/eval_val/44/corr True
I0105 13:28:01.503338 140409914992384 hlog.py:32] train/00149/eval_val/44 
I0105 13:28:01.503367 140409914992384 hlog.py:18] train/00149/eval_val/44{0.00s}
I0105 13:28:01.503411 140409914992384 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I0105 13:28:01.503457 140409914992384 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I0105 13:28:01.503499 140409914992384 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I0105 13:28:01.503533 140409914992384 hlog.py:32] train/00149/eval_val/45/corr True
I0105 13:28:01.503565 140409914992384 hlog.py:32] train/00149/eval_val/45 
I0105 13:28:01.503595 140409914992384 hlog.py:18] train/00149/eval_val/45{0.00s}
I0105 13:28:01.503638 140409914992384 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I0105 13:28:01.503684 140409914992384 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I0105 13:28:01.503726 140409914992384 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I0105 13:28:01.503764 140409914992384 hlog.py:32] train/00149/eval_val/46/corr True
I0105 13:28:01.503796 140409914992384 hlog.py:32] train/00149/eval_val/46 
I0105 13:28:01.503826 140409914992384 hlog.py:18] train/00149/eval_val/46{0.00s}
I0105 13:28:01.503869 140409914992384 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I0105 13:28:01.503916 140409914992384 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I0105 13:28:01.503959 140409914992384 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I0105 13:28:01.503994 140409914992384 hlog.py:32] train/00149/eval_val/47/corr True
I0105 13:28:01.504025 140409914992384 hlog.py:32] train/00149/eval_val/47 
I0105 13:28:01.504055 140409914992384 hlog.py:18] train/00149/eval_val/47{0.00s}
I0105 13:28:01.504099 140409914992384 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I0105 13:28:01.504147 140409914992384 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I0105 13:28:01.504190 140409914992384 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I0105 13:28:01.504225 140409914992384 hlog.py:32] train/00149/eval_val/48/corr True
I0105 13:28:01.504257 140409914992384 hlog.py:32] train/00149/eval_val/48 
I0105 13:28:01.504287 140409914992384 hlog.py:18] train/00149/eval_val/48{0.00s}
I0105 13:28:01.504331 140409914992384 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I0105 13:28:01.504379 140409914992384 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0105 13:28:01.504422 140409914992384 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0105 13:28:01.504457 140409914992384 hlog.py:32] train/00149/eval_val/49/corr True
I0105 13:28:01.504488 140409914992384 hlog.py:32] train/00149/eval_val/49 
I0105 13:28:01.504519 140409914992384 hlog.py:18] train/00149/eval_val/49{0.00s}
I0105 13:28:01.504562 140409914992384 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I0105 13:28:01.504609 140409914992384 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I0105 13:28:01.504652 140409914992384 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I0105 13:28:01.504687 140409914992384 hlog.py:32] train/00149/eval_val/50/corr True
I0105 13:28:01.504718 140409914992384 hlog.py:32] train/00149/eval_val/50 
I0105 13:28:01.504748 140409914992384 hlog.py:18] train/00149/eval_val/50{0.00s}
I0105 13:28:01.504791 140409914992384 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I0105 13:28:01.504838 140409914992384 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0105 13:28:01.504881 140409914992384 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0105 13:28:01.504916 140409914992384 hlog.py:32] train/00149/eval_val/51/corr True
I0105 13:28:01.504947 140409914992384 hlog.py:32] train/00149/eval_val/51 
I0105 13:28:01.504980 140409914992384 hlog.py:18] train/00149/eval_val/51{0.00s}
I0105 13:28:01.505022 140409914992384 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I0105 13:28:01.505067 140409914992384 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0105 13:28:01.505108 140409914992384 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0105 13:28:01.505142 140409914992384 hlog.py:32] train/00149/eval_val/52/corr True
I0105 13:28:01.505173 140409914992384 hlog.py:32] train/00149/eval_val/52 
I0105 13:28:01.505204 140409914992384 hlog.py:18] train/00149/eval_val/52{0.00s}
I0105 13:28:01.505245 140409914992384 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I0105 13:28:01.505295 140409914992384 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0105 13:28:01.505339 140409914992384 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0105 13:28:01.505374 140409914992384 hlog.py:32] train/00149/eval_val/53/corr True
I0105 13:28:01.505406 140409914992384 hlog.py:32] train/00149/eval_val/53 
I0105 13:28:01.505436 140409914992384 hlog.py:18] train/00149/eval_val/53{0.00s}
I0105 13:28:01.505480 140409914992384 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I0105 13:28:01.505524 140409914992384 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.505565 140409914992384 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.505599 140409914992384 hlog.py:32] train/00149/eval_val/54/corr True
I0105 13:28:01.505631 140409914992384 hlog.py:32] train/00149/eval_val/54 
I0105 13:28:01.505661 140409914992384 hlog.py:18] train/00149/eval_val/54{0.00s}
I0105 13:28:01.505703 140409914992384 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I0105 13:28:01.505747 140409914992384 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I0105 13:28:01.505788 140409914992384 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I0105 13:28:01.505822 140409914992384 hlog.py:32] train/00149/eval_val/55/corr True
I0105 13:28:01.505854 140409914992384 hlog.py:32] train/00149/eval_val/55 
I0105 13:28:01.505884 140409914992384 hlog.py:18] train/00149/eval_val/55{0.00s}
I0105 13:28:01.505925 140409914992384 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I0105 13:28:01.505970 140409914992384 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0105 13:28:01.506011 140409914992384 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0105 13:28:01.506046 140409914992384 hlog.py:32] train/00149/eval_val/56/corr True
I0105 13:28:01.506077 140409914992384 hlog.py:32] train/00149/eval_val/56 
I0105 13:28:01.506108 140409914992384 hlog.py:18] train/00149/eval_val/56{0.00s}
I0105 13:28:01.506150 140409914992384 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I0105 13:28:01.506194 140409914992384 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.506234 140409914992384 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.506269 140409914992384 hlog.py:32] train/00149/eval_val/57/corr True
I0105 13:28:01.506300 140409914992384 hlog.py:32] train/00149/eval_val/57 
I0105 13:28:01.506331 140409914992384 hlog.py:18] train/00149/eval_val/57{0.00s}
I0105 13:28:01.506376 140409914992384 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I0105 13:28:01.506421 140409914992384 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.506461 140409914992384 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.506495 140409914992384 hlog.py:32] train/00149/eval_val/58/corr True
I0105 13:28:01.506527 140409914992384 hlog.py:32] train/00149/eval_val/58 
I0105 13:28:01.506557 140409914992384 hlog.py:18] train/00149/eval_val/58{0.00s}
I0105 13:28:01.506599 140409914992384 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I0105 13:28:01.506643 140409914992384 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I0105 13:28:01.506684 140409914992384 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I0105 13:28:01.506718 140409914992384 hlog.py:32] train/00149/eval_val/59/corr True
I0105 13:28:01.506750 140409914992384 hlog.py:32] train/00149/eval_val/59 
I0105 13:28:01.506780 140409914992384 hlog.py:18] train/00149/eval_val/59{0.00s}
I0105 13:28:01.506822 140409914992384 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I0105 13:28:01.506866 140409914992384 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I0105 13:28:01.506907 140409914992384 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I0105 13:28:01.506941 140409914992384 hlog.py:32] train/00149/eval_val/60/corr True
I0105 13:28:01.506972 140409914992384 hlog.py:32] train/00149/eval_val/60 
I0105 13:28:01.507003 140409914992384 hlog.py:18] train/00149/eval_val/60{0.00s}
I0105 13:28:01.507044 140409914992384 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I0105 13:28:01.507088 140409914992384 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.507129 140409914992384 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.507163 140409914992384 hlog.py:32] train/00149/eval_val/61/corr True
I0105 13:28:01.507195 140409914992384 hlog.py:32] train/00149/eval_val/61 
I0105 13:28:01.507225 140409914992384 hlog.py:18] train/00149/eval_val/61{0.00s}
I0105 13:28:01.507266 140409914992384 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I0105 13:28:01.507310 140409914992384 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I0105 13:28:01.507351 140409914992384 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I0105 13:28:01.507385 140409914992384 hlog.py:32] train/00149/eval_val/62/corr True
I0105 13:28:01.507416 140409914992384 hlog.py:32] train/00149/eval_val/62 
I0105 13:28:01.507446 140409914992384 hlog.py:18] train/00149/eval_val/62{0.00s}
I0105 13:28:01.507487 140409914992384 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I0105 13:28:01.507530 140409914992384 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.507571 140409914992384 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.507605 140409914992384 hlog.py:32] train/00149/eval_val/63/corr True
I0105 13:28:01.507637 140409914992384 hlog.py:32] train/00149/eval_val/63 
I0105 13:28:01.507667 140409914992384 hlog.py:18] train/00149/eval_val/63{0.00s}
I0105 13:28:01.735545 140409914992384 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I0105 13:28:01.735713 140409914992384 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I0105 13:28:01.735816 140409914992384 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I0105 13:28:01.735917 140409914992384 hlog.py:32] train/00149/eval_val/64/corr True
I0105 13:28:01.736022 140409914992384 hlog.py:32] train/00149/eval_val/64 
I0105 13:28:01.736111 140409914992384 hlog.py:18] train/00149/eval_val/64{0.00s}
I0105 13:28:01.736223 140409914992384 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I0105 13:28:01.736329 140409914992384 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.736425 140409914992384 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.736500 140409914992384 hlog.py:32] train/00149/eval_val/65/corr True
I0105 13:28:01.736566 140409914992384 hlog.py:32] train/00149/eval_val/65 
I0105 13:28:01.736629 140409914992384 hlog.py:18] train/00149/eval_val/65{0.00s}
I0105 13:28:01.736718 140409914992384 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I0105 13:28:01.736807 140409914992384 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.736888 140409914992384 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.736953 140409914992384 hlog.py:32] train/00149/eval_val/66/corr True
I0105 13:28:01.737012 140409914992384 hlog.py:32] train/00149/eval_val/66 
I0105 13:28:01.737071 140409914992384 hlog.py:18] train/00149/eval_val/66{0.00s}
I0105 13:28:01.737157 140409914992384 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I0105 13:28:01.737231 140409914992384 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.737296 140409914992384 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.737345 140409914992384 hlog.py:32] train/00149/eval_val/67/corr True
I0105 13:28:01.737384 140409914992384 hlog.py:32] train/00149/eval_val/67 
I0105 13:28:01.737417 140409914992384 hlog.py:18] train/00149/eval_val/67{0.00s}
I0105 13:28:01.737463 140409914992384 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I0105 13:28:01.737519 140409914992384 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I0105 13:28:01.737575 140409914992384 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I0105 13:28:01.737613 140409914992384 hlog.py:32] train/00149/eval_val/68/corr True
I0105 13:28:01.737647 140409914992384 hlog.py:32] train/00149/eval_val/68 
I0105 13:28:01.737685 140409914992384 hlog.py:18] train/00149/eval_val/68{0.00s}
I0105 13:28:01.737734 140409914992384 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I0105 13:28:01.737780 140409914992384 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.737822 140409914992384 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.737857 140409914992384 hlog.py:32] train/00149/eval_val/69/corr True
I0105 13:28:01.737889 140409914992384 hlog.py:32] train/00149/eval_val/69 
I0105 13:28:01.737920 140409914992384 hlog.py:18] train/00149/eval_val/69{0.00s}
I0105 13:28:01.737962 140409914992384 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I0105 13:28:01.738018 140409914992384 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.738096 140409914992384 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.738155 140409914992384 hlog.py:32] train/00149/eval_val/70/corr True
I0105 13:28:01.738198 140409914992384 hlog.py:32] train/00149/eval_val/70 
I0105 13:28:01.738232 140409914992384 hlog.py:18] train/00149/eval_val/70{0.00s}
I0105 13:28:01.738276 140409914992384 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I0105 13:28:01.738321 140409914992384 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0105 13:28:01.738364 140409914992384 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0105 13:28:01.738403 140409914992384 hlog.py:32] train/00149/eval_val/71/corr True
I0105 13:28:01.738440 140409914992384 hlog.py:32] train/00149/eval_val/71 
I0105 13:28:01.738477 140409914992384 hlog.py:18] train/00149/eval_val/71{0.00s}
I0105 13:28:01.738528 140409914992384 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I0105 13:28:01.738580 140409914992384 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0105 13:28:01.738622 140409914992384 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0105 13:28:01.738658 140409914992384 hlog.py:32] train/00149/eval_val/72/corr True
I0105 13:28:01.738690 140409914992384 hlog.py:32] train/00149/eval_val/72 
I0105 13:28:01.738720 140409914992384 hlog.py:18] train/00149/eval_val/72{0.00s}
I0105 13:28:01.738763 140409914992384 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I0105 13:28:01.738806 140409914992384 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I0105 13:28:01.738846 140409914992384 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I0105 13:28:01.738881 140409914992384 hlog.py:32] train/00149/eval_val/73/corr True
I0105 13:28:01.738919 140409914992384 hlog.py:32] train/00149/eval_val/73 
I0105 13:28:01.738978 140409914992384 hlog.py:18] train/00149/eval_val/73{0.00s}
I0105 13:28:01.739054 140409914992384 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I0105 13:28:01.739106 140409914992384 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I0105 13:28:01.739148 140409914992384 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I0105 13:28:01.739183 140409914992384 hlog.py:32] train/00149/eval_val/74/corr True
I0105 13:28:01.739215 140409914992384 hlog.py:32] train/00149/eval_val/74 
I0105 13:28:01.739246 140409914992384 hlog.py:18] train/00149/eval_val/74{0.00s}
I0105 13:28:01.739295 140409914992384 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I0105 13:28:01.739345 140409914992384 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I0105 13:28:01.739395 140409914992384 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I0105 13:28:01.739437 140409914992384 hlog.py:32] train/00149/eval_val/75/corr True
I0105 13:28:01.739477 140409914992384 hlog.py:32] train/00149/eval_val/75 
I0105 13:28:01.739509 140409914992384 hlog.py:18] train/00149/eval_val/75{0.00s}
I0105 13:28:01.739552 140409914992384 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I0105 13:28:01.739597 140409914992384 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.739638 140409914992384 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0105 13:28:01.739678 140409914992384 hlog.py:32] train/00149/eval_val/76/corr True
I0105 13:28:01.739711 140409914992384 hlog.py:32] train/00149/eval_val/76 
I0105 13:28:01.739742 140409914992384 hlog.py:18] train/00149/eval_val/76{0.00s}
I0105 13:28:01.739783 140409914992384 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I0105 13:28:01.739845 140409914992384 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I0105 13:28:01.739924 140409914992384 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I0105 13:28:01.739977 140409914992384 hlog.py:32] train/00149/eval_val/77/corr True
I0105 13:28:01.740014 140409914992384 hlog.py:32] train/00149/eval_val/77 
I0105 13:28:01.740046 140409914992384 hlog.py:18] train/00149/eval_val/77{0.00s}
I0105 13:28:01.740090 140409914992384 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I0105 13:28:01.740136 140409914992384 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I0105 13:28:01.740180 140409914992384 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I0105 13:28:01.740219 140409914992384 hlog.py:32] train/00149/eval_val/78/corr True
I0105 13:28:01.740257 140409914992384 hlog.py:32] train/00149/eval_val/78 
I0105 13:28:01.740294 140409914992384 hlog.py:18] train/00149/eval_val/78{0.00s}
I0105 13:28:01.740347 140409914992384 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I0105 13:28:01.740398 140409914992384 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I0105 13:28:01.740444 140409914992384 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I0105 13:28:01.740479 140409914992384 hlog.py:32] train/00149/eval_val/79/corr True
I0105 13:28:01.740512 140409914992384 hlog.py:32] train/00149/eval_val/79 
I0105 13:28:01.740542 140409914992384 hlog.py:18] train/00149/eval_val/79{0.00s}
I0105 13:28:01.740584 140409914992384 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I0105 13:28:01.740628 140409914992384 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.740668 140409914992384 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.740703 140409914992384 hlog.py:32] train/00149/eval_val/80/corr True
I0105 13:28:01.740761 140409914992384 hlog.py:32] train/00149/eval_val/80 
I0105 13:28:01.740822 140409914992384 hlog.py:18] train/00149/eval_val/80{0.00s}
I0105 13:28:01.740899 140409914992384 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I0105 13:28:01.740956 140409914992384 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.740998 140409914992384 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.741033 140409914992384 hlog.py:32] train/00149/eval_val/81/corr True
I0105 13:28:01.741065 140409914992384 hlog.py:32] train/00149/eval_val/81 
I0105 13:28:01.741096 140409914992384 hlog.py:18] train/00149/eval_val/81{0.00s}
I0105 13:28:01.741138 140409914992384 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I0105 13:28:01.741186 140409914992384 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I0105 13:28:01.741230 140409914992384 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I0105 13:28:01.741269 140409914992384 hlog.py:32] train/00149/eval_val/82/corr True
I0105 13:28:01.741317 140409914992384 hlog.py:32] train/00149/eval_val/82 
I0105 13:28:01.741349 140409914992384 hlog.py:18] train/00149/eval_val/82{0.00s}
I0105 13:28:01.741400 140409914992384 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I0105 13:28:01.741451 140409914992384 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I0105 13:28:01.741493 140409914992384 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I0105 13:28:01.741528 140409914992384 hlog.py:32] train/00149/eval_val/83/corr True
I0105 13:28:01.741560 140409914992384 hlog.py:32] train/00149/eval_val/83 
I0105 13:28:01.741590 140409914992384 hlog.py:18] train/00149/eval_val/83{0.00s}
I0105 13:28:01.741656 140409914992384 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I0105 13:28:01.741740 140409914992384 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.741807 140409914992384 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.741846 140409914992384 hlog.py:32] train/00149/eval_val/84/corr True
I0105 13:28:01.741878 140409914992384 hlog.py:32] train/00149/eval_val/84 
I0105 13:28:01.741909 140409914992384 hlog.py:18] train/00149/eval_val/84{0.00s}
I0105 13:28:01.741954 140409914992384 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I0105 13:28:01.741998 140409914992384 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.742051 140409914992384 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0105 13:28:01.742097 140409914992384 hlog.py:32] train/00149/eval_val/85/corr True
I0105 13:28:01.742134 140409914992384 hlog.py:32] train/00149/eval_val/85 
I0105 13:28:01.742171 140409914992384 hlog.py:18] train/00149/eval_val/85{0.00s}
I0105 13:28:01.742219 140409914992384 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I0105 13:28:01.742268 140409914992384 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I0105 13:28:01.742312 140409914992384 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I0105 13:28:01.742347 140409914992384 hlog.py:32] train/00149/eval_val/86/corr True
I0105 13:28:01.742379 140409914992384 hlog.py:32] train/00149/eval_val/86 
I0105 13:28:01.742409 140409914992384 hlog.py:18] train/00149/eval_val/86{0.00s}
I0105 13:28:01.742454 140409914992384 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I0105 13:28:01.742506 140409914992384 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I0105 13:28:01.742592 140409914992384 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I0105 13:28:01.742650 140409914992384 hlog.py:32] train/00149/eval_val/87/corr True
I0105 13:28:01.742686 140409914992384 hlog.py:32] train/00149/eval_val/87 
I0105 13:28:01.742717 140409914992384 hlog.py:18] train/00149/eval_val/87{0.00s}
I0105 13:28:01.742761 140409914992384 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I0105 13:28:01.742806 140409914992384 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I0105 13:28:01.742847 140409914992384 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I0105 13:28:01.742881 140409914992384 hlog.py:32] train/00149/eval_val/88/corr True
I0105 13:28:01.742926 140409914992384 hlog.py:32] train/00149/eval_val/88 
I0105 13:28:01.742966 140409914992384 hlog.py:18] train/00149/eval_val/88{0.00s}
I0105 13:28:01.743021 140409914992384 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I0105 13:28:01.743079 140409914992384 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.743124 140409914992384 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.743159 140409914992384 hlog.py:32] train/00149/eval_val/89/corr True
I0105 13:28:01.743191 140409914992384 hlog.py:32] train/00149/eval_val/89 
I0105 13:28:01.743221 140409914992384 hlog.py:18] train/00149/eval_val/89{0.00s}
I0105 13:28:01.743267 140409914992384 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I0105 13:28:01.743317 140409914992384 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I0105 13:28:01.743363 140409914992384 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I0105 13:28:01.743397 140409914992384 hlog.py:32] train/00149/eval_val/90/corr True
I0105 13:28:01.743450 140409914992384 hlog.py:32] train/00149/eval_val/90 
I0105 13:28:01.743509 140409914992384 hlog.py:18] train/00149/eval_val/90{0.00s}
I0105 13:28:01.743566 140409914992384 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I0105 13:28:01.743616 140409914992384 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.743658 140409914992384 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.743693 140409914992384 hlog.py:32] train/00149/eval_val/91/corr True
I0105 13:28:01.743725 140409914992384 hlog.py:32] train/00149/eval_val/91 
I0105 13:28:01.743755 140409914992384 hlog.py:18] train/00149/eval_val/91{0.00s}
I0105 13:28:01.743802 140409914992384 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I0105 13:28:01.743859 140409914992384 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.743909 140409914992384 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.743952 140409914992384 hlog.py:32] train/00149/eval_val/92/corr True
I0105 13:28:01.743984 140409914992384 hlog.py:32] train/00149/eval_val/92 
I0105 13:28:01.744014 140409914992384 hlog.py:18] train/00149/eval_val/92{0.00s}
I0105 13:28:01.744058 140409914992384 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I0105 13:28:01.744104 140409914992384 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744145 140409914992384 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744180 140409914992384 hlog.py:32] train/00149/eval_val/93/corr True
I0105 13:28:01.744212 140409914992384 hlog.py:32] train/00149/eval_val/93 
I0105 13:28:01.744242 140409914992384 hlog.py:18] train/00149/eval_val/93{0.00s}
I0105 13:28:01.744284 140409914992384 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I0105 13:28:01.744356 140409914992384 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744432 140409914992384 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744476 140409914992384 hlog.py:32] train/00149/eval_val/94/corr True
I0105 13:28:01.744509 140409914992384 hlog.py:32] train/00149/eval_val/94 
I0105 13:28:01.744540 140409914992384 hlog.py:18] train/00149/eval_val/94{0.00s}
I0105 13:28:01.744585 140409914992384 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I0105 13:28:01.744631 140409914992384 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744679 140409914992384 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.744720 140409914992384 hlog.py:32] train/00149/eval_val/95/corr True
I0105 13:28:01.744763 140409914992384 hlog.py:32] train/00149/eval_val/95 
I0105 13:28:01.744801 140409914992384 hlog.py:18] train/00149/eval_val/95{0.00s}
I0105 13:28:01.744849 140409914992384 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I0105 13:28:01.744904 140409914992384 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I0105 13:28:01.744954 140409914992384 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I0105 13:28:01.744989 140409914992384 hlog.py:32] train/00149/eval_val/96/corr True
I0105 13:28:01.745021 140409914992384 hlog.py:32] train/00149/eval_val/96 
I0105 13:28:01.745052 140409914992384 hlog.py:18] train/00149/eval_val/96{0.00s}
I0105 13:28:01.745100 140409914992384 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I0105 13:28:01.745434 140409914992384 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I0105 13:28:01.745496 140409914992384 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I0105 13:28:01.745534 140409914992384 hlog.py:32] train/00149/eval_val/97/corr True
I0105 13:28:01.745567 140409914992384 hlog.py:32] train/00149/eval_val/97 
I0105 13:28:01.745602 140409914992384 hlog.py:18] train/00149/eval_val/97{0.00s}
I0105 13:28:01.745659 140409914992384 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I0105 13:28:01.745720 140409914992384 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I0105 13:28:01.745772 140409914992384 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I0105 13:28:01.745808 140409914992384 hlog.py:32] train/00149/eval_val/98/corr True
I0105 13:28:01.745840 140409914992384 hlog.py:32] train/00149/eval_val/98 
I0105 13:28:01.745871 140409914992384 hlog.py:18] train/00149/eval_val/98{0.00s}
I0105 13:28:01.745915 140409914992384 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I0105 13:28:01.745962 140409914992384 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I0105 13:28:01.746005 140409914992384 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I0105 13:28:01.746046 140409914992384 hlog.py:32] train/00149/eval_val/99/corr True
I0105 13:28:01.746078 140409914992384 hlog.py:32] train/00149/eval_val/99 
I0105 13:28:01.746112 140409914992384 hlog.py:18] train/00149/eval_val/99{0.00s}
I0105 13:28:01.746189 140409914992384 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I0105 13:28:01.746277 140409914992384 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0105 13:28:01.746360 140409914992384 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0105 13:28:01.746404 140409914992384 hlog.py:32] train/00149/eval_val/100/corr True
I0105 13:28:01.746437 140409914992384 hlog.py:32] train/00149/eval_val/100 
I0105 13:28:01.746468 140409914992384 hlog.py:18] train/00149/eval_val/100{0.00s}
I0105 13:28:01.746518 140409914992384 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I0105 13:28:01.746581 140409914992384 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0105 13:28:01.746633 140409914992384 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0105 13:28:01.746676 140409914992384 hlog.py:32] train/00149/eval_val/101/corr True
I0105 13:28:01.746709 140409914992384 hlog.py:32] train/00149/eval_val/101 
I0105 13:28:01.746739 140409914992384 hlog.py:18] train/00149/eval_val/101{0.00s}
I0105 13:28:01.746783 140409914992384 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I0105 13:28:01.746828 140409914992384 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I0105 13:28:01.746869 140409914992384 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I0105 13:28:01.746903 140409914992384 hlog.py:32] train/00149/eval_val/102/corr True
I0105 13:28:01.746935 140409914992384 hlog.py:32] train/00149/eval_val/102 
I0105 13:28:01.746966 140409914992384 hlog.py:18] train/00149/eval_val/102{0.00s}
I0105 13:28:01.747011 140409914992384 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I0105 13:28:01.747096 140409914992384 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I0105 13:28:01.747174 140409914992384 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I0105 13:28:01.747215 140409914992384 hlog.py:32] train/00149/eval_val/103/corr True
I0105 13:28:01.747248 140409914992384 hlog.py:32] train/00149/eval_val/103 
I0105 13:28:01.747279 140409914992384 hlog.py:18] train/00149/eval_val/103{0.00s}
I0105 13:28:01.747322 140409914992384 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I0105 13:28:01.747366 140409914992384 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.747433 140409914992384 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.747480 140409914992384 hlog.py:32] train/00149/eval_val/104/corr True
I0105 13:28:01.747514 140409914992384 hlog.py:32] train/00149/eval_val/104 
I0105 13:28:01.747549 140409914992384 hlog.py:18] train/00149/eval_val/104{0.00s}
I0105 13:28:01.747607 140409914992384 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I0105 13:28:01.747658 140409914992384 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I0105 13:28:01.747706 140409914992384 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I0105 13:28:01.747741 140409914992384 hlog.py:32] train/00149/eval_val/105/corr True
I0105 13:28:01.747773 140409914992384 hlog.py:32] train/00149/eval_val/105 
I0105 13:28:01.747803 140409914992384 hlog.py:18] train/00149/eval_val/105{0.00s}
I0105 13:28:01.747845 140409914992384 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I0105 13:28:01.747888 140409914992384 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I0105 13:28:01.747955 140409914992384 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I0105 13:28:01.748028 140409914992384 hlog.py:32] train/00149/eval_val/106/corr True
I0105 13:28:01.748084 140409914992384 hlog.py:32] train/00149/eval_val/106 
I0105 13:28:01.748120 140409914992384 hlog.py:18] train/00149/eval_val/106{0.00s}
I0105 13:28:01.748165 140409914992384 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I0105 13:28:01.748212 140409914992384 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.748254 140409914992384 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.748291 140409914992384 hlog.py:32] train/00149/eval_val/107/corr True
I0105 13:28:01.748326 140409914992384 hlog.py:32] train/00149/eval_val/107 
I0105 13:28:01.748356 140409914992384 hlog.py:18] train/00149/eval_val/107{0.00s}
I0105 13:28:01.748407 140409914992384 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I0105 13:28:01.748469 140409914992384 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I0105 13:28:01.748518 140409914992384 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I0105 13:28:01.748553 140409914992384 hlog.py:32] train/00149/eval_val/108/corr True
I0105 13:28:01.748584 140409914992384 hlog.py:32] train/00149/eval_val/108 
I0105 13:28:01.748615 140409914992384 hlog.py:18] train/00149/eval_val/108{0.00s}
I0105 13:28:01.748656 140409914992384 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I0105 13:28:01.748700 140409914992384 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I0105 13:28:01.748741 140409914992384 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I0105 13:28:01.748775 140409914992384 hlog.py:32] train/00149/eval_val/109/corr True
I0105 13:28:01.748808 140409914992384 hlog.py:32] train/00149/eval_val/109 
I0105 13:28:01.748866 140409914992384 hlog.py:18] train/00149/eval_val/109{0.00s}
I0105 13:28:01.748948 140409914992384 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I0105 13:28:01.749006 140409914992384 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.749050 140409914992384 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0105 13:28:01.749085 140409914992384 hlog.py:32] train/00149/eval_val/110/corr True
I0105 13:28:01.749117 140409914992384 hlog.py:32] train/00149/eval_val/110 
I0105 13:28:01.749147 140409914992384 hlog.py:18] train/00149/eval_val/110{0.00s}
I0105 13:28:01.749193 140409914992384 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I0105 13:28:01.749252 140409914992384 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I0105 13:28:01.749316 140409914992384 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I0105 13:28:01.749360 140409914992384 hlog.py:32] train/00149/eval_val/111/corr True
I0105 13:28:01.749396 140409914992384 hlog.py:32] train/00149/eval_val/111 
I0105 13:28:01.749427 140409914992384 hlog.py:18] train/00149/eval_val/111{0.00s}
I0105 13:28:01.749469 140409914992384 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I0105 13:28:01.749513 140409914992384 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I0105 13:28:01.749554 140409914992384 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I0105 13:28:01.749588 140409914992384 hlog.py:32] train/00149/eval_val/112/corr True
I0105 13:28:01.749620 140409914992384 hlog.py:32] train/00149/eval_val/112 
I0105 13:28:01.749650 140409914992384 hlog.py:18] train/00149/eval_val/112{0.00s}
I0105 13:28:01.749693 140409914992384 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I0105 13:28:01.749768 140409914992384 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0105 13:28:01.749848 140409914992384 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0105 13:28:01.749896 140409914992384 hlog.py:32] train/00149/eval_val/113/corr True
I0105 13:28:01.749929 140409914992384 hlog.py:32] train/00149/eval_val/113 
I0105 13:28:01.749960 140409914992384 hlog.py:18] train/00149/eval_val/113{0.00s}
I0105 13:28:01.750003 140409914992384 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I0105 13:28:01.750048 140409914992384 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.750092 140409914992384 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0105 13:28:01.750130 140409914992384 hlog.py:32] train/00149/eval_val/114/corr True
I0105 13:28:01.750173 140409914992384 hlog.py:32] train/00149/eval_val/114 
I0105 13:28:01.750212 140409914992384 hlog.py:18] train/00149/eval_val/114{0.00s}
I0105 13:28:01.750262 140409914992384 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I0105 13:28:01.750310 140409914992384 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I0105 13:28:01.750351 140409914992384 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I0105 13:28:01.750386 140409914992384 hlog.py:32] train/00149/eval_val/115/corr True
I0105 13:28:01.750417 140409914992384 hlog.py:32] train/00149/eval_val/115 
I0105 13:28:01.750448 140409914992384 hlog.py:18] train/00149/eval_val/115{0.00s}
I0105 13:28:01.750489 140409914992384 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I0105 13:28:01.750533 140409914992384 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.750573 140409914992384 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0105 13:28:01.750610 140409914992384 hlog.py:32] train/00149/eval_val/116/corr True
I0105 13:28:01.750671 140409914992384 hlog.py:32] train/00149/eval_val/116 
I0105 13:28:01.750731 140409914992384 hlog.py:18] train/00149/eval_val/116{0.00s}
I0105 13:28:01.750796 140409914992384 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I0105 13:28:01.750850 140409914992384 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.750893 140409914992384 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.750929 140409914992384 hlog.py:32] train/00149/eval_val/117/corr True
I0105 13:28:01.750961 140409914992384 hlog.py:32] train/00149/eval_val/117 
I0105 13:28:01.750992 140409914992384 hlog.py:18] train/00149/eval_val/117{0.00s}
I0105 13:28:01.751034 140409914992384 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I0105 13:28:01.751080 140409914992384 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.751122 140409914992384 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.751170 140409914992384 hlog.py:32] train/00149/eval_val/118/corr True
I0105 13:28:01.751207 140409914992384 hlog.py:32] train/00149/eval_val/118 
I0105 13:28:01.751238 140409914992384 hlog.py:18] train/00149/eval_val/118{0.00s}
I0105 13:28:01.751281 140409914992384 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I0105 13:28:01.751331 140409914992384 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.751373 140409914992384 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0105 13:28:01.751408 140409914992384 hlog.py:32] train/00149/eval_val/119/corr True
I0105 13:28:01.751439 140409914992384 hlog.py:32] train/00149/eval_val/119 
I0105 13:28:01.751470 140409914992384 hlog.py:18] train/00149/eval_val/119{0.00s}
I0105 13:28:01.751515 140409914992384 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I0105 13:28:01.751592 140409914992384 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I0105 13:28:01.751657 140409914992384 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I0105 13:28:01.751703 140409914992384 hlog.py:32] train/00149/eval_val/120/corr True
I0105 13:28:01.751737 140409914992384 hlog.py:32] train/00149/eval_val/120 
I0105 13:28:01.751768 140409914992384 hlog.py:18] train/00149/eval_val/120{0.00s}
I0105 13:28:01.751810 140409914992384 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I0105 13:28:01.751851 140409914992384 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I0105 13:28:01.751896 140409914992384 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I0105 13:28:01.751932 140409914992384 hlog.py:32] train/00149/eval_val/121/corr True
I0105 13:28:01.751964 140409914992384 hlog.py:32] train/00149/eval_val/121 
I0105 13:28:01.751994 140409914992384 hlog.py:18] train/00149/eval_val/121{0.00s}
I0105 13:28:01.752039 140409914992384 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I0105 13:28:01.752088 140409914992384 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I0105 13:28:01.752139 140409914992384 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I0105 13:28:01.752174 140409914992384 hlog.py:32] train/00149/eval_val/122/corr True
I0105 13:28:01.752208 140409914992384 hlog.py:32] train/00149/eval_val/122 
I0105 13:28:01.752240 140409914992384 hlog.py:18] train/00149/eval_val/122{0.00s}
I0105 13:28:01.752288 140409914992384 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I0105 13:28:01.752353 140409914992384 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I0105 13:28:01.752398 140409914992384 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I0105 13:28:01.752458 140409914992384 hlog.py:32] train/00149/eval_val/123/corr True
I0105 13:28:01.752522 140409914992384 hlog.py:32] train/00149/eval_val/123 
I0105 13:28:01.752564 140409914992384 hlog.py:18] train/00149/eval_val/123{0.00s}
I0105 13:28:01.752609 140409914992384 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I0105 13:28:01.752667 140409914992384 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I0105 13:28:01.752712 140409914992384 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I0105 13:28:01.752746 140409914992384 hlog.py:32] train/00149/eval_val/124/corr True
I0105 13:28:01.752780 140409914992384 hlog.py:32] train/00149/eval_val/124 
I0105 13:28:01.752816 140409914992384 hlog.py:18] train/00149/eval_val/124{0.00s}
I0105 13:28:01.752859 140409914992384 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I0105 13:28:01.752905 140409914992384 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I0105 13:28:01.752954 140409914992384 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I0105 13:28:01.752993 140409914992384 hlog.py:32] train/00149/eval_val/125/corr True
I0105 13:28:01.753025 140409914992384 hlog.py:32] train/00149/eval_val/125 
I0105 13:28:01.753055 140409914992384 hlog.py:18] train/00149/eval_val/125{0.00s}
I0105 13:28:01.753101 140409914992384 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I0105 13:28:01.753144 140409914992384 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.753197 140409914992384 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.753239 140409914992384 hlog.py:32] train/00149/eval_val/126/corr True
I0105 13:28:01.753298 140409914992384 hlog.py:32] train/00149/eval_val/126 
I0105 13:28:01.753355 140409914992384 hlog.py:18] train/00149/eval_val/126{0.00s}
I0105 13:28:01.753439 140409914992384 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I0105 13:28:01.753508 140409914992384 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.753559 140409914992384 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.753596 140409914992384 hlog.py:32] train/00149/eval_val/127/corr True
I0105 13:28:01.753628 140409914992384 hlog.py:32] train/00149/eval_val/127 
I0105 13:28:01.753659 140409914992384 hlog.py:18] train/00149/eval_val/127{0.00s}
I0105 13:28:01.994062 140409914992384 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I0105 13:28:01.994224 140409914992384 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994320 140409914992384 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994387 140409914992384 hlog.py:32] train/00149/eval_val/128/corr True
I0105 13:28:01.994440 140409914992384 hlog.py:32] train/00149/eval_val/128 
I0105 13:28:01.994484 140409914992384 hlog.py:18] train/00149/eval_val/128{0.00s}
I0105 13:28:01.994544 140409914992384 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I0105 13:28:01.994623 140409914992384 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994673 140409914992384 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994714 140409914992384 hlog.py:32] train/00149/eval_val/129/corr True
I0105 13:28:01.994748 140409914992384 hlog.py:32] train/00149/eval_val/129 
I0105 13:28:01.994782 140409914992384 hlog.py:18] train/00149/eval_val/129{0.00s}
I0105 13:28:01.994832 140409914992384 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I0105 13:28:01.994882 140409914992384 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994926 140409914992384 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.994963 140409914992384 hlog.py:32] train/00149/eval_val/130/corr True
I0105 13:28:01.994996 140409914992384 hlog.py:32] train/00149/eval_val/130 
I0105 13:28:01.995028 140409914992384 hlog.py:18] train/00149/eval_val/130{0.00s}
I0105 13:28:01.995073 140409914992384 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I0105 13:28:01.995122 140409914992384 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.995177 140409914992384 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.995216 140409914992384 hlog.py:32] train/00149/eval_val/131/corr True
I0105 13:28:01.995250 140409914992384 hlog.py:32] train/00149/eval_val/131 
I0105 13:28:01.995282 140409914992384 hlog.py:18] train/00149/eval_val/131{0.00s}
I0105 13:28:01.995327 140409914992384 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I0105 13:28:01.995372 140409914992384 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.995414 140409914992384 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0105 13:28:01.995450 140409914992384 hlog.py:32] train/00149/eval_val/132/corr True
I0105 13:28:01.995483 140409914992384 hlog.py:32] train/00149/eval_val/132 
I0105 13:28:01.995514 140409914992384 hlog.py:18] train/00149/eval_val/132{0.00s}
I0105 13:28:01.995559 140409914992384 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I0105 13:28:01.995604 140409914992384 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I0105 13:28:01.995647 140409914992384 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I0105 13:28:01.995694 140409914992384 hlog.py:32] train/00149/eval_val/133/corr True
I0105 13:28:01.995728 140409914992384 hlog.py:32] train/00149/eval_val/133 
I0105 13:28:01.995759 140409914992384 hlog.py:18] train/00149/eval_val/133{0.00s}
I0105 13:28:01.995807 140409914992384 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I0105 13:28:01.995858 140409914992384 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.995904 140409914992384 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.995939 140409914992384 hlog.py:32] train/00149/eval_val/134/corr True
I0105 13:28:01.995971 140409914992384 hlog.py:32] train/00149/eval_val/134 
I0105 13:28:01.996003 140409914992384 hlog.py:18] train/00149/eval_val/134{0.00s}
I0105 13:28:01.996048 140409914992384 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I0105 13:28:01.996106 140409914992384 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.996152 140409914992384 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0105 13:28:01.996187 140409914992384 hlog.py:32] train/00149/eval_val/135/corr True
I0105 13:28:01.996219 140409914992384 hlog.py:32] train/00149/eval_val/135 
I0105 13:28:01.996250 140409914992384 hlog.py:18] train/00149/eval_val/135{0.00s}
I0105 13:28:01.996292 140409914992384 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I0105 13:28:01.996343 140409914992384 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996391 140409914992384 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996426 140409914992384 hlog.py:32] train/00149/eval_val/136/corr True
I0105 13:28:01.996458 140409914992384 hlog.py:32] train/00149/eval_val/136 
I0105 13:28:01.996489 140409914992384 hlog.py:18] train/00149/eval_val/136{0.00s}
I0105 13:28:01.996532 140409914992384 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I0105 13:28:01.996577 140409914992384 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996619 140409914992384 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996656 140409914992384 hlog.py:32] train/00149/eval_val/137/corr True
I0105 13:28:01.996694 140409914992384 hlog.py:32] train/00149/eval_val/137 
I0105 13:28:01.996733 140409914992384 hlog.py:18] train/00149/eval_val/137{0.00s}
I0105 13:28:01.996786 140409914992384 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I0105 13:28:01.996833 140409914992384 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996875 140409914992384 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.996909 140409914992384 hlog.py:32] train/00149/eval_val/138/corr True
I0105 13:28:01.996941 140409914992384 hlog.py:32] train/00149/eval_val/138 
I0105 13:28:01.996971 140409914992384 hlog.py:18] train/00149/eval_val/138{0.00s}
I0105 13:28:01.997014 140409914992384 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I0105 13:28:01.997059 140409914992384 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.997101 140409914992384 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0105 13:28:01.997135 140409914992384 hlog.py:32] train/00149/eval_val/139/corr True
I0105 13:28:01.997166 140409914992384 hlog.py:32] train/00149/eval_val/139 
I0105 13:28:01.997197 140409914992384 hlog.py:18] train/00149/eval_val/139{0.00s}
I0105 13:28:01.997246 140409914992384 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I0105 13:28:01.997317 140409914992384 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0105 13:28:01.997369 140409914992384 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0105 13:28:01.997405 140409914992384 hlog.py:32] train/00149/eval_val/140/corr True
I0105 13:28:01.997437 140409914992384 hlog.py:32] train/00149/eval_val/140 
I0105 13:28:01.997467 140409914992384 hlog.py:18] train/00149/eval_val/140{0.00s}
I0105 13:28:01.997518 140409914992384 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I0105 13:28:01.997567 140409914992384 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0105 13:28:01.997611 140409914992384 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0105 13:28:01.997647 140409914992384 hlog.py:32] train/00149/eval_val/141/corr True
I0105 13:28:01.997678 140409914992384 hlog.py:32] train/00149/eval_val/141 
I0105 13:28:01.997709 140409914992384 hlog.py:18] train/00149/eval_val/141{0.00s}
I0105 13:28:01.997751 140409914992384 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I0105 13:28:01.997795 140409914992384 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0105 13:28:01.997835 140409914992384 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0105 13:28:01.997870 140409914992384 hlog.py:32] train/00149/eval_val/142/corr True
I0105 13:28:01.997901 140409914992384 hlog.py:32] train/00149/eval_val/142 
I0105 13:28:01.997932 140409914992384 hlog.py:18] train/00149/eval_val/142{0.00s}
I0105 13:28:01.997972 140409914992384 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I0105 13:28:01.998016 140409914992384 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0105 13:28:01.998055 140409914992384 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0105 13:28:01.998090 140409914992384 hlog.py:32] train/00149/eval_val/143/corr True
I0105 13:28:01.998130 140409914992384 hlog.py:32] train/00149/eval_val/143 
I0105 13:28:01.998170 140409914992384 hlog.py:18] train/00149/eval_val/143{0.00s}
I0105 13:28:01.998215 140409914992384 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I0105 13:28:01.998259 140409914992384 hlog.py:32] train/00149/eval_val/144/pred ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I0105 13:28:01.998299 140409914992384 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I0105 13:28:01.998334 140409914992384 hlog.py:32] train/00149/eval_val/144/corr True
I0105 13:28:01.998365 140409914992384 hlog.py:32] train/00149/eval_val/144 
I0105 13:28:01.998396 140409914992384 hlog.py:18] train/00149/eval_val/144{0.00s}
I0105 13:28:01.998437 140409914992384 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I0105 13:28:01.998480 140409914992384 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I0105 13:28:01.998521 140409914992384 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I0105 13:28:01.998555 140409914992384 hlog.py:32] train/00149/eval_val/145/corr True
I0105 13:28:01.998586 140409914992384 hlog.py:32] train/00149/eval_val/145 
I0105 13:28:01.998616 140409914992384 hlog.py:18] train/00149/eval_val/145{0.00s}
I0105 13:28:01.998663 140409914992384 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I0105 13:28:01.998715 140409914992384 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I0105 13:28:01.998761 140409914992384 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I0105 13:28:01.998795 140409914992384 hlog.py:32] train/00149/eval_val/146/corr True
I0105 13:28:01.998832 140409914992384 hlog.py:32] train/00149/eval_val/146 
I0105 13:28:01.998863 140409914992384 hlog.py:18] train/00149/eval_val/146{0.00s}
I0105 13:28:01.998906 140409914992384 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I0105 13:28:01.998952 140409914992384 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I0105 13:28:01.998998 140409914992384 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I0105 13:28:01.999040 140409914992384 hlog.py:32] train/00149/eval_val/147/corr True
I0105 13:28:01.999079 140409914992384 hlog.py:32] train/00149/eval_val/147 
I0105 13:28:01.999111 140409914992384 hlog.py:18] train/00149/eval_val/147{0.00s}
I0105 13:28:01.999145 140409914992384 hlog.py:32] train/00149/eval_val/acc 1.0000
I0105 13:28:02.612010 140409914992384 hlog.py:32] train/00149/eval_test/acc 0.5000
I0105 13:28:02.639729 140409914992384 hlog.py:18] train/00149{28.74s}
I0105 13:28:02.642433 140409914992384 hlog.py:18] train{4643.13s}
