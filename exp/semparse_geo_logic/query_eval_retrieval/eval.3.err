I0116 10:30:37.434010 140170209232640 hlog.py:24] # --TEST
I0116 10:30:37.434338 140170209232640 hlog.py:24] # --seed=3
I0116 10:30:37.434428 140170209232640 hlog.py:24] # --dataset=semparse
I0116 10:30:37.434509 140170209232640 hlog.py:24] # --model_dir=model
I0116 10:30:37.434579 140170209232640 hlog.py:24] # --n_checkpoint=10
I0116 10:30:37.434639 140170209232640 hlog.py:24] # --device=cuda:0
I0116 10:30:37.434692 140170209232640 hlog.py:24] # --nologtostderr
I0116 10:30:37.434740 140170209232640 hlog.py:24] # --noalsologtostderr
I0116 10:30:37.434780 140170209232640 hlog.py:24] # --log_dir=
I0116 10:30:37.434818 140170209232640 hlog.py:24] # --verbosity=0
I0116 10:30:37.434854 140170209232640 hlog.py:24] # --verbosity=0
I0116 10:30:37.434886 140170209232640 hlog.py:24] # --stderrthreshold=fatal
I0116 10:30:37.434918 140170209232640 hlog.py:24] # --showprefixforinfo
I0116 10:30:37.434950 140170209232640 hlog.py:24] # --nodedup
I0116 10:30:37.434980 140170209232640 hlog.py:24] # --wug_size=4
I0116 10:30:37.435011 140170209232640 hlog.py:24] # --wug_count=2
I0116 10:30:37.435042 140170209232640 hlog.py:24] # --nocompute_adjacency
I0116 10:30:37.435073 140170209232640 hlog.py:24] # --semparse_split=query
I0116 10:30:37.435103 140170209232640 hlog.py:24] # --semparse_dataset=/data/jda/text2sql-data/data/non-sql-data/geography-logic.txt
I0116 10:30:37.435133 140170209232640 hlog.py:24] # --semparse_mrl=logic
I0116 10:30:37.435163 140170209232640 hlog.py:24] # --val_fold=8
I0116 10:30:37.435193 140170209232640 hlog.py:24] # --test_fold=9
I0116 10:30:37.435222 140170209232640 hlog.py:24] # --n_emb=64
I0116 10:30:37.435252 140170209232640 hlog.py:24] # --n_enc=512
I0116 10:30:37.435282 140170209232640 hlog.py:24] # --dropout=0.5
I0116 10:30:37.435312 140170209232640 hlog.py:24] # --copy_sup
I0116 10:30:37.435373 140170209232640 hlog.py:24] # --n_epochs=150
I0116 10:30:37.435405 140170209232640 hlog.py:24] # --n_epoch_batches=32
I0116 10:30:37.435436 140170209232640 hlog.py:24] # --n_batch=64
I0116 10:30:37.435466 140170209232640 hlog.py:24] # --lr=0.001
I0116 10:30:37.435496 140170209232640 hlog.py:24] # --clip=1.0
I0116 10:30:37.435525 140170209232640 hlog.py:24] # --sched_factor=0.5
I0116 10:30:37.435555 140170209232640 hlog.py:24] # --norun_with_pdb
I0116 10:30:37.435585 140170209232640 hlog.py:24] # --nopdb_post_mortem
I0116 10:30:37.435615 140170209232640 hlog.py:24] # --norun_with_profiling
I0116 10:30:37.435644 140170209232640 hlog.py:24] # --use_cprofile_for_profiling
I0116 10:30:37.435674 140170209232640 hlog.py:24] # --noonly_check_args
I0116 10:30:37.435703 140170209232640 hlog.py:24] # --augment=composed.3.json
I0116 10:30:37.435733 140170209232640 hlog.py:24] # --aug_ratio=0.3
I0116 10:30:37.435763 140170209232640 hlog.py:24] # --noinvert
I0116 10:30:37.435792 140170209232640 hlog.py:24] # --nohelp
I0116 10:30:37.435822 140170209232640 hlog.py:24] # --nohelp
I0116 10:30:37.435851 140170209232640 hlog.py:24] # --nohelpshort
I0116 10:30:37.435880 140170209232640 hlog.py:24] # --nohelpfull
I0116 10:30:37.435909 140170209232640 hlog.py:24] # --nohelpxml
I0116 10:30:37.435939 140170209232640 hlog.py:24] # 
I0116 10:30:37.472364 140170209232640 hlog.py:32] train 691
I0116 10:30:37.472502 140170209232640 hlog.py:32] aug 798
I0116 10:30:55.990221 140170209232640 hlog.py:32] train/00000/loss 3.3391
I0116 10:31:04.617506 140170209232640 hlog.py:32] train/00000/eval_train/acc 0.0000
I0116 10:31:06.060591 140170209232640 hlog.py:32] train/00000/eval_val/acc 0.0000
I0116 10:31:07.585500 140170209232640 hlog.py:32] train/00000/eval_test/acc 0.0000
I0116 10:31:07.585861 140170209232640 hlog.py:18] train/00000{25.56s}
I0116 10:31:21.529728 140170209232640 hlog.py:32] train/00001/loss 1.2106
I0116 10:31:23.277496 140170209232640 hlog.py:32] train/00001/eval_train/acc 0.0000
I0116 10:31:23.572524 140170209232640 hlog.py:32] train/00001/eval_val/acc 0.0000
I0116 10:31:23.871199 140170209232640 hlog.py:32] train/00001/eval_test/acc 0.0000
I0116 10:31:23.871628 140170209232640 hlog.py:18] train/00001{16.29s}
I0116 10:31:37.987966 140170209232640 hlog.py:32] train/00002/loss 0.7907
I0116 10:31:40.085498 140170209232640 hlog.py:32] train/00002/eval_train/acc 0.0020
I0116 10:31:40.406083 140170209232640 hlog.py:32] train/00002/eval_val/acc 0.0000
I0116 10:31:40.730663 140170209232640 hlog.py:32] train/00002/eval_test/acc 0.0376
I0116 10:31:40.731070 140170209232640 hlog.py:18] train/00002{16.86s}
I0116 10:31:54.008380 140170209232640 hlog.py:32] train/00003/loss 0.5731
I0116 10:31:57.210048 140170209232640 hlog.py:32] train/00003/eval_train/acc 0.0070
I0116 10:31:57.832544 140170209232640 hlog.py:32] train/00003/eval_val/acc 0.0000
I0116 10:31:58.456932 140170209232640 hlog.py:32] train/00003/eval_test/acc 0.1075
I0116 10:31:58.457350 140170209232640 hlog.py:18] train/00003{17.73s}
I0116 10:32:13.383400 140170209232640 hlog.py:32] train/00004/loss 0.4974
I0116 10:32:18.781344 140170209232640 hlog.py:32] train/00004/eval_train/acc 0.0720
I0116 10:32:19.513081 140170209232640 hlog.py:32] train/00004/eval_val/acc 0.0000
I0116 10:32:20.486068 140170209232640 hlog.py:32] train/00004/eval_test/acc 0.0753
I0116 10:32:20.486845 140170209232640 hlog.py:18] train/00004{22.03s}
I0116 10:32:33.488450 140170209232640 hlog.py:32] train/00005/loss 0.4176
I0116 10:32:37.983403 140170209232640 hlog.py:32] train/00005/eval_train/acc 0.1410
I0116 10:32:38.432353 140170209232640 hlog.py:32] train/00005/eval_val/acc 0.0811
I0116 10:32:38.946497 140170209232640 hlog.py:32] train/00005/eval_test/acc 0.0591
I0116 10:32:38.947039 140170209232640 hlog.py:18] train/00005{18.46s}
I0116 10:32:51.478066 140170209232640 hlog.py:32] train/00006/loss 0.3395
I0116 10:32:54.581192 140170209232640 hlog.py:32] train/00006/eval_train/acc 0.2300
I0116 10:32:55.190402 140170209232640 hlog.py:32] train/00006/eval_val/acc 0.2230
I0116 10:32:55.897827 140170209232640 hlog.py:32] train/00006/eval_test/acc 0.0806
I0116 10:32:55.898374 140170209232640 hlog.py:18] train/00006{16.95s}
I0116 10:33:09.041068 140170209232640 hlog.py:32] train/00007/loss 0.3088
I0116 10:33:12.324563 140170209232640 hlog.py:32] train/00007/eval_train/acc 0.3030
I0116 10:33:12.838289 140170209232640 hlog.py:32] train/00007/eval_val/acc 0.3378
I0116 10:33:13.551922 140170209232640 hlog.py:32] train/00007/eval_test/acc 0.2419
I0116 10:33:13.552331 140170209232640 hlog.py:18] train/00007{17.65s}
I0116 10:33:27.666785 140170209232640 hlog.py:32] train/00008/loss 0.2673
I0116 10:33:31.326582 140170209232640 hlog.py:32] train/00008/eval_train/acc 0.3670
I0116 10:33:32.020676 140170209232640 hlog.py:32] train/00008/eval_val/acc 0.4054
I0116 10:33:32.491745 140170209232640 hlog.py:32] train/00008/eval_test/acc 0.1237
I0116 10:33:32.492107 140170209232640 hlog.py:18] train/00008{18.94s}
I0116 10:33:45.875497 140170209232640 hlog.py:32] train/00009/loss 0.2356
I0116 10:33:48.713270 140170209232640 hlog.py:32] train/00009/eval_train/acc 0.4250
I0116 10:33:49.149385 140170209232640 hlog.py:32] train/00009/eval_val/acc 0.4324
I0116 10:33:49.580736 140170209232640 hlog.py:32] train/00009/eval_test/acc 0.3172
I0116 10:33:49.672002 140170209232640 hlog.py:18] train/00009{17.18s}
I0116 10:34:03.974598 140170209232640 hlog.py:32] train/00010/loss 0.2221
I0116 10:34:06.764313 140170209232640 hlog.py:32] train/00010/eval_train/acc 0.4700
I0116 10:34:07.229166 140170209232640 hlog.py:32] train/00010/eval_val/acc 0.4932
I0116 10:34:07.685982 140170209232640 hlog.py:32] train/00010/eval_test/acc 0.3602
I0116 10:34:07.686334 140170209232640 hlog.py:18] train/00010{18.01s}
I0116 10:34:21.942869 140170209232640 hlog.py:32] train/00011/loss 0.1965
I0116 10:34:26.263378 140170209232640 hlog.py:32] train/00011/eval_train/acc 0.6030
I0116 10:34:27.044777 140170209232640 hlog.py:32] train/00011/eval_val/acc 0.5743
I0116 10:34:27.548028 140170209232640 hlog.py:32] train/00011/eval_test/acc 0.4301
I0116 10:34:27.548445 140170209232640 hlog.py:18] train/00011{19.86s}
I0116 10:34:41.618488 140170209232640 hlog.py:32] train/00012/loss 0.1668
I0116 10:34:46.201372 140170209232640 hlog.py:32] train/00012/eval_train/acc 0.6090
I0116 10:34:46.730217 140170209232640 hlog.py:32] train/00012/eval_val/acc 0.7297
I0116 10:34:47.236297 140170209232640 hlog.py:32] train/00012/eval_test/acc 0.4140
I0116 10:34:47.236801 140170209232640 hlog.py:18] train/00012{19.69s}
I0116 10:35:00.300904 140170209232640 hlog.py:32] train/00013/loss 0.1471
I0116 10:35:03.803213 140170209232640 hlog.py:32] train/00013/eval_train/acc 0.6960
I0116 10:35:04.373761 140170209232640 hlog.py:32] train/00013/eval_val/acc 0.7365
I0116 10:35:04.992352 140170209232640 hlog.py:32] train/00013/eval_test/acc 0.4570
I0116 10:35:04.993009 140170209232640 hlog.py:18] train/00013{17.76s}
I0116 10:35:18.979645 140170209232640 hlog.py:32] train/00014/loss 0.1239
I0116 10:35:21.975605 140170209232640 hlog.py:32] train/00014/eval_train/acc 0.6420
I0116 10:35:22.565731 140170209232640 hlog.py:32] train/00014/eval_val/acc 0.7365
I0116 10:35:23.063631 140170209232640 hlog.py:32] train/00014/eval_test/acc 0.3387
I0116 10:35:23.064111 140170209232640 hlog.py:18] train/00014{18.07s}
I0116 10:35:36.999963 140170209232640 hlog.py:32] train/00015/loss 0.1224
I0116 10:35:40.820460 140170209232640 hlog.py:32] train/00015/eval_train/acc 0.6660
I0116 10:35:41.556195 140170209232640 hlog.py:32] train/00015/eval_val/acc 0.7568
I0116 10:35:42.030822 140170209232640 hlog.py:32] train/00015/eval_test/acc 0.4194
I0116 10:35:42.031206 140170209232640 hlog.py:18] train/00015{18.97s}
I0116 10:35:55.007202 140170209232640 hlog.py:32] train/00016/loss 0.1338
I0116 10:36:01.523804 140170209232640 hlog.py:32] train/00016/eval_train/acc 0.6950
I0116 10:36:02.340308 140170209232640 hlog.py:32] train/00016/eval_val/acc 0.7568
I0116 10:36:03.072431 140170209232640 hlog.py:32] train/00016/eval_test/acc 0.4731
I0116 10:36:03.072902 140170209232640 hlog.py:18] train/00016{21.04s}
I0116 10:36:16.571061 140170209232640 hlog.py:32] train/00017/loss 0.1078
I0116 10:36:19.755403 140170209232640 hlog.py:32] train/00017/eval_train/acc 0.7170
I0116 10:36:20.217364 140170209232640 hlog.py:32] train/00017/eval_val/acc 0.8041
I0116 10:36:20.701520 140170209232640 hlog.py:32] train/00017/eval_test/acc 0.5108
I0116 10:36:20.702086 140170209232640 hlog.py:18] train/00017{17.63s}
I0116 10:36:34.235677 140170209232640 hlog.py:32] train/00018/loss 0.0961
I0116 10:36:37.369648 140170209232640 hlog.py:32] train/00018/eval_train/acc 0.7960
I0116 10:36:37.843609 140170209232640 hlog.py:32] train/00018/eval_val/acc 0.8446
I0116 10:36:38.330462 140170209232640 hlog.py:32] train/00018/eval_test/acc 0.5430
I0116 10:36:38.331058 140170209232640 hlog.py:18] train/00018{17.63s}
I0116 10:36:53.153410 140170209232640 hlog.py:32] train/00019/loss 0.0894
I0116 10:36:56.146036 140170209232640 hlog.py:32] train/00019/eval_train/acc 0.7800
I0116 10:36:56.627735 140170209232640 hlog.py:32] train/00019/eval_val/acc 0.8108
I0116 10:36:57.075136 140170209232640 hlog.py:32] train/00019/eval_test/acc 0.5054
I0116 10:36:57.099934 140170209232640 hlog.py:18] train/00019{18.77s}
I0116 10:37:10.466643 140170209232640 hlog.py:32] train/00020/loss 0.0896
I0116 10:37:14.272602 140170209232640 hlog.py:32] train/00020/eval_train/acc 0.7540
I0116 10:37:14.730187 140170209232640 hlog.py:32] train/00020/eval_val/acc 0.8243
I0116 10:37:15.208308 140170209232640 hlog.py:32] train/00020/eval_test/acc 0.4677
I0116 10:37:15.208875 140170209232640 hlog.py:18] train/00020{18.11s}
I0116 10:37:28.805359 140170209232640 hlog.py:32] train/00021/loss 0.0810
I0116 10:37:31.797913 140170209232640 hlog.py:32] train/00021/eval_train/acc 0.7980
I0116 10:37:32.258705 140170209232640 hlog.py:32] train/00021/eval_val/acc 0.8108
I0116 10:37:32.688060 140170209232640 hlog.py:32] train/00021/eval_test/acc 0.5000
I0116 10:37:32.688472 140170209232640 hlog.py:18] train/00021{17.48s}
I0116 10:37:47.247519 140170209232640 hlog.py:32] train/00022/loss 0.0914
I0116 10:37:50.331348 140170209232640 hlog.py:32] train/00022/eval_train/acc 0.8180
I0116 10:37:50.796410 140170209232640 hlog.py:32] train/00022/eval_val/acc 0.9054
I0116 10:37:51.282196 140170209232640 hlog.py:32] train/00022/eval_test/acc 0.5484
I0116 10:37:51.282543 140170209232640 hlog.py:18] train/00022{18.59s}
I0116 10:38:05.478115 140170209232640 hlog.py:32] train/00023/loss 0.0919
I0116 10:38:09.492670 140170209232640 hlog.py:32] train/00023/eval_train/acc 0.7530
I0116 10:38:09.994875 140170209232640 hlog.py:32] train/00023/eval_val/acc 0.7635
I0116 10:38:10.485589 140170209232640 hlog.py:32] train/00023/eval_test/acc 0.5054
I0116 10:38:10.485949 140170209232640 hlog.py:18] train/00023{19.20s}
I0116 10:38:26.433248 140170209232640 hlog.py:32] train/00024/loss 0.0862
I0116 10:38:29.916759 140170209232640 hlog.py:32] train/00024/eval_train/acc 0.8170
I0116 10:38:30.500514 140170209232640 hlog.py:32] train/00024/eval_val/acc 0.8716
I0116 10:38:31.117023 140170209232640 hlog.py:32] train/00024/eval_test/acc 0.5161
I0116 10:38:31.117687 140170209232640 hlog.py:18] train/00024{20.63s}
I0116 10:38:44.981661 140170209232640 hlog.py:32] train/00025/loss 0.0699
I0116 10:38:47.931860 140170209232640 hlog.py:32] train/00025/eval_train/acc 0.8430
I0116 10:38:48.406969 140170209232640 hlog.py:32] train/00025/eval_val/acc 0.9054
I0116 10:38:48.865518 140170209232640 hlog.py:32] train/00025/eval_test/acc 0.5376
I0116 10:38:48.866145 140170209232640 hlog.py:18] train/00025{17.75s}
I0116 10:39:01.823154 140170209232640 hlog.py:32] train/00026/loss 0.0694
I0116 10:39:04.836605 140170209232640 hlog.py:32] train/00026/eval_train/acc 0.8630
I0116 10:39:05.325191 140170209232640 hlog.py:32] train/00026/eval_val/acc 0.8581
I0116 10:39:05.848133 140170209232640 hlog.py:32] train/00026/eval_test/acc 0.5323
I0116 10:39:05.848530 140170209232640 hlog.py:18] train/00026{16.98s}
I0116 10:39:19.636588 140170209232640 hlog.py:32] train/00027/loss 0.0613
I0116 10:39:22.966310 140170209232640 hlog.py:32] train/00027/eval_train/acc 0.8570
I0116 10:39:23.492256 140170209232640 hlog.py:32] train/00027/eval_val/acc 0.8514
I0116 10:39:24.003166 140170209232640 hlog.py:32] train/00027/eval_test/acc 0.5108
I0116 10:39:24.003788 140170209232640 hlog.py:18] train/00027{18.16s}
I0116 10:39:39.114207 140170209232640 hlog.py:32] train/00028/loss 0.0681
I0116 10:39:42.751654 140170209232640 hlog.py:32] train/00028/eval_train/acc 0.8640
I0116 10:39:43.228908 140170209232640 hlog.py:32] train/00028/eval_val/acc 0.9324
I0116 10:39:43.740978 140170209232640 hlog.py:32] train/00028/eval_test/acc 0.5806
I0116 10:39:43.741333 140170209232640 hlog.py:18] train/00028{19.74s}
I0116 10:39:56.416932 140170209232640 hlog.py:32] train/00029/loss 0.0633
I0116 10:39:59.596801 140170209232640 hlog.py:32] train/00029/eval_train/acc 0.8790
I0116 10:40:00.074292 140170209232640 hlog.py:32] train/00029/eval_val/acc 0.8919
I0116 10:40:00.506870 140170209232640 hlog.py:32] train/00029/eval_test/acc 0.5645
I0116 10:40:00.534347 140170209232640 hlog.py:18] train/00029{16.79s}
I0116 10:40:14.521749 140170209232640 hlog.py:32] train/00030/loss 0.0529
I0116 10:40:17.723294 140170209232640 hlog.py:32] train/00030/eval_train/acc 0.8230
I0116 10:40:18.164246 140170209232640 hlog.py:32] train/00030/eval_val/acc 0.8176
I0116 10:40:18.624704 140170209232640 hlog.py:32] train/00030/eval_test/acc 0.5215
I0116 10:40:18.625336 140170209232640 hlog.py:18] train/00030{18.09s}
I0116 10:40:31.667473 140170209232640 hlog.py:32] train/00031/loss 0.0481
I0116 10:40:34.816932 140170209232640 hlog.py:32] train/00031/eval_train/acc 0.9190
I0116 10:40:35.317763 140170209232640 hlog.py:32] train/00031/eval_val/acc 0.9324
I0116 10:40:35.826457 140170209232640 hlog.py:32] train/00031/eval_test/acc 0.5430
I0116 10:40:35.827153 140170209232640 hlog.py:18] train/00031{17.20s}
I0116 10:40:49.330932 140170209232640 hlog.py:32] train/00032/loss 0.0462
I0116 10:40:52.474180 140170209232640 hlog.py:32] train/00032/eval_train/acc 0.8910
I0116 10:40:52.940541 140170209232640 hlog.py:32] train/00032/eval_val/acc 0.9392
I0116 10:40:53.383064 140170209232640 hlog.py:32] train/00032/eval_test/acc 0.5699
I0116 10:40:53.383697 140170209232640 hlog.py:18] train/00032{17.56s}
I0116 10:41:06.573538 140170209232640 hlog.py:32] train/00033/loss 0.0562
I0116 10:41:10.060379 140170209232640 hlog.py:32] train/00033/eval_train/acc 0.8690
I0116 10:41:10.537315 140170209232640 hlog.py:32] train/00033/eval_val/acc 0.9257
I0116 10:41:10.971643 140170209232640 hlog.py:32] train/00033/eval_test/acc 0.5323
I0116 10:41:10.972399 140170209232640 hlog.py:18] train/00033{17.59s}
I0116 10:41:25.127256 140170209232640 hlog.py:32] train/00034/loss 0.0614
I0116 10:41:28.743317 140170209232640 hlog.py:32] train/00034/eval_train/acc 0.8630
I0116 10:41:29.214756 140170209232640 hlog.py:32] train/00034/eval_val/acc 0.8986
I0116 10:41:29.741698 140170209232640 hlog.py:32] train/00034/eval_test/acc 0.5269
I0116 10:41:29.742181 140170209232640 hlog.py:18] train/00034{18.77s}
I0116 10:41:43.763132 140170209232640 hlog.py:32] train/00035/loss 0.0575
I0116 10:41:46.966353 140170209232640 hlog.py:32] train/00035/eval_train/acc 0.8790
I0116 10:41:47.445254 140170209232640 hlog.py:32] train/00035/eval_val/acc 0.9189
I0116 10:41:47.927196 140170209232640 hlog.py:32] train/00035/eval_test/acc 0.5484
I0116 10:41:47.927772 140170209232640 hlog.py:18] train/00035{18.19s}
I0116 10:42:02.385538 140170209232640 hlog.py:32] train/00036/loss 0.0612
I0116 10:42:05.743887 140170209232640 hlog.py:32] train/00036/eval_train/acc 0.9060
I0116 10:42:06.288880 140170209232640 hlog.py:32] train/00036/eval_val/acc 0.9054
I0116 10:42:06.808814 140170209232640 hlog.py:32] train/00036/eval_test/acc 0.5323
I0116 10:42:06.809494 140170209232640 hlog.py:18] train/00036{18.88s}
I0116 10:42:21.211115 140170209232640 hlog.py:32] train/00037/loss 0.0460
I0116 10:42:24.370512 140170209232640 hlog.py:32] train/00037/eval_train/acc 0.8970
I0116 10:42:24.859821 140170209232640 hlog.py:32] train/00037/eval_val/acc 0.8986
I0116 10:42:25.335989 140170209232640 hlog.py:32] train/00037/eval_test/acc 0.5000
I0116 10:42:25.336402 140170209232640 hlog.py:18] train/00037{18.53s}
I0116 10:42:40.840172 140170209232640 hlog.py:32] train/00038/loss 0.0427
I0116 10:42:43.906147 140170209232640 hlog.py:32] train/00038/eval_train/acc 0.9060
I0116 10:42:44.361762 140170209232640 hlog.py:32] train/00038/eval_val/acc 0.9257
I0116 10:42:44.811141 140170209232640 hlog.py:32] train/00038/eval_test/acc 0.5484
I0116 10:42:44.811753 140170209232640 hlog.py:18] train/00038{19.48s}
I0116 10:42:59.352632 140170209232640 hlog.py:32] train/00039/loss 0.0364
I0116 10:43:02.302011 140170209232640 hlog.py:32] train/00039/eval_train/acc 0.9300
I0116 10:43:02.764266 140170209232640 hlog.py:32] train/00039/eval_val/acc 0.9324
I0116 10:43:03.270495 140170209232640 hlog.py:32] train/00039/eval_test/acc 0.5538
I0116 10:43:03.293623 140170209232640 hlog.py:18] train/00039{18.48s}
I0116 10:43:17.698332 140170209232640 hlog.py:32] train/00040/loss 0.0364
I0116 10:43:21.209313 140170209232640 hlog.py:32] train/00040/eval_train/acc 0.9310
I0116 10:43:21.677856 140170209232640 hlog.py:32] train/00040/eval_val/acc 0.9324
I0116 10:43:22.149706 140170209232640 hlog.py:32] train/00040/eval_test/acc 0.5591
I0116 10:43:22.150355 140170209232640 hlog.py:18] train/00040{18.86s}
I0116 10:43:35.394109 140170209232640 hlog.py:32] train/00041/loss 0.0375
I0116 10:43:38.272954 140170209232640 hlog.py:32] train/00041/eval_train/acc 0.9170
I0116 10:43:38.722429 140170209232640 hlog.py:32] train/00041/eval_val/acc 0.9392
I0116 10:43:39.157242 140170209232640 hlog.py:32] train/00041/eval_test/acc 0.5484
I0116 10:43:39.157678 140170209232640 hlog.py:18] train/00041{17.01s}
I0116 10:43:53.295249 140170209232640 hlog.py:32] train/00042/loss 0.0415
I0116 10:43:56.404667 140170209232640 hlog.py:32] train/00042/eval_train/acc 0.9170
I0116 10:43:56.881514 140170209232640 hlog.py:32] train/00042/eval_val/acc 0.9324
I0116 10:43:57.373835 140170209232640 hlog.py:32] train/00042/eval_test/acc 0.5161
I0116 10:43:57.374519 140170209232640 hlog.py:18] train/00042{18.22s}
I0116 10:44:12.420425 140170209232640 hlog.py:32] train/00043/loss 0.0406
I0116 10:44:15.796840 140170209232640 hlog.py:32] train/00043/eval_train/acc 0.9020
I0116 10:44:16.299004 140170209232640 hlog.py:32] train/00043/eval_val/acc 0.9054
I0116 10:44:16.816955 140170209232640 hlog.py:32] train/00043/eval_test/acc 0.5161
I0116 10:44:16.817402 140170209232640 hlog.py:18] train/00043{19.44s}
I0116 10:44:30.597352 140170209232640 hlog.py:32] train/00044/loss 0.0333
I0116 10:44:33.796688 140170209232640 hlog.py:32] train/00044/eval_train/acc 0.9370
I0116 10:44:34.250241 140170209232640 hlog.py:32] train/00044/eval_val/acc 0.9595
I0116 10:44:34.687356 140170209232640 hlog.py:32] train/00044/eval_test/acc 0.5538
I0116 10:44:34.688006 140170209232640 hlog.py:18] train/00044{17.87s}
I0116 10:44:48.255884 140170209232640 hlog.py:32] train/00045/loss 0.0253
I0116 10:44:51.480069 140170209232640 hlog.py:32] train/00045/eval_train/acc 0.9540
I0116 10:44:51.962768 140170209232640 hlog.py:32] train/00045/eval_val/acc 0.9595
I0116 10:44:52.440891 140170209232640 hlog.py:32] train/00045/eval_test/acc 0.5538
I0116 10:44:52.441409 140170209232640 hlog.py:18] train/00045{17.75s}
I0116 10:45:07.171282 140170209232640 hlog.py:32] train/00046/loss 0.0230
I0116 10:45:10.134084 140170209232640 hlog.py:32] train/00046/eval_train/acc 0.9710
I0116 10:45:10.609249 140170209232640 hlog.py:32] train/00046/eval_val/acc 0.9865
I0116 10:45:11.065683 140170209232640 hlog.py:32] train/00046/eval_test/acc 0.5323
I0116 10:45:11.066112 140170209232640 hlog.py:18] train/00046{18.62s}
I0116 10:45:25.012600 140170209232640 hlog.py:32] train/00047/loss 0.0217
I0116 10:45:28.510364 140170209232640 hlog.py:32] train/00047/eval_train/acc 0.9580
I0116 10:45:28.990474 140170209232640 hlog.py:32] train/00047/eval_val/acc 0.9662
I0116 10:45:29.484332 140170209232640 hlog.py:32] train/00047/eval_test/acc 0.5645
I0116 10:45:29.484971 140170209232640 hlog.py:18] train/00047{18.42s}
I0116 10:45:42.579055 140170209232640 hlog.py:32] train/00048/loss 0.0187
I0116 10:45:45.683757 140170209232640 hlog.py:32] train/00048/eval_train/acc 0.9790
I0116 10:45:46.165109 140170209232640 hlog.py:32] train/00048/eval_val/acc 0.9797
I0116 10:45:46.613164 140170209232640 hlog.py:32] train/00048/eval_test/acc 0.5753
I0116 10:45:46.613760 140170209232640 hlog.py:18] train/00048{17.13s}
I0116 10:46:01.556218 140170209232640 hlog.py:32] train/00049/loss 0.0180
I0116 10:46:04.598955 140170209232640 hlog.py:32] train/00049/eval_train/acc 0.9820
I0116 10:46:05.075819 140170209232640 hlog.py:32] train/00049/eval_val/acc 0.9865
I0116 10:46:05.535149 140170209232640 hlog.py:32] train/00049/eval_test/acc 0.5538
I0116 10:46:05.569622 140170209232640 hlog.py:18] train/00049{18.96s}
I0116 10:46:19.320564 140170209232640 hlog.py:32] train/00050/loss 0.0159
I0116 10:46:22.476994 140170209232640 hlog.py:32] train/00050/eval_train/acc 0.9870
I0116 10:46:22.942229 140170209232640 hlog.py:32] train/00050/eval_val/acc 0.9797
I0116 10:46:23.442880 140170209232640 hlog.py:32] train/00050/eval_test/acc 0.5591
I0116 10:46:23.443314 140170209232640 hlog.py:18] train/00050{17.87s}
I0116 10:46:36.237692 140170209232640 hlog.py:32] train/00051/loss 0.0162
I0116 10:46:39.622653 140170209232640 hlog.py:32] train/00051/eval_train/acc 0.9910
I0116 10:46:40.079777 140170209232640 hlog.py:32] train/00051/eval_val/acc 0.9932
I0116 10:46:40.544355 140170209232640 hlog.py:32] train/00051/eval_test/acc 0.5753
I0116 10:46:40.544753 140170209232640 hlog.py:18] train/00051{17.10s}
I0116 10:46:53.923086 140170209232640 hlog.py:32] train/00052/loss 0.0149
I0116 10:46:56.972154 140170209232640 hlog.py:32] train/00052/eval_train/acc 0.9870
I0116 10:46:57.440087 140170209232640 hlog.py:32] train/00052/eval_val/acc 0.9797
I0116 10:46:57.891408 140170209232640 hlog.py:32] train/00052/eval_test/acc 0.5699
I0116 10:46:57.891758 140170209232640 hlog.py:18] train/00052{17.35s}
I0116 10:47:11.743840 140170209232640 hlog.py:32] train/00053/loss 0.0157
I0116 10:47:14.759986 140170209232640 hlog.py:32] train/00053/eval_train/acc 0.9880
I0116 10:47:15.238338 140170209232640 hlog.py:32] train/00053/eval_val/acc 0.9932
I0116 10:47:15.723594 140170209232640 hlog.py:32] train/00053/eval_test/acc 0.5323
I0116 10:47:15.724264 140170209232640 hlog.py:18] train/00053{17.83s}
I0116 10:47:28.767878 140170209232640 hlog.py:32] train/00054/loss 0.0146
I0116 10:47:31.806969 140170209232640 hlog.py:32] train/00054/eval_train/acc 0.9850
I0116 10:47:32.264857 140170209232640 hlog.py:32] train/00054/eval_val/acc 0.9865
I0116 10:47:32.679891 140170209232640 hlog.py:32] train/00054/eval_test/acc 0.5430
I0116 10:47:32.680247 140170209232640 hlog.py:18] train/00054{16.96s}
I0116 10:47:47.637675 140170209232640 hlog.py:32] train/00055/loss 0.0161
I0116 10:47:50.669619 140170209232640 hlog.py:32] train/00055/eval_train/acc 0.9880
I0116 10:47:51.213849 140170209232640 hlog.py:32] train/00055/eval_val/acc 0.9865
I0116 10:47:51.652763 140170209232640 hlog.py:32] train/00055/eval_test/acc 0.5376
I0116 10:47:51.653181 140170209232640 hlog.py:18] train/00055{18.97s}
I0116 10:48:05.776375 140170209232640 hlog.py:32] train/00056/loss 0.0184
I0116 10:48:08.987895 140170209232640 hlog.py:32] train/00056/eval_train/acc 0.9910
I0116 10:48:09.439271 140170209232640 hlog.py:32] train/00056/eval_val/acc 0.9932
I0116 10:48:09.893706 140170209232640 hlog.py:32] train/00056/eval_test/acc 0.5430
I0116 10:48:09.894159 140170209232640 hlog.py:18] train/00056{18.24s}
I0116 10:48:23.508789 140170209232640 hlog.py:32] train/00057/loss 0.0139
I0116 10:48:26.657877 140170209232640 hlog.py:32] train/00057/eval_train/acc 0.9850
I0116 10:48:27.128736 140170209232640 hlog.py:32] train/00057/eval_val/acc 0.9865
I0116 10:48:27.595821 140170209232640 hlog.py:32] train/00057/eval_test/acc 0.5645
I0116 10:48:27.596294 140170209232640 hlog.py:18] train/00057{17.70s}
I0116 10:48:41.799717 140170209232640 hlog.py:32] train/00058/loss 0.0155
I0116 10:48:44.710938 140170209232640 hlog.py:32] train/00058/eval_train/acc 0.9870
I0116 10:48:45.178002 140170209232640 hlog.py:32] train/00058/eval_val/acc 0.9932
I0116 10:48:45.603516 140170209232640 hlog.py:32] train/00058/eval_test/acc 0.5699
I0116 10:48:45.603876 140170209232640 hlog.py:18] train/00058{18.01s}
I0116 10:48:59.153904 140170209232640 hlog.py:32] train/00059/loss 0.0130
I0116 10:49:02.201331 140170209232640 hlog.py:32] train/00059/eval_train/acc 0.9890
I0116 10:49:02.670115 140170209232640 hlog.py:32] train/00059/eval_val/acc 0.9932
I0116 10:49:03.148861 140170209232640 hlog.py:32] train/00059/eval_test/acc 0.5538
I0116 10:49:03.179149 140170209232640 hlog.py:18] train/00059{17.58s}
I0116 10:49:16.050282 140170209232640 hlog.py:32] train/00060/loss 0.0111
I0116 10:49:19.326339 140170209232640 hlog.py:32] train/00060/eval_train/acc 0.9880
I0116 10:49:19.807407 140170209232640 hlog.py:32] train/00060/eval_val/acc 0.9865
I0116 10:49:20.292598 140170209232640 hlog.py:32] train/00060/eval_test/acc 0.5484
I0116 10:49:20.292947 140170209232640 hlog.py:18] train/00060{17.11s}
I0116 10:49:33.935704 140170209232640 hlog.py:32] train/00061/loss 0.0129
I0116 10:49:37.217433 140170209232640 hlog.py:32] train/00061/eval_train/acc 0.9900
I0116 10:49:37.686632 140170209232640 hlog.py:32] train/00061/eval_val/acc 0.9730
I0116 10:49:38.101813 140170209232640 hlog.py:32] train/00061/eval_test/acc 0.5376
I0116 10:49:38.102529 140170209232640 hlog.py:18] train/00061{17.81s}
I0116 10:49:51.096129 140170209232640 hlog.py:32] train/00062/loss 0.0188
I0116 10:49:54.255212 140170209232640 hlog.py:32] train/00062/eval_train/acc 0.9890
I0116 10:49:54.730511 140170209232640 hlog.py:32] train/00062/eval_val/acc 0.9865
I0116 10:49:55.226237 140170209232640 hlog.py:32] train/00062/eval_test/acc 0.5645
I0116 10:49:55.226883 140170209232640 hlog.py:18] train/00062{17.12s}
I0116 10:50:08.749973 140170209232640 hlog.py:32] train/00063/loss 0.0133
I0116 10:50:12.310709 140170209232640 hlog.py:32] train/00063/eval_train/acc 0.9840
I0116 10:50:12.860665 140170209232640 hlog.py:32] train/00063/eval_val/acc 0.9865
I0116 10:50:13.321488 140170209232640 hlog.py:32] train/00063/eval_test/acc 0.5538
I0116 10:50:13.321886 140170209232640 hlog.py:18] train/00063{18.09s}
I0116 10:50:26.142871 140170209232640 hlog.py:32] train/00064/loss 0.0103
I0116 10:50:29.523361 140170209232640 hlog.py:32] train/00064/eval_train/acc 0.9870
I0116 10:50:30.000298 140170209232640 hlog.py:32] train/00064/eval_val/acc 0.9865
I0116 10:50:30.462476 140170209232640 hlog.py:32] train/00064/eval_test/acc 0.5538
I0116 10:50:30.463165 140170209232640 hlog.py:18] train/00064{17.14s}
I0116 10:50:45.068912 140170209232640 hlog.py:32] train/00065/loss 0.0099
I0116 10:50:48.200692 140170209232640 hlog.py:32] train/00065/eval_train/acc 0.9910
I0116 10:50:48.689352 140170209232640 hlog.py:32] train/00065/eval_val/acc 0.9932
I0116 10:50:49.138582 140170209232640 hlog.py:32] train/00065/eval_test/acc 0.5645
I0116 10:50:49.139269 140170209232640 hlog.py:18] train/00065{18.68s}
I0116 10:51:03.512719 140170209232640 hlog.py:32] train/00066/loss 0.0098
I0116 10:51:06.720996 140170209232640 hlog.py:32] train/00066/eval_train/acc 0.9890
I0116 10:51:07.226066 140170209232640 hlog.py:32] train/00066/eval_val/acc 0.9932
I0116 10:51:07.741362 140170209232640 hlog.py:32] train/00066/eval_test/acc 0.5645
I0116 10:51:07.741936 140170209232640 hlog.py:18] train/00066{18.60s}
I0116 10:51:22.203945 140170209232640 hlog.py:32] train/00067/loss 0.0104
I0116 10:51:25.850574 140170209232640 hlog.py:32] train/00067/eval_train/acc 0.9850
I0116 10:51:26.389812 140170209232640 hlog.py:32] train/00067/eval_val/acc 0.9865
I0116 10:51:26.925932 140170209232640 hlog.py:32] train/00067/eval_test/acc 0.5753
I0116 10:51:26.926760 140170209232640 hlog.py:18] train/00067{19.18s}
I0116 10:51:41.171552 140170209232640 hlog.py:32] train/00068/loss 0.0098
I0116 10:51:44.503374 140170209232640 hlog.py:32] train/00068/eval_train/acc 0.9940
I0116 10:51:44.973890 140170209232640 hlog.py:32] train/00068/eval_val/acc 1.0000
I0116 10:51:45.480972 140170209232640 hlog.py:32] train/00068/eval_test/acc 0.5806
I0116 10:51:45.481374 140170209232640 hlog.py:18] train/00068{18.55s}
I0116 10:51:59.186141 140170209232640 hlog.py:32] train/00069/loss 0.0099
I0116 10:52:02.498455 140170209232640 hlog.py:32] train/00069/eval_train/acc 0.9900
I0116 10:52:02.978667 140170209232640 hlog.py:32] train/00069/eval_val/acc 0.9865
I0116 10:52:03.485214 140170209232640 hlog.py:32] train/00069/eval_test/acc 0.5645
I0116 10:52:03.540830 140170209232640 hlog.py:18] train/00069{18.06s}
I0116 10:52:16.666808 140170209232640 hlog.py:32] train/00070/loss 0.0082
I0116 10:52:19.765642 140170209232640 hlog.py:32] train/00070/eval_train/acc 0.9950
I0116 10:52:20.271037 140170209232640 hlog.py:32] train/00070/eval_val/acc 0.9865
I0116 10:52:20.797955 140170209232640 hlog.py:32] train/00070/eval_test/acc 0.5806
I0116 10:52:20.798458 140170209232640 hlog.py:18] train/00070{17.26s}
I0116 10:52:34.526724 140170209232640 hlog.py:32] train/00071/loss 0.0079
I0116 10:52:37.802021 140170209232640 hlog.py:32] train/00071/eval_train/acc 0.9930
I0116 10:52:38.292823 140170209232640 hlog.py:32] train/00071/eval_val/acc 0.9932
I0116 10:52:38.803620 140170209232640 hlog.py:32] train/00071/eval_test/acc 0.5806
I0116 10:52:38.804090 140170209232640 hlog.py:18] train/00071{18.01s}
I0116 10:52:52.891299 140170209232640 hlog.py:32] train/00072/loss 0.0093
I0116 10:52:56.089555 140170209232640 hlog.py:32] train/00072/eval_train/acc 0.9960
I0116 10:52:56.581860 140170209232640 hlog.py:32] train/00072/eval_val/acc 0.9932
I0116 10:52:57.065579 140170209232640 hlog.py:32] train/00072/eval_test/acc 0.5699
I0116 10:52:57.066065 140170209232640 hlog.py:18] train/00072{18.26s}
I0116 10:53:11.109905 140170209232640 hlog.py:32] train/00073/loss 0.0081
I0116 10:53:14.125408 140170209232640 hlog.py:32] train/00073/eval_train/acc 0.9970
I0116 10:53:14.582489 140170209232640 hlog.py:32] train/00073/eval_val/acc 1.0000
I0116 10:53:15.070784 140170209232640 hlog.py:32] train/00073/eval_test/acc 0.5968
I0116 10:53:15.071228 140170209232640 hlog.py:18] train/00073{18.01s}
I0116 10:53:27.950797 140170209232640 hlog.py:32] train/00074/loss 0.0079
I0116 10:53:31.417394 140170209232640 hlog.py:32] train/00074/eval_train/acc 0.9920
I0116 10:53:31.900369 140170209232640 hlog.py:32] train/00074/eval_val/acc 1.0000
I0116 10:53:32.365657 140170209232640 hlog.py:32] train/00074/eval_test/acc 0.5968
I0116 10:53:32.366198 140170209232640 hlog.py:18] train/00074{17.29s}
I0116 10:53:46.950579 140170209232640 hlog.py:32] train/00075/loss 0.0082
I0116 10:53:50.361327 140170209232640 hlog.py:32] train/00075/eval_train/acc 0.9850
I0116 10:53:50.843786 140170209232640 hlog.py:32] train/00075/eval_val/acc 1.0000
I0116 10:53:51.309439 140170209232640 hlog.py:32] train/00075/eval_test/acc 0.5806
I0116 10:53:51.310046 140170209232640 hlog.py:18] train/00075{18.94s}
I0116 10:54:04.580426 140170209232640 hlog.py:32] train/00076/loss 0.0084
I0116 10:54:07.995414 140170209232640 hlog.py:32] train/00076/eval_train/acc 0.9940
I0116 10:54:08.482518 140170209232640 hlog.py:32] train/00076/eval_val/acc 0.9932
I0116 10:54:08.994190 140170209232640 hlog.py:32] train/00076/eval_test/acc 0.5484
I0116 10:54:08.994990 140170209232640 hlog.py:18] train/00076{17.68s}
I0116 10:54:23.701791 140170209232640 hlog.py:32] train/00077/loss 0.0082
I0116 10:54:27.033076 140170209232640 hlog.py:32] train/00077/eval_train/acc 0.9970
I0116 10:54:27.522139 140170209232640 hlog.py:32] train/00077/eval_val/acc 1.0000
I0116 10:54:28.027632 140170209232640 hlog.py:32] train/00077/eval_test/acc 0.5591
I0116 10:54:28.028099 140170209232640 hlog.py:18] train/00077{19.03s}
I0116 10:54:41.960053 140170209232640 hlog.py:32] train/00078/loss 0.0069
I0116 10:54:45.322199 140170209232640 hlog.py:32] train/00078/eval_train/acc 0.9950
I0116 10:54:45.788150 140170209232640 hlog.py:32] train/00078/eval_val/acc 0.9932
I0116 10:54:46.223923 140170209232640 hlog.py:32] train/00078/eval_test/acc 0.5699
I0116 10:54:46.224542 140170209232640 hlog.py:18] train/00078{18.20s}
I0116 10:55:00.102890 140170209232640 hlog.py:32] train/00079/loss 0.0069
I0116 10:55:03.356433 140170209232640 hlog.py:32] train/00079/eval_train/acc 0.9920
I0116 10:55:03.837711 140170209232640 hlog.py:32] train/00079/eval_val/acc 0.9865
I0116 10:55:04.332658 140170209232640 hlog.py:32] train/00079/eval_test/acc 0.5699
I0116 10:55:04.352842 140170209232640 hlog.py:18] train/00079{18.13s}
I0116 10:55:17.906024 140170209232640 hlog.py:32] train/00080/loss 0.0073
I0116 10:55:21.065297 140170209232640 hlog.py:32] train/00080/eval_train/acc 0.9980
I0116 10:55:21.526995 140170209232640 hlog.py:32] train/00080/eval_val/acc 0.9932
I0116 10:55:22.023991 140170209232640 hlog.py:32] train/00080/eval_test/acc 0.5645
I0116 10:55:22.024382 140170209232640 hlog.py:18] train/00080{17.67s}
I0116 10:55:35.491386 140170209232640 hlog.py:32] train/00081/loss 0.0066
I0116 10:55:38.573174 140170209232640 hlog.py:32] train/00081/eval_train/acc 0.9960
I0116 10:55:39.033766 140170209232640 hlog.py:32] train/00081/eval_val/acc 1.0000
I0116 10:55:39.531596 140170209232640 hlog.py:32] train/00081/eval_test/acc 0.5645
I0116 10:55:39.531949 140170209232640 hlog.py:18] train/00081{17.51s}
I0116 10:55:54.228300 140170209232640 hlog.py:32] train/00082/loss 0.0060
I0116 10:55:57.993082 140170209232640 hlog.py:32] train/00082/eval_train/acc 0.9920
I0116 10:55:58.454670 140170209232640 hlog.py:32] train/00082/eval_val/acc 1.0000
I0116 10:55:58.950658 140170209232640 hlog.py:32] train/00082/eval_test/acc 0.5645
I0116 10:55:58.951181 140170209232640 hlog.py:18] train/00082{19.42s}
I0116 10:56:12.535337 140170209232640 hlog.py:32] train/00083/loss 0.0081
I0116 10:56:15.733660 140170209232640 hlog.py:32] train/00083/eval_train/acc 0.9980
I0116 10:56:16.177429 140170209232640 hlog.py:32] train/00083/eval_val/acc 1.0000
I0116 10:56:16.669879 140170209232640 hlog.py:32] train/00083/eval_test/acc 0.5699
I0116 10:56:16.670309 140170209232640 hlog.py:18] train/00083{17.72s}
I0116 10:56:30.257791 140170209232640 hlog.py:32] train/00084/loss 0.0064
I0116 10:56:33.271987 140170209232640 hlog.py:32] train/00084/eval_train/acc 0.9970
I0116 10:56:33.745914 140170209232640 hlog.py:32] train/00084/eval_val/acc 1.0000
I0116 10:56:34.251598 140170209232640 hlog.py:32] train/00084/eval_test/acc 0.5699
I0116 10:56:34.251929 140170209232640 hlog.py:18] train/00084{17.58s}
I0116 10:56:48.128947 140170209232640 hlog.py:32] train/00085/loss 0.0060
I0116 10:56:51.095748 140170209232640 hlog.py:32] train/00085/eval_train/acc 0.9980
I0116 10:56:51.551682 140170209232640 hlog.py:32] train/00085/eval_val/acc 0.9932
I0116 10:56:52.048487 140170209232640 hlog.py:32] train/00085/eval_test/acc 0.5699
I0116 10:56:52.048898 140170209232640 hlog.py:18] train/00085{17.80s}
I0116 10:57:05.679794 140170209232640 hlog.py:32] train/00086/loss 0.0063
I0116 10:57:09.041592 140170209232640 hlog.py:32] train/00086/eval_train/acc 0.9980
I0116 10:57:09.509894 140170209232640 hlog.py:32] train/00086/eval_val/acc 0.9932
I0116 10:57:10.017024 140170209232640 hlog.py:32] train/00086/eval_test/acc 0.5753
I0116 10:57:10.017401 140170209232640 hlog.py:18] train/00086{17.97s}
I0116 10:57:24.502098 140170209232640 hlog.py:32] train/00087/loss 0.0068
I0116 10:57:27.556091 140170209232640 hlog.py:32] train/00087/eval_train/acc 0.9970
I0116 10:57:28.068449 140170209232640 hlog.py:32] train/00087/eval_val/acc 1.0000
I0116 10:57:28.575389 140170209232640 hlog.py:32] train/00087/eval_test/acc 0.5753
I0116 10:57:28.575778 140170209232640 hlog.py:18] train/00087{18.56s}
I0116 10:57:42.427254 140170209232640 hlog.py:32] train/00088/loss 0.0089
I0116 10:57:45.941557 140170209232640 hlog.py:32] train/00088/eval_train/acc 0.9970
I0116 10:57:46.423568 140170209232640 hlog.py:32] train/00088/eval_val/acc 1.0000
I0116 10:57:46.925943 140170209232640 hlog.py:32] train/00088/eval_test/acc 0.5699
I0116 10:57:46.926332 140170209232640 hlog.py:18] train/00088{18.35s}
I0116 10:58:01.077770 140170209232640 hlog.py:32] train/00089/loss 0.0058
I0116 10:58:04.201835 140170209232640 hlog.py:32] train/00089/eval_train/acc 0.9980
I0116 10:58:04.695302 140170209232640 hlog.py:32] train/00089/eval_val/acc 1.0000
I0116 10:58:05.224321 140170209232640 hlog.py:32] train/00089/eval_test/acc 0.5753
I0116 10:58:05.247883 140170209232640 hlog.py:18] train/00089{18.32s}
I0116 10:58:19.244680 140170209232640 hlog.py:32] train/00090/loss 0.0059
I0116 10:58:22.624850 140170209232640 hlog.py:32] train/00090/eval_train/acc 0.9990
I0116 10:58:23.099353 140170209232640 hlog.py:32] train/00090/eval_val/acc 1.0000
I0116 10:58:23.620407 140170209232640 hlog.py:32] train/00090/eval_test/acc 0.5753
I0116 10:58:23.620877 140170209232640 hlog.py:18] train/00090{18.37s}
I0116 10:58:37.244971 140170209232640 hlog.py:32] train/00091/loss 0.0054
I0116 10:58:40.412958 140170209232640 hlog.py:32] train/00091/eval_train/acc 0.9990
I0116 10:58:40.910634 140170209232640 hlog.py:32] train/00091/eval_val/acc 1.0000
I0116 10:58:41.545410 140170209232640 hlog.py:32] train/00091/eval_test/acc 0.5753
I0116 10:58:41.545991 140170209232640 hlog.py:18] train/00091{17.92s}
I0116 10:58:55.329722 140170209232640 hlog.py:32] train/00092/loss 0.0057
I0116 10:58:58.405330 140170209232640 hlog.py:32] train/00092/eval_train/acc 0.9980
I0116 10:58:58.894814 140170209232640 hlog.py:32] train/00092/eval_val/acc 1.0000
I0116 10:58:59.421199 140170209232640 hlog.py:32] train/00092/eval_test/acc 0.5699
I0116 10:58:59.421622 140170209232640 hlog.py:18] train/00092{17.88s}
I0116 10:59:13.189326 140170209232640 hlog.py:32] train/00093/loss 0.0054
I0116 10:59:16.786938 140170209232640 hlog.py:32] train/00093/eval_train/acc 0.9990
I0116 10:59:17.268760 140170209232640 hlog.py:32] train/00093/eval_val/acc 1.0000
I0116 10:59:17.784677 140170209232640 hlog.py:32] train/00093/eval_test/acc 0.5699
I0116 10:59:17.785152 140170209232640 hlog.py:18] train/00093{18.36s}
I0116 10:59:31.533215 140170209232640 hlog.py:32] train/00094/loss 0.0053
I0116 10:59:34.940326 140170209232640 hlog.py:32] train/00094/eval_train/acc 0.9990
I0116 10:59:35.474155 140170209232640 hlog.py:32] train/00094/eval_val/acc 1.0000
I0116 10:59:36.009216 140170209232640 hlog.py:32] train/00094/eval_test/acc 0.5699
I0116 10:59:36.009684 140170209232640 hlog.py:18] train/00094{18.22s}
I0116 10:59:49.408863 140170209232640 hlog.py:32] train/00095/loss 0.0051
I0116 10:59:52.941576 140170209232640 hlog.py:32] train/00095/eval_train/acc 1.0000
I0116 10:59:53.450054 140170209232640 hlog.py:32] train/00095/eval_val/acc 1.0000
I0116 10:59:53.997065 140170209232640 hlog.py:32] train/00095/eval_test/acc 0.5699
I0116 10:59:53.997723 140170209232640 hlog.py:18] train/00095{17.99s}
I0116 11:00:06.945584 140170209232640 hlog.py:32] train/00096/loss 0.0047
I0116 11:00:10.191955 140170209232640 hlog.py:32] train/00096/eval_train/acc 0.9990
I0116 11:00:10.683032 140170209232640 hlog.py:32] train/00096/eval_val/acc 1.0000
I0116 11:00:11.208193 140170209232640 hlog.py:32] train/00096/eval_test/acc 0.5753
I0116 11:00:11.208842 140170209232640 hlog.py:18] train/00096{17.21s}
I0116 11:00:24.286578 140170209232640 hlog.py:32] train/00097/loss 0.0054
I0116 11:00:27.742289 140170209232640 hlog.py:32] train/00097/eval_train/acc 0.9990
I0116 11:00:28.235956 140170209232640 hlog.py:32] train/00097/eval_val/acc 1.0000
I0116 11:00:28.775604 140170209232640 hlog.py:32] train/00097/eval_test/acc 0.5699
I0116 11:00:28.776049 140170209232640 hlog.py:18] train/00097{17.57s}
I0116 11:00:42.625096 140170209232640 hlog.py:32] train/00098/loss 0.0057
I0116 11:00:45.718032 140170209232640 hlog.py:32] train/00098/eval_train/acc 0.9980
I0116 11:00:46.200895 140170209232640 hlog.py:32] train/00098/eval_val/acc 1.0000
I0116 11:00:46.727500 140170209232640 hlog.py:32] train/00098/eval_test/acc 0.5699
I0116 11:00:46.727958 140170209232640 hlog.py:18] train/00098{17.95s}
I0116 11:00:59.362343 140170209232640 hlog.py:32] train/00099/loss 0.0048
I0116 11:01:02.388716 140170209232640 hlog.py:32] train/00099/eval_train/acc 0.9980
I0116 11:01:02.896015 140170209232640 hlog.py:32] train/00099/eval_val/acc 1.0000
I0116 11:01:03.435542 140170209232640 hlog.py:32] train/00099/eval_test/acc 0.5699
I0116 11:01:03.623218 140170209232640 hlog.py:18] train/00099{16.90s}
I0116 11:01:17.285969 140170209232640 hlog.py:32] train/00100/loss 0.0046
I0116 11:01:20.298807 140170209232640 hlog.py:32] train/00100/eval_train/acc 1.0000
I0116 11:01:20.761608 140170209232640 hlog.py:32] train/00100/eval_val/acc 1.0000
I0116 11:01:21.239435 140170209232640 hlog.py:32] train/00100/eval_test/acc 0.5699
I0116 11:01:21.239818 140170209232640 hlog.py:18] train/00100{17.62s}
I0116 11:01:35.762566 140170209232640 hlog.py:32] train/00101/loss 0.0055
I0116 11:01:39.019437 140170209232640 hlog.py:32] train/00101/eval_train/acc 0.9950
I0116 11:01:39.507313 140170209232640 hlog.py:32] train/00101/eval_val/acc 1.0000
I0116 11:01:40.030918 140170209232640 hlog.py:32] train/00101/eval_test/acc 0.5699
I0116 11:01:40.031420 140170209232640 hlog.py:18] train/00101{18.79s}
I0116 11:01:53.683993 140170209232640 hlog.py:32] train/00102/loss 0.0045
I0116 11:01:56.614453 140170209232640 hlog.py:32] train/00102/eval_train/acc 0.9980
I0116 11:01:57.081143 140170209232640 hlog.py:32] train/00102/eval_val/acc 1.0000
I0116 11:01:57.585412 140170209232640 hlog.py:32] train/00102/eval_test/acc 0.5699
I0116 11:01:57.585865 140170209232640 hlog.py:18] train/00102{17.55s}
I0116 11:02:10.954639 140170209232640 hlog.py:32] train/00103/loss 0.0049
I0116 11:02:14.178255 140170209232640 hlog.py:32] train/00103/eval_train/acc 0.9970
I0116 11:02:14.642949 140170209232640 hlog.py:32] train/00103/eval_val/acc 1.0000
I0116 11:02:15.152252 140170209232640 hlog.py:32] train/00103/eval_test/acc 0.5699
I0116 11:02:15.152947 140170209232640 hlog.py:18] train/00103{17.57s}
I0116 11:02:28.790361 140170209232640 hlog.py:32] train/00104/loss 0.0046
I0116 11:02:31.968304 140170209232640 hlog.py:32] train/00104/eval_train/acc 0.9990
I0116 11:02:32.511539 140170209232640 hlog.py:32] train/00104/eval_val/acc 1.0000
I0116 11:02:33.025082 140170209232640 hlog.py:32] train/00104/eval_test/acc 0.5699
I0116 11:02:33.025638 140170209232640 hlog.py:18] train/00104{17.87s}
I0116 11:02:47.895724 140170209232640 hlog.py:32] train/00105/loss 0.0048
I0116 11:02:51.297612 140170209232640 hlog.py:32] train/00105/eval_train/acc 0.9990
I0116 11:02:51.771240 140170209232640 hlog.py:32] train/00105/eval_val/acc 1.0000
I0116 11:02:52.290642 140170209232640 hlog.py:32] train/00105/eval_test/acc 0.5699
I0116 11:02:52.291173 140170209232640 hlog.py:18] train/00105{19.27s}
I0116 11:03:06.399947 140170209232640 hlog.py:32] train/00106/loss 0.0055
I0116 11:03:09.443525 140170209232640 hlog.py:32] train/00106/eval_train/acc 1.0000
I0116 11:03:09.910569 140170209232640 hlog.py:32] train/00106/eval_val/acc 1.0000
I0116 11:03:10.422692 140170209232640 hlog.py:32] train/00106/eval_test/acc 0.5699
I0116 11:03:10.423264 140170209232640 hlog.py:18] train/00106{18.13s}
I0116 11:03:23.836439 140170209232640 hlog.py:32] train/00107/loss 0.0050
I0116 11:03:26.848160 140170209232640 hlog.py:32] train/00107/eval_train/acc 0.9970
I0116 11:03:27.326478 140170209232640 hlog.py:32] train/00107/eval_val/acc 1.0000
I0116 11:03:27.843160 140170209232640 hlog.py:32] train/00107/eval_test/acc 0.5699
I0116 11:03:27.843634 140170209232640 hlog.py:18] train/00107{17.42s}
I0116 11:03:41.404305 140170209232640 hlog.py:32] train/00108/loss 0.0046
I0116 11:03:44.697961 140170209232640 hlog.py:32] train/00108/eval_train/acc 0.9980
I0116 11:03:45.170867 140170209232640 hlog.py:32] train/00108/eval_val/acc 1.0000
I0116 11:03:45.677836 140170209232640 hlog.py:32] train/00108/eval_test/acc 0.5699
I0116 11:03:45.678206 140170209232640 hlog.py:18] train/00108{17.83s}
I0116 11:03:59.105546 140170209232640 hlog.py:32] train/00109/loss 0.0045
I0116 11:04:02.635168 140170209232640 hlog.py:32] train/00109/eval_train/acc 0.9990
I0116 11:04:03.118357 140170209232640 hlog.py:32] train/00109/eval_val/acc 1.0000
I0116 11:04:03.606741 140170209232640 hlog.py:32] train/00109/eval_test/acc 0.5699
I0116 11:04:03.662734 140170209232640 hlog.py:18] train/00109{17.98s}
I0116 11:04:16.724611 140170209232640 hlog.py:32] train/00110/loss 0.0047
I0116 11:04:19.899454 140170209232640 hlog.py:32] train/00110/eval_train/acc 1.0000
I0116 11:04:20.366481 140170209232640 hlog.py:32] train/00110/eval_val/acc 1.0000
I0116 11:04:20.892673 140170209232640 hlog.py:32] train/00110/eval_test/acc 0.5645
I0116 11:04:20.893089 140170209232640 hlog.py:18] train/00110{17.23s}
I0116 11:04:35.065101 140170209232640 hlog.py:32] train/00111/loss 0.0052
I0116 11:04:38.982230 140170209232640 hlog.py:32] train/00111/eval_train/acc 0.9990
I0116 11:04:39.452496 140170209232640 hlog.py:32] train/00111/eval_val/acc 1.0000
I0116 11:04:39.973591 140170209232640 hlog.py:32] train/00111/eval_test/acc 0.5699
I0116 11:04:39.973998 140170209232640 hlog.py:18] train/00111{19.08s}
I0116 11:04:53.886415 140170209232640 hlog.py:32] train/00112/loss 0.0055
I0116 11:04:57.044751 140170209232640 hlog.py:32] train/00112/eval_train/acc 0.9980
I0116 11:04:57.521077 140170209232640 hlog.py:32] train/00112/eval_val/acc 1.0000
I0116 11:04:58.035996 140170209232640 hlog.py:32] train/00112/eval_test/acc 0.5699
I0116 11:04:58.036798 140170209232640 hlog.py:18] train/00112{18.06s}
I0116 11:05:12.726589 140170209232640 hlog.py:32] train/00113/loss 0.0048
I0116 11:05:16.225128 140170209232640 hlog.py:32] train/00113/eval_train/acc 1.0000
I0116 11:05:16.712217 140170209232640 hlog.py:32] train/00113/eval_val/acc 1.0000
I0116 11:05:17.229834 140170209232640 hlog.py:32] train/00113/eval_test/acc 0.5645
I0116 11:05:17.230248 140170209232640 hlog.py:18] train/00113{19.19s}
I0116 11:05:31.700670 140170209232640 hlog.py:32] train/00114/loss 0.0051
I0116 11:05:34.693714 140170209232640 hlog.py:32] train/00114/eval_train/acc 0.9980
I0116 11:05:35.182176 140170209232640 hlog.py:32] train/00114/eval_val/acc 1.0000
I0116 11:05:35.703202 140170209232640 hlog.py:32] train/00114/eval_test/acc 0.5645
I0116 11:05:35.703600 140170209232640 hlog.py:18] train/00114{18.47s}
I0116 11:05:48.592612 140170209232640 hlog.py:32] train/00115/loss 0.0048
I0116 11:05:51.988119 140170209232640 hlog.py:32] train/00115/eval_train/acc 0.9980
I0116 11:05:52.474464 140170209232640 hlog.py:32] train/00115/eval_val/acc 1.0000
I0116 11:05:53.002114 140170209232640 hlog.py:32] train/00115/eval_test/acc 0.5645
I0116 11:05:53.002766 140170209232640 hlog.py:18] train/00115{17.30s}
I0116 11:06:06.339184 140170209232640 hlog.py:32] train/00116/loss 0.0049
I0116 11:06:09.798079 140170209232640 hlog.py:32] train/00116/eval_train/acc 0.9990
I0116 11:06:10.304633 140170209232640 hlog.py:32] train/00116/eval_val/acc 1.0000
I0116 11:06:10.883124 140170209232640 hlog.py:32] train/00116/eval_test/acc 0.5645
I0116 11:06:10.883913 140170209232640 hlog.py:18] train/00116{17.88s}
I0116 11:06:24.290418 140170209232640 hlog.py:32] train/00117/loss 0.0049
I0116 11:06:27.436229 140170209232640 hlog.py:32] train/00117/eval_train/acc 0.9960
I0116 11:06:27.893570 140170209232640 hlog.py:32] train/00117/eval_val/acc 1.0000
I0116 11:06:28.403383 140170209232640 hlog.py:32] train/00117/eval_test/acc 0.5645
I0116 11:06:28.403779 140170209232640 hlog.py:18] train/00117{17.52s}
I0116 11:06:41.601860 140170209232640 hlog.py:32] train/00118/loss 0.0047
I0116 11:06:44.770769 140170209232640 hlog.py:32] train/00118/eval_train/acc 0.9980
I0116 11:06:45.258421 140170209232640 hlog.py:32] train/00118/eval_val/acc 1.0000
I0116 11:06:45.789216 140170209232640 hlog.py:32] train/00118/eval_test/acc 0.5645
I0116 11:06:45.789806 140170209232640 hlog.py:18] train/00118{17.39s}
I0116 11:06:59.646871 140170209232640 hlog.py:32] train/00119/loss 0.0045
I0116 11:07:03.015987 140170209232640 hlog.py:32] train/00119/eval_train/acc 0.9980
I0116 11:07:03.482006 140170209232640 hlog.py:32] train/00119/eval_val/acc 1.0000
I0116 11:07:03.989649 140170209232640 hlog.py:32] train/00119/eval_test/acc 0.5645
I0116 11:07:04.018111 140170209232640 hlog.py:18] train/00119{18.23s}
I0116 11:07:17.618682 140170209232640 hlog.py:32] train/00120/loss 0.0046
I0116 11:07:20.786115 140170209232640 hlog.py:32] train/00120/eval_train/acc 0.9980
I0116 11:07:21.255274 140170209232640 hlog.py:32] train/00120/eval_val/acc 1.0000
I0116 11:07:21.742556 140170209232640 hlog.py:32] train/00120/eval_test/acc 0.5699
I0116 11:07:21.742967 140170209232640 hlog.py:18] train/00120{17.72s}
I0116 11:07:35.882900 140170209232640 hlog.py:32] train/00121/loss 0.0046
I0116 11:07:38.834746 140170209232640 hlog.py:32] train/00121/eval_train/acc 1.0000
I0116 11:07:39.307711 140170209232640 hlog.py:32] train/00121/eval_val/acc 1.0000
I0116 11:07:39.789234 140170209232640 hlog.py:32] train/00121/eval_test/acc 0.5699
I0116 11:07:39.789659 140170209232640 hlog.py:18] train/00121{18.05s}
I0116 11:07:53.112120 140170209232640 hlog.py:32] train/00122/loss 0.0040
I0116 11:07:56.425345 140170209232640 hlog.py:32] train/00122/eval_train/acc 0.9990
I0116 11:07:56.880055 140170209232640 hlog.py:32] train/00122/eval_val/acc 1.0000
I0116 11:07:57.363277 140170209232640 hlog.py:32] train/00122/eval_test/acc 0.5699
I0116 11:07:57.363671 140170209232640 hlog.py:18] train/00122{17.57s}
I0116 11:08:10.410480 140170209232640 hlog.py:32] train/00123/loss 0.0042
I0116 11:08:13.390670 140170209232640 hlog.py:32] train/00123/eval_train/acc 0.9990
I0116 11:08:13.849467 140170209232640 hlog.py:32] train/00123/eval_val/acc 1.0000
I0116 11:08:14.340055 140170209232640 hlog.py:32] train/00123/eval_test/acc 0.5699
I0116 11:08:14.340645 140170209232640 hlog.py:18] train/00123{16.98s}
I0116 11:08:28.827819 140170209232640 hlog.py:32] train/00124/loss 0.0047
I0116 11:08:31.988061 140170209232640 hlog.py:32] train/00124/eval_train/acc 0.9950
I0116 11:08:32.456565 140170209232640 hlog.py:32] train/00124/eval_val/acc 1.0000
I0116 11:08:32.979389 140170209232640 hlog.py:32] train/00124/eval_test/acc 0.5699
I0116 11:08:32.979798 140170209232640 hlog.py:18] train/00124{18.64s}
I0116 11:08:46.549682 140170209232640 hlog.py:32] train/00125/loss 0.0047
I0116 11:08:49.471252 140170209232640 hlog.py:32] train/00125/eval_train/acc 0.9990
I0116 11:08:49.949841 140170209232640 hlog.py:32] train/00125/eval_val/acc 1.0000
I0116 11:08:50.455540 140170209232640 hlog.py:32] train/00125/eval_test/acc 0.5645
I0116 11:08:50.456184 140170209232640 hlog.py:18] train/00125{17.48s}
I0116 11:09:04.330754 140170209232640 hlog.py:32] train/00126/loss 0.0047
I0116 11:09:07.734567 140170209232640 hlog.py:32] train/00126/eval_train/acc 0.9990
I0116 11:09:08.209430 140170209232640 hlog.py:32] train/00126/eval_val/acc 1.0000
I0116 11:09:08.696334 140170209232640 hlog.py:32] train/00126/eval_test/acc 0.5645
I0116 11:09:08.696878 140170209232640 hlog.py:18] train/00126{18.24s}
I0116 11:09:22.825594 140170209232640 hlog.py:32] train/00127/loss 0.0055
I0116 11:09:25.860071 140170209232640 hlog.py:32] train/00127/eval_train/acc 0.9980
I0116 11:09:26.340528 140170209232640 hlog.py:32] train/00127/eval_val/acc 1.0000
I0116 11:09:26.853054 140170209232640 hlog.py:32] train/00127/eval_test/acc 0.5645
I0116 11:09:26.853598 140170209232640 hlog.py:18] train/00127{18.16s}
I0116 11:09:41.252562 140170209232640 hlog.py:32] train/00128/loss 0.0046
I0116 11:09:44.371716 140170209232640 hlog.py:32] train/00128/eval_train/acc 1.0000
I0116 11:09:44.850317 140170209232640 hlog.py:32] train/00128/eval_val/acc 1.0000
I0116 11:09:45.387425 140170209232640 hlog.py:32] train/00128/eval_test/acc 0.5645
I0116 11:09:45.387869 140170209232640 hlog.py:18] train/00128{18.53s}
I0116 11:09:58.884038 140170209232640 hlog.py:32] train/00129/loss 0.0047
I0116 11:10:02.110168 140170209232640 hlog.py:32] train/00129/eval_train/acc 1.0000
I0116 11:10:02.638396 140170209232640 hlog.py:32] train/00129/eval_val/acc 1.0000
I0116 11:10:03.215172 140170209232640 hlog.py:32] train/00129/eval_test/acc 0.5645
I0116 11:10:03.241305 140170209232640 hlog.py:18] train/00129{17.85s}
I0116 11:10:16.881428 140170209232640 hlog.py:32] train/00130/loss 0.0042
I0116 11:10:19.983193 140170209232640 hlog.py:32] train/00130/eval_train/acc 0.9980
I0116 11:10:20.452345 140170209232640 hlog.py:32] train/00130/eval_val/acc 1.0000
I0116 11:10:20.950593 140170209232640 hlog.py:32] train/00130/eval_test/acc 0.5645
I0116 11:10:20.951077 140170209232640 hlog.py:18] train/00130{17.71s}
I0116 11:10:35.762696 140170209232640 hlog.py:32] train/00131/loss 0.0060
I0116 11:10:38.952208 140170209232640 hlog.py:32] train/00131/eval_train/acc 0.9970
I0116 11:10:39.431914 140170209232640 hlog.py:32] train/00131/eval_val/acc 1.0000
I0116 11:10:39.942945 140170209232640 hlog.py:32] train/00131/eval_test/acc 0.5645
I0116 11:10:39.943355 140170209232640 hlog.py:18] train/00131{18.99s}
I0116 11:10:54.040797 140170209232640 hlog.py:32] train/00132/loss 0.0046
I0116 11:10:57.195960 140170209232640 hlog.py:32] train/00132/eval_train/acc 1.0000
I0116 11:10:57.670751 140170209232640 hlog.py:32] train/00132/eval_val/acc 1.0000
I0116 11:10:58.192434 140170209232640 hlog.py:32] train/00132/eval_test/acc 0.5645
I0116 11:10:58.192819 140170209232640 hlog.py:18] train/00132{18.25s}
I0116 11:11:12.046185 140170209232640 hlog.py:32] train/00133/loss 0.0061
I0116 11:11:15.166703 140170209232640 hlog.py:32] train/00133/eval_train/acc 0.9990
I0116 11:11:15.661397 140170209232640 hlog.py:32] train/00133/eval_val/acc 1.0000
I0116 11:11:16.203819 140170209232640 hlog.py:32] train/00133/eval_test/acc 0.5699
I0116 11:11:16.204238 140170209232640 hlog.py:18] train/00133{18.01s}
I0116 11:11:30.467016 140170209232640 hlog.py:32] train/00134/loss 0.0048
I0116 11:11:34.082805 140170209232640 hlog.py:32] train/00134/eval_train/acc 1.0000
I0116 11:11:34.538559 140170209232640 hlog.py:32] train/00134/eval_val/acc 1.0000
I0116 11:11:35.132503 140170209232640 hlog.py:32] train/00134/eval_test/acc 0.5699
I0116 11:11:35.133170 140170209232640 hlog.py:18] train/00134{18.93s}
I0116 11:11:48.733903 140170209232640 hlog.py:32] train/00135/loss 0.0051
I0116 11:11:52.244964 140170209232640 hlog.py:32] train/00135/eval_train/acc 1.0000
I0116 11:11:52.720510 140170209232640 hlog.py:32] train/00135/eval_val/acc 1.0000
I0116 11:11:53.229224 140170209232640 hlog.py:32] train/00135/eval_test/acc 0.5699
I0116 11:11:53.229762 140170209232640 hlog.py:18] train/00135{18.10s}
I0116 11:12:06.845206 140170209232640 hlog.py:32] train/00136/loss 0.0048
I0116 11:12:10.221071 140170209232640 hlog.py:32] train/00136/eval_train/acc 0.9990
I0116 11:12:10.702813 140170209232640 hlog.py:32] train/00136/eval_val/acc 1.0000
I0116 11:12:11.210512 140170209232640 hlog.py:32] train/00136/eval_test/acc 0.5699
I0116 11:12:11.210891 140170209232640 hlog.py:18] train/00136{17.98s}
I0116 11:12:24.826136 140170209232640 hlog.py:32] train/00137/loss 0.0049
I0116 11:12:28.200560 140170209232640 hlog.py:32] train/00137/eval_train/acc 0.9990
I0116 11:12:28.732850 140170209232640 hlog.py:32] train/00137/eval_val/acc 1.0000
I0116 11:12:29.282792 140170209232640 hlog.py:32] train/00137/eval_test/acc 0.5699
I0116 11:12:29.283519 140170209232640 hlog.py:18] train/00137{18.07s}
I0116 11:12:42.861217 140170209232640 hlog.py:32] train/00138/loss 0.0043
I0116 11:12:45.722364 140170209232640 hlog.py:32] train/00138/eval_train/acc 0.9980
I0116 11:12:46.167547 140170209232640 hlog.py:32] train/00138/eval_val/acc 1.0000
I0116 11:12:46.675845 140170209232640 hlog.py:32] train/00138/eval_test/acc 0.5699
I0116 11:12:46.676216 140170209232640 hlog.py:18] train/00138{17.39s}
I0116 11:13:00.209298 140170209232640 hlog.py:32] train/00139/loss 0.0039
I0116 11:13:03.331851 140170209232640 hlog.py:32] train/00139/eval_train/acc 1.0000
I0116 11:13:03.914467 140170209232640 hlog.py:32] train/00139/eval_val/acc 1.0000
I0116 11:13:04.441177 140170209232640 hlog.py:32] train/00139/eval_test/acc 0.5699
I0116 11:13:04.462224 140170209232640 hlog.py:18] train/00139{17.79s}
I0116 11:13:17.810075 140170209232640 hlog.py:32] train/00140/loss 0.0050
I0116 11:13:20.974585 140170209232640 hlog.py:32] train/00140/eval_train/acc 1.0000
I0116 11:13:21.429705 140170209232640 hlog.py:32] train/00140/eval_val/acc 1.0000
I0116 11:13:21.931929 140170209232640 hlog.py:32] train/00140/eval_test/acc 0.5699
I0116 11:13:21.932302 140170209232640 hlog.py:18] train/00140{17.47s}
I0116 11:13:35.675600 140170209232640 hlog.py:32] train/00141/loss 0.0045
I0116 11:13:39.112247 140170209232640 hlog.py:32] train/00141/eval_train/acc 0.9980
I0116 11:13:39.588750 140170209232640 hlog.py:32] train/00141/eval_val/acc 1.0000
I0116 11:13:40.116051 140170209232640 hlog.py:32] train/00141/eval_test/acc 0.5699
I0116 11:13:40.116697 140170209232640 hlog.py:18] train/00141{18.18s}
I0116 11:13:53.727234 140170209232640 hlog.py:32] train/00142/loss 0.0044
I0116 11:13:56.817559 140170209232640 hlog.py:32] train/00142/eval_train/acc 0.9990
I0116 11:13:57.285980 140170209232640 hlog.py:32] train/00142/eval_val/acc 1.0000
I0116 11:13:57.782958 140170209232640 hlog.py:32] train/00142/eval_test/acc 0.5645
I0116 11:13:57.783528 140170209232640 hlog.py:18] train/00142{17.67s}
I0116 11:14:10.802036 140170209232640 hlog.py:32] train/00143/loss 0.0043
I0116 11:14:14.270941 140170209232640 hlog.py:32] train/00143/eval_train/acc 0.9980
I0116 11:14:14.754101 140170209232640 hlog.py:32] train/00143/eval_val/acc 1.0000
I0116 11:14:15.268913 140170209232640 hlog.py:32] train/00143/eval_test/acc 0.5645
I0116 11:14:15.269292 140170209232640 hlog.py:18] train/00143{17.49s}
I0116 11:14:28.518543 140170209232640 hlog.py:32] train/00144/loss 0.0048
I0116 11:14:31.531682 140170209232640 hlog.py:32] train/00144/eval_train/acc 1.0000
I0116 11:14:31.991959 140170209232640 hlog.py:32] train/00144/eval_val/acc 1.0000
I0116 11:14:32.505446 140170209232640 hlog.py:32] train/00144/eval_test/acc 0.5645
I0116 11:14:32.506079 140170209232640 hlog.py:18] train/00144{17.24s}
I0116 11:14:46.247195 140170209232640 hlog.py:32] train/00145/loss 0.0045
I0116 11:14:49.395404 140170209232640 hlog.py:32] train/00145/eval_train/acc 1.0000
I0116 11:14:49.903632 140170209232640 hlog.py:32] train/00145/eval_val/acc 1.0000
I0116 11:14:50.430267 140170209232640 hlog.py:32] train/00145/eval_test/acc 0.5645
I0116 11:14:50.431233 140170209232640 hlog.py:18] train/00145{17.92s}
I0116 11:15:03.576735 140170209232640 hlog.py:32] train/00146/loss 0.0044
I0116 11:15:07.034847 140170209232640 hlog.py:32] train/00146/eval_train/acc 1.0000
I0116 11:15:07.521752 140170209232640 hlog.py:32] train/00146/eval_val/acc 1.0000
I0116 11:15:08.046603 140170209232640 hlog.py:32] train/00146/eval_test/acc 0.5645
I0116 11:15:08.047635 140170209232640 hlog.py:18] train/00146{17.62s}
I0116 11:15:20.901879 140170209232640 hlog.py:32] train/00147/loss 0.0043
I0116 11:15:24.006959 140170209232640 hlog.py:32] train/00147/eval_train/acc 0.9990
I0116 11:15:24.496796 140170209232640 hlog.py:32] train/00147/eval_val/acc 1.0000
I0116 11:15:25.041077 140170209232640 hlog.py:32] train/00147/eval_test/acc 0.5699
I0116 11:15:25.041689 140170209232640 hlog.py:18] train/00147{16.99s}
I0116 11:15:39.050395 140170209232640 hlog.py:32] train/00148/loss 0.0045
I0116 11:15:42.361959 140170209232640 hlog.py:32] train/00148/eval_train/acc 0.9990
I0116 11:15:42.912130 140170209232640 hlog.py:32] train/00148/eval_val/acc 1.0000
I0116 11:15:43.513447 140170209232640 hlog.py:32] train/00148/eval_test/acc 0.5699
I0116 11:15:43.514220 140170209232640 hlog.py:18] train/00148{18.47s}
I0116 11:15:56.636106 140170209232640 hlog.py:32] train/00149/loss 0.0052
I0116 11:15:59.810444 140170209232640 hlog.py:32] train/00149/eval_train/acc 1.0000
I0116 11:15:59.974313 140170209232640 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I0116 11:15:59.974470 140170209232640 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:15:59.974523 140170209232640 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:15:59.974562 140170209232640 hlog.py:32] train/00149/eval_val/0/corr True
I0116 11:15:59.974597 140170209232640 hlog.py:32] train/00149/eval_val/0 
I0116 11:15:59.974631 140170209232640 hlog.py:18] train/00149/eval_val/0{0.00s}
I0116 11:15:59.974676 140170209232640 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I0116 11:15:59.974720 140170209232640 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.974760 140170209232640 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.974795 140170209232640 hlog.py:32] train/00149/eval_val/1/corr True
I0116 11:15:59.974826 140170209232640 hlog.py:32] train/00149/eval_val/1 
I0116 11:15:59.974857 140170209232640 hlog.py:18] train/00149/eval_val/1{0.00s}
I0116 11:15:59.974899 140170209232640 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I0116 11:15:59.974941 140170209232640 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I0116 11:15:59.974981 140170209232640 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I0116 11:15:59.975015 140170209232640 hlog.py:32] train/00149/eval_val/2/corr True
I0116 11:15:59.975046 140170209232640 hlog.py:32] train/00149/eval_val/2 
I0116 11:15:59.975076 140170209232640 hlog.py:18] train/00149/eval_val/2{0.00s}
I0116 11:15:59.975118 140170209232640 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I0116 11:15:59.975161 140170209232640 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:15:59.975200 140170209232640 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:15:59.975234 140170209232640 hlog.py:32] train/00149/eval_val/3/corr True
I0116 11:15:59.975265 140170209232640 hlog.py:32] train/00149/eval_val/3 
I0116 11:15:59.975295 140170209232640 hlog.py:18] train/00149/eval_val/3{0.00s}
I0116 11:15:59.975344 140170209232640 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I0116 11:15:59.975389 140170209232640 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I0116 11:15:59.975428 140170209232640 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I0116 11:15:59.975462 140170209232640 hlog.py:32] train/00149/eval_val/4/corr True
I0116 11:15:59.975493 140170209232640 hlog.py:32] train/00149/eval_val/4 
I0116 11:15:59.975524 140170209232640 hlog.py:18] train/00149/eval_val/4{0.00s}
I0116 11:15:59.975564 140170209232640 hlog.py:32] train/00149/eval_val/5/input how big is texas
I0116 11:15:59.975607 140170209232640 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.975647 140170209232640 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.975692 140170209232640 hlog.py:32] train/00149/eval_val/5/corr True
I0116 11:15:59.975724 140170209232640 hlog.py:32] train/00149/eval_val/5 
I0116 11:15:59.975754 140170209232640 hlog.py:18] train/00149/eval_val/5{0.00s}
I0116 11:15:59.975796 140170209232640 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I0116 11:15:59.975839 140170209232640 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.975879 140170209232640 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.975913 140170209232640 hlog.py:32] train/00149/eval_val/6/corr True
I0116 11:15:59.975943 140170209232640 hlog.py:32] train/00149/eval_val/6 
I0116 11:15:59.975973 140170209232640 hlog.py:18] train/00149/eval_val/6{0.00s}
I0116 11:15:59.976014 140170209232640 hlog.py:32] train/00149/eval_val/7/input how large is texas
I0116 11:15:59.976056 140170209232640 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.976095 140170209232640 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.976128 140170209232640 hlog.py:32] train/00149/eval_val/7/corr True
I0116 11:15:59.976159 140170209232640 hlog.py:32] train/00149/eval_val/7 
I0116 11:15:59.976189 140170209232640 hlog.py:18] train/00149/eval_val/7{0.00s}
I0116 11:15:59.976231 140170209232640 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I0116 11:15:59.976273 140170209232640 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0116 11:15:59.976313 140170209232640 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0116 11:15:59.976346 140170209232640 hlog.py:32] train/00149/eval_val/8/corr True
I0116 11:15:59.976376 140170209232640 hlog.py:32] train/00149/eval_val/8 
I0116 11:15:59.976407 140170209232640 hlog.py:18] train/00149/eval_val/8{0.00s}
I0116 11:15:59.976448 140170209232640 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I0116 11:15:59.976490 140170209232640 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0116 11:15:59.976530 140170209232640 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0116 11:15:59.976564 140170209232640 hlog.py:32] train/00149/eval_val/9/corr True
I0116 11:15:59.976595 140170209232640 hlog.py:32] train/00149/eval_val/9 
I0116 11:15:59.976625 140170209232640 hlog.py:18] train/00149/eval_val/9{0.00s}
I0116 11:15:59.976668 140170209232640 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I0116 11:15:59.976710 140170209232640 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.976749 140170209232640 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.976784 140170209232640 hlog.py:32] train/00149/eval_val/10/corr True
I0116 11:15:59.976814 140170209232640 hlog.py:32] train/00149/eval_val/10 
I0116 11:15:59.976844 140170209232640 hlog.py:18] train/00149/eval_val/10{0.00s}
I0116 11:15:59.976888 140170209232640 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I0116 11:15:59.976938 140170209232640 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0116 11:15:59.976981 140170209232640 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0116 11:15:59.977015 140170209232640 hlog.py:32] train/00149/eval_val/11/corr True
I0116 11:15:59.977046 140170209232640 hlog.py:32] train/00149/eval_val/11 
I0116 11:15:59.977077 140170209232640 hlog.py:18] train/00149/eval_val/11{0.00s}
I0116 11:15:59.977131 140170209232640 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I0116 11:15:59.977180 140170209232640 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I0116 11:15:59.977223 140170209232640 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I0116 11:15:59.977257 140170209232640 hlog.py:32] train/00149/eval_val/12/corr True
I0116 11:15:59.977289 140170209232640 hlog.py:32] train/00149/eval_val/12 
I0116 11:15:59.977319 140170209232640 hlog.py:18] train/00149/eval_val/12{0.00s}
I0116 11:15:59.977363 140170209232640 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I0116 11:15:59.977411 140170209232640 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I0116 11:15:59.977455 140170209232640 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I0116 11:15:59.977489 140170209232640 hlog.py:32] train/00149/eval_val/13/corr True
I0116 11:15:59.977520 140170209232640 hlog.py:32] train/00149/eval_val/13 
I0116 11:15:59.977551 140170209232640 hlog.py:18] train/00149/eval_val/13{0.00s}
I0116 11:15:59.977594 140170209232640 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I0116 11:15:59.977642 140170209232640 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I0116 11:15:59.977685 140170209232640 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I0116 11:15:59.977719 140170209232640 hlog.py:32] train/00149/eval_val/14/corr True
I0116 11:15:59.977751 140170209232640 hlog.py:32] train/00149/eval_val/14 
I0116 11:15:59.977781 140170209232640 hlog.py:18] train/00149/eval_val/14{0.00s}
I0116 11:15:59.977825 140170209232640 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I0116 11:15:59.977872 140170209232640 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I0116 11:15:59.977915 140170209232640 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I0116 11:15:59.977949 140170209232640 hlog.py:32] train/00149/eval_val/15/corr True
I0116 11:15:59.977980 140170209232640 hlog.py:32] train/00149/eval_val/15 
I0116 11:15:59.978010 140170209232640 hlog.py:18] train/00149/eval_val/15{0.00s}
I0116 11:15:59.978055 140170209232640 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I0116 11:15:59.978103 140170209232640 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0116 11:15:59.978147 140170209232640 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I0116 11:15:59.978181 140170209232640 hlog.py:32] train/00149/eval_val/16/corr True
I0116 11:15:59.978213 140170209232640 hlog.py:32] train/00149/eval_val/16 
I0116 11:15:59.978243 140170209232640 hlog.py:18] train/00149/eval_val/16{0.00s}
I0116 11:15:59.978287 140170209232640 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I0116 11:15:59.978337 140170209232640 hlog.py:32] train/00149/eval_val/17/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I0116 11:15:59.978392 140170209232640 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I0116 11:15:59.978428 140170209232640 hlog.py:32] train/00149/eval_val/17/corr True
I0116 11:15:59.978461 140170209232640 hlog.py:32] train/00149/eval_val/17 
I0116 11:15:59.978492 140170209232640 hlog.py:18] train/00149/eval_val/17{0.00s}
I0116 11:15:59.978538 140170209232640 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I0116 11:15:59.978588 140170209232640 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I0116 11:15:59.978633 140170209232640 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I0116 11:15:59.978669 140170209232640 hlog.py:32] train/00149/eval_val/18/corr True
I0116 11:15:59.978702 140170209232640 hlog.py:32] train/00149/eval_val/18 
I0116 11:15:59.978732 140170209232640 hlog.py:18] train/00149/eval_val/18{0.00s}
I0116 11:15:59.978778 140170209232640 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I0116 11:15:59.978827 140170209232640 hlog.py:32] train/00149/eval_val/19/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I0116 11:15:59.978871 140170209232640 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I0116 11:15:59.978905 140170209232640 hlog.py:32] train/00149/eval_val/19/corr True
I0116 11:15:59.978936 140170209232640 hlog.py:32] train/00149/eval_val/19 
I0116 11:15:59.978966 140170209232640 hlog.py:18] train/00149/eval_val/19{0.00s}
I0116 11:15:59.979011 140170209232640 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I0116 11:15:59.979059 140170209232640 hlog.py:32] train/00149/eval_val/20/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I0116 11:15:59.979104 140170209232640 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I0116 11:15:59.979138 140170209232640 hlog.py:32] train/00149/eval_val/20/corr True
I0116 11:15:59.979170 140170209232640 hlog.py:32] train/00149/eval_val/20 
I0116 11:15:59.979200 140170209232640 hlog.py:18] train/00149/eval_val/20{0.00s}
I0116 11:15:59.979245 140170209232640 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I0116 11:15:59.979294 140170209232640 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I0116 11:15:59.979347 140170209232640 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I0116 11:15:59.979384 140170209232640 hlog.py:32] train/00149/eval_val/21/corr True
I0116 11:15:59.979416 140170209232640 hlog.py:32] train/00149/eval_val/21 
I0116 11:15:59.979447 140170209232640 hlog.py:18] train/00149/eval_val/21{0.00s}
I0116 11:15:59.979490 140170209232640 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I0116 11:15:59.979535 140170209232640 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I0116 11:15:59.979575 140170209232640 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I0116 11:15:59.979609 140170209232640 hlog.py:32] train/00149/eval_val/22/corr True
I0116 11:15:59.979647 140170209232640 hlog.py:32] train/00149/eval_val/22 
I0116 11:15:59.979678 140170209232640 hlog.py:18] train/00149/eval_val/22{0.00s}
I0116 11:15:59.979722 140170209232640 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I0116 11:15:59.979766 140170209232640 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0116 11:15:59.979808 140170209232640 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0116 11:15:59.979841 140170209232640 hlog.py:32] train/00149/eval_val/23/corr True
I0116 11:15:59.979873 140170209232640 hlog.py:32] train/00149/eval_val/23 
I0116 11:15:59.979903 140170209232640 hlog.py:18] train/00149/eval_val/23{0.00s}
I0116 11:15:59.979946 140170209232640 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I0116 11:15:59.979990 140170209232640 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0116 11:15:59.980032 140170209232640 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I0116 11:15:59.980066 140170209232640 hlog.py:32] train/00149/eval_val/24/corr True
I0116 11:15:59.980097 140170209232640 hlog.py:32] train/00149/eval_val/24 
I0116 11:15:59.980128 140170209232640 hlog.py:18] train/00149/eval_val/24{0.00s}
I0116 11:15:59.980171 140170209232640 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I0116 11:15:59.980218 140170209232640 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0116 11:15:59.980260 140170209232640 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0116 11:15:59.980295 140170209232640 hlog.py:32] train/00149/eval_val/25/corr True
I0116 11:15:59.980326 140170209232640 hlog.py:32] train/00149/eval_val/25 
I0116 11:15:59.980356 140170209232640 hlog.py:18] train/00149/eval_val/25{0.00s}
I0116 11:15:59.980400 140170209232640 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I0116 11:15:59.980446 140170209232640 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I0116 11:15:59.980489 140170209232640 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I0116 11:15:59.980523 140170209232640 hlog.py:32] train/00149/eval_val/26/corr True
I0116 11:15:59.980553 140170209232640 hlog.py:32] train/00149/eval_val/26 
I0116 11:15:59.980583 140170209232640 hlog.py:18] train/00149/eval_val/26{0.00s}
I0116 11:15:59.980627 140170209232640 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I0116 11:15:59.980672 140170209232640 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.980715 140170209232640 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.980750 140170209232640 hlog.py:32] train/00149/eval_val/27/corr True
I0116 11:15:59.980781 140170209232640 hlog.py:32] train/00149/eval_val/27 
I0116 11:15:59.980812 140170209232640 hlog.py:18] train/00149/eval_val/27{0.00s}
I0116 11:15:59.980855 140170209232640 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I0116 11:15:59.980900 140170209232640 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.980942 140170209232640 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.980976 140170209232640 hlog.py:32] train/00149/eval_val/28/corr True
I0116 11:15:59.981007 140170209232640 hlog.py:32] train/00149/eval_val/28 
I0116 11:15:59.981045 140170209232640 hlog.py:18] train/00149/eval_val/28{0.00s}
I0116 11:15:59.981090 140170209232640 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I0116 11:15:59.981136 140170209232640 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I0116 11:15:59.981177 140170209232640 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I0116 11:15:59.981211 140170209232640 hlog.py:32] train/00149/eval_val/29/corr True
I0116 11:15:59.981242 140170209232640 hlog.py:32] train/00149/eval_val/29 
I0116 11:15:59.981273 140170209232640 hlog.py:18] train/00149/eval_val/29{0.00s}
I0116 11:15:59.981317 140170209232640 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I0116 11:15:59.981363 140170209232640 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I0116 11:15:59.981404 140170209232640 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I0116 11:15:59.981438 140170209232640 hlog.py:32] train/00149/eval_val/30/corr True
I0116 11:15:59.981469 140170209232640 hlog.py:32] train/00149/eval_val/30 
I0116 11:15:59.981500 140170209232640 hlog.py:18] train/00149/eval_val/30{0.00s}
I0116 11:15:59.981543 140170209232640 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I0116 11:15:59.981587 140170209232640 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I0116 11:15:59.981628 140170209232640 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I0116 11:15:59.981662 140170209232640 hlog.py:32] train/00149/eval_val/31/corr True
I0116 11:15:59.981693 140170209232640 hlog.py:32] train/00149/eval_val/31 
I0116 11:15:59.981723 140170209232640 hlog.py:18] train/00149/eval_val/31{0.00s}
I0116 11:15:59.981767 140170209232640 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I0116 11:15:59.981812 140170209232640 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I0116 11:15:59.981853 140170209232640 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I0116 11:15:59.981889 140170209232640 hlog.py:32] train/00149/eval_val/32/corr True
I0116 11:15:59.981921 140170209232640 hlog.py:32] train/00149/eval_val/32 
I0116 11:15:59.981952 140170209232640 hlog.py:18] train/00149/eval_val/32{0.00s}
I0116 11:15:59.981996 140170209232640 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I0116 11:15:59.982041 140170209232640 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0116 11:15:59.982083 140170209232640 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I0116 11:15:59.982119 140170209232640 hlog.py:32] train/00149/eval_val/33/corr True
I0116 11:15:59.982150 140170209232640 hlog.py:32] train/00149/eval_val/33 
I0116 11:15:59.982181 140170209232640 hlog.py:18] train/00149/eval_val/33{0.00s}
I0116 11:15:59.982226 140170209232640 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I0116 11:15:59.982271 140170209232640 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.982312 140170209232640 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I0116 11:15:59.982347 140170209232640 hlog.py:32] train/00149/eval_val/34/corr True
I0116 11:15:59.982379 140170209232640 hlog.py:32] train/00149/eval_val/34 
I0116 11:15:59.982419 140170209232640 hlog.py:18] train/00149/eval_val/34{0.00s}
I0116 11:15:59.982466 140170209232640 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I0116 11:15:59.982513 140170209232640 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.982558 140170209232640 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.982592 140170209232640 hlog.py:32] train/00149/eval_val/35/corr True
I0116 11:15:59.982623 140170209232640 hlog.py:32] train/00149/eval_val/35 
I0116 11:15:59.982653 140170209232640 hlog.py:18] train/00149/eval_val/35{0.00s}
I0116 11:15:59.982697 140170209232640 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I0116 11:15:59.982744 140170209232640 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.982787 140170209232640 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.982822 140170209232640 hlog.py:32] train/00149/eval_val/36/corr True
I0116 11:15:59.982854 140170209232640 hlog.py:32] train/00149/eval_val/36 
I0116 11:15:59.982884 140170209232640 hlog.py:18] train/00149/eval_val/36{0.00s}
I0116 11:15:59.982928 140170209232640 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I0116 11:15:59.982974 140170209232640 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983017 140170209232640 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983052 140170209232640 hlog.py:32] train/00149/eval_val/37/corr True
I0116 11:15:59.983083 140170209232640 hlog.py:32] train/00149/eval_val/37 
I0116 11:15:59.983114 140170209232640 hlog.py:18] train/00149/eval_val/37{0.00s}
I0116 11:15:59.983158 140170209232640 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I0116 11:15:59.983206 140170209232640 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983249 140170209232640 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983284 140170209232640 hlog.py:32] train/00149/eval_val/38/corr True
I0116 11:15:59.983315 140170209232640 hlog.py:32] train/00149/eval_val/38 
I0116 11:15:59.983355 140170209232640 hlog.py:18] train/00149/eval_val/38{0.00s}
I0116 11:15:59.983399 140170209232640 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I0116 11:15:59.983446 140170209232640 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983489 140170209232640 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I0116 11:15:59.983524 140170209232640 hlog.py:32] train/00149/eval_val/39/corr True
I0116 11:15:59.983555 140170209232640 hlog.py:32] train/00149/eval_val/39 
I0116 11:15:59.983586 140170209232640 hlog.py:18] train/00149/eval_val/39{0.00s}
I0116 11:15:59.983629 140170209232640 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I0116 11:15:59.983675 140170209232640 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0116 11:15:59.983716 140170209232640 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0116 11:15:59.983750 140170209232640 hlog.py:32] train/00149/eval_val/40/corr True
I0116 11:15:59.983790 140170209232640 hlog.py:32] train/00149/eval_val/40 
I0116 11:15:59.983822 140170209232640 hlog.py:18] train/00149/eval_val/40{0.00s}
I0116 11:15:59.983866 140170209232640 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I0116 11:15:59.983910 140170209232640 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0116 11:15:59.983951 140170209232640 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I0116 11:15:59.983985 140170209232640 hlog.py:32] train/00149/eval_val/41/corr True
I0116 11:15:59.984016 140170209232640 hlog.py:32] train/00149/eval_val/41 
I0116 11:15:59.984046 140170209232640 hlog.py:18] train/00149/eval_val/41{0.00s}
I0116 11:15:59.984089 140170209232640 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I0116 11:15:59.984133 140170209232640 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I0116 11:15:59.984175 140170209232640 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I0116 11:15:59.984210 140170209232640 hlog.py:32] train/00149/eval_val/42/corr True
I0116 11:15:59.984243 140170209232640 hlog.py:32] train/00149/eval_val/42 
I0116 11:15:59.984274 140170209232640 hlog.py:18] train/00149/eval_val/42{0.00s}
I0116 11:15:59.984323 140170209232640 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I0116 11:15:59.984377 140170209232640 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I0116 11:15:59.984424 140170209232640 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I0116 11:15:59.984458 140170209232640 hlog.py:32] train/00149/eval_val/43/corr True
I0116 11:15:59.984490 140170209232640 hlog.py:32] train/00149/eval_val/43 
I0116 11:15:59.984522 140170209232640 hlog.py:18] train/00149/eval_val/43{0.00s}
I0116 11:15:59.984572 140170209232640 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I0116 11:15:59.984624 140170209232640 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I0116 11:15:59.984671 140170209232640 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I0116 11:15:59.984706 140170209232640 hlog.py:32] train/00149/eval_val/44/corr True
I0116 11:15:59.984738 140170209232640 hlog.py:32] train/00149/eval_val/44 
I0116 11:15:59.984768 140170209232640 hlog.py:18] train/00149/eval_val/44{0.00s}
I0116 11:15:59.984813 140170209232640 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I0116 11:15:59.984862 140170209232640 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I0116 11:15:59.984905 140170209232640 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I0116 11:15:59.984940 140170209232640 hlog.py:32] train/00149/eval_val/45/corr True
I0116 11:15:59.984970 140170209232640 hlog.py:32] train/00149/eval_val/45 
I0116 11:15:59.985000 140170209232640 hlog.py:18] train/00149/eval_val/45{0.00s}
I0116 11:15:59.985043 140170209232640 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I0116 11:15:59.985090 140170209232640 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I0116 11:15:59.985141 140170209232640 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I0116 11:15:59.985177 140170209232640 hlog.py:32] train/00149/eval_val/46/corr True
I0116 11:15:59.985208 140170209232640 hlog.py:32] train/00149/eval_val/46 
I0116 11:15:59.985239 140170209232640 hlog.py:18] train/00149/eval_val/46{0.00s}
I0116 11:15:59.985284 140170209232640 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I0116 11:15:59.985332 140170209232640 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I0116 11:15:59.985376 140170209232640 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I0116 11:15:59.985410 140170209232640 hlog.py:32] train/00149/eval_val/47/corr True
I0116 11:15:59.985441 140170209232640 hlog.py:32] train/00149/eval_val/47 
I0116 11:15:59.985471 140170209232640 hlog.py:18] train/00149/eval_val/47{0.00s}
I0116 11:15:59.985517 140170209232640 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I0116 11:15:59.985566 140170209232640 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I0116 11:15:59.985611 140170209232640 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I0116 11:15:59.985646 140170209232640 hlog.py:32] train/00149/eval_val/48/corr True
I0116 11:15:59.985678 140170209232640 hlog.py:32] train/00149/eval_val/48 
I0116 11:15:59.985708 140170209232640 hlog.py:18] train/00149/eval_val/48{0.00s}
I0116 11:15:59.985754 140170209232640 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I0116 11:15:59.985803 140170209232640 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0116 11:15:59.985848 140170209232640 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0116 11:15:59.985882 140170209232640 hlog.py:32] train/00149/eval_val/49/corr True
I0116 11:15:59.985914 140170209232640 hlog.py:32] train/00149/eval_val/49 
I0116 11:15:59.985944 140170209232640 hlog.py:18] train/00149/eval_val/49{0.00s}
I0116 11:15:59.985989 140170209232640 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I0116 11:15:59.986037 140170209232640 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I0116 11:15:59.986081 140170209232640 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I0116 11:15:59.986115 140170209232640 hlog.py:32] train/00149/eval_val/50/corr True
I0116 11:15:59.986147 140170209232640 hlog.py:32] train/00149/eval_val/50 
I0116 11:15:59.986176 140170209232640 hlog.py:18] train/00149/eval_val/50{0.00s}
I0116 11:15:59.986221 140170209232640 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I0116 11:15:59.986269 140170209232640 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0116 11:15:59.986313 140170209232640 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I0116 11:15:59.986347 140170209232640 hlog.py:32] train/00149/eval_val/51/corr True
I0116 11:15:59.986385 140170209232640 hlog.py:32] train/00149/eval_val/51 
I0116 11:15:59.986416 140170209232640 hlog.py:18] train/00149/eval_val/51{0.00s}
I0116 11:15:59.986459 140170209232640 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I0116 11:15:59.986504 140170209232640 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0116 11:15:59.986545 140170209232640 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0116 11:15:59.986579 140170209232640 hlog.py:32] train/00149/eval_val/52/corr True
I0116 11:15:59.986610 140170209232640 hlog.py:32] train/00149/eval_val/52 
I0116 11:15:59.986640 140170209232640 hlog.py:18] train/00149/eval_val/52{0.00s}
I0116 11:15:59.986682 140170209232640 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I0116 11:15:59.986726 140170209232640 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0116 11:15:59.986766 140170209232640 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I0116 11:15:59.986800 140170209232640 hlog.py:32] train/00149/eval_val/53/corr True
I0116 11:15:59.986831 140170209232640 hlog.py:32] train/00149/eval_val/53 
I0116 11:15:59.986861 140170209232640 hlog.py:18] train/00149/eval_val/53{0.00s}
I0116 11:15:59.986904 140170209232640 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I0116 11:15:59.986948 140170209232640 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:15:59.986989 140170209232640 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:15:59.987022 140170209232640 hlog.py:32] train/00149/eval_val/54/corr True
I0116 11:15:59.987053 140170209232640 hlog.py:32] train/00149/eval_val/54 
I0116 11:15:59.987084 140170209232640 hlog.py:18] train/00149/eval_val/54{0.00s}
I0116 11:15:59.987125 140170209232640 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I0116 11:15:59.987169 140170209232640 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I0116 11:15:59.987209 140170209232640 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I0116 11:15:59.987242 140170209232640 hlog.py:32] train/00149/eval_val/55/corr True
I0116 11:15:59.987272 140170209232640 hlog.py:32] train/00149/eval_val/55 
I0116 11:15:59.987303 140170209232640 hlog.py:18] train/00149/eval_val/55{0.00s}
I0116 11:15:59.987353 140170209232640 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I0116 11:15:59.987398 140170209232640 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0116 11:15:59.987439 140170209232640 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0116 11:15:59.987472 140170209232640 hlog.py:32] train/00149/eval_val/56/corr True
I0116 11:15:59.987503 140170209232640 hlog.py:32] train/00149/eval_val/56 
I0116 11:15:59.987533 140170209232640 hlog.py:18] train/00149/eval_val/56{0.00s}
I0116 11:15:59.987575 140170209232640 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I0116 11:15:59.987619 140170209232640 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.987658 140170209232640 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.987692 140170209232640 hlog.py:32] train/00149/eval_val/57/corr True
I0116 11:15:59.987722 140170209232640 hlog.py:32] train/00149/eval_val/57 
I0116 11:15:59.987760 140170209232640 hlog.py:18] train/00149/eval_val/57{0.00s}
I0116 11:15:59.987803 140170209232640 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I0116 11:15:59.987847 140170209232640 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.987888 140170209232640 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:15:59.987922 140170209232640 hlog.py:32] train/00149/eval_val/58/corr True
I0116 11:15:59.987953 140170209232640 hlog.py:32] train/00149/eval_val/58 
I0116 11:15:59.987982 140170209232640 hlog.py:18] train/00149/eval_val/58{0.00s}
I0116 11:15:59.988025 140170209232640 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I0116 11:15:59.988070 140170209232640 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I0116 11:15:59.988110 140170209232640 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I0116 11:15:59.988143 140170209232640 hlog.py:32] train/00149/eval_val/59/corr True
I0116 11:15:59.988174 140170209232640 hlog.py:32] train/00149/eval_val/59 
I0116 11:15:59.988204 140170209232640 hlog.py:18] train/00149/eval_val/59{0.00s}
I0116 11:15:59.988247 140170209232640 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I0116 11:15:59.988291 140170209232640 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I0116 11:15:59.988332 140170209232640 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I0116 11:15:59.988365 140170209232640 hlog.py:32] train/00149/eval_val/60/corr True
I0116 11:15:59.988396 140170209232640 hlog.py:32] train/00149/eval_val/60 
I0116 11:15:59.988426 140170209232640 hlog.py:18] train/00149/eval_val/60{0.00s}
I0116 11:15:59.988469 140170209232640 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I0116 11:15:59.988514 140170209232640 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:15:59.988555 140170209232640 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:15:59.988589 140170209232640 hlog.py:32] train/00149/eval_val/61/corr True
I0116 11:15:59.988620 140170209232640 hlog.py:32] train/00149/eval_val/61 
I0116 11:15:59.988650 140170209232640 hlog.py:18] train/00149/eval_val/61{0.00s}
I0116 11:15:59.988692 140170209232640 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I0116 11:15:59.988735 140170209232640 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I0116 11:15:59.988776 140170209232640 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I0116 11:15:59.988809 140170209232640 hlog.py:32] train/00149/eval_val/62/corr True
I0116 11:15:59.988840 140170209232640 hlog.py:32] train/00149/eval_val/62 
I0116 11:15:59.988869 140170209232640 hlog.py:18] train/00149/eval_val/62{0.00s}
I0116 11:15:59.988910 140170209232640 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I0116 11:15:59.988953 140170209232640 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.988993 140170209232640 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:15:59.989026 140170209232640 hlog.py:32] train/00149/eval_val/63/corr True
I0116 11:15:59.989056 140170209232640 hlog.py:32] train/00149/eval_val/63 
I0116 11:15:59.989085 140170209232640 hlog.py:18] train/00149/eval_val/63{0.00s}
I0116 11:16:00.189762 140170209232640 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I0116 11:16:00.189957 140170209232640 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I0116 11:16:00.190069 140170209232640 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I0116 11:16:00.190155 140170209232640 hlog.py:32] train/00149/eval_val/64/corr True
I0116 11:16:00.190228 140170209232640 hlog.py:32] train/00149/eval_val/64 
I0116 11:16:00.190290 140170209232640 hlog.py:18] train/00149/eval_val/64{0.00s}
I0116 11:16:00.190371 140170209232640 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I0116 11:16:00.190444 140170209232640 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.190506 140170209232640 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.190556 140170209232640 hlog.py:32] train/00149/eval_val/65/corr True
I0116 11:16:00.190596 140170209232640 hlog.py:32] train/00149/eval_val/65 
I0116 11:16:00.190634 140170209232640 hlog.py:18] train/00149/eval_val/65{0.00s}
I0116 11:16:00.190684 140170209232640 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I0116 11:16:00.190734 140170209232640 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.190778 140170209232640 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.190814 140170209232640 hlog.py:32] train/00149/eval_val/66/corr True
I0116 11:16:00.190846 140170209232640 hlog.py:32] train/00149/eval_val/66 
I0116 11:16:00.190878 140170209232640 hlog.py:18] train/00149/eval_val/66{0.00s}
I0116 11:16:00.190923 140170209232640 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I0116 11:16:00.190968 140170209232640 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.191010 140170209232640 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.191044 140170209232640 hlog.py:32] train/00149/eval_val/67/corr True
I0116 11:16:00.191076 140170209232640 hlog.py:32] train/00149/eval_val/67 
I0116 11:16:00.191107 140170209232640 hlog.py:18] train/00149/eval_val/67{0.00s}
I0116 11:16:00.191152 140170209232640 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I0116 11:16:00.191198 140170209232640 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I0116 11:16:00.191241 140170209232640 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I0116 11:16:00.191275 140170209232640 hlog.py:32] train/00149/eval_val/68/corr True
I0116 11:16:00.191307 140170209232640 hlog.py:32] train/00149/eval_val/68 
I0116 11:16:00.191347 140170209232640 hlog.py:18] train/00149/eval_val/68{0.00s}
I0116 11:16:00.191393 140170209232640 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I0116 11:16:00.191440 140170209232640 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.191482 140170209232640 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.191516 140170209232640 hlog.py:32] train/00149/eval_val/69/corr True
I0116 11:16:00.191547 140170209232640 hlog.py:32] train/00149/eval_val/69 
I0116 11:16:00.191577 140170209232640 hlog.py:18] train/00149/eval_val/69{0.00s}
I0116 11:16:00.191620 140170209232640 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I0116 11:16:00.191674 140170209232640 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.191716 140170209232640 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.191750 140170209232640 hlog.py:32] train/00149/eval_val/70/corr True
I0116 11:16:00.191781 140170209232640 hlog.py:32] train/00149/eval_val/70 
I0116 11:16:00.191812 140170209232640 hlog.py:18] train/00149/eval_val/70{0.00s}
I0116 11:16:00.191854 140170209232640 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I0116 11:16:00.191897 140170209232640 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0116 11:16:00.191938 140170209232640 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I0116 11:16:00.191972 140170209232640 hlog.py:32] train/00149/eval_val/71/corr True
I0116 11:16:00.192003 140170209232640 hlog.py:32] train/00149/eval_val/71 
I0116 11:16:00.192033 140170209232640 hlog.py:18] train/00149/eval_val/71{0.00s}
I0116 11:16:00.192075 140170209232640 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I0116 11:16:00.192117 140170209232640 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0116 11:16:00.192157 140170209232640 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I0116 11:16:00.192190 140170209232640 hlog.py:32] train/00149/eval_val/72/corr True
I0116 11:16:00.192221 140170209232640 hlog.py:32] train/00149/eval_val/72 
I0116 11:16:00.192251 140170209232640 hlog.py:18] train/00149/eval_val/72{0.00s}
I0116 11:16:00.192292 140170209232640 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I0116 11:16:00.192335 140170209232640 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I0116 11:16:00.192374 140170209232640 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I0116 11:16:00.192408 140170209232640 hlog.py:32] train/00149/eval_val/73/corr True
I0116 11:16:00.192439 140170209232640 hlog.py:32] train/00149/eval_val/73 
I0116 11:16:00.192468 140170209232640 hlog.py:18] train/00149/eval_val/73{0.00s}
I0116 11:16:00.192510 140170209232640 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I0116 11:16:00.192553 140170209232640 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I0116 11:16:00.192592 140170209232640 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I0116 11:16:00.192626 140170209232640 hlog.py:32] train/00149/eval_val/74/corr True
I0116 11:16:00.192657 140170209232640 hlog.py:32] train/00149/eval_val/74 
I0116 11:16:00.192687 140170209232640 hlog.py:18] train/00149/eval_val/74{0.00s}
I0116 11:16:00.192728 140170209232640 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I0116 11:16:00.192771 140170209232640 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I0116 11:16:00.192811 140170209232640 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I0116 11:16:00.192845 140170209232640 hlog.py:32] train/00149/eval_val/75/corr True
I0116 11:16:00.192876 140170209232640 hlog.py:32] train/00149/eval_val/75 
I0116 11:16:00.192907 140170209232640 hlog.py:18] train/00149/eval_val/75{0.00s}
I0116 11:16:00.192949 140170209232640 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I0116 11:16:00.192991 140170209232640 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:16:00.193032 140170209232640 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I0116 11:16:00.193073 140170209232640 hlog.py:32] train/00149/eval_val/76/corr True
I0116 11:16:00.193105 140170209232640 hlog.py:32] train/00149/eval_val/76 
I0116 11:16:00.193135 140170209232640 hlog.py:18] train/00149/eval_val/76{0.00s}
I0116 11:16:00.193177 140170209232640 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I0116 11:16:00.193220 140170209232640 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I0116 11:16:00.193259 140170209232640 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I0116 11:16:00.193294 140170209232640 hlog.py:32] train/00149/eval_val/77/corr True
I0116 11:16:00.193325 140170209232640 hlog.py:32] train/00149/eval_val/77 
I0116 11:16:00.193355 140170209232640 hlog.py:18] train/00149/eval_val/77{0.00s}
I0116 11:16:00.193396 140170209232640 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I0116 11:16:00.193439 140170209232640 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I0116 11:16:00.193478 140170209232640 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I0116 11:16:00.193512 140170209232640 hlog.py:32] train/00149/eval_val/78/corr True
I0116 11:16:00.193542 140170209232640 hlog.py:32] train/00149/eval_val/78 
I0116 11:16:00.193572 140170209232640 hlog.py:18] train/00149/eval_val/78{0.00s}
I0116 11:16:00.193615 140170209232640 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I0116 11:16:00.193657 140170209232640 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I0116 11:16:00.193696 140170209232640 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I0116 11:16:00.193730 140170209232640 hlog.py:32] train/00149/eval_val/79/corr True
I0116 11:16:00.193761 140170209232640 hlog.py:32] train/00149/eval_val/79 
I0116 11:16:00.193791 140170209232640 hlog.py:18] train/00149/eval_val/79{0.00s}
I0116 11:16:00.193831 140170209232640 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I0116 11:16:00.193874 140170209232640 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.193913 140170209232640 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.193947 140170209232640 hlog.py:32] train/00149/eval_val/80/corr True
I0116 11:16:00.193978 140170209232640 hlog.py:32] train/00149/eval_val/80 
I0116 11:16:00.194008 140170209232640 hlog.py:18] train/00149/eval_val/80{0.00s}
I0116 11:16:00.194051 140170209232640 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I0116 11:16:00.194093 140170209232640 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.194133 140170209232640 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.194166 140170209232640 hlog.py:32] train/00149/eval_val/81/corr True
I0116 11:16:00.194197 140170209232640 hlog.py:32] train/00149/eval_val/81 
I0116 11:16:00.194227 140170209232640 hlog.py:18] train/00149/eval_val/81{0.00s}
I0116 11:16:00.194269 140170209232640 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I0116 11:16:00.194312 140170209232640 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I0116 11:16:00.194352 140170209232640 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I0116 11:16:00.194386 140170209232640 hlog.py:32] train/00149/eval_val/82/corr True
I0116 11:16:00.194416 140170209232640 hlog.py:32] train/00149/eval_val/82 
I0116 11:16:00.194454 140170209232640 hlog.py:18] train/00149/eval_val/82{0.00s}
I0116 11:16:00.194498 140170209232640 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I0116 11:16:00.194540 140170209232640 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I0116 11:16:00.194580 140170209232640 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I0116 11:16:00.194613 140170209232640 hlog.py:32] train/00149/eval_val/83/corr True
I0116 11:16:00.194644 140170209232640 hlog.py:32] train/00149/eval_val/83 
I0116 11:16:00.194674 140170209232640 hlog.py:18] train/00149/eval_val/83{0.00s}
I0116 11:16:00.194718 140170209232640 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I0116 11:16:00.194761 140170209232640 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:16:00.194801 140170209232640 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:16:00.194834 140170209232640 hlog.py:32] train/00149/eval_val/84/corr True
I0116 11:16:00.194865 140170209232640 hlog.py:32] train/00149/eval_val/84 
I0116 11:16:00.194895 140170209232640 hlog.py:18] train/00149/eval_val/84{0.00s}
I0116 11:16:00.194938 140170209232640 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I0116 11:16:00.194980 140170209232640 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:16:00.195020 140170209232640 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I0116 11:16:00.195054 140170209232640 hlog.py:32] train/00149/eval_val/85/corr True
I0116 11:16:00.195085 140170209232640 hlog.py:32] train/00149/eval_val/85 
I0116 11:16:00.195116 140170209232640 hlog.py:18] train/00149/eval_val/85{0.00s}
I0116 11:16:00.195163 140170209232640 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I0116 11:16:00.195213 140170209232640 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I0116 11:16:00.195258 140170209232640 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I0116 11:16:00.195294 140170209232640 hlog.py:32] train/00149/eval_val/86/corr True
I0116 11:16:00.195338 140170209232640 hlog.py:32] train/00149/eval_val/86 
I0116 11:16:00.195371 140170209232640 hlog.py:18] train/00149/eval_val/86{0.00s}
I0116 11:16:00.195418 140170209232640 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I0116 11:16:00.195472 140170209232640 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I0116 11:16:00.195519 140170209232640 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I0116 11:16:00.195554 140170209232640 hlog.py:32] train/00149/eval_val/87/corr True
I0116 11:16:00.195585 140170209232640 hlog.py:32] train/00149/eval_val/87 
I0116 11:16:00.195616 140170209232640 hlog.py:18] train/00149/eval_val/87{0.00s}
I0116 11:16:00.195658 140170209232640 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I0116 11:16:00.195702 140170209232640 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I0116 11:16:00.195743 140170209232640 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I0116 11:16:00.195786 140170209232640 hlog.py:32] train/00149/eval_val/88/corr True
I0116 11:16:00.195818 140170209232640 hlog.py:32] train/00149/eval_val/88 
I0116 11:16:00.195849 140170209232640 hlog.py:18] train/00149/eval_val/88{0.00s}
I0116 11:16:00.195895 140170209232640 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I0116 11:16:00.195946 140170209232640 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.195992 140170209232640 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.196027 140170209232640 hlog.py:32] train/00149/eval_val/89/corr True
I0116 11:16:00.196058 140170209232640 hlog.py:32] train/00149/eval_val/89 
I0116 11:16:00.196088 140170209232640 hlog.py:18] train/00149/eval_val/89{0.00s}
I0116 11:16:00.196136 140170209232640 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I0116 11:16:00.196189 140170209232640 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I0116 11:16:00.196236 140170209232640 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I0116 11:16:00.196271 140170209232640 hlog.py:32] train/00149/eval_val/90/corr True
I0116 11:16:00.196302 140170209232640 hlog.py:32] train/00149/eval_val/90 
I0116 11:16:00.196332 140170209232640 hlog.py:18] train/00149/eval_val/90{0.00s}
I0116 11:16:00.196376 140170209232640 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I0116 11:16:00.196422 140170209232640 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196463 140170209232640 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196497 140170209232640 hlog.py:32] train/00149/eval_val/91/corr True
I0116 11:16:00.196527 140170209232640 hlog.py:32] train/00149/eval_val/91 
I0116 11:16:00.196557 140170209232640 hlog.py:18] train/00149/eval_val/91{0.00s}
I0116 11:16:00.196599 140170209232640 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I0116 11:16:00.196645 140170209232640 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196686 140170209232640 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196719 140170209232640 hlog.py:32] train/00149/eval_val/92/corr True
I0116 11:16:00.196750 140170209232640 hlog.py:32] train/00149/eval_val/92 
I0116 11:16:00.196780 140170209232640 hlog.py:18] train/00149/eval_val/92{0.00s}
I0116 11:16:00.196823 140170209232640 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I0116 11:16:00.196868 140170209232640 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196909 140170209232640 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.196943 140170209232640 hlog.py:32] train/00149/eval_val/93/corr True
I0116 11:16:00.196973 140170209232640 hlog.py:32] train/00149/eval_val/93 
I0116 11:16:00.197003 140170209232640 hlog.py:18] train/00149/eval_val/93{0.00s}
I0116 11:16:00.197045 140170209232640 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I0116 11:16:00.197096 140170209232640 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.197138 140170209232640 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.197172 140170209232640 hlog.py:32] train/00149/eval_val/94/corr True
I0116 11:16:00.197204 140170209232640 hlog.py:32] train/00149/eval_val/94 
I0116 11:16:00.197234 140170209232640 hlog.py:18] train/00149/eval_val/94{0.00s}
I0116 11:16:00.197278 140170209232640 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I0116 11:16:00.197323 140170209232640 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.197365 140170209232640 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.197400 140170209232640 hlog.py:32] train/00149/eval_val/95/corr True
I0116 11:16:00.197432 140170209232640 hlog.py:32] train/00149/eval_val/95 
I0116 11:16:00.197462 140170209232640 hlog.py:18] train/00149/eval_val/95{0.00s}
I0116 11:16:00.197507 140170209232640 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I0116 11:16:00.197557 140170209232640 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I0116 11:16:00.197601 140170209232640 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I0116 11:16:00.197636 140170209232640 hlog.py:32] train/00149/eval_val/96/corr True
I0116 11:16:00.197667 140170209232640 hlog.py:32] train/00149/eval_val/96 
I0116 11:16:00.197697 140170209232640 hlog.py:18] train/00149/eval_val/96{0.00s}
I0116 11:16:00.197746 140170209232640 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I0116 11:16:00.197827 140170209232640 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I0116 11:16:00.198146 140170209232640 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I0116 11:16:00.198192 140170209232640 hlog.py:32] train/00149/eval_val/97/corr True
I0116 11:16:00.198225 140170209232640 hlog.py:32] train/00149/eval_val/97 
I0116 11:16:00.198258 140170209232640 hlog.py:18] train/00149/eval_val/97{0.00s}
I0116 11:16:00.198307 140170209232640 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I0116 11:16:00.198356 140170209232640 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I0116 11:16:00.198399 140170209232640 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I0116 11:16:00.198435 140170209232640 hlog.py:32] train/00149/eval_val/98/corr True
I0116 11:16:00.198466 140170209232640 hlog.py:32] train/00149/eval_val/98 
I0116 11:16:00.198496 140170209232640 hlog.py:18] train/00149/eval_val/98{0.00s}
I0116 11:16:00.198542 140170209232640 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I0116 11:16:00.198590 140170209232640 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I0116 11:16:00.198640 140170209232640 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I0116 11:16:00.198676 140170209232640 hlog.py:32] train/00149/eval_val/99/corr True
I0116 11:16:00.198708 140170209232640 hlog.py:32] train/00149/eval_val/99 
I0116 11:16:00.198738 140170209232640 hlog.py:18] train/00149/eval_val/99{0.00s}
I0116 11:16:00.198783 140170209232640 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I0116 11:16:00.198831 140170209232640 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0116 11:16:00.198874 140170209232640 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0116 11:16:00.198909 140170209232640 hlog.py:32] train/00149/eval_val/100/corr True
I0116 11:16:00.198939 140170209232640 hlog.py:32] train/00149/eval_val/100 
I0116 11:16:00.198969 140170209232640 hlog.py:18] train/00149/eval_val/100{0.00s}
I0116 11:16:00.199014 140170209232640 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I0116 11:16:00.199061 140170209232640 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0116 11:16:00.199104 140170209232640 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I0116 11:16:00.199138 140170209232640 hlog.py:32] train/00149/eval_val/101/corr True
I0116 11:16:00.199169 140170209232640 hlog.py:32] train/00149/eval_val/101 
I0116 11:16:00.199199 140170209232640 hlog.py:18] train/00149/eval_val/101{0.00s}
I0116 11:16:00.199241 140170209232640 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I0116 11:16:00.199285 140170209232640 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I0116 11:16:00.199332 140170209232640 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I0116 11:16:00.199368 140170209232640 hlog.py:32] train/00149/eval_val/102/corr True
I0116 11:16:00.199399 140170209232640 hlog.py:32] train/00149/eval_val/102 
I0116 11:16:00.199429 140170209232640 hlog.py:18] train/00149/eval_val/102{0.00s}
I0116 11:16:00.199472 140170209232640 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I0116 11:16:00.199515 140170209232640 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I0116 11:16:00.199556 140170209232640 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I0116 11:16:00.199589 140170209232640 hlog.py:32] train/00149/eval_val/103/corr True
I0116 11:16:00.199619 140170209232640 hlog.py:32] train/00149/eval_val/103 
I0116 11:16:00.199649 140170209232640 hlog.py:18] train/00149/eval_val/103{0.00s}
I0116 11:16:00.199690 140170209232640 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I0116 11:16:00.199733 140170209232640 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.199773 140170209232640 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.199807 140170209232640 hlog.py:32] train/00149/eval_val/104/corr True
I0116 11:16:00.199838 140170209232640 hlog.py:32] train/00149/eval_val/104 
I0116 11:16:00.199867 140170209232640 hlog.py:18] train/00149/eval_val/104{0.00s}
I0116 11:16:00.199909 140170209232640 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I0116 11:16:00.199958 140170209232640 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I0116 11:16:00.199999 140170209232640 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I0116 11:16:00.200033 140170209232640 hlog.py:32] train/00149/eval_val/105/corr True
I0116 11:16:00.200064 140170209232640 hlog.py:32] train/00149/eval_val/105 
I0116 11:16:00.200094 140170209232640 hlog.py:18] train/00149/eval_val/105{0.00s}
I0116 11:16:00.200136 140170209232640 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I0116 11:16:00.200180 140170209232640 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I0116 11:16:00.200219 140170209232640 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I0116 11:16:00.200253 140170209232640 hlog.py:32] train/00149/eval_val/106/corr True
I0116 11:16:00.200284 140170209232640 hlog.py:32] train/00149/eval_val/106 
I0116 11:16:00.200313 140170209232640 hlog.py:18] train/00149/eval_val/106{0.00s}
I0116 11:16:00.200355 140170209232640 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I0116 11:16:00.200399 140170209232640 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:16:00.200439 140170209232640 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:16:00.200473 140170209232640 hlog.py:32] train/00149/eval_val/107/corr True
I0116 11:16:00.200503 140170209232640 hlog.py:32] train/00149/eval_val/107 
I0116 11:16:00.200533 140170209232640 hlog.py:18] train/00149/eval_val/107{0.00s}
I0116 11:16:00.200574 140170209232640 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I0116 11:16:00.200618 140170209232640 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I0116 11:16:00.200657 140170209232640 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I0116 11:16:00.200691 140170209232640 hlog.py:32] train/00149/eval_val/108/corr True
I0116 11:16:00.200722 140170209232640 hlog.py:32] train/00149/eval_val/108 
I0116 11:16:00.200751 140170209232640 hlog.py:18] train/00149/eval_val/108{0.00s}
I0116 11:16:00.200793 140170209232640 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I0116 11:16:00.200837 140170209232640 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I0116 11:16:00.200876 140170209232640 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I0116 11:16:00.200910 140170209232640 hlog.py:32] train/00149/eval_val/109/corr True
I0116 11:16:00.200941 140170209232640 hlog.py:32] train/00149/eval_val/109 
I0116 11:16:00.200971 140170209232640 hlog.py:18] train/00149/eval_val/109{0.00s}
I0116 11:16:00.201014 140170209232640 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I0116 11:16:00.201058 140170209232640 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:16:00.201098 140170209232640 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I0116 11:16:00.201133 140170209232640 hlog.py:32] train/00149/eval_val/110/corr True
I0116 11:16:00.201164 140170209232640 hlog.py:32] train/00149/eval_val/110 
I0116 11:16:00.201194 140170209232640 hlog.py:18] train/00149/eval_val/110{0.00s}
I0116 11:16:00.201237 140170209232640 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I0116 11:16:00.201288 140170209232640 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I0116 11:16:00.201329 140170209232640 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I0116 11:16:00.201364 140170209232640 hlog.py:32] train/00149/eval_val/111/corr True
I0116 11:16:00.201394 140170209232640 hlog.py:32] train/00149/eval_val/111 
I0116 11:16:00.201424 140170209232640 hlog.py:18] train/00149/eval_val/111{0.00s}
I0116 11:16:00.201466 140170209232640 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I0116 11:16:00.201511 140170209232640 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I0116 11:16:00.201551 140170209232640 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I0116 11:16:00.201584 140170209232640 hlog.py:32] train/00149/eval_val/112/corr True
I0116 11:16:00.201615 140170209232640 hlog.py:32] train/00149/eval_val/112 
I0116 11:16:00.201645 140170209232640 hlog.py:18] train/00149/eval_val/112{0.00s}
I0116 11:16:00.201686 140170209232640 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I0116 11:16:00.201730 140170209232640 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0116 11:16:00.201770 140170209232640 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I0116 11:16:00.201804 140170209232640 hlog.py:32] train/00149/eval_val/113/corr True
I0116 11:16:00.201835 140170209232640 hlog.py:32] train/00149/eval_val/113 
I0116 11:16:00.201865 140170209232640 hlog.py:18] train/00149/eval_val/113{0.00s}
I0116 11:16:00.201906 140170209232640 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I0116 11:16:00.201950 140170209232640 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.201991 140170209232640 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I0116 11:16:00.202024 140170209232640 hlog.py:32] train/00149/eval_val/114/corr True
I0116 11:16:00.202055 140170209232640 hlog.py:32] train/00149/eval_val/114 
I0116 11:16:00.202085 140170209232640 hlog.py:18] train/00149/eval_val/114{0.00s}
I0116 11:16:00.202127 140170209232640 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I0116 11:16:00.202172 140170209232640 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I0116 11:16:00.202214 140170209232640 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I0116 11:16:00.202248 140170209232640 hlog.py:32] train/00149/eval_val/115/corr True
I0116 11:16:00.202279 140170209232640 hlog.py:32] train/00149/eval_val/115 
I0116 11:16:00.202309 140170209232640 hlog.py:18] train/00149/eval_val/115{0.00s}
I0116 11:16:00.202351 140170209232640 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I0116 11:16:00.202395 140170209232640 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.202436 140170209232640 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I0116 11:16:00.202470 140170209232640 hlog.py:32] train/00149/eval_val/116/corr True
I0116 11:16:00.202501 140170209232640 hlog.py:32] train/00149/eval_val/116 
I0116 11:16:00.202531 140170209232640 hlog.py:18] train/00149/eval_val/116{0.00s}
I0116 11:16:00.202582 140170209232640 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I0116 11:16:00.202629 140170209232640 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.202672 140170209232640 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.202705 140170209232640 hlog.py:32] train/00149/eval_val/117/corr True
I0116 11:16:00.202737 140170209232640 hlog.py:32] train/00149/eval_val/117 
I0116 11:16:00.202766 140170209232640 hlog.py:18] train/00149/eval_val/117{0.00s}
I0116 11:16:00.202808 140170209232640 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I0116 11:16:00.202854 140170209232640 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.202895 140170209232640 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.202929 140170209232640 hlog.py:32] train/00149/eval_val/118/corr True
I0116 11:16:00.202961 140170209232640 hlog.py:32] train/00149/eval_val/118 
I0116 11:16:00.202990 140170209232640 hlog.py:18] train/00149/eval_val/118{0.00s}
I0116 11:16:00.203033 140170209232640 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I0116 11:16:00.203078 140170209232640 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.203119 140170209232640 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I0116 11:16:00.203153 140170209232640 hlog.py:32] train/00149/eval_val/119/corr True
I0116 11:16:00.203184 140170209232640 hlog.py:32] train/00149/eval_val/119 
I0116 11:16:00.203214 140170209232640 hlog.py:18] train/00149/eval_val/119{0.00s}
I0116 11:16:00.203254 140170209232640 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I0116 11:16:00.203294 140170209232640 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I0116 11:16:00.203339 140170209232640 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I0116 11:16:00.203374 140170209232640 hlog.py:32] train/00149/eval_val/120/corr True
I0116 11:16:00.203405 140170209232640 hlog.py:32] train/00149/eval_val/120 
I0116 11:16:00.203435 140170209232640 hlog.py:18] train/00149/eval_val/120{0.00s}
I0116 11:16:00.203475 140170209232640 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I0116 11:16:00.203515 140170209232640 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I0116 11:16:00.203553 140170209232640 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I0116 11:16:00.203586 140170209232640 hlog.py:32] train/00149/eval_val/121/corr True
I0116 11:16:00.203617 140170209232640 hlog.py:32] train/00149/eval_val/121 
I0116 11:16:00.203647 140170209232640 hlog.py:18] train/00149/eval_val/121{0.00s}
I0116 11:16:00.203691 140170209232640 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I0116 11:16:00.203737 140170209232640 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I0116 11:16:00.203779 140170209232640 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I0116 11:16:00.203813 140170209232640 hlog.py:32] train/00149/eval_val/122/corr True
I0116 11:16:00.203844 140170209232640 hlog.py:32] train/00149/eval_val/122 
I0116 11:16:00.203873 140170209232640 hlog.py:18] train/00149/eval_val/122{0.00s}
I0116 11:16:00.203917 140170209232640 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I0116 11:16:00.203968 140170209232640 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I0116 11:16:00.204010 140170209232640 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I0116 11:16:00.204045 140170209232640 hlog.py:32] train/00149/eval_val/123/corr True
I0116 11:16:00.204076 140170209232640 hlog.py:32] train/00149/eval_val/123 
I0116 11:16:00.204105 140170209232640 hlog.py:18] train/00149/eval_val/123{0.00s}
I0116 11:16:00.204148 140170209232640 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I0116 11:16:00.204193 140170209232640 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I0116 11:16:00.204234 140170209232640 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I0116 11:16:00.204268 140170209232640 hlog.py:32] train/00149/eval_val/124/corr True
I0116 11:16:00.204299 140170209232640 hlog.py:32] train/00149/eval_val/124 
I0116 11:16:00.204329 140170209232640 hlog.py:18] train/00149/eval_val/124{0.00s}
I0116 11:16:00.204371 140170209232640 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I0116 11:16:00.204416 140170209232640 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I0116 11:16:00.204458 140170209232640 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I0116 11:16:00.204492 140170209232640 hlog.py:32] train/00149/eval_val/125/corr True
I0116 11:16:00.204523 140170209232640 hlog.py:32] train/00149/eval_val/125 
I0116 11:16:00.204553 140170209232640 hlog.py:18] train/00149/eval_val/125{0.00s}
I0116 11:16:00.204596 140170209232640 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I0116 11:16:00.204640 140170209232640 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.204681 140170209232640 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.204715 140170209232640 hlog.py:32] train/00149/eval_val/126/corr True
I0116 11:16:00.204746 140170209232640 hlog.py:32] train/00149/eval_val/126 
I0116 11:16:00.204777 140170209232640 hlog.py:18] train/00149/eval_val/126{0.00s}
I0116 11:16:00.204820 140170209232640 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I0116 11:16:00.204863 140170209232640 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.204903 140170209232640 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.204937 140170209232640 hlog.py:32] train/00149/eval_val/127/corr True
I0116 11:16:00.204968 140170209232640 hlog.py:32] train/00149/eval_val/127 
I0116 11:16:00.204998 140170209232640 hlog.py:18] train/00149/eval_val/127{0.00s}
I0116 11:16:00.331024 140170209232640 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I0116 11:16:00.331198 140170209232640 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331254 140170209232640 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331300 140170209232640 hlog.py:32] train/00149/eval_val/128/corr True
I0116 11:16:00.331357 140170209232640 hlog.py:32] train/00149/eval_val/128 
I0116 11:16:00.331398 140170209232640 hlog.py:18] train/00149/eval_val/128{0.00s}
I0116 11:16:00.331456 140170209232640 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I0116 11:16:00.331504 140170209232640 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331547 140170209232640 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331582 140170209232640 hlog.py:32] train/00149/eval_val/129/corr True
I0116 11:16:00.331614 140170209232640 hlog.py:32] train/00149/eval_val/129 
I0116 11:16:00.331645 140170209232640 hlog.py:18] train/00149/eval_val/129{0.00s}
I0116 11:16:00.331689 140170209232640 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I0116 11:16:00.331733 140170209232640 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331773 140170209232640 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331808 140170209232640 hlog.py:32] train/00149/eval_val/130/corr True
I0116 11:16:00.331840 140170209232640 hlog.py:32] train/00149/eval_val/130 
I0116 11:16:00.331870 140170209232640 hlog.py:18] train/00149/eval_val/130{0.00s}
I0116 11:16:00.331912 140170209232640 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I0116 11:16:00.331955 140170209232640 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.331994 140170209232640 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.332028 140170209232640 hlog.py:32] train/00149/eval_val/131/corr True
I0116 11:16:00.332060 140170209232640 hlog.py:32] train/00149/eval_val/131 
I0116 11:16:00.332090 140170209232640 hlog.py:18] train/00149/eval_val/131{0.00s}
I0116 11:16:00.332133 140170209232640 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I0116 11:16:00.332176 140170209232640 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.332216 140170209232640 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I0116 11:16:00.332250 140170209232640 hlog.py:32] train/00149/eval_val/132/corr True
I0116 11:16:00.332281 140170209232640 hlog.py:32] train/00149/eval_val/132 
I0116 11:16:00.332311 140170209232640 hlog.py:18] train/00149/eval_val/132{0.00s}
I0116 11:16:00.332354 140170209232640 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I0116 11:16:00.332397 140170209232640 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I0116 11:16:00.332437 140170209232640 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I0116 11:16:00.332471 140170209232640 hlog.py:32] train/00149/eval_val/133/corr True
I0116 11:16:00.332502 140170209232640 hlog.py:32] train/00149/eval_val/133 
I0116 11:16:00.332531 140170209232640 hlog.py:18] train/00149/eval_val/133{0.00s}
I0116 11:16:00.332579 140170209232640 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I0116 11:16:00.332629 140170209232640 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.332673 140170209232640 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.332708 140170209232640 hlog.py:32] train/00149/eval_val/134/corr True
I0116 11:16:00.332739 140170209232640 hlog.py:32] train/00149/eval_val/134 
I0116 11:16:00.332770 140170209232640 hlog.py:18] train/00149/eval_val/134{0.00s}
I0116 11:16:00.332816 140170209232640 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I0116 11:16:00.332877 140170209232640 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.332923 140170209232640 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I0116 11:16:00.332958 140170209232640 hlog.py:32] train/00149/eval_val/135/corr True
I0116 11:16:00.332990 140170209232640 hlog.py:32] train/00149/eval_val/135 
I0116 11:16:00.333020 140170209232640 hlog.py:18] train/00149/eval_val/135{0.00s}
I0116 11:16:00.333062 140170209232640 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I0116 11:16:00.333108 140170209232640 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333149 140170209232640 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333184 140170209232640 hlog.py:32] train/00149/eval_val/136/corr True
I0116 11:16:00.333215 140170209232640 hlog.py:32] train/00149/eval_val/136 
I0116 11:16:00.333245 140170209232640 hlog.py:18] train/00149/eval_val/136{0.00s}
I0116 11:16:00.333287 140170209232640 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I0116 11:16:00.333332 140170209232640 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333373 140170209232640 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333407 140170209232640 hlog.py:32] train/00149/eval_val/137/corr True
I0116 11:16:00.333438 140170209232640 hlog.py:32] train/00149/eval_val/137 
I0116 11:16:00.333468 140170209232640 hlog.py:18] train/00149/eval_val/137{0.00s}
I0116 11:16:00.333510 140170209232640 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I0116 11:16:00.333554 140170209232640 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333595 140170209232640 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333629 140170209232640 hlog.py:32] train/00149/eval_val/138/corr True
I0116 11:16:00.333661 140170209232640 hlog.py:32] train/00149/eval_val/138 
I0116 11:16:00.333691 140170209232640 hlog.py:18] train/00149/eval_val/138{0.00s}
I0116 11:16:00.333733 140170209232640 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I0116 11:16:00.333777 140170209232640 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333817 140170209232640 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I0116 11:16:00.333851 140170209232640 hlog.py:32] train/00149/eval_val/139/corr True
I0116 11:16:00.333882 140170209232640 hlog.py:32] train/00149/eval_val/139 
I0116 11:16:00.333912 140170209232640 hlog.py:18] train/00149/eval_val/139{0.00s}
I0116 11:16:00.333958 140170209232640 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I0116 11:16:00.334007 140170209232640 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0116 11:16:00.334051 140170209232640 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0116 11:16:00.334087 140170209232640 hlog.py:32] train/00149/eval_val/140/corr True
I0116 11:16:00.334118 140170209232640 hlog.py:32] train/00149/eval_val/140 
I0116 11:16:00.334160 140170209232640 hlog.py:18] train/00149/eval_val/140{0.00s}
I0116 11:16:00.334207 140170209232640 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I0116 11:16:00.334256 140170209232640 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0116 11:16:00.334299 140170209232640 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I0116 11:16:00.334334 140170209232640 hlog.py:32] train/00149/eval_val/141/corr True
I0116 11:16:00.334366 140170209232640 hlog.py:32] train/00149/eval_val/141 
I0116 11:16:00.334397 140170209232640 hlog.py:18] train/00149/eval_val/141{0.00s}
I0116 11:16:00.334442 140170209232640 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I0116 11:16:00.334486 140170209232640 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0116 11:16:00.334526 140170209232640 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0116 11:16:00.334561 140170209232640 hlog.py:32] train/00149/eval_val/142/corr True
I0116 11:16:00.334592 140170209232640 hlog.py:32] train/00149/eval_val/142 
I0116 11:16:00.334622 140170209232640 hlog.py:18] train/00149/eval_val/142{0.00s}
I0116 11:16:00.334664 140170209232640 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I0116 11:16:00.334707 140170209232640 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0116 11:16:00.334747 140170209232640 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I0116 11:16:00.334781 140170209232640 hlog.py:32] train/00149/eval_val/143/corr True
I0116 11:16:00.334812 140170209232640 hlog.py:32] train/00149/eval_val/143 
I0116 11:16:00.334842 140170209232640 hlog.py:18] train/00149/eval_val/143{0.00s}
I0116 11:16:00.334884 140170209232640 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I0116 11:16:00.334927 140170209232640 hlog.py:32] train/00149/eval_val/144/pred ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I0116 11:16:00.334967 140170209232640 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I0116 11:16:00.335001 140170209232640 hlog.py:32] train/00149/eval_val/144/corr True
I0116 11:16:00.335032 140170209232640 hlog.py:32] train/00149/eval_val/144 
I0116 11:16:00.335062 140170209232640 hlog.py:18] train/00149/eval_val/144{0.00s}
I0116 11:16:00.335105 140170209232640 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I0116 11:16:00.335148 140170209232640 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I0116 11:16:00.335188 140170209232640 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I0116 11:16:00.335222 140170209232640 hlog.py:32] train/00149/eval_val/145/corr True
I0116 11:16:00.335253 140170209232640 hlog.py:32] train/00149/eval_val/145 
I0116 11:16:00.335283 140170209232640 hlog.py:18] train/00149/eval_val/145{0.00s}
I0116 11:16:00.335345 140170209232640 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I0116 11:16:00.335405 140170209232640 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I0116 11:16:00.335451 140170209232640 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I0116 11:16:00.335496 140170209232640 hlog.py:32] train/00149/eval_val/146/corr True
I0116 11:16:00.335529 140170209232640 hlog.py:32] train/00149/eval_val/146 
I0116 11:16:00.335560 140170209232640 hlog.py:18] train/00149/eval_val/146{0.00s}
I0116 11:16:00.335603 140170209232640 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I0116 11:16:00.335650 140170209232640 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I0116 11:16:00.335691 140170209232640 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I0116 11:16:00.335725 140170209232640 hlog.py:32] train/00149/eval_val/147/corr True
I0116 11:16:00.335756 140170209232640 hlog.py:32] train/00149/eval_val/147 
I0116 11:16:00.335786 140170209232640 hlog.py:18] train/00149/eval_val/147{0.00s}
I0116 11:16:00.335821 140170209232640 hlog.py:32] train/00149/eval_val/acc 1.0000
I0116 11:16:00.882482 140170209232640 hlog.py:32] train/00149/eval_test/acc 0.5699
I0116 11:16:00.926927 140170209232640 hlog.py:18] train/00149{17.41s}
I0116 11:16:00.931167 140170209232640 hlog.py:18] train{2718.90s}
