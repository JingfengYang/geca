12625
0 3
1 3
2 15
3 32
4 24
5 15
6 32
7 24
8 8
9 13
10 11
11 10
12 17
13 14
14 10
15 14
16 8
17 13
18 11
19 9
20 8
21 6
22 15
23 32
24 24
25 15
26 32
27 24
28 8
29 13
30 11
31 10
32 17
33 14
34 10
35 17
36 14
37 8
38 11
39 9
40 8
41 11
42 20
43 16
44 11
45 20
46 16
47 7
48 10
49 9
50 9
51 14
52 12
53 9
54 14
55 12
56 7
57 10
58 9
59 6
60 15
61 32
62 24
63 15
64 32
65 24
66 8
67 13
68 11
69 10
70 17
71 14
72 10
73 17
74 14
75 8
76 13
77 9
78 8
79 6
80 15
81 32
82 24
83 15
84 32
85 24
86 8
87 13
88 11
89 10
90 17
91 14
92 10
93 17
94 14
95 8
96 13
97 11
98 9
99 8
100 6
101 15
102 24
103 15
104 32
105 24
106 8
107 13
108 11
109 10
110 17
111 14
112 10
113 17
114 14
115 8
116 13
117 11
118 9
119 8
120 11
121 20
122 16
123 11
124 20
125 16
126 10
127 9
128 9
129 14
130 12
131 9
132 14
133 12
134 7
135 10
136 9
137 6
138 15
139 32
140 24
141 15
142 24
143 8
144 13
145 11
146 10
147 17
148 14
149 10
150 14
151 8
152 13
153 11
154 9
155 8
156 12
157 15
158 24
160 33
161 24
163 33
164 17
165 22
166 20
167 19
168 26
169 23
170 19
171 26
172 23
173 17
174 22
175 20
176 18
177 17
178 15
179 24
181 33
183 33
184 17
185 22
186 20
187 19
188 26
189 23
190 19
191 26
192 23
193 17
194 22
195 20
196 18
197 17
198 20
199 29
200 25
201 20
202 29
203 25
204 16
205 19
206 18
207 23
208 21
209 23
210 21
211 16
212 19
213 18
214 15
215 24
217 33
218 24
220 33
221 17
222 22
223 20
224 19
225 26
226 23
227 19
228 26
229 23
230 17
231 20
232 18
233 17
234 15
235 24
237 33
238 24
240 33
241 17
242 22
243 20
244 19
245 26
246 23
247 19
248 26
249 23
250 17
251 22
252 18
253 17
254 15
255 24
257 33
258 24
260 17
261 22
262 20
263 19
264 26
265 23
266 19
267 26
268 23
269 17
270 22
271 20
272 18
273 17
274 20
275 29
276 25
277 20
278 29
279 25
280 16
281 19
282 18
283 18
284 23
285 21
286 18
287 23
288 21
289 16
290 19
291 18
292 15
293 24
295 33
296 24
298 33
299 17
300 22
301 20
302 19
303 26
304 23
305 19
306 26
307 23
308 17
309 22
310 20
311 18
312 17
313 29
314 32
321 34
322 39
323 37
324 36
329 34
330 39
331 37
332 35
333 34
334 32
341 34
342 39
343 37
344 36
347 36
350 34
351 39
352 35
353 34
354 37
357 37
360 33
361 36
362 35
363 35
365 38
366 35
368 38
369 33
370 36
371 35
372 32
379 34
380 39
381 37
382 36
384 36
387 34
388 39
389 37
390 35
391 34
392 32
399 34
400 39
401 37
404 36
407 34
408 39
409 37
410 35
411 34
412 32
418 34
419 39
420 37
421 36
424 36
427 34
428 39
429 37
430 35
431 34
432 37
435 37
438 33
439 36
440 35
442 38
443 35
445 38
446 33
447 36
448 35
449 32
456 34
457 39
458 37
459 36
462 36
465 34
466 39
467 37
468 34
469 24
470 33
473 33
476 31
477 29
478 28
479 35
480 32
481 28
482 35
483 32
484 26
485 31
486 29
487 27
488 26
489 33
492 33
495 26
496 31
497 29
498 28
499 35
500 32
501 28
502 35
503 32
504 26
505 31
506 27
507 26
508 29
509 38
510 34
511 29
512 38
513 34
514 25
515 28
516 27
517 27
518 32
519 30
520 27
521 32
522 30
523 25
524 28
525 27
526 24
527 33
530 33
533 26
534 31
535 29
536 28
537 35
538 32
539 28
540 35
541 32
542 26
543 31
544 29
545 27
546 26
547 24
548 33
551 33
554 26
555 29
556 28
557 35
558 32
559 28
560 26
561 31
562 29
563 27
564 26
565 24
566 33
569 33
572 26
573 31
574 29
575 28
576 35
577 32
578 28
579 35
580 32
581 26
582 31
583 29
584 27
585 26
586 29
587 38
588 34
589 29
590 34
591 25
592 28
593 27
594 27
595 32
596 30
597 27
598 32
599 30
600 25
601 28
602 27
603 24
604 33
607 33
610 26
611 31
612 29
613 28
614 35
615 32
616 28
617 35
618 32
619 26
620 31
621 29
622 27
623 26
624 12
625 15
626 24
628 33
629 24
631 33
632 17
633 22
634 20
635 19
636 26
637 23
638 19
639 26
640 23
641 17
642 22
643 20
644 18
645 15
646 24
648 33
649 24
651 33
652 17
653 20
654 19
655 26
656 23
657 19
658 26
659 23
660 17
661 22
662 20
663 18
664 17
665 20
666 29
667 25
668 20
669 29
670 25
671 16
672 19
673 18
674 18
675 23
676 21
677 18
678 23
679 16
680 19
681 18
682 15
683 24
685 33
686 24
688 33
689 17
690 22
691 20
692 19
693 26
694 23
695 19
696 26
697 17
698 22
699 18
700 17
701 15
702 24
704 33
705 24
707 33
708 17
709 22
710 20
711 19
712 26
713 23
714 19
715 26
716 23
717 17
718 22
719 20
720 18
721 17
722 15
723 24
725 33
727 33
728 17
729 22
730 20
731 19
732 26
733 23
734 19
735 26
736 23
737 17
738 22
739 20
740 17
741 20
742 29
743 25
744 20
745 29
746 25
747 16
748 19
749 18
750 18
751 23
752 23
753 16
754 19
755 18
756 24
758 33
759 24
761 33
762 17
763 22
764 20
765 19
766 26
767 23
768 19
769 26
770 17
771 22
772 20
773 18
774 17
775 32
782 34
783 39
784 37
785 36
788 36
791 34
792 39
793 37
794 35
795 34
796 32
803 34
804 39
805 37
806 36
809 36
812 34
813 39
814 37
815 35
816 34
817 37
820 37
823 33
824 36
825 35
826 35
828 38
829 35
831 38
832 33
833 36
834 35
835 32
842 34
843 39
844 37
845 36
848 36
851 34
852 39
853 37
854 35
855 34
856 32
863 34
864 39
865 37
866 36
869 36
872 34
873 39
874 37
875 35
876 34
877 32
884 34
885 39
886 37
887 36
890 36
893 39
894 37
895 35
896 34
897 37
900 37
903 33
904 36
905 35
906 35
908 38
909 35
911 38
912 33
913 36
914 35
915 32
922 34
923 39
924 37
925 36
928 36
931 34
932 39
933 37
934 34
935 21
936 24
937 33
940 33
943 26
944 31
945 29
946 28
947 35
948 32
949 28
950 35
951 32
952 26
953 31
954 29
955 27
956 24
957 33
960 33
963 26
964 31
965 29
966 28
967 32
968 28
969 32
970 26
971 31
972 29
973 27
974 26
975 29
976 34
977 29
978 38
979 34
980 25
981 28
982 27
983 27
984 32
985 30
986 27
987 32
988 30
989 28
990 27
991 24
992 33
994 33
997 26
998 31
999 29
1000 28
1001 35
1002 32
1003 28
1004 35
1005 32
1006 26
1007 31
1008 29
1009 27
1010 26
1011 24
1012 33
1015 33
1018 26
1019 31
1020 29
1021 28
1022 35
1023 32
1024 28
1025 35
1026 32
1027 26
1028 31
1029 29
1030 27
1031 26
1032 24
1033 33
1036 33
1039 26
1040 31
1041 29
1042 28
1043 35
1044 32
1045 28
1046 35
1047 32
1048 26
1049 31
1050 27
1051 26
1052 29
1053 38
1054 34
1055 29
1056 38
1057 34
1058 25
1059 28
1060 27
1061 27
1062 32
1063 27
1064 32
1065 30
1066 25
1067 28
1068 27
1069 24
1070 33
1073 33
1076 26
1077 31
1078 29
1079 28
1080 35
1081 32
1082 28
1083 35
1084 32
1085 26
1086 31
1087 27
1088 26
1089 5
1090 8
1091 17
1092 34
1093 26
1094 17
1095 34
1096 26
1097 10
1098 15
1099 13
1100 12
1101 19
1102 16
1103 12
1104 19
1105 16
1106 10
1107 15
1108 13
1109 11
1110 10
1111 8
1112 17
1113 34
1114 26
1115 17
1116 34
1117 26
1118 10
1119 15
1120 13
1121 12
1122 19
1123 16
1124 12
1125 19
1126 16
1127 10
1128 15
1129 13
1130 11
1131 10
1132 13
1133 22
1134 18
1135 13
1136 18
1137 9
1138 12
1139 11
1140 11
1141 16
1142 14
1143 11
1144 14
1145 9
1146 12
1147 11
1148 8
1149 17
1150 34
1151 17
1152 34
1153 26
1154 10
1155 15
1156 13
1157 12
1158 19
1159 16
1160 12
1161 19
1162 16
1163 10
1164 15
1165 13
1166 11
1167 10
1168 8
1169 17
1170 34
1171 26
1172 17
1173 34
1174 26
1175 10
1176 15
1177 13
1178 12
1179 19
1180 16
1181 19
1182 10
1183 15
1184 13
1185 11
1186 10
1187 8
1188 17
1189 34
1190 26
1191 17
1192 34
1193 26
1194 10
1195 15
1196 13
1197 12
1198 19
1199 16
1200 12
1201 19
1202 16
1203 10
1204 15
1205 13
1206 11
1207 10
1208 13
1209 22
1210 18
1211 13
1212 22
1213 18
1214 12
1215 11
1216 11
1217 16
1218 14
1219 11
1220 16
1221 14
1222 9
1223 12
1224 8
1225 17
1226 26
1227 17
1228 34
1229 26
1230 10
1231 15
1232 13
1233 12
1234 19
1235 16
1236 12
1237 16
1238 10
1239 13
1240 11
1241 10
1242 10
1243 13
1244 22
1245 39
1246 31
1247 22
1248 39
1249 31
1250 15
1251 20
1252 18
1253 17
1254 24
1255 21
1256 17
1257 24
1258 21
1259 15
1260 20
1261 18
1262 16
1263 15
1264 13
1265 22
1266 39
1267 31
1268 22
1269 39
1270 31
1271 15
1272 20
1273 18
1274 17
1275 24
1276 21
1277 17
1278 21
1279 15
1280 20
1281 18
1282 16
1283 15
1284 18
1285 27
1286 23
1287 18
1288 27
1289 23
1290 14
1291 17
1292 16
1293 16
1294 21
1295 19
1296 16
1297 21
1298 19
1299 14
1300 17
1301 16
1302 13
1303 22
1304 39
1305 31
1306 22
1307 39
1308 31
1309 15
1310 20
1311 18
1312 17
1313 24
1314 21
1315 17
1316 24
1317 21
1318 15
1319 20
1320 18
1321 16
1322 15
1323 13
1324 22
1325 39
1326 31
1327 22
1328 39
1329 31
1330 15
1331 20
1332 18
1333 17
1334 24
1335 21
1336 17
1337 24
1338 21
1339 15
1340 20
1341 18
1342 16
1343 15
1344 13
1345 39
1346 31
1347 22
1348 39
1349 31
1350 15
1351 20
1352 18
1353 17
1354 24
1355 21
1356 17
1357 24
1358 21
1359 15
1360 20
1361 18
1362 16
1363 15
1364 18
1365 27
1366 23
1367 18
1368 27
1369 14
1370 17
1371 16
1372 16
1373 21
1374 19
1375 16
1376 21
1377 19
1378 14
1379 17
1380 16
1381 13
1382 22
1383 39
1384 22
1385 39
1386 31
1387 15
1388 20
1389 18
1390 17
1391 24
1392 21
1393 17
1394 24
1395 21
1396 15
1397 20
1398 18
1399 16
1400 15
1401 8
1402 11
1403 20
1404 37
1405 29
1406 20
1407 37
1408 29
1409 13
1410 18
1411 16
1412 15
1413 22
1414 15
1415 19
1416 13
1417 18
1418 16
1419 14
1420 13
1421 11
1422 20
1423 37
1424 29
1425 20
1426 37
1427 29
1428 13
1429 18
1430 16
1431 15
1432 22
1433 19
1434 15
1435 22
1436 19
1437 13
1438 18
1439 16
1440 14
1441 13
1442 16
1443 25
1444 21
1445 16
1446 25
1447 21
1448 12
1449 15
1450 14
1451 14
1452 19
1453 17
1454 14
1455 19
1456 17
1457 12
1458 15
1459 14
1460 11
1461 20
1462 29
1463 20
1464 37
1465 29
1466 13
1467 18
1468 16
1469 15
1470 22
1471 19
1472 15
1473 22
1474 19
1475 18
1476 16
1477 14
1478 13
1479 11
1480 20
1481 37
1482 29
1483 20
1484 37
1485 29
1486 13
1487 18
1488 16
1489 15
1490 22
1491 19
1492 15
1493 19
1494 13
1495 18
1496 16
1497 14
1498 13
1499 11
1500 20
1501 37
1502 29
1503 20
1504 37
1505 29
1506 13
1507 18
1508 16
1509 15
1510 22
1511 19
1512 15
1513 22
1514 19
1515 13
1516 18
1517 16
1518 14
1519 13
1520 16
1521 25
1522 21
1523 16
1524 25
1525 21
1526 12
1527 15
1528 14
1529 14
1530 19
1531 14
1532 19
1533 17
1534 12
1535 15
1536 14
1537 11
1538 20
1539 37
1540 29
1541 20
1542 37
1543 29
1544 13
1545 18
1546 16
1547 15
1548 22
1549 19
1550 15
1551 22
1552 19
1553 13
1554 18
1555 16
1556 14
1557 13
1558 7
1559 10
1560 19
1561 36
1562 28
1563 19
1564 36
1565 28
1566 12
1567 17
1568 15
1569 14
1570 21
1571 18
1572 14
1573 21
1574 18
1575 12
1576 17
1577 15
1578 13
1579 12
1580 10
1581 19
1582 36
1583 28
1584 36
1585 28
1586 12
1587 17
1588 15
1589 14
1590 21
1591 18
1592 14
1593 21
1594 18
1595 12
1596 13
1597 12
1598 15
1599 24
1600 20
1601 15
1602 24
1603 20
1604 11
1605 14
1606 13
1607 13
1608 18
1609 16
1610 13
1611 18
1612 16
1613 11
1614 14
1615 13
1616 10
1617 36
1618 28
1619 19
1620 36
1621 28
1622 12
1623 17
1624 15
1625 14
1626 21
1627 18
1628 14
1629 21
1630 18
1631 12
1632 17
1633 15
1634 13
1635 12
1636 10
1637 19
1638 36
1639 28
1640 19
1641 36
1642 28
1643 12
1644 17
1645 15
1646 14
1647 21
1648 18
1649 14
1650 21
1651 18
1652 12
1653 17
1654 15
1655 13
1656 12
1657 19
1658 36
1659 28
1660 19
1661 36
1662 28
1663 12
1664 17
1665 14
1666 21
1667 18
1668 14
1669 21
1670 12
1671 17
1672 15
1673 13
1674 12
1675 15
1676 24
1677 20
1678 15
1679 24
1680 20
1681 11
1682 14
1683 13
1684 13
1685 18
1686 16
1687 13
1688 18
1689 16
1690 11
1691 14
1692 13
1693 10
1694 19
1695 36
1696 28
1697 19
1698 36
1699 28
1700 12
1701 17
1702 15
1703 14
1704 21
1705 18
1706 14
1707 21
1708 18
1709 12
1710 15
1711 13
1712 12
1713 14
1714 17
1715 26
1717 35
1718 26
1720 35
1721 19
1722 24
1723 22
1724 21
1725 28
1726 25
1727 21
1728 28
1729 25
1730 24
1731 22
1732 20
1733 19
1734 17
1735 26
1737 35
1738 26
1740 35
1741 19
1742 24
1743 22
1744 21
1745 28
1746 25
1747 21
1748 28
1749 25
1750 19
1751 24
1752 22
1753 20
1754 19
1755 22
1756 31
1757 27
1758 22
1759 31
1760 27
1761 18
1762 21
1763 20
1764 20
1765 25
1766 23
1767 20
1768 25
1769 23
1770 18
1771 21
1772 20
1773 17
1774 26
1776 35
1777 26
1779 35
1780 19
1781 24
1782 22
1783 21
1784 28
1785 25
1786 21
1787 28
1788 25
1789 19
1790 24
1791 22
1792 20
1793 19
1794 17
1795 26
1797 35
1798 26
1800 35
1801 24
1802 22
1803 21
1804 28
1805 25
1806 21
1807 28
1808 19
1809 24
1810 20
1811 19
1812 17
1813 26
1815 35
1816 26
1818 35
1819 19
1820 24
1821 22
1822 21
1823 28
1824 25
1825 21
1826 28
1827 25
1828 19
1829 24
1830 22
1831 20
1832 22
1833 31
1834 27
1835 22
1836 31
1837 27
1838 18
1839 21
1840 20
1841 20
1842 23
1843 20
1844 25
1845 23
1846 18
1847 21
1848 20
1849 17
1850 26
1852 35
1853 26
1855 35
1856 19
1857 22
1858 21
1859 28
1860 25
1861 21
1862 28
1863 19
1864 24
1865 22
1866 20
1867 19
1868 11
1869 14
1870 23
1872 32
1873 23
1875 32
1876 16
1877 19
1878 18
1879 25
1880 22
1881 18
1882 25
1883 22
1884 16
1885 21
1886 19
1887 17
1888 14
1889 23
1890 32
1891 23
1893 32
1894 16
1895 21
1896 19
1897 18
1898 25
1899 22
1900 18
1901 25
1902 16
1903 21
1904 19
1905 17
1906 16
1907 19
1908 28
1909 24
1910 19
1911 28
1912 24
1913 18
1914 17
1915 17
1916 22
1917 20
1918 17
1919 22
1920 20
1921 15
1922 18
1923 17
1924 14
1925 23
1927 32
1928 23
1930 32
1931 21
1932 19
1933 18
1934 25
1935 22
1936 18
1937 25
1938 22
1939 16
1940 19
1941 17
1942 16
1943 14
1944 23
1946 32
1947 23
1949 32
1950 16
1951 21
1952 19
1953 18
1954 25
1955 22
1956 18
1957 25
1958 22
1959 16
1960 21
1961 19
1962 17
1963 16
1964 14
1965 23
1967 32
1968 23
1970 16
1971 21
1972 19
1973 18
1974 25
1975 22
1976 18
1977 25
1978 22
1979 16
1980 21
1981 19
1982 17
1983 16
1984 19
1985 28
1986 24
1987 19
1988 28
1989 24
1990 15
1991 18
1992 17
1993 17
1994 22
1995 20
1996 17
1997 22
1998 20
1999 15
2000 18
2001 17
2002 14
2003 23
2005 32
2006 23
2008 32
2009 16
2010 21
2011 19
2012 18
2013 25
2014 18
2015 25
2016 22
2017 16
2018 21
2019 19
2020 17
2021 16
2022 7
2023 10
2024 19
2025 36
2026 28
2027 19
2028 36
2029 28
2030 12
2031 17
2032 15
2033 14
2034 21
2035 18
2036 14
2037 21
2038 18
2039 12
2040 17
2041 15
2042 13
2043 12
2044 10
2045 19
2046 36
2047 28
2048 19
2049 36
2050 28
2051 12
2052 15
2053 14
2054 21
2055 18
2056 14
2057 21
2058 18
2059 12
2060 17
2061 15
2062 13
2063 12
2064 15
2065 24
2066 15
2067 24
2068 20
2069 11
2070 14
2071 13
2072 18
2073 16
2074 13
2075 18
2076 16
2077 11
2078 14
2079 13
2080 10
2081 19
2082 36
2083 28
2084 19
2085 36
2086 28
2087 12
2088 17
2089 15
2090 14
2091 18
2092 14
2093 21
2094 18
2095 12
2096 17
2097 15
2098 13
2099 12
2100 10
2101 19
2102 36
2103 28
2104 19
2105 36
2106 28
2107 12
2108 17
2109 15
2110 14
2111 21
2112 18
2113 14
2114 21
2115 18
2116 12
2117 17
2118 15
2119 13
2120 12
2121 10
2122 19
2123 36
2124 28
2125 19
2126 36
2127 28
2128 12
2129 17
2130 15
2131 14
2132 21
2133 18
2134 14
2135 21
2136 18
2137 12
2138 17
2139 15
2140 13
2141 12
2142 15
2143 24
2144 20
2145 15
2146 24
2147 20
2148 11
2149 14
2150 13
2151 13
2152 18
2153 16
2154 13
2155 18
2156 16
2157 11
2158 14
2159 13
2160 10
2161 19
2162 36
2163 28
2164 19
2165 36
2166 28
2167 12
2168 17
2169 15
2170 14
2171 21
2172 18
2173 14
2174 21
2175 18
2176 12
2177 17
2178 15
2179 13
2180 12
2181 14
2182 17
2183 26
2185 35
2186 26
2188 35
2189 19
2190 24
2191 22
2192 21
2193 28
2194 25
2195 21
2196 28
2197 25
2198 19
2199 24
2200 22
2201 20
2202 19
2203 17
2204 26
2206 35
2207 26
2209 19
2210 24
2211 22
2212 21
2213 28
2214 25
2215 21
2216 28
2217 25
2218 19
2219 22
2220 20
2221 19
2222 22
2223 31
2224 27
2225 22
2226 31
2227 27
2228 18
2229 21
2230 20
2231 20
2232 25
2233 23
2234 20
2235 25
2236 23
2237 18
2238 21
2239 20
2240 17
2241 26
2243 35
2244 26
2246 35
2247 19
2248 24
2249 22
2250 21
2251 28
2252 25
2253 21
2254 28
2255 25
2256 19
2257 24
2258 22
2259 20
2260 19
2261 17
2262 26
2264 35
2265 26
2267 35
2268 19
2269 24
2270 22
2271 21
2272 28
2273 25
2274 21
2275 28
2276 25
2277 19
2278 24
2279 22
2280 20
2281 19
2282 17
2283 26
2285 26
2287 35
2288 24
2289 22
2290 21
2291 28
2292 25
2293 28
2294 25
2295 19
2296 24
2297 22
2298 20
2299 19
2300 22
2301 31
2302 27
2303 22
2304 31
2305 27
2306 18
2307 21
2308 20
2309 20
2310 25
2311 23
2312 20
2313 25
2314 23
2315 18
2316 21
2317 20
2318 26
2320 35
2321 26
2323 35
2324 19
2325 24
2326 22
2327 21
2328 28
2329 25
2330 21
2331 28
2332 25
2333 19
2334 24
2335 22
2336 20
2337 19
2338 11
2339 14
2340 23
2342 32
2343 23
2345 32
2346 16
2347 21
2348 19
2349 18
2350 22
2351 18
2352 25
2353 22
2354 16
2355 21
2356 19
2357 17
2358 16
2359 14
2360 23
2362 32
2363 23
2365 32
2366 16
2367 21
2368 19
2369 18
2370 25
2371 22
2372 18
2373 25
2374 22
2375 16
2376 21
2377 19
2378 17
2379 16
2380 19
2381 28
2382 24
2383 19
2384 28
2385 24
2386 15
2387 18
2388 17
2389 17
2390 22
2391 20
2392 17
2393 22
2394 20
2395 15
2396 18
2397 17
2398 14
2399 23
2401 32
2402 23
2404 32
2405 16
2406 21
2407 19
2408 18
2409 25
2410 22
2411 25
2412 22
2413 16
2414 21
2415 19
2416 17
2417 16
2418 14
2419 23
2421 32
2422 23
2424 32
2425 16
2426 21
2427 19
2428 18
2429 25
2430 22
2431 18
2432 25
2433 22
2434 16
2435 21
2436 19
2437 17
2438 16
2439 14
2440 23
2442 32
2443 23
2445 32
2446 16
2447 21
2448 19
2449 18
2450 25
2451 22
2452 18
2453 25
2454 22
2455 16
2456 21
2457 19
2458 17
2459 16
2460 19
2461 28
2462 24
2463 19
2464 28
2465 24
2466 15
2467 18
2468 17
2469 17
2470 22
2471 20
2472 17
2473 22
2474 20
2475 15
2476 18
2477 17
2478 14
2479 23
2481 32
2482 23
2484 32
2485 16
2486 21
2487 19
2488 18
2489 25
2490 22
2491 18
2492 25
2493 22
2494 16
2495 21
2496 19
2497 17
2498 16
2499 5
2500 8
2501 17
2502 34
2503 26
2504 34
2505 26
2506 10
2507 15
2508 13
2509 12
2510 19
2511 16
2512 12
2513 19
2514 16
2515 10
2516 15
2517 13
2518 11
2519 10
2520 8
2521 17
2522 34
2523 26
2524 17
2525 34
2526 26
2527 10
2528 15
2529 13
2530 12
2531 19
2532 16
2533 12
2534 19
2535 16
2536 10
2537 15
2538 13
2539 11
2540 10
2541 13
2542 18
2543 13
2544 22
2545 18
2546 9
2547 12
2548 11
2549 11
2550 16
2551 14
2552 11
2553 16
2554 14
2555 9
2556 12
2557 11
2558 8
2559 17
2560 34
2561 26
2562 17
2563 34
2564 26
2565 10
2566 15
2567 13
2568 12
2569 19
2570 16
2571 12
2572 19
2573 16
2574 10
2575 15
2576 13
2577 11
2578 10
2579 8
2580 17
2581 34
2582 26
2583 17
2584 34
2585 26
2586 10
2587 13
2588 12
2589 19
2590 16
2591 12
2592 19
2593 16
2594 10
2595 15
2596 13
2597 11
2598 10
2599 8
2600 17
2601 34
2602 26
2603 17
2604 34
2605 26
2606 10
2607 13
2608 12
2609 19
2610 16
2611 12
2612 19
2613 16
2614 10
2615 15
2616 13
2617 11
2618 10
2619 13
2620 22
2621 18
2622 13
2623 22
2624 18
2625 9
2626 12
2627 11
2628 11
2629 16
2630 11
2631 16
2632 14
2633 9
2634 11
2635 8
2636 17
2637 34
2638 26
2639 17
2640 26
2641 10
2642 15
2643 13
2644 12
2645 19
2646 16
2647 12
2648 19
2649 16
2650 10
2651 15
2652 13
2653 11
2654 10
2655 10
2656 13
2657 22
2658 39
2659 31
2660 22
2661 39
2662 31
2663 15
2664 20
2665 18
2666 17
2667 24
2668 21
2669 17
2670 24
2671 21
2672 20
2673 18
2674 16
2675 15
2676 13
2677 22
2678 39
2679 31
2680 22
2681 39
2682 31
2683 15
2684 20
2685 18
2686 24
2687 21
2688 17
2689 24
2690 21
2691 15
2692 20
2693 18
2694 16
2695 15
2696 18
2697 27
2698 23
2699 18
2700 27
2701 23
2702 14
2703 17
2704 16
2705 16
2706 19
2707 16
2708 21
2709 19
2710 14
2711 17
2712 16
2713 13
2714 22
2715 39
2716 31
2717 22
2718 39
2719 31
2720 15
2721 20
2722 18
2723 17
2724 24
2725 21
2726 17
2727 24
2728 21
2729 15
2730 20
2731 18
2732 16
2733 15
2734 13
2735 22
2736 39
2737 31
2738 22
2739 39
2740 31
2741 15
2742 20
2743 18
2744 17
2745 24
2746 21
2747 17
2748 24
2749 21
2750 15
2751 20
2752 18
2753 16
2754 13
2755 22
2756 39
2757 22
2758 39
2759 31
2760 15
2761 20
2762 18
2763 17
2764 24
2765 21
2766 17
2767 24
2768 21
2769 15
2770 20
2771 18
2772 16
2773 15
2774 18
2775 27
2776 23
2777 18
2778 27
2779 23
2780 17
2781 16
2782 16
2783 19
2784 16
2785 21
2786 19
2787 14
2788 17
2789 16
2790 13
2791 22
2792 39
2793 31
2794 22
2795 39
2796 31
2797 15
2798 20
2799 18
2800 17
2801 24
2802 17
2803 24
2804 21
2805 15
2806 20
2807 18
2808 16
2809 15
2810 8
2811 11
2812 20
2813 37
2814 29
2815 20
2816 37
2817 13
2818 18
2819 16
2820 15
2821 22
2822 19
2823 15
2824 22
2825 19
2826 13
2827 18
2828 14
2829 13
2830 11
2831 20
2832 37
2833 29
2834 20
2835 37
2836 29
2837 13
2838 18
2839 16
2840 15
2841 22
2842 19
2843 15
2844 22
2845 19
2846 13
2847 18
2848 16
2849 14
2850 13
2851 16
2852 25
2853 21
2854 16
2855 25
2856 12
2857 15
2858 14
2859 14
2860 19
2861 17
2862 14
2863 19
2864 17
2865 12
2866 15
2867 11
2868 20
2869 20
2870 37
2871 29
2872 13
2873 18
2874 16
2875 15
2876 22
2877 19
2878 15
2879 22
2880 19
2881 13
2882 18
2883 16
2884 14
2885 13
2886 11
2887 20
2888 37
2889 29
2890 20
2891 37
2892 29
2893 13
2894 18
2895 16
2896 15
2897 22
2898 19
2899 15
2900 22
2901 19
2902 13
2903 18
2904 16
2905 14
2906 13
2907 11
2908 20
2909 37
2910 20
2911 37
2912 29
2913 13
2914 18
2915 16
2916 15
2917 22
2918 19
2919 15
2920 22
2921 19
2922 13
2923 18
2924 16
2925 14
2926 13
2927 16
2928 25
2929 21
2930 16
2931 25
2932 21
2933 12
2934 15
2935 14
2936 14
2937 19
2938 17
2939 12
2940 15
2941 14
2942 11
2943 20
2944 37
2945 29
2946 20
2947 37
2948 29
2949 13
2950 16
2951 15
2952 22
2953 19
2954 15
2955 22
2956 19
2957 13
2958 18
2959 16
2960 14
2961 13
2962 6
2963 9
2964 18
2965 35
2966 27
2967 18
2968 35
2969 27
2970 11
2971 16
2972 14
2973 13
2974 20
2975 17
2976 13
2977 20
2978 17
2979 11
2980 16
2981 14
2982 12
2983 11
2984 9
2985 18
2986 35
2987 27
2988 18
2989 35
2990 27
2991 16
2992 14
2993 13
2994 20
2995 17
2996 13
2997 20
2998 17
2999 11
3000 16
3001 12
3002 11
3003 14
3004 23
3005 19
3006 14
3007 23
3008 19
3009 10
3010 13
3011 12
3012 12
3013 17
3014 15
3015 12
3016 17
3017 10
3018 13
3019 12
3020 9
3021 18
3022 35
3023 27
3024 18
3025 35
3026 27
3027 11
3028 16
3029 14
3030 13
3031 20
3032 17
3033 13
3034 17
3035 11
3036 16
3037 14
3038 12
3039 11
3040 9
3041 18
3042 35
3043 27
3044 35
3045 27
3046 11
3047 16
3048 14
3049 13
3050 20
3051 17
3052 13
3053 20
3054 17
3055 11
3056 16
3057 14
3058 12
3059 11
3060 9
3061 18
3062 35
3063 27
3064 18
3065 35
3066 27
3067 11
3068 16
3069 14
3070 13
3071 20
3072 17
3073 13
3074 20
3075 17
3076 11
3077 16
3078 14
3079 12
3080 11
3081 14
3082 23
3083 19
3084 14
3085 23
3086 19
3087 10
3088 13
3089 12
3090 12
3091 17
3092 15
3093 12
3094 17
3095 15
3096 10
3097 13
3098 12
3099 9
3100 18
3101 35
3102 27
3103 35
3104 27
3105 11
3106 16
3107 13
3108 20
3109 17
3110 13
3111 20
3112 17
3113 16
3114 14
3115 12
3116 11
3117 5
3118 8
3119 17
3120 34
3121 26
3122 34
3123 26
3124 10
3125 15
3126 13
3127 12
3128 19
3129 16
3130 12
3131 19
3132 16
3133 10
3134 15
3135 13
3136 11
3137 10
3138 8
3139 17
3140 34
3141 26
3142 17
3143 34
3144 26
3145 10
3146 13
3147 12
3148 19
3149 12
3150 19
3151 16
3152 10
3153 15
3154 13
3155 11
3156 10
3157 13
3158 22
3159 18
3160 13
3161 22
3162 18
3163 9
3164 12
3165 11
3166 11
3167 16
3168 14
3169 11
3170 16
3171 14
3172 9
3173 12
3174 11
3175 8
3176 17
3177 26
3178 17
3179 34
3180 26
3181 10
3182 15
3183 13
3184 12
3185 19
3186 16
3187 12
3188 19
3189 16
3190 10
3191 15
3192 13
3193 11
3194 10
3195 8
3196 17
3197 34
3198 26
3199 17
3200 34
3201 26
3202 10
3203 15
3204 13
3205 12
3206 19
3207 16
3208 12
3209 19
3210 16
3211 10
3212 15
3213 13
3214 11
3215 10
3216 8
3217 17
3218 34
3219 26
3220 17
3221 34
3222 26
3223 10
3224 15
3225 13
3226 19
3227 16
3228 12
3229 19
3230 16
3231 10
3232 15
3233 13
3234 11
3235 10
3236 13
3237 18
3238 13
3239 22
3240 18
3241 9
3242 11
3243 11
3244 16
3245 14
3246 11
3247 16
3248 14
3249 9
3250 12
3251 11
3252 8
3253 17
3254 34
3255 26
3256 17
3257 34
3258 26
3259 10
3260 15
3261 13
3262 12
3263 19
3264 16
3265 12
3266 19
3267 16
3268 10
3269 15
3270 11
3271 10
3272 3
3273 15
3274 24
3275 15
3276 32
3277 24
3278 13
3279 11
3280 10
3281 17
3282 14
3283 10
3284 14
3285 8
3286 13
3287 11
3288 9
3289 8
3290 6
3291 15
3292 32
3293 24
3294 15
3295 32
3296 24
3297 8
3298 13
3299 11
3300 10
3301 17
3302 14
3303 17
3304 14
3305 8
3306 13
3307 11
3308 9
3309 8
3310 11
3311 20
3312 16
3313 11
3314 20
3315 16
3316 7
3317 10
3318 9
3319 9
3320 14
3321 12
3322 9
3323 14
3324 12
3325 7
3326 10
3327 9
3328 6
3329 15
3330 32
3331 15
3332 32
3333 24
3334 8
3335 13
3336 11
3337 10
3338 17
3339 14
3340 10
3341 17
3342 14
3343 8
3344 13
3345 11
3346 9
3347 8
3348 6
3349 15
3350 32
3351 24
3352 15
3353 32
3354 24
3355 8
3356 13
3357 11
3358 10
3359 17
3360 14
3361 10
3362 17
3363 14
3364 8
3365 13
3366 11
3367 9
3368 8
3369 6
3370 15
3371 32
3372 24
3373 15
3374 32
3375 24
3376 13
3377 11
3378 17
3379 14
3380 10
3381 17
3382 14
3383 8
3384 13
3385 11
3386 9
3387 8
3388 11
3389 20
3390 16
3391 11
3392 20
3393 16
3394 7
3395 10
3396 9
3397 9
3398 14
3399 12
3400 9
3401 14
3402 12
3403 7
3404 10
3405 9
3406 6
3407 15
3408 32
3409 24
3410 15
3411 32
3412 24
3413 8
3414 13
3415 11
3416 10
3417 17
3418 14
3419 10
3420 17
3421 14
3422 8
3423 13
3424 11
3425 9
3426 8
3427 12
3428 15
3429 24
3431 33
3433 33
3434 17
3435 22
3436 20
3437 19
3438 26
3439 23
3440 19
3441 26
3442 23
3443 22
3444 18
3445 17
3446 15
3447 24
3449 33
3450 24
3452 33
3453 17
3454 22
3455 20
3456 19
3457 26
3458 23
3459 19
3460 26
3461 23
3462 17
3463 22
3464 20
3465 18
3466 17
3467 20
3468 29
3469 25
3470 20
3471 29
3472 25
3473 16
3474 19
3475 18
3476 18
3477 23
3478 21
3479 18
3480 23
3481 16
3482 19
3483 18
3484 15
3485 24
3487 33
3488 24
3490 33
3491 17
3492 22
3493 20
3494 19
3495 26
3496 23
3497 19
3498 23
3499 17
3500 20
3501 18
3502 17
3503 15
3504 24
3506 33
3507 24
3509 33
3510 17
3511 22
3512 20
3513 19
3514 26
3515 23
3516 19
3517 26
3518 23
3519 17
3520 22
3521 20
3522 18
3523 17
3524 15
3525 24
3527 33
3528 24
3530 33
3531 17
3532 20
3533 26
3534 23
3535 19
3536 26
3537 23
3538 22
3539 20
3540 18
3541 17
3542 20
3543 29
3544 25
3545 20
3546 29
3547 25
3548 19
3549 18
3550 18
3551 21
3552 18
3553 23
3554 21
3555 16
3556 19
3557 18
3558 15
3560 33
3561 24
3563 33
3564 17
3565 22
3566 20
3567 19
3568 26
3569 23
3570 19
3571 26
3572 23
3573 17
3574 22
3575 18
3576 17
3577 32
3584 34
3585 39
3586 37
3587 36
3590 36
3593 34
3594 39
3595 37
3596 35
3597 34
3598 32
3604 34
3605 39
3606 37
3607 36
3610 36
3613 34
3614 39
3615 37
3616 35
3617 34
3618 37
3621 37
3624 33
3625 36
3626 35
3627 35
3629 38
3630 35
3632 38
3633 33
3634 32
3641 34
3642 39
3643 36
3646 36
3649 34
3650 39
3651 37
3652 35
3653 34
3654 32
3661 34
3662 39
3663 37
3664 36
3667 36
3670 34
3671 39
3672 37
3673 35
3674 34
3675 32
3681 34
3682 39
3683 37
3684 36
3687 36
3690 34
3691 39
3692 37
3693 35
3694 34
3695 37
3698 37
3701 33
3702 36
3703 35
3704 35
3706 38
3707 35
3709 38
3710 33
3711 35
3712 32
3719 34
3720 39
3721 37
3722 36
3725 36
3728 34
3729 39
3730 37
3731 35
3732 34
3733 21
3734 24
3735 33
3738 33
3741 26
3742 31
3743 29
3744 28
3745 35
3746 32
3747 28
3748 35
3749 32
3750 26
3751 31
3752 29
3753 27
3754 26
3755 33
3758 33
3761 26
3762 31
3763 29
3764 28
3765 35
3766 32
3767 28
3768 35
3769 32
3770 31
3771 29
3772 27
3773 26
3774 29
3775 38
3776 34
3777 29
3778 38
3779 34
3780 25
3781 28
3782 27
3783 27
3784 32
3785 30
3786 27
3787 32
3788 30
3789 25
3790 28
3791 27
3792 24
3793 33
3796 33
3799 26
3800 31
3801 29
3802 28
3803 35
3804 32
3805 28
3806 35
3807 32
3808 26
3809 31
3810 29
3811 27
3812 26
3813 24
3814 33
3817 33
3819 26
3820 31
3821 29
3822 28
3823 32
3824 28
3825 35
3826 32
3827 26
3828 31
3829 29
3830 27
3831 26
3832 24
3833 33
3836 33
3839 26
3840 31
3841 29
3842 28
3843 35
3844 32
3845 28
3846 35
3847 32
3848 26
3849 31
3850 29
3851 27
3852 26
3853 29
3854 38
3855 34
3856 29
3857 38
3858 34
3859 25
3860 28
3861 27
3862 27
3863 32
3864 30
3865 27
3866 32
3867 30
3868 25
3869 28
3870 27
3871 24
3872 33
3874 33
3877 26
3878 31
3879 29
3880 28
3881 35
3882 32
3883 28
3884 35
3885 32
3886 26
3887 31
3888 29
3889 27
3890 26
3891 12
3892 15
3893 24
3895 33
3896 24
3898 33
3899 17
3900 22
3901 20
3902 19
3903 26
3904 23
3905 19
3906 26
3907 23
3908 17
3909 22
3910 20
3911 18
3912 17
3913 15
3914 24
3915 33
3916 24
3918 33
3919 17
3920 22
3921 20
3922 19
3923 26
3924 23
3925 19
3926 26
3927 23
3928 17
3929 22
3930 20
3931 18
3932 17
3933 20
3934 29
3935 20
3936 29
3937 25
3938 16
3939 19
3940 18
3941 18
3942 23
3943 21
3944 18
3945 23
3946 21
3947 16
3948 19
3949 18
3950 15
3951 24
3952 33
3953 24
3955 33
3956 17
3957 20
3958 19
3959 26
3960 23
3961 19
3962 26
3963 23
3964 17
3965 22
3966 20
3967 18
3968 17
3969 15
3970 24
3972 33
3973 24
3975 33
3976 17
3977 22
3978 20
3979 19
3980 23
3981 19
3982 26
3983 23
3984 17
3985 22
3986 20
3987 17
3988 24
3990 33
3991 24
3993 33
3994 17
3995 20
3996 19
3997 26
3998 23
3999 19
4000 26
4001 23
4002 17
4003 22
4004 20
4005 18
4006 17
4007 20
4008 29
4009 25
4010 20
4011 29
4012 25
4013 19
4014 18
4015 18
4016 23
4017 21
4018 18
4019 23
4020 21
4021 16
4022 19
4023 18
4024 15
4025 24
4027 33
4028 24
4030 33
4031 17
4032 22
4033 20
4034 19
4035 26
4036 23
4037 19
4038 26
4039 23
4040 17
4041 22
4042 20
4043 18
4044 17
4045 29
4046 32
4053 34
4054 39
4055 37
4056 36
4059 36
4062 34
4063 39
4064 37
4065 35
4066 34
4067 32
4074 34
4075 39
4076 37
4077 36
4079 36
4082 34
4083 39
4084 37
4085 35
4086 37
4089 37
4092 33
4093 36
4094 35
4095 35
4096 38
4097 35
4099 38
4100 36
4101 35
4102 32
4109 34
4110 39
4111 37
4112 36
4114 36
4117 34
4118 39
4119 37
4120 35
4121 34
4122 32
4129 34
4130 39
4131 37
4132 36
4134 36
4137 34
4138 39
4139 37
4140 35
4141 34
4142 32
4149 34
4150 39
4151 36
4154 36
4157 39
4158 37
4159 35
4160 37
4163 37
4166 33
4167 36
4168 35
4170 38
4171 35
4173 38
4174 33
4175 36
4176 35
4177 32
4183 34
4184 39
4185 37
4186 36
4189 36
4192 34
4193 39
4194 37
4195 35
4196 34
4197 21
4198 24
4199 33
4202 33
4205 26
4206 31
4207 29
4208 28
4209 35
4210 32
4211 28
4212 35
4213 32
4214 31
4215 29
4216 27
4217 26
4218 24
4219 33
4222 33
4225 26
4226 31
4227 29
4228 28
4229 35
4230 32
4231 28
4232 35
4233 32
4234 26
4235 31
4236 29
4237 27
4238 26
4239 29
4240 38
4241 34
4242 29
4243 38
4244 34
4245 25
4246 28
4247 27
4248 27
4249 32
4250 30
4251 27
4252 32
4253 30
4254 25
4255 28
4256 27
4257 24
4258 33
4261 33
4264 26
4265 31
4266 29
4267 35
4268 32
4269 28
4270 35
4271 32
4272 26
4273 31
4274 29
4275 27
4276 26
4277 24
4278 33
4281 33
4284 26
4285 29
4286 28
4287 35
4288 32
4289 28
4290 35
4291 32
4292 26
4293 31
4294 29
4295 27
4296 26
4297 24
4298 33
4301 33
4304 26
4305 31
4306 29
4307 28
4308 35
4309 32
4310 28
4311 35
4312 32
4313 26
4314 31
4315 29
4316 27
4317 26
4318 29
4319 38
4320 29
4321 38
4322 34
4323 25
4324 28
4325 27
4326 27
4327 32
4328 30
4329 27
4330 32
4331 30
4332 25
4333 28
4334 27
4335 24
4336 33
4339 33
4342 26
4343 31
4344 29
4345 28
4346 35
4347 32
4348 28
4349 35
4350 32
4351 26
4352 31
4353 29
4354 26
4355 5
4356 8
4357 17
4358 34
4359 26
4360 17
4361 34
4362 26
4363 10
4364 15
4365 13
4366 12
4367 19
4368 16
4369 12
4370 19
4371 16
4372 10
4373 15
4374 13
4375 11
4376 10
4377 8
4378 17
4379 34
4380 26
4381 17
4382 34
4383 26
4384 10
4385 15
4386 13
4387 12
4388 19
4389 16
4390 19
4391 16
4392 10
4393 13
4394 11
4395 10
4396 13
4397 22
4398 18
4399 13
4400 22
4401 18
4402 12
4403 11
4404 11
4405 16
4406 14
4407 11
4408 16
4409 14
4410 9
4411 12
4412 8
4413 17
4414 34
4415 26
4416 17
4417 34
4418 26
4419 10
4420 15
4421 13
4422 12
4423 19
4424 16
4425 12
4426 19
4427 16
4428 10
4429 15
4430 13
4431 11
4432 10
4433 8
4434 17
4435 34
4436 26
4437 17
4438 34
4439 26
4440 10
4441 15
4442 13
4443 12
4444 19
4445 16
4446 12
4447 19
4448 16
4449 10
4450 15
4451 13
4452 11
4453 10
4454 8
4455 17
4456 34
4457 26
4458 17
4459 34
4460 26
4461 10
4462 15
4463 13
4464 12
4465 19
4466 16
4467 19
4468 16
4469 10
4470 15
4471 13
4472 11
4473 10
4474 13
4475 22
4476 13
4477 22
4478 18
4479 9
4480 12
4481 11
4482 11
4483 16
4484 14
4485 11
4486 16
4487 14
4488 9
4489 12
4490 11
4491 8
4492 17
4493 34
4494 26
4495 17
4496 34
4497 26
4498 10
4499 15
4500 13
4501 12
4502 19
4503 16
4504 12
4505 19
4506 16
4507 10
4508 15
4509 13
4510 11
4511 10
4512 10
4513 13
4514 22
4515 39
4516 31
4517 22
4518 39
4519 31
4520 15
4521 20
4522 18
4523 17
4524 24
4525 21
4526 17
4527 24
4528 21
4529 15
4530 20
4531 18
4532 16
4533 15
4534 13
4535 22
4536 39
4537 31
4538 22
4539 39
4540 31
4541 15
4542 20
4543 18
4544 17
4545 24
4546 21
4547 17
4548 24
4549 21
4550 15
4551 20
4552 18
4553 16
4554 15
4555 18
4556 27
4557 23
4558 27
4559 23
4560 14
4561 17
4562 16
4563 16
4564 21
4565 19
4566 16
4567 21
4568 19
4569 14
4570 17
4571 16
4572 13
4573 22
4574 39
4575 31
4576 22
4577 39
4578 31
4579 15
4580 20
4581 18
4582 17
4583 24
4584 21
4585 17
4586 21
4587 15
4588 20
4589 18
4590 16
4591 15
4592 13
4593 22
4594 39
4595 31
4596 22
4597 39
4598 31
4599 15
4600 20
4601 18
4602 17
4603 24
4604 21
4605 17
4606 24
4607 21
4608 15
4609 20
4610 18
4611 16
4612 15
4613 13
4614 22
4615 39
4616 31
4617 22
4618 39
4619 15
4620 20
4621 18
4622 17
4623 24
4624 21
4625 17
4626 24
4627 21
4628 15
4629 20
4630 18
4631 16
4632 15
4633 18
4634 27
4635 23
4636 18
4637 27
4638 23
4639 14
4640 17
4641 16
4642 16
4643 21
4644 19
4645 16
4646 21
4647 19
4648 14
4649 16
4650 13
4651 22
4652 39
4653 31
4654 22
4655 39
4656 31
4657 15
4658 20
4659 18
4660 17
4661 24
4662 21
4663 17
4664 24
4665 21
4666 15
4667 20
4668 18
4669 16
4670 15
4671 8
4672 11
4673 20
4674 37
4675 29
4676 20
4677 37
4678 29
4679 13
4680 18
4681 16
4682 15
4683 22
4684 19
4685 15
4686 22
4687 19
4688 13
4689 18
4690 16
4691 14
4692 13
4693 11
4694 20
4695 37
4696 29
4697 20
4698 37
4699 29
4700 13
4701 18
4702 16
4703 15
4704 22
4705 19
4706 15
4707 22
4708 19
4709 13
4710 18
4711 16
4712 14
4713 13
4714 16
4715 25
4716 21
4717 16
4718 25
4719 21
4720 12
4721 15
4722 14
4723 19
4724 17
4725 14
4726 19
4727 17
4728 12
4729 15
4730 14
4731 11
4732 20
4733 37
4734 29
4735 20
4736 37
4737 29
4738 13
4739 18
4740 16
4741 15
4742 22
4743 19
4744 22
4745 19
4746 13
4747 18
4748 16
4749 13
4750 11
4751 20
4752 37
4753 20
4754 29
4755 13
4756 18
4757 16
4758 15
4759 22
4760 19
4761 15
4762 22
4763 19
4764 13
4765 18
4766 16
4767 14
4768 13
4769 11
4770 20
4771 37
4772 29
4773 20
4774 37
4775 29
4776 13
4777 18
4778 16
4779 22
4780 19
4781 15
4782 22
4783 19
4784 13
4785 18
4786 16
4787 14
4788 13
4789 16
4790 25
4791 21
4792 16
4793 25
4794 21
4795 12
4796 15
4797 14
4798 14
4799 19
4800 17
4801 14
4802 19
4803 17
4804 12
4805 15
4806 14
4807 11
4808 20
4809 37
4810 29
4811 20
4812 37
4813 29
4814 13
4815 18
4816 16
4817 15
4818 22
4819 19
4820 15
4821 22
4822 19
4823 13
4824 18
4825 16
4826 14
4827 13
4828 7
4829 10
4830 19
4831 36
4832 28
4833 19
4834 12
4835 17
4836 15
4837 14
4838 21
4839 18
4840 14
4841 21
4842 18
4843 12
4844 17
4845 15
4846 13
4847 12
4848 10
4849 19
4850 36
4851 28
4852 19
4853 36
4854 28
4855 12
4856 17
4857 15
4858 14
4859 21
4860 18
4861 14
4862 21
4863 18
4864 12
4865 17
4866 15
4867 13
4868 12
4869 15
4870 24
4871 20
4872 15
4873 24
4874 20
4875 11
4876 14
4877 13
4878 13
4879 18
4880 16
4881 13
4882 18
4883 16
4884 14
4885 13
4886 10
4887 19
4888 36
4889 28
4890 19
4891 36
4892 28
4893 12
4894 17
4895 15
4896 14
4897 21
4898 18
4899 14
4900 18
4901 12
4902 17
4903 15
4904 13
4905 12
4906 10
4907 19
4908 36
4909 28
4910 19
4911 36
4912 28
4913 12
4914 17
4915 15
4916 21
4917 18
4918 14
4919 21
4920 18
4921 12
4922 17
4923 15
4924 13
4925 12
4926 10
4927 19
4928 36
4929 28
4930 19
4931 28
4932 12
4933 17
4934 15
4935 14
4936 21
4937 18
4938 14
4939 21
4940 18
4941 12
4942 17
4943 15
4944 13
4945 12
4946 15
4947 24
4948 20
4949 15
4950 24
4951 20
4952 11
4953 14
4954 13
4955 13
4956 18
4957 16
4958 13
4959 16
4960 11
4961 14
4962 13
4963 10
4964 19
4965 36
4966 28
4967 19
4968 36
4969 28
4970 12
4971 17
4972 15
4973 14
4974 21
4975 18
4976 14
4977 21
4978 12
4979 17
4980 15
4981 13
4982 12
4983 14
4984 17
4985 26
4987 35
4988 26
4990 35
4991 19
4992 24
4993 22
4994 21
4995 28
4996 25
4997 21
4998 28
4999 25
5000 19
5001 24
5002 20
5003 19
5004 17
5005 26
5007 35
5008 26
5010 35
5011 19
5012 24
5013 22
5014 21
5015 28
5016 25
5017 21
5018 28
5019 25
5020 19
5021 24
5022 22
5023 20
5024 19
5025 22
5026 31
5027 27
5028 22
5029 31
5030 27
5031 18
5032 21
5033 20
5034 20
5035 25
5036 23
5037 20
5038 25
5039 23
5040 18
5041 21
5042 20
5043 17
5044 26
5046 26
5048 35
5049 19
5050 24
5051 21
5052 28
5053 25
5054 21
5055 28
5056 25
5057 19
5058 24
5059 22
5060 20
5061 19
5062 17
5063 26
5065 35
5066 26
5068 35
5069 19
5070 24
5071 22
5072 21
5073 28
5074 25
5075 21
5076 28
5077 25
5078 19
5079 22
5080 20
5081 17
5083 35
5084 26
5086 35
5087 19
5088 24
5089 22
5090 21
5091 28
5092 25
5093 21
5094 28
5095 25
5096 19
5097 24
5098 22
5099 20
5100 19
5101 22
5102 31
5103 27
5104 22
5105 31
5106 27
5107 18
5108 21
5109 20
5110 20
5111 25
5112 23
5113 20
5114 25
5115 23
5116 18
5117 21
5118 20
5119 26
5121 35
5123 35
5124 19
5125 24
5126 22
5127 21
5128 28
5129 25
5130 21
5131 25
5132 19
5133 24
5134 22
5135 20
5136 19
5137 11
5138 14
5140 32
5141 23
5143 32
5144 16
5145 21
5146 19
5147 18
5148 25
5149 22
5150 18
5151 25
5152 22
5153 16
5154 21
5155 19
5156 17
5157 16
5158 14
5159 23
5161 32
5162 23
5164 32
5165 16
5166 21
5167 19
5168 18
5169 25
5170 22
5171 18
5172 22
5173 16
5174 21
5175 19
5176 17
5177 16
5178 19
5179 28
5180 24
5181 19
5182 28
5183 24
5184 15
5185 18
5186 17
5187 17
5188 20
5189 17
5190 22
5191 20
5192 15
5193 18
5194 17
5195 14
5196 23
5198 32
5199 23
5201 32
5202 16
5203 21
5204 19
5205 18
5206 25
5207 18
5208 22
5209 16
5210 21
5211 19
5212 17
5213 16
5214 14
5215 23
5217 32
5218 23
5220 32
5221 16
5222 21
5223 19
5224 18
5225 25
5226 22
5227 18
5228 25
5229 22
5230 16
5231 21
5232 19
5233 17
5234 16
5235 14
5236 23
5238 32
5239 23
5241 32
5242 16
5243 21
5244 19
5245 18
5246 25
5247 22
5248 18
5249 25
5250 22
5251 16
5252 21
5253 19
5254 16
5255 19
5256 28
5257 24
5258 19
5259 28
5260 24
5261 15
5262 18
5263 17
5264 17
5265 22
5266 20
5267 17
5268 20
5269 15
5270 18
5271 17
5272 14
5273 23
5275 32
5276 23
5278 32
5279 16
5280 21
5281 19
5282 18
5283 25
5284 22
5285 18
5286 25
5287 22
5288 16
5289 21
5290 19
5291 17
5292 16
5293 7
5294 10
5295 36
5296 28
5297 19
5298 36
5299 28
5300 12
5301 17
5302 15
5303 14
5304 21
5305 18
5306 14
5307 21
5308 18
5309 12
5310 17
5311 15
5312 13
5313 10
5314 36
5315 28
5316 19
5317 36
5318 28
5319 12
5320 17
5321 15
5322 14
5323 21
5324 18
5325 14
5326 21
5327 18
5328 12
5329 17
5330 15
5331 13
5332 12
5333 15
5334 24
5335 20
5336 15
5337 24
5338 20
5339 11
5340 14
5341 13
5342 13
5343 18
5344 16
5345 13
5346 18
5347 16
5348 11
5349 14
5350 13
5351 10
5352 19
5353 36
5354 28
5355 19
5356 36
5357 28
5358 12
5359 17
5360 15
5361 14
5362 21
5363 18
5364 14
5365 21
5366 18
5367 12
5368 17
5369 15
5370 13
5371 12
5372 10
5373 19
5374 36
5375 28
5376 19
5377 36
5378 28
5379 12
5380 17
5381 15
5382 14
5383 21
5384 18
5385 14
5386 21
5387 18
5388 12
5389 17
5390 15
5391 13
5392 12
5393 10
5394 19
5395 36
5396 28
5397 19
5398 36
5399 28
5400 12
5401 15
5402 21
5403 18
5404 14
5405 21
5406 18
5407 12
5408 17
5409 15
5410 13
5411 12
5412 15
5413 24
5414 20
5415 15
5416 20
5417 11
5418 14
5419 13
5420 13
5421 18
5422 16
5423 13
5424 18
5425 16
5426 11
5427 14
5428 13
5429 10
5430 19
5431 36
5432 28
5433 19
5434 36
5435 28
5436 12
5437 17
5438 15
5439 14
5440 21
5441 18
5442 14
5443 21
5444 18
5445 12
5446 17
5447 15
5448 13
5449 12
5450 14
5451 17
5452 26
5454 35
5455 26
5457 35
5458 19
5459 24
5460 22
5461 21
5462 28
5463 25
5464 21
5465 28
5466 25
5467 19
5468 24
5469 22
5470 20
5471 17
5473 35
5474 26
5476 35
5477 19
5478 24
5479 22
5480 21
5481 28
5482 25
5483 21
5484 28
5485 25
5486 24
5487 22
5488 20
5489 19
5490 22
5491 31
5492 27
5493 22
5494 31
5495 27
5496 18
5497 21
5498 20
5499 20
5500 25
5501 23
5502 20
5503 25
5504 23
5505 18
5506 21
5507 20
5508 17
5510 35
5511 26
5513 35
5514 19
5515 24
5516 22
5517 21
5518 28
5519 25
5520 21
5521 28
5522 25
5523 19
5524 24
5525 22
5526 20
5527 19
5528 17
5529 26
5531 35
5532 26
5533 35
5534 19
5535 24
5536 22
5537 21
5538 28
5539 25
5540 21
5541 25
5542 19
5543 24
5544 22
5545 20
5546 17
5547 26
5549 35
5550 26
5552 35
5553 24
5554 22
5555 21
5556 28
5557 25
5558 21
5559 28
5560 25
5561 19
5562 24
5563 20
5564 22
5565 31
5566 27
5567 22
5568 31
5569 27
5570 18
5571 21
5572 20
5573 20
5574 25
5575 23
5576 20
5577 25
5578 23
5579 18
5580 21
5581 20
5582 17
5583 26
5585 35
5586 26
5588 35
5589 19
5590 24
5591 22
5592 21
5593 28
5594 25
5595 21
5596 28
5597 25
5598 19
5599 24
5600 22
5601 20
5602 19
5603 11
5604 14
5605 23
5607 32
5608 23
5610 32
5611 16
5612 21
5613 19
5614 18
5615 25
5616 22
5617 18
5618 25
5619 22
5620 16
5621 21
5622 19
5623 17
5624 16
5625 23
5627 32
5629 32
5630 16
5631 21
5632 19
5633 18
5634 25
5635 22
5636 18
5637 25
5638 22
5639 16
5640 21
5641 19
5642 17
5643 16
5644 19
5645 28
5646 24
5647 19
5648 28
5649 24
5650 15
5651 18
5652 17
5653 17
5654 22
5655 20
5656 17
5657 22
5658 20
5659 15
5660 18
5661 17
5662 14
5663 23
5665 32
5666 23
5668 32
5669 16
5670 21
5671 19
5672 18
5673 25
5674 22
5675 18
5676 25
5677 22
5678 16
5679 21
5680 19
5681 17
5682 16
5683 14
5684 23
5686 32
5687 23
5689 32
5690 16
5691 21
5692 19
5693 18
5694 25
5695 22
5696 18
5697 25
5698 22
5699 16
5700 19
5701 17
5702 16
5703 14
5704 23
5706 32
5707 23
5709 32
5710 16
5711 21
5712 19
5713 18
5714 25
5715 22
5716 18
5717 25
5718 22
5719 16
5720 21
5721 19
5722 17
5723 16
5724 19
5725 28
5726 24
5727 19
5728 28
5729 24
5730 15
5731 18
5732 17
5733 17
5734 22
5735 20
5736 17
5737 22
5738 20
5739 15
5740 18
5741 17
5742 14
5743 23
5745 32
5746 23
5748 32
5749 16
5750 21
5751 19
5752 18
5753 25
5754 22
5755 18
5756 25
5757 22
5758 16
5759 21
5760 19
5761 17
5762 16
5763 5
5764 8
5765 17
5766 34
5767 26
5768 17
5769 34
5770 10
5771 15
5772 13
5773 12
5774 19
5775 16
5776 12
5777 19
5778 16
5779 10
5780 15
5781 13
5782 11
5783 10
5784 8
5785 17
5786 34
5787 26
5788 17
5789 34
5790 26
5791 10
5792 15
5793 13
5794 12
5795 19
5796 16
5797 12
5798 19
5799 16
5800 10
5801 15
5802 11
5803 10
5804 13
5805 22
5806 18
5807 13
5808 22
5809 18
5810 9
5811 12
5812 11
5813 11
5814 16
5815 11
5816 16
5817 14
5818 9
5819 12
5820 11
5821 8
5822 17
5823 34
5824 26
5825 17
5826 34
5827 26
5828 10
5829 15
5830 13
5831 12
5832 19
5833 16
5834 12
5835 19
5836 16
5837 10
5838 15
5839 13
5840 11
5841 10
5842 8
5843 17
5844 34
5845 26
5846 17
5847 34
5848 26
5849 10
5850 15
5851 13
5852 12
5853 19
5854 16
5855 12
5856 19
5857 16
5858 10
5859 15
5860 13
5861 11
5862 10
5863 8
5864 17
5865 34
5866 26
5867 17
5868 34
5869 26
5870 10
5871 15
5872 13
5873 12
5874 19
5875 16
5876 12
5877 19
5878 16
5879 10
5880 15
5881 13
5882 11
5883 10
5884 13
5885 22
5886 18
5887 13
5888 22
5889 18
5890 9
5891 12
5892 11
5893 11
5894 16
5895 14
5896 11
5897 16
5898 14
5899 9
5900 12
5901 11
5902 8
5903 17
5904 34
5905 26
5906 17
5907 34
5908 26
5909 10
5910 15
5911 13
5912 12
5913 19
5914 16
5915 12
5916 19
5917 16
5918 10
5919 15
5920 13
5921 11
5922 10
5923 10
5924 13
5925 22
5926 39
5927 31
5928 22
5929 39
5930 31
5931 15
5932 20
5933 18
5934 17
5935 24
5936 21
5937 17
5938 24
5939 21
5940 15
5941 20
5942 18
5943 16
5944 15
5945 13
5946 22
5947 39
5948 31
5949 39
5950 31
5951 15
5952 18
5953 17
5954 24
5955 21
5956 17
5957 24
5958 21
5959 15
5960 20
5961 18
5962 16
5963 15
5964 18
5965 27
5966 23
5967 18
5968 27
5969 23
5970 14
5971 17
5972 16
5973 16
5974 21
5975 19
5976 16
5977 21
5978 19
5979 14
5980 16
5981 13
5982 22
5983 31
5984 22
5985 39
5986 31
5987 20
5988 18
5989 17
5990 24
5991 21
5992 17
5993 24
5994 21
5995 15
5996 20
5997 18
5998 16
5999 15
6000 13
6001 22
6002 39
6003 31
6004 22
6005 39
6006 31
6007 15
6008 20
6009 18
6010 17
6011 24
6012 21
6013 24
6014 21
6015 20
6016 18
6017 16
6018 15
6019 13
6020 22
6021 39
6022 31
6023 22
6024 39
6025 31
6026 15
6027 20
6028 18
6029 17
6030 24
6031 21
6032 17
6033 24
6034 15
6035 20
6036 18
6037 16
6038 15
6039 18
6040 27
6041 23
6042 18
6043 27
6044 23
6045 14
6046 17
6047 16
6048 16
6049 21
6050 19
6051 16
6052 21
6053 19
6054 14
6055 17
6056 16
6057 13
6058 22
6059 39
6060 31
6061 22
6062 39
6063 31
6064 15
6065 20
6066 18
6067 17
6068 24
6069 21
6070 17
6071 24
6072 21
6073 15
6074 20
6075 18
6076 16
6077 15
6078 8
6079 11
6080 20
6081 37
6082 29
6083 20
6084 37
6085 29
6086 13
6087 18
6088 16
6089 15
6090 22
6091 19
6092 15
6093 22
6094 19
6095 13
6096 18
6097 16
6098 14
6099 13
6100 11
6101 20
6102 37
6103 29
6104 20
6105 37
6106 29
6107 13
6108 18
6109 16
6110 15
6111 22
6112 15
6113 22
6114 19
6115 13
6116 18
6117 16
6118 13
6119 16
6120 25
6121 21
6122 16
6123 25
6124 21
6125 12
6126 15
6127 14
6128 14
6129 19
6130 17
6131 14
6132 19
6133 17
6134 12
6135 15
6136 11
6137 20
6138 37
6139 29
6140 20
6141 37
6142 29
6143 13
6144 18
6145 16
6146 15
6147 22
6148 19
6149 22
6150 19
6151 13
6152 18
6153 16
6154 14
6155 13
6156 11
6157 20
6158 37
6159 29
6160 20
6161 37
6162 29
6163 13
6164 18
6165 16
6166 15
6167 22
6168 19
6169 15
6170 22
6171 19
6172 13
6173 18
6174 16
6175 14
6176 13
6177 11
6178 20
6179 37
6180 29
6181 20
6182 37
6183 29
6184 13
6185 18
6186 16
6187 15
6188 22
6189 19
6190 15
6191 22
6192 19
6193 13
6194 18
6195 16
6196 14
6197 13
6198 16
6199 25
6200 21
6201 16
6202 25
6203 21
6204 12
6205 15
6206 14
6207 14
6208 19
6209 17
6210 14
6211 19
6212 17
6213 12
6214 15
6215 14
6216 11
6217 20
6218 37
6219 29
6220 20
6221 37
6222 29
6223 13
6224 18
6225 16
6226 15
6227 22
6228 19
6229 15
6230 22
6231 19
6232 13
6233 18
6234 16
6235 14
6236 13
6237 6
6238 9
6239 18
6240 35
6241 27
6242 18
6243 35
6244 27
6245 11
6246 16
6247 14
6248 13
6249 20
6250 17
6251 13
6252 20
6253 17
6254 11
6255 16
6256 14
6257 12
6258 11
6259 9
6260 18
6261 35
6262 27
6263 18
6264 35
6265 27
6266 11
6267 16
6268 14
6269 13
6270 20
6271 17
6272 13
6273 20
6274 17
6275 11
6276 14
6277 12
6278 11
6279 14
6280 23
6281 19
6282 14
6283 23
6284 19
6285 10
6286 13
6287 12
6288 12
6289 17
6290 15
6291 12
6292 17
6293 15
6294 10
6295 13
6296 12
6297 9
6298 18
6299 35
6300 27
6301 18
6302 35
6303 27
6304 11
6305 16
6306 14
6307 13
6308 20
6309 17
6310 13
6311 20
6312 17
6313 11
6314 16
6315 14
6316 12
6317 11
6318 9
6319 18
6320 35
6321 27
6322 18
6323 35
6324 11
6325 16
6326 14
6327 13
6328 20
6329 17
6330 13
6331 20
6332 17
6333 11
6334 16
6335 14
6336 12
6337 11
6338 9
6339 18
6340 35
6341 27
6342 18
6343 35
6344 27
6345 11
6346 16
6347 14
6348 20
6349 17
6350 13
6351 20
6352 17
6353 11
6354 16
6355 14
6356 12
6357 11
6358 14
6359 23
6360 19
6361 14
6362 23
6363 19
6364 10
6365 13
6366 12
6367 12
6368 15
6369 17
6370 15
6371 10
6372 13
6373 12
6374 9
6375 18
6376 35
6377 27
6378 18
6379 35
6380 27
6381 11
6382 16
6383 14
6384 13
6385 20
6386 17
6387 13
6388 20
6389 17
6390 11
6391 16
6392 14
6393 12
6394 11
6395 5
6396 8
6397 17
6398 26
6399 17
6400 34
6401 26
6402 10
6403 15
6404 13
6405 12
6406 19
6407 16
6408 12
6409 19
6410 16
6411 10
6412 15
6413 13
6414 11
6415 10
6416 8
6417 17
6418 34
6419 26
6420 26
6421 10
6422 15
6423 13
6424 12
6425 19
6426 16
6427 12
6428 19
6429 16
6430 10
6431 15
6432 13
6433 11
6434 10
6435 13
6436 22
6437 18
6438 13
6439 22
6440 18
6441 9
6442 12
6443 11
6444 11
6445 16
6446 14
6447 11
6448 16
6449 14
6450 9
6451 12
6452 11
6453 8
6454 17
6455 26
6456 17
6457 34
6458 26
6459 10
6460 15
6461 13
6462 12
6463 19
6464 16
6465 12
6466 19
6467 16
6468 10
6469 15
6470 13
6471 11
6472 10
6473 8
6474 17
6475 34
6476 26
6477 17
6478 34
6479 26
6480 15
6481 13
6482 19
6483 16
6484 12
6485 19
6486 16
6487 10
6488 15
6489 13
6490 11
6491 10
6492 17
6493 34
6494 26
6495 17
6496 34
6497 26
6498 10
6499 15
6500 13
6501 12
6502 16
6503 12
6504 19
6505 16
6506 10
6507 15
6508 13
6509 11
6510 10
6511 13
6512 22
6513 18
6514 13
6515 22
6516 18
6517 9
6518 12
6519 11
6520 11
6521 16
6522 14
6523 11
6524 16
6525 14
6526 9
6527 12
6528 11
6529 8
6530 17
6531 34
6532 26
6533 17
6534 34
6535 10
6536 15
6537 13
6538 12
6539 19
6540 16
6541 12
6542 19
6543 16
6544 10
6545 15
6546 13
6547 11
6548 10
6549 8
6550 11
6551 20
6552 37
6553 29
6554 20
6555 37
6556 29
6557 13
6558 18
6559 16
6560 15
6561 19
6562 22
6563 19
6564 13
6565 18
6566 16
6567 13
6568 11
6569 20
6570 37
6571 29
6572 20
6573 37
6574 29
6575 13
6576 18
6577 16
6578 15
6579 22
6580 19
6581 15
6582 22
6583 19
6584 13
6585 18
6586 16
6587 14
6588 13
6589 16
6590 25
6591 21
6592 16
6593 25
6594 21
6595 12
6596 15
6597 14
6598 14
6599 19
6600 17
6601 14
6602 19
6603 17
6604 12
6605 15
6606 14
6607 11
6608 20
6609 37
6610 29
6611 20
6612 37
6613 29
6614 13
6615 18
6616 16
6617 15
6618 22
6619 19
6620 15
6621 22
6622 19
6623 13
6624 18
6625 14
6626 13
6627 11
6628 37
6629 29
6630 20
6631 37
6632 29
6633 13
6634 18
6635 16
6636 15
6637 22
6638 19
6639 15
6640 22
6641 19
6642 13
6643 18
6644 16
6645 14
6646 13
6647 11
6648 20
6649 37
6650 29
6651 20
6652 37
6653 29
6654 13
6655 18
6656 16
6657 15
6658 22
6659 19
6660 22
6661 19
6662 13
6663 18
6664 16
6665 14
6666 13
6667 16
6668 25
6669 21
6670 16
6671 25
6672 21
6673 12
6674 14
6675 14
6676 17
6677 14
6678 19
6679 17
6680 12
6681 15
6682 14
6683 11
6684 20
6685 37
6686 29
6687 20
6688 37
6689 29
6690 18
6691 16
6692 19
6693 15
6694 22
6695 19
6696 13
6697 18
6698 16
6699 14
6700 13
6701 17
6702 20
6703 29
6705 38
6706 29
6708 38
6709 22
6710 27
6711 24
6712 31
6713 28
6714 24
6715 31
6716 28
6717 22
6718 27
6719 25
6720 23
6721 22
6722 20
6723 29
6725 38
6726 29
6728 38
6729 22
6730 27
6731 25
6732 24
6733 31
6734 28
6735 24
6736 31
6737 28
6738 22
6739 27
6740 23
6741 22
6742 25
6743 34
6744 30
6745 25
6746 34
6747 30
6748 21
6749 24
6750 23
6751 23
6752 28
6753 26
6754 23
6755 28
6756 26
6757 21
6758 24
6759 23
6760 20
6762 38
6763 29
6765 38
6766 27
6767 25
6768 24
6769 31
6770 28
6771 24
6772 31
6773 28
6774 22
6775 27
6776 23
6777 22
6778 20
6779 29
6781 38
6782 29
6784 38
6785 22
6786 27
6787 25
6788 24
6789 31
6790 28
6791 24
6792 31
6793 28
6794 22
6795 27
6796 25
6797 23
6798 22
6799 20
6800 29
6802 38
6803 29
6805 38
6806 22
6807 27
6808 25
6809 24
6810 28
6811 24
6812 31
6813 28
6814 22
6815 27
6816 25
6817 22
6818 25
6819 34
6820 30
6821 25
6822 34
6823 30
6824 21
6825 24
6826 23
6827 26
6828 23
6829 28
6830 26
6831 21
6832 24
6833 23
6834 20
6835 29
6837 38
6838 29
6840 38
6841 27
6842 25
6843 24
6844 31
6845 28
6846 24
6847 31
6848 28
6849 22
6850 27
6851 25
6852 23
6853 22
6854 13
6855 16
6856 25
6858 34
6859 25
6861 34
6862 18
6863 23
6864 21
6865 20
6866 27
6867 24
6868 27
6869 24
6870 18
6871 21
6872 19
6873 18
6874 16
6875 25
6877 34
6878 25
6880 34
6881 23
6882 21
6883 20
6884 27
6885 24
6886 20
6887 27
6888 24
6889 18
6890 23
6891 21
6892 19
6893 18
6894 21
6895 30
6896 26
6897 21
6898 30
6899 26
6900 17
6901 20
6902 19
6903 19
6904 24
6905 22
6906 19
6907 24
6908 22
6909 17
6910 20
6911 19
6912 16
6913 25
6915 34
6916 25
6918 34
6919 18
6920 21
6921 20
6922 27
6923 24
6924 20
6925 27
6926 24
6927 18
6928 23
6929 19
6930 18
6931 16
6932 25
6934 34
6935 25
6937 34
6938 18
6939 23
6940 20
6941 27
6942 24
6943 20
6944 27
6945 24
6946 18
6947 23
6948 21
6949 19
6950 18
6951 16
6952 25
6954 34
6955 25
6957 34
6958 18
6959 23
6960 21
6961 20
6962 27
6963 24
6964 20
6965 27
6966 24
6967 18
6968 23
6969 21
6970 19
6971 18
6972 21
6973 30
6974 26
6975 30
6976 26
6977 17
6978 20
6979 19
6980 19
6981 24
6982 22
6983 19
6984 24
6985 22
6986 17
6987 20
6988 19
6989 16
6990 25
6992 34
6993 25
6995 34
6996 18
6997 23
6998 21
6999 20
7000 27
7001 24
7002 20
7003 27
7004 24
7005 18
7006 23
7007 21
7008 19
7009 18
7010 8
7011 20
7012 37
7013 29
7014 37
7015 29
7016 13
7017 18
7018 16
7019 15
7020 22
7021 19
7022 15
7023 22
7024 19
7025 13
7026 18
7027 16
7028 14
7029 11
7030 37
7031 29
7032 20
7033 37
7034 29
7035 13
7036 18
7037 16
7038 15
7039 22
7040 19
7041 15
7042 22
7043 19
7044 13
7045 18
7046 16
7047 14
7048 13
7049 16
7050 25
7051 21
7052 16
7053 25
7054 21
7055 12
7056 15
7057 14
7058 14
7059 19
7060 17
7061 14
7062 19
7063 17
7064 12
7065 15
7066 11
7067 20
7068 37
7069 29
7070 20
7071 37
7072 29
7073 13
7074 18
7075 16
7076 22
7077 19
7078 15
7079 22
7080 19
7081 13
7082 18
7083 16
7084 14
7085 13
7086 20
7087 37
7088 29
7089 37
7090 29
7091 18
7092 16
7093 15
7094 22
7095 19
7096 19
7097 18
7098 16
7099 14
7100 11
7101 20
7102 37
7103 29
7104 20
7105 37
7106 29
7107 13
7108 18
7109 16
7110 15
7111 22
7112 19
7113 15
7114 22
7115 19
7116 13
7117 18
7118 16
7119 14
7120 13
7121 16
7122 25
7123 21
7124 16
7125 25
7126 21
7127 12
7128 15
7129 14
7130 14
7131 19
7132 17
7133 14
7134 19
7135 17
7136 12
7137 15
7138 14
7139 11
7140 20
7141 37
7142 29
7143 20
7144 37
7145 29
7146 13
7147 18
7148 16
7149 15
7150 22
7151 19
7152 15
7153 19
7154 13
7155 16
7156 14
7157 13
7158 17
7159 20
7160 29
7162 38
7163 29
7165 38
7166 22
7167 27
7168 25
7169 24
7170 31
7171 28
7172 24
7173 31
7174 28
7175 22
7176 27
7177 25
7178 23
7179 22
7180 20
7181 29
7183 38
7184 29
7186 38
7187 22
7188 27
7189 25
7190 24
7191 31
7192 28
7193 24
7194 31
7195 28
7196 22
7197 27
7198 25
7199 23
7200 22
7201 25
7202 34
7203 30
7204 25
7205 34
7206 30
7207 21
7208 24
7209 23
7210 23
7211 28
7212 26
7213 23
7214 28
7215 26
7216 24
7217 23
7218 20
7219 29
7221 38
7222 29
7224 38
7225 27
7226 25
7227 24
7228 31
7229 28
7230 24
7231 31
7232 28
7233 22
7234 27
7235 25
7236 23
7237 22
7238 20
7239 29
7241 38
7242 29
7244 38
7245 22
7246 27
7247 24
7248 31
7249 28
7250 24
7251 31
7252 28
7253 22
7254 27
7255 25
7256 23
7257 22
7258 20
7259 29
7261 38
7262 29
7264 38
7265 22
7266 27
7267 25
7268 24
7269 31
7270 28
7271 24
7272 31
7273 28
7274 22
7275 27
7276 25
7277 23
7278 22
7279 25
7280 34
7281 30
7282 25
7283 30
7284 21
7285 24
7286 23
7287 23
7288 28
7289 26
7290 23
7291 28
7292 26
7293 21
7294 24
7295 23
7296 20
7297 29
7299 38
7300 29
7302 38
7303 22
7304 27
7305 25
7306 24
7307 31
7308 28
7309 24
7310 31
7311 28
7312 22
7313 27
7314 25
7315 23
7316 22
7317 13
7318 16
7319 25
7321 34
7322 25
7324 34
7325 18
7326 23
7327 21
7328 20
7329 27
7330 24
7331 27
7332 24
7333 18
7334 23
7335 21
7336 19
7337 18
7338 16
7339 25
7341 34
7342 25
7344 34
7345 18
7346 23
7347 21
7348 20
7349 27
7350 24
7351 20
7352 27
7353 24
7354 18
7355 23
7356 21
7357 19
7358 18
7359 21
7360 30
7361 26
7362 21
7363 30
7364 26
7365 17
7366 20
7367 19
7368 19
7369 24
7370 19
7371 24
7372 22
7373 17
7374 20
7375 19
7376 16
7377 25
7379 34
7380 25
7382 34
7383 18
7384 23
7385 21
7386 20
7387 27
7388 24
7389 20
7390 27
7391 24
7392 18
7393 23
7394 21
7395 19
7396 18
7397 16
7398 25
7400 34
7401 25
7403 34
7404 18
7405 23
7406 20
7407 27
7408 24
7409 20
7410 27
7411 24
7412 18
7413 23
7414 21
7415 18
7416 25
7418 34
7419 25
7421 34
7422 18
7423 23
7424 21
7425 20
7426 27
7427 24
7428 20
7429 27
7430 24
7431 18
7432 21
7433 19
7434 18
7435 21
7436 30
7437 26
7438 21
7439 30
7440 26
7441 17
7442 20
7443 19
7444 19
7445 24
7446 22
7447 19
7448 24
7449 22
7450 17
7451 20
7452 19
7453 16
7454 25
7456 34
7457 25
7459 34
7460 18
7461 23
7462 21
7463 20
7464 27
7465 24
7466 20
7467 27
7468 24
7469 18
7470 23
7471 21
7472 19
7473 18
7474 4
7475 7
7476 16
7477 33
7478 25
7479 16
7480 33
7481 25
7482 9
7483 14
7484 12
7485 18
7486 15
7487 18
7488 15
7489 9
7490 14
7491 12
7492 10
7493 9
7494 7
7495 16
7496 33
7497 25
7498 16
7499 33
7500 25
7501 9
7502 14
7503 11
7504 18
7505 15
7506 11
7507 18
7508 15
7509 9
7510 14
7511 12
7512 10
7513 12
7514 21
7515 17
7516 12
7517 21
7518 17
7519 8
7520 11
7521 10
7522 10
7523 15
7524 10
7525 15
7526 13
7527 8
7528 11
7529 10
7530 7
7531 16
7532 33
7533 25
7534 16
7535 33
7536 25
7537 9
7538 14
7539 12
7540 11
7541 18
7542 15
7543 11
7544 18
7545 15
7546 14
7547 12
7548 10
7549 9
7550 7
7551 16
7552 33
7553 25
7554 33
7555 25
7556 9
7557 14
7558 12
7559 11
7560 18
7561 15
7562 11
7563 18
7564 15
7565 9
7566 14
7567 12
7568 10
7569 9
7570 7
7571 16
7572 33
7573 25
7574 16
7575 33
7576 25
7577 9
7578 14
7579 12
7580 11
7581 18
7582 15
7583 11
7584 18
7585 15
7586 14
7587 12
7588 10
7589 9
7590 12
7591 21
7592 17
7593 12
7594 21
7595 17
7596 8
7597 11
7598 10
7599 10
7600 15
7601 13
7602 15
7603 13
7604 8
7605 11
7606 10
7607 7
7608 16
7609 33
7610 25
7611 16
7612 33
7613 25
7614 9
7615 14
7616 12
7617 11
7618 18
7619 15
7620 11
7621 15
7622 9
7623 14
7624 12
7625 10
7626 9
7627 7
7628 10
7629 19
7630 36
7631 28
7632 19
7633 36
7634 28
7635 12
7636 17
7637 15
7638 14
7639 21
7640 18
7641 14
7642 21
7643 18
7644 12
7645 17
7646 15
7647 13
7648 12
7649 10
7650 19
7651 36
7652 28
7653 19
7654 36
7655 28
7656 12
7657 17
7658 15
7659 14
7660 21
7661 14
7662 21
7663 18
7664 12
7665 17
7666 15
7667 13
7668 12
7669 15
7670 24
7671 20
7672 15
7673 24
7674 20
7675 11
7676 14
7677 13
7678 13
7679 18
7680 16
7681 13
7682 18
7683 16
7684 11
7685 14
7686 13
7687 10
7688 19
7689 36
7690 28
7691 19
7692 36
7693 28
7694 12
7695 17
7696 15
7697 14
7698 21
7699 18
7700 14
7701 21
7702 12
7703 17
7704 15
7705 13
7706 12
7707 19
7708 36
7709 28
7710 19
7711 36
7712 28
7713 12
7714 17
7715 15
7716 14
7717 21
7718 18
7719 14
7720 21
7721 18
7722 12
7723 17
7724 15
7725 12
7726 10
7727 19
7728 36
7729 28
7730 19
7731 36
7732 28
7733 12
7734 17
7735 14
7736 21
7737 18
7738 14
7739 21
7740 18
7741 12
7742 17
7743 15
7744 13
7745 12
7746 15
7747 24
7748 20
7749 15
7750 24
7751 20
7752 11
7753 14
7754 13
7755 13
7756 18
7757 16
7758 13
7759 18
7760 16
7761 11
7762 14
7763 13
7764 10
7765 19
7766 36
7767 28
7768 19
7769 36
7770 28
7771 12
7772 17
7773 15
7774 14
7775 21
7776 18
7777 14
7778 21
7779 18
7780 12
7781 17
7782 15
7783 13
7784 12
7785 6
7786 9
7787 35
7788 27
7789 18
7790 35
7791 27
7792 11
7793 16
7794 14
7795 13
7796 20
7797 17
7798 13
7799 20
7800 17
7801 11
7802 16
7803 14
7804 12
7805 11
7806 9
7807 18
7808 35
7809 27
7810 18
7811 35
7812 27
7813 11
7814 16
7815 14
7816 13
7817 20
7818 17
7819 13
7820 20
7821 17
7822 11
7823 16
7824 14
7825 12
7826 11
7827 14
7828 23
7829 19
7830 14
7831 23
7832 19
7833 10
7834 13
7835 17
7836 15
7837 12
7838 17
7839 15
7840 10
7841 13
7842 12
7843 9
7844 18
7845 35
7846 27
7847 18
7848 35
7849 27
7850 11
7851 16
7852 14
7853 13
7854 20
7855 17
7856 13
7857 17
7858 11
7859 16
7860 14
7861 12
7862 11
7863 9
7864 18
7865 35
7866 27
7867 18
7868 35
7869 27
7870 11
7871 16
7872 13
7873 20
7874 17
7875 13
7876 20
7877 17
7878 11
7879 16
7880 14
7881 12
7882 11
7883 9
7884 18
7885 35
7886 27
7887 18
7888 35
7889 27
7890 11
7891 16
7892 14
7893 13
7894 20
7895 13
7896 20
7897 17
7898 11
7899 16
7900 14
7901 12
7902 11
7903 14
7904 23
7905 19
7906 14
7907 23
7908 19
7909 10
7910 13
7911 12
7912 12
7913 17
7914 15
7915 12
7916 17
7917 15
7918 10
7919 13
7920 12
7921 9
7922 18
7923 35
7924 27
7925 18
7926 35
7927 27
7928 11
7929 14
7930 13
7931 20
7932 17
7933 13
7934 20
7935 17
7936 11
7937 16
7938 14
7939 12
7940 11
7941 6
7942 9
7943 18
7944 35
7945 27
7946 18
7947 35
7948 27
7949 11
7950 16
7951 14
7952 13
7953 20
7954 17
7955 13
7956 20
7957 17
7958 11
7959 16
7960 14
7961 12
7962 11
7963 9
7964 18
7965 35
7966 27
7967 18
7968 27
7969 11
7970 16
7971 14
7972 13
7973 20
7974 17
7975 13
7976 20
7977 17
7978 11
7979 16
7980 14
7981 12
7982 11
7983 14
7984 23
7985 19
7986 14
7987 23
7988 19
7989 10
7990 13
7991 12
7992 12
7993 17
7994 15
7995 12
7996 17
7997 15
7998 10
7999 13
8000 9
8001 18
8002 35
8003 27
8004 18
8005 35
8006 27
8007 11
8008 14
8009 13
8010 20
8011 17
8012 13
8013 20
8014 17
8015 11
8016 14
8017 11
8018 9
8019 35
8020 27
8021 18
8022 35
8023 11
8024 16
8025 14
8026 13
8027 20
8028 17
8029 13
8030 20
8031 17
8032 11
8033 16
8034 14
8035 12
8036 11
8037 9
8038 18
8039 35
8040 27
8041 18
8042 35
8043 11
8044 16
8045 14
8046 13
8047 20
8048 13
8049 20
8050 17
8051 11
8052 16
8053 14
8054 12
8055 11
8056 14
8057 23
8058 19
8059 14
8060 23
8061 19
8062 10
8063 13
8064 12
8065 12
8066 17
8067 15
8068 12
8069 17
8070 15
8071 10
8072 13
8073 12
8074 9
8075 18
8076 35
8077 27
8078 18
8079 35
8080 27
8081 11
8082 16
8083 14
8084 13
8085 20
8086 17
8087 13
8088 20
8089 17
8090 11
8091 14
8092 12
8093 11
8094 11
8095 14
8096 23
8098 32
8099 23
8101 32
8102 16
8103 21
8104 19
8105 18
8106 25
8107 22
8108 18
8109 25
8110 22
8111 16
8112 21
8113 19
8114 17
8115 14
8116 23
8118 32
8119 23
8121 32
8122 16
8123 21
8124 19
8125 18
8126 25
8127 22
8128 18
8129 25
8130 22
8131 16
8132 21
8133 19
8134 17
8135 16
8136 19
8137 28
8138 24
8139 19
8140 28
8141 24
8142 15
8143 18
8144 17
8145 17
8146 22
8147 20
8148 17
8149 22
8150 20
8151 15
8152 18
8153 17
8154 14
8155 23
8157 23
8159 32
8160 16
8161 19
8162 18
8163 25
8164 22
8165 18
8166 25
8167 22
8168 19
8169 17
8170 16
8171 14
8172 23
8174 23
8176 32
8177 16
8178 21
8179 19
8180 18
8181 25
8182 22
8183 18
8184 22
8185 16
8186 21
8187 19
8188 17
8189 16
8190 14
8191 23
8193 32
8194 23
8196 32
8197 16
8198 21
8199 19
8200 18
8201 25
8202 22
8203 18
8204 25
8205 22
8206 16
8207 21
8208 17
8209 16
8210 19
8211 28
8212 24
8213 19
8214 28
8215 24
8216 15
8217 17
8218 17
8219 22
8220 20
8221 17
8222 22
8223 20
8224 15
8225 18
8226 17
8227 14
8228 23
8230 32
8231 23
8233 32
8234 16
8235 21
8236 19
8237 18
8238 25
8239 22
8240 18
8241 25
8242 22
8243 16
8244 21
8245 19
8246 17
8247 16
8248 9
8249 12
8250 21
8251 38
8252 30
8253 21
8254 38
8255 30
8256 14
8257 19
8258 17
8259 16
8260 23
8261 20
8262 16
8263 23
8264 20
8265 14
8266 19
8267 17
8268 15
8269 14
8270 12
8271 21
8272 38
8273 30
8274 21
8275 38
8276 30
8277 14
8278 19
8279 17
8280 16
8281 23
8282 20
8283 16
8284 23
8285 20
8286 19
8287 17
8288 15
8289 14
8290 17
8291 26
8292 22
8293 17
8294 26
8295 22
8296 13
8297 16
8298 15
8299 15
8300 20
8301 18
8302 15
8303 20
8304 18
8305 13
8306 16
8307 15
8308 12
8309 21
8310 38
8311 30
8312 21
8313 38
8314 30
8315 14
8316 19
8317 17
8318 16
8319 23
8320 20
8321 16
8322 23
8323 20
8324 14
8325 19
8326 17
8327 15
8328 14
8329 12
8330 21
8331 38
8332 30
8333 21
8334 38
8335 30
8336 14
8337 19
8338 17
8339 16
8340 23
8341 20
8342 16
8343 23
8344 20
8345 14
8346 19
8347 17
8348 14
8349 12
8350 21
8351 38
8352 30
8353 21
8354 38
8355 30
8356 14
8357 19
8358 17
8359 16
8360 23
8361 20
8362 16
8363 23
8364 20
8365 14
8366 19
8367 17
8368 15
8369 14
8370 17
8371 26
8372 22
8373 17
8374 26
8375 22
8376 13
8377 16
8378 15
8379 15
8380 20
8381 18
8382 15
8383 20
8384 18
8385 13
8386 16
8387 15
8388 12
8389 21
8390 38
8391 30
8392 21
8393 38
8394 30
8395 14
8396 19
8397 17
8398 16
8399 23
8400 20
8401 16
8402 23
8403 20
8404 14
8405 19
8406 17
8407 15
8408 14
8409 6
8410 9
8411 18
8412 35
8413 27
8414 18
8415 35
8416 27
8417 11
8418 16
8419 14
8420 13
8421 20
8422 17
8423 13
8424 20
8425 17
8426 11
8427 16
8428 14
8429 12
8430 11
8431 9
8432 18
8433 35
8434 27
8435 18
8436 35
8437 27
8438 11
8439 16
8440 14
8441 13
8442 20
8443 17
8444 13
8445 20
8446 17
8447 11
8448 16
8449 14
8450 12
8451 11
8452 14
8453 23
8454 19
8455 14
8456 23
8457 10
8458 13
8459 12
8460 12
8461 17
8462 15
8463 12
8464 17
8465 15
8466 10
8467 13
8468 12
8469 9
8470 18
8471 35
8472 27
8473 18
8474 35
8475 27
8476 11
8477 16
8478 14
8479 13
8480 20
8481 17
8482 13
8483 20
8484 17
8485 11
8486 16
8487 14
8488 12
8489 11
8490 9
8491 18
8492 35
8493 27
8494 18
8495 35
8496 27
8497 11
8498 16
8499 14
8500 13
8501 20
8502 17
8503 13
8504 20
8505 17
8506 11
8507 16
8508 14
8509 12
8510 11
8511 9
8512 18
8513 18
8514 35
8515 27
8516 11
8517 16
8518 14
8519 13
8520 20
8521 17
8522 13
8523 20
8524 17
8525 11
8526 16
8527 14
8528 12
8529 11
8530 14
8531 19
8532 14
8533 23
8534 19
8535 10
8536 13
8537 12
8538 12
8539 17
8540 15
8541 12
8542 17
8543 15
8544 10
8545 13
8546 12
8547 18
8548 35
8549 27
8550 18
8551 35
8552 27
8553 11
8554 16
8555 14
8556 13
8557 20
8558 17
8559 13
8560 20
8561 17
8562 11
8563 16
8564 14
8565 12
8566 11
8567 11
8568 14
8569 23
8571 32
8572 23
8574 32
8575 16
8576 21
8577 19
8578 18
8579 25
8580 22
8581 18
8582 25
8583 22
8584 16
8585 21
8586 19
8587 17
8588 16
8589 14
8590 23
8592 32
8593 23
8595 32
8596 16
8597 19
8598 25
8599 22
8600 18
8601 25
8602 22
8603 16
8604 21
8605 19
8606 17
8607 16
8608 19
8609 28
8610 19
8611 28
8612 24
8613 15
8614 18
8615 17
8616 17
8617 22
8618 20
8619 17
8620 22
8621 15
8622 18
8623 17
8624 23
8626 32
8627 23
8629 32
8630 16
8631 21
8632 19
8633 18
8634 25
8635 22
8636 18
8637 25
8638 22
8639 16
8640 21
8641 19
8642 17
8643 16
8644 14
8645 23
8647 32
8648 23
8650 32
8651 16
8652 21
8653 18
8654 25
8655 22
8656 25
8657 22
8658 16
8659 21
8660 19
8661 17
8662 16
8663 14
8664 23
8666 32
8667 23
8669 32
8670 16
8671 21
8672 19
8673 18
8674 25
8675 22
8676 18
8677 25
8678 22
8679 16
8680 21
8681 19
8682 17
8683 16
8684 19
8685 28
8686 24
8687 19
8688 28
8689 24
8690 15
8691 18
8692 17
8693 17
8694 22
8695 20
8696 17
8697 22
8698 15
8699 18
8700 17
8701 14
8702 23
8704 32
8705 23
8707 32
8708 16
8709 21
8710 19
8711 25
8712 22
8713 18
8714 22
8715 16
8716 21
8717 19
8718 17
8719 16
8720 9
8721 12
8722 21
8723 38
8724 30
8725 21
8726 38
8727 14
8728 19
8729 17
8730 16
8731 23
8732 20
8733 16
8734 23
8735 20
8736 14
8737 19
8738 17
8739 15
8740 14
8741 12
8742 21
8743 38
8744 30
8745 21
8746 38
8747 30
8748 14
8749 19
8750 17
8751 16
8752 23
8753 20
8754 16
8755 23
8756 20
8757 14
8758 19
8759 17
8760 15
8761 14
8762 17
8763 26
8764 22
8765 17
8766 26
8767 22
8768 13
8769 16
8770 15
8771 15
8772 20
8773 18
8774 15
8775 20
8776 18
8777 13
8778 16
8779 15
8780 12
8781 21
8782 30
8783 21
8784 38
8785 30
8786 14
8787 19
8788 17
8789 16
8790 23
8791 20
8792 16
8793 23
8794 20
8795 14
8796 19
8797 17
8798 15
8799 14
8800 12
8801 21
8802 38
8803 30
8804 21
8805 38
8806 30
8807 14
8808 19
8809 17
8810 16
8811 23
8812 20
8813 16
8814 23
8815 20
8816 14
8817 19
8818 17
8819 15
8820 14
8821 12
8822 21
8823 38
8824 30
8825 21
8826 38
8827 30
8828 14
8829 17
8830 16
8831 23
8832 20
8833 16
8834 23
8835 20
8836 14
8837 19
8838 17
8839 15
8840 14
8841 17
8842 26
8843 22
8844 17
8845 26
8846 22
8847 13
8848 16
8849 15
8850 15
8851 20
8852 18
8853 15
8854 20
8855 18
8856 13
8857 16
8858 15
8859 12
8860 21
8861 38
8862 30
8863 21
8864 38
8865 30
8866 14
8867 19
8868 17
8869 16
8870 23
8871 20
8872 16
8873 23
8874 20
8875 14
8876 19
8877 17
8878 15
8879 14
8880 4
8881 7
8882 16
8883 33
8884 25
8885 16
8886 33
8887 25
8888 9
8889 14
8890 12
8891 11
8892 18
8893 15
8894 11
8895 18
8896 15
8897 9
8898 14
8899 12
8900 10
8901 9
8902 7
8903 16
8904 33
8905 25
8906 16
8907 25
8908 14
8909 12
8910 11
8911 18
8912 15
8913 11
8914 18
8915 15
8916 9
8917 14
8918 10
8919 12
8920 21
8921 17
8922 12
8923 21
8924 17
8925 8
8926 11
8927 10
8928 10
8929 15
8930 13
8931 10
8932 15
8933 13
8934 8
8935 11
8936 10
8937 7
8938 16
8939 33
8940 25
8941 16
8942 33
8943 25
8944 9
8945 14
8946 12
8947 11
8948 18
8949 15
8950 11
8951 18
8952 15
8953 14
8954 12
8955 10
8956 9
8957 7
8958 16
8959 33
8960 25
8961 16
8962 33
8963 25
8964 9
8965 12
8966 11
8967 18
8968 15
8969 11
8970 18
8971 15
8972 9
8973 14
8974 12
8975 10
8976 9
8977 7
8978 16
8979 33
8980 25
8981 16
8982 33
8983 25
8984 9
8985 14
8986 12
8987 11
8988 18
8989 15
8990 11
8991 18
8992 9
8993 14
8994 12
8995 10
8996 9
8997 12
8998 17
8999 12
9000 21
9001 17
9002 8
9003 11
9004 10
9005 10
9006 15
9007 13
9008 10
9009 15
9010 13
9011 8
9012 11
9013 10
9014 7
9015 16
9016 25
9017 16
9018 33
9019 25
9020 9
9021 14
9022 12
9023 11
9024 18
9025 15
9026 11
9027 18
9028 15
9029 9
9030 14
9031 10
9032 9
9033 7
9034 10
9035 19
9036 36
9037 28
9038 19
9039 36
9040 28
9041 12
9042 17
9043 15
9044 14
9045 21
9046 18
9047 14
9048 21
9049 18
9050 12
9051 17
9052 15
9053 13
9054 12
9055 10
9056 36
9057 28
9058 19
9059 36
9060 28
9061 12
9062 17
9063 15
9064 14
9065 21
9066 18
9067 14
9068 21
9069 18
9070 12
9071 17
9072 15
9073 13
9074 12
9075 15
9076 24
9077 20
9078 15
9079 24
9080 20
9081 11
9082 14
9083 13
9084 13
9085 18
9086 16
9087 13
9088 18
9089 16
9090 11
9091 14
9092 13
9093 10
9094 19
9095 36
9096 28
9097 19
9098 36
9099 28
9100 12
9101 15
9102 14
9103 21
9104 18
9105 14
9106 21
9107 18
9108 12
9109 17
9110 15
9111 13
9112 12
9113 10
9114 19
9115 36
9116 28
9117 19
9118 36
9119 28
9120 12
9121 17
9122 15
9123 14
9124 21
9125 18
9126 14
9127 21
9128 18
9129 12
9130 17
9131 15
9132 13
9133 12
9134 10
9135 19
9136 28
9137 19
9138 36
9139 28
9140 12
9141 17
9142 15
9143 14
9144 18
9145 14
9146 21
9147 18
9148 12
9149 17
9150 15
9151 13
9152 12
9153 24
9154 20
9155 15
9156 24
9157 20
9158 11
9159 14
9160 13
9161 18
9162 16
9163 13
9164 18
9165 16
9166 14
9167 13
9168 10
9169 19
9170 36
9171 28
9172 19
9173 36
9174 28
9175 12
9176 17
9177 15
9178 14
9179 21
9180 18
9181 14
9182 21
9183 18
9184 12
9185 17
9186 15
9187 13
9188 12
9189 6
9190 9
9191 18
9192 35
9193 27
9194 18
9195 35
9196 27
9197 11
9198 16
9199 14
9200 13
9201 20
9202 17
9203 13
9204 20
9205 17
9206 11
9207 16
9208 14
9209 12
9210 11
9211 9
9212 18
9213 35
9214 27
9215 18
9216 35
9217 27
9218 11
9219 16
9220 14
9221 13
9222 20
9223 17
9224 13
9225 17
9226 11
9227 16
9228 14
9229 11
9230 14
9231 23
9232 19
9233 14
9234 23
9235 10
9236 13
9237 12
9238 12
9239 17
9240 15
9241 12
9242 17
9243 15
9244 10
9245 13
9246 12
9247 9
9248 18
9249 35
9250 27
9251 18
9252 35
9253 27
9254 11
9255 16
9256 14
9257 13
9258 20
9259 17
9260 13
9261 20
9262 17
9263 11
9264 16
9265 14
9266 12
9267 11
9268 9
9269 18
9270 35
9271 27
9272 18
9273 35
9274 27
9275 11
9276 16
9277 14
9278 13
9279 20
9280 17
9281 20
9282 17
9283 11
9284 16
9285 14
9286 12
9287 11
9288 9
9289 18
9290 35
9291 27
9292 35
9293 27
9294 11
9295 16
9296 14
9297 13
9298 20
9299 17
9300 13
9301 20
9302 17
9303 11
9304 16
9305 14
9306 12
9307 11
9308 14
9309 23
9310 19
9311 14
9312 23
9313 19
9314 10
9315 13
9316 12
9317 12
9318 17
9319 15
9320 12
9321 17
9322 15
9323 10
9324 13
9325 12
9326 18
9327 35
9328 18
9329 35
9330 27
9331 11
9332 16
9333 14
9334 13
9335 20
9336 13
9337 20
9338 17
9339 11
9340 16
9341 12
9342 11
9343 3
9344 6
9345 15
9346 32
9347 24
9348 15
9349 32
9350 24
9351 8
9352 13
9353 11
9354 10
9355 17
9356 14
9357 10
9358 17
9359 14
9360 8
9361 13
9362 11
9363 9
9364 8
9365 6
9366 15
9367 32
9368 24
9369 15
9370 32
9371 24
9372 8
9373 13
9374 11
9375 10
9376 17
9377 14
9378 10
9379 17
9380 14
9381 8
9382 13
9383 11
9384 9
9385 8
9386 11
9387 20
9388 16
9389 11
9390 20
9391 16
9392 7
9393 10
9394 9
9395 14
9396 12
9397 9
9398 14
9399 12
9400 7
9401 10
9402 9
9403 6
9404 15
9405 32
9406 24
9407 15
9408 32
9409 8
9410 13
9411 11
9412 10
9413 17
9414 14
9415 10
9416 17
9417 14
9418 8
9419 13
9420 11
9421 9
9422 8
9423 6
9424 15
9425 32
9426 24
9427 15
9428 32
9429 24
9430 8
9431 13
9432 10
9433 17
9434 14
9435 10
9436 17
9437 14
9438 8
9439 13
9440 11
9441 9
9442 8
9443 6
9444 15
9445 32
9446 24
9447 15
9448 24
9449 8
9450 13
9451 11
9452 10
9453 17
9454 14
9455 10
9456 17
9457 14
9458 8
9459 13
9460 11
9461 9
9462 8
9463 11
9464 20
9465 16
9466 11
9467 20
9468 16
9469 7
9470 10
9471 9
9472 9
9473 14
9474 12
9475 14
9476 12
9477 7
9478 9
9479 6
9480 15
9481 32
9482 24
9483 15
9484 32
9485 24
9486 8
9487 13
9488 11
9489 10
9490 17
9491 14
9492 10
9493 17
9494 14
9495 8
9496 13
9497 9
9498 8
9499 12
9500 15
9501 24
9503 33
9504 24
9506 33
9507 17
9508 22
9509 20
9510 19
9511 26
9512 23
9513 19
9514 26
9515 23
9516 17
9517 22
9518 20
9519 18
9520 17
9521 15
9522 24
9524 24
9526 33
9527 17
9528 22
9529 20
9530 19
9531 26
9532 23
9533 19
9534 26
9535 17
9536 22
9537 20
9538 18
9539 17
9540 20
9541 29
9542 25
9543 29
9544 25
9545 16
9546 19
9547 18
9548 18
9549 23
9550 18
9551 23
9552 21
9553 16
9554 19
9555 18
9556 15
9557 24
9559 33
9560 24
9562 33
9563 17
9564 22
9565 20
9566 19
9567 26
9568 23
9569 19
9570 26
9571 23
9572 17
9573 22
9574 20
9575 18
9576 17
9577 15
9578 24
9580 33
9581 24
9583 33
9584 17
9585 22
9586 20
9587 19
9588 26
9589 23
9590 19
9591 26
9592 23
9593 17
9594 22
9595 20
9596 18
9597 17
9598 15
9599 24
9601 33
9602 24
9604 33
9605 17
9606 22
9607 20
9608 19
9609 26
9610 23
9611 19
9612 26
9613 23
9614 17
9615 22
9616 20
9617 18
9618 17
9619 20
9620 29
9621 25
9622 20
9623 29
9624 25
9625 16
9626 19
9627 18
9628 18
9629 23
9630 21
9631 18
9632 23
9633 21
9634 16
9635 19
9636 18
9637 15
9638 24
9640 33
9641 24
9643 33
9644 17
9645 20
9646 19
9647 26
9648 23
9649 19
9650 26
9651 23
9652 17
9653 22
9654 20
9655 18
9656 17
9657 29
9658 32
9664 34
9665 39
9666 37
9667 36
9670 36
9673 34
9674 37
9675 35
9676 34
9677 32
9684 34
9685 39
9686 37
9687 36
9690 36
9692 34
9693 39
9694 37
9695 35
9696 34
9697 37
9700 37
9702 33
9703 36
9704 35
9705 35
9708 38
9709 33
9710 36
9711 35
9712 32
9719 34
9720 39
9721 37
9722 36
9725 36
9728 34
9729 39
9730 37
9731 35
9732 34
9739 34
9740 39
9741 37
9742 36
9745 36
9748 34
9749 39
9750 37
9751 35
9752 34
9753 32
9760 34
9761 39
9762 37
9763 36
9766 36
9769 34
9770 39
9771 37
9772 35
9773 34
9774 37
9777 37
9780 33
9781 36
9782 35
9783 35
9785 38
9786 35
9788 38
9789 33
9790 36
9791 35
9792 32
9799 34
9800 39
9801 37
9802 36
9805 36
9808 34
9809 39
9810 37
9811 35
9812 34
9813 21
9814 24
9815 33
9818 33
9821 26
9822 31
9823 29
9824 28
9825 35
9826 32
9827 28
9828 32
9829 26
9830 31
9831 29
9832 27
9833 24
9834 33
9837 33
9840 26
9841 31
9842 29
9843 28
9844 35
9845 32
9846 28
9847 35
9848 32
9849 26
9850 31
9851 29
9852 27
9853 26
9854 29
9855 38
9856 34
9857 29
9858 38
9859 34
9860 25
9861 28
9862 27
9863 27
9864 32
9865 27
9866 32
9867 30
9868 25
9869 28
9870 27
9871 24
9872 33
9874 33
9877 26
9878 31
9879 29
9880 28
9881 32
9882 28
9883 35
9884 32
9885 26
9886 31
9887 29
9888 27
9889 26
9890 24
9891 33
9894 33
9897 26
9898 31
9899 29
9900 28
9901 35
9902 32
9903 28
9904 35
9905 32
9906 26
9907 31
9908 29
9909 27
9910 26
9911 24
9912 33
9915 33
9918 26
9919 31
9920 29
9921 28
9922 35
9923 32
9924 35
9925 32
9926 26
9927 31
9928 29
9929 27
9930 26
9931 29
9932 38
9933 34
9934 29
9935 38
9936 34
9937 25
9938 28
9939 27
9940 27
9941 32
9942 30
9943 27
9944 32
9945 30
9946 25
9947 28
9948 27
9949 24
9950 33
9953 33
9956 26
9957 31
9958 29
9959 28
9960 35
9961 32
9962 28
9963 35
9964 32
9965 26
9966 31
9967 29
9968 27
9969 26
9970 12
9971 15
9972 24
9974 33
9975 24
9977 33
9978 17
9979 22
9980 20
9981 19
9982 26
9983 23
9984 19
9985 23
9986 17
9987 22
9988 20
9989 18
9990 17
9991 15
9992 24
9994 33
9995 24
9997 33
9998 17
9999 22
10000 20
10001 19
10002 26
10003 23
10004 19
10005 26
10006 23
10007 17
10008 22
10009 20
10010 18
10011 17
10012 20
10013 29
10014 25
10015 20
10016 25
10017 16
10018 19
10019 18
10020 18
10021 23
10022 21
10023 18
10024 23
10025 21
10026 16
10027 19
10028 18
10029 15
10030 24
10031 33
10032 24
10034 33
10035 17
10036 22
10037 20
10038 19
10039 26
10040 23
10041 19
10042 26
10043 23
10044 17
10045 22
10046 18
10047 17
10048 24
10050 33
10051 24
10053 33
10054 17
10055 22
10056 20
10057 19
10058 26
10059 23
10060 19
10061 26
10062 23
10063 17
10064 22
10065 20
10066 18
10067 17
10068 15
10069 24
10071 33
10072 24
10074 33
10075 17
10076 22
10077 20
10078 19
10079 26
10080 23
10081 19
10082 26
10083 23
10084 17
10085 22
10086 18
10087 17
10088 20
10089 29
10090 25
10091 20
10092 29
10093 25
10094 16
10095 19
10096 18
10097 18
10098 23
10099 21
10100 18
10101 23
10102 21
10103 16
10104 19
10105 18
10106 15
10107 24
10109 33
10110 24
10112 33
10113 17
10114 22
10115 20
10116 19
10117 26
10118 23
10119 19
10120 26
10121 23
10122 17
10123 22
10124 20
10125 17
10126 29
10132 34
10133 39
10134 37
10135 36
10138 36
10141 34
10142 39
10143 37
10144 35
10145 34
10146 32
10153 34
10154 39
10155 37
10156 36
10159 36
10162 34
10163 39
10164 37
10165 35
10166 34
10167 37
10170 37
10173 33
10174 36
10175 35
10176 35
10178 35
10180 38
10181 33
10182 36
10183 35
10184 32
10190 34
10191 39
10192 37
10195 36
10198 34
10199 39
10200 37
10201 35
10202 34
10203 32
10209 34
10210 39
10211 37
10212 36
10215 36
10218 34
10219 39
10220 37
10221 35
10222 34
10223 32
10230 34
10231 39
10232 37
10233 36
10236 36
10239 34
10240 39
10241 35
10242 34
10243 37
10246 37
10249 33
10250 36
10251 35
10252 35
10254 38
10255 35
10256 38
10257 33
10258 36
10259 35
10260 32
10267 34
10268 39
10269 37
10270 36
10273 36
10276 34
10277 39
10278 37
10279 35
10280 34
10281 21
10282 24
10283 33
10286 33
10289 26
10290 31
10291 29
10292 28
10293 35
10294 32
10295 28
10296 35
10297 32
10298 26
10299 31
10300 29
10301 27
10302 26
10303 24
10304 33
10307 33
10310 26
10311 31
10312 29
10313 28
10314 35
10315 32
10316 28
10317 35
10318 32
10319 26
10320 31
10321 29
10322 27
10323 26
10324 29
10325 38
10326 34
10327 29
10328 38
10329 34
10330 25
10331 28
10332 27
10333 27
10334 32
10335 30
10336 27
10337 32
10338 30
10339 25
10340 28
10341 27
10342 24
10343 33
10346 33
10348 26
10349 31
10350 29
10351 28
10352 35
10353 32
10354 28
10355 35
10356 32
10357 26
10358 31
10359 29
10360 27
10361 26
10362 24
10363 33
10366 33
10369 26
10370 31
10371 29
10372 28
10373 35
10374 32
10375 35
10376 32
10377 26
10378 31
10379 29
10380 27
10381 26
10382 24
10383 33
10386 33
10389 26
10390 31
10391 28
10392 35
10393 32
10394 28
10395 35
10396 32
10397 26
10398 29
10399 27
10400 26
10401 29
10402 38
10403 34
10404 29
10405 38
10406 34
10407 25
10408 27
10409 27
10410 32
10411 30
10412 27
10413 32
10414 30
10415 25
10416 28
10417 27
10418 24
10419 33
10422 33
10425 26
10426 31
10427 29
10428 28
10429 35
10430 32
10431 28
10432 35
10433 32
10434 26
10435 31
10436 29
10437 27
10438 26
10439 5
10440 8
10441 17
10442 34
10443 26
10444 17
10445 34
10446 26
10447 10
10448 15
10449 19
10450 16
10451 12
10452 19
10453 16
10454 10
10455 15
10456 13
10457 11
10458 10
10459 8
10460 17
10461 34
10462 26
10463 17
10464 34
10465 26
10466 15
10467 13
10468 12
10469 19
10470 12
10471 19
10472 16
10473 10
10474 15
10475 13
10476 11
10477 10
10478 13
10479 22
10480 18
10481 13
10482 22
10483 18
10484 9
10485 12
10486 11
10487 11
10488 16
10489 14
10490 11
10491 16
10492 9
10493 12
10494 11
10495 8
10496 17
10497 34
10498 26
10499 17
10500 34
10501 26
10502 10
10503 15
10504 13
10505 12
10506 19
10507 16
10508 12
10509 19
10510 16
10511 10
10512 15
10513 13
10514 11
10515 10
10516 8
10517 17
10518 34
10519 26
10520 17
10521 34
10522 26
10523 10
10524 15
10525 13
10526 12
10527 19
10528 16
10529 12
10530 19
10531 16
10532 10
10533 15
10534 13
10535 11
10536 10
10537 8
10538 17
10539 34
10540 26
10541 17
10542 34
10543 26
10544 10
10545 15
10546 13
10547 12
10548 19
10549 16
10550 12
10551 19
10552 16
10553 10
10554 15
10555 13
10556 11
10557 10
10558 13
10559 22
10560 18
10561 13
10562 22
10563 18
10564 9
10565 12
10566 11
10567 11
10568 16
10569 14
10570 11
10571 16
10572 14
10573 9
10574 12
10575 11
10576 8
10577 17
10578 34
10579 26
10580 17
10581 34
10582 26
10583 10
10584 15
10585 12
10586 19
10587 16
10588 12
10589 19
10590 16
10591 10
10592 15
10593 13
10594 11
10595 10
10596 10
10597 13
10598 22
10599 39
10600 31
10601 22
10602 39
10603 31
10604 15
10605 20
10606 18
10607 17
10608 24
10609 21
10610 17
10611 24
10612 21
10613 20
10614 18
10615 16
10616 22
10617 31
10618 22
10619 39
10620 31
10621 15
10622 20
10623 18
10624 24
10625 21
10626 17
10627 24
10628 21
10629 15
10630 20
10631 18
10632 16
10633 15
10634 18
10635 27
10636 23
10637 18
10638 27
10639 23
10640 14
10641 17
10642 16
10643 16
10644 21
10645 19
10646 16
10647 21
10648 19
10649 14
10650 17
10651 16
10652 13
10653 22
10654 39
10655 31
10656 22
10657 39
10658 31
10659 15
10660 20
10661 18
10662 17
10663 24
10664 21
10665 17
10666 24
10667 21
10668 15
10669 20
10670 18
10671 16
10672 15
10673 22
10674 39
10675 31
10676 22
10677 39
10678 31
10679 15
10680 20
10681 18
10682 17
10683 24
10684 21
10685 17
10686 24
10687 21
10688 15
10689 20
10690 18
10691 16
10692 15
10693 13
10694 39
10695 31
10696 22
10697 39
10698 31
10699 15
10700 20
10701 18
10702 17
10703 24
10704 21
10705 17
10706 24
10707 21
10708 15
10709 20
10710 18
10711 16
10712 15
10713 18
10714 27
10715 23
10716 18
10717 27
10718 23
10719 14
10720 17
10721 16
10722 16
10723 21
10724 16
10725 21
10726 19
10727 14
10728 16
10729 13
10730 22
10731 39
10732 31
10733 22
10734 39
10735 31
10736 15
10737 20
10738 18
10739 17
10740 24
10741 21
10742 24
10743 21
10744 15
10745 20
10746 18
10747 16
10748 15
10749 8
10750 11
10751 20
10752 37
10753 29
10754 20
10755 37
10756 29
10757 13
10758 18
10759 16
10760 15
10761 22
10762 19
10763 15
10764 22
10765 19
10766 13
10767 18
10768 16
10769 14
10770 13
10771 11
10772 20
10773 37
10774 29
10775 20
10776 37
10777 29
10778 13
10779 18
10780 16
10781 15
10782 22
10783 19
10784 15
10785 22
10786 19
10787 13
10788 18
10789 16
10790 14
10791 13
10792 16
10793 25
10794 21
10795 16
10796 25
10797 21
10798 12
10799 15
10800 14
10801 14
10802 19
10803 17
10804 14
10805 19
10806 17
10807 12
10808 15
10809 14
10810 11
10811 20
10812 37
10813 29
10814 37
10815 29
10816 13
10817 18
10818 16
10819 15
10820 22
10821 19
10822 15
10823 22
10824 19
10825 13
10826 18
10827 16
10828 13
10829 11
10830 20
10831 37
10832 29
10833 20
10834 37
10835 29
10836 13
10837 18
10838 16
10839 15
10840 22
10841 19
10842 15
10843 22
10844 19
10845 13
10846 18
10847 16
10848 14
10849 13
10850 11
10851 20
10852 37
10853 29
10854 20
10855 37
10856 29
10857 13
10858 18
10859 16
10860 15
10861 22
10862 19
10863 15
10864 22
10865 19
10866 13
10867 18
10868 16
10869 14
10870 13
10871 16
10872 25
10873 21
10874 16
10875 25
10876 21
10877 12
10878 15
10879 14
10880 14
10881 19
10882 17
10883 14
10884 19
10885 17
10886 12
10887 15
10888 14
10889 11
10890 20
10891 37
10892 29
10893 20
10894 37
10895 29
10896 13
10897 16
10898 15
10899 22
10900 19
10901 15
10902 22
10903 19
10904 13
10905 18
10906 14
10907 7
10908 10
10909 19
10910 36
10911 28
10912 19
10913 36
10914 28
10915 12
10916 17
10917 15
10918 21
10919 18
10920 14
10921 21
10922 18
10923 12
10924 17
10925 15
10926 13
10927 10
10928 19
10929 36
10930 28
10931 19
10932 36
10933 28
10934 17
10935 15
10936 14
10937 21
10938 18
10939 14
10940 21
10941 18
10942 12
10943 17
10944 15
10945 13
10946 12
10947 15
10948 24
10949 20
10950 15
10951 24
10952 20
10953 11
10954 14
10955 13
10956 13
10957 18
10958 16
10959 13
10960 18
10961 16
10962 11
10963 14
10964 13
10965 10
10966 19
10967 36
10968 28
10969 19
10970 36
10971 28
10972 12
10973 17
10974 15
10975 14
10976 21
10977 14
10978 21
10979 18
10980 12
10981 17
10982 15
10983 13
10984 12
10985 10
10986 19
10987 36
10988 28
10989 19
10990 36
10991 28
10992 12
10993 17
10994 15
10995 14
10996 21
10997 18
10998 14
10999 21
11000 18
11001 12
11002 17
11003 15
11004 13
11005 12
11006 10
11007 19
11008 36
11009 28
11010 19
11011 36
11012 28
11013 12
11014 17
11015 15
11016 14
11017 21
11018 18
11019 14
11020 21
11021 18
11022 12
11023 17
11024 15
11025 13
11026 12
11027 15
11028 24
11029 20
11030 15
11031 24
11032 20
11033 11
11034 14
11035 13
11036 13
11037 18
11038 16
11039 13
11040 18
11041 16
11042 11
11043 14
11044 13
11045 10
11046 19
11047 36
11048 28
11049 19
11050 36
11051 28
11052 12
11053 17
11054 15
11055 14
11056 21
11057 18
11058 14
11059 21
11060 18
11061 12
11062 17
11063 15
11064 13
11065 12
11066 14
11067 17
11068 26
11069 35
11070 26
11072 35
11073 19
11074 24
11075 22
11076 21
11077 28
11078 25
11079 21
11080 25
11081 19
11082 24
11083 20
11084 19
11085 17
11086 26
11088 35
11089 26
11091 35
11092 19
11093 24
11094 22
11095 21
11096 28
11097 25
11098 21
11099 28
11100 25
11101 24
11102 22
11103 19
11104 22
11105 31
11106 27
11107 22
11108 31
11109 27
11110 18
11111 21
11112 20
11113 20
11114 25
11115 23
11116 20
11117 25
11118 23
11119 18
11120 21
11121 20
11122 17
11123 26
11125 35
11126 26
11128 35
11129 19
11130 24
11131 22
11132 21
11133 28
11134 25
11135 21
11136 28
11137 25
11138 24
11139 22
11140 20
11141 19
11142 17
11143 26
11145 35
11146 26
11148 35
11149 19
11150 24
11151 21
11152 28
11153 25
11154 21
11155 28
11156 25
11157 19
11158 24
11159 22
11160 20
11161 19
11162 17
11163 26
11165 35
11166 26
11168 35
11169 19
11170 24
11171 22
11172 21
11173 28
11174 25
11175 21
11176 28
11177 25
11178 19
11179 24
11180 22
11181 20
11182 22
11183 31
11184 31
11185 27
11186 18
11187 21
11188 20
11189 20
11190 25
11191 23
11192 20
11193 25
11194 23
11195 18
11196 21
11197 20
11198 17
11199 26
11201 35
11202 26
11204 19
11205 24
11206 22
11207 21
11208 28
11209 25
11210 21
11211 28
11212 25
11213 19
11214 24
11215 22
11216 20
11217 19
11218 11
11219 14
11220 23
11222 32
11223 23
11225 32
11226 16
11227 21
11228 19
11229 18
11230 25
11231 22
11232 18
11233 25
11234 22
11235 16
11236 19
11237 17
11238 16
11239 14
11240 23
11242 32
11243 23
11245 32
11246 16
11247 21
11248 19
11249 18
11250 25
11251 18
11252 25
11253 22
11254 16
11255 21
11256 19
11257 17
11258 16
11259 19
11260 28
11261 24
11262 19
11263 28
11264 24
11265 15
11266 18
11267 17
11268 17
11269 22
11270 20
11271 17
11272 22
11273 20
11274 15
11275 18
11276 14
11277 23
11279 32
11280 23
11282 32
11283 16
11284 21
11285 19
11286 18
11287 25
11288 22
11289 18
11290 25
11291 22
11292 16
11293 21
11294 19
11295 17
11296 16
11297 14
11298 23
11300 32
11301 23
11303 32
11304 16
11305 21
11306 19
11307 18
11308 25
11309 22
11310 18
11311 25
11312 22
11313 16
11314 21
11315 19
11316 17
11317 16
11318 14
11319 23
11321 23
11323 32
11324 16
11325 21
11326 19
11327 18
11328 25
11329 22
11330 18
11331 25
11332 22
11333 16
11334 21
11335 19
11336 17
11337 16
11338 19
11339 28
11340 24
11341 19
11342 28
11343 24
11344 15
11345 18
11346 17
11347 17
11348 22
11349 20
11350 17
11351 22
11352 20
11353 15
11354 18
11355 17
11356 14
11357 23
11359 32
11360 23
11361 32
11362 16
11363 19
11364 25
11365 22
11366 18
11367 25
11368 22
11369 16
11370 19
11371 17
11372 16
11373 7
11374 10
11375 19
11376 36
11377 28
11378 19
11379 36
11380 28
11381 12
11382 17
11383 15
11384 14
11385 21
11386 18
11387 14
11388 21
11389 18
11390 12
11391 17
11392 13
11393 12
11394 19
11395 36
11396 28
11397 19
11398 36
11399 28
11400 12
11401 17
11402 15
11403 14
11404 21
11405 18
11406 14
11407 21
11408 18
11409 12
11410 17
11411 15
11412 13
11413 12
11414 15
11415 24
11416 20
11417 15
11418 24
11419 20
11420 11
11421 14
11422 13
11423 13
11424 18
11425 13
11426 18
11427 16
11428 11
11429 14
11430 13
11431 19
11432 36
11433 19
11434 36
11435 28
11436 12
11437 17
11438 15
11439 14
11440 21
11441 18
11442 14
11443 21
11444 18
11445 12
11446 17
11447 15
11448 13
11449 12
11450 10
11451 19
11452 36
11453 28
11454 19
11455 36
11456 28
11457 12
11458 17
11459 15
11460 14
11461 18
11462 14
11463 21
11464 18
11465 12
11466 17
11467 15
11468 13
11469 10
11470 19
11471 36
11472 28
11473 19
11474 28
11475 12
11476 17
11477 15
11478 14
11479 21
11480 18
11481 14
11482 21
11483 18
11484 12
11485 15
11486 13
11487 12
11488 15
11489 24
11490 20
11491 15
11492 24
11493 20
11494 11
11495 14
11496 13
11497 13
11498 18
11499 16
11500 13
11501 18
11502 16
11503 11
11504 14
11505 13
11506 10
11507 19
11508 36
11509 28
11510 19
11511 36
11512 28
11513 12
11514 17
11515 15
11516 14
11517 21
11518 18
11519 14
11520 21
11521 18
11522 12
11523 17
11524 15
11525 13
11526 14
11527 17
11528 26
11530 35
11531 26
11533 35
11534 19
11535 24
11536 22
11537 21
11538 28
11539 25
11540 21
11541 28
11542 25
11543 19
11544 22
11545 20
11546 19
11547 17
11548 26
11550 35
11551 26
11553 35
11554 19
11555 24
11556 22
11557 21
11558 28
11559 25
11560 21
11561 28
11562 25
11563 19
11564 24
11565 22
11566 20
11567 19
11568 22
11569 31
11570 27
11571 22
11572 31
11573 27
11574 18
11575 21
11576 20
11577 20
11578 25
11579 23
11580 20
11581 25
11582 23
11583 18
11584 21
11585 20
11586 17
11587 26
11589 35
11590 26
11591 35
11592 19
11593 24
11594 22
11595 21
11596 28
11597 25
11598 21
11599 28
11600 25
11601 19
11602 24
11603 22
11604 20
11605 19
11606 17
11607 26
11609 35
11610 26
11612 35
11613 19
11614 24
11615 22
11616 28
11617 25
11618 28
11619 25
11620 19
11621 24
11622 19
11623 17
11624 26
11626 35
11627 26
11629 35
11630 19
11631 24
11632 22
11633 21
11634 28
11635 25
11636 21
11637 28
11638 25
11639 19
11640 24
11641 22
11642 20
11643 19
11644 31
11645 27
11646 31
11647 27
11648 18
11649 21
11650 20
11651 20
11652 25
11653 20
11654 25
11655 23
11656 18
11657 21
11658 20
11659 17
11660 26
11662 35
11663 26
11665 35
11666 19
11667 24
11668 22
11669 21
11670 28
11671 25
11672 21
11673 28
11674 25
11675 19
11676 24
11677 22
11678 20
11679 19
11680 11
11681 14
11682 23
11684 32
11685 23
11686 32
11687 16
11688 21
11689 19
11690 18
11691 25
11692 22
11693 18
11694 22
11695 16
11696 21
11697 19
11698 17
11699 16
11700 14
11701 23
11703 23
11705 32
11706 16
11707 21
11708 19
11709 18
11710 25
11711 22
11712 18
11713 25
11714 22
11715 16
11716 21
11717 19
11718 17
11719 16
11720 19
11721 28
11722 24
11723 19
11724 28
11725 24
11726 15
11727 18
11728 17
11729 17
11730 22
11731 20
11732 17
11733 22
11734 20
11735 15
11736 18
11737 17
11738 14
11739 23
11741 32
11742 23
11744 32
11745 16
11746 21
11747 19
11748 18
11749 25
11750 22
11751 18
11752 25
11753 22
11754 16
11755 21
11756 19
11757 17
11758 16
11759 14
11761 32
11762 23
11764 32
11765 16
11766 21
11767 19
11768 18
11769 25
11770 22
11771 18
11772 22
11773 16
11774 21
11775 19
11776 17
11777 16
11778 14
11779 23
11781 32
11782 23
11784 32
11785 16
11786 21
11787 18
11788 25
11789 22
11790 18
11791 25
11792 22
11793 16
11794 21
11795 19
11796 17
11797 19
11798 28
11799 24
11800 19
11801 24
11802 15
11803 18
11804 17
11805 17
11806 22
11807 20
11808 17
11809 22
11810 20
11811 15
11812 18
11813 14
11814 23
11816 32
11817 23
11819 32
11820 16
11821 21
11822 19
11823 18
11824 25
11825 22
11826 18
11827 25
11828 22
11829 16
11830 21
11831 19
11832 17
11833 16
11834 5
11835 8
11836 17
11837 34
11838 26
11839 17
11840 34
11841 26
11842 10
11843 15
11844 13
11845 12
11846 19
11847 16
11848 12
11849 19
11850 16
11851 10
11852 15
11853 13
11854 11
11855 8
11856 17
11857 34
11858 26
11859 17
11860 34
11861 26
11862 10
11863 15
11864 13
11865 12
11866 19
11867 16
11868 12
11869 19
11870 15
11871 13
11872 11
11873 10
11874 13
11875 22
11876 18
11877 13
11878 22
11879 18
11880 9
11881 12
11882 11
11883 11
11884 16
11885 14
11886 11
11887 16
11888 14
11889 9
11890 12
11891 11
11892 8
11893 17
11894 34
11895 26
11896 17
11897 34
11898 26
11899 10
11900 15
11901 13
11902 12
11903 19
11904 12
11905 19
11906 16
11907 10
11908 15
11909 13
11910 11
11911 10
11912 8
11913 17
11914 34
11915 17
11916 34
11917 26
11918 10
11919 15
11920 13
11921 12
11922 19
11923 16
11924 12
11925 19
11926 16
11927 10
11928 15
11929 13
11930 11
11931 10
11932 8
11933 17
11934 34
11935 26
11936 17
11937 34
11938 26
11939 10
11940 15
11941 13
11942 12
11943 19
11944 16
11945 12
11946 19
11947 16
11948 15
11949 11
11950 10
11951 13
11952 22
11953 18
11954 13
11955 22
11956 18
11957 9
11958 12
11959 11
11960 11
11961 16
11962 14
11963 11
11964 16
11965 14
11966 9
11967 12
11968 11
11969 8
11970 17
11971 34
11972 26
11973 17
11974 34
11975 26
11976 10
11977 15
11978 13
11979 12
11980 19
11981 16
11982 19
11983 16
11984 10
11985 15
11986 13
11987 11
11988 10
11989 10
11990 13
11991 22
11992 39
11993 31
11994 22
11995 39
11996 31
11997 15
11998 20
11999 18
12000 17
12001 24
12002 21
12003 17
12004 24
12005 21
12006 15
12007 20
12008 18
12009 16
12010 15
12011 13
12012 22
12013 39
12014 31
12015 22
12016 39
12017 31
12018 15
12019 20
12020 18
12021 17
12022 24
12023 21
12024 17
12025 24
12026 21
12027 15
12028 18
12029 16
12030 15
12031 18
12032 27
12033 23
12034 18
12035 27
12036 23
12037 14
12038 17
12039 16
12040 16
12041 21
12042 19
12043 16
12044 21
12045 19
12046 14
12047 17
12048 16
12049 13
12050 22
12051 39
12052 31
12053 22
12054 39
12055 31
12056 15
12057 20
12058 18
12059 17
12060 24
12061 21
12062 17
12063 24
12064 21
12065 15
12066 20
12067 18
12068 16
12069 15
12070 13
12071 22
12072 39
12073 31
12074 22
12075 39
12076 31
12077 15
12078 20
12079 18
12080 17
12081 24
12082 21
12083 17
12084 24
12085 21
12086 15
12087 20
12088 16
12089 15
12090 13
12091 22
12092 39
12093 31
12094 22
12095 39
12096 31
12097 15
12098 20
12099 18
12100 17
12101 24
12102 21
12103 17
12104 24
12105 21
12106 15
12107 20
12108 18
12109 16
12110 15
12111 18
12112 27
12113 23
12114 18
12115 27
12116 23
12117 14
12118 16
12119 16
12120 21
12121 19
12122 16
12123 21
12124 19
12125 14
12126 17
12127 16
12128 13
12129 22
12130 39
12131 31
12132 22
12133 39
12134 31
12135 15
12136 18
12137 17
12138 24
12139 21
12140 17
12141 24
12142 21
12143 15
12144 20
12145 18
12146 16
12147 15
12148 11
12149 20
12150 37
12151 29
12152 20
12153 37
12154 29
12155 13
12156 18
12157 16
12158 15
12159 22
12160 19
12161 15
12162 22
12163 19
12164 13
12165 18
12166 16
12167 14
12168 13
12169 11
12170 20
12171 37
12172 29
12173 20
12174 37
12175 29
12176 13
12177 18
12178 16
12179 15
12180 22
12181 19
12182 15
12183 22
12184 19
12185 13
12186 18
12187 16
12188 14
12189 13
12190 16
12191 25
12192 21
12193 16
12194 25
12195 21
12196 12
12197 15
12198 14
12199 14
12200 19
12201 17
12202 14
12203 19
12204 17
12205 12
12206 15
12207 14
12208 11
12209 20
12210 37
12211 29
12212 20
12213 37
12214 29
12215 13
12216 18
12217 16
12218 15
12219 22
12220 19
12221 15
12222 22
12223 19
12224 13
12225 18
12226 16
12227 14
12228 13
12229 11
12230 20
12231 37
12232 29
12233 20
12234 37
12235 29
12236 13
12237 18
12238 16
12239 15
12240 22
12241 19
12242 15
12243 22
12244 19
12245 13
12246 18
12247 16
12248 14
12249 13
12250 11
12251 20
12252 37
12253 29
12254 20
12255 37
12256 29
12257 13
12258 18
12259 16
12260 15
12261 22
12262 19
12263 15
12264 22
12265 19
12266 13
12267 18
12268 16
12269 14
12270 13
12271 16
12272 25
12273 21
12274 16
12275 25
12276 21
12277 12
12278 15
12279 14
12280 14
12281 19
12282 17
12283 14
12284 19
12285 17
12286 12
12287 15
12288 14
12289 11
12290 20
12291 37
12292 29
12293 20
12294 37
12295 13
12296 18
12297 16
12298 15
12299 22
12300 19
12301 15
12302 22
12303 19
12304 13
12305 18
12306 16
12307 14
12308 13
12309 6
12310 9
12311 18
12312 35
12313 27
12314 18
12315 35
12316 11
12317 16
12318 14
12319 13
12320 20
12321 17
12322 13
12323 20
12324 17
12325 11
12326 16
12327 14
12328 12
12329 11
12330 9
12331 18
12332 35
12333 27
12334 18
12335 35
12336 27
12337 11
12338 16
12339 14
12340 13
12341 20
12342 17
12343 13
12344 20
12345 17
12346 11
12347 16
12348 14
12349 12
12350 11
12351 14
12352 23
12353 19
12354 14
12355 23
12356 19
12357 10
12358 13
12359 12
12360 12
12361 17
12362 15
12363 17
12364 15
12365 10
12366 13
12367 12
12368 9
12369 18
12370 35
12371 27
12372 18
12373 35
12374 27
12375 11
12376 16
12377 14
12378 13
12379 20
12380 17
12381 13
12382 20
12383 17
12384 11
12385 16
12386 14
12387 11
12388 9
12389 18
12390 35
12391 27
12392 18
12393 35
12394 27
12395 11
12396 16
12397 14
12398 13
12399 20
12400 17
12401 13
12402 20
12403 17
12404 11
12405 14
12406 12
12407 11
12408 9
12409 18
12410 35
12411 27
12412 18
12413 35
12414 27
12415 11
12416 16
12417 14
12418 13
12419 20
12420 17
12421 13
12422 20
12423 17
12424 11
12425 14
12426 12
12427 11
12428 14
12429 23
12430 19
12431 14
12432 23
12433 19
12434 10
12435 13
12436 12
12437 12
12438 17
12439 15
12440 12
12441 15
12442 10
12443 13
12444 12
12445 9
12446 18
12447 35
12448 27
12449 18
12450 35
12451 27
12452 16
12453 14
12454 13
12455 20
12456 17
12457 13
12458 20
12459 17
12460 11
12461 16
12462 14
12463 12
12464 11
12465 5
12466 8
12467 17
12468 34
12469 26
12470 17
12471 34
12472 26
12473 10
12474 15
12475 13
12476 12
12477 19
12478 16
12479 12
12480 19
12481 16
12482 10
12483 15
12484 13
12485 11
12486 10
12487 8
12488 17
12489 34
12490 26
12491 17
12492 34
12493 26
12494 10
12495 15
12496 13
12497 12
12498 19
12499 16
12500 12
12501 19
12502 16
12503 10
12504 15
12505 13
12506 11
12507 10
12508 13
12509 22
12510 18
12511 13
12512 22
12513 18
12514 9
12515 12
12516 11
12517 11
12518 16
12519 11
12520 16
12521 14
12522 9
12523 12
12524 11
12525 8
12526 17
12527 34
12528 26
12529 17
12530 34
12531 26
12532 10
12533 15
12534 13
12535 12
12536 19
12537 16
12538 12
12539 19
12540 16
12541 10
12542 15
12543 13
12544 11
12545 10
12546 8
12547 17
12548 34
12549 26
12550 17
12551 34
12552 26
12553 10
12554 15
12555 13
12556 12
12557 19
12558 16
12559 12
12560 19
12561 16
12562 10
12563 15
12564 13
12565 11
12566 10
12567 8
12568 17
12569 34
12570 26
12571 17
12572 34
12573 26
12574 10
12575 15
12576 13
12577 12
12578 19
12579 16
12580 19
12581 16
12582 10
12583 15
12584 13
12585 11
12586 10
12587 13
12588 22
12589 18
12590 13
12591 22
12592 18
12593 9
12594 12
12595 11
12596 11
12597 16
12598 14
12599 11
12600 16
12601 14
12602 9
12603 12
12604 11
12605 8
12606 17
12607 34
12608 26
12609 34
12610 26
12611 10
12612 15
12613 13
12614 12
12615 19
12616 16
12617 12
12618 19
12619 16
12620 10
12621 15
12622 13
12623 11
12624 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
turn opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

1
WUG0 left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

2
WUG0 opposite right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

3
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

4
WUG0 opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

5
WUG0 and WUG0 opposite right WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite right
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

6
WUG0 around left twice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

7
WUG0 opposite left twice and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

8
WUG0 left twice and turn right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

9
WUG0 thrice and WUG0 around left twice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

10
WUG0 around right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

11
WUG0 left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

12
WUG0 right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

13
turn around left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

14
turn left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

15
turn opposite right twice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

16
turn around left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

17
WUG0 left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

18
turn opposite right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

19
WUG0 twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

20
turn left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

21
WUG0 opposite right twice and turn left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

22
WUG0 opposite right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

23
turn opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

24
turn opposite left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

25
WUG0 opposite right twice and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

26
WUG0 left thrice and WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

27
WUG0 around left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

28
turn around left twice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

29
WUG0 opposite left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

30
WUG0 around right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

31
turn opposite right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

32
turn around right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

33
WUG0 opposite left thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

34
WUG0 right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

35
turn left twice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

36
WUG0 opposite right twice and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

37
turn around left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

38
turn opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

39
WUG0 thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

40
WUG0 opposite left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

41
WUG0 twice and turn opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

42
turn opposite left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

43
WUG0 around right and WUG0 opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

44
WUG0 around right twice and turn left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

45
WUG0 right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

46
WUG0 thrice and turn left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

47
turn around left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

48
WUG0 opposite left after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

49
WUG0 twice after turn left I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left
--
I_TURN_LEFT I_JUMP I_JUMP

50
WUG0 left twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

51
WUG0 after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

52
turn around left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

53
WUG0 opposite right thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

54
WUG0 opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

55
WUG0 thrice and WUG0 around left thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

56
turn around left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

57
WUG0 opposite left after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

58
WUG0 opposite left thrice after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

59
turn left and WUG0 around right thrice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

60
WUG0 around right twice and WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

61
turn left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

62
WUG0 thrice and turn right WUG1 WUG1 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT

63
WUG0 around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

64
turn opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

65
turn around left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

66
WUG0 left twice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

67
WUG0 left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

68
WUG0 around left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

69
WUG0 opposite right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

70
WUG0 right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

71
turn left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

72
WUG0 right and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

73
WUG0 opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

74
turn opposite right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

75
turn opposite right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

76
WUG0 opposite right thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

77
turn left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

78
WUG0 right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

79
WUG0 twice after WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

80
WUG0 opposite right thrice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

81
turn left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

82
WUG0 right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

83
turn opposite left and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

84
WUG0 around right thrice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

85
turn opposite left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

86
turn opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

87
turn around right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

88
turn around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

89
turn left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

90
WUG0 opposite left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

91
WUG0 after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

92
WUG0 around right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

93
turn around left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

94
turn opposite left twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

95
turn right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

96
WUG0 left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

97
WUG0 thrice and WUG0 opposite left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

98
WUG0 around right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

99
WUG0 twice and WUG0 opposite right thrice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

100
turn opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

101
WUG0 right twice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

102
WUG0 twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

103
turn right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

104
turn right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

105
turn right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

106
WUG0 right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

107
WUG0 right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT

108
turn around right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

109
WUG0 around right and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

110
WUG0 opposite left thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

111
WUG0 opposite right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

112
turn right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

113
WUG0 opposite right thrice and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

114
WUG0 twice and turn around left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

115
turn around right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

116
WUG0 thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

117
turn left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

118
WUG0 twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run twice after run around right thrice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_RUN I_RUN

119
WUG0 opposite left and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

120
WUG0 left twice and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

121
WUG0 left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

122
WUG0 thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

123
WUG0 around right twice and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

124
WUG0 around left and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

125
turn opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

126
WUG0 twice and WUG0 opposite right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

127
turn right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

128
WUG0 opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

129
turn left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

130
WUG0 around left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

131
turn right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

132
WUG0 right twice and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

133
turn left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

134
WUG0 opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

135
WUG0 right twice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

136
WUG0 twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

137
WUG0 around right twice and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

138
turn opposite left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

139
turn left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

140
turn right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

141
WUG0 opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

142
WUG0 around right twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

143
WUG0 right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

144
WUG0 opposite left twice after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

145
turn right and WUG0 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump
--
I_TURN_RIGHT I_JUMP

146
turn around right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

147
WUG0 opposite right thrice and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

148
WUG0 opposite left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

149
WUG0 opposite left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

150
WUG0 left twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

151
WUG0 thrice and WUG0 left twice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

152
WUG0 right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

153
WUG0 thrice and WUG0 around left WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

154
turn right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

155
WUG0 left and WUG0 thrice I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump thrice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

156
WUG0 around right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

157
WUG0 around left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

158
WUG0 opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

159
WUG0 right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

160
WUG0 opposite left twice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

161
WUG0 right twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

162
WUG0 left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

163
WUG0 right twice and WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

164
turn left twice and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

165
WUG0 left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

166
turn opposite right twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

167
turn opposite left twice and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

168
turn opposite right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

169
WUG0 right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

170
WUG0 right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

171
WUG0 right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

172
WUG0 opposite left after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

173
WUG0 around left twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

174
run around right thrice and WUG0 twice I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN WUG1 WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run around right thrice and run twice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_RUN I_RUN

175
turn opposite right thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

176
WUG0 opposite right twice and turn opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

177
WUG0 around right after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

178
turn opposite left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

179
WUG0 right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

180
WUG0 opposite right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

181
WUG0 opposite right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

182
WUG0 after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

183
turn right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

184
turn right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

185
turn opposite left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

186
turn around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

187
turn left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

188
WUG0 left after WUG0 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump
--
I_JUMP I_TURN_LEFT I_JUMP

189
turn around left after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

190
WUG0 right twice and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

191
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

192
WUG0 opposite left thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

193
WUG0 around right after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

194
turn left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

195
WUG0 around right and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

196
WUG0 opposite right thrice after turn right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

197
turn left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

198
WUG0 after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

199
WUG0 around left thrice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

200
turn right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

201
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

202
WUG0 opposite right thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

203
turn right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

204
WUG0 opposite right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

205
WUG0 left twice and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

206
turn right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

207
WUG0 opposite right after turn right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

208
WUG0 opposite left and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

209
turn opposite left twice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

210
turn right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

211
WUG0 opposite right twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

212
turn left twice and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

213
WUG0 opposite right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

214
WUG0 opposite right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

215
WUG0 opposite right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

216
WUG0 left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

217
WUG0 left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

218
WUG0 right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

219
WUG0 around left and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

220
WUG0 left twice and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

221
WUG0 around right and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

222
WUG0 after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

223
turn around left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

224
WUG0 twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

225
WUG0 around left twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

226
WUG0 opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

227
WUG0 and turn left twice WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

228
WUG0 right and turn left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

229
turn around right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

230
turn around left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

231
WUG0 left and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

232
WUG0 opposite right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

233
turn opposite right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

234
turn right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

235
turn around right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

236
WUG0 opposite left thrice and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

237
turn around left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

238
WUG0 around left twice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

239
WUG0 and turn opposite left twice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

240
WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

241
WUG0 right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

242
WUG0 twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

243
turn left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

244
turn around right thrice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

245
WUG0 right after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

246
WUG0 left thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

247
WUG0 thrice after WUG0 twice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

248
WUG0 opposite left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

249
WUG0 twice and WUG0 around left twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

250
WUG0 opposite left thrice and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

251
WUG0 thrice after WUG0 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump
--
I_JUMP I_JUMP I_JUMP I_JUMP

252
WUG0 opposite right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

253
WUG0 right after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

254
WUG0 right twice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

255
turn around right thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

256
turn right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

257
WUG0 and turn around left WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around left
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

258
turn opposite right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

259
turn right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

260
WUG0 around right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

261
WUG0 left thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

262
WUG0 right thrice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

263
WUG0 right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

264
WUG0 opposite left twice and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

265
turn left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

266
WUG0 right thrice and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

267
WUG0 around right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

268
turn around left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

269
turn opposite right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

270
WUG0 left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

271
WUG0 left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

272
WUG0 opposite left twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

273
WUG0 opposite right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

274
turn opposite left thrice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

275
WUG0 around right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

276
WUG0 around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

277
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

278
WUG0 opposite left after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

279
turn left and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

280
WUG0 around right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

281
WUG0 left thrice and turn around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

282
turn right thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

283
WUG0 around right thrice and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

284
WUG0 opposite left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

285
turn opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
turn opposite right thrice after run opposite left
--
I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

286
WUG0 thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

287
WUG0 opposite right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

288
turn opposite left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

289
WUG0 left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

290
WUG0 opposite left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

291
WUG0 opposite right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

292
turn right thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

293
WUG0 opposite right thrice and turn left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

294
turn around left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
turn around left twice after run left
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

295
WUG0 twice and WUG0 around right twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

296
WUG0 left twice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

297
WUG0 twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

298
WUG0 around right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

299
WUG0 opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

300
turn right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

301
WUG0 around left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

302
WUG0 around right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

303
WUG0 opposite left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

304
WUG0 thrice and turn around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

305
WUG0 around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

306
turn right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

307
WUG0 after turn left I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn left
--
I_TURN_LEFT I_JUMP

308
WUG0 right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

309
WUG0 around right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

310
WUG0 opposite left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

311
turn opposite left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

312
WUG0 left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

313
turn opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

314
turn right twice and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

315
WUG0 left and turn around right twice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

316
WUG0 thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

317
WUG0 opposite left thrice after turn left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

318
WUG0 around right twice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

319
WUG0 around left thrice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

320
WUG0 right twice and WUG0 left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

321
WUG0 twice after WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump
--
I_JUMP I_JUMP I_JUMP

322
turn opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

323
WUG0 around left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

324
WUG0 opposite left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

325
WUG0 left after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

326
WUG0 left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

327
WUG0 around left twice and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

328
WUG0 around right thrice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

329
WUG0 opposite left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

330
WUG0 thrice and turn around left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

331
turn around right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

332
WUG0 opposite right and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

333
WUG0 right thrice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

334
WUG0 around right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

335
turn opposite left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

336
WUG0 opposite left thrice and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

337
turn right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

338
WUG0 after WUG0 left I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump left
--
I_TURN_LEFT I_JUMP I_JUMP

339
WUG0 thrice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

340
turn opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

341
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

342
WUG0 around right thrice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

343
WUG0 around right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

344
WUG0 right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

345
WUG0 thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

346
WUG0 opposite left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

347
WUG0 around left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

348
WUG0 around left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

349
WUG0 thrice and turn around left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

350
turn left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

351
WUG0 left thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

352
turn around left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

353
WUG0 right thrice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

354
WUG0 around left thrice and turn around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

355
turn around right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

356
WUG0 around left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

357
WUG0 right thrice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

358
turn opposite right twice and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

359
WUG0 around left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

360
turn opposite left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

361
turn right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

362
WUG0 opposite left thrice and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

363
turn left and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

364
WUG0 around left thrice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

365
WUG0 opposite right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

366
WUG0 opposite right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

367
WUG0 opposite left thrice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

368
turn right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

369
turn right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

370
turn opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

371
WUG0 and walk around right thrice WUG1 I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look and walk around right thrice
--
I_LOOK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

372
WUG0 opposite right thrice and look thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_LOOK I_LOOK I_LOOK {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk opposite right thrice and look thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_LOOK I_LOOK I_LOOK

373
WUG0 around right thrice after look I_LOOK I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk around right thrice after look
--
I_LOOK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

374
turn around right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

375
turn right and WUG0 around left I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

376
turn left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

377
WUG0 right thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

378
WUG0 thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

379
WUG0 left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

380
turn right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

381
WUG0 left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

382
WUG0 opposite right twice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

383
WUG0 opposite right thrice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

384
WUG0 thrice and turn opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

385
WUG0 right thrice and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

386
WUG0 around right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

387
WUG0 right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

388
