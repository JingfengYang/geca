12624
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 13
11 11
12 10
13 17
14 14
15 10
16 17
17 14
18 8
19 13
20 9
21 8
22 15
23 32
24 24
25 15
26 32
27 24
28 8
29 13
30 11
31 10
32 17
33 14
34 10
35 17
36 14
37 8
38 13
39 11
40 9
41 8
42 11
43 20
44 16
45 11
46 20
47 16
48 7
49 10
50 9
51 9
52 14
53 12
54 9
55 12
56 7
57 10
58 9
59 6
60 15
61 32
62 24
63 15
64 32
65 24
66 8
67 13
68 11
69 17
70 14
71 10
72 17
73 14
74 8
75 13
76 11
77 9
78 8
79 6
80 15
81 32
82 24
83 15
84 32
85 24
86 8
87 13
88 11
89 10
90 17
91 14
92 10
93 14
94 8
95 13
96 11
97 9
98 8
99 6
100 15
101 32
102 24
103 15
104 32
105 24
106 8
107 13
108 11
109 14
110 10
111 14
112 8
113 13
114 11
115 9
116 11
117 20
118 16
119 11
120 20
121 16
122 7
123 10
124 9
125 9
126 14
127 12
128 9
129 14
130 12
131 7
132 10
133 9
134 6
135 15
136 24
137 15
138 32
139 24
140 8
141 13
142 11
143 10
144 17
145 14
146 10
147 17
148 14
149 8
150 13
151 11
152 9
153 8
154 12
155 15
156 24
158 33
159 24
161 33
162 17
163 22
164 20
165 19
166 26
167 23
168 26
169 23
170 17
171 22
172 20
173 18
174 17
175 15
176 24
178 33
179 24
181 33
182 17
183 22
184 20
185 19
186 26
187 23
188 19
189 26
190 23
191 17
192 22
193 20
194 18
195 17
196 20
197 29
198 25
199 20
200 29
201 25
202 16
203 19
204 18
205 18
206 23
207 21
208 18
209 23
210 21
211 16
212 19
213 18
214 15
215 24
217 33
218 24
220 33
221 17
222 22
223 20
224 19
225 26
226 23
227 19
228 26
229 23
230 17
231 22
232 20
233 18
234 17
235 15
236 24
238 33
240 33
241 17
242 22
243 20
244 19
245 26
246 23
247 19
248 26
249 23
250 17
251 22
252 20
253 18
254 17
255 15
256 24
258 33
259 24
261 33
262 17
263 22
264 20
265 19
266 26
267 23
268 19
269 26
270 23
271 17
272 22
273 20
274 18
275 20
276 29
277 25
278 20
279 29
280 25
281 16
282 19
283 18
284 23
285 21
286 18
287 23
288 21
289 16
290 19
291 18
292 15
293 24
295 33
296 24
298 33
299 22
300 20
301 19
302 26
303 23
304 19
305 26
306 23
307 17
308 22
309 20
310 18
311 17
312 29
313 32
320 34
321 39
322 37
323 36
326 36
329 34
330 39
331 37
332 35
333 34
334 32
340 34
341 39
342 37
343 36
346 36
348 34
349 39
350 37
351 35
352 34
353 37
356 37
359 33
360 36
361 35
362 35
364 38
366 38
367 33
368 36
369 35
370 32
377 34
378 39
379 37
380 36
383 36
385 34
386 39
387 37
388 34
389 32
396 34
397 39
398 37
399 36
402 36
405 34
406 39
407 37
408 34
409 32
416 34
417 39
418 37
419 36
422 36
425 34
426 39
427 37
428 35
429 34
430 37
433 37
436 33
437 36
438 35
439 35
441 38
442 35
444 38
445 33
446 35
447 32
454 34
455 39
456 37
457 36
460 36
463 34
464 39
465 37
466 35
467 34
468 21
469 24
470 33
473 33
476 26
477 31
478 29
479 28
480 35
481 32
482 28
483 35
484 32
485 26
486 31
487 29
488 27
489 26
490 24
493 33
496 26
497 31
498 29
499 28
500 35
501 32
502 28
503 35
504 32
505 26
506 31
507 29
508 26
509 29
510 38
511 34
512 29
513 38
514 34
515 25
516 28
517 27
518 27
519 32
520 30
521 27
522 32
523 30
524 25
525 27
526 24
527 33
530 33
533 29
534 28
535 35
536 32
537 28
538 35
539 32
540 26
541 31
542 29
543 27
544 24
545 33
548 33
551 26
552 31
553 28
554 35
555 32
556 28
557 32
558 26
559 31
560 29
561 27
562 26
563 24
564 33
568 26
569 31
570 29
571 28
572 35
573 32
574 28
575 35
576 32
577 26
578 31
579 29
580 27
581 26
582 29
583 38
584 34
585 29
586 38
587 34
588 25
589 28
590 27
591 27
592 32
593 30
594 27
595 32
596 30
597 25
598 28
599 27
600 24
601 33
604 33
607 26
608 31
609 29
610 28
611 35
612 32
613 28
614 35
615 32
616 26
617 31
618 29
619 27
620 26
621 12
622 15
623 24
625 33
626 24
628 33
629 17
630 22
631 19
632 26
633 23
634 19
635 26
636 23
637 17
638 22
639 20
640 18
641 17
642 15
643 24
645 33
646 24
648 33
649 17
650 22
651 20
652 19
653 26
654 23
655 19
656 26
657 23
658 17
659 22
660 20
661 18
662 17
663 20
664 29
665 25
666 20
667 29
668 25
669 16
670 19
671 18
672 18
673 23
674 21
675 18
676 23
677 21
678 16
679 19
680 18
681 15
683 33
684 24
686 33
687 17
688 22
689 20
690 19
691 26
692 23
693 19
694 26
695 23
696 17
697 22
698 20
699 18
700 17
701 15
702 24
704 33
706 33
707 17
708 22
709 20
710 19
711 26
712 23
713 19
714 26
715 17
716 22
717 20
718 18
719 17
720 15
721 24
723 33
724 24
726 33
727 17
728 22
729 20
730 19
731 26
732 23
733 19
734 26
735 23
736 17
737 22
738 20
739 18
740 17
741 20
742 29
743 25
744 20
745 29
746 25
747 16
748 19
749 18
750 23
751 21
752 18
753 23
754 21
755 16
756 19
757 18
758 15
759 24
761 33
762 24
764 33
765 17
766 22
767 20
768 19
769 26
770 23
771 19
772 26
773 23
774 17
775 22
776 20
777 18
778 17
779 29
780 32
787 34
788 39
789 37
790 36
793 36
796 34
797 37
798 35
799 34
800 32
806 34
807 39
808 37
809 36
813 34
814 39
815 37
816 34
817 37
820 37
823 33
824 36
825 35
826 35
828 38
829 35
831 38
832 33
833 36
834 35
835 32
842 34
843 39
844 37
845 36
847 36
850 34
851 39
852 37
853 35
854 34
855 32
862 34
863 39
864 37
865 36
868 36
871 34
872 39
873 37
874 35
875 34
876 32
883 34
884 39
885 37
886 36
889 36
892 34
893 39
894 37
895 35
896 34
897 37
900 37
903 33
904 36
905 35
906 35
908 38
909 35
911 38
912 33
913 36
914 35
915 32
921 34
922 39
923 37
924 36
927 36
929 34
930 39
931 37
932 35
933 34
934 21
935 24
936 33
939 33
942 26
943 31
944 29
945 28
946 35
947 32
948 28
949 35
950 32
951 26
952 31
953 29
954 27
955 26
956 24
957 33
960 33
963 26
964 31
965 29
966 28
967 35
968 32
969 28
970 35
971 32
972 26
973 31
974 29
975 27
976 26
977 29
978 38
979 34
980 29
981 38
982 34
983 25
984 28
985 27
986 27
987 32
988 30
989 27
990 32
991 30
992 25
993 28
994 27
995 24
996 33
999 33
1002 26
1003 31
1004 29
1005 28
1006 35
1007 32
1008 28
1009 35
1010 32
1011 26
1012 31
1013 29
1014 27
1015 26
1016 24
1017 33
1020 33
1023 26
1024 31
1025 29
1026 28
1027 35
1028 32
1029 28
1030 35
1031 32
1032 26
1033 31
1034 29
1035 27
1036 26
1037 24
1038 33
1041 33
1044 26
1045 31
1046 29
1047 28
1048 35
1049 32
1050 28
1051 35
1052 26
1053 31
1054 29
1055 27
1056 26
1057 29
1058 38
1059 34
1060 29
1061 38
1062 34
1063 25
1064 28
1065 27
1066 27
1067 32
1068 30
1069 27
1070 32
1071 30
1072 25
1073 28
1074 27
1075 24
1076 33
1079 33
1082 26
1083 31
1084 29
1085 28
1086 35
1087 32
1088 28
1089 35
1090 32
1091 26
1092 31
1093 29
1094 27
1095 26
1096 5
1097 8
1098 17
1099 26
1100 17
1101 34
1102 26
1103 10
1104 15
1105 13
1106 12
1107 19
1108 16
1109 12
1110 19
1111 16
1112 10
1113 15
1114 13
1115 10
1116 8
1117 17
1118 34
1119 26
1120 17
1121 34
1122 26
1123 10
1124 15
1125 13
1126 12
1127 19
1128 16
1129 12
1130 19
1131 16
1132 10
1133 15
1134 13
1135 11
1136 10
1137 13
1138 22
1139 18
1140 13
1141 22
1142 18
1143 9
1144 12
1145 11
1146 11
1147 16
1148 14
1149 11
1150 16
1151 14
1152 9
1153 12
1154 11
1155 8
1156 17
1157 34
1158 26
1159 17
1160 34
1161 26
1162 10
1163 15
1164 13
1165 12
1166 19
1167 16
1168 12
1169 19
1170 16
1171 10
1172 15
1173 13
1174 11
1175 10
1176 8
1177 17
1178 34
1179 26
1180 17
1181 34
1182 26
1183 10
1184 15
1185 13
1186 12
1187 19
1188 16
1189 12
1190 19
1191 16
1192 10
1193 15
1194 13
1195 11
1196 10
1197 8
1198 17
1199 34
1200 26
1201 17
1202 34
1203 26
1204 10
1205 15
1206 13
1207 12
1208 19
1209 16
1210 12
1211 19
1212 10
1213 15
1214 13
1215 11
1216 10
1217 13
1218 22
1219 18
1220 13
1221 22
1222 18
1223 9
1224 12
1225 11
1226 11
1227 16
1228 14
1229 11
1230 16
1231 14
1232 9
1233 12
1234 11
1235 8
1236 17
1237 34
1238 26
1239 17
1240 34
1241 26
1242 10
1243 15
1244 13
1245 12
1246 19
1247 16
1248 12
1249 19
1250 16
1251 10
1252 15
1253 11
1254 10
1255 10
1256 13
1257 22
1258 39
1259 31
1260 22
1261 39
1262 31
1263 15
1264 20
1265 17
1266 24
1267 21
1268 24
1269 21
1270 15
1271 20
1272 18
1273 16
1274 15
1275 13
1276 22
1277 39
1278 31
1279 22
1280 39
1281 31
1282 15
1283 20
1284 18
1285 17
1286 24
1287 21
1288 17
1289 24
1290 15
1291 20
1292 18
1293 16
1294 15
1295 18
1296 27
1297 23
1298 18
1299 27
1300 23
1301 14
1302 17
1303 16
1304 16
1305 21
1306 19
1307 16
1308 21
1309 19
1310 14
1311 17
1312 16
1313 13
1314 22
1315 39
1316 31
1317 22
1318 39
1319 31
1320 15
1321 20
1322 17
1323 24
1324 21
1325 17
1326 24
1327 21
1328 15
1329 20
1330 18
1331 16
1332 15
1333 13
1334 22
1335 39
1336 31
1337 22
1338 39
1339 31
1340 15
1341 20
1342 24
1343 21
1344 24
1345 21
1346 15
1347 20
1348 18
1349 16
1350 15
1351 13
1352 22
1353 39
1354 22
1355 39
1356 31
1357 15
1358 18
1359 17
1360 24
1361 21
1362 17
1363 24
1364 21
1365 15
1366 20
1367 18
1368 16
1369 15
1370 18
1371 27
1372 23
1373 18
1374 27
1375 23
1376 14
1377 17
1378 16
1379 16
1380 19
1381 16
1382 21
1383 19
1384 14
1385 17
1386 16
1387 13
1388 22
1389 39
1390 31
1391 22
1392 39
1393 31
1394 15
1395 20
1396 18
1397 17
1398 24
1399 21
1400 17
1401 24
1402 21
1403 15
1404 20
1405 18
1406 16
1407 15
1408 8
1409 11
1410 20
1411 37
1412 29
1413 20
1414 37
1415 29
1416 13
1417 18
1418 16
1419 15
1420 22
1421 19
1422 15
1423 22
1424 19
1425 13
1426 18
1427 16
1428 14
1429 13
1430 11
1431 20
1432 37
1433 29
1434 20
1435 37
1436 29
1437 13
1438 18
1439 16
1440 15
1441 22
1442 15
1443 22
1444 19
1445 13
1446 18
1447 16
1448 14
1449 13
1450 16
1451 25
1452 21
1453 16
1454 25
1455 21
1456 12
1457 15
1458 14
1459 14
1460 19
1461 17
1462 14
1463 19
1464 17
1465 12
1466 15
1467 14
1468 11
1469 20
1470 37
1471 29
1472 20
1473 37
1474 29
1475 13
1476 18
1477 16
1478 15
1479 22
1480 19
1481 15
1482 19
1483 13
1484 18
1485 16
1486 14
1487 13
1488 11
1489 29
1490 20
1491 37
1492 29
1493 13
1494 18
1495 16
1496 15
1497 22
1498 19
1499 15
1500 22
1501 19
1502 13
1503 18
1504 16
1505 14
1506 13
1507 11
1508 20
1509 37
1510 29
1511 20
1512 37
1513 29
1514 13
1515 18
1516 16
1517 15
1518 22
1519 19
1520 15
1521 22
1522 19
1523 13
1524 18
1525 16
1526 13
1527 16
1528 25
1529 21
1530 16
1531 25
1532 21
1533 12
1534 15
1535 14
1536 14
1537 19
1538 17
1539 14
1540 19
1541 17
1542 12
1543 15
1544 14
1545 11
1546 20
1547 29
1548 20
1549 37
1550 29
1551 13
1552 18
1553 16
1554 15
1555 22
1556 15
1557 22
1558 19
1559 13
1560 18
1561 16
1562 14
1563 13
1564 7
1565 10
1566 19
1567 36
1568 28
1569 19
1570 36
1571 28
1572 12
1573 17
1574 15
1575 14
1576 21
1577 18
1578 14
1579 21
1580 18
1581 12
1582 17
1583 15
1584 13
1585 12
1586 10
1587 19
1588 36
1589 28
1590 19
1591 36
1592 28
1593 12
1594 17
1595 15
1596 14
1597 21
1598 18
1599 14
1600 21
1601 18
1602 12
1603 17
1604 15
1605 13
1606 15
1607 24
1608 20
1609 15
1610 24
1611 20
1612 11
1613 14
1614 13
1615 13
1616 18
1617 13
1618 18
1619 16
1620 11
1621 14
1622 13
1623 10
1624 19
1625 36
1626 28
1627 19
1628 36
1629 28
1630 12
1631 17
1632 15
1633 14
1634 21
1635 18
1636 14
1637 21
1638 18
1639 12
1640 17
1641 15
1642 13
1643 12
1644 10
1645 19
1646 36
1647 28
1648 19
1649 36
1650 28
1651 12
1652 17
1653 15
1654 14
1655 21
1656 18
1657 14
1658 21
1659 18
1660 12
1661 17
1662 15
1663 13
1664 12
1665 10
1666 36
1667 28
1668 19
1669 36
1670 28
1671 17
1672 15
1673 14
1674 21
1675 18
1676 14
1677 21
1678 18
1679 12
1680 17
1681 15
1682 12
1683 15
1684 24
1685 20
1686 15
1687 24
1688 20
1689 11
1690 14
1691 13
1692 13
1693 18
1694 16
1695 13
1696 18
1697 16
1698 11
1699 14
1700 13
1701 10
1702 19
1703 36
1704 19
1705 36
1706 28
1707 12
1708 17
1709 15
1710 14
1711 21
1712 18
1713 14
1714 21
1715 18
1716 12
1717 17
1718 15
1719 13
1720 12
1721 14
1722 17
1723 26
1725 35
1726 26
1728 35
1729 19
1730 24
1731 22
1732 21
1733 28
1734 25
1735 21
1736 28
1737 25
1738 19
1739 24
1740 22
1741 20
1742 19
1743 17
1744 26
1746 35
1747 26
1749 35
1750 19
1751 24
1752 22
1753 21
1754 28
1755 25
1756 21
1757 28
1758 25
1759 24
1760 22
1761 20
1762 19
1763 22
1764 27
1765 22
1766 27
1767 18
1768 21
1769 20
1770 20
1771 25
1772 23
1773 20
1774 25
1775 23
1776 18
1777 21
1778 20
1779 17
1780 26
1782 35
1783 26
1785 35
1786 19
1787 24
1788 22
1789 21
1790 28
1791 25
1792 21
1793 28
1794 25
1795 19
1796 24
1797 22
1798 20
1799 19
1800 17
1801 26
1803 35
1804 26
1806 35
1807 19
1808 24
1809 21
1810 28
1811 25
1812 21
1813 28
1814 25
1815 19
1816 24
1817 22
1818 20
1819 19
1820 17
1821 26
1823 35
1824 26
1826 35
1827 19
1828 24
1829 22
1830 21
1831 25
1832 21
1833 28
1834 25
1835 19
1836 24
1837 22
1838 20
1839 19
1840 22
1841 31
1842 27
1843 22
1844 31
1845 27
1846 18
1847 21
1848 20
1849 20
1850 25
1851 23
1852 20
1853 25
1854 23
1855 18
1856 21
1857 20
1858 17
1859 26
1861 35
1862 26
1864 35
1865 19
1866 24
1867 22
1868 21
1869 25
1870 28
1871 25
1872 19
1873 24
1874 22
1875 20
1876 19
1877 11
1878 14
1879 23
1881 32
1882 23
1884 32
1885 16
1886 21
1887 19
1888 18
1889 25
1890 22
1891 18
1892 25
1893 22
1894 16
1895 21
1896 19
1897 16
1898 14
1899 23
1901 32
1902 23
1903 32
1904 16
1905 21
1906 19
1907 18
1908 25
1909 22
1910 18
1911 25
1912 22
1913 16
1914 21
1915 19
1916 17
1917 16
1918 19
1919 24
1920 19
1921 28
1922 24
1923 15
1924 18
1925 17
1926 17
1927 22
1928 20
1929 17
1930 22
1931 20
1932 15
1933 18
1934 17
1935 14
1936 23
1938 32
1939 23
1941 32
1942 16
1943 21
1944 19
1945 18
1946 25
1947 18
1948 22
1949 16
1950 21
1951 19
1952 17
1953 16
1954 14
1955 23
1956 32
1957 23
1959 32
1960 16
1961 21
1962 19
1963 18
1964 25
1965 22
1966 18
1967 25
1968 22
1969 16
1970 21
1971 19
1972 17
1973 16
1974 14
1975 23
1977 32
1978 23
1980 32
1981 16
1982 21
1983 19
1984 18
1985 25
1986 22
1987 18
1988 25
1989 22
1990 16
1991 21
1992 19
1993 17
1994 16
1995 19
1996 28
1997 24
1998 19
1999 28
2000 24
2001 15
2002 18
2003 17
2004 17
2005 22
2006 20
2007 17
2008 22
2009 20
2010 15
2011 18
2012 17
2013 14
2014 23
2016 32
2017 23
2018 32
2019 16
2020 21
2021 19
2022 18
2023 25
2024 22
2025 18
2026 25
2027 22
2028 16
2029 21
2030 19
2031 17
2032 16
2033 7
2034 10
2035 19
2036 36
2037 28
2038 19
2039 36
2040 28
2041 12
2042 17
2043 15
2044 14
2045 21
2046 18
2047 14
2048 21
2049 18
2050 12
2051 17
2052 13
2053 12
2054 10
2055 19
2056 36
2057 28
2058 19
2059 36
2060 28
2061 12
2062 17
2063 15
2064 14
2065 21
2066 18
2067 14
2068 21
2069 18
2070 12
2071 17
2072 15
2073 13
2074 12
2075 15
2076 24
2077 20
2078 15
2079 24
2080 20
2081 11
2082 14
2083 13
2084 13
2085 18
2086 16
2087 13
2088 18
2089 16
2090 11
2091 14
2092 13
2093 10
2094 19
2095 36
2096 28
2097 19
2098 28
2099 12
2100 17
2101 15
2102 14
2103 21
2104 18
2105 21
2106 18
2107 12
2108 17
2109 15
2110 13
2111 12
2112 10
2113 19
2114 36
2115 28
2116 19
2117 36
2118 28
2119 12
2120 17
2121 15
2122 14
2123 21
2124 18
2125 14
2126 21
2127 18
2128 12
2129 17
2130 13
2131 12
2132 10
2133 19
2134 36
2135 28
2136 19
2137 36
2138 28
2139 12
2140 17
2141 15
2142 14
2143 21
2144 18
2145 21
2146 18
2147 12
2148 17
2149 13
2150 12
2151 15
2152 24
2153 15
2154 24
2155 20
2156 11
2157 14
2158 13
2159 13
2160 18
2161 16
2162 13
2163 18
2164 16
2165 11
2166 14
2167 13
2168 10
2169 19
2170 36
2171 28
2172 19
2173 36
2174 28
2175 12
2176 17
2177 15
2178 14
2179 21
2180 18
2181 14
2182 21
2183 18
2184 12
2185 17
2186 15
2187 13
2188 12
2189 14
2190 17
2191 26
2193 35
2194 26
2196 35
2197 19
2198 24
2199 22
2200 21
2201 28
2202 25
2203 21
2204 28
2205 25
2206 19
2207 24
2208 22
2209 19
2210 17
2211 26
2213 35
2214 26
2216 35
2217 19
2218 24
2219 22
2220 21
2221 21
2222 28
2223 25
2224 19
2225 24
2226 22
2227 20
2228 19
2229 22
2230 31
2231 27
2232 22
2233 31
2234 27
2235 18
2236 21
2237 20
2238 20
2239 25
2240 23
2241 20
2242 25
2243 23
2244 21
2245 20
2246 17
2247 26
2249 35
2250 26
2252 35
2253 19
2254 24
2255 22
2256 21
2257 28
2258 25
2259 21
2260 28
2261 25
2262 19
2263 24
2264 22
2265 20
2266 19
2267 17
2268 26
2270 35
2271 26
2273 35
2274 19
2275 22
2276 21
2277 28
2278 25
2279 21
2280 28
2281 25
2282 19
2283 24
2284 22
2285 20
2286 19
2287 17
2288 26
2290 35
2291 26
2293 35
2294 19
2295 24
2296 22
2297 21
2298 28
2299 25
2300 21
2301 28
2302 25
2303 19
2304 24
2305 22
2306 20
2307 19
2308 22
2309 31
2310 27
2311 22
2312 31
2313 27
2314 18
2315 21
2316 20
2317 20
2318 25
2319 23
2320 20
2321 25
2322 23
2323 18
2324 21
2325 20
2326 17
2327 26
2328 35
2329 26
2331 35
2332 19
2333 24
2334 22
2335 21
2336 28
2337 25
2338 21
2339 28
2340 25
2341 19
2342 24
2343 22
2344 20
2345 19
2346 11
2347 14
2348 23
2350 32
2351 23
2353 32
2354 16
2355 21
2356 19
2357 18
2358 25
2359 22
2360 18
2361 25
2362 22
2363 16
2364 21
2365 19
2366 17
2367 16
2368 14
2369 23
2371 32
2372 23
2374 32
2375 16
2376 21
2377 19
2378 18
2379 25
2380 22
2381 18
2382 25
2383 22
2384 21
2385 19
2386 17
2387 16
2388 19
2389 28
2390 24
2391 19
2392 28
2393 24
2394 15
2395 18
2396 17
2397 17
2398 22
2399 20
2400 17
2401 22
2402 20
2403 15
2404 18
2405 17
2406 14
2407 23
2409 32
2410 23
2411 32
2412 16
2413 21
2414 19
2415 25
2416 22
2417 18
2418 25
2419 22
2420 16
2421 21
2422 19
2423 17
2424 16
2425 14
2426 23
2428 32
2429 23
2431 32
2432 16
2433 21
2434 19
2435 18
2436 25
2437 22
2438 18
2439 25
2440 22
2441 16
2442 21
2443 19
2444 17
2445 16
2446 23
2447 32
2448 23
2450 32
2451 16
2452 21
2453 19
2454 18
2455 25
2456 22
2457 18
2458 25
2459 22
2460 16
2461 21
2462 19
2463 17
2464 16
2465 19
2466 28
2467 24
2468 28
2469 24
2470 15
2471 18
2472 17
2473 17
2474 22
2475 20
2476 17
2477 22
2478 20
2479 15
2480 18
2481 17
2482 14
2483 23
2485 32
2486 23
2488 32
2489 21
2490 19
2491 18
2492 25
2493 22
2494 18
2495 25
2496 22
2497 16
2498 21
2499 19
2500 17
2501 16
2502 5
2503 8
2504 17
2505 34
2506 26
2507 17
2508 34
2509 26
2510 10
2511 15
2512 13
2513 12
2514 19
2515 16
2516 12
2517 19
2518 16
2519 10
2520 15
2521 13
2522 11
2523 10
2524 8
2525 17
2526 34
2527 26
2528 17
2529 34
2530 26
2531 10
2532 15
2533 13
2534 12
2535 19
2536 16
2537 12
2538 19
2539 16
2540 10
2541 15
2542 13
2543 11
2544 10
2545 13
2546 22
2547 18
2548 13
2549 22
2550 18
2551 9
2552 12
2553 11
2554 11
2555 16
2556 14
2557 11
2558 16
2559 14
2560 9
2561 12
2562 11
2563 8
2564 34
2565 26
2566 17
2567 34
2568 26
2569 10
2570 15
2571 13
2572 12
2573 19
2574 16
2575 12
2576 19
2577 16
2578 10
2579 15
2580 13
2581 11
2582 10
2583 8
2584 17
2585 34
2586 26
2587 17
2588 34
2589 26
2590 10
2591 15
2592 13
2593 12
2594 16
2595 12
2596 19
2597 16
2598 10
2599 15
2600 13
2601 11
2602 10
2603 8
2604 17
2605 34
2606 17
2607 34
2608 26
2609 10
2610 15
2611 13
2612 12
2613 19
2614 16
2615 12
2616 19
2617 16
2618 10
2619 15
2620 13
2621 10
2622 13
2623 22
2624 18
2625 13
2626 22
2627 18
2628 9
2629 12
2630 11
2631 16
2632 14
2633 14
2634 9
2635 12
2636 11
2637 8
2638 17
2639 34
2640 26
2641 17
2642 34
2643 26
2644 10
2645 15
2646 13
2647 12
2648 19
2649 16
2650 12
2651 19
2652 16
2653 10
2654 15
2655 13
2656 11
2657 10
2658 10
2659 13
2660 22
2661 39
2662 22
2663 39
2664 31
2665 15
2666 20
2667 18
2668 17
2669 24
2670 21
2671 17
2672 24
2673 21
2674 15
2675 20
2676 18
2677 16
2678 13
2679 22
2680 39
2681 31
2682 22
2683 39
2684 31
2685 15
2686 20
2687 18
2688 17
2689 24
2690 21
2691 17
2692 24
2693 21
2694 15
2695 20
2696 18
2697 16
2698 15
2699 18
2700 27
2701 23
2702 18
2703 27
2704 23
2705 14
2706 17
2707 16
2708 16
2709 21
2710 19
2711 16
2712 21
2713 19
2714 14
2715 17
2716 16
2717 13
2718 22
2719 39
2720 31
2721 39
2722 31
2723 15
2724 20
2725 18
2726 17
2727 24
2728 21
2729 17
2730 24
2731 15
2732 20
2733 18
2734 16
2735 15
2736 13
2737 22
2738 39
2739 31
2740 22
2741 39
2742 31
2743 15
2744 20
2745 18
2746 24
2747 17
2748 24
2749 21
2750 20
2751 18
2752 16
2753 15
2754 13
2755 22
2756 39
2757 31
2758 22
2759 39
2760 31
2761 15
2762 20
2763 18
2764 24
2765 21
2766 17
2767 24
2768 21
2769 15
2770 20
2771 18
2772 16
2773 15
2774 18
2775 27
2776 23
2777 18
2778 27
2779 23
2780 14
2781 17
2782 16
2783 16
2784 21
2785 19
2786 16
2787 21
2788 19
2789 14
2790 17
2791 16
2792 13
2793 22
2794 39
2795 31
2796 22
2797 39
2798 31
2799 15
2800 20
2801 18
2802 17
2803 24
2804 21
2805 17
2806 24
2807 21
2808 15
2809 20
2810 18
2811 16
2812 15
2813 8
2814 11
2815 20
2816 37
2817 29
2818 20
2819 37
2820 29
2821 13
2822 18
2823 16
2824 15
2825 22
2826 19
2827 15
2828 22
2829 19
2830 13
2831 18
2832 16
2833 14
2834 13
2835 11
2836 20
2837 37
2838 29
2839 20
2840 37
2841 29
2842 13
2843 18
2844 16
2845 22
2846 19
2847 15
2848 22
2849 19
2850 13
2851 18
2852 16
2853 14
2854 13
2855 16
2856 25
2857 21
2858 25
2859 21
2860 12
2861 15
2862 14
2863 14
2864 19
2865 17
2866 14
2867 19
2868 17
2869 12
2870 15
2871 14
2872 11
2873 20
2874 37
2875 29
2876 20
2877 37
2878 29
2879 13
2880 18
2881 16
2882 15
2883 22
2884 19
2885 15
2886 22
2887 19
2888 13
2889 18
2890 16
2891 14
2892 13
2893 20
2894 37
2895 20
2896 37
2897 29
2898 13
2899 18
2900 16
2901 15
2902 22
2903 19
2904 15
2905 22
2906 19
2907 13
2908 18
2909 16
2910 14
2911 13
2912 11
2913 20
2914 37
2915 29
2916 20
2917 37
2918 29
2919 13
2920 18
2921 16
2922 15
2923 22
2924 19
2925 15
2926 22
2927 19
2928 13
2929 18
2930 16
2931 14
2932 13
2933 16
2934 25
2935 21
2936 16
2937 25
2938 21
2939 12
2940 15
2941 14
2942 14
2943 19
2944 17
2945 14
2946 19
2947 17
2948 12
2949 15
2950 14
2951 11
2952 20
2953 29
2954 20
2955 37
2956 29
2957 13
2958 18
2959 16
2960 15
2961 22
2962 19
2963 15
2964 22
2965 19
2966 13
2967 18
2968 16
2969 13
2970 6
2971 9
2972 18
2973 35
2974 27
2975 18
2976 35
2977 27
2978 11
2979 16
2980 14
2981 13
2982 20
2983 17
2984 13
2985 20
2986 17
2987 11
2988 16
2989 14
2990 12
2991 9
2992 18
2993 35
2994 27
2995 18
2996 35
2997 27
2998 11
2999 16
3000 14
3001 13
3002 20
3003 17
3004 13
3005 17
3006 16
3007 14
3008 12
3009 11
3010 14
3011 23
3012 19
3013 14
3014 23
3015 19
3016 10
3017 13
3018 12
3019 12
3020 17
3021 15
3022 12
3023 17
3024 15
3025 10
3026 13
3027 12
3028 9
3029 18
3030 35
3031 27
3032 18
3033 35
3034 27
3035 11
3036 16
3037 13
3038 20
3039 17
3040 13
3041 20
3042 17
3043 11
3044 16
3045 14
3046 12
3047 11
3048 9
3049 18
3050 27
3051 18
3052 27
3053 11
3054 16
3055 14
3056 13
3057 20
3058 17
3059 13
3060 20
3061 17
3062 16
3063 14
3064 12
3065 11
3066 9
3067 18
3068 35
3069 27
3070 18
3071 35
3072 27
3073 11
3074 16
3075 14
3076 13
3077 20
3078 17
3079 13
3080 20
3081 17
3082 11
3083 16
3084 14
3085 12
3086 11
3087 14
3088 23
3089 19
3090 14
3091 23
3092 19
3093 10
3094 13
3095 12
3096 12
3097 17
3098 15
3099 12
3100 17
3101 15
3102 10
3103 13
3104 12
3105 9
3106 18
3107 35
3108 27
3109 18
3110 35
3111 27
3112 11
3113 16
3114 14
3115 13
3116 20
3117 17
3118 13
3119 20
3120 17
3121 11
3122 16
3123 14
3124 12
3125 11
3126 5
3127 8
3128 17
3129 34
3130 26
3131 17
3132 34
3133 26
3134 10
3135 15
3136 13
3137 12
3138 19
3139 16
3140 12
3141 19
3142 16
3143 10
3144 15
3145 13
3146 11
3147 10
3148 8
3149 17
3150 34
3151 26
3152 17
3153 34
3154 26
3155 15
3156 13
3157 12
3158 19
3159 16
3160 12
3161 19
3162 16
3163 10
3164 15
3165 13
3166 11
3167 10
3168 13
3169 22
3170 18
3171 22
3172 18
3173 9
3174 12
3175 11
3176 11
3177 16
3178 14
3179 11
3180 16
3181 14
3182 9
3183 12
3184 11
3185 8
3186 17
3187 34
3188 26
3189 17
3190 34
3191 26
3192 10
3193 15
3194 13
3195 12
3196 19
3197 16
3198 12
3199 19
3200 16
3201 10
3202 15
3203 13
3204 11
3205 10
3206 8
3207 17
3208 34
3209 17
3210 34
3211 26
3212 15
3213 13
3214 12
3215 19
3216 16
3217 12
3218 19
3219 16
3220 10
3221 15
3222 13
3223 11
3224 10
3225 8
3226 17
3227 34
3228 26
3229 17
3230 26
3231 10
3232 15
3233 13
3234 12
3235 19
3236 16
3237 12
3238 19
3239 16
3240 10
3241 15
3242 13
3243 11
3244 10
3245 13
3246 22
3247 18
3248 13
3249 22
3250 18
3251 9
3252 12
3253 11
3254 11
3255 16
3256 14
3257 11
3258 16
3259 14
3260 9
3261 12
3262 11
3263 8
3264 17
3265 34
3266 26
3267 17
3268 34
3269 26
3270 10
3271 15
3272 13
3273 12
3274 19
3275 16
3276 12
3277 19
3278 16
3279 10
3280 15
3281 13
3282 10
3283 3
3284 6
3285 15
3286 32
3287 24
3288 15
3289 32
3290 24
3291 13
3292 11
3293 10
3294 14
3295 10
3296 17
3297 14
3298 8
3299 13
3300 11
3301 9
3302 8
3303 6
3304 15
3305 32
3306 24
3307 15
3308 32
3309 24
3310 8
3311 13
3312 11
3313 10
3314 17
3315 14
3316 10
3317 17
3318 14
3319 8
3320 13
3321 11
3322 9
3323 8
3324 11
3325 20
3326 16
3327 11
3328 20
3329 16
3330 7
3331 10
3332 9
3333 9
3334 14
3335 12
3336 9
3337 14
3338 12
3339 7
3340 10
3341 6
3342 15
3343 32
3344 24
3345 15
3346 32
3347 24
3348 8
3349 13
3350 11
3351 10
3352 17
3353 14
3354 10
3355 17
3356 14
3357 8
3358 13
3359 11
3360 9
3361 8
3362 6
3363 15
3364 32
3365 24
3366 15
3367 32
3368 24
3369 13
3370 11
3371 10
3372 17
3373 14
3374 10
3375 17
3376 14
3377 8
3378 13
3379 11
3380 9
3381 8
3382 6
3383 15
3384 32
3385 24
3386 15
3387 32
3388 24
3389 8
3390 13
3391 11
3392 10
3393 17
3394 14
3395 10
3396 17
3397 14
3398 8
3399 11
3400 9
3401 8
3402 11
3403 20
3404 16
3405 20
3406 16
3407 10
3408 9
3409 9
3410 14
3411 12
3412 9
3413 14
3414 12
3415 7
3416 10
3417 9
3418 6
3419 15
3420 32
3421 24
3422 15
3423 32
3424 24
3425 8
3426 13
3427 11
3428 10
3429 17
3430 14
3431 10
3432 17
3433 14
3434 8
3435 11
3436 9
3437 8
3438 12
3439 15
3440 24
3442 33
3443 24
3445 33
3446 17
3447 22
3448 20
3449 19
3450 26
3451 23
3452 19
3453 26
3454 23
3455 17
3456 22
3457 20
3458 18
3459 17
3460 15
3461 24
3463 33
3464 24
3466 33
3467 17
3468 22
3469 20
3470 19
3471 26
3472 23
3473 19
3474 26
3475 23
3476 17
3477 22
3478 20
3479 18
3480 17
3481 20
3482 29
3483 25
3484 20
3485 25
3486 16
3487 18
3488 18
3489 23
3490 21
3491 23
3492 21
3493 16
3494 18
3495 15
3496 24
3498 33
3499 24
3501 33
3502 17
3503 22
3504 20
3505 19
3506 26
3507 23
3508 19
3509 26
3510 23
3511 17
3512 22
3513 20
3514 18
3515 17
3516 15
3517 24
3519 33
3520 24
3522 33
3523 17
3524 22
3525 20
3526 19
3527 26
3528 23
3529 19
3530 26
3531 23
3532 17
3533 22
3534 18
3535 17
3536 15
3537 24
3539 33
3540 24
3542 33
3543 17
3544 20
3545 19
3546 26
3547 23
3548 19
3549 26
3550 23
3551 17
3552 22
3553 17
3554 20
3555 29
3556 25
3557 20
3558 29
3559 25
3560 16
3561 19
3562 18
3563 18
3564 23
3565 21
3566 18
3567 23
3568 21
3569 16
3570 19
3571 18
3572 15
3573 24
3575 33
3576 24
3578 33
3579 17
3580 22
3581 20
3582 19
3583 26
3584 23
3585 19
3586 26
3587 23
3588 17
3589 20
3590 18
3591 17
3592 29
3593 32
3600 34
3601 39
3602 37
3603 36
3606 36
3609 34
3610 39
3611 37
3612 35
3613 34
3614 32
3620 34
3621 39
3622 37
3623 36
3626 36
3629 34
3630 39
3631 37
3632 35
3633 34
3634 37
3637 37
3640 33
3641 36
3642 35
3643 35
3645 38
3646 35
3648 38
3649 33
3650 36
3651 35
3652 32
3659 34
3660 39
3661 37
3662 36
3665 36
3668 34
3669 39
3670 37
3671 35
3672 34
3673 32
3680 34
3681 39
3682 37
3683 36
3686 36
3689 34
3690 39
3691 37
3692 35
3693 34
3694 32
3701 34
3702 39
3703 37
3704 36
3707 36
3710 34
3711 39
3712 37
3713 35
3714 34
3715 37
3718 37
3721 33
3722 36
3723 35
3724 35
3726 38
3727 35
3729 38
3730 33
3731 36
3732 35
3733 32
3740 39
3741 36
3744 36
3747 34
3748 39
3749 37
3750 35
3751 34
3752 21
3753 24
3754 33
3757 33
3760 26
3761 31
3762 29
3763 28
3764 35
3765 28
3766 35
3767 32
3768 26
3769 31
3770 29
3771 27
3772 26
3773 24
3774 33
3777 33
3780 26
3781 31
3782 29
3783 28
3784 35
3785 32
3786 28
3787 35
3788 32
3789 26
3790 31
3791 29
3792 27
3793 26
3794 29
3795 38
3796 34
3797 29
3798 38
3799 34
3800 25
3801 28
3802 27
3803 27
3804 32
3805 30
3806 27
3807 32
3808 30
3809 25
3810 28
3811 27
3812 24
3813 33
3816 33
3819 26
3820 31
3821 29
3822 28
3823 35
3824 32
3825 28
3826 35
3827 32
3828 26
3829 31
3830 29
3831 27
3832 26
3833 24
3834 33
3837 33
3840 26
3841 31
3842 29
3843 28
3844 35
3845 32
3846 28
3847 35
3848 32
3849 26
3850 31
3851 29
3852 27
3853 26
3854 24
3855 33
3860 26
3861 31
3862 29
3863 28
3864 35
3865 32
3866 28
3867 35
3868 26
3869 31
3870 29
3871 27
3872 26
3873 34
3874 29
3875 38
3876 34
3877 25
3878 28
3879 27
3880 27
3881 32
3882 30
3883 27
3884 32
3885 30
3886 25
3887 28
3888 27
3889 24
3890 33
3893 33
3895 26
3896 31
3897 29
3898 28
3899 35
3900 32
3901 28
3902 35
3903 32
3904 26
3905 31
3906 29
3907 27
3908 26
3909 12
3910 15
3911 24
3913 33
3914 24
3916 33
3917 17
3918 22
3919 20
3920 19
3921 26
3922 23
3923 19
3924 26
3925 23
3926 17
3927 22
3928 20
3929 18
3930 17
3931 15
3932 24
3934 33
3935 24
3937 33
3938 17
3939 22
3940 20
3941 19
3942 23
3943 19
3944 26
3945 23
3946 17
3947 22
3948 20
3949 18
3950 17
3951 20
3952 29
3953 25
3954 20
3955 29
3956 25
3957 16
3958 19
3959 18
3960 18
3961 23
3962 21
3963 18
3964 23
3965 21
3966 16
3967 19
3968 18
3969 15
3970 24
3972 33
3973 24
3975 33
3976 17
3977 22
3978 20
3979 19
3980 26
3981 23
3982 19
3983 26
3984 23
3985 17
3986 22
3987 20
3988 18
3989 17
3990 15
3991 24
3993 33
3994 24
3996 33
3997 17
3998 22
3999 20
4000 19
4001 26
4002 23
4003 19
4004 26
4005 23
4006 17
4007 22
4008 20
4009 18
4010 17
4011 15
4012 24
4014 33
4015 24
4016 33
4017 17
4018 20
4019 19
4020 26
4021 23
4022 19
4023 26
4024 23
4025 17
4026 20
4027 18
4028 20
4029 29
4030 25
4031 20
4032 29
4033 25
4034 16
4035 19
4036 18
4037 23
4038 21
4039 18
4040 23
4041 21
4042 16
4043 19
4044 18
4045 15
4046 24
4048 33
4050 33
4051 17
4052 22
4053 20
4054 19
4055 26
4056 23
4057 19
4058 26
4059 23
4060 17
4061 22
4062 20
4063 17
4064 29
4065 32
4072 34
4073 39
4074 37
4075 36
4078 36
4081 34
4082 39
4083 37
4084 35
4085 34
4086 32
4093 34
4094 39
4095 36
4098 36
4101 34
4102 39
4103 37
4104 35
4105 34
4106 37
4109 37
4112 33
4113 36
4114 35
4116 38
4117 35
4119 38
4120 33
4121 36
4122 32
4129 34
4130 39
4131 37
4132 36
4135 36
4138 34
4139 39
4140 37
4141 35
4142 34
4143 32
4150 34
4151 39
4152 37
4153 36
4156 36
4159 34
4160 39
4161 37
4162 35
4163 34
4164 32
4169 34
4170 39
4171 37
4172 36
4175 36
4178 34
4179 39
4180 37
4181 35
4182 34
4183 37
4186 37
4188 33
4189 36
4190 35
4192 38
4193 35
4195 38
4196 33
4197 36
4198 35
4199 32
4204 34
4205 39
4206 37
4207 36
4210 36
4213 34
4214 39
4215 37
4216 35
4217 34
4218 21
4219 24
4220 33
4223 33
4226 31
4227 29
4228 28
4229 35
4230 32
4231 28
4232 32
4233 26
4234 31
4235 29
4236 27
4237 26
4238 24
4239 33
4242 33
4245 26
4246 31
4247 29
4248 28
4249 35
4250 32
4251 28
4252 35
4253 32
4254 26
4255 29
4256 27
4257 26
4258 29
4259 38
4260 34
4261 29
4262 38
4263 34
4264 25
4265 28
4266 27
4267 32
4268 30
4269 27
4270 32
4271 30
4272 25
4273 28
4274 27
4275 24
4278 33
4281 26
4282 31
4283 29
4284 28
4285 35
4286 32
4287 28
4288 35
4289 31
4290 29
4291 27
4292 26
4293 24
4294 33
4297 33
4300 26
4301 31
4302 29
4303 28
4304 35
4305 32
4306 28
4307 35
4308 26
4309 31
4310 29
4311 27
4312 26
4313 24
4314 33
4317 33
4320 26
4321 31
4322 29
4323 28
4324 35
4325 32
4326 28
4327 35
4328 32
4329 26
4330 29
4331 27
4332 26
4333 29
4334 38
4335 34
4336 29
4337 38
4338 34
4339 25
4340 28
4341 27
4342 27
4343 32
4344 30
4345 27
4346 32
4347 30
4348 25
4349 28
4350 27
4351 24
4352 33
4355 33
4358 26
4359 31
4360 28
4361 35
4362 32
4363 28
4364 35
4365 32
4366 26
4367 31
4368 29
4369 27
4370 26
4371 5
4372 8
4373 17
4374 34
4375 26
4376 17
4377 34
4378 26
4379 10
4380 13
4381 12
4382 19
4383 16
4384 12
4385 19
4386 16
4387 10
4388 15
4389 13
4390 11
4391 10
4392 8
4393 17
4394 34
4395 26
4396 17
4397 34
4398 26
4399 10
4400 15
4401 13
4402 12
4403 19
4404 16
4405 12
4406 19
4407 16
4408 10
4409 15
4410 13
4411 11
4412 10
4413 13
4414 22
4415 18
4416 13
4417 22
4418 18
4419 9
4420 12
4421 11
4422 11
4423 16
4424 14
4425 11
4426 16
4427 14
4428 9
4429 12
4430 11
4431 8
4432 17
4433 34
4434 26
4435 17
4436 34
4437 26
4438 10
4439 13
4440 12
4441 19
4442 16
4443 12
4444 19
4445 16
4446 10
4447 15
4448 13
4449 10
4450 8
4451 17
4452 34
4453 26
4454 17
4455 34
4456 26
4457 10
4458 15
4459 13
4460 12
4461 19
4462 16
4463 12
4464 19
4465 16
4466 10
4467 15
4468 13
4469 10
4470 8
4471 17
4472 34
4473 17
4474 34
4475 26
4476 10
4477 15
4478 13
4479 12
4480 19
4481 16
4482 12
4483 19
4484 10
4485 15
4486 13
4487 11
4488 10
4489 13
4490 22
4491 18
4492 13
4493 22
4494 18
4495 9
4496 12
4497 11
4498 11
4499 16
4500 14
4501 11
4502 16
4503 14
4504 9
4505 12
4506 8
4507 17
4508 34
4509 26
4510 17
4511 34
4512 26
4513 10
4514 15
4515 13
4516 12
4517 19
4518 16
4519 12
4520 19
4521 16
4522 10
4523 15
4524 13
4525 11
4526 10
4527 10
4528 13
4529 22
4530 39
4531 31
4532 22
4533 39
4534 31
4535 15
4536 20
4537 18
4538 17
4539 24
4540 21
4541 17
4542 24
4543 21
4544 15
4545 20
4546 18
4547 16
4548 15
4549 13
4550 22
4551 39
4552 31
4553 22
4554 39
4555 31
4556 15
4557 20
4558 18
4559 17
4560 24
4561 21
4562 17
4563 24
4564 21
4565 15
4566 18
4567 16
4568 15
4569 18
4570 27
4571 23
4572 18
4573 27
4574 23
4575 14
4576 17
4577 16
4578 16
4579 21
4580 19
4581 16
4582 21
4583 19
4584 14
4585 17
4586 16
4587 13
4588 22
4589 39
4590 31
4591 22
4592 39
4593 31
4594 15
4595 20
4596 18
4597 17
4598 24
4599 21
4600 17
4601 24
4602 21
4603 15
4604 20
4605 18
4606 16
4607 15
4608 13
4609 22
4610 39
4611 31
4612 22
4613 39
4614 31
4615 15
4616 20
4617 18
4618 17
4619 21
4620 17
4621 24
4622 21
4623 20
4624 18
4625 16
4626 15
4627 13
4628 22
4629 39
4630 31
4631 22
4632 39
4633 31
4634 15
4635 20
4636 18
4637 17
4638 24
4639 21
4640 17
4641 24
4642 21
4643 15
4644 20
4645 18
4646 16
4647 15
4648 18
4649 27
4650 23
4651 18
4652 27
4653 23
4654 14
4655 17
4656 16
4657 16
4658 21
4659 19
4660 16
4661 21
4662 19
4663 14
4664 17
4665 16
4666 13
4667 22
4668 39
4669 31
4670 22
4671 39
4672 31
4673 15
4674 20
4675 18
4676 17
4677 24
4678 21
4679 17
4680 24
4681 21
4682 15
4683 20
4684 18
4685 16
4686 15
4687 11
4688 20
4689 37
4690 29
4691 20
4692 37
4693 29
4694 13
4695 18
4696 16
4697 15
4698 22
4699 19
4700 15
4701 22
4702 19
4703 13
4704 18
4705 16
4706 14
4707 13
4708 11
4709 20
4710 37
4711 29
4712 20
4713 37
4714 13
4715 18
4716 16
4717 22
4718 19
4719 15
4720 19
4721 13
4722 18
4723 16
4724 14
4725 13
4726 16
4727 25
4728 21
4729 16
4730 25
4731 21
4732 12
4733 15
4734 14
4735 14
4736 19
4737 17
4738 14
4739 17
4740 12
4741 15
4742 14
4743 11
4744 20
4745 37
4746 29
4747 20
4748 37
4749 29
4750 13
4751 18
4752 16
4753 15
4754 22
4755 19
4756 15
4757 22
4758 13
4759 18
4760 16
4761 14
4762 11
4763 20
4764 37
4765 29
4766 20
4767 37
4768 29
4769 18
4770 16
4771 15
4772 22
4773 19
4774 15
4775 19
4776 13
4777 18
4778 16
4779 14
4780 13
4781 11
4782 20
4783 37
4784 29
4785 20
4786 37
4787 29
4788 13
4789 18
4790 16
4791 15
4792 22
4793 19
4794 15
4795 22
4796 19
4797 13
4798 18
4799 16
4800 14
4801 13
4802 25
4803 21
4804 16
4805 25
4806 21
4807 12
4808 15
4809 14
4810 14
4811 19
4812 17
4813 14
4814 17
4815 12
4816 15
4817 14
4818 11
4819 20
4820 37
4821 29
4822 20
4823 37
4824 29
4825 13
4826 18
4827 16
4828 15
4829 22
4830 19
4831 15
4832 13
4833 18
4834 16
4835 14
4836 13
4837 7
4838 10
4839 19
4840 36
4841 28
4842 19
4843 36
4844 28
4845 12
4846 17
4847 15
4848 14
4849 21
4850 18
4851 14
4852 21
4853 18
4854 12
4855 17
4856 15
4857 13
4858 12
4859 10
4860 19
4861 36
4862 28
4863 19
4864 36
4865 28
4866 12
4867 17
4868 15
4869 14
4870 21
4871 18
4872 14
4873 21
4874 18
4875 12
4876 17
4877 15
4878 13
4879 12
4880 15
4881 24
4882 20
4883 15
4884 24
4885 20
4886 11
4887 14
4888 13
4889 13
4890 18
4891 16
4892 13
4893 18
4894 16
4895 11
4896 14
4897 13
4898 10
4899 19
4900 36
4901 28
4902 19
4903 36
4904 28
4905 12
4906 17
4907 15
4908 14
4909 21
4910 18
4911 14
4912 21
4913 18
4914 17
4915 15
4916 13
4917 12
4918 10
4919 19
4920 36
4921 28
4922 19
4923 36
4924 28
4925 12
4926 17
4927 15
4928 14
4929 21
4930 18
4931 14
4932 21
4933 18
4934 12
4935 17
4936 15
4937 13
4938 12
4939 10
4940 19
4941 36
4942 28
4943 19
4944 36
4945 28
4946 12
4947 17
4948 15
4949 14
4950 21
4951 18
4952 14
4953 21
4954 18
4955 12
4956 17
4957 15
4958 13
4959 12
4960 15
4961 24
4962 20
4963 15
4964 24
4965 20
4966 11
4967 14
4968 13
4969 13
4970 18
4971 16
4972 18
4973 16
4974 11
4975 14
4976 13
4977 10
4978 19
4979 36
4980 28
4981 19
4982 36
4983 28
4984 12
4985 15
4986 14
4987 21
4988 18
4989 14
4990 21
4991 18
4992 12
4993 17
4994 15
4995 12
4996 17
4997 26
4999 35
5000 26
5002 35
5003 19
5004 24
5005 22
5006 21
5007 28
5008 25
5009 21
5010 25
5011 19
5012 24
5013 22
5014 20
5015 19
5016 17
5017 26
5019 35
5020 26
5022 35
5023 19
5024 24
5025 22
5026 21
5027 28
5028 25
5029 21
5030 28
5031 25
5032 19
5033 24
5034 22
5035 20
5036 19
5037 22
5038 31
5039 27
5040 22
5041 31
5042 27
5043 18
5044 21
5045 20
5046 20
5047 25
5048 23
5049 20
5050 25
5051 23
5052 18
5053 21
5054 20
5055 17
5056 26
5058 35
5059 26
5061 35
5062 19
5063 24
5064 22
5065 21
5066 28
5067 25
5068 21
5069 28
5070 25
5071 19
5072 24
5073 22
5074 20
5075 19
5076 17
5077 26
5079 35
5080 26
5082 35
5083 19
5084 24
5085 22
5086 21
5087 28
5088 25
5089 21
5090 28
5091 25
5092 19
5093 24
5094 22
5095 20
5096 19
5097 17
5098 26
5100 35
5101 26
5103 35
5104 19
5105 24
5106 22
5107 21
5108 28
5109 25
5110 21
5111 28
5112 25
5113 19
5114 24
5115 22
5116 20
5117 19
5118 22
5119 31
5120 27
5121 22
5122 31
5123 27
5124 18
5125 21
5126 20
5127 20
5128 23
5129 20
5130 25
5131 23
5132 18
5133 21
5134 20
5135 17
5136 26
5138 35
5139 26
5141 35
5142 19
5143 24
5144 22
5145 21
5146 25
5147 21
5148 28
5149 25
5150 19
5151 24
5152 22
5153 20
5154 19
5155 11
5156 14
5157 23
5159 32
5160 23
5162 32
5163 16
5164 21
5165 19
5166 18
5167 22
5168 18
5169 22
5170 16
5171 21
5172 19
5173 17
5174 16
5175 14
5176 23
5178 32
5179 23
5181 32
5182 16
5183 21
5184 19
5185 18
5186 25
5187 22
5188 18
5189 25
5190 22
5191 16
5192 21
5193 19
5194 17
5195 16
5196 19
5197 28
5198 24
5199 19
5200 28
5201 24
5202 15
5203 18
5204 17
5205 17
5206 22
5207 20
5208 22
5209 20
5210 15
5211 18
5212 17
5213 14
5214 23
5216 32
5217 23
5219 32
5220 16
5221 21
5222 19
5223 18
5224 25
5225 22
5226 18
5227 25
5228 22
5229 16
5230 21
5231 19
5232 17
5233 16
5234 14
5235 23
5237 32
5238 23
5240 32
5241 16
5242 21
5243 18
5244 25
5245 22
5246 18
5247 25
5248 16
5249 21
5250 19
5251 17
5252 16
5253 14
5254 23
5256 32
5257 23
5259 32
5260 16
5261 21
5262 19
5263 18
5264 25
5265 22
5266 18
5267 25
5268 22
5269 16
5270 21
5271 19
5272 17
5273 16
5274 19
5275 28
5276 24
5277 19
5278 28
5279 24
5280 15
5281 18
5282 17
5283 17
5284 22
5285 20
5286 17
5287 22
5288 20
5289 15
5290 18
5291 17
5292 14
5293 23
5295 32
5296 23
5298 32
5299 16
5300 21
5301 18
5302 25
5303 22
5304 18
5305 25
5306 22
5307 16
5308 21
5309 19
5310 17
5311 16
5312 7
5313 19
5314 36
5315 28
5316 36
5317 28
5318 12
5319 17
5320 15
5321 14
5322 21
5323 18
5324 14
5325 21
5326 18
5327 12
5328 17
5329 15
5330 13
5331 12
5332 10
5333 19
5334 36
5335 28
5336 19
5337 36
5338 28
5339 12
5340 17
5341 15
5342 14
5343 21
5344 18
5345 14
5346 21
5347 18
5348 12
5349 17
5350 15
5351 13
5352 12
5353 20
5354 15
5355 24
5356 20
5357 14
5358 13
5359 13
5360 18
5361 16
5362 13
5363 18
5364 11
5365 14
5366 13
5367 10
5368 19
5369 36
5370 28
5371 19
5372 36
5373 28
5374 12
5375 17
5376 15
5377 14
5378 21
5379 18
5380 14
5381 21
5382 18
5383 12
5384 17
5385 15
5386 13
5387 12
5388 10
5389 19
5390 36
5391 28
5392 19
5393 36
5394 12
5395 17
5396 15
5397 14
5398 21
5399 18
5400 14
5401 21
5402 18
5403 12
5404 17
5405 15
5406 13
5407 12
5408 10
5409 19
5410 36
5411 28
5412 19
5413 36
5414 12
5415 17
5416 15
5417 14
5418 21
5419 18
5420 14
5421 21
5422 18
5423 12
5424 17
5425 15
5426 13
5427 12
5428 15
5429 24
5430 15
5431 24
5432 20
5433 11
5434 14
5435 13
5436 13
5437 16
5438 13
5439 18
5440 16
5441 11
5442 14
5443 13
5444 10
5445 19
5446 36
5447 28
5448 19
5449 36
5450 28
5451 12
5452 17
5453 14
5454 21
5455 18
5456 14
5457 21
5458 18
5459 12
5460 17
5461 15
5462 13
5463 14
5464 17
5465 26
5467 35
5468 26
5470 35
5471 19
5472 24
5473 22
5474 21
5475 28
5476 25
5477 21
5478 28
5479 25
5480 19
5481 24
5482 22
5483 20
5484 19
5485 17
5486 26
5488 35
5489 26
5491 35
5492 19
5493 24
5494 22
5495 21
5496 28
5497 25
5498 21
5499 28
5500 25
5501 19
5502 24
5503 22
5504 20
5505 19
5506 22
5507 31
5508 27
5509 22
5510 18
5511 21
5512 20
5513 20
5514 25
5515 23
5516 20
5517 25
5518 23
5519 18
5520 21
5521 20
5522 17
5523 26
5525 35
5526 26
5528 35
5529 19
5530 24
5531 22
5532 21
5533 28
5534 25
5535 21
5536 28
5537 25
5538 19
5539 24
5540 22
5541 20
5542 19
5543 17
5544 26
5546 35
5547 26
5549 35
5550 19
5551 24
5552 22
5553 21
5554 28
5555 25
5556 21
5557 28
5558 25
5559 19
5560 24
5561 22
5562 20
5563 19
5564 17
5566 35
5567 26
5569 35
5570 19
5571 24
5572 22
5573 21
5574 28
5575 25
5576 21
5577 28
5578 25
5579 24
5580 22
5581 20
5582 19
5583 22
5584 31
5585 27
5586 22
5587 31
5588 27
5589 18
5590 21
5591 20
5592 20
5593 25
5594 23
5595 20
5596 25
5597 23
5598 18
5599 20
5600 17
5601 26
5603 35
5604 26
5606 35
5607 19
5608 24
5609 22
5610 28
5611 25
5612 21
5613 28
5614 25
5615 19
5616 24
5617 22
5618 20
5619 19
5620 14
5621 23
5623 32
5624 23
5626 32
5627 16
5628 21
5629 19
5630 18
5631 25
5632 22
5633 18
5634 25
5635 22
5636 16
5637 21
5638 19
5639 17
5640 16
5641 14
5642 23
5644 32
5645 23
5647 32
5648 16
5649 21
5650 19
5651 18
5652 25
5653 22
5654 18
5655 25
5656 22
5657 16
5658 21
5659 19
5660 17
5661 16
5662 19
5663 28
5664 24
5665 28
5666 24
5667 15
5668 18
5669 17
5670 22
5671 20
5672 17
5673 22
5674 20
5675 15
5676 18
5677 17
5678 14
5679 23
5681 32
5682 23
5684 16
5685 21
5686 19
5687 18
5688 25
5689 22
5690 18
5691 25
5692 22
5693 16
5694 21
5695 19
5696 17
5697 14
5698 23
5700 32
5701 23
5703 16
5704 21
5705 19
5706 18
5707 25
5708 22
5709 18
5710 25
5711 22
5712 16
5713 21
5714 19
5715 17
5716 16
5717 14
5718 23
5720 32
5721 23
5723 32
5724 16
5725 21
5726 19
5727 18
5728 25
5729 22
5730 18
5731 25
5732 22
5733 16
5734 21
5735 19
5736 17
5737 16
5738 19
5739 28
5740 24
5741 19
5742 28
5743 24
5744 15
5745 18
5746 17
5747 17
5748 22
5749 20
5750 17
5751 22
5752 15
5753 18
5754 14
5755 23
5757 32
5758 23
5760 32
5761 16
5762 21
5763 19
5764 18
5765 25
5766 22
5767 18
5768 25
5769 22
5770 21
5771 19
5772 17
5773 16
5774 5
5775 8
5776 17
5777 34
5778 26
5779 17
5780 34
5781 26
5782 10
5783 15
5784 13
5785 12
5786 19
5787 16
5788 12
5789 19
5790 10
5791 15
5792 13
5793 11
5794 10
5795 8
5796 17
5797 34
5798 26
5799 17
5800 34
5801 26
5802 10
5803 15
5804 13
5805 12
5806 19
5807 16
5808 12
5809 19
5810 16
5811 10
5812 15
5813 13
5814 11
5815 10
5816 13
5817 22
5818 18
5819 13
5820 22
5821 18
5822 12
5823 11
5824 11
5825 16
5826 14
5827 11
5828 16
5829 14
5830 9
5831 12
5832 11
5833 8
5834 17
5835 34
5836 26
5837 17
5838 34
5839 26
5840 10
5841 15
5842 13
5843 12
5844 19
5845 16
5846 12
5847 19
5848 16
5849 10
5850 15
5851 13
5852 11
5853 10
5854 8
5855 17
5856 34
5857 26
5858 34
5859 26
5860 10
5861 13
5862 12
5863 19
5864 12
5865 19
5866 16
5867 10
5868 15
5869 13
5870 11
5871 10
5872 8
5873 17
5874 34
5875 26
5876 17
5877 34
5878 26
5879 10
5880 15
5881 13
5882 12
5883 19
5884 16
5885 12
5886 19
5887 16
5888 10
5889 15
5890 13
5891 11
5892 10
5893 13
5894 22
5895 18
5896 13
5897 18
5898 9
5899 12
5900 11
5901 16
5902 14
5903 11
5904 16
5905 14
5906 9
5907 12
5908 11
5909 8
5910 17
5911 34
5912 26
5913 17
5914 34
5915 26
5916 10
5917 15
5918 13
5919 12
5920 19
5921 16
5922 12
5923 16
5924 10
5925 15
5926 13
5927 11
5928 10
5929 10
5930 13
5931 39
5932 22
5933 39
5934 31
5935 15
5936 20
5937 18
5938 17
5939 24
5940 21
5941 17
5942 24
5943 21
5944 15
5945 20
5946 18
5947 16
5948 15
5949 13
5950 39
5951 31
5952 22
5953 39
5954 31
5955 15
5956 20
5957 18
5958 17
5959 24
5960 21
5961 17
5962 24
5963 21
5964 15
5965 20
5966 18
5967 16
5968 15
5969 18
5970 27
5971 23
5972 18
5973 27
5974 23
5975 14
5976 17
5977 16
5978 21
5979 19
5980 16
5981 21
5982 19
5983 14
5984 17
5985 13
5986 22
5987 39
5988 31
5989 22
5990 39
5991 31
5992 15
5993 20
5994 18
5995 17
5996 24
5997 21
5998 17
5999 24
6000 21
6001 15
6002 20
6003 18
6004 16
6005 15
6006 13
6007 22
6008 39
6009 31
6010 22
6011 39
6012 31
6013 15
6014 20
6015 18
6016 17
6017 24
6018 21
6019 17
6020 24
6021 21
6022 15
6023 20
6024 18
6025 15
6026 13
6027 22
6028 39
6029 31
6030 22
6031 39
6032 31
6033 15
6034 20
6035 18
6036 17
6037 24
6038 21
6039 17
6040 24
6041 21
6042 15
6043 20
6044 18
6045 15
6046 18
6047 27
6048 23
6049 18
6050 27
6051 23
6052 14
6053 17
6054 16
6055 16
6056 21
6057 19
6058 16
6059 21
6060 19
6061 14
6062 17
6063 16
6064 13
6065 22
6066 39
6067 31
6068 22
6069 39
6070 31
6071 15
6072 20
6073 17
6074 24
6075 21
6076 17
6077 24
6078 21
6079 15
6080 20
6081 18
6082 16
6083 15
6084 8
6085 11
6086 20
6087 37
6088 29
6089 20
6090 37
6091 29
6092 13
6093 18
6094 16
6095 15
6096 22
6097 19
6098 15
6099 22
6100 19
6101 13
6102 18
6103 16
6104 14
6105 13
6106 11
6107 20
6108 37
6109 29
6110 20
6111 37
6112 29
6113 13
6114 18
6115 16
6116 15
6117 22
6118 19
6119 15
6120 22
6121 19
6122 13
6123 18
6124 16
6125 14
6126 13
6127 16
6128 25
6129 21
6130 16
6131 25
6132 21
6133 12
6134 15
6135 14
6136 14
6137 19
6138 17
6139 14
6140 19
6141 17
6142 15
6143 14
6144 11
6145 20
6146 37
6147 29
6148 20
6149 37
6150 29
6151 13
6152 18
6153 16
6154 15
6155 19
6156 15
6157 22
6158 19
6159 13
6160 18
6161 16
6162 14
6163 13
6164 11
6165 20
6166 37
6167 29
6168 20
6169 37
6170 29
6171 13
6172 16
6173 15
6174 22
6175 19
6176 15
6177 22
6178 19
6179 13
6180 18
6181 16
6182 14
6183 13
6184 11
6185 20
6186 37
6187 29
6188 37
6189 29
6190 18
6191 16
6192 15
6193 22
6194 19
6195 15
6196 22
6197 19
6198 13
6199 18
6200 16
6201 14
6202 13
6203 16
6204 25
6205 21
6206 16
6207 25
6208 21
6209 12
6210 15
6211 14
6212 14
6213 19
6214 17
6215 14
6216 19
6217 17
6218 12
6219 15
6220 14
6221 11
6222 20
6223 37
6224 29
6225 20
6226 37
6227 29
6228 13
6229 18
6230 16
6231 15
6232 22
6233 19
6234 15
6235 22
6236 19
6237 13
6238 18
6239 16
6240 14
6241 13
6242 6
6243 9
6244 18
6245 35
6246 27
6247 18
6248 35
6249 27
6250 11
6251 16
6252 14
6253 13
6254 20
6255 17
6256 13
6257 20
6258 17
6259 11
6260 16
6261 14
6262 12
6263 11
6264 9
6265 18
6266 35
6267 27
6268 18
6269 35
6270 27
6271 11
6272 16
6273 14
6274 13
6275 20
6276 17
6277 13
6278 20
6279 17
6280 11
6281 16
6282 14
6283 12
6284 11
6285 14
6286 23
6287 19
6288 14
6289 23
6290 19
6291 10
6292 13
6293 12
6294 12
6295 17
6296 15
6297 12
6298 17
6299 15
6300 10
6301 13
6302 12
6303 9
6304 18
6305 35
6306 27
6307 18
6308 35
6309 27
6310 16
6311 14
6312 20
6313 17
6314 13
6315 20
6316 17
6317 11
6318 16
6319 14
6320 12
6321 11
6322 9
6323 18
6324 35
6325 18
6326 35
6327 27
6328 11
6329 16
6330 14
6331 13
6332 20
6333 17
6334 13
6335 20
6336 17
6337 11
6338 16
6339 14
6340 12
6341 11
6342 9
6343 18
6344 35
6345 27
6346 18
6347 35
6348 27
6349 11
6350 16
6351 14
6352 13
6353 20
6354 17
6355 13
6356 20
6357 17
6358 11
6359 16
6360 14
6361 12
6362 11
6363 14
6364 23
6365 19
6366 14
6367 23
6368 19
6369 10
6370 13
6371 12
6372 12
6373 17
6374 15
6375 12
6376 17
6377 15
6378 10
6379 13
6380 12
6381 9
6382 18
6383 35
6384 27
6385 18
6386 35
6387 27
6388 11
6389 16
6390 14
6391 13
6392 20
6393 17
6394 13
6395 20
6396 17
6397 11
6398 16
6399 14
6400 12
6401 11
6402 5
6403 8
6404 17
6405 34
6406 26
6407 17
6408 34
6409 26
6410 10
6411 15
6412 13
6413 19
6414 16
6415 12
6416 19
6417 16
6418 10
6419 15
6420 13
6421 11
6422 10
6423 8
6424 17
6425 34
6426 26
6427 17
6428 34
6429 26
6430 10
6431 15
6432 13
6433 12
6434 19
6435 16
6436 19
6437 16
6438 10
6439 15
6440 13
6441 10
6442 13
6443 22
6444 18
6445 13
6446 22
6447 18
6448 9
6449 11
6450 11
6451 16
6452 14
6453 11
6454 16
6455 9
6456 12
6457 11
6458 8
6459 17
6460 34
6461 26
6462 17
6463 34
6464 26
6465 10
6466 15
6467 13
6468 12
6469 19
6470 16
6471 12
6472 19
6473 10
6474 15
6475 13
6476 11
6477 10
6478 8
6479 17
6480 34
6481 26
6482 17
6483 34
6484 26
6485 15
6486 13
6487 12
6488 19
6489 16
6490 12
6491 19
6492 16
6493 10
6494 15
6495 13
6496 11
6497 10
6498 8
6499 17
6500 34
6501 26
6502 17
6503 34
6504 26
6505 10
6506 15
6507 13
6508 12
6509 19
6510 12
6511 19
6512 16
6513 15
6514 13
6515 11
6516 10
6517 13
6518 22
6519 18
6520 13
6521 22
6522 18
6523 9
6524 11
6525 11
6526 16
6527 14
6528 11
6529 16
6530 14
6531 9
6532 12
6533 11
6534 8
6535 17
6536 34
6537 26
6538 17
6539 34
6540 26
6541 10
6542 15
6543 13
6544 12
6545 19
6546 16
6547 12
6548 19
6549 16
6550 10
6551 15
6552 13
6553 11
6554 10
6555 8
6556 11
6557 20
6558 37
6559 29
6560 20
6561 37
6562 29
6563 13
6564 18
6565 16
6566 15
6567 22
6568 19
6569 15
6570 22
6571 19
6572 13
6573 18
6574 16
6575 13
6576 11
6577 20
6578 37
6579 29
6580 20
6581 37
6582 29
6583 13
6584 16
6585 15
6586 22
6587 19
6588 15
6589 22
6590 19
6591 13
6592 18
6593 16
6594 14
6595 13
6596 16
6597 25
6598 21
6599 25
6600 12
6601 15
6602 14
6603 14
6604 19
6605 17
6606 14
6607 19
6608 17
6609 12
6610 14
6611 11
6612 20
6613 37
6614 29
6615 37
6616 29
6617 13
6618 18
6619 16
6620 15
6621 19
6622 15
6623 22
6624 19
6625 13
6626 18
6627 16
6628 14
6629 13
6630 11
6631 20
6632 37
6633 29
6634 20
6635 37
6636 29
6637 13
6638 18
6639 16
6640 15
6641 22
6642 19
6643 15
6644 22
6645 19
6646 13
6647 18
6648 16
6649 13
6650 11
6651 20
6652 37
6653 29
6654 20
6655 37
6656 29
6657 13
6658 18
6659 16
6660 15
6661 22
6662 15
6663 22
6664 19
6665 13
6666 18
6667 16
6668 14
6669 13
6670 16
6671 25
6672 21
6673 16
6674 25
6675 21
6676 12
6677 15
6678 14
6679 14
6680 19
6681 17
6682 14
6683 19
6684 17
6685 12
6686 15
6687 14
6688 20
6689 29
6690 20
6691 37
6692 29
6693 13
6694 18
6695 16
6696 15
6697 22
6698 19
6699 22
6700 13
6701 18
6702 16
6703 14
6704 13
6705 17
6706 20
6707 29
6708 38
6709 29
6711 38
6712 22
6713 27
6714 25
6715 24
6716 31
6717 28
6718 24
6719 31
6720 28
6721 22
6722 27
6723 25
6724 23
6725 22
6726 20
6727 29
6729 38
6730 29
6732 38
6733 22
6734 27
6735 25
6736 31
6737 28
6738 24
6739 31
6740 28
6741 22
6742 27
6743 25
6744 23
6745 22
6746 25
6747 34
6748 30
6749 30
6750 21
6751 24
6752 23
6753 23
6754 28
6755 26
6756 23
6757 28
6758 26
6759 21
6760 24
6761 23
6762 20
6763 29
6765 38
6766 29
6768 38
6769 22
6770 27
6771 25
6772 24
6773 28
6774 24
6775 28
6776 22
6777 27
6778 25
6779 23
6780 22
6781 20
6783 38
6784 29
6786 38
6787 22
6788 27
6789 25
6790 24
6791 31
6792 28
6793 24
6794 31
6795 28
6796 22
6797 27
6798 23
6799 22
6800 20
6801 29
6803 38
6804 29
6806 38
6807 22
6808 27
6809 25
6810 24
6811 31
6812 28
6813 24
6814 31
6815 22
6816 27
6817 25
6818 23
6819 22
6820 25
6821 34
6822 30
6823 25
6824 34
6825 30
6826 21
6827 24
6828 23
6829 23
6830 26
6831 23
6832 28
6833 26
6834 21
6835 24
6836 23
6837 20
6838 29
6840 38
6841 29
6843 38
6844 27
6845 25
6846 24
6847 31
6848 28
6849 24
6850 31
6851 28
6852 22
6853 27
6854 25
6855 23
6856 22
6857 13
6858 16
6859 25
6861 34
6862 25
6864 34
6865 18
6866 23
6867 21
6868 20
6869 27
6870 24
6871 20
6872 27
6873 24
6874 18
6875 23
6876 19
6877 18
6878 16
6879 25
6881 34
6883 34
6884 18
6885 23
6886 21
6887 20
6888 27
6889 24
6890 20
6891 27
6892 24
6893 18
6894 23
6895 21
6896 19
6897 18
6898 21
6899 30
6900 26
6901 21
6902 30
6903 26
6904 17
6905 20
6906 19
6907 19
6908 24
6909 22
6910 19
6911 24
6912 22
6913 20
6914 19
6915 16
6916 25
6918 34
6919 25
6921 34
6922 18
6923 23
6924 21
6925 20
6926 27
6927 24
6928 20
6929 24
6930 23
6931 21
6932 19
6933 18
6934 16
6935 25
6937 34
6938 25
6940 34
6941 18
6942 23
6943 21
6944 20
6945 27
6946 24
6947 20
6948 24
6949 18
6950 23
6951 21
6952 19
6953 18
6954 16
6956 34
6957 25
6959 34
6960 23
6961 21
6962 20
6963 27
6964 24
6965 27
6966 24
6967 18
6968 23
6969 21
6970 19
6971 18
6972 21
6973 30
6974 26
6975 21
6976 30
6977 26
6978 17
6979 20
6980 19
6981 19
6982 24
6983 22
6984 24
6985 22
6986 17
6987 20
6988 19
6989 16
6990 25
6992 34
6993 25
6995 34
6996 18
6997 23
6998 20
6999 27
7000 24
7001 20
7002 27
7003 24
7004 18
7005 23
7006 21
7007 19
7008 18
7009 8
7010 11
7011 20
7012 37
7013 29
7014 37
7015 29
7016 13
7017 18
7018 16
7019 15
7020 22
7021 19
7022 15
7023 22
7024 19
7025 13
7026 18
7027 16
7028 14
7029 13
7030 11
7031 20
7032 37
7033 29
7034 20
7035 37
7036 29
7037 13
7038 18
7039 16
7040 15
7041 22
7042 19
7043 15
7044 22
7045 19
7046 13
7047 18
7048 14
7049 13
7050 16
7051 25
7052 21
7053 16
7054 25
7055 21
7056 12
7057 15
7058 14
7059 14
7060 19
7061 17
7062 14
7063 19
7064 17
7065 12
7066 15
7067 14
7068 11
7069 20
7070 37
7071 29
7072 20
7073 37
7074 29
7075 13
7076 18
7077 16
7078 15
7079 22
7080 22
7081 19
7082 13
7083 18
7084 16
7085 14
7086 13
7087 11
7088 20
7089 37
7090 29
7091 20
7092 37
7093 29
7094 13
7095 18
7096 16
7097 15
7098 22
7099 19
7100 15
7101 22
7102 19
7103 13
7104 18
7105 16
7106 14
7107 13
7108 11
7109 20
7110 37
7111 29
7112 20
7113 37
7114 13
7115 18
7116 16
7117 15
7118 22
7119 19
7120 15
7121 22
7122 19
7123 13
7124 18
7125 16
7126 14
7127 13
7128 16
7129 25
7130 21
7131 16
7132 25
7133 21
7134 12
7135 15
7136 14
7137 14
7138 19
7139 17
7140 14
7141 19
7142 17
7143 12
7144 15
7145 14
7146 11
7147 20
7148 37
7149 29
7150 20
7151 37
7152 29
7153 13
7154 18
7155 16
7156 15
7157 22
7158 19
7159 22
7160 19
7161 13
7162 18
7163 16
7164 14
7165 13
7166 17
7167 20
7168 29
7170 38
7171 29
7173 38
7174 22
7175 27
7176 25
7177 24
7178 31
7179 28
7180 24
7181 31
7182 28
7183 22
7184 27
7185 25
7186 23
7187 22
7188 20
7189 29
7191 38
7192 29
7194 38
7195 22
7196 27
7197 25
7198 24
7199 31
7200 28
7201 24
7202 31
7203 28
7204 22
7205 27
7206 25
7207 23
7208 22
7209 25
7210 34
7211 30
7212 25
7213 34
7214 30
7215 21
7216 24
7217 23
7218 23
7219 28
7220 23
7221 28
7222 26
7223 21
7224 24
7225 23
7226 20
7227 29
7229 29
7231 22
7232 27
7233 25
7234 24
7235 31
7236 28
7237 24
7238 31
7239 28
7240 22
7241 27
7242 23
7243 22
7244 20
7245 29
7247 38
7248 29
7250 38
7251 22
7252 27
7253 25
7254 24
7255 31
7256 24
7257 31
7258 28
7259 22
7260 27
7261 25
7262 23
7263 22
7264 20
7265 29
7267 38
7268 29
7270 38
7271 22
7272 27
7273 25
7274 24
7275 31
7276 28
7277 24
7278 31
7279 28
7280 22
7281 27
7282 25
7283 23
7284 22
7285 25
7286 30
7287 25
7288 34
7289 30
7290 21
7291 23
7292 23
7293 28
7294 26
7295 23
7296 28
7297 26
7298 21
7299 24
7300 23
7301 20
7302 29
7304 38
7305 29
7307 38
7308 22
7309 27
7310 25
7311 24
7312 31
7313 28
7314 24
7315 31
7316 22
7317 27
7318 25
7319 23
7320 22
7321 25
7323 34
7324 25
7326 18
7327 23
7328 21
7329 20
7330 27
7331 24
7332 20
7333 27
7334 24
7335 18
7336 23
7337 21
7338 19
7339 18
7340 16
7341 25
7343 34
7344 25
7346 34
7347 18
7348 23
7349 21
7350 20
7351 27
7352 20
7353 27
7354 24
7355 18
7356 23
7357 21
7358 18
7359 21
7360 30
7361 26
7362 21
7363 30
7364 26
7365 17
7366 20
7367 19
7368 19
7369 24
7370 22
7371 19
7372 24
7373 22
7374 17
7375 20
7376 19
7377 16
7378 25
7380 34
7381 25
7383 34
7384 18
7385 23
7386 21
7387 20
7388 27
7389 24
7390 20
7391 27
7392 24
7393 18
7394 23
7395 21
7396 19
7397 18
7398 16
7399 25
7401 34
7402 25
7404 18
7405 23
7406 21
7407 20
7408 27
7409 24
7410 20
7411 27
7412 24
7413 18
7414 23
7415 21
7416 19
7417 18
7418 16
7420 34
7421 25
7423 34
7424 18
7425 23
7426 21
7427 27
7428 24
7429 20
7430 27
7431 24
7432 18
7433 23
7434 21
7435 19
7436 18
7437 21
7438 30
7439 26
7440 21
7441 30
7442 26
7443 17
7444 20
7445 19
7446 19
7447 24
7448 22
7449 19
7450 24
7451 22
7452 17
7453 20
7454 19
7455 16
7456 25
7458 34
7459 25
7461 34
7462 18
7463 23
7464 21
7465 20
7466 27
7467 24
7468 20
7469 27
7470 24
7471 18
7472 23
7473 21
7474 19
7475 18
7476 4
7477 7
7478 16
7479 33
7480 25
7481 16
7482 33
7483 25
7484 9
7485 14
7486 12
7487 11
7488 18
7489 15
7490 11
7491 18
7492 15
7493 9
7494 14
7495 12
7496 10
7497 9
7498 7
7499 16
7500 33
7501 25
7502 16
7503 33
7504 25
7505 9
7506 14
7507 12
7508 11
7509 18
7510 15
7511 11
7512 18
7513 15
7514 9
7515 14
7516 12
7517 10
7518 9
7519 12
7520 21
7521 17
7522 12
7523 21
7524 17
7525 8
7526 11
7527 10
7528 10
7529 15
7530 13
7531 10
7532 15
7533 13
7534 8
7535 11
7536 10
7537 7
7538 16
7539 33
7540 25
7541 33
7542 25
7543 9
7544 12
7545 11
7546 18
7547 15
7548 11
7549 18
7550 15
7551 9
7552 14
7553 12
7554 10
7555 9
7556 7
7557 16
7558 33
7559 25
7560 16
7561 33
7562 25
7563 9
7564 14
7565 12
7566 11
7567 18
7568 15
7569 11
7570 18
7571 15
7572 9
7573 14
7574 10
7575 9
7576 7
7577 16
7578 33
7579 25
7580 16
7581 33
7582 25
7583 9
7584 14
7585 12
7586 11
7587 18
7588 15
7589 11
7590 18
7591 15
7592 9
7593 14
7594 12
7595 10
7596 9
7597 12
7598 21
7599 17
7600 12
7601 21
7602 17
7603 8
7604 11
7605 10
7606 10
7607 15
7608 13
7609 10
7610 15
7611 13
7612 8
7613 11
7614 10
7615 7
7616 16
7617 33
7618 25
7619 16
7620 33
7621 25
7622 9
7623 14
7624 12
7625 11
7626 18
7627 15
7628 18
7629 15
7630 9
7631 14
7632 10
7633 9
7634 7
7635 10
7636 19
7637 36
7638 28
7639 19
7640 36
7641 12
7642 17
7643 15
7644 14
7645 21
7646 18
7647 14
7648 21
7649 18
7650 17
7651 15
7652 13
7653 12
7654 10
7655 19
7656 36
7657 28
7658 36
7659 28
7660 12
7661 17
7662 15
7663 14
7664 21
7665 18
7666 14
7667 21
7668 12
7669 17
7670 15
7671 13
7672 12
7673 24
7674 20
7675 15
7676 24
7677 20
7678 11
7679 14
7680 13
7681 13
7682 18
7683 16
7684 13
7685 18
7686 16
7687 11
7688 14
7689 13
7690 10
7691 19
7692 36
7693 28
7694 19
7695 36
7696 28
7697 12
7698 17
7699 15
7700 14
7701 21
7702 18
7703 14
7704 21
7705 18
7706 12
7707 17
7708 15
7709 13
7710 12
7711 10
7712 19
7713 28
7714 19
7715 36
7716 28
7717 12
7718 17
7719 15
7720 14
7721 21
7722 18
7723 14
7724 21
7725 18
7726 12
7727 17
7728 15
7729 13
7730 12
7731 10
7732 19
7733 36
7734 28
7735 19
7736 36
7737 28
7738 12
7739 17
7740 15
7741 14
7742 21
7743 18
7744 14
7745 21
7746 18
7747 12
7748 17
7749 15
7750 12
7751 15
7752 24
7753 20
7754 15
7755 24
7756 20
7757 11
7758 14
7759 13
7760 13
7761 18
7762 16
7763 13
7764 18
7765 16
7766 11
7767 14
7768 13
7769 19
7770 36
7771 28
7772 36
7773 28
7774 12
7775 17
7776 15
7777 14
7778 21
7779 18
7780 14
7781 21
7782 18
7783 12
7784 17
7785 15
7786 13
7787 6
7788 9
7789 18
7790 35
7791 27
7792 18
7793 35
7794 27
7795 11
7796 16
7797 14
7798 20
7799 17
7800 13
7801 20
7802 17
7803 11
7804 16
7805 14
7806 12
7807 11
7808 9
7809 18
7810 35
7811 27
7812 18
7813 35
7814 27
7815 11
7816 16
7817 14
7818 13
7819 20
7820 17
7821 13
7822 20
7823 17
7824 11
7825 16
7826 14
7827 12
7828 11
7829 14
7830 23
7831 19
7832 14
7833 23
7834 10
7835 13
7836 12
7837 12
7838 17
7839 15
7840 12
7841 17
7842 15
7843 10
7844 13
7845 12
7846 9
7847 18
7848 35
7849 27
7850 18
7851 35
7852 27
7853 11
7854 16
7855 14
7856 13
7857 20
7858 17
7859 13
7860 20
7861 17
7862 11
7863 16
7864 14
7865 12
7866 11
7867 9
7868 18
7869 35
7870 27
7871 18
7872 27
7873 11
7874 16
7875 13
7876 20
7877 17
7878 20
7879 17
7880 11
7881 16
7882 14
7883 12
7884 11
7885 9
7886 18
7887 35
7888 27
7889 18
7890 35
7891 27
7892 11
7893 16
7894 14
7895 13
7896 20
7897 13
7898 20
7899 17
7900 11
7901 16
7902 14
7903 12
7904 23
7905 19
7906 14
7907 23
7908 19
7909 10
7910 13
7911 12
7912 12
7913 17
7914 15
7915 12
7916 17
7917 15
7918 10
7919 13
7920 12
7921 18
7922 35
7923 27
7924 18
7925 35
7926 27
7927 11
7928 16
7929 14
7930 13
7931 20
7932 17
7933 13
7934 20
7935 17
7936 11
7937 16
7938 14
7939 12
7940 11
7941 6
7942 9
7943 18
7944 35
7945 27
7946 18
7947 35
7948 27
7949 11
7950 16
7951 14
7952 13
7953 20
7954 17
7955 13
7956 20
7957 17
7958 11
7959 16
7960 14
7961 12
7962 11
7963 9
7964 18
7965 35
7966 27
7967 18
7968 35
7969 27
7970 11
7971 16
7972 14
7973 13
7974 20
7975 17
7976 13
7977 17
7978 11
7979 16
7980 14
7981 12
7982 11
7983 14
7984 23
7985 19
7986 14
7987 23
7988 19
7989 10
7990 13
7991 12
7992 12
7993 17
7994 15
7995 12
7996 17
7997 15
7998 10
7999 13
8000 12
8001 9
8002 18
8003 35
8004 35
8005 27
8006 11
8007 14
8008 13
8009 20
8010 17
8011 13
8012 20
8013 17
8014 11
8015 16
8016 14
8017 12
8018 11
8019 9
8020 18
8021 35
8022 27
8023 18
8024 35
8025 27
8026 11
8027 16
8028 14
8029 13
8030 20
8031 13
8032 20
8033 17
8034 11
8035 16
8036 14
8037 12
8038 11
8039 9
8040 18
8041 35
8042 27
8043 18
8044 35
8045 27
8046 11
8047 14
8048 13
8049 20
8050 17
8051 13
8052 20
8053 17
8054 11
8055 16
8056 14
8057 12
8058 11
8059 14
8060 19
8061 14
8062 23
8063 19
8064 10
8065 13
8066 12
8067 12
8068 17
8069 15
8070 12
8071 17
8072 15
8073 10
8074 13
8075 12
8076 18
8077 35
8078 27
8079 18
8080 35
8081 27
8082 11
8083 16
8084 14
8085 13
8086 20
8087 17
8088 20
8089 17
8090 11
8091 16
8092 14
8093 12
8094 11
8095 11
8096 14
8097 23
8099 23
8101 32
8102 16
8103 21
8104 19
8105 18
8106 25
8107 22
8108 18
8109 25
8110 22
8111 16
8112 21
8113 19
8114 17
8115 16
8116 14
8117 23
8119 32
8120 23
8122 32
8123 16
8124 21
8125 19
8126 18
8127 25
8128 22
8129 18
8130 25
8131 22
8132 16
8133 21
8134 19
8135 17
8136 16
8137 19
8138 28
8139 24
8140 19
8141 28
8142 24
8143 15
8144 18
8145 17
8146 17
8147 22
8148 20
8149 17
8150 22
8151 20
8152 15
8153 18
8154 17
8155 14
8156 23
8158 32
8159 23
8161 32
8162 16
8163 21
8164 18
8165 25
8166 22
8167 18
8168 25
8169 22
8170 16
8171 21
8172 19
8173 17
8174 16
8175 14
8176 23
8178 32
8179 23
8181 32
8182 16
8183 21
8184 19
8185 18
8186 25
8187 22
8188 18
8189 25
8190 22
8191 16
8192 21
8193 19
8194 17
8195 16
8196 14
8197 23
8198 32
8199 23
8201 32
8202 16
8203 21
8204 19
8205 18
8206 25
8207 22
8208 18
8209 25
8210 22
8211 16
8212 21
8213 19
8214 17
8215 16
8216 19
8217 28
8218 24
8219 19
8220 28
8221 24
8222 15
8223 17
8224 22
8225 20
8226 17
8227 22
8228 20
8229 15
8230 18
8231 17
8232 14
8233 23
8235 32
8236 23
8238 32
8239 21
8240 19
8241 18
8242 25
8243 22
8244 18
8245 25
8246 22
8247 16
8248 21
8249 19
8250 17
8251 16
8252 9
8253 12
8254 21
8255 38
8256 30
8257 21
8258 38
8259 30
8260 14
8261 19
8262 17
8263 16
8264 23
8265 20
8266 16
8267 23
8268 20
8269 14
8270 19
8271 17
8272 15
8273 14
8274 12
8275 21
8276 38
8277 30
8278 21
8279 38
8280 30
8281 14
8282 19
8283 17
8284 16
8285 23
8286 20
8287 16
8288 23
8289 20
8290 14
8291 19
8292 17
8293 15
8294 14
8295 17
8296 26
8297 22
8298 17
8299 26
8300 22
8301 13
8302 16
8303 15
8304 15
8305 20
8306 18
8307 15
8308 20
8309 18
8310 13
8311 16
8312 15
8313 12
8314 21
8315 38
8316 30
8317 38
8318 30
8319 14
8320 19
8321 17
8322 23
8323 20
8324 16
8325 23
8326 20
8327 14
8328 19
8329 17
8330 15
8331 12
8332 21
8333 38
8334 30
8335 21
8336 38
8337 30
8338 14
8339 19
8340 17
8341 16
8342 23
8343 20
8344 16
8345 23
8346 20
8347 14
8348 19
8349 17
8350 15
8351 14
8352 21
8353 30
8354 21
8355 38
8356 30
8357 14
8358 19
8359 17
8360 16
8361 23
8362 20
8363 16
8364 23
8365 20
8366 14
8367 19
8368 17
8369 15
8370 17
8371 26
8372 22
8373 17
8374 26
8375 22
8376 13
8377 16
8378 15
8379 20
8380 18
8381 15
8382 20
8383 18
8384 13
8385 16
8386 15
8387 12
8388 21
8389 38
8390 30
8391 21
8392 38
8393 30
8394 14
8395 19
8396 17
8397 16
8398 23
8399 20
8400 16
8401 23
8402 20
8403 14
8404 19
8405 17
8406 15
8407 14
8408 6
8409 9
8410 35
8411 27
8412 18
8413 35
8414 27
8415 11
8416 16
8417 13
8418 20
8419 17
8420 20
8421 17
8422 11
8423 16
8424 14
8425 12
8426 11
8427 9
8428 18
8429 35
8430 27
8431 18
8432 35
8433 27
8434 11
8435 16
8436 13
8437 20
8438 17
8439 13
8440 20
8441 17
8442 11
8443 16
8444 14
8445 12
8446 11
8447 14
8448 23
8449 19
8450 14
8451 23
8452 19
8453 10
8454 12
8455 12
8456 17
8457 15
8458 12
8459 17
8460 15
8461 13
8462 12
8463 9
8464 18
8465 35
8466 27
8467 18
8468 35
8469 27
8470 11
8471 16
8472 14
8473 13
8474 20
8475 17
8476 13
8477 11
8478 16
8479 14
8480 12
8481 11
8482 9
8483 18
8484 35
8485 27
8486 18
8487 35
8488 27
8489 11
8490 16
8491 14
8492 13
8493 20
8494 17
8495 13
8496 20
8497 17
8498 11
8499 16
8500 14
8501 12
8502 11
8503 9
8504 18
8505 35
8506 27
8507 18
8508 35
8509 27
8510 11
8511 16
8512 14
8513 13
8514 20
8515 17
8516 13
8517 20
8518 17
8519 11
8520 16
8521 14
8522 12
8523 11
8524 14
8525 23
8526 19
8527 14
8528 23
8529 19
8530 10
8531 13
8532 12
8533 12
8534 17
8535 15
8536 12
8537 17
8538 15
8539 10
8540 13
8541 12
8542 9
8543 18
8544 35
8545 27
8546 18
8547 35
8548 27
8549 11
8550 16
8551 14
8552 13
8553 20
8554 17
8555 13
8556 20
8557 17
8558 11
8559 16
8560 12
8561 11
8562 11
8563 14
8564 23
8566 32
8567 23
8569 32
8570 16
8571 21
8572 19
8573 18
8574 25
8575 22
8576 18
8577 25
8578 22
8579 16
8580 21
8581 19
8582 17
8583 16
8584 14
8585 23
8587 32
8588 23
8589 32
8590 16
8591 21
8592 19
8593 18
8594 25
8595 22
8596 18
8597 25
8598 22
8599 16
8600 19
8601 17
8602 16
8603 19
8604 28
8605 24
8606 19
8607 28
8608 24
8609 15
8610 18
8611 17
8612 17
8613 22
8614 20
8615 17
8616 22
8617 20
8618 15
8619 18
8620 17
8621 14
8622 23
8624 23
8626 32
8627 16
8628 21
8629 19
8630 18
8631 25
8632 22
8633 18
8634 25
8635 22
8636 16
8637 21
8638 19
8639 17
8640 16
8641 14
8642 23
8644 32
8646 32
8647 16
8648 21
8649 19
8650 18
8651 25
8652 22
8653 18
8654 25
8655 22
8656 16
8657 21
8658 19
8659 17
8660 16
8661 14
8662 23
8664 32
8665 23
8667 32
8668 16
8669 21
8670 19
8671 18
8672 25
8673 22
8674 18
8675 25
8676 22
8677 16
8678 21
8679 19
8680 17
8681 16
8682 19
8683 28
8684 24
8685 19
8686 28
8687 24
8688 15
8689 18
8690 17
8691 17
8692 22
8693 20
8694 17
8695 22
8696 20
8697 15
8698 18
8699 17
8700 14
8701 23
8703 32
8704 23
8706 32
8707 16
8708 21
8709 19
8710 18
8711 25
8712 22
8713 18
8714 25
8715 22
8716 16
8717 21
8718 19
8719 17
8720 16
8721 9
8722 12
8723 21
8724 38
8725 30
8726 21
8727 38
8728 30
8729 14
8730 19
8731 17
8732 23
8733 20
8734 16
8735 23
8736 20
8737 14
8738 19
8739 17
8740 15
8741 14
8742 12
8743 21
8744 38
8745 30
8746 21
8747 38
8748 30
8749 14
8750 19
8751 17
8752 16
8753 23
8754 20
8755 16
8756 23
8757 20
8758 14
8759 19
8760 17
8761 15
8762 14
8763 17
8764 26
8765 22
8766 26
8767 22
8768 13
8769 16
8770 15
8771 15
8772 20
8773 18
8774 20
8775 18
8776 13
8777 16
8778 15
8779 12
8780 21
8781 38
8782 30
8783 21
8784 38
8785 30
8786 14
8787 19
8788 17
8789 16
8790 23
8791 16
8792 23
8793 20
8794 14
8795 19
8796 17
8797 15
8798 14
8799 12
8800 21
8801 38
8802 30
8803 21
8804 38
8805 30
8806 14
8807 19
8808 17
8809 16
8810 23
8811 20
8812 16
8813 23
8814 20
8815 14
8816 19
8817 17
8818 15
8819 14
8820 12
8821 21
8822 38
8823 30
8824 21
8825 38
8826 30
8827 14
8828 19
8829 17
8830 16
8831 23
8832 20
8833 16
8834 23
8835 20
8836 14
8837 19
8838 17
8839 15
8840 14
8841 17
8842 26
8843 17
8844 26
8845 22
8846 13
8847 16
8848 15
8849 15
8850 20
8851 18
8852 15
8853 20
8854 18
8855 13
8856 16
8857 15
8858 12
8859 21
8860 38
8861 30
8862 21
8863 30
8864 14
8865 19
8866 17
8867 16
8868 23
8869 20
8870 16
8871 23
8872 20
8873 14
8874 19
8875 17
8876 15
8877 14
8878 4
8879 7
8880 16
8881 33
8882 25
8883 16
8884 33
8885 25
8886 9
8887 14
8888 12
8889 18
8890 15
8891 11
8892 18
8893 15
8894 9
8895 14
8896 12
8897 10
8898 9
8899 7
8900 16
8901 33
8902 16
8903 33
8904 25
8905 14
8906 12
8907 11
8908 18
8909 15
8910 11
8911 18
8912 15
8913 9
8914 14
8915 12
8916 10
8917 9
8918 12
8919 21
8920 17
8921 12
8922 21
8923 17
8924 8
8925 11
8926 10
8927 10
8928 15
8929 13
8930 10
8931 15
8932 13
8933 8
8934 11
8935 10
8936 7
8937 16
8938 33
8939 25
8940 16
8941 33
8942 25
8943 9
8944 14
8945 12
8946 11
8947 18
8948 15
8949 11
8950 18
8951 15
8952 9
8953 14
8954 12
8955 10
8956 9
8957 7
8958 16
8959 33
8960 25
8961 16
8962 33
8963 25
8964 9
8965 14
8966 12
8967 11
8968 18
8969 15
8970 11
8971 18
8972 15
8973 9
8974 14
8975 12
8976 10
8977 9
8978 7
8979 16
8980 33
8981 25
8982 16
8983 33
8984 25
8985 9
8986 14
8987 12
8988 11
8989 18
8990 15
8991 11
8992 18
8993 15
8994 9
8995 14
8996 12
8997 10
8998 9
8999 12
9000 21
9001 17
9002 12
9003 21
9004 17
9005 8
9006 11
9007 10
9008 15
9009 13
9010 10
9011 15
9012 13
9013 8
9014 11
9015 10
9016 7
9017 16
9018 33
9019 25
9020 16
9021 33
9022 25
9023 9
9024 14
9025 12
9026 11
9027 18
9028 15
9029 11
9030 18
9031 15
9032 9
9033 14
9034 12
9035 10
9036 9
9037 7
9038 10
9039 19
9040 36
9041 19
9042 36
9043 28
9044 12
9045 17
9046 15
9047 14
9048 21
9049 18
9050 14
9051 21
9052 18
9053 12
9054 17
9055 15
9056 13
9057 12
9058 10
9059 19
9060 36
9061 28
9062 19
9063 36
9064 28
9065 12
9066 17
9067 15
9068 14
9069 21
9070 14
9071 21
9072 18
9073 12
9074 17
9075 15
9076 13
9077 12
9078 15
9079 24
9080 20
9081 15
9082 24
9083 20
9084 11
9085 14
9086 13
9087 13
9088 18
9089 16
9090 13
9091 18
9092 16
9093 11
9094 14
9095 13
9096 10
9097 19
9098 36
9099 28
9100 19
9101 36
9102 28
9103 12
9104 15
9105 14
9106 21
9107 18
9108 14
9109 21
9110 18
9111 12
9112 17
9113 15
9114 13
9115 12
9116 10
9117 19
9118 36
9119 19
9120 36
9121 28
9122 12
9123 17
9124 15
9125 14
9126 21
9127 18
9128 14
9129 21
9130 18
9131 12
9132 17
9133 15
9134 13
9135 12
9136 10
9137 19
9138 36
9139 28
9140 19
9141 36
9142 28
9143 12
9144 17
9145 15
9146 14
9147 21
9148 18
9149 14
9150 21
9151 18
9152 12
9153 17
9154 15
9155 12
9156 15
9157 24
9158 20
9159 15
9160 24
9161 20
9162 11
9163 14
9164 13
9165 13
9166 18
9167 16
9168 13
9169 18
9170 16
9171 11
9172 13
9173 10
9174 19
9175 28
9176 19
9177 36
9178 28
9179 12
9180 17
9181 15
9182 14
9183 21
9184 18
9185 14
9186 21
9187 18
9188 12
9189 17
9190 15
9191 13
9192 12
9193 6
9194 9
9195 18
9196 35
9197 27
9198 18
9199 35
9200 27
9201 11
9202 16
9203 14
9204 13
9205 20
9206 17
9207 20
9208 17
9209 11
9210 14
9211 12
9212 11
9213 9
9214 18
9215 35
9216 27
9217 18
9218 35
9219 27
9220 11
9221 16
9222 14
9223 13
9224 20
9225 17
9226 13
9227 20
9228 17
9229 11
9230 16
9231 14
9232 12
9233 11
9234 14
9235 23
9236 19
9237 14
9238 23
9239 19
9240 10
9241 13
9242 12
9243 12
9244 17
9245 12
9246 17
9247 15
9248 10
9249 13
9250 12
9251 9
9252 18
9253 27
9254 18
9255 35
9256 11
9257 16
9258 14
9259 13
9260 20
9261 17
9262 13
9263 20
9264 17
9265 16
9266 14
9267 12
9268 11
9269 9
9270 18
9271 35
9272 27
9273 18
9274 35
9275 27
9276 11
9277 16
9278 14
9279 13
9280 20
9281 17
9282 13
9283 20
9284 17
9285 11
9286 16
9287 14
9288 12
9289 11
9290 9
9291 18
9292 35
9293 27
9294 18
9295 35
9296 27
9297 11
9298 16
9299 14
9300 13
9301 20
9302 17
9303 13
9304 20
9305 11
9306 16
9307 14
9308 11
9309 14
9310 23
9311 19
9312 14
9313 23
9314 19
9315 10
9316 13
9317 12
9318 12
9319 17
9320 15
9321 12
9322 17
9323 15
9324 10
9325 13
9326 12
9327 9
9328 18
9329 35
9330 27
9331 18
9332 35
9333 27
9334 11
9335 16
9336 14
9337 13
9338 20
9339 17
9340 13
9341 11
9342 16
9343 14
9344 12
9345 11
9346 3
9347 6
9348 15
9349 32
9350 15
9351 32
9352 24
9353 8
9354 13
9355 11
9356 10
9357 17
9358 14
9359 10
9360 17
9361 14
9362 8
9363 13
9364 11
9365 9
9366 8
9367 6
9368 15
9369 32
9370 24
9371 15
9372 24
9373 8
9374 13
9375 11
9376 10
9377 17
9378 14
9379 10
9380 17
9381 14
9382 8
9383 13
9384 11
9385 9
9386 8
9387 11
9388 20
9389 11
9390 20
9391 7
9392 9
9393 9
9394 14
9395 12
9396 9
9397 14
9398 12
9399 7
9400 10
9401 9
9402 6
9403 15
9404 32
9405 24
9406 15
9407 32
9408 24
9409 8
9410 13
9411 11
9412 10
9413 14
9414 10
9415 17
9416 14
9417 8
9418 13
9419 11
9420 9
9421 8
9422 6
9423 15
9424 32
9425 24
9426 15
9427 32
9428 24
9429 8
9430 13
9431 11
9432 10
9433 14
9434 10
9435 17
9436 14
9437 8
9438 13
9439 11
9440 9
9441 8
9442 6
9443 15
9444 32
9445 24
9446 15
9447 32
9448 24
9449 8
9450 13
9451 11
9452 10
9453 14
9454 10
9455 17
9456 14
9457 8
9458 13
9459 11
9460 9
9461 8
9462 11
9463 20
9464 16
9465 11
9466 20
9467 16
9468 7
9469 10
9470 9
9471 9
9472 14
9473 12
9474 9
9475 14
9476 12
9477 7
9478 10
9479 9
9480 6
9481 15
9482 32
9483 24
9484 15
9485 32
9486 24
9487 8
9488 13
9489 11
9490 10
9491 17
9492 14
9493 10
9494 17
9495 14
9496 13
9497 11
9498 9
9499 8
9500 12
9501 15
9502 24
9504 33
9505 24
9507 33
9508 17
9509 22
9510 20
9511 19
9512 26
9513 23
9514 19
9515 26
9516 23
9517 17
9518 22
9519 20
9520 18
9521 17
9522 15
9523 24
9525 33
9526 24
9528 33
9529 17
9530 20
9531 19
9532 26
9533 23
9534 19
9535 26
9536 23
9537 17
9538 22
9539 20
9540 18
9541 17
9542 20
9543 29
9544 25
9545 20
9546 29
9547 25
9548 16
9549 18
9550 18
9551 23
9552 18
9553 23
9554 21
9555 16
9556 19
9557 18
9558 15
9560 33
9561 24
9563 33
9564 17
9565 22
9566 20
9567 19
9568 23
9569 19
9570 26
9571 23
9572 17
9573 22
9574 20
9575 18
9576 17
9577 15
9578 24
9580 33
9581 24
9583 33
9584 17
9585 22
9586 20
9587 19
9588 26
9589 23
9590 19
9591 26
9592 23
9593 17
9594 22
9595 20
9596 18
9597 17
9598 15
9599 24
9601 33
9602 24
9604 33
9605 17
9606 22
9607 20
9608 19
9609 26
9610 23
9611 19
9612 26
9613 23
9614 17
9615 22
9616 20
9617 18
9618 17
9619 20
9620 29
9621 20
9622 29
9623 25
9624 16
9625 19
9626 18
9627 18
9628 23
9629 21
9630 18
9631 23
9632 21
9633 16
9634 19
9635 18
9636 15
9638 33
9639 24
9641 33
9642 22
9643 20
9644 26
9645 23
9646 19
9647 26
9648 23
9649 17
9650 22
9651 20
9652 18
9653 17
9654 29
9655 32
9662 34
9663 39
9664 37
9667 36
9669 34
9670 39
9671 37
9672 35
9673 34
9674 32
9681 34
9682 39
9683 37
9684 36
9687 36
9690 34
9691 39
9692 37
9693 35
9694 34
9695 37
9698 37
9701 33
9702 36
9703 35
9704 35
9706 38
9707 35
9709 38
9710 33
9711 36
9712 35
9713 32
9720 34
9721 39
9722 37
9723 36
9726 36
9729 34
9730 39
9731 37
9732 35
9733 34
9734 32
9740 34
9741 39
9742 37
9743 36
9746 36
9749 34
9750 39
9751 37
9752 35
9753 34
9754 32
9761 34
9762 39
9763 37
9764 36
9767 36
9770 34
9771 39
9772 37
9773 35
9774 34
9775 37
9778 37
9781 33
9782 36
9783 35
9784 35
9786 38
9787 35
9789 38
9790 33
9791 35
9792 32
9799 34
9800 39
9801 37
9802 36
9805 36
9807 34
9808 39
9809 37
9810 35
9811 34
9812 21
9813 24
9814 33
9817 33
9820 26
9821 31
9822 28
9823 35
9824 32
9825 28
9826 35
9827 32
9828 26
9829 31
9830 29
9831 27
9832 26
9833 24
9834 33
9837 33
9840 26
9841 31
9842 29
9843 28
9844 35
9845 32
9846 28
9847 35
9848 26
9849 31
9850 29
9851 27
9852 26
9853 29
9854 38
9855 34
9856 29
9857 38
9858 34
9859 25
9860 28
9861 27
9862 27
9863 32
9864 30
9865 27
9866 32
9867 30
9868 25
9869 28
9870 27
9871 24
9872 33
9875 33
9878 26
9879 31
9880 29
9881 28
9882 35
9883 32
9884 28
9885 35
9886 32
9887 26
9888 31
9889 29
9890 27
9891 26
9892 24
9893 33
9896 33
9898 26
9899 31
9900 29
9901 28
9902 35
9903 32
9904 28
9905 35
9906 32
9907 26
9908 31
9909 29
9910 27
9911 26
9912 24
9913 33
9916 33
9919 26
9920 31
9921 29
9922 28
9923 35
9924 32
9925 28
9926 35
9927 32
9928 26
9929 31
9930 29
9931 27
9932 26
9933 29
9934 38
9935 29
9936 38
9937 34
9938 25
9939 28
9940 27
9941 27
9942 32
9943 30
9944 27
9945 32
9946 30
9947 25
9948 28
9949 24
9950 33
9952 33
9954 31
9955 29
9956 28
9957 35
9958 32
9959 28
9960 35
9961 32
9962 26
9963 31
9964 29
9965 27
9966 26
9967 12
9968 15
9969 24
9971 33
9972 24
9974 33
9975 17
9976 22
9977 20
9978 19
9979 26
9980 23
9981 19
9982 26
9983 23
9984 17
9985 22
9986 20
9987 18
9988 17
9989 15
9990 24
9992 33
9993 24
9994 33
9995 17
9996 22
9997 20
9998 26
9999 23
10000 19
10001 26
10002 23
10003 17
10004 22
10005 20
10006 18
10007 17
10008 29
10009 25
10010 20
10011 29
10012 25
10013 16
10014 19
10015 18
10016 18
10017 21
10018 18
10019 23
10020 21
10021 16
10022 19
10023 18
10024 15
10025 24
10027 24
10029 33
10030 17
10031 22
10032 20
10033 19
10034 26
10035 23
10036 19
10037 26
10038 23
10039 17
10040 22
10041 20
10042 18
10043 17
10044 15
10045 24
10047 33
10048 24
10050 33
10051 17
10052 22
10053 20
10054 19
10055 26
10056 23
10057 19
10058 26
10059 23
10060 17
10061 22
10062 20
10063 18
10064 17
10065 15
10067 33
10068 24
10070 33
10071 17
10072 22
10073 20
10074 19
10075 26
10076 23
10077 19
10078 26
10079 23
10080 17
10081 22
10082 20
10083 18
10084 17
10085 20
10086 29
10087 25
10088 20
10089 29
10090 25
10091 16
10092 19
10093 18
10094 18
10095 23
10096 21
10097 18
10098 23
10099 21
10100 16
10101 19
10102 18
10103 15
10104 24
10106 33
10107 24
10108 33
10109 22
10110 20
10111 19
10112 26
10113 23
10114 19
10115 26
10116 23
10117 17
10118 22
10119 18
10120 17
10121 29
10122 32
10129 34
10130 39
10131 37
10132 36
10135 36
10138 34
10139 39
10140 37
10141 35
10142 34
10143 32
10150 34
10151 39
10152 37
10153 36
10156 36
10159 34
10160 39
10161 37
10162 35
10163 34
10164 37
10167 37
10170 33
10171 36
10172 35
10173 35
10174 38
10175 35
10177 38
10178 33
10179 36
10180 35
10181 32
10188 34
10189 39
10190 37
10191 36
10194 36
10197 34
10198 39
10199 37
10200 35
10201 34
10202 32
10209 34
10210 39
10211 37
10212 36
10215 36
10218 34
10219 39
10220 37
10221 35
10222 34
10223 32
10229 34
10230 37
10231 36
10234 36
10237 34
10238 39
10239 37
10240 35
10241 34
10242 37
10245 37
10248 33
10249 36
10250 35
10251 35
10253 38
10254 35
10256 38
10257 33
10258 36
10259 35
10260 32
10266 34
10267 39
10268 37
10269 36
10272 36
10275 34
10276 39
10277 37
10278 35
10279 34
10280 21
10281 24
10282 33
10285 33
10288 26
10289 31
10290 29
10291 28
10292 35
10293 28
10294 35
10295 32
10296 26
10297 31
10298 29
10299 27
10300 26
10301 24
10302 33
10305 33
10308 26
10309 31
10310 29
10311 28
10312 35
10313 32
10314 28
10315 35
10316 32
10317 26
10318 31
10319 29
10320 27
10321 26
10322 29
10323 38
10324 34
10325 29
10326 38
10327 34
10328 25
10329 28
10330 27
10331 27
10332 32
10333 30
10334 27
10335 32
10336 30
10337 28
10338 27
10339 24
10340 33
10343 33
10345 26
10346 31
10347 29
10348 28
10349 35
10350 32
10351 28
10352 35
10353 32
10354 26
10355 31
10356 29
10357 27
10358 26
10359 24
10360 33
10363 33
10366 26
10367 31
10368 29
10369 28
10370 35
10371 32
10372 28
10373 35
10374 32
10375 26
10376 31
10377 29
10378 27
10379 26
10380 24
10381 33
10384 33
10387 26
10388 31
10389 29
10390 28
10391 35
10392 32
10393 28
10394 35
10395 32
10396 26
10397 31
10398 29
10399 27
10400 26
10401 29
10402 34
10403 29
10404 38
10405 34
10406 25
10407 28
10408 27
10409 27
10410 32
10411 30
10412 27
10413 32
10414 30
10415 25
10416 27
10417 24
10418 33
10421 33
10422 26
10423 31
10424 29
10425 28
10426 35
10427 32
10428 28
10429 35
10430 32
10431 26
10432 31
10433 29
10434 27
10435 26
10436 5
10437 8
10438 17
10439 34
10440 26
10441 17
10442 34
10443 26
10444 10
10445 15
10446 13
10447 12
10448 19
10449 16
10450 12
10451 19
10452 16
10453 10
10454 15
10455 13
10456 11
10457 10
10458 8
10459 17
10460 34
10461 26
10462 17
10463 34
10464 26
10465 10
10466 13
10467 12
10468 19
10469 12
10470 19
10471 16
10472 10
10473 15
10474 13
10475 11
10476 10
10477 13
10478 22
10479 18
10480 13
10481 22
10482 18
10483 9
10484 12
10485 11
10486 11
10487 16
10488 14
10489 11
10490 16
10491 14
10492 9
10493 12
10494 11
10495 8
10496 17
10497 34
10498 26
10499 17
10500 34
10501 26
10502 10
10503 15
10504 13
10505 12
10506 19
10507 12
10508 19
10509 16
10510 10
10511 15
10512 13
10513 11
10514 10
10515 8
10516 17
10517 34
10518 26
10519 17
10520 34
10521 26
10522 10
10523 15
10524 13
10525 12
10526 19
10527 16
10528 12
10529 19
10530 16
10531 10
10532 15
10533 13
10534 11
10535 10
10536 8
10537 34
10538 26
10539 17
10540 34
10541 26
10542 10
10543 15
10544 13
10545 12
10546 19
10547 16
10548 12
10549 19
10550 16
10551 10
10552 15
10553 13
10554 11
10555 10
10556 13
10557 22
10558 18
10559 13
10560 22
10561 18
10562 9
10563 12
10564 11
10565 11
10566 16
10567 14
10568 11
10569 16
10570 14
10571 9
10572 12
10573 11
10574 17
10575 34
10576 17
10577 34
10578 26
10579 10
10580 15
10581 13
10582 12
10583 19
10584 16
10585 12
10586 19
10587 16
10588 10
10589 15
10590 13
10591 11
10592 10
10593 10
10594 13
10595 22
10596 39
10597 31
10598 22
10599 39
10600 15
10601 20
10602 18
10603 17
10604 24
10605 21
10606 17
10607 24
10608 21
10609 15
10610 20
10611 18
10612 16
10613 15
10614 13
10615 22
10616 39
10617 31
10618 22
10619 39
10620 31
10621 15
10622 20
10623 18
10624 17
10625 24
10626 21
10627 17
10628 24
10629 21
10630 15
10631 20
10632 16
10633 15
10634 18
10635 27
10636 23
10637 18
10638 27
10639 23
10640 14
10641 16
10642 16
10643 21
10644 19
10645 16
10646 21
10647 19
10648 14
10649 17
10650 16
10651 13
10652 22
10653 39
10654 31
10655 22
10656 39
10657 31
10658 15
10659 20
10660 18
10661 17
10662 24
10663 21
10664 17
10665 24
10666 21
10667 15
10668 20
10669 18
10670 16
10671 15
10672 13
10673 22
10674 39
10675 31
10676 22
10677 39
10678 15
10679 20
10680 17
10681 24
10682 21
10683 17
10684 24
10685 21
10686 15
10687 20
10688 18
10689 16
10690 13
10691 22
10692 39
10693 31
10694 22
10695 39
10696 31
10697 15
10698 20
10699 18
10700 17
10701 24
10702 21
10703 17
10704 24
10705 15
10706 20
10707 18
10708 16
10709 15
10710 18
10711 27
10712 23
10713 27
10714 23
10715 14
10716 17
10717 16
10718 16
10719 21
10720 19
10721 16
10722 19
10723 14
10724 17
10725 16
10726 13
10727 22
10728 39
10729 31
10730 22
10731 39
10732 31
10733 15
10734 20
10735 18
10736 17
10737 24
10738 21
10739 17
10740 24
10741 21
10742 15
10743 20
10744 18
10745 16
10746 15
10747 8
10748 11
10749 20
10750 37
10751 29
10752 20
10753 37
10754 29
10755 13
10756 18
10757 16
10758 15
10759 22
10760 19
10761 15
10762 19
10763 13
10764 18
10765 16
10766 14
10767 13
10768 11
10769 20
10770 37
10771 29
10772 20
10773 37
10774 29
10775 13
10776 18
10777 16
10778 15
10779 22
10780 19
10781 15
10782 22
10783 19
10784 13
10785 18
10786 16
10787 14
10788 13
10789 16
10790 25
10791 21
10792 16
10793 21
10794 12
10795 15
10796 14
10797 14
10798 19
10799 17
10800 14
10801 19
10802 17
10803 12
10804 15
10805 14
10806 11
10807 20
10808 37
10809 29
10810 20
10811 37
10812 13
10813 18
10814 16
10815 15
10816 22
10817 19
10818 15
10819 22
10820 19
10821 13
10822 18
10823 16
10824 14
10825 13
10826 11
10827 20
10828 37
10829 29
10830 20
10831 37
10832 13
10833 18
10834 16
10835 15
10836 22
10837 19
10838 15
10839 22
10840 19
10841 13
10842 16
10843 14
10844 13
10845 11
10846 20
10847 37
10848 29
10849 20
10850 37
10851 29
10852 13
10853 18
10854 15
10855 22
10856 19
10857 15
10858 22
10859 19
10860 13
10861 18
10862 16
10863 14
10864 13
10865 16
10866 25
10867 21
10868 16
10869 25
10870 21
10871 12
10872 15
10873 14
10874 14
10875 19
10876 17
10877 14
10878 19
10879 17
10880 12
10881 15
10882 14
10883 11
10884 20
10885 37
10886 20
10887 37
10888 29
10889 13
10890 18
10891 16
10892 15
10893 22
10894 19
10895 15
10896 22
10897 19
10898 13
10899 18
10900 16
10901 14
10902 13
10903 7
10904 10
10905 19
10906 36
10907 28
10908 19
10909 36
10910 28
10911 12
10912 17
10913 15
10914 14
10915 21
10916 18
10917 14
10918 21
10919 18
10920 12
10921 17
10922 15
10923 13
10924 12
10925 19
10926 36
10927 28
10928 19
10929 36
10930 28
10931 12
10932 17
10933 15
10934 14
10935 21
10936 18
10937 14
10938 18
10939 12
10940 17
10941 15
10942 13
10943 12
10944 15
10945 24
10946 20
10947 15
10948 24
10949 20
10950 11
10951 13
10952 13
10953 18
10954 16
10955 13
10956 18
10957 16
10958 11
10959 14
10960 13
10961 10
10962 19
10963 36
10964 28
10965 19
10966 36
10967 28
10968 12
10969 17
10970 15
10971 14
10972 21
10973 18
10974 18
10975 12
10976 17
10977 15
10978 13
10979 12
10980 10
10981 19
10982 36
10983 28
10984 19
10985 36
10986 28
10987 17
10988 15
10989 14
10990 21
10991 18
10992 14
10993 21
10994 18
10995 12
10996 17
10997 15
10998 13
10999 12
11000 19
11001 36
11002 28
11003 19
11004 36
11005 12
11006 17
11007 15
11008 14
11009 21
11010 18
11011 14
11012 21
11013 18
11014 12
11015 17
11016 15
11017 13
11018 12
11019 15
11020 24
11021 20
11022 15
11023 24
11024 20
11025 11
11026 14
11027 13
11028 13
11029 18
11030 16
11031 13
11032 18
11033 16
11034 11
11035 14
11036 13
11037 10
11038 19
11039 36
11040 28
11041 19
11042 28
11043 12
11044 17
11045 15
11046 14
11047 21
11048 18
11049 14
11050 21
11051 18
11052 12
11053 17
11054 15
11055 13
11056 12
11057 14
11058 17
11059 26
11061 35
11062 26
11064 35
11065 19
11066 24
11067 22
11068 21
11069 28
11070 25
11071 21
11072 28
11073 25
11074 19
11075 24
11076 22
11077 20
11078 19
11079 17
11080 26
11082 35
11083 26
11085 35
11086 19
11087 24
11088 22
11089 21
11090 28
11091 25
11092 21
11093 28
11094 25
11095 19
11096 24
11097 22
11098 20
11099 19
11100 22
11101 27
11102 22
11103 31
11104 27
11105 18
11106 21
11107 20
11108 20
11109 25
11110 23
11111 20
11112 25
11113 23
11114 18
11115 21
11116 20
11117 17
11118 26
11120 35
11121 26
11123 35
11124 19
11125 24
11126 22
11127 21
11128 28
11129 25
11130 21
11131 28
11132 25
11133 19
11134 22
11135 20
11136 19
11137 17
11138 26
11140 35
11141 26
11143 35
11144 19
11145 24
11146 22
11147 21
11148 28
11149 25
11150 21
11151 28
11152 25
11153 19
11154 24
11155 22
11156 19
11157 17
11158 26
11160 35
11162 35
11163 19
11164 24
11165 22
11166 21
11167 28
11168 25
11169 21
11170 28
11171 25
11172 19
11173 24
11174 22
11175 20
11176 19
11177 22
11178 31
11179 27
11180 22
11181 31
11182 27
11183 18
11184 21
11185 20
11186 20
11187 25
11188 23
11189 20
11190 25
11191 23
11192 18
11193 21
11194 17
11195 26
11197 35
11198 26
11200 35
11201 19
11202 24
11203 22
11204 28
11205 25
11206 21
11207 28
11208 25
11209 19
11210 24
11211 22
11212 20
11213 19
11214 11
11215 14
11216 23
11218 32
11220 32
11221 16
11222 21
11223 19
11224 25
11225 22
11226 18
11227 25
11228 22
11229 16
11230 21
11231 19
11232 17
11233 16
11234 14
11235 23
11237 32
11238 23
11240 16
11241 21
11242 19
11243 18
11244 25
11245 22
11246 18
11247 25
11248 22
11249 16
11250 21
11251 17
11252 16
11253 19
11254 28
11255 24
11256 19
11257 28
11258 24
11259 18
11260 17
11261 17
11262 22
11263 20
11264 17
11265 22
11266 20
11267 15
11268 18
11269 17
11270 14
11271 23
11273 32
11274 23
11276 32
11277 16
11278 21
11279 19
11280 18
11281 22
11282 18
11283 25
11284 22
11285 16
11286 21
11287 19
11288 17
11289 16
11290 14
11291 23
11293 32
11294 23
11296 32
11297 16
11298 21
11299 19
11300 25
11301 22
11302 18
11303 25
11304 22
11305 16
11306 21
11307 19
11308 17
11309 16
11310 14
11311 23
11313 32
11314 23
11316 32
11317 16
11318 21
11319 19
11320 18
11321 25
11322 22
11323 18
11324 25
11325 22
11326 16
11327 21
11328 19
11329 17
11330 16
11331 19
11332 28
11333 24
11334 19
11335 28
11336 24
11337 15
11338 18
11339 17
11340 17
11341 22
11342 20
11343 17
11344 22
11345 20
11346 15
11347 17
11348 14
11349 23
11351 32
11352 23
11354 32
11355 16
11356 21
11357 19
11358 18
11359 25
11360 22
11361 18
11362 25
11363 22
11364 16
11365 21
11366 19
11367 17
11368 16
11369 7
11370 10
11371 19
11372 36
11373 28
11374 19
11375 36
11376 28
11377 12
11378 17
11379 15
11380 14
11381 21
11382 18
11383 14
11384 21
11385 18
11386 17
11387 15
11388 13
11389 12
11390 10
11391 19
11392 36
11393 28
11394 19
11395 36
11396 28
11397 12
11398 17
11399 15
11400 14
11401 21
11402 18
11403 14
11404 21
11405 18
11406 12
11407 17
11408 15
11409 13
11410 12
11411 15
11412 24
11413 15
11414 24
11415 20
11416 11
11417 14
11418 13
11419 13
11420 18
11421 16
11422 13
11423 18
11424 16
11425 11
11426 14
11427 13
11428 10
11429 19
11430 36
11431 28
11432 19
11433 36
11434 28
11435 12
11436 17
11437 15
11438 14
11439 21
11440 18
11441 14
11442 21
11443 18
11444 12
11445 17
11446 15
11447 13
11448 12
11449 10
11450 19
11451 36
11452 28
11453 19
11454 36
11455 28
11456 12
11457 17
11458 15
11459 14
11460 21
11461 18
11462 14
11463 21
11464 18
11465 12
11466 17
11467 15
11468 13
11469 12
11470 10
11471 19
11472 36
11473 28
11474 19
11475 36
11476 28
11477 12
11478 17
11479 14
11480 21
11481 18
11482 14
11483 21
11484 18
11485 12
11486 17
11487 15
11488 13
11489 12
11490 15
11491 24
11492 20
11493 15
11494 24
11495 20
11496 11
11497 14
11498 13
11499 13
11500 18
11501 16
11502 13
11503 18
11504 16
11505 11
11506 14
11507 13
11508 10
11509 19
11510 36
11511 28
11512 19
11513 36
11514 28
11515 12
11516 17
11517 15
11518 14
11519 21
11520 18
11521 14
11522 21
11523 18
11524 12
11525 17
11526 15
11527 13
11528 12
11529 14
11530 17
11531 26
11533 26
11535 35
11536 19
11537 24
11538 22
11539 21
11540 25
11541 21
11542 28
11543 25
11544 19
11545 24
11546 22
11547 20
11548 19
11549 17
11550 26
11552 35
11553 26
11555 35
11556 19
11557 24
11558 22
11559 21
11560 28
11561 21
11562 28
11563 25
11564 19
11565 24
11566 22
11567 20
11568 19
11569 22
11570 31
11571 27
11572 22
11573 31
11574 27
11575 18
11576 21
11577 20
11578 20
11579 25
11580 20
11581 25
11582 23
11583 18
11584 21
11585 20
11586 17
11587 26
11589 35
11590 26
11592 35
11593 19
11594 24
11595 22
11596 21
11597 28
11598 25
11599 21
11600 28
11601 25
11602 19
11603 24
11604 22
11605 20
11606 19
11607 17
11608 26
11610 35
11611 26
11613 35
11614 19
11615 24
11616 22
11617 21
11618 28
11619 25
11620 21
11621 28
11622 25
11623 19
11624 24
11625 22
11626 20
11627 19
11628 17
11629 26
11631 35
11632 26
11634 35
11635 19
11636 24
11637 22
11638 21
11639 25
11640 21
11641 28
11642 25
11643 19
11644 22
11645 20
11646 19
11647 22
11648 31
11649 27
11650 22
11651 31
11652 27
11653 18
11654 21
11655 20
11656 20
11657 25
11658 23
11659 20
11660 25
11661 23
11662 18
11663 21
11664 20
11665 17
11666 26
11668 26
11670 35
11671 19
11672 24
11673 22
11674 21
11675 28
11676 25
11677 21
11678 28
11679 25
11680 19
11681 24
11682 22
11683 20
11684 19
11685 11
11686 14
11687 23
11689 32
11690 23
11692 32
11693 16
11694 21
11695 19
11696 18
11697 25
11698 22
11699 18
11700 25
11701 22
11702 16
11703 21
11704 19
11705 17
11706 16
11707 14
11708 23
11710 32
11711 23
11713 32
11714 16
11715 21
11716 19
11717 18
11718 25
11719 18
11720 25
11721 22
11722 16
11723 21
11724 19
11725 17
11726 16
11727 19
11728 28
11729 24
11730 19
11731 28
11732 24
11733 15
11734 18
11735 17
11736 17
11737 22
11738 20
11739 17
11740 22
11741 20
11742 18
11743 14
11744 23
11746 32
11747 23
11749 32
11750 16
11751 21
11752 19
11753 18
11754 25
11755 22
11756 18
11757 25
11758 22
11759 16
11760 21
11761 19
11762 17
11763 16
11764 14
11765 23
11767 32
11768 23
11770 32
11771 16
11772 21
11773 19
11774 18
11775 25
11776 22
11777 18
11778 25
11779 22
11780 16
11781 21
11782 19
11783 17
11784 16
11785 14
11786 23
11788 32
11789 23
11791 32
11792 16
11793 21
11794 19
11795 18
11796 25
11797 22
11798 18
11799 25
11800 22
11801 16
11802 21
11803 19
11804 17
11805 16
11806 19
11807 28
11808 24
11809 19
11810 28
11811 24
11812 15
11813 18
11814 17
11815 17
11816 22
11817 20
11818 17
11819 22
11820 20
11821 15
11822 17
11823 14
11824 23
11826 32
11827 23
11829 32
11830 16
11831 21
11832 19
11833 18
11834 25
11835 22
11836 18
11837 25
11838 16
11839 21
11840 19
11841 17
11842 16
11843 5
11844 8
11845 17
11846 34
11847 26
11848 17
11849 34
11850 26
11851 10
11852 15
11853 13
11854 12
11855 19
11856 16
11857 12
11858 19
11859 16
11860 15
11861 13
11862 11
11863 10
11864 8
11865 17
11866 34
11867 26
11868 17
11869 34
11870 26
11871 10
11872 15
11873 13
11874 12
11875 19
11876 16
11877 12
11878 19
11879 16
11880 10
11881 15
11882 13
11883 11
11884 10
11885 13
11886 18
11887 13
11888 22
11889 18
11890 9
11891 12
11892 11
11893 11
11894 16
11895 14
11896 11
11897 16
11898 14
11899 9
11900 12
11901 11
11902 8
11903 17
11904 34
11905 26
11906 17
11907 34
11908 26
11909 10
11910 15
11911 13
11912 12
11913 19
11914 16
11915 12
11916 19
11917 16
11918 10
11919 15
11920 13
11921 11
11922 10
11923 8
11924 17
11925 34
11926 26
11927 17
11928 34
11929 26
11930 10
11931 15
11932 13
11933 12
11934 19
11935 16
11936 12
11937 19
11938 16
11939 10
11940 15
11941 13
11942 10
11943 8
11944 17
11945 34
11946 26
11947 17
11948 34
11949 26
11950 10
11951 15
11952 13
11953 12
11954 19
11955 16
11956 12
11957 19
11958 16
11959 10
11960 15
11961 13
11962 11
11963 10
11964 13
11965 22
11966 18
11967 13
11968 22
11969 9
11970 12
11971 11
11972 11
11973 16
11974 14
11975 11
11976 16
11977 14
11978 9
11979 12
11980 11
11981 17
11982 34
11983 26
11984 17
11985 34
11986 26
11987 10
11988 15
11989 13
11990 12
11991 19
11992 16
11993 12
11994 19
11995 16
11996 10
11997 15
11998 13
11999 11
12000 10
12001 10
12002 13
12003 22
12004 39
12005 31
12006 22
12007 39
12008 31
12009 15
12010 20
12011 18
12012 17
12013 24
12014 21
12015 17
12016 24
12017 21
12018 15
12019 20
12020 16
12021 15
12022 13
12023 22
12024 39
12025 31
12026 22
12027 39
12028 31
12029 15
12030 20
12031 18
12032 17
12033 24
12034 21
12035 17
12036 24
12037 21
12038 15
12039 20
12040 18
12041 16
12042 15
12043 18
12044 27
12045 23
12046 18
12047 27
12048 23
12049 14
12050 17
12051 16
12052 16
12053 21
12054 19
12055 16
12056 21
12057 19
12058 14
12059 17
12060 16
12061 13
12062 22
12063 39
12064 22
12065 39
12066 31
12067 15
12068 20
12069 18
12070 17
12071 24
12072 21
12073 17
12074 24
12075 21
12076 15
12077 20
12078 18
12079 16
12080 15
12081 13
12082 22
12083 39
12084 31
12085 22
12086 39
12087 31
12088 15
12089 20
12090 18
12091 17
12092 24
12093 21
12094 24
12095 21
12096 15
12097 20
12098 18
12099 16
12100 15
12101 13
12102 22
12103 39
12104 31
12105 22
12106 39
12107 31
12108 15
12109 20
12110 18
12111 17
12112 21
12113 17
12114 24
12115 21
12116 20
12117 18
12118 16
12119 15
12120 18
12121 27
12122 23
12123 18
12124 27
12125 23
12126 14
12127 17
12128 16
12129 16
12130 21
12131 19
12132 16
12133 21
12134 19
12135 14
12136 17
12137 16
12138 13
12139 22
12140 39
12141 31
12142 22
12143 39
12144 31
12145 15
12146 20
12147 18
12148 17
12149 24
12150 21
12151 17
12152 24
12153 21
12154 15
12155 20
12156 18
12157 16
12158 15
12159 8
12160 11
12161 20
12162 37
12163 29
12164 20
12165 37
12166 29
12167 13
12168 18
12169 16
12170 15
12171 22
12172 19
12173 15
12174 22
12175 19
12176 13
12177 18
12178 16
12179 14
12180 13
12181 11
12182 20
12183 37
12184 29
12185 37
12186 29
12187 13
12188 18
12189 16
12190 15
12191 22
12192 19
12193 15
12194 22
12195 19
12196 13
12197 18
12198 16
12199 14
12200 13
12201 16
12202 25
12203 21
12204 16
12205 25
12206 21
12207 12
12208 15
12209 14
12210 14
12211 19
12212 14
12213 19
12214 17
12215 12
12216 15
12217 14
12218 11
12219 20
12220 37
12221 29
12222 20
12223 37
12224 29
12225 13
12226 18
12227 16
12228 15
12229 22
12230 19
12231 15
12232 19
12233 13
12234 18
12235 16
12236 14
12237 13
12238 11
12239 20
12240 37
12241 29
12242 20
12243 37
12244 29
12245 13
12246 18
12247 16
12248 15
12249 22
12250 19
12251 15
12252 22
12253 19
12254 13
12255 18
12256 16
12257 14
12258 13
12259 11
12260 37
12261 29
12262 20
12263 37
12264 29
12265 13
12266 18
12267 16
12268 15
12269 22
12270 19
12271 15
12272 22
12273 19
12274 13
12275 18
12276 16
12277 14
12278 13
12279 16
12280 25
12281 21
12282 16
12283 21
12284 12
12285 15
12286 14
12287 14
12288 19
12289 17
12290 14
12291 19
12292 17
12293 12
12294 15
12295 14
12296 11
12297 20
12298 37
12299 29
12300 37
12301 29
12302 13
12303 18
12304 16
12305 15
12306 22
12307 19
12308 15
12309 22
12310 19
12311 13
12312 18
12313 16
12314 14
12315 13
12316 6
12317 9
12318 18
12319 35
12320 27
12321 18
12322 35
12323 27
12324 11
12325 16
12326 14
12327 13
12328 20
12329 17
12330 13
12331 20
12332 17
12333 11
12334 16
12335 14
12336 12
12337 11
12338 9
12339 18
12340 35
12341 27
12342 18
12343 35
12344 27
12345 11
12346 16
12347 14
12348 13
12349 20
12350 17
12351 13
12352 20
12353 17
12354 11
12355 16
12356 14
12357 12
12358 14
12359 23
12360 19
12361 14
12362 23
12363 19
12364 10
12365 13
12366 12
12367 17
12368 15
12369 12
12370 15
12371 10
12372 13
12373 12
12374 9
12375 18
12376 35
12377 27
12378 18
12379 35
12380 27
12381 11
12382 16
12383 14
12384 20
12385 17
12386 13
12387 20
12388 17
12389 11
12390 16
12391 14
12392 12
12393 11
12394 9
12395 18
12396 35
12397 27
12398 18
12399 35
12400 27
12401 11
12402 16
12403 14
12404 13
12405 20
12406 17
12407 13
12408 20
12409 17
12410 11
12411 16
12412 12
12413 11
12414 18
12415 35
12416 27
12417 18
12418 35
12419 27
12420 11
12421 16
12422 13
12423 20
12424 17
12425 13
12426 20
12427 17
12428 11
12429 16
12430 14
12431 12
12432 11
12433 14
12434 23
12435 19
12436 14
12437 19
12438 10
12439 12
12440 12
12441 15
12442 12
12443 17
12444 15
12445 13
12446 12
12447 9
12448 18
12449 35
12450 27
12451 18
12452 35
12453 27
12454 11
12455 16
12456 14
12457 13
12458 20
12459 17
12460 13
12461 20
12462 17
12463 11
12464 16
12465 14
12466 12
12467 11
12468 5
12469 8
12470 17
12471 34
12472 26
12473 17
12474 34
12475 26
12476 10
12477 15
12478 13
12479 12
12480 19
12481 16
12482 16
12483 10
12484 15
12485 13
12486 11
12487 10
12488 8
12489 17
12490 34
12491 26
12492 17
12493 34
12494 26
12495 10
12496 15
12497 12
12498 19
12499 16
12500 12
12501 19
12502 16
12503 10
12504 15
12505 13
12506 11
12507 10
12508 13
12509 22
12510 18
12511 13
12512 22
12513 18
12514 9
12515 12
12516 11
12517 11
12518 16
12519 14
12520 11
12521 16
12522 14
12523 9
12524 12
12525 11
12526 8
12527 17
12528 34
12529 26
12530 17
12531 34
12532 26
12533 10
12534 15
12535 13
12536 12
12537 19
12538 16
12539 12
12540 19
12541 16
12542 10
12543 15
12544 13
12545 11
12546 10
12547 8
12548 17
12549 34
12550 26
12551 17
12552 34
12553 26
12554 10
12555 15
12556 13
12557 12
12558 19
12559 16
12560 12
12561 19
12562 16
12563 10
12564 15
12565 13
12566 11
12567 8
12568 17
12569 34
12570 26
12571 17
12572 34
12573 26
12574 10
12575 15
12576 13
12577 12
12578 19
12579 16
12580 12
12581 19
12582 16
12583 10
12584 13
12585 11
12586 10
12587 13
12588 18
12589 13
12590 22
12591 18
12592 9
12593 12
12594 11
12595 11
12596 16
12597 14
12598 11
12599 16
12600 14
12601 9
12602 12
12603 11
12604 17
12605 34
12606 26
12607 17
12608 34
12609 26
12610 10
12611 15
12612 13
12613 12
12614 19
12615 16
12616 12
12617 19
12618 16
12619 10
12620 15
12621 13
12622 11
12623 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

1
WUG0 opposite right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

2
turn opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

3
WUG0 left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

4
WUG0 thrice after WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

5
turn around left after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

6
WUG0 left twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

7
WUG0 opposite right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

8
WUG0 opposite left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

9
WUG0 opposite right thrice and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

10
WUG0 after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

11
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

12
WUG0 right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

13
turn opposite right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

14
WUG0 around left twice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

15
WUG0 opposite right thrice and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

16
turn around right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

17
WUG0 around right and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

18
WUG0 opposite left thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

19
WUG0 right and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

20
turn around left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

21
WUG0 left thrice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

22
turn opposite right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

23
WUG0 opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

24
turn opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

25
WUG0 right twice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

26
WUG0 opposite left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

27
turn opposite left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

28
turn around right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

29
turn around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

30
turn around right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

31
turn around left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

32
turn around left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

33
turn around left twice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
turn around left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

35
turn opposite right twice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

36
WUG0 around left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

37
WUG0 around right thrice and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

38
turn opposite left and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

39
turn left thrice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

40
turn around left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

41
WUG0 opposite left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

42
turn opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

43
WUG0 left thrice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

44
WUG0 around right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

45
WUG0 around right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

46
WUG0 twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

47
WUG0 right and WUG0 opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

48
WUG0 after WUG0 thrice WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP

49
turn opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

50
WUG0 right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

51
WUG0 around left and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

52
turn left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

53
WUG0 around right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

54
turn left thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

55
WUG0 thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

56
WUG0 around right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

57
WUG0 twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

58
WUG0 right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

59
turn around left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

60
WUG0 around right and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

61
WUG0 right and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

62
turn opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

63
WUG0 around left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

64
WUG0 opposite left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

65
WUG0 opposite right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

66
WUG0 around right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

67
WUG0 thrice and WUG0 right twice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

68
WUG0 left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

69
turn left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

70
WUG0 after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

71
WUG0 around left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

72
WUG0 around left and WUG0 opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

73
WUG0 left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

74
WUG0 thrice after turn left I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP

75
WUG0 around right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

76
WUG0 opposite left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

77
WUG0 opposite right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

78
WUG0 opposite left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

79
turn opposite right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

80
WUG0 right and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

81
turn right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

82
turn around left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

83
WUG0 opposite right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

84
turn around right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

85
WUG0 opposite right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

86
WUG0 opposite left after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

87
WUG0 opposite left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

88
WUG0 opposite right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

89
turn around left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

90
WUG0 left twice and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

91
WUG0 left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

92
WUG0 left and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

93
WUG0 left and WUG0 around right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

94
WUG0 opposite right twice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

95
WUG0 opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

96
WUG0 opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

97
WUG0 around right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

98
WUG0 twice and turn opposite left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

99
turn opposite right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

100
WUG0 opposite right after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

101
WUG0 thrice and turn around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

102
WUG0 right and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

103
WUG0 around left twice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

104
WUG0 left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

105
WUG0 around left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

106
turn left twice and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

107
WUG0 thrice and turn around right WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

108
turn around left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

109
turn around right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

110
WUG0 opposite left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

111
WUG0 left and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

112
WUG0 opposite left thrice and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

113
turn around left and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

114
WUG0 around left after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

115
WUG0 opposite left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

116
WUG0 opposite right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

117
WUG0 right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

118
turn around right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

119
WUG0 twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

120
turn opposite right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

121
WUG0 twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

122
turn opposite left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

123
WUG0 around right thrice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

124
WUG0 right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

125
turn around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

126
turn around left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

127
turn opposite left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

128
turn opposite right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

129
walk opposite left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_WALK {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
walk opposite left after run opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_WALK

130
turn right and WUG0 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump
--
I_TURN_RIGHT I_JUMP

131
WUG0 left twice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

132
WUG0 thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

133
WUG0 right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

134
WUG0 around left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

135
turn around right thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

136
turn opposite left twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

137
WUG0 after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

138
WUG0 opposite right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

139
WUG0 right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

140
WUG0 around right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

141
turn around left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

142
WUG0 opposite left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

143
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

144
WUG0 left and WUG0 right I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

145
turn right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

146
WUG0 around right twice and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

147
WUG0 right thrice and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

148
WUG0 around left twice and turn around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

149
WUG0 around left after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

150
turn around right and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

151
WUG0 around left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

152
turn left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

153
WUG0 left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

154
WUG0 and WUG0 opposite left thrice WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

155
WUG0 left twice and turn opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

156
WUG0 opposite left thrice and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

157
WUG0 thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

158
turn right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

159
WUG0 right twice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

160
WUG0 opposite left twice after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

161
WUG0 twice and WUG0 opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

162
WUG0 right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

163
WUG0 around left twice and turn around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

164
WUG0 opposite right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

165
turn around left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

166
WUG0 right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

167
turn opposite right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

168
WUG0 thrice after WUG0 right I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump right
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

169
turn around right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

170
WUG0 right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

171
WUG0 opposite right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

172
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

173
turn left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

174
turn opposite left and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

175
WUG0 thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

176
WUG0 around right thrice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

177
WUG0 opposite right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

178
WUG0 after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

179
WUG0 around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

180
WUG0 opposite left twice and turn around right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

181
turn right and WUG0 left twice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump left twice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

182
WUG0 opposite right twice and turn left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

183
turn left and WUG0 around right I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

184
WUG0 left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

185
WUG0 opposite right thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

186
turn around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

187
WUG0 twice and WUG0 twice WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP

188
turn left twice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

189
WUG0 thrice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

190
WUG0 opposite right thrice and turn opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

191
turn opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

192
WUG0 around left twice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

193
WUG0 around left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

194
turn left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

195
WUG0 after turn right I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn right
--
I_TURN_RIGHT I_JUMP

196
WUG0 left thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

197
turn around right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

198
WUG0 around left thrice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

199
WUG0 after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

200
WUG0 opposite left twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

201
WUG0 around right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

202
WUG0 around left after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

203
WUG0 around right twice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

204
WUG0 opposite right twice and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

205
turn around right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

206
WUG0 left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

207
WUG0 opposite left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

208
turn around right after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

209
turn opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

210
WUG0 around right and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

211
turn left and WUG0 around right twice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right twice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

212
turn opposite left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

213
WUG0 left twice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

214
WUG0 around left twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

215
WUG0 opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

216
WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

217
WUG0 left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

218
turn opposite left twice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

219
WUG0 left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

220
WUG0 left thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

221
turn left and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

222
WUG0 twice and turn opposite right thrice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

223
WUG0 left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

224
WUG0 opposite right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

225
WUG0 left after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP

226
WUG0 around left and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

227
WUG0 opposite left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

228
turn opposite right twice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

229
WUG0 twice after turn left I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left
--
I_TURN_LEFT I_JUMP I_JUMP

230
WUG0 left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

231
WUG0 opposite right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

232
WUG0 around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

233
turn left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT

234
turn right twice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

235
turn right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

236
WUG0 opposite left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

237
WUG0 opposite left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

238
WUG0 right after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

239
WUG0 opposite right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

240
turn opposite right after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

241
WUG0 right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

242
turn opposite left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

243
WUG0 after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

244
turn around left thrice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

245
WUG0 right and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

246
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

247
WUG0 left twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

248
WUG0 opposite left and turn right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

249
WUG0 and turn opposite right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

250
WUG0 around right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

251
WUG0 after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

252
turn opposite right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

253
turn around left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

254
WUG0 opposite right after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

255
turn around left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

256
WUG0 around left twice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

257
WUG0 opposite left and turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

258
WUG0 around right and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

259
WUG0 around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

260
WUG0 left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

261
turn left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

262
WUG0 opposite right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

263
WUG0 around left thrice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

264
WUG0 left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

265
WUG0 left and turn left I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT

266
WUG0 opposite left and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

267
WUG0 opposite right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

268
WUG0 right thrice and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

269
turn around left twice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

270
turn around right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

271
turn opposite right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

272
turn opposite right and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

273
WUG0 opposite right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

274
turn around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

275
turn around right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

276
turn opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

277
turn right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

278
WUG0 right and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

279
WUG0 twice after turn right I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn right
--
I_TURN_RIGHT I_JUMP I_JUMP

280
WUG0 around right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

281
WUG0 opposite right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

282
turn right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

283
turn around left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

284
WUG0 twice and turn opposite left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

285
WUG0 thrice and WUG0 around left twice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

286
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

287
turn opposite left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

288
WUG0 right and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

289
WUG0 opposite right thrice and turn around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

290
turn around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

291
WUG0 left thrice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

292
WUG0 opposite right twice and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

293
turn left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

294
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

295
turn opposite left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

296
WUG0 left twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

297
turn opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

298
turn opposite left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

299
turn right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

300
WUG0 twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

301
WUG0 thrice and turn right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

302
WUG0 around left and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

303
turn around right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

304
turn opposite right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

305
WUG0 right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

306
WUG0 right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

307
WUG0 opposite left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

308
WUG0 opposite left thrice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

309
WUG0 opposite left twice and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

310
WUG0 right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

311
WUG0 opposite left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

312
turn right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

313
turn left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

314
WUG0 twice and WUG0 around left thrice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

315
WUG0 around left thrice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

316
WUG0 right twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

317
turn opposite right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

318
WUG0 left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

319
WUG0 right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

320
WUG0 opposite right twice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

321
WUG0 around right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

322
WUG0 left thrice and turn around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

323
WUG0 right thrice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

324
turn opposite left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

325
WUG0 thrice and turn opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

326
WUG0 opposite right and turn right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

327
WUG0 twice after WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump
--
I_JUMP I_JUMP I_JUMP

328
turn around right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

329
WUG0 around right twice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

330
turn left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

331
WUG0 twice WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice
--
I_JUMP I_JUMP

332
WUG0 twice and WUG0 around right WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

333
WUG0 right thrice and WUG0 opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

334
WUG0 right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

335
WUG0 around left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

336
WUG0 opposite right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

337
turn left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

338
turn right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

339
WUG0 opposite right after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

340
WUG0 twice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

341
turn right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

342
WUG0 right thrice and WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

343
turn left thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

344
WUG0 thrice and turn opposite left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

345
WUG0 right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

346
WUG0 right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

347
WUG0 around right thrice and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

348
WUG0 opposite left thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

349
turn opposite left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

350
WUG0 opposite left twice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

351
WUG0 around left and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

352
turn opposite right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

353
turn opposite left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

354
turn right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

355
WUG0 left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

356
WUG0 left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

357
WUG0 around left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

358
WUG0 around left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

359
WUG0 opposite right thrice and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

360
WUG0 and WUG0 around right thrice WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump around right thrice
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

361
WUG0 around right after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

362
WUG0 opposite left twice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

363
WUG0 right thrice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

364
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

365
WUG0 around right after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

366
WUG0 opposite left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

367
WUG0 opposite left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

368
WUG0 twice and turn opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

369
WUG0 right and WUG0 twice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump twice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

370
turn opposite left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

371
turn around left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

372
WUG0 after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

373
look left twice after run opposite WUG0 twice WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
look left twice after run opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK

374
WUG0 right twice and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look right twice and look
--
I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_LOOK

375
turn right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

376
turn right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

377
turn right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

378
WUG0 opposite right and look around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and look around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK

379
turn opposite right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

380
turn opposite left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

381
turn opposite right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

382
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

383
turn left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

384
turn right thrice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
turn right thrice and look around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK

385
turn around left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

386
WUG0 around left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look around left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK

387
look after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_LOOK {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look after look right twice
--
I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_LOOK

388
WUG0 opposite right thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

389
WUG0 opposite left twice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

390
WUG0 thrice and WUG0 around right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

391
WUG0 twice and turn around left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

392
WUG0 left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

393
turn right thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

394
turn right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

395
turn around right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

396
WUG0 thrice and look around left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run thrice and look around left twice
--
I_RUN I_RUN I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK

397
WUG0 right thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

398
WUG0 right thrice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

399
