12624
0 3
1 3
2 6
3 15
4 24
5 15
6 32
7 24
8 13
9 11
10 10
11 17
12 14
13 10
14 14
15 8
16 13
17 11
18 9
19 8
20 6
21 15
22 32
23 24
24 15
25 32
26 24
27 8
28 13
29 11
30 10
31 17
32 14
33 10
34 17
35 14
36 8
37 13
38 11
39 9
40 8
41 11
42 20
43 16
44 11
45 20
46 16
47 7
48 10
49 9
50 9
51 14
52 12
53 9
54 14
55 7
56 10
57 9
58 6
59 15
60 32
61 24
62 15
63 32
64 24
65 8
66 13
67 11
68 10
69 17
70 14
71 10
72 17
73 14
74 8
75 13
76 11
77 9
78 8
79 6
80 15
81 32
82 24
83 15
84 8
85 13
86 11
87 10
88 17
89 14
90 10
91 17
92 14
93 8
94 13
95 11
96 9
97 8
98 6
99 15
100 32
101 15
102 32
103 24
104 8
105 13
106 11
107 17
108 14
109 10
110 17
111 14
112 8
113 13
114 11
115 9
116 8
117 11
118 20
119 16
120 11
121 20
122 16
123 7
124 10
125 9
126 9
127 14
128 12
129 9
130 14
131 12
132 7
133 10
134 9
135 6
136 15
137 32
138 24
139 15
140 32
141 24
142 13
143 11
144 10
145 17
146 14
147 10
148 17
149 14
150 8
151 13
152 11
153 8
154 12
155 15
156 24
158 33
159 24
161 33
162 17
163 22
164 20
165 19
166 26
167 19
168 26
169 23
170 17
171 22
172 20
173 18
174 17
175 15
177 33
178 24
180 33
181 17
182 22
183 20
184 19
185 26
186 23
187 19
188 26
189 23
190 17
191 22
192 20
193 18
194 17
195 20
196 29
197 25
198 20
199 29
200 25
201 16
202 19
203 18
204 18
205 23
206 21
207 23
208 21
209 16
210 19
211 18
212 15
213 24
215 33
216 24
218 33
219 17
220 22
221 20
222 19
223 26
224 23
225 19
226 26
227 23
228 22
229 20
230 18
231 17
232 15
233 24
235 33
236 24
238 33
239 17
240 22
241 20
242 19
243 26
244 23
245 19
246 26
247 23
248 17
249 22
250 20
251 18
252 17
253 15
254 24
256 33
257 24
259 33
260 22
261 20
262 19
263 26
264 23
265 19
266 26
267 23
268 17
269 22
270 20
271 18
272 17
273 20
274 29
275 20
276 29
277 25
278 16
279 19
280 18
281 18
282 23
283 21
284 18
285 23
286 21
287 16
288 19
289 18
290 15
291 24
293 33
294 24
296 33
297 17
298 22
299 20
300 19
301 26
302 23
303 19
304 26
305 23
306 17
307 22
308 20
309 18
310 17
311 29
312 32
319 34
320 39
321 37
322 36
325 36
328 34
329 39
330 37
331 35
332 32
339 39
340 37
341 36
344 36
347 34
348 39
349 37
350 35
351 34
352 37
355 37
358 36
359 35
360 35
362 38
363 35
365 38
366 33
367 36
368 35
369 32
376 34
377 39
378 37
379 36
382 36
385 34
386 39
387 37
388 35
389 34
390 32
396 34
397 39
398 37
401 36
404 34
405 39
406 37
407 35
408 34
409 32
416 34
417 39
418 37
419 36
424 34
425 39
426 37
427 35
428 34
429 37
431 37
434 33
435 36
436 35
437 35
439 38
440 35
442 38
443 36
444 35
445 32
451 34
452 39
453 37
456 36
459 34
460 39
461 37
462 35
463 34
464 21
465 24
468 33
471 26
472 31
473 29
474 35
475 32
476 28
477 35
478 32
479 26
480 31
481 29
482 27
483 26
484 24
485 33
488 33
490 26
491 31
492 29
493 28
494 35
495 28
496 35
497 32
498 26
499 31
500 29
501 26
502 29
503 38
504 34
505 29
506 38
507 34
508 25
509 28
510 27
511 27
512 32
513 30
514 27
515 30
516 25
517 28
518 27
519 24
520 33
523 33
526 26
527 31
528 29
529 28
530 35
531 32
532 28
533 35
534 32
535 26
536 31
537 29
538 27
539 26
540 24
541 33
544 33
546 26
547 31
548 29
549 28
550 35
551 32
552 28
553 35
554 32
555 26
556 29
557 27
558 26
559 24
560 33
563 33
566 26
567 31
568 29
569 28
570 35
571 32
572 28
573 35
574 32
575 26
576 31
577 29
578 27
579 26
580 29
581 38
582 34
583 29
584 38
585 34
586 25
587 28
588 27
589 27
590 32
591 30
592 27
593 32
594 30
595 28
596 27
597 24
598 33
601 33
604 26
605 29
606 28
607 35
608 32
609 28
610 35
611 32
612 26
613 31
614 29
615 27
616 26
617 12
618 15
619 24
621 33
622 24
624 33
625 17
626 22
627 20
628 19
629 26
630 23
631 19
632 26
633 23
634 17
635 22
636 20
637 18
638 17
639 15
640 24
642 33
643 24
645 33
646 17
647 22
648 20
649 19
650 26
651 23
652 19
653 26
654 23
655 17
656 22
657 20
658 18
659 17
660 20
661 29
662 25
663 29
664 25
665 16
666 19
667 18
668 18
669 23
670 21
671 18
672 23
673 21
674 16
675 19
676 18
677 15
679 33
680 24
682 33
683 17
684 22
685 20
686 19
687 26
688 23
689 19
690 26
691 17
692 22
693 18
694 17
695 15
696 24
698 33
699 24
701 33
702 17
703 22
704 20
705 19
706 26
707 23
708 19
709 26
710 23
711 17
712 22
713 20
714 18
715 17
716 15
717 24
719 33
721 33
722 17
723 22
724 20
725 19
726 26
727 23
728 19
729 26
730 23
731 17
732 22
733 20
734 18
735 17
736 20
737 29
738 25
739 20
740 29
741 25
742 16
743 19
744 18
745 18
746 23
747 21
748 18
749 23
750 21
751 16
752 19
753 18
754 15
755 24
757 33
758 24
760 33
761 17
762 22
763 20
764 19
765 26
766 23
767 19
768 26
769 23
770 17
771 22
772 20
773 18
774 17
775 29
776 32
783 34
784 39
785 37
786 36
789 36
792 34
793 39
794 37
795 35
796 34
797 32
804 34
805 39
806 37
807 36
809 36
812 34
813 39
814 37
815 35
816 34
817 37
820 37
823 33
824 36
825 35
826 35
828 38
829 35
831 38
832 33
833 36
834 35
835 32
842 34
843 39
844 36
847 36
850 34
851 39
852 37
853 35
854 34
855 32
861 34
862 39
863 37
864 36
867 36
870 34
871 39
872 37
873 35
874 34
875 32
882 34
883 39
884 37
885 36
888 36
891 34
892 39
893 37
894 35
895 34
896 37
899 37
902 33
903 36
904 35
905 35
907 38
908 35
910 38
911 33
912 36
913 35
918 34
919 39
920 37
921 36
924 36
927 34
928 39
929 37
930 35
931 34
932 21
933 24
934 33
937 33
940 26
941 31
942 29
943 28
944 35
945 32
946 28
947 35
948 32
949 26
950 31
951 29
952 27
953 26
954 24
955 33
958 33
961 26
962 31
963 29
964 28
965 35
966 32
967 28
968 35
969 32
970 26
971 31
972 29
973 27
974 26
975 29
976 38
977 34
978 38
979 34
980 25
981 28
982 27
983 27
984 32
985 30
986 27
987 32
988 30
989 25
990 27
991 24
992 33
995 33
998 26
999 31
1000 29
1001 28
1002 35
1003 32
1004 28
1005 35
1006 32
1007 26
1008 31
1009 29
1010 27
1011 26
1012 24
1013 33
1016 33
1019 26
1020 31
1021 29
1022 28
1023 35
1024 32
1025 28
1026 35
1027 32
1028 26
1029 31
1030 29
1031 27
1032 26
1033 24
1034 33
1037 33
1040 26
1041 31
1042 29
1043 28
1044 35
1045 32
1046 28
1047 35
1048 32
1049 26
1050 31
1051 29
1052 26
1053 29
1054 38
1055 34
1056 29
1057 38
1058 34
1059 25
1060 28
1061 27
1062 27
1063 32
1064 30
1065 27
1066 32
1067 30
1068 25
1069 28
1070 27
1071 24
1072 33
1075 33
1078 26
1079 31
1080 29
1081 28
1082 35
1083 32
1084 28
1085 35
1086 32
1087 26
1088 31
1089 29
1090 27
1091 26
1092 5
1093 8
1094 17
1095 34
1096 26
1097 17
1098 34
1099 26
1100 10
1101 15
1102 13
1103 12
1104 19
1105 16
1106 12
1107 19
1108 16
1109 10
1110 15
1111 13
1112 11
1113 10
1114 8
1115 17
1116 34
1117 26
1118 17
1119 34
1120 26
1121 10
1122 15
1123 13
1124 12
1125 19
1126 16
1127 12
1128 19
1129 16
1130 15
1131 13
1132 11
1133 10
1134 13
1135 22
1136 18
1137 13
1138 22
1139 18
1140 9
1141 12
1142 11
1143 11
1144 16
1145 14
1146 11
1147 16
1148 14
1149 9
1150 12
1151 11
1152 8
1153 17
1154 34
1155 26
1156 17
1157 34
1158 26
1159 10
1160 15
1161 13
1162 12
1163 19
1164 16
1165 12
1166 19
1167 16
1168 10
1169 15
1170 13
1171 11
1172 10
1173 8
1174 17
1175 34
1176 26
1177 17
1178 34
1179 26
1180 10
1181 15
1182 13
1183 12
1184 19
1185 16
1186 12
1187 19
1188 16
1189 10
1190 15
1191 13
1192 11
1193 10
1194 8
1195 17
1196 34
1197 26
1198 17
1199 34
1200 26
1201 10
1202 15
1203 13
1204 12
1205 19
1206 16
1207 12
1208 19
1209 16
1210 10
1211 15
1212 13
1213 11
1214 13
1215 22
1216 18
1217 13
1218 22
1219 18
1220 9
1221 12
1222 11
1223 11
1224 16
1225 14
1226 11
1227 16
1228 9
1229 12
1230 11
1231 8
1232 17
1233 34
1234 26
1235 17
1236 34
1237 26
1238 10
1239 15
1240 13
1241 12
1242 19
1243 16
1244 12
1245 19
1246 16
1247 10
1248 13
1249 11
1250 10
1251 10
1252 13
1253 22
1254 39
1255 31
1256 22
1257 39
1258 31
1259 15
1260 20
1261 18
1262 17
1263 24
1264 21
1265 17
1266 24
1267 21
1268 15
1269 20
1270 18
1271 16
1272 15
1273 13
1274 22
1275 31
1276 22
1277 39
1278 31
1279 15
1280 20
1281 18
1282 17
1283 24
1284 21
1285 17
1286 24
1287 21
1288 20
1289 18
1290 16
1291 15
1292 18
1293 27
1294 23
1295 18
1296 27
1297 23
1298 14
1299 16
1300 16
1301 21
1302 19
1303 16
1304 21
1305 19
1306 14
1307 17
1308 16
1309 13
1310 22
1311 39
1312 31
1313 22
1314 39
1315 31
1316 15
1317 20
1318 17
1319 24
1320 21
1321 17
1322 24
1323 21
1324 15
1325 20
1326 18
1327 16
1328 15
1329 13
1330 22
1331 39
1332 31
1333 22
1334 39
1335 31
1336 15
1337 20
1338 18
1339 17
1340 24
1341 21
1342 17
1343 24
1344 21
1345 15
1346 20
1347 18
1348 16
1349 15
1350 13
1351 22
1352 39
1353 31
1354 22
1355 39
1356 31
1357 15
1358 20
1359 18
1360 17
1361 24
1362 17
1363 24
1364 21
1365 15
1366 20
1367 18
1368 16
1369 15
1370 18
1371 27
1372 23
1373 27
1374 23
1375 14
1376 17
1377 16
1378 16
1379 21
1380 19
1381 16
1382 21
1383 19
1384 14
1385 17
1386 16
1387 13
1388 22
1389 39
1390 31
1391 22
1392 39
1393 31
1394 15
1395 20
1396 18
1397 17
1398 24
1399 21
1400 17
1401 24
1402 21
1403 15
1404 20
1405 18
1406 16
1407 15
1408 8
1409 11
1410 20
1411 37
1412 29
1413 20
1414 37
1415 29
1416 13
1417 18
1418 16
1419 15
1420 22
1421 19
1422 15
1423 22
1424 19
1425 13
1426 18
1427 16
1428 14
1429 13
1430 11
1431 20
1432 37
1433 29
1434 20
1435 37
1436 29
1437 13
1438 18
1439 16
1440 15
1441 22
1442 19
1443 15
1444 22
1445 13
1446 18
1447 16
1448 14
1449 13
1450 16
1451 25
1452 21
1453 16
1454 25
1455 21
1456 12
1457 15
1458 14
1459 14
1460 19
1461 17
1462 14
1463 19
1464 17
1465 12
1466 15
1467 14
1468 11
1469 20
1470 37
1471 29
1472 20
1473 37
1474 29
1475 13
1476 18
1477 16
1478 22
1479 19
1480 15
1481 22
1482 19
1483 13
1484 18
1485 16
1486 14
1487 13
1488 20
1489 37
1490 29
1491 20
1492 37
1493 29
1494 13
1495 18
1496 16
1497 15
1498 22
1499 19
1500 15
1501 22
1502 19
1503 13
1504 18
1505 16
1506 14
1507 13
1508 11
1509 20
1510 37
1511 29
1512 20
1513 37
1514 29
1515 13
1516 18
1517 16
1518 15
1519 19
1520 15
1521 22
1522 19
1523 13
1524 18
1525 16
1526 14
1527 13
1528 16
1529 25
1530 21
1531 16
1532 25
1533 21
1534 12
1535 15
1536 14
1537 14
1538 19
1539 17
1540 14
1541 19
1542 17
1543 12
1544 15
1545 14
1546 11
1547 20
1548 29
1549 20
1550 37
1551 13
1552 18
1553 16
1554 15
1555 22
1556 19
1557 15
1558 22
1559 19
1560 13
1561 18
1562 16
1563 14
1564 13
1565 7
1566 10
1567 19
1568 36
1569 28
1570 19
1571 36
1572 28
1573 12
1574 17
1575 14
1576 21
1577 18
1578 14
1579 21
1580 18
1581 12
1582 17
1583 15
1584 13
1585 12
1586 10
1587 19
1588 28
1589 19
1590 36
1591 28
1592 12
1593 17
1594 15
1595 14
1596 21
1597 18
1598 14
1599 21
1600 18
1601 12
1602 17
1603 15
1604 13
1605 12
1606 15
1607 24
1608 20
1609 15
1610 24
1611 20
1612 11
1613 13
1614 16
1615 13
1616 18
1617 16
1618 11
1619 14
1620 13
1621 10
1622 19
1623 36
1624 28
1625 19
1626 36
1627 17
1628 15
1629 14
1630 21
1631 18
1632 14
1633 21
1634 18
1635 12
1636 17
1637 15
1638 13
1639 12
1640 19
1641 36
1642 28
1643 19
1644 36
1645 28
1646 12
1647 17
1648 15
1649 14
1650 21
1651 18
1652 14
1653 21
1654 18
1655 12
1656 17
1657 15
1658 13
1659 12
1660 10
1661 19
1662 36
1663 28
1664 19
1665 36
1666 28
1667 12
1668 17
1669 15
1670 14
1671 21
1672 18
1673 14
1674 21
1675 18
1676 12
1677 17
1678 15
1679 13
1680 12
1681 15
1682 24
1683 20
1684 15
1685 24
1686 20
1687 11
1688 14
1689 13
1690 18
1691 16
1692 13
1693 18
1694 16
1695 11
1696 14
1697 13
1698 10
1699 19
1700 36
1701 28
1702 19
1703 36
1704 28
1705 12
1706 17
1707 15
1708 14
1709 21
1710 18
1711 14
1712 18
1713 12
1714 17
1715 15
1716 13
1717 12
1718 14
1719 17
1720 26
1722 35
1723 26
1725 35
1726 19
1727 24
1728 21
1729 28
1730 25
1731 21
1732 28
1733 25
1734 19
1735 24
1736 22
1737 20
1738 19
1739 17
1740 26
1742 35
1743 26
1745 35
1746 19
1747 24
1748 22
1749 21
1750 28
1751 25
1752 21
1753 28
1754 25
1755 19
1756 24
1757 22
1758 20
1759 19
1760 22
1761 31
1762 27
1763 22
1764 31
1765 27
1766 18
1767 21
1768 20
1769 25
1770 23
1771 20
1772 25
1773 23
1774 18
1775 21
1776 20
1777 17
1778 26
1780 35
1781 26
1783 35
1784 19
1785 24
1786 22
1787 21
1788 28
1789 25
1790 21
1791 28
1792 25
1793 19
1794 24
1795 22
1796 20
1797 19
1798 17
1799 26
1801 35
1802 26
1804 35
1805 19
1806 24
1807 22
1808 21
1809 28
1810 25
1811 21
1812 28
1813 25
1814 19
1815 24
1816 22
1817 20
1818 19
1819 17
1820 26
1822 35
1823 26
1825 35
1826 19
1827 24
1828 22
1829 21
1830 25
1831 21
1832 28
1833 25
1834 19
1835 24
1836 22
1837 20
1838 19
1839 22
1840 31
1841 27
1842 22
1843 31
1844 27
1845 18
1846 21
1847 20
1848 20
1849 25
1850 23
1851 20
1852 25
1853 23
1854 18
1855 21
1856 20
1857 17
1858 26
1860 35
1861 26
1863 35
1864 19
1865 24
1866 22
1867 21
1868 28
1869 25
1870 21
1871 28
1872 25
1873 19
1874 24
1875 22
1876 20
1877 19
1878 11
1879 14
1880 23
1882 32
1883 23
1885 32
1886 16
1887 21
1888 19
1889 18
1890 25
1891 22
1892 18
1893 25
1894 22
1895 16
1896 21
1897 19
1898 17
1899 16
1900 14
1901 23
1903 32
1904 23
1906 32
1907 16
1908 21
1909 19
1910 18
1911 25
1912 22
1913 18
1914 25
1915 22
1916 16
1917 21
1918 19
1919 17
1920 16
1921 19
1922 28
1923 24
1924 19
1925 28
1926 24
1927 15
1928 18
1929 17
1930 17
1931 22
1932 20
1933 17
1934 20
1935 15
1936 18
1937 17
1938 14
1940 32
1941 23
1943 32
1944 16
1945 21
1946 19
1947 25
1948 22
1949 18
1950 25
1951 22
1952 16
1953 21
1954 19
1955 17
1956 16
1957 14
1958 23
1960 32
1961 23
1963 32
1964 16
1965 21
1966 19
1967 18
1968 25
1969 22
1970 18
1971 25
1972 22
1973 16
1974 21
1975 19
1976 17
1977 16
1978 14
1979 23
1981 32
1982 23
1984 32
1985 16
1986 21
1987 19
1988 18
1989 25
1990 22
1991 18
1992 25
1993 22
1994 16
1995 21
1996 19
1997 17
1998 16
1999 19
2000 28
2001 24
2002 19
2003 28
2004 24
2005 15
2006 18
2007 17
2008 17
2009 22
2010 20
2011 22
2012 15
2013 18
2014 17
2015 14
2016 23
2018 32
2019 23
2021 32
2022 16
2023 21
2024 19
2025 18
2026 25
2027 22
2028 18
2029 25
2030 22
2031 16
2032 21
2033 19
2034 17
2035 16
2036 7
2037 10
2038 19
2039 36
2040 28
2041 19
2042 36
2043 28
2044 12
2045 17
2046 15
2047 14
2048 21
2049 18
2050 14
2051 21
2052 18
2053 12
2054 17
2055 15
2056 13
2057 12
2058 10
2059 19
2060 36
2061 28
2062 36
2063 28
2064 12
2065 15
2066 14
2067 18
2068 14
2069 21
2070 18
2071 12
2072 17
2073 15
2074 13
2075 12
2076 15
2077 24
2078 20
2079 15
2080 24
2081 20
2082 11
2083 14
2084 13
2085 18
2086 16
2087 18
2088 16
2089 11
2090 14
2091 13
2092 10
2093 19
2094 36
2095 28
2096 19
2097 36
2098 28
2099 12
2100 17
2101 15
2102 21
2103 18
2104 14
2105 21
2106 12
2107 17
2108 15
2109 13
2110 12
2111 10
2112 19
2113 36
2114 28
2115 19
2116 36
2117 28
2118 12
2119 17
2120 15
2121 14
2122 21
2123 18
2124 14
2125 21
2126 18
2127 12
2128 17
2129 15
2130 13
2131 12
2132 10
2133 19
2134 36
2135 28
2136 19
2137 36
2138 28
2139 12
2140 15
2141 14
2142 21
2143 18
2144 14
2145 21
2146 18
2147 12
2148 17
2149 15
2150 13
2151 12
2152 15
2153 24
2154 20
2155 15
2156 24
2157 11
2158 14
2159 13
2160 13
2161 18
2162 16
2163 13
2164 18
2165 16
2166 11
2167 14
2168 13
2169 19
2170 36
2171 28
2172 36
2173 28
2174 12
2175 17
2176 15
2177 14
2178 18
2179 14
2180 21
2181 18
2182 12
2183 17
2184 15
2185 13
2186 12
2187 14
2188 17
2190 35
2191 26
2193 35
2194 19
2195 24
2196 22
2197 21
2198 28
2199 25
2200 21
2201 28
2202 25
2203 19
2204 24
2205 22
2206 20
2207 19
2208 17
2209 26
2211 35
2212 26
2214 35
2215 19
2216 24
2217 22
2218 21
2219 28
2220 25
2221 21
2222 28
2223 25
2224 19
2225 24
2226 22
2227 20
2228 19
2229 22
2230 31
2231 27
2232 22
2233 31
2234 27
2235 18
2236 21
2237 20
2238 20
2239 25
2240 23
2241 20
2242 25
2243 23
2244 18
2245 21
2246 20
2247 17
2248 26
2250 35
2251 26
2253 35
2254 19
2255 24
2256 22
2257 21
2258 28
2259 25
2260 21
2261 28
2262 25
2263 19
2264 24
2265 22
2266 20
2267 19
2268 17
2270 35
2271 26
2273 35
2274 19
2275 24
2276 22
2277 21
2278 28
2279 21
2280 28
2281 25
2282 24
2283 20
2284 19
2285 17
2286 26
2288 35
2290 35
2291 19
2292 24
2293 22
2294 21
2295 28
2296 25
2297 21
2298 28
2299 25
2300 19
2301 24
2302 22
2303 20
2304 19
2305 22
2306 31
2307 27
2308 22
2309 31
2310 27
2311 18
2312 21
2313 20
2314 20
2315 25
2316 23
2317 20
2318 23
2319 18
2320 21
2321 20
2322 17
2324 35
2325 26
2327 35
2328 19
2329 24
2330 22
2331 21
2332 28
2333 25
2334 21
2335 25
2336 19
2337 24
2338 22
2339 11
2340 14
2341 23
2343 32
2344 23
2346 32
2347 16
2348 21
2349 19
2350 18
2351 25
2352 22
2353 18
2354 25
2355 22
2356 16
2357 19
2358 17
2359 16
2360 14
2361 23
2363 32
2364 23
2366 16
2367 21
2368 19
2369 18
2370 25
2371 22
2372 18
2373 25
2374 22
2375 16
2376 21
2377 19
2378 16
2379 19
2380 24
2381 19
2382 28
2383 24
2384 15
2385 18
2386 17
2387 17
2388 22
2389 20
2390 17
2391 22
2392 20
2393 15
2394 18
2395 17
2396 14
2397 23
2399 32
2400 23
2402 32
2403 16
2404 21
2405 19
2406 18
2407 25
2408 22
2409 18
2410 25
2411 22
2412 16
2413 21
2414 19
2415 17
2416 16
2417 14
2418 23
2420 32
2421 23
2423 32
2424 16
2425 21
2426 19
2427 18
2428 25
2429 22
2430 18
2431 25
2432 22
2433 16
2434 21
2435 19
2436 17
2437 16
2438 14
2439 23
2441 32
2442 23
2444 32
2445 16
2446 21
2447 19
2448 18
2449 25
2450 22
2451 18
2452 25
2453 22
2454 16
2455 21
2456 17
2457 19
2458 28
2459 24
2460 19
2461 28
2462 24
2463 15
2464 18
2465 17
2466 17
2467 22
2468 20
2469 17
2470 20
2471 15
2472 18
2473 17
2474 14
2475 23
2477 32
2478 23
2480 32
2481 16
2482 21
2483 19
2484 18
2485 25
2486 22
2487 18
2488 25
2489 22
2490 16
2491 21
2492 19
2493 17
2494 16
2495 8
2496 17
2497 34
2498 26
2499 17
2500 34
2501 26
2502 10
2503 15
2504 13
2505 12
2506 19
2507 16
2508 12
2509 19
2510 16
2511 10
2512 15
2513 13
2514 11
2515 10
2516 8
2517 17
2518 34
2519 26
2520 17
2521 34
2522 26
2523 10
2524 13
2525 12
2526 19
2527 16
2528 12
2529 19
2530 16
2531 10
2532 15
2533 13
2534 11
2535 10
2536 13
2537 22
2538 13
2539 22
2540 18
2541 9
2542 12
2543 11
2544 11
2545 16
2546 14
2547 11
2548 16
2549 14
2550 9
2551 12
2552 8
2553 17
2554 34
2555 26
2556 17
2557 34
2558 26
2559 10
2560 15
2561 12
2562 19
2563 16
2564 12
2565 16
2566 10
2567 15
2568 13
2569 11
2570 10
2571 8
2572 17
2573 34
2574 26
2575 17
2576 34
2577 26
2578 10
2579 15
2580 13
2581 12
2582 16
2583 19
2584 16
2585 10
2586 15
2587 13
2588 11
2589 8
2590 17
2591 34
2592 26
2593 17
2594 34
2595 26
2596 10
2597 15
2598 13
2599 12
2600 19
2601 16
2602 12
2603 19
2604 16
2605 10
2606 15
2607 13
2608 11
2609 10
2610 13
2611 22
2612 18
2613 13
2614 22
2615 18
2616 12
2617 11
2618 11
2619 16
2620 14
2621 11
2622 16
2623 14
2624 9
2625 12
2626 11
2627 8
2628 17
2629 34
2630 26
2631 17
2632 34
2633 26
2634 10
2635 15
2636 13
2637 12
2638 19
2639 16
2640 12
2641 19
2642 16
2643 10
2644 15
2645 13
2646 11
2647 10
2648 10
2649 13
2650 22
2651 39
2652 31
2653 22
2654 39
2655 31
2656 15
2657 20
2658 18
2659 17
2660 24
2661 21
2662 17
2663 24
2664 21
2665 15
2666 20
2667 18
2668 16
2669 15
2670 13
2671 22
2672 39
2673 31
2674 22
2675 39
2676 31
2677 15
2678 20
2679 18
2680 17
2681 24
2682 21
2683 17
2684 24
2685 21
2686 20
2687 18
2688 16
2689 15
2690 18
2691 27
2692 23
2693 18
2694 27
2695 23
2696 14
2697 17
2698 16
2699 16
2700 21
2701 19
2702 21
2703 19
2704 14
2705 17
2706 16
2707 13
2708 22
2709 39
2710 31
2711 22
2712 39
2713 31
2714 15
2715 20
2716 18
2717 17
2718 24
2719 21
2720 17
2721 24
2722 15
2723 20
2724 18
2725 16
2726 15
2727 13
2728 22
2729 39
2730 31
2731 22
2732 39
2733 31
2734 20
2735 18
2736 17
2737 24
2738 17
2739 24
2740 21
2741 15
2742 20
2743 18
2744 16
2745 15
2746 13
2747 22
2748 39
2749 31
2750 22
2751 39
2752 31
2753 15
2754 20
2755 18
2756 17
2757 24
2758 21
2759 17
2760 24
2761 21
2762 15
2763 20
2764 18
2765 16
2766 15
2767 18
2768 27
2769 23
2770 18
2771 27
2772 23
2773 14
2774 17
2775 16
2776 16
2777 21
2778 19
2779 16
2780 21
2781 19
2782 14
2783 17
2784 16
2785 13
2786 39
2787 31
2788 22
2789 39
2790 31
2791 15
2792 18
2793 17
2794 24
2795 21
2796 17
2797 24
2798 15
2799 20
2800 18
2801 16
2802 15
2803 8
2804 11
2805 20
2806 37
2807 29
2808 20
2809 37
2810 29
2811 13
2812 18
2813 16
2814 15
2815 22
2816 19
2817 15
2818 22
2819 19
2820 13
2821 18
2822 16
2823 14
2824 13
2825 11
2826 20
2827 37
2828 20
2829 37
2830 29
2831 13
2832 18
2833 16
2834 15
2835 22
2836 19
2837 15
2838 22
2839 19
2840 13
2841 18
2842 16
2843 13
2844 16
2845 25
2846 21
2847 16
2848 25
2849 21
2850 12
2851 15
2852 14
2853 14
2854 19
2855 17
2856 14
2857 19
2858 17
2859 12
2860 15
2861 14
2862 11
2863 20
2864 37
2865 29
2866 20
2867 29
2868 13
2869 18
2870 16
2871 15
2872 22
2873 19
2874 15
2875 22
2876 19
2877 13
2878 18
2879 16
2880 14
2881 13
2882 11
2883 20
2884 37
2885 29
2886 20
2887 37
2888 29
2889 13
2890 18
2891 16
2892 15
2893 22
2894 19
2895 15
2896 13
2897 18
2898 16
2899 14
2900 13
2901 11
2902 20
2903 37
2904 29
2905 20
2906 37
2907 29
2908 13
2909 18
2910 16
2911 15
2912 22
2913 19
2914 15
2915 22
2916 19
2917 13
2918 18
2919 16
2920 14
2921 13
2922 16
2923 25
2924 21
2925 16
2926 25
2927 21
2928 12
2929 15
2930 14
2931 14
2932 19
2933 17
2934 14
2935 19
2936 17
2937 12
2938 15
2939 14
2940 11
2941 20
2942 37
2943 29
2944 20
2945 37
2946 29
2947 13
2948 18
2949 16
2950 15
2951 22
2952 19
2953 15
2954 22
2955 19
2956 13
2957 18
2958 16
2959 14
2960 13
2961 6
2962 9
2963 18
2964 35
2965 18
2966 35
2967 27
2968 11
2969 16
2970 14
2971 13
2972 20
2973 17
2974 13
2975 20
2976 17
2977 11
2978 16
2979 14
2980 12
2981 11
2982 18
2983 35
2984 27
2985 18
2986 35
2987 27
2988 11
2989 16
2990 14
2991 20
2992 17
2993 13
2994 20
2995 17
2996 11
2997 16
2998 14
2999 12
3000 11
3001 14
3002 23
3003 19
3004 14
3005 23
3006 19
3007 10
3008 13
3009 12
3010 12
3011 17
3012 15
3013 12
3014 17
3015 15
3016 10
3017 13
3018 12
3019 9
3020 18
3021 35
3022 27
3023 18
3024 35
3025 27
3026 16
3027 14
3028 13
3029 20
3030 17
3031 13
3032 20
3033 17
3034 11
3035 14
3036 12
3037 11
3038 9
3039 18
3040 35
3041 27
3042 18
3043 35
3044 27
3045 11
3046 16
3047 14
3048 13
3049 20
3050 17
3051 13
3052 20
3053 17
3054 11
3055 16
3056 14
3057 12
3058 11
3059 9
3060 18
3061 35
3062 27
3063 18
3064 35
3065 27
3066 11
3067 16
3068 14
3069 13
3070 20
3071 17
3072 13
3073 20
3074 17
3075 11
3076 16
3077 14
3078 12
3079 11
3080 14
3081 23
3082 19
3083 14
3084 23
3085 19
3086 10
3087 13
3088 12
3089 12
3090 17
3091 15
3092 12
3093 17
3094 15
3095 10
3096 13
3097 12
3098 18
3099 35
3100 27
3101 18
3102 35
3103 27
3104 11
3105 16
3106 14
3107 13
3108 20
3109 17
3110 13
3111 20
3112 17
3113 11
3114 16
3115 14
3116 12
3117 11
3118 5
3119 8
3120 17
3121 34
3122 26
3123 34
3124 26
3125 10
3126 15
3127 13
3128 16
3129 12
3130 19
3131 16
3132 10
3133 15
3134 13
3135 11
3136 10
3137 8
3138 17
3139 34
3140 26
3141 17
3142 34
3143 26
3144 10
3145 15
3146 13
3147 19
3148 16
3149 12
3150 19
3151 16
3152 10
3153 15
3154 13
3155 10
3156 13
3157 22
3158 18
3159 22
3160 18
3161 9
3162 12
3163 11
3164 11
3165 16
3166 14
3167 11
3168 16
3169 14
3170 9
3171 12
3172 11
3173 8
3174 17
3175 34
3176 26
3177 17
3178 34
3179 10
3180 15
3181 13
3182 12
3183 19
3184 16
3185 12
3186 19
3187 16
3188 10
3189 15
3190 13
3191 11
3192 10
3193 8
3194 34
3195 26
3196 17
3197 34
3198 26
3199 10
3200 15
3201 13
3202 12
3203 19
3204 16
3205 12
3206 19
3207 16
3208 10
3209 15
3210 13
3211 11
3212 10
3213 8
3214 17
3215 34
3216 26
3217 17
3218 34
3219 26
3220 10
3221 15
3222 13
3223 12
3224 19
3225 16
3226 12
3227 19
3228 16
3229 10
3230 15
3231 13
3232 11
3233 10
3234 13
3235 22
3236 18
3237 13
3238 22
3239 18
3240 9
3241 12
3242 11
3243 11
3244 16
3245 14
3246 11
3247 16
3248 14
3249 9
3250 12
3251 11
3252 8
3253 17
3254 34
3255 26
3256 17
3257 34
3258 26
3259 10
3260 15
3261 13
3262 12
3263 19
3264 16
3265 12
3266 19
3267 16
3268 10
3269 15
3270 13
3271 11
3272 10
3273 3
3274 6
3275 15
3276 32
3277 24
3278 15
3279 24
3280 8
3281 13
3282 11
3283 10
3284 17
3285 14
3286 10
3287 17
3288 14
3289 8
3290 13
3291 11
3292 9
3293 8
3294 6
3295 15
3296 32
3297 24
3298 15
3299 32
3300 24
3301 8
3302 13
3303 11
3304 17
3305 14
3306 10
3307 17
3308 14
3309 13
3310 11
3311 9
3312 8
3313 11
3314 20
3315 16
3316 11
3317 20
3318 16
3319 7
3320 10
3321 9
3322 9
3323 14
3324 12
3325 9
3326 14
3327 12
3328 10
3329 9
3330 6
3331 15
3332 32
3333 24
3334 15
3335 32
3336 24
3337 13
3338 11
3339 10
3340 17
3341 14
3342 10
3343 17
3344 14
3345 8
3346 13
3347 11
3348 9
3349 8
3350 6
3351 15
3352 32
3353 24
3354 15
3355 32
3356 24
3357 8
3358 13
3359 11
3360 10
3361 17
3362 14
3363 10
3364 17
3365 14
3366 8
3367 13
3368 11
3369 9
3370 8
3371 15
3372 32
3373 15
3374 32
3375 24
3376 8
3377 13
3378 11
3379 10
3380 17
3381 14
3382 10
3383 17
3384 14
3385 8
3386 13
3387 11
3388 9
3389 11
3390 20
3391 16
3392 11
3393 20
3394 16
3395 7
3396 10
3397 9
3398 9
3399 14
3400 12
3401 9
3402 14
3403 12
3404 7
3405 10
3406 9
3407 6
3408 15
3409 32
3410 24
3411 15
3412 32
3413 24
3414 8
3415 13
3416 11
3417 10
3418 14
3419 17
3420 14
3421 8
3422 13
3423 11
3424 9
3425 8
3426 12
3427 15
3428 24
3429 33
3430 24
3432 33
3433 17
3434 22
3435 20
3436 19
3437 26
3438 23
3439 19
3440 26
3441 23
3442 17
3443 22
3444 20
3445 18
3446 17
3447 15
3448 24
3450 33
3451 24
3453 22
3454 20
3455 19
3456 26
3457 23
3458 19
3459 26
3460 23
3461 17
3462 22
3463 20
3464 18
3465 17
3466 20
3467 29
3468 25
3469 20
3470 29
3471 25
3472 16
3473 19
3474 18
3475 18
3476 23
3477 21
3478 18
3479 23
3480 21
3481 16
3482 19
3483 18
3484 15
3485 24
3487 33
3488 24
3490 33
3491 17
3492 22
3493 20
3494 19
3495 23
3496 19
3497 26
3498 23
3499 17
3500 22
3501 20
3502 18
3503 17
3504 15
3505 24
3507 33
3508 24
3510 33
3511 17
3512 22
3513 20
3514 19
3515 26
3516 23
3517 19
3518 26
3519 23
3520 17
3521 22
3522 20
3523 18
3524 17
3525 15
3526 24
3528 33
3529 24
3531 33
3532 17
3533 22
3534 20
3535 19
3536 26
3537 23
3538 19
3539 26
3540 23
3541 20
3542 18
3543 17
3544 20
3545 29
3546 25
3547 20
3548 29
3549 16
3550 19
3551 18
3552 18
3553 23
3554 21
3555 18
3556 23
3557 21
3558 16
3559 19
3560 18
3561 15
3562 24
3564 33
3565 24
3567 17
3568 22
3569 20
3570 19
3571 26
3572 23
3573 19
3574 23
3575 17
3576 22
3577 20
3578 18
3579 17
3580 29
3581 32
3586 34
3587 39
3588 37
3589 36
3592 36
3595 34
3596 39
3597 37
3598 35
3599 32
3606 34
3607 39
3608 37
3609 36
3611 36
3614 34
3615 39
3616 37
3617 35
3618 34
3619 37
3622 37
3625 36
3626 35
3627 35
3629 38
3630 35
3632 38
3633 33
3634 36
3635 35
3636 32
3643 34
3644 39
3645 37
3646 36
3649 36
3652 34
3653 39
3654 37
3655 35
3656 34
3657 32
3664 34
3665 39
3666 37
3667 36
3671 34
3672 39
3673 37
3674 35
3675 32
3682 34
3683 39
3684 37
3685 36
3688 36
3691 34
3692 39
3693 37
3694 35
3697 37
3700 33
3701 36
3702 35
3703 35
3705 38
3706 35
3708 38
3709 33
3710 36
3711 35
3712 32
3719 34
3720 39
3721 37
3722 36
3724 36
3726 34
3727 39
3728 37
3729 35
3730 34
3731 24
3732 33
3735 33
3737 26
3738 31
3739 29
3740 28
3741 35
3742 32
3743 28
3744 35
3745 32
3746 26
3747 31
3748 29
3749 27
3750 26
3751 24
3752 33
3755 33
3758 26
3759 31
3760 29
3761 28
3762 35
3763 32
3764 28
3765 35
3766 26
3767 31
3768 29
3769 26
3770 29
3771 38
3772 34
3773 29
3774 38
3775 34
3776 25
3777 28
3778 27
3779 27
3780 32
3781 30
3782 27
3783 32
3784 30
3785 25
3786 28
3787 27
3788 24
3789 33
3794 26
3795 31
3796 29
3797 28
3798 35
3799 32
3800 28
3801 35
3802 32
3803 26
3804 31
3805 29
3806 27
3807 26
3808 24
3809 33
3812 33
3815 26
3816 31
3817 29
3818 28
3819 35
3820 32
3821 28
3822 35
3823 32
3824 26
3825 31
3826 29
3827 27
3828 26
3829 24
3830 33
3832 33
3835 26
3836 31
3837 29
3838 28
3839 35
3840 32
3841 28
3842 35
3843 32
3844 26
3845 31
3846 29
3847 27
3848 26
3849 29
3850 38
3851 34
3852 29
3853 34
3854 25
3855 28
3856 27
3857 27
3858 32
3859 30
3860 27
3861 32
3862 30
3863 25
3864 28
3865 27
3866 24
3867 33
3870 33
3872 26
3873 31
3874 29
3875 35
3876 32
3877 28
3878 35
3879 32
3880 26
3881 31
3882 29
3883 27
3884 26
3885 12
3886 15
3887 24
3889 33
3890 24
3892 17
3893 22
3894 20
3895 19
3896 26
3897 23
3898 19
3899 26
3900 23
3901 17
3902 22
3903 20
3904 18
3905 17
3906 15
3907 24
3909 33
3910 24
3912 33
3913 17
3914 22
3915 20
3916 19
3917 26
3918 23
3919 19
3920 26
3921 23
3922 17
3923 22
3924 20
3925 18
3926 17
3927 20
3928 29
3929 25
3930 20
3931 29
3932 25
3933 16
3934 19
3935 18
3936 18
3937 23
3938 21
3939 18
3940 23
3941 21
3942 16
3943 19
3944 18
3945 15
3946 24
3948 33
3949 24
3951 33
3952 17
3953 20
3954 19
3955 26
3956 23
3957 19
3958 26
3959 23
3960 17
3961 20
3962 18
3963 17
3964 15
3965 24
3967 33
3968 24
3970 33
3971 17
3972 22
3973 20
3974 19
3975 26
3976 23
3977 19
3978 26
3979 23
3980 17
3981 22
3982 20
3983 18
3984 17
3985 15
3986 24
3988 33
3989 24
3990 33
3991 17
3992 22
3993 20
3994 19
3995 26
3996 23
3997 19
3998 26
3999 23
4000 17
4001 22
4002 20
4003 18
4004 17
4005 20
4006 25
4007 20
4008 29
4009 25
4010 16
4011 18
4012 18
4013 23
4014 21
4015 18
4016 23
4017 21
4018 16
4019 19
4020 18
4021 15
4022 24
4024 33
4025 24
4027 33
4028 17
4029 22
4030 20
4031 19
4032 26
4033 23
4034 19
4035 26
4036 23
4037 17
4038 22
4039 20
4040 18
4041 17
4042 29
4043 32
4050 34
4051 39
4052 37
4055 36
4058 34
4059 39
4060 37
4061 35
4062 34
4063 32
4070 34
4071 39
4072 37
4073 36
4076 36
4078 34
4079 39
4080 37
4081 35
4082 34
4083 37
4086 37
4089 33
4090 36
4091 35
4092 35
4093 38
4094 35
4096 38
4097 33
4098 36
4099 35
4100 32
4107 34
4108 39
4109 37
4110 36
4113 36
4116 34
4117 39
4118 35
4119 34
4120 32
4126 34
4127 39
4128 37
4129 36
4132 36
4135 34
4136 39
4137 37
4138 35
4139 34
4140 32
4147 34
4148 39
4149 37
4150 36
4153 36
4156 34
4157 39
4158 37
4159 35
4160 34
4161 37
4164 37
4167 33
4168 36
4169 35
4170 35
4172 38
4173 35
4175 38
4176 33
4177 36
4178 35
4185 34
4186 39
4187 37
4188 36
4191 36
4194 34
4195 39
4196 37
4197 35
4198 34
4199 21
4200 24
4201 33
4204 33
4207 26
4208 31
4209 29
4210 28
4211 35
4212 32
4213 28
4214 35
4215 32
4216 26
4217 31
4218 29
4219 27
4220 26
4221 24
4222 33
4225 33
4227 26
4228 31
4229 29
4230 35
4231 32
4232 28
4233 35
4234 32
4235 26
4236 31
4237 29
4238 27
4239 26
4240 29
4241 38
4242 34
4243 29
4244 38
4245 34
4246 25
4247 28
4248 27
4249 32
4250 30
4251 27
4252 32
4253 30
4254 25
4255 28
4256 27
4257 24
4258 33
4261 33
4264 26
4265 31
4266 29
4267 28
4268 35
4269 32
4270 28
4271 35
4272 32
4273 26
4274 31
4275 29
4276 27
4277 26
4278 24
4279 33
4282 33
4285 26
4286 31
4287 29
4288 28
4289 35
4290 32
4291 28
4292 35
4293 32
4294 26
4295 31
4296 29
4297 27
4298 26
4299 24
4302 33
4305 26
4306 31
4307 29
4308 28
4309 35
4310 32
4311 28
4312 35
4313 32
4314 26
4315 31
4316 29
4317 27
4318 26
4319 29
4320 38
4321 34
4322 29
4323 38
4324 34
4325 25
4326 28
4327 27
4328 27
4329 32
4330 30
4331 27
4332 32
4333 30
4334 25
4335 28
4336 27
4337 24
4338 33
4341 33
4344 29
4345 28
4346 35
4347 32
4348 28
4349 35
4350 32
4351 26
4352 31
4353 29
4354 27
4355 26
4356 5
4357 8
4358 17
4359 34
4360 26
4361 34
4362 26
4363 10
4364 15
4365 13
4366 12
4367 19
4368 16
4369 12
4370 19
4371 16
4372 10
4373 15
4374 13
4375 11
4376 10
4377 8
4378 17
4379 34
4380 26
4381 17
4382 34
4383 26
4384 10
4385 15
4386 13
4387 12
4388 19
4389 16
4390 12
4391 19
4392 16
4393 10
4394 15
4395 13
4396 11
4397 10
4398 22
4399 18
4400 13
4401 22
4402 18
4403 9
4404 12
4405 11
4406 11
4407 16
4408 14
4409 11
4410 16
4411 14
4412 9
4413 12
4414 11
4415 8
4416 17
4417 34
4418 26
4419 17
4420 34
4421 26
4422 10
4423 15
4424 13
4425 12
4426 19
4427 16
4428 12
4429 19
4430 16
4431 10
4432 15
4433 13
4434 11
4435 10
4436 8
4437 17
4438 34
4439 26
4440 17
4441 34
4442 26
4443 10
4444 15
4445 13
4446 12
4447 19
4448 16
4449 12
4450 19
4451 16
4452 10
4453 15
4454 13
4455 11
4456 10
4457 8
4458 17
4459 26
4460 17
4461 34
4462 26
4463 10
4464 15
4465 13
4466 12
4467 19
4468 16
4469 12
4470 19
4471 16
4472 10
4473 15
4474 13
4475 11
4476 10
4477 13
4478 22
4479 18
4480 13
4481 22
4482 18
4483 9
4484 12
4485 11
4486 11
4487 16
4488 14
4489 11
4490 16
4491 14
4492 9
4493 12
4494 11
4495 8
4496 17
4497 34
4498 26
4499 17
4500 34
4501 26
4502 10
4503 13
4504 12
4505 19
4506 16
4507 12
4508 19
4509 16
4510 10
4511 15
4512 13
4513 11
4514 10
4515 10
4516 13
4517 22
4518 39
4519 31
4520 22
4521 39
4522 31
4523 15
4524 20
4525 18
4526 17
4527 24
4528 21
4529 17
4530 24
4531 21
4532 15
4533 20
4534 18
4535 16
4536 15
4537 13
4538 39
4539 31
4540 22
4541 39
4542 31
4543 15
4544 20
4545 18
4546 17
4547 24
4548 21
4549 17
4550 24
4551 21
4552 15
4553 20
4554 18
4555 16
4556 15
4557 18
4558 27
4559 23
4560 18
4561 27
4562 23
4563 14
4564 17
4565 16
4566 16
4567 21
4568 19
4569 16
4570 21
4571 19
4572 14
4573 17
4574 16
4575 13
4576 22
4577 39
4578 22
4579 39
4580 31
4581 15
4582 20
4583 18
4584 17
4585 24
4586 21
4587 17
4588 24
4589 21
4590 15
4591 20
4592 18
4593 16
4594 15
4595 13
4596 22
4597 39
4598 31
4599 22
4600 39
4601 15
4602 20
4603 18
4604 17
4605 24
4606 21
4607 17
4608 24
4609 21
4610 15
4611 20
4612 18
4613 16
4614 15
4615 22
4616 39
4617 31
4618 22
4619 39
4620 31
4621 15
4622 20
4623 18
4624 24
4625 21
4626 17
4627 24
4628 21
4629 15
4630 20
4631 18
4632 16
4633 15
4634 18
4635 27
4636 23
4637 27
4638 23
4639 14
4640 17
4641 16
4642 16
4643 21
4644 19
4645 16
4646 21
4647 19
4648 14
4649 17
4650 16
4651 13
4652 39
4653 22
4654 39
4655 31
4656 15
4657 20
4658 18
4659 17
4660 24
4661 21
4662 17
4663 24
4664 21
4665 15
4666 20
4667 18
4668 16
4669 15
4670 8
4671 11
4672 20
4673 37
4674 29
4675 20
4676 37
4677 29
4678 13
4679 18
4680 16
4681 15
4682 22
4683 19
4684 15
4685 22
4686 19
4687 13
4688 18
4689 16
4690 14
4691 13
4692 11
4693 20
4694 29
4695 20
4696 37
4697 29
4698 13
4699 18
4700 16
4701 15
4702 22
4703 19
4704 15
4705 22
4706 19
4707 13
4708 18
4709 14
4710 13
4711 16
4712 25
4713 21
4714 16
4715 25
4716 21
4717 12
4718 15
4719 14
4720 14
4721 19
4722 17
4723 14
4724 19
4725 17
4726 12
4727 14
4728 11
4729 20
4730 37
4731 29
4732 20
4733 37
4734 29
4735 13
4736 18
4737 16
4738 15
4739 22
4740 19
4741 15
4742 22
4743 19
4744 13
4745 18
4746 16
4747 14
4748 13
4749 11
4750 37
4751 29
4752 20
4753 37
4754 29
4755 18
4756 16
4757 15
4758 22
4759 19
4760 15
4761 22
4762 19
4763 18
4764 16
4765 14
4766 13
4767 11
4768 20
4769 37
4770 29
4771 20
4772 37
4773 29
4774 13
4775 18
4776 16
4777 15
4778 22
4779 19
4780 15
4781 22
4782 19
4783 13
4784 18
4785 16
4786 14
4787 13
4788 16
4789 25
4790 21
4791 16
4792 25
4793 21
4794 12
4795 15
4796 14
4797 14
4798 19
4799 17
4800 14
4801 19
4802 17
4803 12
4804 15
4805 11
4806 20
4807 37
4808 29
4809 20
4810 37
4811 29
4812 13
4813 18
4814 16
4815 15
4816 22
4817 19
4818 15
4819 22
4820 19
4821 13
4822 18
4823 16
4824 14
4825 13
4826 7
4827 10
4828 19
4829 36
4830 28
4831 19
4832 36
4833 28
4834 12
4835 17
4836 15
4837 14
4838 21
4839 18
4840 14
4841 21
4842 18
4843 12
4844 17
4845 15
4846 13
4847 12
4848 10
4849 19
4850 36
4851 19
4852 36
4853 28
4854 12
4855 17
4856 15
4857 14
4858 21
4859 18
4860 14
4861 21
4862 18
4863 12
4864 15
4865 12
4866 15
4867 24
4868 20
4869 15
4870 24
4871 20
4872 11
4873 14
4874 13
4875 13
4876 18
4877 16
4878 13
4879 18
4880 16
4881 11
4882 14
4883 13
4884 19
4885 36
4886 28
4887 19
4888 28
4889 12
4890 17
4891 15
4892 14
4893 21
4894 18
4895 14
4896 21
4897 18
4898 12
4899 17
4900 15
4901 13
4902 12
4903 10
4904 19
4905 36
4906 28
4907 19
4908 36
4909 28
4910 12
4911 17
4912 15
4913 14
4914 21
4915 18
4916 14
4917 21
4918 18
4919 12
4920 17
4921 15
4922 13
4923 12
4924 10
4925 36
4926 28
4927 19
4928 36
4929 28
4930 12
4931 17
4932 15
4933 14
4934 21
4935 18
4936 14
4937 21
4938 18
4939 12
4940 17
4941 15
4942 13
4943 12
4944 15
4945 24
4946 20
4947 15
4948 24
4949 20
4950 11
4951 14
4952 13
4953 18
4954 16
4955 13
4956 18
4957 16
4958 11
4959 14
4960 13
4961 10
4962 19
4963 36
4964 28
4965 19
4966 36
4967 12
4968 17
4969 15
4970 14
4971 18
4972 14
4973 21
4974 18
4975 12
4976 17
4977 15
4978 13
4979 12
4980 14
4981 17
4982 26
4984 35
4985 26
4987 35
4988 24
4989 22
4990 28
4991 25
4992 21
4993 28
4994 25
4995 19
4996 24
4997 22
4998 20
4999 19
5000 17
5001 26
5003 35
5005 35
5006 19
5007 24
5008 22
5009 21
5010 28
5011 25
5012 21
5013 28
5014 25
5015 19
5016 24
5017 22
5018 20
5019 19
5020 22
5021 31
5022 27
5023 22
5024 31
5025 27
5026 18
5027 21
5028 20
5029 20
5030 25
5031 23
5032 20
5033 25
5034 23
5035 18
5036 21
5037 20
5038 17
5039 26
5041 35
5042 26
5044 35
5045 19
5046 24
5047 22
5048 21
5049 28
5050 25
5051 21
5052 25
5053 19
5054 24
5055 22
5056 20
5057 19
5058 17
5059 26
5061 35
5063 35
5064 19
5065 24
5066 22
5067 21
5068 28
5069 25
5070 21
5071 28
5072 25
5073 19
5074 24
5075 22
5076 20
5077 19
5078 17
5079 26
5081 35
5082 26
5084 35
5085 19
5086 24
5087 22
5088 21
5089 28
5090 25
5091 21
5092 28
5093 25
5094 19
5095 24
5096 22
5097 20
5098 19
5099 22
5100 31
5101 27
5102 22
5103 31
5104 27
5105 18
5106 21
5107 20
5108 25
5109 23
5110 20
5111 25
5112 23
5113 18
5114 21
5115 17
5116 26
5118 35
5119 26
5121 35
5122 19
5123 24
5124 22
5125 21
5126 28
5127 25
5128 28
5129 25
5130 19
5131 24
5132 20
5133 19
5134 11
5135 14
5136 23
5138 32
5139 23
5141 32
5142 16
5143 21
5144 19
5145 18
5146 25
5147 22
5148 18
5149 25
5150 22
5151 16
5152 21
5153 19
5154 17
5155 16
5156 14
5157 23
5159 32
5160 23
5162 32
5163 16
5164 21
5165 19
5166 18
5167 25
5168 22
5169 18
5170 25
5171 22
5172 16
5173 21
5174 19
5175 17
5176 16
5177 19
5178 28
5179 24
5180 19
5181 28
5182 24
5183 15
5184 18
5185 17
5186 17
5187 22
5188 20
5189 17
5190 22
5191 20
5192 15
5193 18
5194 17
5195 14
5196 23
5198 32
5199 23
5201 32
5202 16
5203 21
5204 19
5205 18
5206 25
5207 18
5208 25
5209 22
5210 16
5211 19
5212 17
5213 16
5214 14
5215 23
5217 32
5218 23
5220 32
5221 16
5222 21
5223 19
5224 18
5225 25
5226 22
5227 18
5228 25
5229 22
5230 16
5231 21
5232 19
5233 17
5234 16
5235 14
5236 23
5238 32
5239 23
5241 32
5242 16
5243 21
5244 19
5245 18
5246 25
5247 22
5248 18
5249 25
5250 22
5251 16
5252 21
5253 19
5254 16
5255 19
5256 28
5257 24
5258 19
5259 28
5260 24
5261 15
5262 18
5263 17
5264 22
5265 20
5266 17
5267 22
5268 20
5269 18
5270 14
5271 23
5273 32
5274 23
5275 32
5276 16
5277 21
5278 19
5279 18
5280 25
5281 22
5282 18
5283 25
5284 22
5285 16
5286 21
5287 19
5288 17
5289 16
5290 7
5291 10
5292 19
5293 36
5294 28
5295 19
5296 36
5297 28
5298 12
5299 17
5300 15
5301 14
5302 21
5303 18
5304 14
5305 21
5306 18
5307 12
5308 17
5309 15
5310 13
5311 10
5312 36
5313 28
5314 19
5315 36
5316 28
5317 12
5318 17
5319 15
5320 14
5321 21
5322 18
5323 14
5324 21
5325 18
5326 12
5327 17
5328 15
5329 13
5330 12
5331 15
5332 24
5333 20
5334 15
5335 24
5336 20
5337 11
5338 14
5339 13
5340 13
5341 16
5342 13
5343 18
5344 16
5345 11
5346 14
5347 13
5348 10
5349 19
5350 36
5351 28
5352 36
5353 28
5354 12
5355 17
5356 15
5357 14
5358 21
5359 18
5360 14
5361 21
5362 18
5363 12
5364 17
5365 15
5366 13
5367 12
5368 10
5369 19
5370 36
5371 28
5372 19
5373 36
5374 28
5375 12
5376 17
5377 15
5378 14
5379 21
5380 18
5381 14
5382 21
5383 18
5384 12
5385 17
5386 15
5387 13
5388 12
5389 10
5390 19
5391 36
5392 28
5393 19
5394 36
5395 28
5396 12
5397 17
5398 15
5399 14
5400 21
5401 18
5402 14
5403 21
5404 18
5405 12
5406 17
5407 15
5408 13
5409 12
5410 15
5411 24
5412 20
5413 15
5414 24
5415 20
5416 11
5417 14
5418 13
5419 13
5420 18
5421 16
5422 13
5423 18
5424 16
5425 11
5426 13
5427 10
5428 19
5429 36
5430 28
5431 19
5432 36
5433 28
5434 12
5435 17
5436 15
5437 14
5438 21
5439 18
5440 14
5441 21
5442 18
5443 12
5444 17
5445 15
5446 13
5447 12
5448 14
5449 17
5450 26
5452 35
5453 26
5454 35
5455 19
5456 24
5457 22
5458 21
5459 28
5460 25
5461 21
5462 28
5463 25
5464 19
5465 24
5466 22
5467 20
5468 19
5469 17
5470 26
5472 35
5473 26
5475 35
5476 19
5477 24
5478 22
5479 21
5480 28
5481 25
5482 21
5483 28
5484 25
5485 19
5486 24
5487 22
5488 20
5489 19
5490 22
5491 31
5492 27
5493 22
5494 31
5495 27
5496 18
5497 21
5498 20
5499 20
5500 25
5501 23
5502 20
5503 25
5504 23
5505 18
5506 21
5507 17
5508 26
5510 35
5511 26
5513 35
5514 19
5515 24
5516 22
5517 21
5518 28
5519 25
5520 21
5521 28
5522 19
5523 24
5524 22
5525 20
5526 19
5527 17
5528 26
5530 35
5531 26
5532 35
5533 19
5534 24
5535 22
5536 21
5537 28
5538 25
5539 21
5540 28
5541 25
5542 19
5543 24
5544 22
5545 20
5546 19
5547 17
5548 26
5550 35
5551 26
5553 35
5554 19
5555 24
5556 22
5557 21
5558 28
5559 25
5560 21
5561 28
5562 25
5563 19
5564 24
5565 22
5566 20
5567 22
5568 31
5569 27
5570 22
5571 31
5572 27
5573 18
5574 21
5575 20
5576 20
5577 25
5578 23
5579 20
5580 25
5581 23
5582 18
5583 20
5584 17
5585 26
5587 35
5588 26
5590 35
5591 19
5592 24
5593 22
5594 21
5595 28
5596 25
5597 21
5598 28
5599 25
5600 19
5601 24
5602 22
5603 20
5604 19
5605 11
5606 14
5607 23
5609 32
5610 23
5612 32
5613 16
5614 21
5615 19
5616 18
5617 25
5618 22
5619 18
5620 25
5621 22
5622 16
5623 19
5624 17
5625 14
5627 32
5628 23
5630 32
5631 16
5632 21
5633 19
5634 18
5635 25
5636 22
5637 18
5638 25
5639 22
5640 16
5641 21
5642 19
5643 17
5644 16
5645 19
5646 28
5647 24
5648 19
5649 28
5650 24
5651 15
5652 18
5653 17
5654 17
5655 22
5656 20
5657 17
5658 22
5659 20
5660 15
5661 18
5662 17
5663 14
5664 23
5666 32
5668 32
5669 16
5670 21
5671 19
5672 18
5673 25
5674 22
5675 18
5676 25
5677 22
5678 16
5679 21
5680 19
5681 17
5682 16
5683 14
5684 23
5686 32
5687 23
5689 32
5690 16
5691 21
5692 19
5693 18
5694 25
5695 18
5696 25
5697 22
5698 16
5699 21
5700 19
5701 17
5702 16
5703 14
5704 23
5706 32
5707 23
5709 32
5710 16
5711 21
5712 19
5713 18
5714 25
5715 22
5716 18
5717 25
5718 22
5719 16
5720 21
5721 19
5722 17
5723 16
5724 19
5725 28
5726 24
5727 19
5728 28
5729 24
5730 15
5731 18
5732 17
5733 17
5734 22
5735 20
5736 17
5737 22
5738 20
5739 15
5740 18
5741 17
5742 14
5743 23
5745 32
5746 23
5748 32
5749 16
5750 21
5751 19
5752 18
5753 25
5754 18
5755 25
5756 22
5757 16
5758 21
5759 19
5760 17
5761 16
5762 5
5763 8
5764 34
5765 26
5766 17
5767 34
5768 26
5769 10
5770 15
5771 13
5772 12
5773 19
5774 16
5775 12
5776 19
5777 16
5778 10
5779 15
5780 13
5781 11
5782 10
5783 8
5784 17
5785 34
5786 26
5787 17
5788 34
5789 26
5790 10
5791 15
5792 13
5793 12
5794 19
5795 16
5796 12
5797 19
5798 16
5799 10
5800 15
5801 13
5802 11
5803 10
5804 13
5805 22
5806 18
5807 13
5808 22
5809 18
5810 9
5811 12
5812 11
5813 11
5814 16
5815 14
5816 11
5817 16
5818 9
5819 12
5820 11
5821 8
5822 17
5823 34
5824 26
5825 17
5826 34
5827 26
5828 10
5829 15
5830 13
5831 12
5832 19
5833 16
5834 12
5835 19
5836 16
5837 10
5838 15
5839 13
5840 11
5841 10
5842 8
5843 17
5844 34
5845 26
5846 17
5847 34
5848 26
5849 10
5850 15
5851 13
5852 12
5853 19
5854 16
5855 12
5856 19
5857 16
5858 10
5859 15
5860 13
5861 11
5862 10
5863 8
5864 17
5865 26
5866 17
5867 34
5868 26
5869 10
5870 15
5871 13
5872 12
5873 19
5874 16
5875 19
5876 16
5877 10
5878 15
5879 11
5880 10
5881 13
5882 22
5883 18
5884 13
5885 22
5886 18
5887 9
5888 12
5889 11
5890 11
5891 16
5892 14
5893 11
5894 16
5895 14
5896 9
5897 12
5898 11
5899 8
5900 17
5901 34
5902 26
5903 17
5904 34
5905 26
5906 10
5907 15
5908 13
5909 12
5910 19
5911 16
5912 12
5913 19
5914 16
5915 10
5916 15
5917 13
5918 11
5919 10
5920 10
5921 13
5922 22
5923 39
5924 31
5925 22
5926 39
5927 31
5928 15
5929 20
5930 18
5931 17
5932 24
5933 21
5934 17
5935 24
5936 21
5937 15
5938 20
5939 18
5940 16
5941 15
5942 13
5943 39
5944 31
5945 22
5946 31
5947 15
5948 20
5949 18
5950 17
5951 24
5952 21
5953 17
5954 24
5955 21
5956 15
5957 20
5958 18
5959 16
5960 15
5961 18
5962 27
5963 23
5964 18
5965 27
5966 23
5967 14
5968 17
5969 16
5970 16
5971 21
5972 19
5973 16
5974 21
5975 19
5976 14
5977 17
5978 16
5979 13
5980 22
5981 39
5982 31
5983 22
5984 39
5985 31
5986 15
5987 20
5988 18
5989 17
5990 24
5991 17
5992 24
5993 21
5994 15
5995 20
5996 18
5997 16
5998 15
5999 13
6000 22
6001 39
6002 31
6003 22
6004 39
6005 31
6006 15
6007 20
6008 18
6009 24
6010 17
6011 24
6012 21
6013 20
6014 18
6015 16
6016 15
6017 13
6018 22
6019 39
6020 31
6021 22
6022 39
6023 31
6024 15
6025 20
6026 18
6027 17
6028 24
6029 21
6030 17
6031 24
6032 21
6033 15
6034 20
6035 18
6036 16
6037 15
6038 18
6039 27
6040 23
6041 18
6042 27
6043 23
6044 14
6045 16
6046 16
6047 21
6048 19
6049 16
6050 21
6051 19
6052 14
6053 17
6054 16
6055 13
6056 22
6057 39
6058 31
6059 22
6060 39
6061 31
6062 15
6063 20
6064 18
6065 17
6066 24
6067 21
6068 17
6069 24
6070 21
6071 15
6072 20
6073 18
6074 16
6075 15
6076 8
6077 11
6078 20
6079 37
6080 29
6081 20
6082 37
6083 13
6084 18
6085 16
6086 15
6087 22
6088 19
6089 15
6090 22
6091 19
6092 13
6093 18
6094 16
6095 14
6096 13
6097 11
6098 20
6099 37
6100 29
6101 37
6102 29
6103 13
6104 18
6105 16
6106 15
6107 22
6108 19
6109 15
6110 22
6111 19
6112 18
6113 16
6114 14
6115 13
6116 16
6117 25
6118 21
6119 16
6120 25
6121 21
6122 12
6123 15
6124 14
6125 14
6126 19
6127 17
6128 14
6129 19
6130 17
6131 12
6132 15
6133 14
6134 11
6135 20
6136 37
6137 29
6138 20
6139 37
6140 29
6141 13
6142 18
6143 16
6144 15
6145 19
6146 15
6147 22
6148 19
6149 18
6150 16
6151 13
6152 11
6153 20
6154 37
6155 29
6156 20
6157 37
6158 29
6159 13
6160 18
6161 16
6162 15
6163 22
6164 19
6165 22
6166 19
6167 13
6168 18
6169 16
6170 14
6171 13
6172 11
6173 20
6174 29
6175 20
6176 37
6177 29
6178 13
6179 18
6180 16
6181 22
6182 19
6183 15
6184 22
6185 19
6186 13
6187 18
6188 16
6189 14
6190 13
6191 16
6192 25
6193 21
6194 16
6195 25
6196 21
6197 12
6198 15
6199 14
6200 14
6201 19
6202 17
6203 14
6204 19
6205 17
6206 12
6207 15
6208 14
6209 11
6210 20
6211 37
6212 29
6213 20
6214 37
6215 29
6216 13
6217 18
6218 16
6219 15
6220 22
6221 19
6222 15
6223 22
6224 19
6225 13
6226 18
6227 16
6228 14
6229 13
6230 6
6231 9
6232 18
6233 35
6234 27
6235 18
6236 35
6237 27
6238 11
6239 16
6240 14
6241 13
6242 20
6243 17
6244 13
6245 20
6246 17
6247 11
6248 16
6249 14
6250 12
6251 11
6252 9
6253 18
6254 35
6255 27
6256 35
6257 27
6258 11
6259 16
6260 14
6261 13
6262 20
6263 17
6264 13
6265 20
6266 17
6267 11
6268 16
6269 14
6270 12
6271 11
6272 14
6273 23
6274 19
6275 14
6276 23
6277 19
6278 10
6279 13
6280 12
6281 12
6282 17
6283 15
6284 12
6285 17
6286 10
6287 13
6288 12
6289 9
6290 18
6291 35
6292 18
6293 35
6294 27
6295 11
6296 16
6297 14
6298 13
6299 20
6300 17
6301 13
6302 20
6303 17
6304 11
6305 16
6306 14
6307 12
6308 11
6309 9
6310 18
6311 35
6312 27
6313 18
6314 35
6315 27
6316 11
6317 16
6318 14
6319 13
6320 20
6321 17
6322 13
6323 20
6324 17
6325 11
6326 16
6327 14
6328 12
6329 11
6330 9
6331 18
6332 35
6333 27
6334 18
6335 35
6336 27
6337 11
6338 16
6339 14
6340 20
6341 17
6342 13
6343 20
6344 17
6345 11
6346 16
6347 14
6348 12
6349 11
6350 14
6351 23
6352 19
6353 23
6354 19
6355 10
6356 13
6357 12
6358 12
6359 17
6360 15
6361 12
6362 17
6363 15
6364 10
6365 13
6366 12
6367 9
6368 18
6369 35
6370 27
6371 18
6372 35
6373 27
6374 11
6375 16
6376 14
6377 13
6378 20
6379 17
6380 13
6381 20
6382 17
6383 11
6384 16
6385 14
6386 12
6387 11
6388 5
6389 8
6390 17
6391 34
6392 26
6393 17
6394 34
6395 26
6396 10
6397 15
6398 13
6399 12
6400 19
6401 16
6402 12
6403 19
6404 16
6405 10
6406 15
6407 13
6408 11
6409 10
6410 8
6411 17
6412 34
6413 26
6414 17
6415 34
6416 26
6417 10
6418 15
6419 13
6420 12
6421 19
6422 16
6423 12
6424 19
6425 16
6426 10
6427 15
6428 13
6429 11
6430 10
6431 13
6432 22
6433 18
6434 13
6435 22
6436 18
6437 9
6438 12
6439 11
6440 11
6441 16
6442 14
6443 11
6444 16
6445 14
6446 9
6447 12
6448 8
6449 17
6450 34
6451 26
6452 17
6453 34
6454 26
6455 15
6456 13
6457 12
6458 19
6459 16
6460 12
6461 19
6462 16
6463 10
6464 15
6465 13
6466 11
6467 10
6468 8
6469 17
6470 34
6471 26
6472 17
6473 34
6474 26
6475 10
6476 15
6477 13
6478 12
6479 19
6480 16
6481 12
6482 19
6483 16
6484 15
6485 13
6486 11
6487 10
6488 8
6489 17
6490 34
6491 26
6492 17
6493 34
6494 26
6495 10
6496 15
6497 13
6498 12
6499 19
6500 16
6501 12
6502 19
6503 16
6504 10
6505 15
6506 11
6507 10
6508 13
6509 22
6510 13
6511 22
6512 18
6513 9
6514 12
6515 11
6516 11
6517 16
6518 14
6519 11
6520 16
6521 14
6522 9
6523 12
6524 11
6525 8
6526 17
6527 34
6528 26
6529 17
6530 34
6531 26
6532 10
6533 15
6534 13
6535 12
6536 19
6537 16
6538 12
6539 19
6540 16
6541 10
6542 15
6543 13
6544 11
6545 10
6546 8
6547 11
6548 20
6549 37
6550 29
6551 20
6552 37
6553 13
6554 18
6555 16
6556 15
6557 22
6558 19
6559 15
6560 22
6561 19
6562 13
6563 18
6564 16
6565 14
6566 13
6567 11
6568 20
6569 37
6570 29
6571 20
6572 37
6573 29
6574 13
6575 18
6576 16
6577 15
6578 22
6579 19
6580 15
6581 22
6582 19
6583 13
6584 18
6585 16
6586 14
6587 13
6588 16
6589 25
6590 21
6591 16
6592 25
6593 21
6594 12
6595 15
6596 14
6597 19
6598 17
6599 14
6600 19
6601 17
6602 12
6603 15
6604 14
6605 11
6606 20
6607 37
6608 29
6609 20
6610 37
6611 13
6612 18
6613 16
6614 15
6615 22
6616 19
6617 15
6618 22
6619 19
6620 13
6621 18
6622 16
6623 14
6624 13
6625 11
6626 20
6627 37
6628 29
6629 20
6630 37
6631 29
6632 13
6633 18
6634 16
6635 15
6636 22
6637 19
6638 15
6639 22
6640 19
6641 13
6642 18
6643 14
6644 13
6645 11
6646 20
6647 37
6648 29
6649 20
6650 37
6651 29
6652 13
6653 18
6654 16
6655 15
6656 22
6657 19
6658 15
6659 22
6660 19
6661 13
6662 18
6663 16
6664 14
6665 16
6666 25
6667 21
6668 16
6669 25
6670 21
6671 12
6672 15
6673 14
6674 14
6675 19
6676 17
6677 14
6678 19
6679 17
6680 12
6681 15
6682 14
6683 11
6684 20
6685 37
6686 29
6687 20
6688 37
6689 29
6690 13
6691 18
6692 16
6693 15
6694 22
6695 19
6696 15
6697 22
6698 19
6699 13
6700 18
6701 16
6702 14
6703 13
6704 17
6705 20
6706 29
6708 38
6709 29
6711 38
6712 22
6713 27
6714 25
6715 24
6716 31
6717 28
6718 24
6719 31
6720 28
6721 22
6722 27
6723 25
6724 23
6725 20
6726 29
6728 38
6729 29
6731 38
6732 22
6733 27
6734 25
6735 24
6736 31
6737 28
6738 24
6739 31
6740 28
6741 22
6742 27
6743 25
6744 23
6745 22
6746 25
6747 34
6748 30
6749 25
6750 34
6751 30
6752 21
6753 23
6754 23
6755 28
6756 26
6757 26
6758 21
6759 24
6760 23
6761 20
6762 29
6764 38
6766 38
6767 22
6768 27
6769 25
6770 31
6771 28
6772 24
6773 31
6774 28
6775 27
6776 25
6777 22
6778 20
6779 29
6781 38
6782 29
6784 38
6785 22
6786 27
6787 25
6788 24
6789 31
6790 28
6791 24
6792 28
6793 22
6794 27
6795 25
6796 23
6797 22
6798 20
6799 29
6801 38
6802 29
6804 38
6805 22
6806 27
6807 24
6808 31
6809 28
6810 24
6811 31
6812 28
6813 22
6814 27
6815 25
6816 23
6817 22
6818 25
6819 34
6820 30
6821 25
6822 34
6823 30
6824 21
6825 23
6826 23
6827 28
6828 26
6829 23
6830 26
6831 21
6832 24
6833 23
6834 20
6835 29
6837 38
6838 29
6840 38
6841 22
6842 27
6843 25
6844 24
6845 31
6846 28
6847 24
6848 31
6849 28
6850 22
6851 27
6852 25
6853 22
6854 13
6855 16
6856 25
6858 34
6859 25
6861 34
6862 18
6863 23
6864 21
6865 20
6866 27
6867 24
6868 20
6869 27
6870 24
6871 18
6872 23
6873 21
6874 19
6875 18
6876 16
6877 25
6878 34
6879 25
6881 34
6882 18
6883 23
6884 21
6885 20
6886 27
6887 24
6888 20
6889 27
6890 24
6891 18
6892 23
6893 21
6894 19
6895 18
6896 21
6897 30
6898 26
6899 21
6900 30
6901 26
6902 17
6903 20
6904 19
6905 24
6906 22
6907 19
6908 24
6909 22
6910 17
6911 20
6912 19
6913 16
6914 25
6916 34
6917 25
6919 34
6920 18
6921 23
6922 21
6923 27
6924 24
6925 20
6926 27
6927 24
6928 18
6929 23
6930 21
6931 19
6932 18
6933 16
6934 25
6936 34
6937 25
6939 34
6940 18
6941 23
6942 21
6943 20
6944 27
6945 24
6946 20
6947 27
6948 24
6949 18
6950 23
6951 21
6952 19
6953 18
6954 16
6955 25
6957 34
6959 34
6960 18
6961 23
6962 20
6963 27
6964 24
6965 20
6966 27
6967 24
6968 18
6969 23
6970 21
6971 19
6972 18
6973 21
6974 30
6975 26
6976 21
6977 30
6978 26
6979 17
6980 20
6981 19
6982 19
6983 24
6984 22
6985 19
6986 24
6987 22
6988 17
6989 20
6990 19
6991 16
6992 25
6994 34
6995 25
6997 34
6998 18
6999 23
7000 21
7001 20
7002 27
7003 24
7004 27
7005 24
7006 18
7007 23
7008 21
7009 19
7010 18
7011 11
7012 20
7013 37
7014 29
7015 20
7016 37
7017 29
7018 13
7019 18
7020 16
7021 15
7022 22
7023 15
7024 22
7025 19
7026 13
7027 18
7028 16
7029 14
7030 13
7031 11
7032 20
7033 37
7034 29
7035 20
7036 37
7037 29
7038 13
7039 18
7040 16
7041 15
7042 22
7043 19
7044 15
7045 22
7046 19
7047 13
7048 18
7049 16
7050 14
7051 13
7052 16
7053 25
7054 21
7055 16
7056 25
7057 21
7058 12
7059 15
7060 14
7061 14
7062 19
7063 17
7064 14
7065 19
7066 17
7067 12
7068 15
7069 14
7070 11
7071 20
7072 37
7073 29
7074 20
7075 37
7076 29
7077 13
7078 18
7079 15
7080 22
7081 19
7082 15
7083 22
7084 19
7085 13
7086 18
7087 16
7088 14
7089 11
7090 20
7091 37
7092 29
7093 20
7094 37
7095 29
7096 13
7097 18
7098 16
7099 15
7100 22
7101 19
7102 15
7103 19
7104 13
7105 18
7106 16
7107 14
7108 13
7109 11
7110 20
7111 37
7112 29
7113 20
7114 37
7115 29
7116 13
7117 18
7118 16
7119 15
7120 22
7121 19
7122 15
7123 22
7124 19
7125 18
7126 16
7127 14
7128 13
7129 16
7130 25
7131 21
7132 16
7133 25
7134 21
7135 12
7136 15
7137 14
7138 14
7139 19
7140 17
7141 14
7142 19
7143 17
7144 12
7145 15
7146 14
7147 11
7148 20
7149 37
7150 29
7151 20
7152 37
7153 29
7154 13
7155 18
7156 16
7157 15
7158 22
7159 19
7160 15
7161 22
7162 19
7163 13
7164 18
7165 16
7166 14
7167 13
7168 17
7169 20
7170 29
7172 38
7173 29
7175 38
7176 22
7177 27
7178 25
7179 24
7180 28
7181 24
7182 31
7183 28
7184 27
7185 25
7186 23
7187 22
7188 20
7189 29
7191 38
7192 29
7194 22
7195 27
7196 25
7197 24
7198 31
7199 28
7200 24
7201 31
7202 28
7203 22
7204 27
7205 25
7206 23
7207 22
7208 25
7209 34
7210 30
7211 25
7212 34
7213 30
7214 21
7215 24
7216 23
7217 23
7218 28
7219 26
7220 23
7221 28
7222 26
7223 21
7224 24
7225 23
7226 20
7227 29
7229 38
7230 29
7232 38
7233 22
7234 27
7235 25
7236 24
7237 31
7238 28
7239 24
7240 31
7241 28
7242 22
7243 27
7244 25
7245 23
7246 22
7247 20
7248 29
7250 38
7251 29
7253 38
7254 22
7255 27
7256 25
7257 24
7258 31
7259 28
7260 24
7261 31
7262 28
7263 22
7264 27
7265 25
7266 23
7267 22
7268 20
7269 29
7271 38
7273 38
7274 22
7275 27
7276 25
7277 24
7278 28
7279 24
7280 31
7281 28
7282 22
7283 27
7284 25
7285 23
7286 22
7287 25
7288 34
7289 30
7290 25
7291 34
7292 30
7293 21
7294 24
7295 23
7296 23
7297 28
7298 26
7299 23
7300 28
7301 26
7302 21
7303 24
7304 23
7305 20
7306 29
7308 38
7309 29
7311 38
7312 22
7313 27
7314 25
7315 24
7316 31
7317 28
7318 24
7319 31
7320 28
7321 22
7322 27
7323 25
7324 23
7325 22
7326 13
7327 16
7328 25
7330 34
7331 25
7333 18
7334 23
7335 21
7336 20
7337 27
7338 24
7339 20
7340 27
7341 24
7342 18
7343 23
7344 21
7345 19
7346 18
7347 16
7348 25
7350 34
7351 25
7353 34
7354 18
7355 23
7356 21
7357 20
7358 27
7359 24
7360 20
7361 27
7362 18
7363 23
7364 21
7365 19
7366 18
7367 21
7368 30
7369 26
7370 21
7371 30
7372 26
7373 17
7374 19
7375 19
7376 24
7377 22
7378 19
7379 24
7380 22
7381 17
7382 20
7383 19
7384 16
7385 25
7387 34
7388 25
7390 34
7391 18
7392 23
7393 21
7394 20
7395 27
7396 24
7397 20
7398 27
7399 24
7400 18
7401 23
7402 21
7403 19
7404 18
7405 16
7406 25
7408 34
7409 25
7411 34
7412 18
7413 23
7414 21
7415 20
7416 27
7417 24
7418 20
7419 27
7420 24
7421 18
7422 23
7423 21
7424 19
7425 18
7426 16
7427 25
7429 34
7430 25
7432 34
7433 18
7434 23
7435 21
7436 20
7437 27
7438 24
7439 20
7440 27
7441 24
7442 18
7443 23
7444 21
7445 19
7446 18
7447 21
7448 30
7449 26
7450 21
7451 30
7452 26
7453 17
7454 20
7455 19
7456 24
7457 22
7458 19
7459 24
7460 22
7461 17
7462 20
7463 19
7464 16
7465 25
7467 34
7468 25
7469 34
7470 18
7471 23
7472 21
7473 20
7474 27
7475 24
7476 20
7477 27
7478 24
7479 18
7480 23
7481 21
7482 19
7483 18
7484 4
7485 7
7486 16
7487 33
7488 25
7489 16
7490 33
7491 25
7492 9
7493 14
7494 12
7495 11
7496 18
7497 15
7498 11
7499 18
7500 15
7501 9
7502 14
7503 12
7504 10
7505 9
7506 7
7507 16
7508 33
7509 25
7510 16
7511 33
7512 25
7513 9
7514 14
7515 12
7516 11
7517 18
7518 15
7519 11
7520 18
7521 15
7522 9
7523 14
7524 10
7525 9
7526 12
7527 21
7528 17
7529 12
7530 21
7531 17
7532 8
7533 11
7534 10
7535 10
7536 15
7537 13
7538 10
7539 15
7540 13
7541 8
7542 11
7543 10
7544 7
7545 16
7546 33
7547 25
7548 16
7549 33
7550 25
7551 9
7552 14
7553 12
7554 11
7555 18
7556 15
7557 11
7558 18
7559 15
7560 9
7561 14
7562 12
7563 10
7564 9
7565 7
7566 16
7567 33
7568 25
7569 16
7570 33
7571 9
7572 14
7573 12
7574 11
7575 18
7576 15
7577 11
7578 18
7579 15
7580 9
7581 14
7582 12
7583 10
7584 9
7585 7
7586 16
7587 33
7588 16
7589 33
7590 25
7591 9
7592 14
7593 12
7594 11
7595 18
7596 15
7597 11
7598 18
7599 15
7600 9
7601 14
7602 12
7603 10
7604 9
7605 12
7606 21
7607 17
7608 12
7609 21
7610 17
7611 8
7612 11
7613 10
7614 10
7615 15
7616 13
7617 10
7618 15
7619 13
7620 8
7621 11
7622 10
7623 7
7624 16
7625 33
7626 25
7627 16
7628 33
7629 9
7630 14
7631 12
7632 11
7633 18
7634 15
7635 11
7636 18
7637 15
7638 9
7639 14
7640 12
7641 10
7642 9
7643 7
7644 10
7645 19
7646 36
7647 28
7648 19
7649 36
7650 28
7651 12
7652 17
7653 15
7654 14
7655 21
7656 18
7657 21
7658 18
7659 12
7660 17
7661 15
7662 13
7663 12
7664 10
7665 19
7666 36
7667 28
7668 19
7669 36
7670 28
7671 12
7672 17
7673 15
7674 14
7675 21
7676 18
7677 14
7678 21
7679 12
7680 17
7681 15
7682 13
7683 12
7684 15
7685 24
7686 20
7687 15
7688 24
7689 20
7690 11
7691 14
7692 13
7693 13
7694 18
7695 16
7696 13
7697 18
7698 16
7699 11
7700 14
7701 13
7702 10
7703 19
7704 36
7705 28
7706 19
7707 36
7708 28
7709 12
7710 17
7711 15
7712 14
7713 21
7714 18
7715 14
7716 21
7717 18
7718 12
7719 17
7720 15
7721 13
7722 12
7723 10
7724 19
7725 36
7726 28
7727 19
7728 36
7729 28
7730 12
7731 15
7732 14
7733 18
7734 14
7735 21
7736 18
7737 12
7738 17
7739 15
7740 12
7741 10
7742 19
7743 36
7744 28
7745 19
7746 36
7747 28
7748 17
7749 15
7750 14
7751 21
7752 18
7753 14
7754 21
7755 18
7756 12
7757 17
7758 15
7759 13
7760 12
7761 15
7762 24
7763 20
7764 15
7765 24
7766 20
7767 11
7768 14
7769 13
7770 18
7771 16
7772 18
7773 16
7774 11
7775 14
7776 13
7777 10
7778 19
7779 36
7780 28
7781 19
7782 36
7783 28
7784 12
7785 17
7786 15
7787 14
7788 18
7789 14
7790 21
7791 18
7792 12
7793 17
7794 15
7795 13
7796 12
7797 6
7798 9
7799 18
7800 35
7801 27
7802 18
7803 35
7804 27
7805 11
7806 16
7807 14
7808 13
7809 20
7810 17
7811 13
7812 20
7813 17
7814 11
7815 16
7816 14
7817 12
7818 11
7819 9
7820 18
7821 35
7822 27
7823 18
7824 35
7825 27
7826 11
7827 16
7828 14
7829 13
7830 20
7831 17
7832 13
7833 20
7834 17
7835 11
7836 16
7837 14
7838 12
7839 11
7840 14
7841 23
7842 19
7843 14
7844 23
7845 10
7846 13
7847 12
7848 12
7849 17
7850 15
7851 12
7852 17
7853 15
7854 10
7855 13
7856 12
7857 9
7858 18
7859 35
7860 27
7861 18
7862 27
7863 11
7864 16
7865 14
7866 17
7867 13
7868 20
7869 17
7870 11
7871 16
7872 14
7873 12
7874 11
7875 9
7876 18
7877 35
7878 18
7879 35
7880 27
7881 11
7882 16
7883 14
7884 13
7885 20
7886 17
7887 13
7888 20
7889 17
7890 11
7891 16
7892 14
7893 12
7894 11
7895 9
7896 18
7897 35
7898 27
7899 18
7900 35
7901 27
7902 11
7903 16
7904 14
7905 13
7906 20
7907 17
7908 20
7909 17
7910 11
7911 16
7912 14
7913 12
7914 11
7915 14
7916 23
7917 19
7918 14
7919 23
7920 19
7921 10
7922 12
7923 12
7924 17
7925 15
7926 12
7927 17
7928 15
7929 10
7930 13
7931 12
7932 9
7933 18
7934 35
7935 27
7936 18
7937 35
7938 11
7939 14
7940 13
7941 20
7942 17
7943 13
7944 20
7945 17
7946 11
7947 14
7948 12
7949 11
7950 6
7951 9
7952 18
7953 35
7954 27
7955 18
7956 35
7957 27
7958 16
7959 14
7960 13
7961 20
7962 17
7963 13
7964 20
7965 17
7966 11
7967 16
7968 14
7969 12
7970 11
7971 9
7972 18
7973 35
7974 27
7975 18
7976 35
7977 27
7978 11
7979 16
7980 14
7981 13
7982 20
7983 17
7984 13
7985 20
7986 17
7987 11
7988 16
7989 14
7990 12
7991 11
7992 14
7993 23
7994 19
7995 14
7996 23
7997 19
7998 10
7999 13
8000 12
8001 12
8002 17
8003 15
8004 12
8005 17
8006 10
8007 13
8008 12
8009 9
8010 18
8011 35
8012 27
8013 18
8014 35
8015 27
8016 11
8017 16
8018 14
8019 13
8020 20
8021 17
8022 13
8023 20
8024 17
8025 11
8026 16
8027 14
8028 12
8029 11
8030 9
8031 18
8032 35
8033 27
8034 18
8035 35
8036 27
8037 11
8038 16
8039 14
8040 13
8041 20
8042 17
8043 13
8044 20
8045 17
8046 11
8047 16
8048 14
8049 12
8050 9
8051 18
8052 35
8053 27
8054 18
8055 35
8056 27
8057 11
8058 16
8059 14
8060 13
8061 20
8062 13
8063 20
8064 17
8065 11
8066 16
8067 14
8068 12
8069 11
8070 14
8071 23
8072 19
8073 14
8074 23
8075 19
8076 10
8077 13
8078 12
8079 12
8080 17
8081 15
8082 12
8083 17
8084 15
8085 10
8086 12
8087 9
8088 18
8089 35
8090 27
8091 18
8092 35
8093 27
8094 16
8095 14
8096 13
8097 20
8098 17
8099 13
8100 20
8101 17
8102 11
8103 16
8104 14
8105 12
8106 11
8107 11
8108 14
8109 23
8111 32
8112 23
8114 32
8115 16
8116 19
8117 18
8118 25
8119 22
8120 18
8121 25
8122 22
8123 16
8124 21
8125 19
8126 16
8127 23
8129 32
8130 23
8131 32
8132 16
8133 21
8134 19
8135 18
8136 25
8137 22
8138 18
8139 25
8140 22
8141 16
8142 21
8143 19
8144 17
8145 19
8146 28
8147 24
8148 19
8149 28
8150 24
8151 15
8152 18
8153 17
8154 17
8155 22
8156 20
8157 17
8158 22
8159 20
8160 15
8161 18
8162 17
8163 14
8164 23
8166 32
8167 23
8169 32
8170 16
8171 21
8172 19
8173 18
8174 25
8175 22
8176 18
8177 25
8178 22
8179 16
8180 21
8181 19
8182 17
8183 16
8184 14
8185 23
8187 32
8188 23
8190 32
8191 16
8192 21
8193 19
8194 18
8195 22
8196 18
8197 25
8198 22
8199 16
8200 21
8201 19
8202 17
8203 14
8204 23
8206 32
8207 23
8209 32
8210 16
8211 21
8212 19
8213 25
8214 22
8215 18
8216 25
8217 22
8218 16
8219 21
8220 19
8221 17
8222 16
8223 19
8224 28
8225 24
8226 19
8227 28
8228 24
8229 15
8230 18
8231 17
8232 17
8233 22
8234 17
8235 22
8236 20
8237 15
8238 18
8239 17
8240 14
8241 23
8243 32
8244 23
8246 32
8247 16
8248 21
8249 25
8250 22
8251 18
8252 25
8253 22
8254 16
8255 21
8256 19
8257 17
8258 16
8259 9
8260 12
8261 21
8262 38
8263 30
8264 21
8265 38
8266 30
8267 14
8268 16
8269 23
8270 20
8271 16
8272 23
8273 14
8274 19
8275 17
8276 15
8277 14
8278 12
8279 21
8280 38
8281 30
8282 21
8283 38
8284 30
8285 14
8286 19
8287 17
8288 16
8289 23
8290 20
8291 16
8292 23
8293 20
8294 14
8295 19
8296 17
8297 15
8298 14
8299 17
8300 26
8301 22
8302 17
8303 26
8304 22
8305 13
8306 16
8307 15
8308 15
8309 20
8310 18
8311 15
8312 20
8313 18
8314 13
8315 16
8316 15
8317 12
8318 21
8319 38
8320 30
8321 21
8322 38
8323 30
8324 14
8325 19
8326 17
8327 16
8328 20
8329 16
8330 23
8331 20
8332 14
8333 19
8334 17
8335 15
8336 14
8337 12
8338 21
8339 38
8340 30
8341 21
8342 38
8343 30
8344 14
8345 19
8346 17
8347 16
8348 23
8349 20
8350 16
8351 23
8352 20
8353 14
8354 19
8355 17
8356 15
8357 12
8358 21
8359 38
8360 30
8361 21
8362 38
8363 30
8364 14
8365 19
8366 17
8367 16
8368 23
8369 20
8370 23
8371 20
8372 14
8373 19
8374 17
8375 15
8376 17
8377 26
8378 22
8379 17
8380 26
8381 22
8382 13
8383 16
8384 15
8385 15
8386 20
8387 18
8388 15
8389 20
8390 18
8391 13
8392 16
8393 15
8394 12
8395 21
8396 30
8397 21
8398 30
8399 14
8400 19
8401 17
8402 16
8403 23
8404 20
8405 16
8406 23
8407 20
8408 14
8409 19
8410 17
8411 14
8412 6
8413 9
8414 18
8415 35
8416 27
8417 18
8418 35
8419 27
8420 11
8421 16
8422 14
8423 13
8424 20
8425 17
8426 13
8427 20
8428 17
8429 11
8430 16
8431 14
8432 12
8433 11
8434 9
8435 18
8436 35
8437 27
8438 18
8439 35
8440 27
8441 11
8442 16
8443 14
8444 17
8445 13
8446 20
8447 17
8448 11
8449 16
8450 14
8451 12
8452 11
8453 14
8454 23
8455 19
8456 14
8457 23
8458 19
8459 10
8460 13
8461 12
8462 12
8463 17
8464 15
8465 12
8466 17
8467 15
8468 10
8469 13
8470 12
8471 9
8472 18
8473 35
8474 27
8475 18
8476 35
8477 27
8478 11
8479 16
8480 14
8481 13
8482 20
8483 17
8484 13
8485 20
8486 17
8487 11
8488 16
8489 14
8490 12
8491 11
8492 9
8493 18
8494 35
8495 27
8496 18
8497 35
8498 27
8499 11
8500 16
8501 14
8502 13
8503 20
8504 17
8505 13
8506 20
8507 17
8508 16
8509 14
8510 12
8511 11
8512 9
8513 35
8514 27
8515 18
8516 35
8517 27
8518 11
8519 16
8520 14
8521 13
8522 20
8523 17
8524 13
8525 17
8526 11
8527 16
8528 14
8529 12
8530 11
8531 14
8532 23
8533 19
8534 14
8535 23
8536 19
8537 10
8538 13
8539 12
8540 12
8541 17
8542 15
8543 12
8544 17
8545 15
8546 10
8547 13
8548 12
8549 9
8550 18
8551 35
8552 27
8553 18
8554 35
8555 27
8556 11
8557 16
8558 14
8559 13
8560 20
8561 17
8562 13
8563 20
8564 11
8565 16
8566 14
8567 12
8568 11
8569 11
8570 14
8571 23
8573 32
8574 23
8576 32
8577 16
8578 21
8579 19
8580 18
8581 25
8582 22
8583 18
8584 25
8585 22
8586 16
8587 21
8588 19
8589 17
8590 16
8591 14
8592 23
8594 32
8595 23
8597 32
8598 16
8599 21
8600 19
8601 18
8602 25
8603 22
8604 18
8605 25
8606 22
8607 16
8608 21
8609 19
8610 17
8611 16
8612 19
8613 28
8614 24
8615 19
8616 28
8617 24
8618 15
8619 18
8620 17
8621 17
8622 22
8623 20
8624 17
8625 22
8626 20
8627 15
8628 17
8629 14
8630 23
8632 23
8634 32
8635 16
8636 21
8637 18
8638 25
8639 22
8640 18
8641 25
8642 22
8643 16
8644 21
8645 19
8646 17
8647 16
8648 14
8649 23
8651 32
8652 23
8654 32
8655 16
8656 21
8657 19
8658 18
8659 25
8660 22
8661 18
8662 25
8663 16
8664 21
8665 19
8666 17
8667 16
8668 14
8669 23
8671 32
8672 23
8674 32
8675 16
8676 21
8677 19
8678 18
8679 25
8680 22
8681 18
8682 25
8683 22
8684 16
8685 21
8686 19
8687 17
8688 16
8689 19
8690 28
8691 24
8692 19
8693 28
8694 24
8695 15
8696 18
8697 17
8698 22
8699 20
8700 17
8701 22
8702 20
8703 15
8704 18
8705 17
8706 14
8707 23
8709 32
8710 23
8712 32
8713 16
8714 21
8715 19
8716 18
8717 25
8718 22
8719 18
8720 25
8721 22
8722 16
8723 21
8724 19
8725 17
8726 16
8727 9
8728 12
8729 21
8730 38
8731 30
8732 21
8733 38
8734 30
8735 14
8736 19
8737 17
8738 16
8739 23
8740 20
8741 16
8742 23
8743 20
8744 14
8745 19
8746 17
8747 15
8748 14
8749 12
8750 21
8751 38
8752 30
8753 21
8754 38
8755 30
8756 14
8757 17
8758 16
8759 23
8760 20
8761 16
8762 23
8763 20
8764 14
8765 19
8766 17
8767 15
8768 14
8769 17
8770 26
8771 22
8772 17
8773 26
8774 22
8775 13
8776 15
8777 20
8778 18
8779 15
8780 20
8781 18
8782 13
8783 16
8784 15
8785 12
8786 21
8787 38
8788 30
8789 21
8790 38
8791 30
8792 14
8793 19
8794 17
8795 23
8796 20
8797 16
8798 23
8799 20
8800 14
8801 19
8802 17
8803 15
8804 14
8805 12
8806 21
8807 38
8808 30
8809 21
8810 38
8811 30
8812 19
8813 17
8814 16
8815 23
8816 20
8817 16
8818 23
8819 20
8820 14
8821 19
8822 17
8823 15
8824 14
8825 12
8826 21
8827 38
8828 30
8829 21
8830 38
8831 30
8832 14
8833 19
8834 17
8835 16
8836 23
8837 20
8838 16
8839 23
8840 20
8841 14
8842 19
8843 17
8844 15
8845 14
8846 17
8847 26
8848 22
8849 17
8850 26
8851 22
8852 13
8853 15
8854 15
8855 20
8856 18
8857 15
8858 20
8859 18
8860 13
8861 16
8862 15
8863 12
8864 21
8865 38
8866 30
8867 21
8868 38
8869 30
8870 14
8871 19
8872 17
8873 16
8874 23
8875 20
8876 16
8877 23
8878 20
8879 14
8880 19
8881 17
8882 15
8883 14
8884 4
8885 7
8886 16
8887 33
8888 25
8889 16
8890 33
8891 25
8892 9
8893 14
8894 12
8895 11
8896 18
8897 15
8898 11
8899 18
8900 15
8901 9
8902 14
8903 12
8904 10
8905 9
8906 7
8907 16
8908 25
8909 16
8910 33
8911 25
8912 9
8913 14
8914 12
8915 11
8916 18
8917 15
8918 11
8919 15
8920 9
8921 14
8922 12
8923 10
8924 9
8925 12
8926 21
8927 17
8928 12
8929 21
8930 17
8931 8
8932 11
8933 10
8934 10
8935 15
8936 13
8937 10
8938 15
8939 13
8940 8
8941 11
8942 10
8943 7
8944 16
8945 33
8946 25
8947 16
8948 25
8949 9
8950 14
8951 12
8952 11
8953 18
8954 15
8955 11
8956 18
8957 15
8958 9
8959 14
8960 12
8961 10
8962 9
8963 7
8964 16
8965 33
8966 25
8967 16
8968 25
8969 9
8970 14
8971 12
8972 11
8973 18
8974 15
8975 11
8976 18
8977 15
8978 9
8979 14
8980 12
8981 10
8982 9
8983 7
8984 16
8985 33
8986 25
8987 16
8988 33
8989 25
8990 9
8991 14
8992 12
8993 11
8994 18
8995 15
8996 11
8997 18
8998 15
8999 9
9000 14
9001 10
9002 9
9003 12
9004 21
9005 17
9006 12
9007 21
9008 17
9009 8
9010 11
9011 10
9012 10
9013 15
9014 13
9015 10
9016 15
9017 13
9018 8
9019 11
9020 10
9021 7
9022 16
9023 33
9024 25
9025 16
9026 33
9027 25
9028 9
9029 14
9030 12
9031 11
9032 18
9033 15
9034 11
9035 18
9036 15
9037 9
9038 14
9039 12
9040 10
9041 9
9042 7
9043 10
9044 19
9045 36
9046 28
9047 19
9048 36
9049 28
9050 12
9051 14
9052 21
9053 18
9054 14
9055 21
9056 18
9057 12
9058 17
9059 15
9060 13
9061 12
9062 19
9063 36
9064 28
9065 19
9066 36
9067 28
9068 12
9069 17
9070 15
9071 14
9072 21
9073 18
9074 14
9075 21
9076 18
9077 12
9078 17
9079 15
9080 13
9081 12
9082 15
9083 24
9084 20
9085 15
9086 24
9087 20
9088 11
9089 14
9090 13
9091 13
9092 18
9093 16
9094 13
9095 18
9096 16
9097 11
9098 14
9099 13
9100 10
9101 19
9102 36
9103 28
9104 19
9105 36
9106 28
9107 12
9108 15
9109 14
9110 21
9111 18
9112 14
9113 21
9114 18
9115 12
9116 17
9117 15
9118 13
9119 12
9120 10
9121 36
9122 19
9123 36
9124 28
9125 12
9126 15
9127 14
9128 21
9129 18
9130 14
9131 21
9132 18
9133 12
9134 17
9135 15
9136 13
9137 12
9138 10
9139 19
9140 36
9141 28
9142 19
9143 36
9144 28
9145 12
9146 17
9147 15
9148 14
9149 21
9150 18
9151 21
9152 18
9153 12
9154 17
9155 15
9156 13
9157 12
9158 15
9159 24
9160 20
9161 15
9162 24
9163 20
9164 11
9165 14
9166 13
9167 13
9168 18
9169 16
9170 13
9171 18
9172 16
9173 11
9174 14
9175 13
9176 10
9177 19
9178 36
9179 28
9180 19
9181 36
9182 12
9183 17
9184 15
9185 14
9186 21
9187 14
9188 21
9189 18
9190 12
9191 17
9192 15
9193 13
9194 12
9195 6
9196 9
9197 18
9198 35
9199 27
9200 18
9201 35
9202 27
9203 11
9204 16
9205 14
9206 13
9207 20
9208 17
9209 13
9210 20
9211 17
9212 11
9213 16
9214 14
9215 12
9216 11
9217 9
9218 18
9219 35
9220 27
9221 18
9222 35
9223 27
9224 11
9225 16
9226 14
9227 13
9228 20
9229 17
9230 13
9231 20
9232 17
9233 11
9234 16
9235 14
9236 12
9237 11
9238 14
9239 23
9240 19
9241 14
9242 23
9243 19
9244 10
9245 13
9246 12
9247 12
9248 17
9249 15
9250 12
9251 17
9252 15
9253 10
9254 13
9255 12
9256 9
9257 18
9258 35
9259 27
9260 18
9261 35
9262 27
9263 11
9264 16
9265 14
9266 13
9267 20
9268 17
9269 13
9270 20
9271 17
9272 11
9273 16
9274 14
9275 12
9276 11
9277 9
9278 18
9279 35
9280 27
9281 18
9282 35
9283 27
9284 11
9285 16
9286 13
9287 20
9288 17
9289 13
9290 20
9291 17
9292 11
9293 16
9294 14
9295 12
9296 11
9297 9
9298 18
9299 35
9300 27
9301 18
9302 35
9303 27
9304 11
9305 16
9306 14
9307 13
9308 20
9309 17
9310 13
9311 17
9312 11
9313 16
9314 14
9315 12
9316 11
9317 14
9318 23
9319 19
9320 14
9321 23
9322 19
9323 10
9324 13
9325 12
9326 12
9327 17
9328 15
9329 12
9330 17
9331 15
9332 13
9333 12
9334 9
9335 18
9336 35
9337 27
9338 18
9339 35
9340 27
9341 11
9342 16
9343 14
9344 13
9345 20
9346 17
9347 13
9348 20
9349 17
9350 11
9351 14
9352 12
9353 11
9354 3
9355 6
9356 15
9357 32
9358 24
9359 15
9360 32
9361 24
9362 8
9363 13
9364 11
9365 10
9366 17
9367 14
9368 10
9369 17
9370 14
9371 8
9372 13
9373 11
9374 9
9375 8
9376 6
9377 15
9378 24
9379 15
9380 32
9381 24
9382 8
9383 13
9384 11
9385 10
9386 17
9387 14
9388 10
9389 14
9390 8
9391 13
9392 11
9393 9
9394 8
9395 11
9396 20
9397 11
9398 20
9399 16
9400 7
9401 10
9402 9
9403 9
9404 14
9405 12
9406 9
9407 14
9408 12
9409 7
9410 10
9411 9
9412 6
9413 32
9414 24
9415 15
9416 32
9417 24
9418 8
9419 13
9420 11
9421 10
9422 17
9423 14
9424 10
9425 17
9426 14
9427 8
9428 13
9429 11
9430 9
9431 8
9432 6
9433 15
9434 32
9435 24
9436 15
9437 32
9438 24
9439 8
9440 13
9441 11
9442 10
9443 17
9444 14
9445 10
9446 17
9447 14
9448 8
9449 13
9450 11
9451 9
9452 8
9453 6
9454 15
9455 32
9456 24
9457 15
9458 32
9459 24
9460 8
9461 13
9462 11
9463 10
9464 14
9465 10
9466 17
9467 14
9468 8
9469 13
9470 11
9471 9
9472 8
9473 11
9474 20
9475 16
9476 11
9477 20
9478 7
9479 9
9480 9
9481 14
9482 12
9483 9
9484 14
9485 12
9486 7
9487 10
9488 9
9489 6
9490 15
9491 32
9492 24
9493 15
9494 32
9495 24
9496 8
9497 13
9498 11
9499 10
9500 17
9501 14
9502 10
9503 17
9504 14
9505 8
9506 13
9507 11
9508 9
9509 8
9510 12
9511 15
9512 24
9513 33
9514 24
9516 33
9517 17
9518 22
9519 20
9520 19
9521 26
9522 23
9523 19
9524 26
9525 23
9526 17
9527 22
9528 20
9529 18
9530 17
9531 15
9532 24
9534 33
9535 24
9537 33
9538 17
9539 22
9540 20
9541 19
9542 26
9543 23
9544 19
9545 26
9546 23
9547 17
9548 22
9549 20
9550 18
9551 17
9552 20
9553 29
9554 25
9555 20
9556 29
9557 25
9558 16
9559 19
9560 18
9561 18
9562 23
9563 21
9564 18
9565 23
9566 21
9567 16
9568 19
9569 18
9570 24
9572 33
9574 33
9575 17
9576 22
9577 20
9578 19
9579 23
9580 19
9581 26
9582 17
9583 20
9584 18
9585 17
9586 15
9587 24
9589 33
9590 24
9592 33
9593 17
9594 22
9595 20
9596 19
9597 26
9598 23
9599 26
9600 23
9601 17
9602 22
9603 18
9604 17
9605 15
9606 24
9608 33
9609 24
9611 33
9612 17
9613 22
9614 20
9615 19
9616 26
9617 23
9618 19
9619 26
9620 23
9621 17
9622 22
9623 20
9624 18
9625 17
9626 20
9627 29
9628 25
9629 20
9630 29
9631 25
9632 16
9633 19
9634 18
9635 18
9636 23
9637 21
9638 23
9639 21
9640 19
9641 18
9642 15
9643 24
9645 33
9646 24
9648 33
9649 17
9650 22
9651 20
9652 19
9653 26
9654 23
9655 19
9656 26
9657 23
9658 17
9659 22
9660 20
9661 18
9662 17
9663 29
9664 32
9671 34
9672 39
9673 37
9674 36
9677 36
9680 34
9681 39
9682 37
9683 35
9684 34
9685 32
9692 34
9693 39
9694 37
9695 36
9698 36
9701 34
9702 39
9703 37
9704 35
9705 34
9706 37
9709 37
9712 33
9713 36
9714 35
9715 35
9717 38
9718 35
9720 33
9721 36
9722 35
9723 32
9730 34
9731 39
9732 37
9733 36
9736 36
9738 34
9739 39
9740 37
9741 35
9742 34
9743 32
9750 34
9751 39
9752 37
9753 36
9756 36
9759 34
9760 39
9761 37
9762 35
9763 34
9764 32
9771 34
9772 39
9773 37
9774 36
9777 36
9780 34
9781 39
9782 35
9783 37
9786 37
9788 33
9789 36
9790 35
9791 35
9793 38
9794 35
9796 38
9797 33
9798 35
9799 32
9805 34
9806 39
9807 37
9808 36
9811 36
9814 34
9815 39
9816 37
9817 35
9818 21
9819 24
9820 33
9823 33
9826 26
9827 31
9828 29
9829 35
9830 32
9831 28
9832 35
9833 32
9834 31
9835 29
9836 27
9837 26
9838 24
9839 33
9842 33
9844 26
9845 31
9846 29
9847 28
9848 35
9849 32
9850 28
9851 35
9852 32
9853 26
9854 31
9855 29
9856 27
9857 26
9858 29
9859 38
9860 34
9861 29
9862 38
9863 25
9864 28
9865 27
9866 27
9867 32
9868 30
9869 27
9870 32
9871 30
9872 25
9873 28
9874 27
9875 24
9876 33
9879 33
9882 26
9883 31
9884 29
9885 28
9886 35
9887 32
9888 28
9889 35
9890 32
9891 26
9892 31
9893 29
9894 27
9895 26
9896 24
9897 33
9900 33
9903 31
9904 29
9905 28
9906 35
9907 32
9908 28
9909 35
9910 32
9911 26
9912 31
9913 29
9914 27
9915 26
9916 24
9917 33
9920 33
9923 26
9924 31
9925 29
9926 28
9927 35
9928 32
9929 28
9930 35
9931 32
9932 26
9933 31
9934 29
9935 27
9936 26
9937 29
9938 38
9939 34
9940 29
9941 38
9942 34
9943 25
9944 28
9945 27
9946 30
9947 27
9948 32
9949 30
9950 25
9951 28
9952 27
9953 24
9954 33
9957 33
9960 26
9961 31
9962 29
9963 28
9964 35
9965 32
9966 28
9967 35
9968 32
9969 26
9970 31
9971 29
9972 27
9973 12
9974 15
9975 24
9977 33
9978 24
9980 33
9981 17
9982 22
9983 20
9984 19
9985 26
9986 23
9987 19
9988 26
9989 23
9990 22
9991 20
9992 18
9993 17
9994 15
9995 24
9997 33
9998 24
10000 33
10001 17
10002 22
10003 19
10004 26
10005 23
10006 19
10007 26
10008 23
10009 17
10010 22
10011 20
10012 18
10013 17
10014 20
10015 29
10016 25
10017 20
10018 29
10019 16
10020 19
10021 18
10022 18
10023 23
10024 21
10025 18
10026 23
10027 21
10028 16
10029 19
10030 18
10031 15
10032 24
10034 33
10035 24
10037 33
10038 17
10039 22
10040 20
10041 19
10042 26
10043 23
10044 19
10045 26
10046 23
10047 17
10048 22
10049 20
10050 18
10051 17
10052 15
10053 24
10055 33
10056 24
10058 33
10059 17
10060 20
10061 19
10062 26
10063 23
10064 19
10065 26
10066 23
10067 17
10068 22
10069 20
10070 18
10071 17
10072 15
10073 24
10075 33
10076 24
10078 33
10079 17
10080 22
10081 20
10082 19
10083 26
10084 23
10085 19
10086 26
10087 23
10088 17
10089 22
10090 20
10091 18
10092 17
10093 20
10094 29
10095 25
10096 20
10097 29
10098 25
10099 16
10100 19
10101 18
10102 18
10103 21
10104 18
10105 23
10106 21
10107 16
10108 19
10109 18
10110 15
10111 24
10113 33
10114 24
10116 33
10117 17
10118 22
10119 20
10120 19
10121 26
10122 23
10123 19
10124 26
10125 23
10126 17
10127 22
10128 20
10129 18
10130 17
10131 29
10132 32
10137 34
10138 39
10139 37
10140 36
10143 36
10146 34
10147 39
10148 35
10149 34
10150 32
10157 34
10158 39
10159 37
10160 36
10163 36
10166 34
10167 39
10168 37
10169 35
10170 34
10171 37
10174 37
10177 33
10178 36
10179 35
10180 35
10182 38
10183 35
10185 38
10186 33
10187 36
10188 35
10189 32
10196 34
10197 39
10198 37
10199 36
10202 36
10205 34
10206 39
10207 37
10208 35
10209 34
10210 32
10217 34
10218 39
10219 37
10220 36
10223 36
10226 34
10227 39
10228 37
10229 35
10230 34
10231 32
10238 34
10239 39
10240 37
10241 36
10244 36
10247 34
10248 39
10249 37
10250 35
10251 34
10252 37
10255 37
10258 33
10259 36
10260 35
10261 35
10262 38
10263 35
10265 38
10266 33
10267 36
10268 35
10269 32
10275 34
10276 39
10277 37
10278 36
10281 36
10284 34
10285 39
10286 37
10287 35
10288 34
10289 21
10290 24
10291 33
10294 33
10297 26
10298 31
10299 29
10300 28
10301 35
10302 32
10303 28
10304 35
10305 32
10306 31
10307 29
10308 27
10309 26
10310 33
10313 33
10316 26
10317 31
10318 29
10319 35
10320 32
10321 28
10322 35
10323 32
10324 29
10325 27
10326 26
10327 38
10328 34
10329 29
10330 38
10331 34
10332 25
10333 28
10334 27
10335 27
10336 32
10337 30
10338 27
10339 32
10340 30
10341 25
10342 28
10343 27
10344 24
10345 33
10348 33
10351 26
10352 31
10353 29
10354 28
10355 35
10356 32
10357 28
10358 35
10359 32
10360 26
10361 31
10362 29
10363 27
10364 26
10365 24
10366 33
10369 33
10371 26
10372 31
10373 29
10374 28
10375 35
10376 32
10377 28
10378 35
10379 32
10380 26
10381 31
10382 29
10383 27
10384 26
10385 24
10386 33
10389 33
10392 26
10393 31
10394 29
10395 28
10396 35
10397 32
10398 28
10399 35
10400 26
10401 31
10402 29
10403 27
10404 26
10405 29
10406 38
10407 29
10408 38
10409 34
10410 25
10411 28
10412 27
10413 27
10414 32
10415 30
10416 27
10417 32
10418 30
10419 25
10420 28
10421 27
10422 24
10423 33
10426 33
10428 26
10429 31
10430 29
10431 28
10432 35
10433 32
10434 28
10435 35
10436 32
10437 26
10438 31
10439 29
10440 27
10441 26
10442 5
10443 8
10444 17
10445 34
10446 26
10447 17
10448 34
10449 26
10450 10
10451 15
10452 13
10453 19
10454 16
10455 12
10456 19
10457 16
10458 10
10459 15
10460 13
10461 11
10462 10
10463 8
10464 17
10465 34
10466 26
10467 17
10468 34
10469 26
10470 10
10471 15
10472 13
10473 12
10474 19
10475 16
10476 19
10477 16
10478 10
10479 15
10480 13
10481 11
10482 10
10483 13
10484 22
10485 18
10486 13
10487 22
10488 18
10489 9
10490 12
10491 11
10492 11
10493 16
10494 11
10495 16
10496 14
10497 9
10498 12
10499 11
10500 8
10501 17
10502 34
10503 26
10504 17
10505 34
10506 26
10507 10
10508 15
10509 13
10510 12
10511 19
10512 16
10513 12
10514 19
10515 16
10516 10
10517 15
10518 13
10519 11
10520 8
10521 17
10522 34
10523 26
10524 17
10525 34
10526 26
10527 10
10528 15
10529 13
10530 12
10531 19
10532 16
10533 12
10534 19
10535 16
10536 10
10537 13
10538 11
10539 10
10540 8
10541 17
10542 34
10543 26
10544 17
10545 34
10546 26
10547 10
10548 15
10549 13
10550 12
10551 19
10552 16
10553 12
10554 19
10555 16
10556 10
10557 15
10558 13
10559 11
10560 10
10561 13
10562 22
10563 18
10564 22
10565 18
10566 9
10567 12
10568 11
10569 11
10570 16
10571 14
10572 11
10573 16
10574 14
10575 9
10576 12
10577 11
10578 8
10579 17
10580 34
10581 26
10582 17
10583 34
10584 26
10585 10
10586 15
10587 13
10588 12
10589 19
10590 16
10591 12
10592 19
10593 16
10594 10
10595 15
10596 13
10597 11
10598 10
10599 10
10600 13
10601 22
10602 39
10603 31
10604 22
10605 39
10606 31
10607 15
10608 20
10609 18
10610 17
10611 24
10612 21
10613 17
10614 24
10615 21
10616 15
10617 20
10618 18
10619 16
10620 15
10621 13
10622 22
10623 39
10624 31
10625 22
10626 39
10627 31
10628 15
10629 20
10630 18
10631 17
10632 24
10633 21
10634 17
10635 24
10636 21
10637 15
10638 20
10639 18
10640 16
10641 15
10642 18
10643 27
10644 23
10645 18
10646 27
10647 23
10648 14
10649 17
10650 16
10651 16
10652 21
10653 19
10654 16
10655 21
10656 19
10657 14
10658 17
10659 16
10660 13
10661 22
10662 39
10663 31
10664 22
10665 39
10666 31
10667 15
10668 20
10669 18
10670 17
10671 24
10672 21
10673 17
10674 24
10675 21
10676 15
10677 20
10678 18
10679 16
10680 15
10681 13
10682 22
10683 39
10684 31
10685 22
10686 39
10687 31
10688 15
10689 20
10690 18
10691 17
10692 24
10693 21
10694 17
10695 24
10696 21
10697 15
10698 20
10699 18
10700 16
10701 15
10702 13
10703 39
10704 31
10705 22
10706 39
10707 31
10708 15
10709 20
10710 18
10711 17
10712 21
10713 17
10714 24
10715 21
10716 20
10717 18
10718 16
10719 15
10720 18
10721 27
10722 23
10723 18
10724 27
10725 23
10726 14
10727 17
10728 16
10729 16
10730 21
10731 19
10732 16
10733 21
10734 19
10735 14
10736 17
10737 16
10738 13
10739 22
10740 39
10741 31
10742 22
10743 39
10744 31
10745 15
10746 20
10747 18
10748 24
10749 21
10750 17
10751 24
10752 21
10753 15
10754 20
10755 18
10756 16
10757 15
10758 11
10759 20
10760 37
10761 29
10762 20
10763 37
10764 29
10765 13
10766 18
10767 16
10768 15
10769 22
10770 19
10771 15
10772 22
10773 19
10774 13
10775 18
10776 16
10777 14
10778 13
10779 11
10780 20
10781 37
10782 29
10783 20
10784 37
10785 29
10786 13
10787 18
10788 16
10789 15
10790 22
10791 19
10792 15
10793 22
10794 19
10795 13
10796 18
10797 16
10798 14
10799 13
10800 16
10801 25
10802 21
10803 16
10804 25
10805 21
10806 12
10807 15
10808 14
10809 14
10810 19
10811 17
10812 14
10813 19
10814 17
10815 12
10816 15
10817 14
10818 11
10819 20
10820 37
10821 29
10822 20
10823 37
10824 29
10825 13
10826 18
10827 16
10828 15
10829 22
10830 19
10831 15
10832 22
10833 19
10834 13
10835 18
10836 16
10837 14
10838 13
10839 11
10840 20
10841 37
10842 29
10843 20
10844 37
10845 29
10846 13
10847 18
10848 16
10849 15
10850 22
10851 19
10852 15
10853 22
10854 19
10855 13
10856 18
10857 16
10858 14
10859 13
10860 11
10861 37
10862 29
10863 20
10864 37
10865 29
10866 13
10867 18
10868 16
10869 15
10870 22
10871 19
10872 15
10873 22
10874 19
10875 13
10876 18
10877 16
10878 14
10879 13
10880 16
10881 21
10882 16
10883 25
10884 21
10885 12
10886 15
10887 14
10888 14
10889 19
10890 17
10891 14
10892 19
10893 17
10894 12
10895 15
10896 14
10897 11
10898 20
10899 37
10900 29
10901 20
10902 37
10903 29
10904 13
10905 18
10906 16
10907 15
10908 22
10909 19
10910 15
10911 22
10912 13
10913 18
10914 16
10915 13
10916 7
10917 10
10918 19
10919 36
10920 28
10921 19
10922 36
10923 28
10924 12
10925 17
10926 15
10927 14
10928 21
10929 18
10930 14
10931 21
10932 18
10933 12
10934 17
10935 15
10936 13
10937 12
10938 19
10939 36
10940 28
10941 19
10942 36
10943 28
10944 12
10945 17
10946 15
10947 14
10948 21
10949 18
10950 14
10951 21
10952 18
10953 12
10954 17
10955 15
10956 13
10957 12
10958 15
10959 24
10960 20
10961 15
10962 24
10963 20
10964 11
10965 14
10966 13
10967 13
10968 18
10969 16
10970 13
10971 18
10972 14
10973 13
10974 10
10975 19
10976 36
10977 28
10978 19
10979 36
10980 28
10981 12
10982 17
10983 15
10984 14
10985 21
10986 18
10987 14
10988 21
10989 18
10990 12
10991 17
10992 15
10993 13
10994 12
10995 10
10996 19
10997 36
10998 28
10999 19
11000 36
11001 28
11002 12
11003 17
11004 15
11005 21
11006 18
11007 14
11008 21
11009 18
11010 17
11011 15
11012 13
11013 12
11014 10
11015 19
11016 36
11017 28
11018 19
11019 36
11020 28
11021 12
11022 17
11023 15
11024 14
11025 21
11026 18
11027 14
11028 21
11029 18
11030 12
11031 17
11032 15
11033 13
11034 12
11035 15
11036 24
11037 20
11038 15
11039 24
11040 20
11041 11
11042 14
11043 13
11044 13
11045 18
11046 16
11047 13
11048 18
11049 16
11050 11
11051 14
11052 13
11053 10
11054 19
11055 36
11056 28
11057 19
11058 36
11059 28
11060 12
11061 17
11062 15
11063 14
11064 21
11065 18
11066 14
11067 21
11068 18
11069 12
11070 17
11071 15
11072 13
11073 12
11074 14
11075 17
11076 26
11078 35
11080 35
11081 19
11082 24
11083 22
11084 21
11085 28
11086 25
11087 21
11088 28
11089 25
11090 19
11091 24
11092 22
11093 20
11094 19
11095 17
11096 26
11098 35
11100 35
11101 19
11102 24
11103 22
11104 21
11105 28
11106 25
11107 21
11108 28
11109 25
11110 19
11111 24
11112 22
11113 20
11114 19
11115 22
11116 31
11117 22
11118 31
11119 27
11120 18
11121 21
11122 20
11123 20
11124 25
11125 23
11126 20
11127 25
11128 23
11129 18
11130 21
11131 20
11132 17
11133 26
11135 35
11136 26
11138 35
11139 19
11140 24
11141 22
11142 21
11143 28
11144 25
11145 21
11146 25
11147 24
11148 22
11149 20
11150 19
11151 17
11152 26
11154 35
11155 26
11157 35
11158 19
11159 24
11160 22
11161 21
11162 28
11163 25
11164 21
11165 28
11166 25
11167 19
11168 24
11169 22
11170 20
11171 19
11172 17
11173 26
11175 35
11176 26
11178 19
11179 24
11180 22
11181 21
11182 28
11183 25
11184 21
11185 28
11186 25
11187 19
11188 24
11189 22
11190 20
11191 19
11192 22
11193 31
11194 27
11195 22
11196 31
11197 27
11198 18
11199 21
11200 20
11201 20
11202 25
11203 23
11204 20
11205 23
11206 18
11207 21
11208 20
11210 35
11211 26
11213 35
11214 19
11215 24
11216 22
11217 21
11218 28
11219 25
11220 21
11221 28
11222 25
11223 19
11224 24
11225 22
11226 20
11227 11
11228 14
11229 23
11231 32
11232 23
11234 32
11235 16
11236 21
11237 19
11238 18
11239 25
11240 22
11241 18
11242 25
11243 22
11244 16
11245 21
11246 19
11247 17
11248 16
11249 14
11250 23
11252 32
11253 23
11255 32
11256 16
11257 21
11258 19
11259 18
11260 25
11261 22
11262 18
11263 25
11264 22
11265 16
11266 21
11267 19
11268 17
11269 16
11270 19
11271 28
11272 24
11273 19
11274 28
11275 24
11276 15
11277 17
11278 17
11279 22
11280 20
11281 17
11282 22
11283 20
11284 15
11285 18
11286 17
11287 14
11288 23
11290 32
11291 23
11293 32
11294 16
11295 21
11296 19
11297 18
11298 25
11299 22
11300 18
11301 25
11302 16
11303 21
11304 19
11305 17
11306 16
11307 14
11308 23
11310 23
11312 32
11313 16
11314 21
11315 19
11316 18
11317 25
11318 22
11319 25
11320 22
11321 16
11322 21
11323 19
11324 17
11325 16
11326 14
11327 23
11329 32
11330 23
11332 32
11333 16
11334 21
11335 19
11336 18
11337 25
11338 22
11339 18
11340 25
11341 22
11342 16
11343 21
11344 19
11345 17
11346 16
11347 19
11348 28
11349 24
11350 19
11351 28
11352 24
11353 15
11354 18
11355 17
11356 22
11357 20
11358 17
11359 22
11360 20
11361 15
11362 17
11363 14
11364 23
11366 32
11367 23
11369 32
11370 21
11371 19
11372 18
11373 25
11374 22
11375 18
11376 25
11377 22
11378 16
11379 21
11380 19
11381 17
11382 16
11383 7
11384 19
11385 36
11386 28
11387 19
11388 36
11389 28
11390 12
11391 17
11392 15
11393 14
11394 21
11395 18
11396 14
11397 21
11398 18
11399 12
11400 17
11401 15
11402 13
11403 12
11404 10
11405 19
11406 36
11407 28
11408 19
11409 36
11410 12
11411 17
11412 15
11413 14
11414 21
11415 18
11416 14
11417 21
11418 18
11419 12
11420 17
11421 15
11422 13
11423 12
11424 15
11425 24
11426 20
11427 15
11428 24
11429 20
11430 11
11431 14
11432 13
11433 13
11434 18
11435 16
11436 13
11437 18
11438 16
11439 11
11440 14
11441 13
11442 10
11443 36
11444 28
11445 19
11446 36
11447 28
11448 12
11449 17
11450 15
11451 14
11452 21
11453 18
11454 14
11455 18
11456 12
11457 17
11458 15
11459 12
11460 10
11461 19
11462 36
11463 28
11464 19
11465 36
11466 28
11467 12
11468 17
11469 15
11470 14
11471 21
11472 18
11473 14
11474 21
11475 18
11476 12
11477 17
11478 15
11479 13
11480 12
11481 10
11482 19
11483 36
11484 28
11485 19
11486 36
11487 28
11488 12
11489 17
11490 15
11491 14
11492 21
11493 18
11494 14
11495 21
11496 18
11497 12
11498 17
11499 15
11500 13
11501 12
11502 15
11503 24
11504 20
11505 15
11506 24
11507 20
11508 11
11509 14
11510 13
11511 13
11512 18
11513 16
11514 18
11515 16
11516 11
11517 14
11518 13
11519 10
11520 19
11521 36
11522 28
11523 19
11524 36
11525 28
11526 12
11527 17
11528 15
11529 14
11530 21
11531 18
11532 14
11533 21
11534 18
11535 12
11536 17
11537 15
11538 13
11539 12
11540 14
11541 17
11542 26
11544 35
11545 26
11547 35
11548 19
11549 24
11550 22
11551 21
11552 28
11553 25
11554 21
11555 28
11556 25
11557 19
11558 24
11559 22
11560 20
11561 19
11562 17
11563 26
11565 35
11566 26
11568 35
11569 19
11570 24
11571 22
11572 21
11573 28
11574 25
11575 21
11576 28
11577 24
11578 20
11579 19
11580 22
11581 31
11582 27
11583 22
11584 31
11585 27
11586 21
11587 20
11588 20
11589 25
11590 23
11591 20
11592 25
11593 23
11594 18
11595 21
11596 17
11597 26
11599 35
11600 26
11602 35
11603 19
11604 24
11605 22
11606 21
11607 28
11608 25
11609 28
11610 25
11611 19
11612 24
11613 22
11614 20
11615 19
11616 17
11617 26
11619 35
11620 26
11622 35
11623 19
11624 24
11625 22
11626 21
11627 28
11628 25
11629 21
11630 28
11631 25
11632 19
11633 24
11634 22
11635 20
11636 19
11637 17
11639 35
11641 35
11642 19
11643 24
11644 22
11645 21
11646 25
11647 28
11648 25
11649 19
11650 24
11651 22
11652 20
11653 19
11654 22
11655 31
11656 27
11657 22
11658 31
11659 27
11660 18
11661 21
11662 20
11663 20
11664 25
11665 23
11666 20
11667 25
11668 23
11669 18
11670 21
11671 20
11672 17
11673 26
11675 26
11677 35
11678 19
11679 24
11680 22
11681 28
11682 25
11683 21
11684 28
11685 25
11686 19
11687 24
11688 22
11689 20
11690 19
11691 11
11692 14
11693 23
11695 32
11696 23
11698 32
11699 16
11700 21
11701 19
11702 18
11703 25
11704 22
11705 18
11706 25
11707 22
11708 16
11709 21
11710 19
11711 17
11712 16
11713 14
11714 23
11716 32
11717 23
11719 32
11720 16
11721 21
11722 19
11723 18
11724 25
11725 22
11726 18
11727 25
11728 22
11729 16
11730 21
11731 19
11732 17
11733 16
11734 19
11735 28
11736 24
11737 28
11738 24
11739 15
11740 18
11741 17
11742 17
11743 20
11744 17
11745 22
11746 20
11747 15
11748 17
11749 14
11750 23
11752 32
11753 23
11755 32
11756 16
11757 21
11758 19
11759 18
11760 25
11761 22
11762 18
11763 25
11764 22
11765 16
11766 21
11767 19
11768 14
11769 23
11771 32
11772 23
11774 32
11775 16
11776 21
11777 19
11778 18
11779 25
11780 22
11781 18
11782 22
11783 16
11784 21
11785 19
11786 17
11787 16
11788 14
11789 23
11791 32
11792 23
11794 32
11795 16
11796 21
11797 19
11798 25
11799 22
11800 18
11801 25
11802 22
11803 16
11804 21
11805 19
11806 17
11807 16
11808 19
11809 28
11810 24
11811 19
11812 28
11813 24
11814 15
11815 18
11816 17
11817 17
11818 22
11819 20
11820 17
11821 22
11822 20
11823 15
11824 18
11825 17
11826 14
11827 23
11829 32
11830 23
11832 32
11833 16
11834 21
11835 19
11836 18
11837 25
11838 22
11839 18
11840 25
11841 22
11842 16
11843 21
11844 19
11845 17
11846 16
11847 5
11848 8
11849 17
11850 34
11851 26
11852 17
11853 34
11854 26
11855 10
11856 15
11857 13
11858 12
11859 19
11860 16
11861 12
11862 19
11863 16
11864 10
11865 15
11866 13
11867 11
11868 10
11869 8
11870 17
11871 34
11872 26
11873 17
11874 34
11875 26
11876 10
11877 15
11878 13
11879 12
11880 19
11881 16
11882 12
11883 19
11884 16
11885 15
11886 11
11887 10
11888 13
11889 22
11890 18
11891 13
11892 22
11893 9
11894 12
11895 11
11896 11
11897 16
11898 14
11899 11
11900 16
11901 14
11902 9
11903 12
11904 11
11905 8
11906 17
11907 34
11908 26
11909 17
11910 34
11911 26
11912 10
11913 15
11914 13
11915 12
11916 19
11917 16
11918 12
11919 19
11920 16
11921 10
11922 13
11923 11
11924 10
11925 8
11926 17
11927 34
11928 26
11929 17
11930 34
11931 26
11932 10
11933 15
11934 13
11935 12
11936 19
11937 16
11938 12
11939 19
11940 16
11941 10
11942 15
11943 13
11944 11
11945 8
11946 17
11947 34
11948 26
11949 34
11950 26
11951 10
11952 15
11953 13
11954 12
11955 19
11956 16
11957 12
11958 19
11959 16
11960 10
11961 15
11962 13
11963 11
11964 10
11965 13
11966 22
11967 18
11968 13
11969 22
11970 18
11971 9
11972 12
11973 11
11974 11
11975 16
11976 14
11977 11
11978 16
11979 14
11980 9
11981 12
11982 11
11983 17
11984 34
11985 26
11986 17
11987 34
11988 26
11989 10
11990 15
11991 13
11992 12
11993 19
11994 16
11995 12
11996 19
11997 16
11998 15
11999 13
12000 11
12001 10
12002 10
12003 13
12004 22
12005 39
12006 31
12007 22
12008 39
12009 31
12010 15
12011 20
12012 18
12013 21
12014 17
12015 24
12016 21
12017 15
12018 18
12019 16
12020 15
12021 13
12022 22
12023 39
12024 31
12025 22
12026 39
12027 31
12028 15
12029 20
12030 18
12031 17
12032 24
12033 21
12034 17
12035 24
12036 21
12037 15
12038 18
12039 16
12040 15
12041 18
12042 23
12043 18
12044 27
12045 23
12046 14
12047 17
12048 16
12049 16
12050 21
12051 19
12052 16
12053 21
12054 19
12055 14
12056 17
12057 16
12058 13
12059 22
12060 39
12061 31
12062 22
12063 39
12064 31
12065 15
12066 20
12067 18
12068 17
12069 24
12070 21
12071 17
12072 24
12073 21
12074 15
12075 20
12076 18
12077 16
12078 15
12079 13
12080 22
12081 39
12082 31
12083 22
12084 39
12085 31
12086 15
12087 20
12088 18
12089 17
12090 24
12091 17
12092 24
12093 21
12094 15
12095 20
12096 18
12097 16
12098 15
12099 13
12100 22
12101 39
12102 31
12103 22
12104 39
12105 31
12106 15
12107 20
12108 18
12109 17
12110 24
12111 21
12112 17
12113 24
12114 21
12115 15
12116 20
12117 18
12118 16
12119 15
12120 18
12121 27
12122 23
12123 18
12124 27
12125 23
12126 14
12127 17
12128 16
12129 16
12130 21
12131 19
12132 16
12133 21
12134 19
12135 14
12136 17
12137 16
12138 13
12139 22
12140 39
12141 22
12142 39
12143 31
12144 15
12145 20
12146 18
12147 17
12148 24
12149 21
12150 17
12151 24
12152 21
12153 15
12154 20
12155 18
12156 16
12157 8
12158 11
12159 20
12160 37
12161 29
12162 20
12163 37
12164 29
12165 13
12166 18
12167 16
12168 15
12169 22
12170 19
12171 22
12172 19
12173 13
12174 18
12175 16
12176 14
12177 13
12178 11
12179 20
12180 37
12181 29
12182 20
12183 37
12184 29
12185 13
12186 18
12187 16
12188 15
12189 22
12190 19
12191 15
12192 22
12193 19
12194 13
12195 18
12196 16
12197 14
12198 13
12199 16
12200 25
12201 21
12202 16
12203 21
12204 12
12205 15
12206 14
12207 14
12208 19
12209 17
12210 14
12211 19
12212 17
12213 12
12214 15
12215 14
12216 11
12217 20
12218 37
12219 29
12220 20
12221 37
12222 29
12223 13
12224 18
12225 16
12226 15
12227 22
12228 19
12229 15
12230 22
12231 19
12232 13
12233 18
12234 16
12235 14
12236 13
12237 11
12238 20
12239 37
12240 29
12241 20
12242 37
12243 29
12244 13
12245 18
12246 16
12247 15
12248 22
12249 19
12250 15
12251 22
12252 19
12253 13
12254 18
12255 16
12256 14
12257 13
12258 11
12259 20
12260 37
12261 29
12262 29
12263 13
12264 18
12265 16
12266 15
12267 22
12268 19
12269 15
12270 22
12271 19
12272 18
12273 16
12274 14
12275 13
12276 16
12277 25
12278 21
12279 16
12280 25
12281 21
12282 12
12283 15
12284 14
12285 14
12286 19
12287 17
12288 14
12289 19
12290 17
12291 12
12292 15
12293 14
12294 11
12295 20
12296 37
12297 29
12298 20
12299 37
12300 29
12301 18
12302 16
12303 15
12304 22
12305 19
12306 15
12307 22
12308 19
12309 13
12310 18
12311 16
12312 14
12313 13
12314 6
12315 18
12316 35
12317 27
12318 18
12319 35
12320 27
12321 11
12322 16
12323 14
12324 13
12325 20
12326 17
12327 13
12328 20
12329 17
12330 11
12331 16
12332 14
12333 12
12334 11
12335 9
12336 18
12337 35
12338 27
12339 18
12340 35
12341 27
12342 11
12343 16
12344 14
12345 20
12346 17
12347 13
12348 20
12349 17
12350 11
12351 16
12352 14
12353 12
12354 11
12355 14
12356 23
12357 19
12358 14
12359 23
12360 10
12361 13
12362 12
12363 17
12364 15
12365 12
12366 17
12367 15
12368 10
12369 13
12370 12
12371 9
12372 18
12373 35
12374 27
12375 18
12376 35
12377 27
12378 11
12379 16
12380 14
12381 13
12382 17
12383 13
12384 20
12385 17
12386 11
12387 16
12388 14
12389 12
12390 11
12391 9
12392 18
12393 35
12394 27
12395 18
12396 35
12397 27
12398 11
12399 16
12400 14
12401 13
12402 20
12403 17
12404 13
12405 20
12406 17
12407 11
12408 16
12409 14
12410 12
12411 11
12412 9
12413 18
12414 35
12415 27
12416 18
12417 35
12418 27
12419 11
12420 16
12421 14
12422 20
12423 17
12424 13
12425 20
12426 17
12427 11
12428 16
12429 14
12430 11
12431 14
12432 23
12433 19
12434 14
12435 23
12436 10
12437 13
12438 12
12439 12
12440 17
12441 15
12442 12
12443 17
12444 15
12445 10
12446 13
12447 12
12448 9
12449 35
12450 27
12451 18
12452 35
12453 27
12454 11
12455 16
12456 14
12457 13
12458 17
12459 13
12460 20
12461 17
12462 11
12463 16
12464 14
12465 12
12466 11
12467 5
12468 8
12469 17
12470 34
12471 26
12472 17
12473 34
12474 26
12475 15
12476 13
12477 12
12478 19
12479 16
12480 12
12481 19
12482 16
12483 10
12484 15
12485 13
12486 11
12487 10
12488 8
12489 17
12490 34
12491 26
12492 17
12493 34
12494 26
12495 10
12496 15
12497 13
12498 12
12499 19
12500 16
12501 12
12502 19
12503 16
12504 10
12505 15
12506 13
12507 11
12508 10
12509 13
12510 22
12511 18
12512 13
12513 22
12514 18
12515 9
12516 12
12517 11
12518 11
12519 16
12520 14
12521 16
12522 14
12523 9
12524 12
12525 11
12526 8
12527 17
12528 34
12529 26
12530 17
12531 34
12532 26
12533 10
12534 15
12535 13
12536 12
12537 19
12538 16
12539 12
12540 19
12541 16
12542 10
12543 15
12544 13
12545 11
12546 10
12547 8
12548 17
12549 34
12550 26
12551 17
12552 34
12553 26
12554 10
12555 15
12556 13
12557 12
12558 19
12559 16
12560 19
12561 16
12562 10
12563 15
12564 13
12565 11
12566 10
12567 8
12568 17
12569 34
12570 26
12571 17
12572 34
12573 26
12574 10
12575 15
12576 13
12577 12
12578 19
12579 16
12580 12
12581 19
12582 16
12583 10
12584 15
12585 13
12586 11
12587 10
12588 13
12589 22
12590 13
12591 22
12592 9
12593 12
12594 11
12595 11
12596 16
12597 14
12598 11
12599 16
12600 14
12601 9
12602 12
12603 11
12604 8
12605 17
12606 34
12607 26
12608 17
12609 34
12610 26
12611 15
12612 13
12613 12
12614 19
12615 16
12616 12
12617 19
12618 16
12619 10
12620 15
12621 13
12622 11
12623 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

1
walk left after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_WALK {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk left after walk twice
--
I_WALK I_WALK I_TURN_LEFT I_WALK

2
turn right and WUG0 around left twice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left twice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

3
WUG0 twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

4
WUG0 left and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

5
turn right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

6
turn opposite right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

7
turn right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

8
turn left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

9
turn opposite left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

10
WUG0 left and turn right I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT

11
WUG0 left thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

12
turn around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

13
WUG0 left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

14
WUG0 around left thrice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

15
WUG0 after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

16
turn around left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

17
WUG0 left thrice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

18
turn right thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

19
WUG0 opposite left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

20
WUG0 right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

21
WUG0 around left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk around left after walk opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK

22
WUG0 left thrice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

23
WUG0 opposite left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

24
WUG0 right and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

25
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

26
turn around right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

27
turn around right twice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

28
turn opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

29
WUG0 opposite right and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

30
WUG0 opposite left and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

31
turn left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

32
WUG0 after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

33
WUG0 left twice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

34
WUG0 opposite right thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

35
WUG0 right thrice and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

36
WUG0 around left twice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

37
WUG0 opposite left twice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

38
WUG0 twice and turn left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

39
WUG0 left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

40
WUG0 right twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

41
WUG0 right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

42
WUG0 around left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

43
WUG0 around right twice and turn left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

44
WUG0 opposite left twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

45
WUG0 opposite right and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

46
WUG0 right thrice after run around left I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run right thrice after run around left
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

47
WUG0 around right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

48
WUG0 opposite right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

49
turn opposite left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

50
turn opposite right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

51
WUG0 around left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

52
WUG0 opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

53
WUG0 and turn left WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left
--
I_JUMP I_TURN_LEFT

54
WUG0 opposite right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

55
WUG0 around right twice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

56
WUG0 around left and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

57
WUG0 around left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

58
turn around left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

59
turn left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

60
turn left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

61
WUG0 left and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

62
WUG0 opposite right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

63
turn opposite right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

64
turn opposite left twice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

65
WUG0 thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

66
turn around left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

67
WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

68
WUG0 opposite right twice and turn left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

69
turn around left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

70
turn right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

71
WUG0 opposite right and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

72
WUG0 twice and WUG0 right WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

73
turn around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

74
WUG0 around right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

75
WUG0 right after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP

76
WUG0 twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

77
WUG0 thrice after WUG0 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump
--
I_JUMP I_JUMP I_JUMP I_JUMP

78
WUG0 around left thrice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

79
WUG0 twice and turn opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

80
WUG0 right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

81
WUG0 opposite right twice and turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

82
turn left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

83
turn right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

84
WUG0 opposite left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

85
WUG0 opposite right twice and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

86
turn around right after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

87
turn opposite left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

88
turn left twice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

89
WUG0 twice and turn around left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

90
walk right twice and WUG0 around right thrice I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
walk right twice and run around right thrice
--
I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

91
WUG0 twice and WUG0 around right twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

92
turn left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

93
WUG0 opposite right thrice and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

94
WUG0 left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

95
WUG0 opposite left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

96
WUG0 around right thrice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

97
WUG0 left thrice and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

98
WUG0 opposite right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

99
turn opposite left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

100
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

101
WUG0 around right and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

102
WUG0 opposite left and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

103
turn left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

104
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

105
turn opposite right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

106
WUG0 around left and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

107
WUG0 left and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

108
WUG0 twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

109
WUG0 around left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

110
WUG0 opposite right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

111
WUG0 right after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

112
turn around left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

113
WUG0 opposite left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

114
WUG0 right twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

115
WUG0 left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

116
WUG0 opposite left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

117
WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

118
WUG0 opposite right thrice and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

119
WUG0 around right after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

120
WUG0 opposite right thrice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

121
walk opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
walk opposite right thrice and run opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

122
turn opposite right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

123
WUG0 around left twice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

124
turn right twice and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

125
turn around left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

126
WUG0 opposite left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

127
turn around left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

128
WUG0 opposite right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

129
WUG0 twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

130
WUG0 left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

131
turn right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

132
WUG0 opposite left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

133
turn left twice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

134
WUG0 opposite left thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

135
turn around left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

136
turn right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

137
WUG0 left thrice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

138
WUG0 right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

139
WUG0 left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

140
WUG0 left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

141
WUG0 left twice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

142
turn right twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

143
WUG0 after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

144
WUG0 around left twice and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

145
turn opposite right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

146
turn opposite right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

147
WUG0 opposite right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

148
turn right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

149
WUG0 around right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

150
WUG0 left thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

151
turn around left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

152
WUG0 around right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

153
WUG0 opposite left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

154
turn around left and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

155
turn around left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

156
turn opposite right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

157
WUG0 left thrice and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

158
turn around right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

159
turn around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

160
WUG0 left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

161
WUG0 left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

162
WUG0 around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

163
WUG0 around left after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

164
turn opposite left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

165
WUG0 and WUG0 left twice WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump left twice
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

166
WUG0 opposite left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

167
WUG0 around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

168
WUG0 opposite left twice and turn opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

169
WUG0 opposite left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

170
WUG0 right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

171
turn around right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

172
WUG0 around right thrice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

173
WUG0 right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

174
WUG0 right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

175
WUG0 left twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

176
WUG0 right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

177
WUG0 opposite left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

178
turn around left and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

179
turn opposite left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

180
WUG0 left twice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

181
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

182
WUG0 left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

183
WUG0 opposite left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

184
WUG0 opposite right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

185
WUG0 around right thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

186
WUG0 right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

187
WUG0 left thrice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

188
WUG0 opposite right and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

189
WUG0 around right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

190
WUG0 around right twice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

191
WUG0 around right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

192
turn opposite left and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

193
WUG0 opposite left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

194
turn opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

195
turn around right after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

196
WUG0 opposite right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

197
WUG0 twice after WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump
--
I_JUMP I_JUMP I_JUMP

198
turn around left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

199
turn opposite right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

200
turn right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT

201
WUG0 after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

202
turn around right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

203
WUG0 left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

204
turn left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

205
turn right twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

206
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

207
turn opposite right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

208
turn left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

209
WUG0 opposite left and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

210
WUG0 opposite left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

211
WUG0 around left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

212
turn left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT

213
WUG0 after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

214
turn opposite right and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

215
WUG0 right and WUG0 left I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

216
WUG0 around right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

217
WUG0 left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

218
WUG0 left and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

219
WUG0 opposite right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

220
WUG0 opposite left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

221
WUG0 right thrice and WUG0 opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

222
turn opposite right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

223
WUG0 opposite right thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

224
WUG0 around left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

225
WUG0 opposite left and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

226
WUG0 right thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

227
WUG0 around left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

228
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

229
WUG0 around right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

230
WUG0 right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

231
WUG0 right and turn left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

232
WUG0 left thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

233
WUG0 around right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

234
WUG0 opposite right and WUG0 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

235
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

236
turn around left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

237
run twice and WUG0 opposite left thrice I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
run twice and jump opposite left thrice
--
I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

238
turn opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

239
turn opposite right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

240
WUG0 opposite left thrice and turn right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

241
WUG0 left thrice and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

242
WUG0 opposite left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

243
WUG0 opposite left and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

244
WUG0 twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

245
WUG0 thrice and WUG0 opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run thrice and run opposite left
--
I_RUN I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

246
WUG0 left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

247
turn opposite left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

248
WUG0 around right thrice and turn left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

249
turn opposite right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

250
WUG0 right thrice and WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

251
WUG0 around left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

252
WUG0 left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

253
WUG0 thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

254
turn right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

255
WUG0 around right twice and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

256
WUG0 and WUG0 right WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump right
--
I_JUMP I_TURN_RIGHT I_JUMP

257
WUG0 right twice and WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

258
WUG0 right thrice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

259
turn left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

260
turn around left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

261
WUG0 opposite right thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

262
turn opposite left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

263
WUG0 left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

264
turn left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

265
turn around left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

266
WUG0 left thrice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

267
turn opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

268
turn right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

269
WUG0 opposite right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

270
turn around right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

271
WUG0 left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

272
turn opposite right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

273
turn around right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

274
WUG0 left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

275
WUG0 right and WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

276
WUG0 right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

277
WUG0 left twice and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

278
turn around right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

279
WUG0 around right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

280
turn left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

281
WUG0 left twice and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

282
WUG0 thrice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

283
turn opposite left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

284
WUG0 opposite right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

285
WUG0 left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

286
WUG0 and turn left twice WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

287
turn around left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

288
turn opposite left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

289
WUG0 opposite left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

290
WUG0 opposite left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

291
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

292
WUG0 around left twice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

293
WUG0 around right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

294
turn opposite right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

295
WUG0 around right twice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

296
WUG0 opposite right and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

297
WUG0 around left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

298
WUG0 opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

299
WUG0 opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

300
WUG0 around right thrice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

301
turn around left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

302
turn opposite left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

303
WUG0 around right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

304
WUG0 right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

305
turn opposite left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

306
turn opposite left twice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

307
WUG0 left twice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

308
turn around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

309
WUG0 left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

310
turn left and WUG0 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump
--
I_TURN_LEFT I_JUMP

311
turn right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

312
turn right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

313
WUG0 around right twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

314
WUG0 opposite left and turn opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

315
WUG0 opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

316
turn opposite right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

317
WUG0 around left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

318
turn opposite left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

319
WUG0 right thrice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

320
WUG0 around right and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

321
WUG0 thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

322
turn around right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

323
WUG0 right thrice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

324
turn right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

325
turn right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

326
WUG0 right and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

327
WUG0 right twice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

328
WUG0 left thrice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

329
turn left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

330
WUG0 opposite right twice and WUG0 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

331
turn left twice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

332
turn opposite left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

333
turn right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

334
turn right and WUG0 thrice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump thrice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

335
WUG0 twice and WUG0 opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

336
turn around left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

337
WUG0 right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

338
WUG0 right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

339
WUG0 right and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

340
WUG0 twice and WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump
--
I_JUMP I_JUMP I_JUMP

341
WUG0 left twice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

342
WUG0 right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

343
WUG0 opposite left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

344
WUG0 left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

345
WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

346
WUG0 twice after WUG0 right I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump right
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

347
turn left twice and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

348
turn around right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

349
turn left and WUG0 around right thrice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

350
turn right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

351
WUG0 opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

352
WUG0 opposite left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

353
WUG0 opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

354
WUG0 after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

355
turn opposite right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

356
WUG0 opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

357
WUG0 opposite right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

358
WUG0 right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

359
WUG0 thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

360
turn around left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

361
turn around right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

362
turn opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

363
WUG0 thrice WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice
--
I_JUMP I_JUMP I_JUMP

364
turn left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

365
WUG0 opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

366
WUG0 left twice and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

367
turn left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

368
turn around right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

369
WUG0 left twice and turn right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

370
WUG0 right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

371
WUG0 left after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

372
run around WUG0 thrice after walk WUG0 twice WUG1 I_WALK WUG1 I_WALK WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run around right thrice after walk right twice
--
I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

373
look and WUG0 thrice I_LOOK WUG1 WUG1 WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
look and walk thrice
--
I_LOOK I_WALK I_WALK I_WALK

374
turn opposite left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

375
WUG0 right after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

376
turn around right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

377
turn opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

378
turn right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

379
turn around left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

380
WUG0 right thrice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

381
WUG0 right twice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

382
WUG0 thrice after WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

383
WUG0 right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

384
WUG0 right thrice and WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

385
