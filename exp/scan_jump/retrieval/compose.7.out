12635
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 13
11 11
12 10
13 17
14 14
15 10
16 17
17 14
18 8
19 13
20 11
21 9
22 8
23 6
24 15
25 32
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 14
38 8
39 11
40 9
41 8
42 11
43 20
44 16
45 11
46 20
47 16
48 10
49 9
50 9
51 14
52 12
53 9
54 14
55 12
56 7
57 10
58 9
59 6
60 15
61 32
62 24
63 15
64 32
65 24
66 8
67 13
68 11
69 10
70 17
71 14
72 10
73 17
74 14
75 8
76 13
77 11
78 9
79 8
80 6
81 15
82 32
83 24
84 15
85 32
86 24
87 8
88 13
89 11
90 10
91 17
92 14
93 10
94 17
95 14
96 8
97 13
98 11
99 9
100 8
101 6
102 15
103 32
104 24
105 15
106 32
107 24
108 8
109 13
110 11
111 10
112 17
113 14
114 10
115 17
116 14
117 8
118 13
119 11
120 9
121 8
122 11
123 20
124 16
125 11
126 20
127 16
128 7
129 10
130 9
131 9
132 14
133 12
134 9
135 14
136 12
137 7
138 10
139 9
140 6
141 15
142 32
143 24
144 15
145 32
146 24
147 8
148 13
149 11
150 10
151 17
152 10
153 17
154 14
155 8
156 13
157 11
158 9
159 8
160 12
161 15
162 24
164 33
165 24
167 33
168 17
169 22
170 20
171 19
172 26
173 23
174 19
175 26
176 23
177 17
178 22
179 20
180 18
181 17
182 15
183 24
185 33
186 24
188 33
189 17
190 22
191 20
192 19
193 26
194 23
195 19
196 26
197 23
198 17
199 22
200 20
201 18
202 17
203 20
204 29
205 25
206 20
207 29
208 25
209 16
210 19
211 18
212 18
213 23
214 18
215 23
216 21
217 16
218 19
219 18
220 15
221 24
223 33
224 24
226 33
227 17
228 22
229 20
230 19
231 26
232 23
233 19
234 26
235 23
236 17
237 22
238 20
239 18
240 17
241 15
242 24
244 33
245 24
247 33
248 17
249 22
250 20
251 19
252 26
253 23
254 19
255 23
256 17
257 22
258 20
259 18
260 17
261 15
262 24
264 33
265 24
267 33
268 17
269 22
270 20
271 19
272 26
273 23
274 19
275 26
276 23
277 17
278 22
279 20
280 18
281 17
282 20
283 29
284 25
285 20
286 29
287 25
288 16
289 19
290 18
291 18
292 23
293 21
294 18
295 23
296 21
297 16
298 19
299 18
300 15
301 24
303 33
304 24
306 33
307 17
308 22
309 19
310 26
311 19
312 26
313 23
314 17
315 22
316 20
317 18
318 17
319 32
326 34
327 39
328 37
329 36
332 36
335 34
336 39
337 37
338 35
339 34
340 32
347 34
348 37
349 36
352 36
355 34
356 39
357 37
358 35
359 34
360 37
363 37
366 36
367 35
368 35
370 38
371 35
373 38
374 36
375 35
376 32
383 39
384 37
385 36
388 36
391 34
392 39
393 37
394 35
395 34
396 32
403 34
404 39
405 37
406 36
409 36
412 34
413 39
414 37
415 35
416 34
417 32
423 34
424 39
425 37
426 36
428 36
431 34
432 39
433 37
434 35
435 34
436 37
439 37
442 33
443 36
444 35
445 35
447 38
448 35
450 38
451 33
452 36
453 35
454 32
460 34
461 39
462 37
463 36
466 36
469 34
470 39
471 37
472 35
473 34
474 21
475 24
478 33
481 26
482 31
483 29
484 28
485 35
486 32
487 28
488 35
489 32
490 26
491 29
492 27
493 26
494 33
497 33
500 26
501 31
502 29
503 28
504 35
505 32
506 28
507 35
508 32
509 26
510 31
511 29
512 27
513 26
514 29
515 38
516 34
517 29
518 38
519 34
520 25
521 28
522 27
523 27
524 32
525 30
526 27
527 32
528 30
529 25
530 28
531 27
532 24
535 33
538 26
539 31
540 29
541 35
542 32
543 28
544 35
545 32
546 26
547 31
548 29
549 27
550 26
551 24
552 33
555 33
558 26
559 31
560 29
561 28
562 35
563 32
564 28
565 35
566 32
567 26
568 31
569 29
570 27
571 26
572 24
573 33
576 33
579 26
580 31
581 29
582 28
583 35
584 32
585 28
586 35
587 32
588 26
589 31
590 29
591 27
592 26
593 29
594 38
595 34
596 29
597 38
598 34
599 25
600 28
601 27
602 32
603 30
604 27
605 32
606 30
607 25
608 27
609 24
610 33
615 26
616 31
617 29
618 28
619 35
620 32
621 35
622 32
623 26
624 31
625 29
626 27
627 12
628 15
629 24
631 33
632 24
634 33
635 17
636 22
637 20
638 19
639 23
640 19
641 26
642 23
643 17
644 22
645 20
646 18
647 17
648 15
649 24
651 33
652 24
654 33
655 17
656 22
657 20
658 19
659 26
660 23
661 19
662 26
663 23
664 17
665 22
666 20
667 18
668 17
669 20
670 29
671 25
672 20
673 29
674 25
675 16
676 19
677 18
678 18
679 23
680 21
681 18
682 23
683 21
684 16
685 19
686 18
687 15
688 24
690 33
691 24
693 33
694 17
695 22
696 20
697 19
698 26
699 23
700 19
701 26
702 23
703 17
704 22
705 20
706 18
707 17
708 24
710 33
711 24
713 33
714 17
715 22
716 20
717 19
718 26
719 23
720 19
721 26
722 23
723 17
724 22
725 20
726 18
727 17
728 15
729 24
731 33
732 24
734 33
735 17
736 22
737 20
738 19
739 26
740 23
741 19
742 26
743 23
744 17
745 22
746 20
747 17
748 20
749 29
750 25
751 20
752 29
753 25
754 16
755 19
756 18
757 18
758 21
759 18
760 23
761 21
762 16
763 19
764 18
765 15
766 24
768 33
769 24
771 33
772 17
773 22
774 20
775 19
776 26
777 23
778 19
779 26
780 23
781 17
782 22
783 18
784 17
785 29
786 32
793 34
794 39
795 37
796 36
799 36
802 34
803 39
804 37
805 34
806 32
813 34
814 39
815 37
816 36
819 36
822 34
823 39
824 37
825 35
826 34
827 37
830 37
833 33
834 36
835 35
836 35
838 38
840 38
841 33
842 36
843 35
844 32
850 34
851 39
852 37
853 36
856 36
859 34
860 39
861 37
862 35
863 34
864 32
871 34
872 39
873 37
874 36
876 36
879 34
880 39
881 37
882 35
883 34
884 32
891 34
892 37
893 36
896 36
898 34
899 39
900 35
901 34
902 37
904 37
907 33
908 36
909 35
910 35
912 38
913 35
915 38
916 33
917 36
918 35
919 32
926 39
927 37
928 36
931 36
934 34
935 39
936 37
937 35
938 34
939 21
940 24
941 33
944 33
947 26
948 31
949 29
950 28
951 35
952 32
953 28
954 32
955 26
956 31
957 29
958 27
959 26
960 24
961 33
964 33
967 31
968 29
969 28
970 35
971 32
972 28
973 35
974 32
975 26
976 31
977 29
978 27
979 26
980 29
981 38
982 34
983 29
984 38
985 34
986 25
987 28
988 27
989 27
990 32
991 32
992 30
993 25
994 28
995 27
996 24
997 33
1000 33
1003 26
1004 31
1005 29
1006 28
1007 35
1008 32
1009 28
1010 35
1011 32
1012 26
1013 31
1014 29
1015 27
1016 26
1017 33
1019 33
1022 26
1023 31
1024 29
1025 28
1026 35
1027 32
1028 28
1029 35
1030 32
1031 26
1032 31
1033 26
1034 24
1035 33
1038 33
1041 26
1042 31
1043 29
1044 28
1045 35
1046 32
1047 28
1048 35
1049 32
1050 26
1051 31
1052 27
1053 26
1054 38
1055 34
1056 29
1057 38
1058 34
1059 25
1060 28
1061 27
1062 27
1063 32
1064 30
1065 27
1066 32
1067 30
1068 25
1069 28
1070 27
1071 24
1072 33
1075 33
1078 26
1079 31
1080 29
1081 28
1082 35
1083 32
1084 28
1085 35
1086 32
1087 26
1088 31
1089 29
1090 27
1091 26
1092 5
1093 8
1094 17
1095 34
1096 26
1097 17
1098 34
1099 26
1100 10
1101 15
1102 13
1103 12
1104 19
1105 16
1106 12
1107 19
1108 16
1109 10
1110 15
1111 13
1112 11
1113 10
1114 8
1115 17
1116 34
1117 26
1118 34
1119 26
1120 10
1121 15
1122 13
1123 12
1124 19
1125 16
1126 12
1127 19
1128 16
1129 10
1130 15
1131 13
1132 11
1133 10
1134 22
1135 18
1136 13
1137 22
1138 18
1139 9
1140 12
1141 11
1142 11
1143 16
1144 14
1145 11
1146 16
1147 14
1148 9
1149 11
1150 8
1151 17
1152 34
1153 26
1154 17
1155 34
1156 26
1157 15
1158 13
1159 12
1160 19
1161 16
1162 12
1163 19
1164 16
1165 10
1166 13
1167 11
1168 10
1169 8
1170 17
1171 26
1172 17
1173 34
1174 26
1175 10
1176 15
1177 13
1178 12
1179 19
1180 16
1181 12
1182 19
1183 16
1184 10
1185 15
1186 13
1187 11
1188 10
1189 8
1190 17
1191 34
1192 17
1193 34
1194 26
1195 10
1196 15
1197 13
1198 12
1199 19
1200 16
1201 12
1202 16
1203 10
1204 15
1205 11
1206 10
1207 13
1208 22
1209 18
1210 13
1211 18
1212 9
1213 12
1214 11
1215 11
1216 16
1217 14
1218 11
1219 16
1220 14
1221 9
1222 12
1223 11
1224 8
1225 17
1226 34
1227 26
1228 17
1229 34
1230 26
1231 15
1232 13
1233 12
1234 19
1235 12
1236 19
1237 16
1238 10
1239 15
1240 13
1241 11
1242 10
1243 10
1244 13
1245 22
1246 39
1247 31
1248 22
1249 39
1250 31
1251 15
1252 20
1253 18
1254 17
1255 24
1256 21
1257 17
1258 24
1259 21
1260 15
1261 20
1262 18
1263 16
1264 15
1265 13
1266 22
1267 39
1268 31
1269 22
1270 39
1271 31
1272 15
1273 20
1274 18
1275 17
1276 24
1277 21
1278 17
1279 24
1280 21
1281 15
1282 20
1283 18
1284 16
1285 15
1286 18
1287 27
1288 23
1289 18
1290 23
1291 14
1292 17
1293 16
1294 16
1295 21
1296 19
1297 16
1298 19
1299 14
1300 17
1301 16
1302 13
1303 22
1304 39
1305 31
1306 22
1307 39
1308 31
1309 15
1310 20
1311 18
1312 17
1313 24
1314 21
1315 17
1316 24
1317 21
1318 15
1319 20
1320 18
1321 15
1322 13
1323 22
1324 39
1325 31
1326 22
1327 39
1328 31
1329 15
1330 20
1331 18
1332 17
1333 24
1334 21
1335 17
1336 24
1337 21
1338 15
1339 20
1340 18
1341 16
1342 15
1343 13
1344 22
1345 39
1346 31
1347 22
1348 39
1349 31
1350 15
1351 20
1352 18
1353 17
1354 24
1355 21
1356 17
1357 24
1358 21
1359 15
1360 20
1361 18
1362 16
1363 15
1364 18
1365 27
1366 23
1367 18
1368 27
1369 23
1370 14
1371 17
1372 16
1373 21
1374 19
1375 16
1376 21
1377 19
1378 14
1379 17
1380 16
1381 13
1382 22
1383 39
1384 31
1385 22
1386 39
1387 31
1388 15
1389 20
1390 18
1391 17
1392 24
1393 21
1394 17
1395 24
1396 21
1397 15
1398 20
1399 18
1400 16
1401 15
1402 8
1403 11
1404 20
1405 37
1406 20
1407 37
1408 29
1409 13
1410 18
1411 16
1412 15
1413 22
1414 19
1415 15
1416 22
1417 19
1418 13
1419 18
1420 16
1421 14
1422 13
1423 11
1424 20
1425 37
1426 29
1427 20
1428 37
1429 29
1430 13
1431 18
1432 16
1433 15
1434 22
1435 19
1436 15
1437 22
1438 19
1439 13
1440 18
1441 16
1442 14
1443 13
1444 16
1445 25
1446 21
1447 16
1448 25
1449 21
1450 12
1451 15
1452 14
1453 14
1454 19
1455 17
1456 14
1457 19
1458 17
1459 12
1460 15
1461 14
1462 11
1463 20
1464 37
1465 29
1466 20
1467 37
1468 29
1469 13
1470 18
1471 16
1472 15
1473 22
1474 19
1475 22
1476 13
1477 18
1478 16
1479 14
1480 13
1481 11
1482 20
1483 37
1484 29
1485 20
1486 37
1487 29
1488 13
1489 18
1490 16
1491 15
1492 22
1493 19
1494 15
1495 22
1496 19
1497 13
1498 18
1499 16
1500 14
1501 13
1502 11
1503 20
1504 37
1505 29
1506 20
1507 37
1508 29
1509 13
1510 18
1511 16
1512 15
1513 22
1514 19
1515 22
1516 19
1517 13
1518 18
1519 16
1520 13
1521 16
1522 25
1523 21
1524 16
1525 25
1526 21
1527 12
1528 15
1529 14
1530 14
1531 19
1532 17
1533 14
1534 19
1535 17
1536 12
1537 15
1538 14
1539 11
1540 20
1541 37
1542 29
1543 20
1544 37
1545 29
1546 13
1547 16
1548 15
1549 22
1550 19
1551 15
1552 22
1553 19
1554 13
1555 18
1556 16
1557 14
1558 13
1559 7
1560 10
1561 19
1562 36
1563 28
1564 19
1565 28
1566 17
1567 15
1568 14
1569 21
1570 18
1571 14
1572 18
1573 12
1574 17
1575 15
1576 13
1577 12
1578 10
1579 19
1580 36
1581 28
1582 19
1583 36
1584 28
1585 12
1586 17
1587 15
1588 14
1589 21
1590 18
1591 14
1592 21
1593 18
1594 12
1595 17
1596 15
1597 12
1598 15
1599 24
1600 20
1601 15
1602 24
1603 20
1604 11
1605 14
1606 13
1607 13
1608 18
1609 16
1610 13
1611 18
1612 16
1613 11
1614 14
1615 13
1616 10
1617 19
1618 36
1619 19
1620 36
1621 12
1622 17
1623 15
1624 14
1625 21
1626 18
1627 14
1628 21
1629 18
1630 12
1631 17
1632 15
1633 13
1634 12
1635 19
1636 36
1637 28
1638 19
1639 36
1640 28
1641 12
1642 17
1643 15
1644 14
1645 21
1646 18
1647 14
1648 21
1649 18
1650 12
1651 17
1652 15
1653 13
1654 12
1655 19
1656 36
1657 28
1658 19
1659 36
1660 28
1661 12
1662 17
1663 15
1664 14
1665 21
1666 18
1667 14
1668 21
1669 18
1670 12
1671 17
1672 15
1673 13
1674 12
1675 15
1676 24
1677 20
1678 15
1679 24
1680 20
1681 11
1682 14
1683 13
1684 13
1685 18
1686 16
1687 13
1688 18
1689 16
1690 11
1691 14
1692 13
1693 10
1694 19
1695 36
1696 28
1697 19
1698 36
1699 28
1700 12
1701 17
1702 15
1703 14
1704 21
1705 18
1706 14
1707 21
1708 18
1709 12
1710 17
1711 15
1712 13
1713 12
1714 14
1715 17
1716 26
1718 35
1719 26
1721 35
1722 19
1723 24
1724 22
1725 21
1726 28
1727 25
1728 28
1729 25
1730 19
1731 24
1732 22
1733 20
1734 19
1735 17
1736 26
1738 35
1739 26
1741 35
1742 19
1743 24
1744 22
1745 21
1746 28
1747 25
1748 21
1749 28
1750 25
1751 19
1752 24
1753 22
1754 20
1755 19
1756 22
1757 31
1758 27
1759 22
1760 31
1761 27
1762 18
1763 21
1764 20
1765 20
1766 25
1767 23
1768 20
1769 25
1770 23
1771 18
1772 21
1773 20
1774 17
1775 26
1777 35
1779 35
1780 19
1781 24
1782 22
1783 21
1784 28
1785 25
1786 21
1787 28
1788 25
1789 19
1790 24
1791 22
1792 20
1793 19
1794 17
1795 26
1797 35
1798 26
1800 35
1801 19
1802 24
1803 22
1804 21
1805 28
1806 25
1807 21
1808 28
1809 25
1810 19
1811 24
1812 22
1813 20
1814 19
1815 17
1816 26
1818 35
1819 26
1821 35
1822 19
1823 24
1824 22
1825 28
1826 25
1827 21
1828 28
1829 25
1830 19
1831 24
1832 22
1833 20
1834 19
1835 31
1836 27
1837 22
1838 31
1839 27
1840 18
1841 21
1842 20
1843 20
1844 25
1845 23
1846 20
1847 25
1848 23
1849 18
1850 21
1851 20
1852 17
1853 26
1855 35
1856 26
1858 35
1859 19
1860 24
1861 22
1862 21
1863 25
1864 28
1865 25
1866 19
1867 24
1868 22
1869 20
1870 19
1871 11
1873 32
1874 23
1876 32
1877 16
1878 21
1879 19
1880 18
1881 25
1882 22
1883 18
1884 25
1885 22
1886 16
1887 21
1888 19
1889 17
1890 16
1891 14
1892 23
1894 32
1895 23
1896 32
1897 16
1898 21
1899 19
1900 18
1901 25
1902 22
1903 18
1904 25
1905 22
1906 16
1907 21
1908 19
1909 17
1910 16
1911 19
1912 28
1913 24
1914 19
1915 28
1916 15
1917 18
1918 17
1919 17
1920 22
1921 20
1922 22
1923 20
1924 15
1925 18
1926 17
1927 14
1928 23
1930 32
1931 23
1933 32
1934 16
1935 21
1936 19
1937 18
1938 25
1939 22
1940 18
1941 25
1942 22
1943 16
1944 21
1945 19
1946 17
1947 16
1948 14
1949 23
1951 32
1952 23
1954 32
1955 16
1956 21
1957 19
1958 18
1959 25
1960 22
1961 18
1962 25
1963 22
1964 16
1965 21
1966 19
1967 17
1968 16
1969 14
1970 23
1972 32
1973 23
1975 16
1976 21
1977 19
1978 18
1979 25
1980 22
1981 18
1982 25
1983 22
1984 16
1985 21
1986 19
1987 17
1988 16
1989 19
1990 28
1991 24
1992 19
1993 28
1994 24
1995 15
1996 18
1997 17
1998 17
1999 22
2000 20
2001 17
2002 22
2003 20
2004 15
2005 18
2006 14
2008 32
2009 23
2010 32
2011 16
2012 21
2013 19
2014 18
2015 25
2016 22
2017 18
2018 25
2019 22
2020 16
2021 21
2022 19
2023 16
2024 7
2025 19
2026 36
2027 28
2028 19
2029 36
2030 28
2031 12
2032 17
2033 15
2034 14
2035 21
2036 18
2037 14
2038 21
2039 18
2040 12
2041 17
2042 15
2043 13
2044 12
2045 10
2046 19
2047 36
2048 28
2049 19
2050 36
2051 28
2052 12
2053 17
2054 15
2055 14
2056 21
2057 18
2058 14
2059 21
2060 18
2061 12
2062 17
2063 15
2064 13
2065 12
2066 15
2067 24
2068 20
2069 15
2070 24
2071 20
2072 11
2073 14
2074 13
2075 13
2076 18
2077 16
2078 13
2079 18
2080 16
2081 11
2082 14
2083 13
2084 10
2085 19
2086 28
2087 19
2088 36
2089 28
2090 12
2091 17
2092 15
2093 14
2094 21
2095 18
2096 14
2097 21
2098 18
2099 12
2100 17
2101 15
2102 13
2103 12
2104 10
2105 19
2106 36
2107 28
2108 19
2109 36
2110 28
2111 12
2112 17
2113 15
2114 14
2115 21
2116 18
2117 14
2118 21
2119 18
2120 12
2121 17
2122 15
2123 13
2124 12
2125 10
2126 19
2127 36
2128 28
2129 19
2130 28
2131 12
2132 17
2133 15
2134 14
2135 21
2136 18
2137 14
2138 21
2139 18
2140 12
2141 17
2142 15
2143 13
2144 12
2145 24
2146 20
2147 15
2148 24
2149 20
2150 11
2151 14
2152 13
2153 13
2154 18
2155 16
2156 13
2157 18
2158 16
2159 11
2160 14
2161 13
2162 10
2163 19
2164 36
2165 19
2166 36
2167 28
2168 12
2169 17
2170 15
2171 14
2172 21
2173 18
2174 14
2175 21
2176 18
2177 12
2178 17
2179 15
2180 13
2181 12
2182 14
2183 17
2184 26
2186 35
2187 26
2189 35
2190 19
2191 24
2192 22
2193 21
2194 28
2195 25
2196 21
2197 25
2198 19
2199 24
2200 22
2201 20
2202 19
2203 17
2204 26
2206 35
2208 35
2209 19
2210 24
2211 22
2212 21
2213 28
2214 25
2215 21
2216 28
2217 25
2218 19
2219 24
2220 22
2221 20
2222 19
2223 22
2224 31
2225 27
2226 22
2227 31
2228 27
2229 18
2230 21
2231 20
2232 25
2233 20
2234 25
2235 23
2236 18
2237 21
2238 20
2239 17
2240 26
2242 35
2243 26
2245 35
2246 19
2247 24
2248 22
2249 21
2250 28
2251 25
2252 21
2253 28
2254 25
2255 24
2256 22
2257 20
2258 19
2259 17
2260 26
2262 35
2263 26
2265 19
2266 24
2267 22
2268 21
2269 28
2270 25
2271 21
2272 28
2273 25
2274 19
2275 24
2276 22
2277 20
2278 19
2279 17
2280 26
2282 35
2283 26
2285 35
2286 19
2287 24
2288 22
2289 21
2290 28
2291 25
2292 21
2293 28
2294 19
2295 24
2296 22
2297 20
2298 19
2299 22
2300 31
2301 27
2302 22
2303 31
2304 27
2305 18
2306 21
2307 20
2308 20
2309 25
2310 23
2311 20
2312 25
2313 23
2314 18
2315 21
2316 20
2317 17
2318 26
2320 35
2321 26
2323 35
2324 19
2325 24
2326 22
2327 21
2328 28
2329 25
2330 21
2331 28
2332 25
2333 19
2334 24
2335 22
2336 20
2337 19
2338 11
2339 14
2340 23
2342 32
2343 23
2345 32
2346 16
2347 21
2348 19
2349 18
2350 25
2351 22
2352 18
2353 25
2354 22
2355 16
2356 21
2357 19
2358 17
2359 16
2360 14
2361 23
2363 32
2364 23
2366 16
2367 18
2368 25
2369 22
2370 25
2371 22
2372 16
2373 21
2374 19
2375 17
2376 16
2377 19
2378 28
2379 24
2380 19
2381 28
2382 24
2383 15
2384 18
2385 17
2386 17
2387 22
2388 20
2389 17
2390 22
2391 20
2392 15
2393 18
2394 17
2395 14
2396 23
2397 32
2398 23
2400 32
2401 16
2402 21
2403 19
2404 18
2405 25
2406 22
2407 18
2408 25
2409 22
2410 16
2411 21
2412 19
2413 17
2414 16
2415 14
2416 23
2418 32
2419 23
2421 32
2422 16
2423 21
2424 19
2425 18
2426 25
2427 22
2428 18
2429 25
2430 22
2431 16
2432 21
2433 19
2434 17
2435 16
2436 14
2437 23
2439 32
2440 23
2442 32
2443 16
2444 21
2445 19
2446 18
2447 25
2448 22
2449 18
2450 25
2451 22
2452 16
2453 21
2454 19
2455 17
2456 16
2457 19
2458 28
2459 24
2460 19
2461 28
2462 24
2463 15
2464 18
2465 17
2466 17
2467 22
2468 20
2469 17
2470 22
2471 20
2472 15
2473 18
2474 17
2475 14
2476 23
2478 32
2479 23
2481 32
2482 16
2483 21
2484 19
2485 18
2486 25
2487 22
2488 18
2489 25
2490 22
2491 16
2492 21
2493 19
2494 17
2495 16
2496 5
2497 8
2498 17
2499 34
2500 26
2501 34
2502 26
2503 10
2504 15
2505 13
2506 12
2507 19
2508 16
2509 12
2510 19
2511 16
2512 10
2513 15
2514 13
2515 11
2516 10
2517 8
2518 17
2519 34
2520 26
2521 17
2522 26
2523 10
2524 15
2525 13
2526 12
2527 19
2528 16
2529 12
2530 19
2531 10
2532 15
2533 13
2534 11
2535 10
2536 13
2537 22
2538 18
2539 13
2540 22
2541 18
2542 9
2543 12
2544 11
2545 11
2546 16
2547 14
2548 11
2549 14
2550 9
2551 12
2552 11
2553 8
2554 17
2555 34
2556 17
2557 34
2558 26
2559 10
2560 15
2561 13
2562 19
2563 16
2564 12
2565 19
2566 16
2567 10
2568 15
2569 13
2570 11
2571 10
2572 8
2573 17
2574 34
2575 26
2576 17
2577 34
2578 26
2579 10
2580 15
2581 13
2582 12
2583 19
2584 16
2585 12
2586 19
2587 16
2588 10
2589 15
2590 13
2591 11
2592 10
2593 8
2594 17
2595 34
2596 26
2597 17
2598 34
2599 26
2600 10
2601 15
2602 13
2603 12
2604 19
2605 16
2606 12
2607 19
2608 16
2609 10
2610 15
2611 13
2612 11
2613 10
2614 13
2615 22
2616 18
2617 13
2618 22
2619 18
2620 9
2621 12
2622 11
2623 11
2624 16
2625 14
2626 11
2627 16
2628 14
2629 9
2630 12
2631 11
2632 17
2633 34
2634 26
2635 17
2636 34
2637 26
2638 10
2639 15
2640 13
2641 12
2642 19
2643 16
2644 12
2645 19
2646 16
2647 10
2648 15
2649 11
2650 10
2651 10
2652 13
2653 22
2654 39
2655 31
2656 22
2657 39
2658 31
2659 15
2660 20
2661 18
2662 17
2663 24
2664 21
2665 17
2666 24
2667 21
2668 15
2669 20
2670 16
2671 15
2672 13
2673 22
2674 39
2675 31
2676 22
2677 39
2678 31
2679 15
2680 20
2681 18
2682 17
2683 24
2684 21
2685 17
2686 24
2687 21
2688 15
2689 20
2690 18
2691 16
2692 15
2693 18
2694 27
2695 23
2696 18
2697 27
2698 23
2699 14
2700 16
2701 16
2702 21
2703 19
2704 16
2705 21
2706 19
2707 14
2708 16
2709 13
2710 22
2711 39
2712 31
2713 22
2714 39
2715 31
2716 15
2717 20
2718 18
2719 17
2720 24
2721 21
2722 17
2723 24
2724 21
2725 15
2726 20
2727 18
2728 16
2729 15
2730 13
2731 22
2732 39
2733 31
2734 22
2735 39
2736 31
2737 15
2738 20
2739 18
2740 17
2741 24
2742 21
2743 17
2744 24
2745 21
2746 20
2747 18
2748 16
2749 15
2750 13
2751 22
2752 39
2753 31
2754 22
2755 39
2756 31
2757 20
2758 18
2759 17
2760 21
2761 17
2762 21
2763 15
2764 20
2765 18
2766 16
2767 15
2768 18
2769 27
2770 23
2771 18
2772 27
2773 23
2774 14
2775 17
2776 16
2777 16
2778 21
2779 19
2780 16
2781 19
2782 14
2783 17
2784 16
2785 13
2786 22
2787 39
2788 31
2789 22
2790 39
2791 31
2792 15
2793 20
2794 18
2795 17
2796 24
2797 21
2798 17
2799 24
2800 21
2801 15
2802 20
2803 18
2804 16
2805 15
2806 8
2807 11
2808 20
2809 37
2810 29
2811 20
2812 37
2813 29
2814 13
2815 18
2816 16
2817 15
2818 22
2819 19
2820 15
2821 22
2822 19
2823 13
2824 18
2825 16
2826 14
2827 13
2828 11
2829 20
2830 37
2831 29
2832 20
2833 37
2834 29
2835 13
2836 18
2837 16
2838 15
2839 22
2840 15
2841 22
2842 19
2843 13
2844 18
2845 16
2846 14
2847 13
2848 16
2849 25
2850 21
2851 16
2852 25
2853 12
2854 15
2855 14
2856 14
2857 19
2858 17
2859 14
2860 19
2861 12
2862 15
2863 14
2864 11
2865 20
2866 37
2867 29
2868 20
2869 37
2870 29
2871 13
2872 18
2873 16
2874 15
2875 22
2876 19
2877 15
2878 22
2879 19
2880 13
2881 18
2882 16
2883 14
2884 13
2885 11
2886 20
2887 37
2888 29
2889 20
2890 37
2891 29
2892 13
2893 18
2894 16
2895 15
2896 22
2897 19
2898 15
2899 22
2900 13
2901 18
2902 16
2903 14
2904 13
2905 11
2906 20
2907 37
2908 29
2909 20
2910 37
2911 29
2912 13
2913 18
2914 16
2915 15
2916 19
2917 15
2918 22
2919 19
2920 13
2921 18
2922 16
2923 14
2924 13
2925 16
2926 25
2927 21
2928 16
2929 25
2930 12
2931 15
2932 14
2933 14
2934 19
2935 17
2936 14
2937 19
2938 17
2939 12
2940 15
2941 14
2942 11
2943 20
2944 37
2945 29
2946 20
2947 37
2948 29
2949 13
2950 18
2951 16
2952 15
2953 22
2954 19
2955 15
2956 22
2957 19
2958 13
2959 18
2960 16
2961 14
2962 6
2963 9
2964 18
2965 35
2966 27
2967 18
2968 35
2969 27
2970 11
2971 16
2972 14
2973 13
2974 20
2975 17
2976 13
2977 20
2978 17
2979 16
2980 14
2981 12
2982 11
2983 9
2984 18
2985 27
2986 18
2987 35
2988 27
2989 11
2990 16
2991 14
2992 13
2993 20
2994 17
2995 13
2996 20
2997 17
2998 16
2999 14
3000 12
3001 11
3002 14
3003 23
3004 19
3005 14
3006 23
3007 19
3008 10
3009 13
3010 12
3011 12
3012 17
3013 15
3014 12
3015 17
3016 15
3017 10
3018 13
3019 12
3020 18
3021 35
3022 27
3023 18
3024 35
3025 27
3026 11
3027 16
3028 14
3029 13
3030 20
3031 17
3032 13
3033 20
3034 17
3035 11
3036 16
3037 14
3038 12
3039 11
3040 9
3041 18
3042 35
3043 27
3044 18
3045 35
3046 27
3047 11
3048 16
3049 14
3050 13
3051 20
3052 17
3053 13
3054 20
3055 17
3056 11
3057 16
3058 14
3059 12
3060 11
3061 9
3062 18
3063 35
3064 27
3065 18
3066 35
3067 27
3068 11
3069 16
3070 14
3071 13
3072 20
3073 17
3074 13
3075 20
3076 17
3077 11
3078 16
3079 14
3080 12
3081 11
3082 14
3083 23
3084 19
3085 14
3086 23
3087 19
3088 10
3089 13
3090 12
3091 12
3092 17
3093 15
3094 12
3095 17
3096 15
3097 10
3098 13
3099 12
3100 9
3101 18
3102 35
3103 27
3104 18
3105 35
3106 27
3107 11
3108 16
3109 14
3110 13
3111 20
3112 17
3113 13
3114 20
3115 17
3116 11
3117 16
3118 14
3119 12
3120 11
3121 5
3122 8
3123 17
3124 34
3125 26
3126 17
3127 34
3128 26
3129 10
3130 15
3131 13
3132 12
3133 19
3134 12
3135 19
3136 16
3137 10
3138 15
3139 13
3140 11
3141 10
3142 8
3143 17
3144 34
3145 26
3146 17
3147 34
3148 26
3149 10
3150 15
3151 12
3152 19
3153 16
3154 12
3155 19
3156 16
3157 10
3158 15
3159 13
3160 11
3161 10
3162 13
3163 22
3164 18
3165 13
3166 22
3167 18
3168 9
3169 12
3170 11
3171 11
3172 16
3173 14
3174 11
3175 16
3176 14
3177 9
3178 12
3179 11
3180 8
3181 17
3182 34
3183 26
3184 17
3185 34
3186 26
3187 10
3188 15
3189 13
3190 12
3191 19
3192 16
3193 12
3194 19
3195 16
3196 10
3197 15
3198 13
3199 11
3200 10
3201 8
3202 17
3203 34
3204 26
3205 17
3206 34
3207 10
3208 15
3209 13
3210 12
3211 19
3212 16
3213 12
3214 19
3215 16
3216 10
3217 15
3218 13
3219 11
3220 10
3221 8
3222 17
3223 34
3224 26
3225 17
3226 34
3227 26
3228 10
3229 15
3230 13
3231 12
3232 19
3233 16
3234 12
3235 19
3236 16
3237 10
3238 15
3239 13
3240 11
3241 10
3242 13
3243 22
3244 18
3245 13
3246 22
3247 18
3248 11
3249 11
3250 16
3251 14
3252 11
3253 16
3254 14
3255 9
3256 12
3257 11
3258 8
3259 17
3260 34
3261 26
3262 17
3263 34
3264 26
3265 10
3266 15
3267 13
3268 12
3269 19
3270 16
3271 12
3272 19
3273 16
3274 10
3275 15
3276 13
3277 11
3278 10
3279 3
3280 6
3281 15
3282 32
3283 24
3284 32
3285 24
3286 8
3287 13
3288 11
3289 10
3290 17
3291 14
3292 10
3293 17
3294 14
3295 8
3296 13
3297 11
3298 9
3299 8
3300 6
3301 15
3302 32
3303 24
3304 15
3305 32
3306 24
3307 13
3308 11
3309 10
3310 17
3311 14
3312 10
3313 17
3314 14
3315 8
3316 13
3317 11
3318 9
3319 11
3320 16
3321 11
3322 16
3323 7
3324 10
3325 9
3326 9
3327 14
3328 12
3329 9
3330 14
3331 12
3332 7
3333 10
3334 9
3335 6
3336 15
3337 32
3338 24
3339 15
3340 32
3341 24
3342 8
3343 13
3344 11
3345 10
3346 17
3347 14
3348 10
3349 17
3350 14
3351 8
3352 13
3353 11
3354 9
3355 8
3356 6
3357 15
3358 32
3359 24
3360 15
3361 32
3362 24
3363 8
3364 13
3365 11
3366 10
3367 17
3368 14
3369 10
3370 17
3371 14
3372 8
3373 13
3374 9
3375 8
3376 6
3377 15
3378 32
3379 24
3380 15
3381 32
3382 8
3383 13
3384 11
3385 10
3386 17
3387 14
3388 17
3389 14
3390 8
3391 13
3392 11
3393 9
3394 8
3395 11
3396 20
3397 16
3398 11
3399 20
3400 16
3401 7
3402 10
3403 9
3404 9
3405 14
3406 12
3407 9
3408 14
3409 12
3410 7
3411 10
3412 9
3413 6
3414 15
3415 32
3416 24
3417 15
3418 32
3419 24
3420 8
3421 13
3422 11
3423 10
3424 17
3425 14
3426 10
3427 17
3428 14
3429 8
3430 13
3431 11
3432 9
3433 8
3434 12
3435 15
3436 24
3438 33
3439 24
3441 33
3442 17
3443 22
3444 20
3445 19
3446 26
3447 23
3448 19
3449 26
3450 23
3451 17
3452 22
3453 20
3454 18
3455 17
3456 24
3458 33
3459 24
3461 33
3462 17
3463 22
3464 19
3465 26
3466 23
3467 19
3468 26
3469 23
3470 17
3471 22
3472 20
3473 18
3474 17
3475 20
3476 29
3477 25
3478 20
3479 29
3480 25
3481 16
3482 19
3483 18
3484 18
3485 23
3486 21
3487 18
3488 23
3489 21
3490 16
3491 19
3492 18
3493 15
3494 24
3496 33
3497 24
3499 33
3500 17
3501 22
3502 20
3503 19
3504 26
3505 23
3506 19
3507 26
3508 23
3509 17
3510 22
3511 20
3512 18
3513 17
3514 15
3515 24
3517 33
3518 24
3520 33
3521 17
3522 22
3523 20
3524 19
3525 26
3526 23
3527 19
3528 26
3529 23
3530 17
3531 22
3532 20
3533 18
3534 17
3535 15
3536 24
3538 33
3539 24
3541 33
3542 17
3543 20
3544 19
3545 26
3546 23
3547 19
3548 26
3549 23
3550 17
3551 22
3552 20
3553 18
3554 17
3555 20
3556 29
3557 25
3558 20
3559 29
3560 25
3561 16
3562 19
3563 18
3564 18
3565 23
3566 21
3567 18
3568 23
3569 21
3570 16
3571 19
3572 18
3573 15
3574 24
3576 33
3577 24
3579 33
3580 22
3581 20
3582 19
3583 26
3584 23
3585 19
3586 26
3587 23
3588 17
3589 22
3590 20
3591 18
3592 17
3593 29
3594 32
3601 34
3602 39
3603 37
3604 36
3607 36
3610 34
3611 39
3612 37
3613 35
3614 34
3615 32
3622 34
3623 39
3624 37
3625 36
3628 36
3631 34
3632 39
3633 37
3634 35
3635 34
3636 37
3639 37
3642 33
3643 36
3644 35
3645 35
3647 38
3648 35
3650 38
3651 33
3652 36
3653 35
3654 32
3661 34
3662 39
3663 37
3664 36
3667 36
3669 39
3670 35
3671 34
3672 32
3679 34
3680 39
3681 37
3682 36
3685 36
3688 34
3689 39
3690 37
3691 35
3692 34
3693 32
3700 34
3701 39
3702 37
3703 36
3706 36
3709 34
3710 39
3711 37
3712 35
3713 34
3714 37
3717 37
3720 33
3721 36
3722 35
3723 35
3725 38
3726 35
3728 38
3729 33
3730 36
3731 35
3732 32
3738 34
3739 39
3740 37
3741 36
3744 36
3747 34
3748 39
3749 37
3750 35
3751 34
3752 21
3753 24
3754 33
3757 33
3760 26
3761 31
3762 29
3763 28
3764 35
3765 32
3766 28
3767 35
3768 32
3769 26
3770 31
3771 27
3772 26
3773 24
3774 33
3777 33
3780 26
3781 31
3782 29
3783 28
3784 35
3785 32
3786 28
3787 35
3788 32
3789 26
3790 31
3791 29
3792 27
3793 26
3794 29
3795 38
3796 34
3797 29
3798 38
3799 34
3800 25
3801 28
3802 27
3803 27
3804 32
3805 30
3806 27
3807 32
3808 30
3809 25
3810 28
3811 27
3812 24
3813 33
3816 33
3818 31
3819 29
3820 28
3821 35
3822 32
3823 28
3824 35
3825 32
3826 26
3827 31
3828 29
3829 26
3830 24
3831 33
3834 33
3837 26
3838 31
3839 28
3840 35
3841 32
3842 28
3843 35
3844 32
3845 26
3846 29
3847 27
3848 26
3849 24
3850 33
3853 33
3856 26
3857 31
3858 29
3859 28
3860 35
3861 32
3862 28
3863 35
3864 32
3865 26
3866 31
3867 29
3868 27
3869 26
3870 29
3871 38
3872 34
3873 29
3874 34
3875 25
3876 27
3877 27
3878 32
3879 30
3880 27
3881 32
3882 30
3883 25
3884 28
3885 27
3886 24
3887 33
3890 33
3893 26
3894 29
3895 28
3896 35
3897 32
3898 28
3899 35
3900 32
3901 26
3902 31
3903 27
3904 26
3905 12
3906 15
3907 24
3909 33
3910 24
3912 33
3913 17
3914 22
3915 20
3916 19
3917 26
3918 23
3919 19
3920 26
3921 23
3922 17
3923 22
3924 20
3925 18
3926 17
3927 24
3929 33
3930 24
3932 33
3933 17
3934 22
3935 20
3936 19
3937 26
3938 23
3939 19
3940 26
3941 23
3942 17
3943 22
3944 20
3945 18
3946 17
3947 20
3948 29
3949 25
3950 20
3951 25
3952 16
3953 19
3954 18
3955 18
3956 23
3957 21
3958 18
3959 23
3960 21
3961 16
3962 19
3963 18
3964 24
3966 33
3967 24
3969 33
3970 17
3971 22
3972 20
3973 19
3974 26
3975 23
3976 19
3977 26
3978 23
3979 17
3980 22
3981 20
3982 18
3983 17
3984 15
3985 24
3987 33
3988 24
3990 33
3991 17
3992 22
3993 20
3994 19
3995 26
3996 23
3997 19
3998 26
3999 23
4000 17
4001 22
4002 20
4003 18
4004 17
4005 15
4006 24
4008 33
4009 24
4010 17
4011 22
4012 20
4013 19
4014 26
4015 23
4016 19
4017 26
4018 23
4019 17
4020 22
4021 20
4022 18
4023 17
4024 20
4025 29
4026 25
4027 20
4028 29
4029 25
4030 16
4031 19
4032 18
4033 18
4034 23
4035 21
4036 18
4037 23
4038 16
4039 19
4040 18
4041 15
4042 24
4044 33
4045 24
4047 33
4048 17
4049 22
4050 20
4051 19
4052 26
4053 23
4054 19
4055 26
4056 23
4057 17
4058 22
4059 20
4060 18
4061 17
4062 29
4063 32
4070 34
4071 39
4072 37
4073 36
4076 36
4079 34
4080 39
4081 37
4082 35
4083 34
4084 32
4090 34
4091 39
4092 37
4093 36
4098 34
4099 39
4100 37
4101 35
4102 34
4107 33
4108 35
4109 35
4111 38
4112 35
4114 38
4115 33
4116 36
4117 35
4118 32
4125 34
4126 39
4127 37
4130 36
4132 34
4133 39
4134 37
4135 35
4136 34
4137 32
4144 34
4145 39
4146 37
4147 36
4150 36
4153 34
4154 39
4155 37
4156 35
4157 34
4158 32
4164 34
4165 39
4166 37
4167 36
4170 36
4173 34
4174 37
4175 35
4176 34
4177 37
4179 37
4182 33
4183 36
4184 35
4185 35
4187 38
4188 35
4190 38
4191 33
4192 36
4193 35
4194 32
4201 34
4202 39
4203 37
4204 36
4207 36
4209 34
4210 39
4211 37
4212 34
4213 21
4214 24
4217 33
4220 31
4221 29
4222 28
4223 35
4224 32
4225 28
4226 35
4227 32
4228 26
4229 31
4230 29
4231 27
4232 26
4233 33
4236 33
4239 26
4240 31
4241 29
4242 28
4243 35
4244 32
4245 28
4246 35
4247 32
4248 26
4249 31
4250 29
4251 27
4252 26
4253 29
4254 38
4255 34
4256 29
4257 38
4258 34
4259 25
4260 28
4261 27
4262 27
4263 32
4264 30
4265 27
4266 32
4267 30
4268 25
4269 28
4270 27
4271 24
4272 33
4275 33
4278 26
4279 31
4280 29
4281 28
4282 35
4283 32
4284 28
4285 35
4286 32
4287 26
4288 31
4289 29
4290 27
4291 26
4292 24
4293 33
4296 33
4299 26
4300 31
4301 29
4302 28
4303 35
4304 32
4305 28
4306 35
4307 32
4308 26
4309 31
4310 29
4311 27
4312 26
4313 24
4314 33
4319 26
4320 31
4321 29
4322 28
4323 35
4324 32
4325 28
4326 35
4327 32
4328 26
4329 31
4330 29
4331 27
4332 26
4333 29
4334 38
4335 34
4336 29
4337 38
4338 34
4339 25
4340 28
4341 27
4342 27
4343 30
4344 27
4345 32
4346 30
4347 25
4348 28
4349 27
4350 24
4351 33
4354 33
4357 26
4358 31
4359 29
4360 28
4361 35
4362 32
4363 28
4364 35
4365 32
4366 26
4367 31
4368 29
4369 27
4370 26
4371 5
4372 8
4373 17
4374 34
4375 17
4376 34
4377 26
4378 10
4379 15
4380 13
4381 12
4382 19
4383 16
4384 12
4385 19
4386 16
4387 10
4388 15
4389 13
4390 11
4391 10
4392 8
4393 17
4394 34
4395 26
4396 17
4397 34
4398 26
4399 10
4400 15
4401 13
4402 12
4403 19
4404 16
4405 12
4406 19
4407 16
4408 10
4409 13
4410 11
4411 10
4412 13
4413 22
4414 18
4415 13
4416 22
4417 18
4418 9
4419 12
4420 11
4421 11
4422 14
4423 11
4424 16
4425 14
4426 9
4427 12
4428 11
4429 8
4430 17
4431 26
4432 17
4433 34
4434 26
4435 10
4436 15
4437 13
4438 12
4439 19
4440 16
4441 12
4442 19
4443 16
4444 10
4445 15
4446 13
4447 11
4448 10
4449 8
4450 17
4451 34
4452 26
4453 17
4454 34
4455 26
4456 10
4457 15
4458 13
4459 12
4460 19
4461 16
4462 12
4463 19
4464 10
4465 15
4466 13
4467 11
4468 10
4469 8
4470 17
4471 34
4472 26
4473 17
4474 34
4475 26
4476 10
4477 15
4478 13
4479 12
4480 19
4481 16
4482 12
4483 19
4484 16
4485 10
4486 15
4487 13
4488 11
4489 10
4490 13
4491 22
4492 18
4493 13
4494 22
4495 18
4496 9
4497 12
4498 11
4499 11
4500 16
4501 14
4502 16
4503 14
4504 9
4505 12
4506 11
4507 8
4508 17
4509 34
4510 26
4511 17
4512 34
4513 26
4514 10
4515 15
4516 13
4517 12
4518 19
4519 16
4520 12
4521 19
4522 16
4523 10
4524 15
4525 13
4526 11
4527 10
4528 10
4529 13
4530 22
4531 39
4532 31
4533 22
4534 39
4535 31
4536 15
4537 20
4538 18
4539 17
4540 24
4541 21
4542 17
4543 24
4544 21
4545 15
4546 20
4547 18
4548 16
4549 15
4550 13
4551 22
4552 39
4553 31
4554 22
4555 39
4556 31
4557 15
4558 20
4559 18
4560 17
4561 24
4562 17
4563 24
4564 21
4565 15
4566 20
4567 18
4568 16
4569 15
4570 18
4571 27
4572 23
4573 18
4574 23
4575 14
4576 17
4577 16
4578 16
4579 21
4580 19
4581 16
4582 21
4583 19
4584 14
4585 17
4586 16
4587 13
4588 22
4589 39
4590 31
4591 22
4592 39
4593 31
4594 20
4595 18
4596 17
4597 24
4598 21
4599 17
4600 24
4601 21
4602 15
4603 20
4604 18
4605 16
4606 15
4607 13
4608 22
4609 39
4610 31
4611 22
4612 39
4613 31
4614 15
4615 20
4616 18
4617 17
4618 24
4619 21
4620 17
4621 24
4622 21
4623 15
4624 20
4625 18
4626 16
4627 15
4628 13
4629 39
4630 22
4631 39
4632 31
4633 15
4634 20
4635 18
4636 17
4637 24
4638 21
4639 17
4640 24
4641 21
4642 15
4643 20
4644 18
4645 16
4646 15
4647 18
4648 27
4649 23
4650 18
4651 27
4652 23
4653 14
4654 17
4655 16
4656 21
4657 19
4658 16
4659 21
4660 19
4661 14
4662 17
4663 16
4664 13
4665 22
4666 39
4667 31
4668 22
4669 39
4670 31
4671 15
4672 20
4673 18
4674 17
4675 24
4676 17
4677 24
4678 21
4679 15
4680 20
4681 18
4682 16
4683 15
4684 8
4685 11
4686 20
4687 37
4688 29
4689 20
4690 37
4691 29
4692 13
4693 16
4694 15
4695 22
4696 19
4697 15
4698 22
4699 19
4700 13
4701 18
4702 16
4703 14
4704 13
4705 11
4706 20
4707 37
4708 29
4709 37
4710 29
4711 13
4712 18
4713 16
4714 15
4715 22
4716 19
4717 15
4718 22
4719 19
4720 13
4721 18
4722 16
4723 14
4724 13
4725 16
4726 25
4727 21
4728 16
4729 25
4730 21
4731 15
4732 14
4733 14
4734 19
4735 17
4736 14
4737 19
4738 17
4739 12
4740 15
4741 14
4742 11
4743 20
4744 37
4745 29
4746 20
4747 37
4748 29
4749 18
4750 16
4751 15
4752 22
4753 19
4754 22
4755 19
4756 13
4757 18
4758 16
4759 14
4760 13
4761 11
4762 20
4763 37
4764 29
4765 20
4766 37
4767 29
4768 13
4769 16
4770 15
4771 22
4772 15
4773 19
4774 13
4775 18
4776 16
4777 14
4778 13
4779 11
4780 20
4781 37
4782 29
4783 20
4784 37
4785 29
4786 13
4787 18
4788 16
4789 15
4790 22
4791 19
4792 15
4793 22
4794 19
4795 13
4796 18
4797 16
4798 14
4799 13
4800 16
4801 25
4802 21
4803 16
4804 25
4805 21
4806 12
4807 15
4808 14
4809 14
4810 19
4811 17
4812 14
4813 19
4814 17
4815 12
4816 15
4817 14
4818 11
4819 37
4820 29
4821 20
4822 37
4823 29
4824 13
4825 16
4826 15
4827 22
4828 19
4829 15
4830 22
4831 19
4832 13
4833 18
4834 14
4835 13
4836 7
4837 10
4838 19
4839 36
4840 28
4841 19
4842 36
4843 28
4844 12
4845 17
4846 15
4847 14
4848 21
4849 18
4850 14
4851 21
4852 18
4853 12
4854 17
4855 15
4856 13
4857 12
4858 10
4859 19
4860 36
4861 28
4862 19
4863 36
4864 28
4865 17
4866 15
4867 14
4868 21
4869 18
4870 14
4871 21
4872 18
4873 12
4874 17
4875 15
4876 13
4877 12
4878 15
4879 24
4880 20
4881 15
4882 24
4883 20
4884 14
4885 13
4886 13
4887 18
4888 16
4889 13
4890 18
4891 16
4892 11
4893 14
4894 13
4895 10
4896 19
4897 36
4898 28
4899 19
4900 36
4901 28
4902 12
4903 17
4904 15
4905 14
4906 21
4907 18
4908 14
4909 21
4910 18
4911 12
4912 17
4913 15
4914 13
4915 12
4916 10
4917 36
4918 28
4919 36
4920 28
4921 12
4922 17
4923 15
4924 14
4925 21
4926 18
4927 14
4928 21
4929 18
4930 12
4931 17
4932 15
4933 13
4934 12
4935 10
4936 19
4937 36
4938 28
4939 19
4940 36
4941 28
4942 12
4943 17
4944 15
4945 14
4946 21
4947 18
4948 14
4949 21
4950 18
4951 12
4952 17
4953 15
4954 13
4955 12
4956 15
4957 24
4958 20
4959 15
4960 24
4961 20
4962 11
4963 14
4964 13
4965 13
4966 18
4967 16
4968 13
4969 18
4970 16
4971 11
4972 14
4973 13
4974 10
4975 19
4976 36
4977 28
4978 19
4979 36
4980 28
4981 12
4982 17
4983 15
4984 14
4985 21
4986 18
4987 21
4988 18
4989 12
4990 17
4991 13
4992 12
4993 14
4994 17
4995 26
4997 35
4998 26
5000 35
5001 19
5002 24
5003 22
5004 21
5005 28
5006 25
5007 21
5008 28
5009 25
5010 19
5011 24
5012 22
5013 20
5014 19
5015 17
5016 26
5018 35
5019 26
5020 35
5021 19
5022 24
5023 22
5024 21
5025 28
5026 25
5027 21
5028 28
5029 25
5030 19
5031 24
5032 22
5033 20
5034 19
5035 22
5036 31
5037 27
5038 22
5039 31
5040 27
5041 18
5042 21
5043 20
5044 20
5045 25
5046 23
5047 20
5048 25
5049 23
5050 18
5051 21
5052 20
5053 17
5054 26
5056 35
5057 26
5059 35
5060 19
5061 24
5062 22
5063 21
5064 28
5065 25
5066 21
5067 28
5068 25
5069 19
5070 24
5071 22
5072 20
5073 19
5074 17
5075 26
5077 35
5078 26
5080 35
5081 19
5082 24
5083 22
5084 21
5085 28
5086 25
5087 21
5088 28
5089 25
5090 19
5091 24
5092 22
5093 20
5094 19
5095 17
5096 26
5098 35
5099 26
5101 35
5102 19
5103 24
5104 22
5105 21
5106 28
5107 25
5108 21
5109 28
5110 25
5111 19
5112 24
5113 22
5114 20
5115 19
5116 22
5117 31
5118 27
5119 22
5120 31
5121 27
5122 18
5123 21
5124 20
5125 20
5126 25
5127 23
5128 20
5129 25
5130 23
5131 18
5132 21
5133 20
5134 17
5135 26
5137 35
5138 26
5140 35
5141 19
5142 24
5143 22
5144 21
5145 28
5146 25
5147 21
5148 28
5149 25
5150 19
5151 24
5152 22
5153 20
5154 19
5155 11
5156 14
5157 23
5159 32
5161 32
5162 16
5163 21
5164 19
5165 18
5166 25
5167 22
5168 18
5169 25
5170 22
5171 16
5172 21
5173 19
5174 14
5176 32
5177 23
5179 32
5180 16
5181 21
5182 19
5183 18
5184 25
5185 22
5186 25
5187 22
5188 16
5189 21
5190 17
5191 16
5192 28
5193 24
5194 19
5195 28
5196 15
5197 18
5198 17
5199 17
5200 22
5201 20
5202 17
5203 22
5204 20
5205 15
5206 18
5207 17
5208 14
5209 23
5211 32
5212 23
5214 32
5215 16
5216 21
5217 19
5218 18
5219 25
5220 22
5221 18
5222 25
5223 22
5224 16
5225 21
5226 19
5227 17
5228 16
5229 14
5230 23
5232 32
5233 23
5235 32
5236 16
5237 21
5238 19
5239 18
5240 25
5241 22
5242 18
5243 25
5244 22
5245 16
5246 21
5247 19
5248 17
5249 16
5250 14
5251 23
5253 32
5254 23
5256 32
5257 16
5258 21
5259 19
5260 25
5261 22
5262 18
5263 25
5264 22
5265 16
5266 21
5267 19
5268 17
5269 16
5270 19
5271 28
5272 24
5273 19
5274 28
5275 15
5276 18
5277 17
5278 17
5279 22
5280 20
5281 17
5282 22
5283 20
5284 15
5285 18
5286 23
5288 32
5289 23
5291 32
5292 16
5293 21
5294 19
5295 18
5296 25
5297 22
5298 18
5299 25
5300 22
5301 16
5302 21
5303 19
5304 17
5305 16
5306 7
5307 10
5308 19
5309 36
5310 28
5311 19
5312 36
5313 28
5314 12
5315 17
5316 15
5317 14
5318 21
5319 18
5320 14
5321 21
5322 18
5323 12
5324 17
5325 15
5326 13
5327 12
5328 10
5329 19
5330 28
5331 19
5332 36
5333 28
5334 12
5335 17
5336 15
5337 14
5338 21
5339 18
5340 14
5341 21
5342 18
5343 12
5344 17
5345 15
5346 13
5347 12
5348 15
5349 24
5350 20
5351 15
5352 24
5353 20
5354 11
5355 14
5356 13
5357 13
5358 18
5359 16
5360 13
5361 18
5362 16
5363 11
5364 14
5365 13
5366 10
5367 19
5368 28
5369 19
5370 36
5371 28
5372 12
5373 17
5374 15
5375 14
5376 21
5377 18
5378 14
5379 21
5380 18
5381 17
5382 15
5383 13
5384 12
5385 10
5386 19
5387 36
5388 28
5389 19
5390 36
5391 28
5392 12
5393 17
5394 15
5395 14
5396 21
5397 18
5398 14
5399 21
5400 18
5401 12
5402 17
5403 15
5404 13
5405 12
5406 10
5407 19
5408 36
5409 28
5410 19
5411 36
5412 28
5413 12
5414 17
5415 14
5416 21
5417 18
5418 14
5419 21
5420 18
5421 12
5422 17
5423 15
5424 13
5425 12
5426 15
5427 24
5428 20
5429 15
5430 24
5431 20
5432 11
5433 14
5434 13
5435 13
5436 18
5437 16
5438 13
5439 18
5440 16
5441 11
5442 14
5443 13
5444 10
5445 19
5446 36
5447 28
5448 19
5449 36
5450 28
5451 12
5452 17
5453 15
5454 14
5455 21
5456 18
5457 14
5458 21
5459 18
5460 12
5461 17
5462 15
5463 13
5464 12
5465 14
5466 17
5467 26
5469 35
5470 26
5472 35
5473 24
5474 22
5475 21
5476 28
5477 25
5478 21
5479 28
5480 25
5481 19
5482 24
5483 22
5484 20
5485 19
5486 17
5487 26
5489 35
5490 26
5492 35
5493 19
5494 24
5495 22
5496 21
5497 28
5498 25
5499 21
5500 28
5501 25
5502 19
5503 24
5504 22
5505 20
5506 19
5507 22
5508 31
5509 27
5510 22
5511 31
5512 27
5513 18
5514 21
5515 20
5516 20
5517 25
5518 23
5519 20
5520 25
5521 23
5522 18
5523 21
5524 20
5525 17
5526 26
5528 35
5529 26
5531 35
5532 19
5533 24
5534 22
5535 21
5536 28
5537 25
5538 21
5539 28
5540 25
5541 19
5542 24
5543 22
5544 20
5545 19
5546 17
5547 26
5549 35
5550 26
5552 35
5553 19
5554 24
5555 22
5556 21
5557 28
5558 25
5559 21
5560 28
5561 25
5562 19
5563 24
5564 22
5565 20
5566 19
5567 17
5568 26
5570 35
5571 26
5573 35
5574 19
5575 22
5576 21
5577 28
5578 25
5579 21
5580 28
5581 25
5582 24
5583 22
5584 20
5585 19
5586 22
5587 31
5588 27
5589 22
5590 31
5591 27
5592 18
5593 21
5594 20
5595 20
5596 25
5597 23
5598 25
5599 23
5600 18
5601 21
5602 20
5603 17
5604 26
5606 35
5607 26
5609 35
5610 19
5611 24
5612 22
5613 21
5614 28
5615 25
5616 21
5617 28
5618 25
5619 19
5620 24
5621 22
5622 20
5623 19
5624 11
5625 14
5626 23
5628 32
5629 23
5631 32
5632 16
5633 21
5634 19
5635 18
5636 25
5637 22
5638 22
5639 16
5640 21
5641 19
5642 17
5643 16
5644 23
5646 32
5647 23
5649 32
5650 16
5651 21
5652 19
5653 18
5654 25
5655 22
5656 18
5657 25
5658 22
5659 16
5660 19
5661 17
5662 19
5663 24
5664 19
5665 28
5666 24
5667 15
5668 18
5669 17
5670 17
5671 22
5672 20
5673 17
5674 22
5675 20
5676 18
5677 17
5678 14
5679 23
5681 32
5682 23
5684 32
5685 16
5686 21
5687 19
5688 18
5689 22
5690 18
5691 25
5692 22
5693 16
5694 21
5695 19
5696 17
5697 16
5698 14
5700 32
5701 23
5703 32
5704 16
5705 21
5706 19
5707 18
5708 25
5709 22
5710 18
5711 25
5712 22
5713 16
5714 21
5715 19
5716 17
5717 16
5718 14
5720 32
5722 32
5723 16
5724 21
5725 19
5726 18
5727 25
5728 22
5729 18
5730 25
5731 22
5732 16
5733 21
5734 19
5735 16
5736 19
5737 28
5738 24
5739 19
5740 28
5741 24
5742 15
5743 18
5744 17
5745 17
5746 22
5747 20
5748 17
5749 22
5750 20
5751 15
5752 18
5753 17
5754 14
5755 23
5757 32
5758 23
5760 32
5761 16
5762 21
5763 19
5764 18
5765 25
5766 22
5767 18
5768 25
5769 22
5770 16
5771 21
5772 19
5773 16
5774 5
5775 8
5776 17
5777 34
5778 26
5779 17
5780 34
5781 26
5782 10
5783 15
5784 12
5785 19
5786 19
5787 16
5788 10
5789 15
5790 13
5791 11
5792 10
5793 8
5794 17
5795 34
5796 26
5797 17
5798 34
5799 26
5800 10
5801 15
5802 13
5803 12
5804 19
5805 16
5806 12
5807 19
5808 16
5809 15
5810 13
5811 11
5812 10
5813 13
5814 22
5815 13
5816 18
5817 9
5818 12
5819 11
5820 11
5821 16
5822 14
5823 11
5824 16
5825 9
5826 12
5827 11
5828 8
5829 17
5830 34
5831 26
5832 17
5833 34
5834 26
5835 10
5836 15
5837 13
5838 19
5839 16
5840 12
5841 19
5842 16
5843 15
5844 13
5845 11
5846 10
5847 8
5848 17
5849 34
5850 26
5851 17
5852 34
5853 26
5854 10
5855 15
5856 13
5857 12
5858 19
5859 12
5860 19
5861 16
5862 10
5863 15
5864 11
5865 10
5866 8
5867 17
5868 34
5869 26
5870 17
5871 34
5872 26
5873 10
5874 15
5875 13
5876 12
5877 19
5878 16
5879 12
5880 19
5881 16
5882 10
5883 15
5884 13
5885 11
5886 10
5887 13
5888 22
5889 18
5890 13
5891 22
5892 18
5893 9
5894 12
5895 11
5896 11
5897 16
5898 14
5899 11
5900 16
5901 14
5902 9
5903 12
5904 11
5905 8
5906 17
5907 34
5908 26
5909 17
5910 34
5911 26
5912 10
5913 15
5914 13
5915 12
5916 19
5917 16
5918 12
5919 19
5920 16
5921 10
5922 15
5923 13
5924 11
5925 10
5926 10
5927 13
5928 22
5929 39
5930 31
5931 22
5932 39
5933 31
5934 15
5935 20
5936 18
5937 17
5938 24
5939 21
5940 17
5941 24
5942 21
5943 15
5944 20
5945 18
5946 16
5947 15
5948 13
5949 22
5950 39
5951 31
5952 22
5953 39
5954 31
5955 15
5956 20
5957 18
5958 17
5959 24
5960 21
5961 17
5962 24
5963 21
5964 15
5965 20
5966 18
5967 16
5968 15
5969 18
5970 27
5971 23
5972 18
5973 27
5974 23
5975 14
5976 17
5977 16
5978 21
5979 19
5980 16
5981 19
5982 14
5983 17
5984 16
5985 13
5986 39
5987 31
5988 22
5989 39
5990 31
5991 15
5992 20
5993 18
5994 17
5995 24
5996 17
5997 24
5998 21
5999 15
6000 20
6001 18
6002 16
6003 15
6004 13
6005 22
6006 39
6007 31
6008 22
6009 39
6010 31
6011 15
6012 20
6013 18
6014 17
6015 24
6016 21
6017 24
6018 21
6019 15
6020 20
6021 18
6022 16
6023 13
6024 22
6025 39
6026 31
6027 39
6028 31
6029 15
6030 20
6031 18
6032 24
6033 21
6034 17
6035 24
6036 21
6037 15
6038 20
6039 18
6040 16
6041 18
6042 27
6043 23
6044 23
6045 17
6046 16
6047 16
6048 21
6049 19
6050 16
6051 21
6052 19
6053 14
6054 17
6055 16
6056 13
6057 22
6058 39
6059 31
6060 22
6061 39
6062 31
6063 15
6064 20
6065 18
6066 17
6067 24
6068 21
6069 17
6070 24
6071 21
6072 15
6073 20
6074 18
6075 16
6076 15
6077 8
6078 11
6079 20
6080 37
6081 29
6082 20
6083 37
6084 29
6085 13
6086 18
6087 16
6088 15
6089 22
6090 19
6091 15
6092 22
6093 19
6094 13
6095 18
6096 16
6097 14
6098 13
6099 11
6100 20
6101 37
6102 29
6103 20
6104 37
6105 29
6106 13
6107 18
6108 16
6109 15
6110 22
6111 19
6112 15
6113 22
6114 19
6115 13
6116 18
6117 16
6118 14
6119 13
6120 16
6121 25
6122 21
6123 16
6124 25
6125 21
6126 12
6127 15
6128 14
6129 14
6130 19
6131 17
6132 14
6133 19
6134 17
6135 12
6136 15
6137 14
6138 11
6139 20
6140 37
6141 29
6142 20
6143 37
6144 29
6145 13
6146 16
6147 15
6148 22
6149 19
6150 15
6151 22
6152 19
6153 13
6154 18
6155 16
6156 14
6157 13
6158 11
6159 20
6160 37
6161 29
6162 20
6163 37
6164 29
6165 13
6166 18
6167 16
6168 15
6169 22
6170 19
6171 15
6172 22
6173 19
6174 13
6175 18
6176 16
6177 14
6178 13
6179 11
6180 20
6181 37
6182 29
6183 20
6184 37
6185 29
6186 13
6187 18
6188 16
6189 15
6190 22
6191 19
6192 15
6193 22
6194 19
6195 13
6196 18
6197 16
6198 14
6199 13
6200 16
6201 25
6202 21
6203 16
6204 25
6205 21
6206 12
6207 15
6208 14
6209 14
6210 19
6211 17
6212 14
6213 19
6214 17
6215 12
6216 15
6217 14
6218 11
6219 20
6220 37
6221 29
6222 20
6223 37
6224 29
6225 13
6226 18
6227 16
6228 15
6229 22
6230 19
6231 15
6232 22
6233 19
6234 13
6235 18
6236 16
6237 14
6238 13
6239 6
6240 9
6241 18
6242 35
6243 27
6244 18
6245 35
6246 27
6247 16
6248 14
6249 13
6250 20
6251 17
6252 13
6253 20
6254 17
6255 11
6256 16
6257 14
6258 12
6259 11
6260 9
6261 18
6262 35
6263 18
6264 35
6265 27
6266 16
6267 14
6268 13
6269 20
6270 17
6271 13
6272 20
6273 17
6274 11
6275 16
6276 14
6277 12
6278 11
6279 14
6280 23
6281 19
6282 14
6283 23
6284 19
6285 10
6286 13
6287 12
6288 12
6289 17
6290 15
6291 12
6292 17
6293 15
6294 10
6295 12
6296 9
6297 18
6298 35
6299 27
6300 18
6301 35
6302 27
6303 16
6304 14
6305 13
6306 20
6307 17
6308 13
6309 20
6310 17
6311 11
6312 16
6313 14
6314 12
6315 11
6316 9
6317 18
6318 35
6319 27
6320 18
6321 35
6322 27
6323 11
6324 16
6325 14
6326 13
6327 20
6328 17
6329 13
6330 20
6331 17
6332 11
6333 16
6334 14
6335 12
6336 11
6337 9
6338 18
6339 35
6340 27
6341 18
6342 35
6343 27
6344 11
6345 14
6346 13
6347 20
6348 17
6349 13
6350 20
6351 17
6352 11
6353 16
6354 14
6355 12
6356 11
6357 14
6358 23
6359 19
6360 14
6361 23
6362 19
6363 10
6364 13
6365 12
6366 12
6367 17
6368 15
6369 12
6370 17
6371 15
6372 10
6373 13
6374 12
6375 9
6376 18
6377 35
6378 27
6379 18
6380 35
6381 27
6382 11
6383 16
6384 14
6385 13
6386 20
6387 17
6388 13
6389 20
6390 17
6391 16
6392 14
6393 11
6394 8
6395 17
6396 34
6397 26
6398 17
6399 34
6400 26
6401 10
6402 15
6403 13
6404 12
6405 19
6406 16
6407 12
6408 19
6409 16
6410 10
6411 15
6412 13
6413 11
6414 10
6415 8
6416 17
6417 34
6418 26
6419 17
6420 34
6421 26
6422 10
6423 15
6424 13
6425 12
6426 19
6427 16
6428 12
6429 19
6430 16
6431 10
6432 15
6433 13
6434 11
6435 10
6436 13
6437 22
6438 18
6439 13
6440 22
6441 18
6442 9
6443 12
6444 11
6445 11
6446 16
6447 14
6448 11
6449 16
6450 14
6451 9
6452 12
6453 11
6454 8
6455 17
6456 34
6457 26
6458 17
6459 34
6460 26
6461 10
6462 15
6463 13
6464 12
6465 19
6466 16
6467 12
6468 19
6469 16
6470 10
6471 15
6472 13
6473 11
6474 10
6475 8
6476 17
6477 34
6478 26
6479 17
6480 34
6481 26
6482 15
6483 13
6484 12
6485 19
6486 16
6487 12
6488 19
6489 16
6490 10
6491 13
6492 11
6493 10
6494 8
6495 17
6496 34
6497 26
6498 17
6499 34
6500 26
6501 10
6502 15
6503 13
6504 12
6505 19
6506 16
6507 19
6508 16
6509 10
6510 15
6511 13
6512 11
6513 13
6514 22
6515 18
6516 13
6517 22
6518 18
6519 9
6520 12
6521 11
6522 11
6523 16
6524 14
6525 11
6526 16
6527 14
6528 9
6529 12
6530 11
6531 8
6532 17
6533 34
6534 26
6535 17
6536 34
6537 26
6538 10
6539 15
6540 13
6541 12
6542 19
6543 16
6544 12
6545 19
6546 16
6547 10
6548 15
6549 11
6550 10
6551 8
6552 11
6553 20
6554 37
6555 29
6556 20
6557 37
6558 29
6559 13
6560 18
6561 16
6562 15
6563 22
6564 19
6565 15
6566 22
6567 19
6568 13
6569 18
6570 14
6571 13
6572 11
6573 20
6574 37
6575 29
6576 20
6577 37
6578 29
6579 13
6580 18
6581 16
6582 15
6583 22
6584 19
6585 15
6586 22
6587 19
6588 13
6589 18
6590 16
6591 14
6592 13
6593 16
6594 25
6595 21
6596 16
6597 25
6598 21
6599 12
6600 15
6601 14
6602 14
6603 19
6604 17
6605 14
6606 19
6607 17
6608 12
6609 15
6610 14
6611 11
6612 20
6613 37
6614 29
6615 20
6616 37
6617 29
6618 13
6619 18
6620 16
6621 15
6622 22
6623 19
6624 15
6625 22
6626 19
6627 13
6628 18
6629 16
6630 14
6631 13
6632 11
6633 20
6634 37
6635 29
6636 20
6637 37
6638 29
6639 13
6640 18
6641 16
6642 15
6643 22
6644 19
6645 15
6646 22
6647 19
6648 13
6649 18
6650 16
6651 14
6652 13
6653 11
6654 20
6655 37
6656 29
6657 20
6658 37
6659 29
6660 13
6661 18
6662 16
6663 15
6664 22
6665 19
6666 22
6667 19
6668 13
6669 18
6670 16
6671 14
6672 13
6673 16
6674 25
6675 21
6676 16
6677 25
6678 21
6679 12
6680 15
6681 14
6682 14
6683 19
6684 17
6685 14
6686 19
6687 17
6688 12
6689 15
6690 14
6691 11
6692 20
6693 37
6694 29
6695 20
6696 13
6697 18
6698 16
6699 15
6700 22
6701 19
6702 15
6703 22
6704 19
6705 13
6706 18
6707 16
6708 14
6709 13
6710 17
6711 20
6712 29
6714 38
6715 29
6717 38
6718 22
6719 27
6720 25
6721 24
6722 31
6723 28
6724 24
6725 31
6726 28
6727 27
6728 25
6729 23
6730 22
6731 20
6732 29
6734 38
6735 29
6737 38
6738 27
6739 25
6740 24
6741 31
6742 28
6743 24
6744 31
6745 28
6746 22
6747 27
6748 25
6749 23
6750 22
6751 25
6752 34
6753 30
6754 25
6755 34
6756 30
6757 21
6758 24
6759 23
6760 23
6761 28
6762 26
6763 23
6764 28
6765 26
6766 24
6767 23
6768 20
6769 29
6771 38
6772 29
6774 38
6775 22
6776 27
6777 25
6778 24
6779 31
6780 28
6781 24
6782 31
6783 28
6784 22
6785 27
6786 25
6787 23
6788 22
6789 20
6790 29
6792 38
6793 29
6795 38
6796 22
6797 25
6798 24
6799 31
6800 28
6801 24
6802 31
6803 28
6804 22
6805 27
6806 25
6807 23
6808 22
6809 20
6810 29
6812 38
6814 38
6815 22
6816 27
6817 25
6818 24
6819 31
6820 28
6821 24
6822 31
6823 28
6824 22
6825 27
6826 25
6827 23
6828 22
6829 25
6830 34
6831 30
6832 25
6833 34
6834 30
6835 21
6836 24
6837 23
6838 28
6839 26
6840 23
6841 28
6842 26
6843 21
6844 24
6845 23
6846 20
6847 29
6849 38
6850 29
6852 38
6853 22
6854 27
6855 25
6856 24
6857 31
6858 28
6859 24
6860 31
6861 28
6862 22
6863 27
6864 25
6865 23
6866 22
6867 13
6868 16
6869 25
6871 25
6873 34
6874 18
6875 23
6876 21
6877 20
6878 27
6879 24
6880 20
6881 27
6882 24
6883 18
6884 23
6885 21
6886 19
6887 18
6888 16
6889 25
6891 34
6892 25
6894 34
6895 18
6896 23
6897 21
6898 20
6899 27
6900 24
6901 20
6902 27
6903 24
6904 23
6905 21
6906 19
6907 18
6908 21
6909 30
6910 26
6911 21
6912 30
6913 26
6914 17
6915 20
6916 19
6917 19
6918 24
6919 22
6920 19
6921 24
6922 22
6923 17
6924 20
6925 19
6926 16
6927 25
6929 34
6930 25
6932 34
6933 18
6934 23
6935 21
6936 20
6937 27
6938 24
6939 20
6940 24
6941 18
6942 23
6943 21
6944 19
6945 18
6946 16
6947 25
6949 34
6950 25
6952 34
6953 18
6954 23
6955 21
6956 20
6957 27
6958 24
6959 20
6960 27
6961 24
6962 18
6963 23
6964 21
6965 19
6966 18
6967 16
6968 25
6970 34
6971 25
6973 34
6974 18
6975 23
6976 21
6977 27
6978 24
6979 20
6980 27
6981 24
6982 18
6983 23
6984 21
6985 19
6986 18
6987 21
6988 30
6989 26
6990 30
6991 26
6992 17
6993 20
6994 19
6995 19
6996 24
6997 22
6998 19
6999 24
7000 17
7001 20
7002 19
7003 25
7005 34
7006 25
7008 34
7009 18
7010 23
7011 21
7012 20
7013 27
7014 24
7015 20
7016 27
7017 24
7018 18
7019 23
7020 21
7021 19
7022 18
7023 11
7024 20
7025 37
7026 29
7027 20
7028 37
7029 29
7030 13
7031 16
7032 15
7033 22
7034 19
7035 15
7036 22
7037 19
7038 13
7039 18
7040 16
7041 14
7042 13
7043 11
7044 20
7045 37
7046 29
7047 20
7048 37
7049 29
7050 13
7051 18
7052 16
7053 15
7054 22
7055 19
7056 15
7057 22
7058 19
7059 13
7060 18
7061 16
7062 14
7063 13
7064 16
7065 25
7066 21
7067 16
7068 25
7069 21
7070 12
7071 15
7072 14
7073 14
7074 19
7075 17
7076 14
7077 19
7078 17
7079 12
7080 15
7081 14
7082 11
7083 20
7084 37
7085 29
7086 20
7087 37
7088 29
7089 13
7090 18
7091 16
7092 15
7093 22
7094 19
7095 15
7096 22
7097 19
7098 13
7099 18
7100 16
7101 14
7102 13
7103 11
7104 20
7105 37
7106 29
7107 20
7108 37
7109 29
7110 13
7111 18
7112 16
7113 15
7114 22
7115 19
7116 15
7117 22
7118 19
7119 13
7120 18
7121 16
7122 14
7123 11
7124 20
7125 37
7126 29
7127 20
7128 37
7129 29
7130 13
7131 18
7132 16
7133 15
7134 19
7135 15
7136 22
7137 19
7138 13
7139 18
7140 16
7141 14
7142 13
7143 16
7144 25
7145 21
7146 16
7147 25
7148 21
7149 12
7150 15
7151 14
7152 14
7153 19
7154 17
7155 14
7156 19
7157 17
7158 12
7159 15
7160 14
7161 11
7162 20
7163 37
7164 29
7165 20
7166 37
7167 29
7168 13
7169 18
7170 16
7171 15
7172 22
7173 19
7174 15
7175 22
7176 19
7177 13
7178 18
7179 16
7180 14
7181 13
7182 17
7183 20
7184 29
7186 38
7187 29
7189 38
7190 22
7191 27
7192 25
7193 24
7194 28
7195 24
7196 31
7197 28
7198 22
7199 27
7200 25
7201 23
7202 22
7203 20
7204 29
7206 38
7207 29
7209 38
7210 22
7211 27
7212 25
7213 24
7214 28
7215 24
7216 31
7217 28
7218 22
7219 27
7220 25
7221 23
7222 22
7223 25
7224 34
7225 25
7226 34
7227 30
7228 21
7229 24
7230 23
7231 23
7232 28
7233 26
7234 23
7235 26
7236 21
7237 24
7238 23
7239 20
7240 29
7242 38
7243 29
7245 38
7246 22
7247 27
7248 25
7249 24
7250 31
7251 24
7252 31
7253 28
7254 22
7255 27
7256 25
7257 23
7258 22
7259 20
7260 29
7262 38
7263 29
7265 38
7266 22
7267 27
7268 25
7269 24
7270 31
7271 28
7272 24
7273 31
7274 28
7275 22
7276 27
7277 25
7278 23
7279 22
7280 20
7281 29
7283 38
7284 29
7286 38
7287 27
7288 25
7289 24
7290 31
7291 28
7292 24
7293 31
7294 28
7295 22
7296 27
7297 25
7298 23
7299 22
7300 25
7301 34
7302 30
7303 25
7304 34
7305 30
7306 21
7307 24
7308 23
7309 23
7310 28
7311 26
7312 23
7313 28
7314 26
7315 21
7316 24
7317 23
7318 20
7319 29
7321 38
7322 29
7324 38
7325 22
7326 27
7327 25
7328 24
7329 31
7330 28
7331 24
7332 31
7333 28
7334 22
7335 27
7336 25
7337 23
7338 22
7339 13
7340 16
7342 25
7344 34
7345 18
7346 23
7347 21
7348 20
7349 27
7350 24
7351 20
7352 27
7353 24
7354 18
7355 23
7356 19
7357 16
7358 25
7359 34
7360 25
7362 34
7363 18
7364 23
7365 21
7366 20
7367 27
7368 24
7369 20
7370 27
7371 24
7372 18
7373 23
7374 21
7375 19
7376 18
7377 21
7378 30
7379 26
7380 21
7381 30
7382 17
7383 20
7384 19
7385 19
7386 24
7387 22
7388 19
7389 24
7390 22
7391 17
7392 20
7393 19
7394 16
7395 25
7397 34
7398 25
7400 34
7401 18
7402 23
7403 21
7404 20
7405 27
7406 24
7407 20
7408 27
7409 24
7410 18
7411 23
7412 21
7413 19
7414 18
7415 16
7416 25
7417 34
7418 25
7420 34
7421 18
7422 23
7423 21
7424 20
7425 27
7426 24
7427 20
7428 27
7429 24
7430 18
7431 23
7432 21
7433 19
7434 18
7435 16
7436 25
7438 34
7439 25
7441 34
7442 18
7443 23
7444 20
7445 27
7446 24
7447 20
7448 27
7449 24
7450 18
7451 23
7452 21
7453 19
7454 18
7455 21
7456 30
7457 26
7458 21
7459 30
7460 26
7461 17
7462 20
7463 19
7464 19
7465 24
7466 22
7467 19
7468 24
7469 22
7470 17
7471 20
7472 19
7473 16
7474 25
7476 34
7477 25
7479 34
7480 18
7481 23
7482 21
7483 20
7484 27
7485 24
7486 20
7487 27
7488 24
7489 18
7490 23
7491 21
7492 19
7493 18
7494 4
7495 7
7496 16
7497 33
7498 25
7499 16
7500 33
7501 25
7502 9
7503 14
7504 12
7505 11
7506 11
7507 18
7508 15
7509 9
7510 14
7511 12
7512 10
7513 9
7514 7
7515 16
7516 25
7517 33
7518 25
7519 9
7520 14
7521 12
7522 11
7523 18
7524 15
7525 11
7526 18
7527 15
7528 9
7529 14
7530 12
7531 10
7532 12
7533 21
7534 17
7535 12
7536 21
7537 17
7538 8
7539 11
7540 10
7541 10
7542 15
7543 13
7544 10
7545 15
7546 13
7547 8
7548 11
7549 10
7550 7
7551 16
7552 33
7553 25
7554 16
7555 33
7556 25
7557 9
7558 14
7559 12
7560 11
7561 18
7562 15
7563 11
7564 18
7565 15
7566 9
7567 14
7568 12
7569 10
7570 16
7571 33
7572 25
7573 16
7574 33
7575 25
7576 9
7577 14
7578 12
7579 11
7580 18
7581 15
7582 18
7583 15
7584 9
7585 14
7586 12
7587 10
7588 9
7589 7
7590 16
7591 33
7592 25
7593 16
7594 33
7595 25
7596 9
7597 12
7598 11
7599 18
7600 15
7601 11
7602 18
7603 15
7604 9
7605 14
7606 12
7607 10
7608 9
7609 12
7610 21
7611 17
7612 12
7613 21
7614 17
7615 8
7616 11
7617 10
7618 10
7619 13
7620 10
7621 15
7622 13
7623 8
7624 11
7625 10
7626 7
7627 16
7628 33
7629 25
7630 16
7631 33
7632 25
7633 9
7634 14
7635 12
7636 11
7637 18
7638 15
7639 11
7640 18
7641 15
7642 14
7643 12
7644 10
7645 9
7646 7
7647 10
7648 19
7649 36
7650 28
7651 19
7652 36
7653 28
7654 12
7655 17
7656 15
7657 14
7658 21
7659 18
7660 14
7661 21
7662 18
7663 12
7664 17
7665 15
7666 13
7667 12
7668 10
7669 36
7670 28
7671 19
7672 36
7673 28
7674 12
7675 17
7676 15
7677 14
7678 21
7679 18
7680 14
7681 18
7682 12
7683 17
7684 15
7685 13
7686 12
7687 15
7688 24
7689 20
7690 15
7691 24
7692 20
7693 11
7694 14
7695 13
7696 13
7697 18
7698 16
7699 18
7700 16
7701 11
7702 14
7703 13
7704 10
7705 19
7706 36
7707 28
7708 19
7709 36
7710 28
7711 12
7712 17
7713 15
7714 14
7715 21
7716 18
7717 14
7718 21
7719 18
7720 12
7721 17
7722 15
7723 13
7724 12
7725 10
7726 36
7727 28
7728 19
7729 36
7730 28
7731 17
7732 15
7733 14
7734 21
7735 14
7736 21
7737 18
7738 12
7739 17
7740 15
7741 13
7742 12
7743 19
7744 36
7745 28
7746 19
7747 36
7748 28
7749 12
7750 17
7751 15
7752 14
7753 21
7754 18
7755 14
7756 21
7757 18
7758 12
7759 17
7760 15
7761 13
7762 12
7763 15
7764 24
7765 20
7766 15
7767 24
7768 20
7769 11
7770 14
7771 13
7772 18
7773 16
7774 13
7775 18
7776 16
7777 11
7778 14
7779 13
7780 10
7781 19
7782 36
7783 28
7784 19
7785 36
7786 28
7787 12
7788 17
7789 15
7790 14
7791 21
7792 18
7793 14
7794 21
7795 18
7796 12
7797 17
7798 15
7799 13
7800 12
7801 6
7802 9
7803 18
7804 18
7805 35
7806 27
7807 11
7808 16
7809 14
7810 13
7811 20
7812 17
7813 13
7814 20
7815 17
7816 11
7817 16
7818 14
7819 12
7820 11
7821 9
7822 18
7823 35
7824 27
7825 18
7826 35
7827 27
7828 11
7829 16
7830 14
7831 13
7832 20
7833 17
7834 13
7835 20
7836 17
7837 16
7838 14
7839 12
7840 11
7841 14
7842 23
7843 19
7844 14
7845 23
7846 19
7847 13
7848 12
7849 12
7850 17
7851 15
7852 12
7853 17
7854 15
7855 10
7856 13
7857 12
7858 9
7859 18
7860 35
7861 18
7862 35
7863 27
7864 11
7865 16
7866 14
7867 13
7868 20
7869 17
7870 13
7871 20
7872 17
7873 11
7874 16
7875 14
7876 12
7877 11
7878 9
7879 18
7880 35
7881 27
7882 18
7883 35
7884 27
7885 11
7886 16
7887 14
7888 13
7889 20
7890 17
7891 13
7892 20
7893 17
7894 11
7895 16
7896 14
7897 12
7898 11
7899 9
7900 18
7901 35
7902 27
7903 18
7904 35
7905 27
7906 11
7907 16
7908 14
7909 13
7910 20
7911 17
7912 13
7913 20
7914 17
7915 11
7916 16
7917 14
7918 12
7919 11
7920 14
7921 23
7922 19
7923 14
7924 23
7925 19
7926 10
7927 13
7928 12
7929 12
7930 17
7931 15
7932 12
7933 17
7934 15
7935 10
7936 13
7937 12
7938 9
7939 18
7940 35
7941 27
7942 18
7943 35
7944 27
7945 11
7946 16
7947 14
7948 13
7949 20
7950 17
7951 13
7952 11
7953 16
7954 14
7955 12
7956 11
7957 6
7958 9
7959 18
7960 35
7961 18
7962 35
7963 27
7964 11
7965 14
7966 13
7967 20
7968 17
7969 13
7970 20
7971 17
7972 16
7973 14
7974 12
7975 9
7976 18
7977 35
7978 27
7979 18
7980 35
7981 27
7982 11
7983 16
7984 13
7985 20
7986 17
7987 13
7988 20
7989 17
7990 11
7991 16
7992 14
7993 12
7994 11
7995 14
7996 23
7997 19
7998 14
7999 23
8000 19
8001 10
8002 13
8003 12
8004 12
8005 17
8006 15
8007 12
8008 17
8009 15
8010 10
8011 13
8012 12
8013 9
8014 18
8015 35
8016 27
8017 18
8018 35
8019 27
8020 11
8021 16
8022 14
8023 13
8024 20
8025 17
8026 13
8027 20
8028 17
8029 11
8030 16
8031 14
8032 12
8033 11
8034 9
8035 18
8036 35
8037 27
8038 18
8039 35
8040 27
8041 11
8042 16
8043 14
8044 13
8045 20
8046 17
8047 13
8048 20
8049 17
8050 11
8051 16
8052 14
8053 12
8054 11
8055 9
8056 18
8057 35
8058 18
8059 35
8060 27
8061 11
8062 16
8063 14
8064 13
8065 20
8066 17
8067 13
8068 20
8069 17
8070 14
8071 12
8072 11
8073 14
8074 23
8075 19
8076 14
8077 23
8078 19
8079 10
8080 13
8081 12
8082 12
8083 17
8084 15
8085 12
8086 15
8087 10
8088 13
8089 12
8090 9
8091 18
8092 35
8093 27
8094 18
8095 35
8096 27
8097 11
8098 16
8099 14
8100 13
8101 20
8102 17
8103 13
8104 20
8105 17
8106 11
8107 16
8108 14
8109 12
8110 11
8111 11
8112 14
8113 23
8115 32
8116 23
8117 32
8118 16
8119 21
8120 19
8121 18
8122 25
8123 22
8124 18
8125 25
8126 22
8127 16
8128 21
8129 19
8130 17
8131 16
8132 14
8133 23
8135 32
8136 23
8138 32
8139 16
8140 21
8141 19
8142 18
8143 25
8144 22
8145 18
8146 25
8147 22
8148 16
8149 21
8150 19
8151 17
8152 16
8153 19
8154 28
8155 19
8156 28
8157 24
8158 15
8159 18
8160 17
8161 17
8162 22
8163 20
8164 17
8165 22
8166 20
8167 15
8168 18
8169 17
8170 14
8171 23
8173 32
8174 23
8176 16
8177 21
8178 19
8179 18
8180 25
8181 22
8182 18
8183 25
8184 22
8185 16
8186 21
8187 19
8188 17
8189 16
8190 14
8191 23
8193 32
8194 23
8196 32
8197 16
8198 21
8199 19
8200 18
8201 25
8202 22
8203 18
8204 25
8205 22
8206 16
8207 21
8208 19
8209 17
8210 16
8211 14
8212 23
8214 32
8215 23
8217 32
8218 16
8219 21
8220 19
8221 18
8222 25
8223 22
8224 18
8225 25
8226 22
8227 16
8228 21
8229 19
8230 17
8231 16
8232 19
8233 28
8234 24
8235 19
8236 28
8237 24
8238 15
8239 18
8240 17
8241 17
8242 22
8243 20
8244 17
8245 22
8246 20
8247 15
8248 18
8249 17
8250 14
8251 23
8253 32
8254 23
8256 32
8257 16
8258 21
8259 19
8260 18
8261 25
8262 22
8263 18
8264 25
8265 22
8266 16
8267 21
8268 19
8269 17
8270 16
8271 9
8272 12
8273 21
8274 38
8275 30
8276 21
8277 38
8278 30
8279 14
8280 17
8281 16
8282 23
8283 20
8284 16
8285 23
8286 20
8287 14
8288 19
8289 17
8290 15
8291 14
8292 12
8293 21
8294 38
8295 30
8296 21
8297 38
8298 30
8299 14
8300 19
8301 17
8302 16
8303 23
8304 20
8305 16
8306 23
8307 20
8308 14
8309 17
8310 15
8311 14
8312 17
8313 26
8314 22
8315 26
8316 22
8317 13
8318 16
8319 15
8320 15
8321 20
8322 18
8323 15
8324 20
8325 18
8326 13
8327 16
8328 15
8329 12
8330 21
8331 38
8332 30
8333 21
8334 38
8335 30
8336 14
8337 19
8338 17
8339 16
8340 23
8341 20
8342 16
8343 23
8344 20
8345 14
8346 19
8347 17
8348 15
8349 14
8350 12
8351 21
8352 38
8353 30
8354 21
8355 38
8356 30
8357 14
8358 19
8359 17
8360 16
8361 23
8362 20
8363 16
8364 23
8365 20
8366 14
8367 19
8368 17
8369 15
8370 14
8371 12
8372 21
8373 38
8374 30
8375 38
8376 30
8377 14
8378 19
8379 17
8380 16
8381 23
8382 20
8383 16
8384 23
8385 20
8386 14
8387 19
8388 17
8389 15
8390 14
8391 17
8392 26
8393 22
8394 17
8395 26
8396 22
8397 13
8398 16
8399 15
8400 15
8401 20
8402 18
8403 15
8404 20
8405 18
8406 13
8407 16
8408 15
8409 21
8410 38
8411 30
8412 21
8413 38
8414 30
8415 14
8416 19
8417 17
8418 16
8419 23
8420 20
8421 16
8422 23
8423 20
8424 14
8425 19
8426 17
8427 15
8428 14
8429 6
8430 9
8431 18
8432 35
8433 27
8434 18
8435 35
8436 27
8437 11
8438 16
8439 14
8440 13
8441 20
8442 17
8443 13
8444 20
8445 17
8446 11
8447 16
8448 14
8449 12
8450 11
8451 9
8452 18
8453 35
8454 27
8455 18
8456 35
8457 27
8458 11
8459 16
8460 14
8461 13
8462 20
8463 17
8464 13
8465 20
8466 17
8467 11
8468 16
8469 14
8470 12
8471 11
8472 14
8473 23
8474 19
8475 14
8476 23
8477 19
8478 10
8479 13
8480 12
8481 12
8482 17
8483 15
8484 12
8485 17
8486 10
8487 13
8488 12
8489 9
8490 18
8491 35
8492 27
8493 18
8494 35
8495 27
8496 11
8497 16
8498 14
8499 13
8500 20
8501 17
8502 13
8503 17
8504 11
8505 16
8506 14
8507 12
8508 11
8509 9
8510 18
8511 27
8512 18
8513 35
8514 27
8515 11
8516 16
8517 14
8518 13
8519 20
8520 17
8521 13
8522 20
8523 17
8524 11
8525 16
8526 14
8527 12
8528 11
8529 9
8530 18
8531 35
8532 27
8533 18
8534 35
8535 27
8536 11
8537 16
8538 14
8539 13
8540 20
8541 17
8542 13
8543 20
8544 17
8545 11
8546 16
8547 14
8548 12
8549 11
8550 14
8551 23
8552 19
8553 14
8554 23
8555 19
8556 10
8557 13
8558 12
8559 17
8560 15
8561 12
8562 17
8563 15
8564 10
8565 13
8566 12
8567 9
8568 18
8569 35
8570 18
8571 35
8572 27
8573 11
8574 16
8575 14
8576 13
8577 20
8578 17
8579 13
8580 20
8581 11
8582 16
8583 14
8584 12
8585 11
8586 11
8587 14
8588 23
8590 32
8591 23
8593 32
8594 16
8595 21
8596 19
8597 18
8598 25
8599 22
8600 25
8601 22
8602 16
8603 21
8604 17
8605 16
8606 14
8607 23
8609 32
8610 23
8612 32
8613 16
8614 21
8615 19
8616 18
8617 25
8618 22
8619 18
8620 25
8621 22
8622 16
8623 21
8624 19
8625 17
8626 16
8627 19
8628 28
8629 24
8630 19
8631 28
8632 24
8633 15
8634 18
8635 17
8636 17
8637 22
8638 20
8639 17
8640 22
8641 20
8642 15
8643 18
8644 17
8645 14
8646 23
8648 32
8649 23
8651 32
8652 16
8653 21
8654 19
8655 18
8656 25
8657 22
8658 18
8659 25
8660 22
8661 16
8662 21
8663 19
8664 17
8665 16
8666 14
8668 32
8669 23
8671 32
8672 16
8673 21
8674 19
8675 18
8676 25
8677 22
8678 18
8679 25
8680 22
8681 16
8682 21
8683 19
8684 17
8685 16
8686 14
8687 23
8689 32
8690 23
8692 32
8693 16
8694 21
8695 19
8696 18
8697 25
8698 22
8699 18
8700 25
8701 22
8702 16
8703 21
8704 19
8705 17
8706 16
8707 19
8708 28
8709 24
8710 19
8711 28
8712 24
8713 15
8714 18
8715 17
8716 17
8717 22
8718 20
8719 17
8720 22
8721 20
8722 15
8723 18
8724 17
8725 23
8727 32
8728 23
8730 32
8731 16
8732 21
8733 19
8734 18
8735 25
8736 18
8737 25
8738 22
8739 16
8740 21
8741 19
8742 17
8743 16
8744 9
8745 12
8746 21
8747 38
8748 30
8749 21
8750 38
8751 30
8752 14
8753 19
8754 17
8755 16
8756 23
8757 20
8758 16
8759 23
8760 20
8761 14
8762 19
8763 17
8764 15
8765 12
8766 38
8767 30
8768 21
8769 38
8770 30
8771 14
8772 19
8773 17
8774 16
8775 23
8776 20
8777 16
8778 23
8779 20
8780 14
8781 19
8782 17
8783 15
8784 14
8785 17
8786 26
8787 22
8788 17
8789 26
8790 22
8791 13
8792 16
8793 15
8794 15
8795 20
8796 18
8797 15
8798 20
8799 18
8800 13
8801 16
8802 15
8803 12
8804 21
8805 38
8806 30
8807 21
8808 38
8809 30
8810 14
8811 19
8812 17
8813 16
8814 23
8815 20
8816 16
8817 23
8818 20
8819 14
8820 19
8821 17
8822 15
8823 14
8824 12
8825 21
8826 38
8827 30
8828 21
8829 38
8830 14
8831 19
8832 16
8833 23
8834 20
8835 16
8836 23
8837 20
8838 14
8839 19
8840 17
8841 15
8842 14
8843 12
8844 21
8845 38
8846 30
8847 21
8848 38
8849 30
8850 14
8851 19
8852 17
8853 16
8854 23
8855 20
8856 16
8857 23
8858 20
8859 14
8860 19
8861 17
8862 15
8863 14
8864 17
8865 26
8866 22
8867 17
8868 26
8869 22
8870 13
8871 16
8872 15
8873 15
8874 20
8875 15
8876 20
8877 13
8878 16
8879 15
8880 12
8881 38
8882 30
8883 21
8884 38
8885 30
8886 14
8887 19
8888 17
8889 16
8890 23
8891 20
8892 16
8893 23
8894 20
8895 14
8896 19
8897 17
8898 15
8899 14
8900 4
8901 7
8902 16
8903 33
8904 25
8905 16
8906 33
8907 25
8908 9
8909 14
8910 12
8911 11
8912 18
8913 15
8914 11
8915 18
8916 15
8917 9
8918 14
8919 12
8920 10
8921 9
8922 7
8923 16
8924 33
8925 25
8926 16
8927 33
8928 25
8929 9
8930 14
8931 12
8932 11
8933 18
8934 15
8935 11
8936 18
8937 15
8938 9
8939 14
8940 12
8941 10
8942 9
8943 12
8944 21
8945 17
8946 12
8947 21
8948 17
8949 8
8950 11
8951 10
8952 10
8953 15
8954 13
8955 10
8956 15
8957 13
8958 8
8959 11
8960 10
8961 7
8962 16
8963 33
8964 25
8965 16
8966 33
8967 25
8968 9
8969 14
8970 12
8971 11
8972 18
8973 15
8974 11
8975 18
8976 15
8977 9
8978 14
8979 12
8980 10
8981 9
8982 16
8983 33
8984 25
8985 16
8986 33
8987 25
8988 9
8989 14
8990 12
8991 11
8992 18
8993 11
8994 18
8995 15
8996 9
8997 14
8998 12
8999 10
9000 9
9001 7
9002 16
9003 33
9004 25
9005 16
9006 33
9007 25
9008 9
9009 14
9010 12
9011 11
9012 18
9013 15
9014 11
9015 18
9016 15
9017 9
9018 14
9019 12
9020 10
9021 9
9022 12
9023 21
9024 17
9025 21
9026 17
9027 8
9028 11
9029 10
9030 15
9031 13
9032 10
9033 15
9034 13
9035 8
9036 11
9037 10
9038 7
9039 16
9040 33
9041 25
9042 16
9043 33
9044 25
9045 9
9046 14
9047 12
9048 11
9049 18
9050 15
9051 11
9052 18
9053 15
9054 9
9055 14
9056 12
9057 10
9058 9
9059 7
9060 10
9061 19
9062 36
9063 28
9064 19
9065 36
9066 28
9067 12
9068 17
9069 15
9070 14
9071 21
9072 18
9073 14
9074 21
9075 18
9076 12
9077 17
9078 15
9079 13
9080 12
9081 10
9082 19
9083 36
9084 28
9085 19
9086 36
9087 28
9088 12
9089 17
9090 15
9091 14
9092 21
9093 18
9094 14
9095 21
9096 18
9097 12
9098 17
9099 15
9100 13
9101 12
9102 15
9103 24
9104 20
9105 15
9106 24
9107 20
9108 14
9109 13
9110 13
9111 18
9112 16
9113 13
9114 18
9115 16
9116 11
9117 14
9118 13
9119 10
9120 19
9121 28
9122 19
9123 36
9124 28
9125 12
9126 17
9127 15
9128 14
9129 21
9130 18
9131 14
9132 21
9133 18
9134 12
9135 17
9136 15
9137 13
9138 12
9139 19
9140 36
9141 28
9142 19
9143 36
9144 28
9145 12
9146 17
9147 15
9148 14
9149 21
9150 18
9151 14
9152 21
9153 18
9154 12
9155 17
9156 15
9157 13
9158 12
9159 10
9160 19
9161 36
9162 28
9163 19
9164 36
9165 28
9166 12
9167 17
9168 15
9169 14
9170 21
9171 18
9172 14
9173 21
9174 18
9175 12
9176 17
9177 15
9178 13
9179 12
9180 15
9181 24
9182 20
9183 15
9184 24
9185 20
9186 11
9187 14
9188 13
9189 13
9190 18
9191 16
9192 13
9193 18
9194 16
9195 11
9196 14
9197 13
9198 10
9199 19
9200 28
9201 19
9202 36
9203 12
9204 17
9205 15
9206 14
9207 21
9208 18
9209 21
9210 18
9211 12
9212 17
9213 15
9214 13
9215 12
9216 6
9217 9
9218 18
9219 35
9220 27
9221 18
9222 35
9223 27
9224 14
9225 13
9226 20
9227 17
9228 13
9229 20
9230 17
9231 16
9232 14
9233 12
9234 11
9235 9
9236 18
9237 35
9238 27
9239 18
9240 35
9241 27
9242 11
9243 16
9244 14
9245 13
9246 20
9247 17
9248 13
9249 20
9250 17
9251 11
9252 16
9253 14
9254 12
9255 11
9256 14
9257 23
9258 19
9259 14
9260 23
9261 19
9262 10
9263 13
9264 12
9265 12
9266 17
9267 15
9268 12
9269 17
9270 15
9271 10
9272 13
9273 12
9274 9
9275 18
9276 35
9277 27
9278 18
9279 35
9280 27
9281 11
9282 16
9283 14
9284 13
9285 20
9286 17
9287 13
9288 20
9289 17
9290 11
9291 16
9292 14
9293 12
9294 11
9295 9
9296 18
9297 35
9298 27
9299 18
9300 35
9301 27
9302 11
9303 16
9304 14
9305 13
9306 20
9307 13
9308 20
9309 11
9310 16
9311 14
9312 12
9313 11
9314 9
9315 18
9316 35
9317 27
9318 18
9319 27
9320 11
9321 16
9322 14
9323 13
9324 20
9325 17
9326 13
9327 20
9328 17
9329 11
9330 16
9331 14
9332 12
9333 11
9334 14
9335 23
9336 19
9337 14
9338 23
9339 19
9340 10
9341 13
9342 12
9343 12
9344 17
9345 15
9346 12
9347 17
9348 15
9349 10
9350 13
9351 12
9352 9
9353 18
9354 35
9355 27
9356 18
9357 35
9358 11
9359 16
9360 14
9361 13
9362 20
9363 17
9364 13
9365 20
9366 17
9367 11
9368 16
9369 12
9370 11
9371 3
9372 6
9373 15
9374 32
9375 24
9376 15
9377 32
9378 24
9379 8
9380 13
9381 11
9382 10
9383 17
9384 14
9385 10
9386 17
9387 14
9388 8
9389 13
9390 11
9391 9
9392 8
9393 6
9394 24
9395 15
9396 32
9397 24
9398 8
9399 13
9400 11
9401 10
9402 17
9403 14
9404 10
9405 17
9406 14
9407 8
9408 13
9409 11
9410 9
9411 8
9412 11
9413 20
9414 16
9415 11
9416 20
9417 16
9418 7
9419 10
9420 9
9421 9
9422 14
9423 12
9424 9
9425 14
9426 12
9427 7
9428 10
9429 9
9430 6
9431 15
9432 32
9433 24
9434 15
9435 32
9436 24
9437 8
9438 13
9439 11
9440 10
9441 17
9442 14
9443 10
9444 17
9445 14
9446 8
9447 13
9448 11
9449 9
9450 8
9451 6
9452 15
9453 32
9454 24
9455 15
9456 32
9457 24
9458 8
9459 13
9460 11
9461 10
9462 17
9463 14
9464 10
9465 17
9466 14
9467 8
9468 13
9469 11
9470 9
9471 8
9472 6
9473 15
9474 32
9475 24
9476 15
9477 32
9478 24
9479 8
9480 13
9481 11
9482 10
9483 17
9484 14
9485 10
9486 17
9487 14
9488 8
9489 13
9490 11
9491 9
9492 8
9493 11
9494 20
9495 16
9496 11
9497 20
9498 16
9499 7
9500 10
9501 9
9502 9
9503 14
9504 12
9505 9
9506 14
9507 12
9508 7
9509 10
9510 9
9511 6
9512 15
9513 32
9514 15
9515 32
9516 24
9517 8
9518 13
9519 11
9520 17
9521 14
9522 10
9523 17
9524 14
9525 8
9526 13
9527 11
9528 9
9529 8
9530 12
9531 15
9532 24
9534 33
9535 24
9537 33
9538 22
9539 20
9540 19
9541 26
9542 23
9543 19
9544 26
9545 23
9546 17
9547 22
9548 20
9549 18
9550 17
9551 15
9552 24
9554 33
9555 24
9557 33
9558 17
9559 22
9560 20
9561 19
9562 26
9563 23
9564 19
9565 26
9566 23
9567 17
9568 22
9569 20
9570 18
9571 17
9572 20
9573 29
9574 25
9575 20
9576 29
9577 25
9578 16
9579 19
9580 18
9581 18
9582 23
9583 21
9584 18
9585 23
9586 21
9587 16
9588 19
9589 18
9590 15
9591 24
9593 33
9594 24
9596 33
9597 17
9598 22
9599 20
9600 19
9601 26
9602 23
9603 19
9604 26
9605 23
9606 17
9607 22
9608 20
9609 17
9610 15
9611 24
9613 33
9614 24
9616 33
9617 22
9618 20
9619 19
9620 26
9621 23
9622 19
9623 26
9624 23
9625 22
9626 20
9627 18
9628 15
9629 24
9631 33
9633 33
9634 17
9635 22
9636 20
9637 19
9638 26
9639 23
9640 19
9641 26
9642 23
9643 17
9644 22
9645 20
9646 18
9647 17
9648 20
9649 29
9650 25
9651 20
9652 29
9653 25
9654 16
9655 19
9656 18
9657 18
9658 23
9659 21
9660 18
9661 23
9662 21
9663 16
9664 19
9665 18
9666 15
9667 24
9669 33
9670 24
9672 33
9673 17
9674 22
9675 19
9676 26
9677 23
9678 19
9679 26
9680 23
9681 17
9682 22
9683 20
9684 18
9685 17
9686 29
9687 32
9693 34
9694 39
9695 37
9696 36
9699 36
9702 34
9703 37
9704 35
9705 34
9706 32
9713 34
9714 39
9715 37
9716 36
9718 36
9720 34
9721 39
9722 37
9723 35
9724 34
9725 37
9728 37
9731 33
9732 36
9733 35
9734 35
9736 38
9737 35
9739 38
9740 33
9741 36
9742 35
9743 32
9750 34
9751 39
9752 37
9753 36
9756 36
9759 34
9760 39
9761 37
9762 35
9763 34
9764 32
9770 34
9771 39
9772 37
9773 36
9776 36
9779 34
9780 39
9781 37
9782 35
9783 34
9784 32
9791 34
9792 39
9793 37
9794 36
9797 36
9800 34
9801 39
9802 37
9803 35
9804 34
9805 37
9808 37
9811 33
9812 36
9813 35
9814 35
9816 38
9817 35
9819 38
9820 33
9821 36
9822 35
9823 32
9829 34
9830 39
9831 37
9832 36
9835 36
9838 34
9839 39
9840 37
9841 35
9842 34
9843 21
9844 24
9845 33
9848 33
9851 26
9852 31
9853 29
9854 28
9855 35
9856 32
9857 28
9858 35
9859 32
9860 26
9861 31
9862 27
9863 26
9864 24
9865 33
9868 33
9871 26
9872 31
9873 29
9874 28
9875 35
9876 32
9877 28
9878 35
9879 32
9880 26
9881 31
9882 29
9883 27
9884 26
9885 29
9886 34
9887 29
9888 38
9889 34
9890 25
9891 28
9892 27
9893 27
9894 32
9895 30
9896 27
9897 32
9898 30
9899 25
9900 28
9901 27
9902 24
9903 33
9906 33
9908 26
9909 31
9910 29
9911 28
9912 35
9913 28
9914 35
9915 32
9916 26
9917 31
9918 29
9919 27
9920 26
9921 24
9922 33
9924 33
9927 31
9928 29
9929 28
9930 35
9931 32
9932 28
9933 35
9934 32
9935 26
9936 31
9937 29
9938 27
9939 26
9940 24
9941 33
9944 33
9947 26
9948 31
9949 28
9950 35
9951 32
9952 28
9953 35
9954 32
9955 26
9956 31
9957 29
9958 27
9959 26
9960 29
9961 38
9962 34
9963 29
9964 38
9965 34
9966 25
9967 28
9968 27
9969 27
9970 32
9971 30
9972 27
9973 32
9974 30
9975 25
9976 28
9977 27
9978 24
9979 33
9982 33
9985 26
9986 31
9987 29
9988 28
9989 35
9990 32
9991 28
9992 35
9993 32
9994 26
9995 31
9996 29
9997 27
9998 26
9999 12
10000 15
10001 24
10003 33
10004 24
10006 33
10007 17
10008 20
10009 19
10010 26
10011 23
10012 19
10013 26
10014 23
10015 17
10016 22
10017 20
10018 18
10019 17
10020 15
10022 33
10023 24
10025 33
10026 17
10027 22
10028 20
10029 19
10030 26
10031 19
10032 26
10033 23
10034 17
10035 22
10036 20
10037 18
10038 17
10039 20
10040 29
10041 25
10042 20
10043 29
10044 25
10045 16
10046 19
10047 18
10048 18
10049 23
10050 21
10051 18
10052 23
10053 21
10054 16
10055 19
10056 18
10057 15
10058 24
10060 33
10061 24
10063 33
10064 17
10065 22
10066 20
10067 19
10068 26
10069 23
10070 26
10071 23
10072 17
10073 22
10074 20
10075 18
10076 17
10077 15
10078 24
10080 33
10081 24
10083 33
10084 17
10085 22
10086 20
10087 19
10088 26
10089 23
10090 19
10091 26
10092 23
10093 17
10094 22
10095 20
10096 18
10097 17
10098 15
10099 24
10101 33
10102 24
10104 33
10105 17
10106 22
10107 20
10108 19
10109 26
10110 23
10111 19
10112 26
10113 23
10114 17
10115 20
10116 18
10117 17
10118 20
10119 29
10120 25
10121 20
10122 29
10123 25
10124 16
10125 19
10126 18
10127 18
10128 23
10129 21
10130 18
10131 23
10132 21
10133 16
10134 19
10135 18
10136 15
10137 24
10139 33
10140 24
10142 33
10143 17
10144 22
10145 20
10146 19
10147 26
10148 23
10149 19
10150 26
10151 23
10152 17
10153 22
10154 20
10155 18
10156 17
10157 29
10158 32
10165 34
10166 39
10167 37
10168 36
10171 36
10174 34
10175 39
10176 37
10177 35
10178 34
10179 32
10185 34
10186 39
10187 37
10188 36
10191 36
10193 34
10194 39
10195 37
10196 35
10197 34
10198 37
10201 37
10204 33
10205 36
10206 35
10207 35
10209 38
10210 35
10212 38
10213 33
10214 36
10215 35
10222 34
10223 39
10224 37
10225 36
10228 36
10231 34
10232 39
10233 37
10234 35
10235 34
10236 32
10243 34
10244 39
10245 37
10246 36
10249 36
10252 34
10253 39
10254 37
10255 35
10256 34
10257 32
10263 34
10264 39
10265 37
10266 36
10269 36
10272 34
10273 39
10274 37
10275 35
10276 34
10277 37
10280 37
10283 33
10284 36
10285 35
10286 35
10288 38
10289 35
10291 38
10292 33
10293 36
10294 35
10295 32
10302 34
10303 39
10304 37
10305 36
10308 36
10310 34
10311 39
10312 37
10313 35
10314 21
10315 24
10316 33
10319 33
10322 26
10323 31
10324 29
10325 28
10326 35
10327 32
10328 28
10329 35
10330 32
10331 26
10332 29
10333 27
10334 26
10335 24
10336 33
10339 33
10342 26
10343 31
10344 29
10345 28
10346 35
10347 32
10348 28
10349 35
10350 26
10351 31
10352 29
10353 27
10354 26
10355 29
10356 34
10357 29
10358 38
10359 34
10360 25
10361 28
10362 27
10363 27
10364 32
10365 30
10366 32
10367 30
10368 25
10369 28
10370 27
10371 24
10372 33
10375 33
10377 26
10378 31
10379 29
10380 28
10381 35
10382 32
10383 28
10384 35
10385 32
10386 26
10387 31
10388 29
10389 27
10390 26
10391 24
10392 33
10395 33
10398 26
10399 31
10400 29
10401 28
10402 35
10403 32
10404 28
10405 35
10406 32
10407 26
10408 31
10409 29
10410 27
10411 26
10412 24
10413 33
10416 33
10419 26
10420 31
10421 29
10422 35
10423 32
10424 28
10425 35
10426 26
10427 31
10428 29
10429 27
10430 26
10431 29
10432 38
10433 34
10434 29
10435 38
10436 34
10437 25
10438 28
10439 27
10440 32
10441 30
10442 27
10443 32
10444 30
10445 25
10446 28
10447 27
10448 24
10449 33
10452 33
10455 26
10456 31
10457 29
10458 35
10459 32
10460 28
10461 32
10462 26
10463 31
10464 29
10465 26
10466 5
10467 8
10468 17
10469 34
10470 26
10471 17
10472 34
10473 26
10474 10
10475 15
10476 13
10477 19
10478 16
10479 12
10480 19
10481 16
10482 10
10483 15
10484 13
10485 11
10486 10
10487 8
10488 17
10489 34
10490 26
10491 17
10492 34
10493 26
10494 10
10495 15
10496 13
10497 12
10498 19
10499 12
10500 19
10501 10
10502 15
10503 13
10504 11
10505 10
10506 13
10507 22
10508 18
10509 13
10510 22
10511 18
10512 9
10513 12
10514 11
10515 11
10516 16
10517 14
10518 11
10519 16
10520 14
10521 9
10522 12
10523 11
10524 8
10525 17
10526 34
10527 26
10528 17
10529 34
10530 26
10531 10
10532 15
10533 12
10534 19
10535 16
10536 12
10537 19
10538 16
10539 10
10540 15
10541 13
10542 11
10543 10
10544 8
10545 17
10546 34
10547 26
10548 17
10549 34
10550 26
10551 10
10552 15
10553 13
10554 12
10555 19
10556 16
10557 12
10558 19
10559 16
10560 10
10561 15
10562 13
10563 11
10564 10
10565 8
10566 17
10567 34
10568 26
10569 17
10570 34
10571 26
10572 10
10573 15
10574 13
10575 12
10576 19
10577 12
10578 19
10579 10
10580 15
10581 13
10582 11
10583 13
10584 22
10585 18
10586 13
10587 22
10588 18
10589 9
10590 12
10591 11
10592 11
10593 16
10594 14
10595 11
10596 16
10597 14
10598 9
10599 12
10600 11
10601 8
10602 17
10603 34
10604 26
10605 17
10606 34
10607 26
10608 10
10609 15
10610 13
10611 12
10612 19
10613 16
10614 12
10615 19
10616 16
10617 10
10618 15
10619 13
10620 11
10621 10
10622 10
10623 13
10624 22
10625 39
10626 31
10627 22
10628 39
10629 31
10630 15
10631 20
10632 18
10633 17
10634 24
10635 17
10636 21
10637 15
10638 20
10639 18
10640 16
10641 15
10642 13
10643 22
10644 39
10645 31
10646 22
10647 39
10648 31
10649 15
10650 20
10651 18
10652 17
10653 24
10654 21
10655 17
10656 24
10657 21
10658 15
10659 20
10660 18
10661 16
10662 15
10663 18
10664 27
10665 23
10666 18
10667 27
10668 23
10669 14
10670 17
10671 16
10672 16
10673 21
10674 19
10675 16
10676 21
10677 19
10678 14
10679 17
10680 16
10681 13
10682 22
10683 39
10684 31
10685 22
10686 39
10687 31
10688 15
10689 20
10690 18
10691 17
10692 24
10693 21
10694 17
10695 24
10696 21
10697 15
10698 20
10699 18
10700 16
10701 15
10702 13
10703 39
10704 31
10705 22
10706 39
10707 31
10708 15
10709 20
10710 18
10711 17
10712 24
10713 21
10714 17
10715 24
10716 21
10717 15
10718 20
10719 18
10720 16
10721 15
10722 13
10723 22
10724 39
10725 31
10726 22
10727 39
10728 31
10729 15
10730 20
10731 18
10732 17
10733 24
10734 21
10735 17
10736 24
10737 21
10738 15
10739 20
10740 18
10741 16
10742 15
10743 18
10744 27
10745 18
10746 27
10747 23
10748 14
10749 17
10750 16
10751 16
10752 21
10753 19
10754 16
10755 19
10756 14
10757 17
10758 16
10759 13
10760 22
10761 39
10762 31
10763 22
10764 39
10765 31
10766 15
10767 20
10768 18
10769 17
10770 21
10771 17
10772 21
10773 15
10774 20
10775 18
10776 16
10777 15
10778 8
10779 20
10780 37
10781 20
10782 37
10783 29
10784 13
10785 18
10786 16
10787 15
10788 22
10789 19
10790 15
10791 19
10792 13
10793 18
10794 16
10795 14
10796 13
10797 11
10798 20
10799 37
10800 29
10801 20
10802 37
10803 29
10804 13
10805 18
10806 16
10807 15
10808 22
10809 19
10810 19
10811 13
10812 18
10813 16
10814 14
10815 13
10816 16
10817 25
10818 21
10819 16
10820 25
10821 21
10822 12
10823 15
10824 14
10825 14
10826 19
10827 17
10828 14
10829 19
10830 17
10831 12
10832 15
10833 14
10834 11
10835 20
10836 37
10837 29
10838 20
10839 37
10840 29
10841 18
10842 16
10843 15
10844 22
10845 19
10846 15
10847 22
10848 19
10849 13
10850 18
10851 14
10852 13
10853 11
10854 20
10855 37
10856 29
10857 20
10858 37
10859 29
10860 13
10861 18
10862 16
10863 15
10864 22
10865 19
10866 22
10867 19
10868 13
10869 18
10870 16
10871 14
10872 13
10873 11
10874 20
10875 37
10876 29
10877 20
10878 37
10879 29
10880 13
10881 18
10882 16
10883 15
10884 22
10885 19
10886 15
10887 22
10888 19
10889 13
10890 18
10891 16
10892 14
10893 13
10894 16
10895 25
10896 21
10897 16
10898 25
10899 21
10900 12
10901 15
10902 14
10903 19
10904 17
10905 19
10906 17
10907 12
10908 15
10909 14
10910 11
10911 20
10912 37
10913 29
10914 20
10915 37
10916 29
10917 13
10918 18
10919 16
10920 15
10921 22
10922 19
10923 15
10924 22
10925 19
10926 13
10927 18
10928 16
10929 14
10930 13
10931 7
10932 10
10933 19
10934 36
10935 28
10936 36
10937 28
10938 12
10939 17
10940 15
10941 14
10942 21
10943 18
10944 14
10945 21
10946 18
10947 12
10948 17
10949 15
10950 13
10951 12
10952 10
10953 19
10954 36
10955 28
10956 19
10957 36
10958 28
10959 12
10960 17
10961 14
10962 21
10963 18
10964 14
10965 21
10966 18
10967 12
10968 17
10969 13
10970 12
10971 15
10972 24
10973 20
10974 15
10975 24
10976 20
10977 11
10978 14
10979 13
10980 13
10981 18
10982 16
10983 13
10984 18
10985 16
10986 11
10987 14
10988 13
10989 10
10990 19
10991 36
10992 28
10993 19
10994 36
10995 28
10996 12
10997 17
10998 15
10999 14
11000 21
11001 18
11002 14
11003 21
11004 18
11005 12
11006 17
11007 15
11008 13
11009 12
11010 10
11011 19
11012 36
11013 28
11014 19
11015 36
11016 28
11017 12
11018 17
11019 15
11020 14
11021 21
11022 18
11023 21
11024 18
11025 12
11026 17
11027 15
11028 13
11029 12
11030 10
11031 19
11032 36
11033 28
11034 19
11035 36
11036 28
11037 17
11038 15
11039 14
11040 21
11041 18
11042 14
11043 21
11044 18
11045 12
11046 17
11047 15
11048 13
11049 12
11050 15
11051 24
11052 20
11053 24
11054 20
11055 11
11056 14
11057 13
11058 13
11059 18
11060 16
11061 13
11062 18
11063 16
11064 11
11065 14
11066 13
11067 10
11068 19
11069 36
11070 28
11071 19
11072 36
11073 28
11074 12
11075 17
11076 15
11077 14
11078 21
11079 18
11080 14
11081 18
11082 12
11083 17
11084 15
11085 12
11086 14
11087 17
11088 26
11090 35
11091 26
11093 35
11094 19
11095 24
11096 22
11097 21
11098 28
11099 25
11100 21
11101 28
11102 25
11103 19
11104 24
11105 22
11106 20
11107 19
11108 17
11109 26
11111 35
11112 26
11114 35
11115 19
11116 24
11117 22
11118 21
11119 28
11120 25
11121 21
11122 28
11123 25
11124 19
11125 24
11126 20
11127 19
11128 22
11129 31
11130 27
11131 22
11132 31
11133 27
11134 18
11135 21
11136 20
11137 20
11138 25
11139 23
11140 20
11141 25
11142 23
11143 18
11144 21
11145 20
11146 17
11147 26
11149 35
11151 35
11152 19
11153 24
11154 22
11155 21
11156 28
11157 25
11158 21
11159 28
11160 25
11161 19
11162 24
11163 22
11164 20
11165 19
11166 17
11167 26
11169 35
11170 26
11172 35
11173 19
11174 22
11175 21
11176 28
11177 25
11178 21
11179 28
11180 25
11181 19
11182 24
11183 22
11184 20
11185 19
11186 17
11187 26
11188 35
11189 26
11191 35
11192 19
11193 24
11194 22
11195 28
11196 25
11197 21
11198 28
11199 25
11200 19
11201 24
11202 22
11203 20
11204 19
11205 31
11206 27
11207 22
11208 31
11209 27
11210 18
11211 21
11212 20
11213 20
11214 25
11215 23
11216 25
11217 23
11218 18
11219 20
11220 17
11221 26
11223 26
11225 35
11226 19
11227 24
11228 22
11229 21
11230 28
11231 25
11232 21
11233 28
11234 25
11235 19
11236 24
11237 22
11238 20
11239 19
11240 11
11241 14
11242 23
11244 32
11245 23
11247 32
11248 16
11249 21
11250 19
11251 18
11252 25
11253 22
11254 18
11255 25
11256 22
11257 16
11258 21
11259 19
11260 17
11261 16
11262 14
11263 23
11265 32
11266 23
11268 32
11269 16
11270 21
11271 19
11272 18
11273 25
11274 22
11275 18
11276 25
11277 22
11278 21
11279 19
11280 17
11281 16
11282 19
11283 28
11284 24
11285 19
11286 28
11287 24
11288 15
11289 18
11290 17
11291 17
11292 20
11293 17
11294 22
11295 15
11296 18
11297 17
11298 14
11299 23
11301 32
11302 23
11303 32
11304 16
11305 21
11306 19
11307 18
11308 25
11309 18
11310 25
11311 22
11312 16
11313 21
11314 19
11315 17
11316 16
11317 14
11318 23
11320 32
11321 23
11323 32
11324 16
11325 21
11326 19
11327 25
11328 22
11329 18
11330 25
11331 22
11332 16
11333 21
11334 19
11335 17
11336 16
11337 14
11338 23
11340 32
11341 23
11343 32
11344 16
11345 21
11346 19
11347 18
11348 25
11349 22
11350 18
11351 25
11352 22
11353 16
11354 21
11355 19
11356 17
11357 16
11358 19
11359 28
11360 24
11361 19
11362 28
11363 24
11364 15
11365 18
11366 17
11367 17
11368 22
11369 20
11370 17
11371 22
11372 20
11373 15
11374 18
11375 17
11376 14
11377 23
11379 32
11380 23
11382 32
11383 16
11384 21
11385 19
11386 18
11387 25
11388 22
11389 18
11390 25
11391 22
11392 16
11393 21
11394 19
11395 17
11396 16
11397 7
11398 10
11399 19
11400 36
11401 28
11402 19
11403 36
11404 28
11405 12
11406 17
11407 15
11408 14
11409 21
11410 18
11411 14
11412 21
11413 18
11414 12
11415 17
11416 15
11417 12
11418 10
11419 19
11420 36
11421 28
11422 19
11423 36
11424 28
11425 12
11426 17
11427 15
11428 14
11429 21
11430 18
11431 14
11432 21
11433 18
11434 12
11435 17
11436 15
11437 13
11438 12
11439 15
11440 24
11441 20
11442 15
11443 11
11444 14
11445 18
11446 16
11447 13
11448 18
11449 16
11450 11
11451 14
11452 13
11453 10
11454 19
11455 36
11456 28
11457 19
11458 36
11459 28
11460 12
11461 17
11462 15
11463 14
11464 21
11465 18
11466 14
11467 21
11468 18
11469 12
11470 17
11471 15
11472 13
11473 12
11474 10
11475 19
11476 36
11477 28
11478 19
11479 36
11480 12
11481 17
11482 15
11483 14
11484 18
11485 14
11486 21
11487 18
11488 12
11489 17
11490 15
11491 13
11492 12
11493 10
11494 19
11495 36
11496 28
11497 19
11498 36
11499 28
11500 12
11501 17
11502 15
11503 14
11504 21
11505 18
11506 14
11507 21
11508 18
11509 12
11510 17
11511 13
11512 12
11513 15
11514 24
11515 20
11516 15
11517 24
11518 20
11519 11
11520 14
11521 13
11522 13
11523 18
11524 16
11525 13
11526 18
11527 16
11528 11
11529 14
11530 13
11531 10
11532 19
11533 36
11534 28
11535 19
11536 36
11537 28
11538 12
11539 17
11540 15
11541 14
11542 21
11543 18
11544 14
11545 21
11546 18
11547 12
11548 17
11549 15
11550 13
11551 12
11552 14
11553 17
11554 26
11556 35
11557 26
11559 19
11560 24
11561 22
11562 21
11563 28
11564 25
11565 21
11566 28
11567 25
11568 19
11569 24
11570 22
11571 20
11572 19
11573 17
11574 26
11576 35
11577 26
11579 35
11580 19
11581 24
11582 22
11583 21
11584 28
11585 25
11586 21
11587 28
11588 25
11589 19
11590 24
11591 22
11592 20
11593 19
11594 22
11595 31
11596 27
11597 22
11598 31
11599 27
11600 18
11601 21
11602 20
11603 20
11604 25
11605 23
11606 20
11607 25
11608 23
11609 18
11610 21
11611 20
11612 17
11613 26
11615 35
11616 26
11618 35
11619 19
11620 24
11621 22
11622 28
11623 25
11624 21
11625 28
11626 25
11627 19
11628 24
11629 22
11630 20
11631 19
11632 17
11633 26
11635 35
11636 26
11638 35
11639 19
11640 24
11641 22
11642 21
11643 25
11644 21
11645 28
11646 25
11647 19
11648 24
11649 22
11650 20
11651 19
11652 17
11653 26
11655 35
11656 26
11658 35
11659 24
11660 22
11661 21
11662 28
11663 25
11664 21
11665 28
11666 25
11667 19
11668 24
11669 20
11670 19
11671 22
11672 31
11673 27
11674 22
11675 31
11676 27
11677 18
11678 21
11679 20
11680 20
11681 25
11682 23
11683 20
11684 25
11685 23
11686 18
11687 21
11688 20
11689 17
11690 26
11692 35
11693 26
11695 35
11696 19
11697 24
11698 21
11699 28
11700 25
11701 21
11702 28
11703 25
11704 19
11705 24
11706 22
11707 20
11708 19
11709 11
11710 14
11711 23
11713 32
11714 23
11716 32
11717 16
11718 21
11719 19
11720 18
11721 25
11722 22
11723 18
11724 25
11725 22
11726 16
11727 21
11728 19
11729 17
11730 16
11731 14
11732 23
11734 32
11735 23
11737 32
11738 16
11739 21
11740 19
11741 18
11742 25
11743 22
11744 18
11745 25
11746 22
11747 16
11748 21
11749 19
11750 17
11751 16
11752 19
11753 28
11754 19
11755 28
11756 24
11757 15
11758 18
11759 17
11760 22
11761 20
11762 17
11763 22
11764 20
11765 18
11766 17
11767 14
11768 23
11770 32
11771 23
11773 32
11774 16
11775 21
11776 19
11777 25
11778 22
11779 18
11780 25
11781 22
11782 16
11783 21
11784 19
11785 17
11786 16
11787 14
11788 23
11790 32
11792 32
11793 16
11794 21
11795 19
11796 18
11797 25
11798 22
11799 25
11800 22
11801 16
11802 21
11803 19
11804 17
11805 16
11806 14
11807 23
11809 32
11810 23
11811 32
11812 21
11813 19
11814 18
11815 25
11816 22
11817 18
11818 25
11819 22
11820 16
11821 21
11822 17
11823 16
11824 19
11825 28
11826 24
11827 19
11828 28
11829 24
11830 15
11831 18
11832 17
11833 17
11834 22
11835 20
11836 15
11837 18
11838 17
11839 14
11840 23
11842 32
11843 23
11845 32
11846 16
11847 21
11848 19
11849 18
11850 25
11851 22
11852 18
11853 25
11854 22
11855 16
11856 21
11857 19
11858 17
11859 5
11860 8
11861 17
11862 34
11863 26
11864 17
11865 34
11866 26
11867 10
11868 15
11869 13
11870 19
11871 16
11872 12
11873 19
11874 16
11875 10
11876 15
11877 13
11878 11
11879 10
11880 8
11881 17
11882 34
11883 26
11884 17
11885 34
11886 26
11887 10
11888 15
11889 13
11890 12
11891 19
11892 16
11893 12
11894 19
11895 16
11896 10
11897 15
11898 13
11899 11
11900 10
11901 13
11902 22
11903 18
11904 13
11905 22
11906 18
11907 9
11908 12
11909 11
11910 11
11911 16
11912 14
11913 11
11914 16
11915 14
11916 12
11917 11
11918 8
11919 17
11920 34
11921 26
11922 17
11923 34
11924 26
11925 10
11926 15
11927 13
11928 12
11929 19
11930 16
11931 12
11932 19
11933 16
11934 10
11935 15
11936 13
11937 11
11938 10
11939 8
11940 17
11941 34
11942 26
11943 17
11944 34
11945 26
11946 10
11947 15
11948 13
11949 12
11950 19
11951 16
11952 12
11953 19
11954 16
11955 10
11956 15
11957 13
11958 11
11959 10
11960 8
11961 34
11962 26
11963 17
11964 34
11965 26
11966 10
11967 15
11968 13
11969 12
11970 19
11971 16
11972 12
11973 19
11974 16
11975 15
11976 13
11977 11
11978 10
11979 13
11980 22
11981 13
11982 22
11983 18
11984 9
11985 12
11986 11
11987 11
11988 16
11989 14
11990 11
11991 16
11992 14
11993 9
11994 17
11995 34
11996 26
11997 17
11998 34
11999 26
12000 10
12001 15
12002 13
12003 12
12004 19
12005 16
12006 12
12007 19
12008 16
12009 10
12010 13
12011 11
12012 10
12013 13
12014 22
12015 39
12016 31
12017 22
12018 39
12019 31
12020 15
12021 20
12022 18
12023 17
12024 24
12025 21
12026 17
12027 24
12028 21
12029 15
12030 20
12031 18
12032 16
12033 15
12034 13
12035 22
12036 39
12037 31
12038 22
12039 39
12040 31
12041 15
12042 20
12043 18
12044 17
12045 24
12046 21
12047 17
12048 24
12049 21
12050 20
12051 18
12052 16
12053 15
12054 18
12055 27
12056 23
12057 18
12058 23
12059 14
12060 17
12061 16
12062 16
12063 21
12064 19
12065 16
12066 21
12067 19
12068 14
12069 17
12070 16
12071 13
12072 22
12073 39
12074 31
12075 22
12076 39
12077 31
12078 15
12079 20
12080 18
12081 17
12082 24
12083 17
12084 24
12085 21
12086 15
12087 20
12088 18
12089 16
12090 15
12091 13
12092 22
12093 39
12094 31
12095 22
12096 39
12097 31
12098 15
12099 20
12100 18
12101 17
12102 21
12103 17
12104 24
12105 21
12106 15
12107 20
12108 18
12109 16
12110 13
12111 22
12112 39
12113 22
12114 39
12115 31
12116 15
12117 20
12118 18
12119 17
12120 24
12121 21
12122 17
12123 24
12124 21
12125 15
12126 20
12127 18
12128 16
12129 15
12130 18
12131 27
12132 23
12133 18
12134 27
12135 23
12136 14
12137 17
12138 16
12139 16
12140 21
12141 19
12142 16
12143 21
12144 19
12145 14
12146 17
12147 16
12148 13
12149 22
12150 39
12151 31
12152 22
12153 39
12154 31
12155 15
12156 20
12157 18
12158 17
12159 24
12160 21
12161 17
12162 24
12163 21
12164 20
12165 18
12166 16
12167 15
12168 8
12169 11
12170 20
12171 37
12172 29
12173 20
12174 37
12175 13
12176 18
12177 16
12178 15
12179 22
12180 19
12181 15
12182 22
12183 19
12184 13
12185 18
12186 16
12187 14
12188 13
12189 20
12190 37
12191 29
12192 20
12193 37
12194 29
12195 13
12196 18
12197 16
12198 15
12199 22
12200 19
12201 15
12202 22
12203 13
12204 18
12205 16
12206 14
12207 13
12208 16
12209 25
12210 21
12211 16
12212 21
12213 12
12214 15
12215 14
12216 19
12217 17
12218 14
12219 19
12220 17
12221 12
12222 15
12223 14
12224 11
12225 20
12226 29
12227 20
12228 37
12229 29
12230 13
12231 18
12232 16
12233 15
12234 22
12235 19
12236 15
12237 22
12238 19
12239 13
12240 18
12241 16
12242 14
12243 13
12244 11
12245 20
12246 37
12247 29
12248 20
12249 37
12250 29
12251 13
12252 18
12253 16
12254 15
12255 22
12256 19
12257 15
12258 22
12259 19
12260 18
12261 16
12262 14
12263 13
12264 11
12265 20
12266 37
12267 20
12268 37
12269 29
12270 13
12271 18
12272 16
12273 15
12274 22
12275 19
12276 15
12277 22
12278 19
12279 13
12280 18
12281 16
12282 14
12283 13
12284 16
12285 25
12286 21
12287 16
12288 25
12289 21
12290 12
12291 14
12292 14
12293 19
12294 17
12295 14
12296 19
12297 17
12298 15
12299 14
12300 11
12301 20
12302 37
12303 20
12304 37
12305 29
12306 13
12307 18
12308 16
12309 15
12310 22
12311 19
12312 15
12313 22
12314 19
12315 13
12316 18
12317 16
12318 14
12319 13
12320 6
12321 9
12322 18
12323 35
12324 27
12325 18
12326 35
12327 27
12328 11
12329 16
12330 14
12331 13
12332 20
12333 17
12334 13
12335 20
12336 17
12337 11
12338 16
12339 14
12340 12
12341 11
12342 9
12343 18
12344 35
12345 27
12346 18
12347 35
12348 27
12349 11
12350 16
12351 14
12352 13
12353 20
12354 17
12355 13
12356 20
12357 17
12358 11
12359 16
12360 14
12361 12
12362 11
12363 14
12364 23
12365 19
12366 14
12367 23
12368 19
12369 10
12370 13
12371 12
12372 17
12373 12
12374 17
12375 15
12376 10
12377 13
12378 9
12379 18
12380 35
12381 27
12382 18
12383 35
12384 27
12385 11
12386 16
12387 14
12388 13
12389 20
12390 17
12391 13
12392 20
12393 17
12394 11
12395 16
12396 14
12397 12
12398 11
12399 9
12400 18
12401 35
12402 27
12403 18
12404 27
12405 11
12406 16
12407 14
12408 13
12409 20
12410 17
12411 13
12412 20
12413 17
12414 11
12415 16
12416 14
12417 12
12418 11
12419 9
12420 18
12421 35
12422 27
12423 18
12424 35
12425 27
12426 11
12427 16
12428 14
12429 13
12430 20
12431 17
12432 13
12433 20
12434 17
12435 11
12436 14
12437 12
12438 11
12439 14
12440 23
12441 19
12442 14
12443 23
12444 19
12445 10
12446 13
12447 12
12448 12
12449 17
12450 15
12451 12
12452 17
12453 15
12454 10
12455 13
12456 12
12457 9
12458 18
12459 35
12460 27
12461 35
12462 27
12463 11
12464 16
12465 14
12466 13
12467 20
12468 17
12469 13
12470 20
12471 17
12472 11
12473 16
12474 14
12475 12
12476 11
12477 5
12478 8
12479 17
12480 34
12481 26
12482 17
12483 34
12484 26
12485 10
12486 15
12487 12
12488 19
12489 16
12490 12
12491 19
12492 16
12493 10
12494 15
12495 13
12496 11
12497 10
12498 8
12499 17
12500 34
12501 26
12502 17
12503 34
12504 26
12505 10
12506 15
12507 13
12508 12
12509 19
12510 16
12511 12
12512 19
12513 16
12514 10
12515 15
12516 13
12517 11
12518 10
12519 13
12520 22
12521 18
12522 13
12523 22
12524 18
12525 9
12526 11
12527 11
12528 16
12529 14
12530 11
12531 16
12532 14
12533 9
12534 12
12535 11
12536 8
12537 17
12538 34
12539 26
12540 17
12541 34
12542 26
12543 10
12544 15
12545 13
12546 12
12547 19
12548 16
12549 12
12550 16
12551 10
12552 15
12553 13
12554 11
12555 10
12556 8
12557 17
12558 34
12559 26
12560 17
12561 34
12562 26
12563 10
12564 15
12565 13
12566 12
12567 19
12568 12
12569 19
12570 16
12571 10
12572 15
12573 13
12574 11
12575 10
12576 8
12577 17
12578 34
12579 26
12580 17
12581 34
12582 26
12583 10
12584 15
12585 13
12586 19
12587 16
12588 12
12589 19
12590 16
12591 10
12592 15
12593 13
12594 11
12595 10
12596 13
12597 22
12598 18
12599 13
12600 22
12601 18
12602 9
12603 12
12604 11
12605 11
12606 16
12607 14
12608 11
12609 16
12610 14
12611 9
12612 12
12613 11
12614 8
12615 17
12616 34
12617 26
12618 17
12619 34
12620 26
12621 10
12622 15
12623 13
12624 12
12625 19
12626 16
12627 12
12628 19
12629 16
12630 10
12631 15
12632 13
12633 11
12634 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 around left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

1
WUG0 around right twice and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

2
WUG0 around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

3
WUG0 around right twice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

4
WUG0 opposite left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

5
turn right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

6
WUG0 and turn around left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

7
turn left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

8
WUG0 around right after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

9
WUG0 opposite left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

10
turn right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

11
WUG0 opposite left after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

12
turn around left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

13
WUG0 opposite left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

14
WUG0 left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

15
WUG0 opposite right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

16
WUG0 right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

17
WUG0 opposite left twice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

18
WUG0 around right and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

19
turn right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

20
WUG0 around right after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

21
WUG0 twice and WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

22
WUG0 opposite left after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

23
WUG0 around left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

24
WUG0 around right twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

25
WUG0 twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

26
WUG0 left and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

27
turn opposite right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

28
WUG0 opposite right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

29
WUG0 opposite right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

30
WUG0 opposite left twice and turn around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

31
WUG0 opposite left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

32
turn opposite left and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

33
turn around right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
turn left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

35
WUG0 around right twice and turn left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

36
WUG0 opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

37
WUG0 left and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

38
turn opposite right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

39
turn around right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

40
turn right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

41
WUG0 around left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

42
WUG0 left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

43
WUG0 around right thrice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

44
WUG0 right thrice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

45
WUG0 opposite right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

46
turn around left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

47
WUG0 around left and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

48
WUG0 opposite left thrice and turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

49
WUG0 opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

50
WUG0 around right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

51
WUG0 left thrice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

52
turn opposite left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

53
turn opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

54
turn left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

55
WUG0 opposite right thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

56
turn around right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

57
turn opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

58
turn left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

59
WUG0 around right twice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

60
turn left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

61
WUG0 thrice and WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

62
WUG0 twice and turn around right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

63
WUG0 opposite left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

64
turn around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

65
turn around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

66
WUG0 left thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

67
turn opposite left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

68
turn left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT

69
WUG0 around right twice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

70
turn opposite left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

71
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

72
WUG0 twice and WUG0 around left WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around left
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

73
WUG0 and turn right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

74
WUG0 right and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

75
turn around left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

76
WUG0 after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

77
WUG0 around right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

78
WUG0 around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

79
WUG0 opposite right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

80
WUG0 right twice and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

81
WUG0 opposite right thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

82
WUG0 opposite left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

83
WUG0 opposite right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

84
WUG0 opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

85
WUG0 thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

86
WUG0 left after WUG0 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump
--
I_JUMP I_TURN_LEFT I_JUMP

87
turn opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

88
turn opposite right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

89
turn left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

90
WUG0 and turn opposite left WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

91
turn left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

92
turn right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

93
turn left and WUG0 around right thrice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

94
WUG0 opposite right and WUG0 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

95
WUG0 around left twice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

96
WUG0 around left twice after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

97
WUG0 opposite right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

98
WUG0 left twice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

99
turn around left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

100
WUG0 opposite left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

101
WUG0 around right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

102
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

103
WUG0 right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

104
turn around right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

105
turn opposite right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

106
WUG0 left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

107
turn right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

108
WUG0 around left twice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

109
turn right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

110
WUG0 around left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

111
WUG0 around right and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

112
WUG0 right thrice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

113
turn right twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

114
turn around left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

115
WUG0 right twice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

116
WUG0 thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

117
WUG0 opposite right thrice after turn right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

118
turn right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

119
WUG0 twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

120
WUG0 and turn opposite right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

121
WUG0 opposite right twice after turn left I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

122
WUG0 left and WUG0 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump
--
I_TURN_LEFT I_JUMP I_JUMP

123
WUG0 opposite right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

124
turn left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

125
WUG0 opposite right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

126
WUG0 around right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

127
WUG0 around left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

128
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

129
WUG0 around right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

130
WUG0 right thrice and WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

131
WUG0 around right and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

132
WUG0 left and turn right twice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

133
WUG0 after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

134
WUG0 thrice and WUG0 opposite left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

135
WUG0 around right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

136
WUG0 left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

137
WUG0 right thrice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

138
turn opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

139
WUG0 left and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

140
WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

141
WUG0 twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

142
WUG0 left thrice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

143
WUG0 opposite right twice and turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

144
turn around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

145
turn around right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

146
WUG0 left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

147
WUG0 left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

148
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

149
WUG0 around right thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

150
WUG0 opposite right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

151
turn opposite left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

152
turn opposite left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

153
turn opposite right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

154
WUG0 around right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

155
WUG0 around right twice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

156
turn opposite left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

157
WUG0 opposite right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

158
WUG0 opposite left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

159
turn left thrice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

160
WUG0 after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

161
WUG0 around right after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

162
WUG0 left thrice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

163
turn around left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

164
WUG0 opposite right twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

165
turn left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

166
turn opposite right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

167
WUG0 thrice and WUG0 twice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

168
WUG0 around right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

169
WUG0 around right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

170
WUG0 around left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

171
WUG0 thrice and WUG0 opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

172
turn opposite right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

173
WUG0 left thrice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

174
WUG0 opposite left twice and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

175
WUG0 around right and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

176
turn left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

177
turn around right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

178
WUG0 right thrice and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

179
WUG0 left thrice and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

180
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

181
WUG0 right and WUG0 twice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump twice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

182
turn opposite left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

183
turn opposite left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

184
WUG0 opposite left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

185
WUG0 opposite left thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

186
WUG0 opposite left and turn around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

187
WUG0 right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

188
turn around left and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

189
WUG0 thrice and turn right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

190
WUG0 around left twice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

191
WUG0 right twice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

192
turn left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

193
WUG0 left twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

194
WUG0 left twice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

195
WUG0 right I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right
--
I_TURN_RIGHT I_JUMP

196
turn left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

197
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

198
WUG0 twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

199
turn right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

200
WUG0 right and turn around left I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

201
turn right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

202
WUG0 right twice and turn left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

203
WUG0 thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

204
WUG0 left twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

205
WUG0 right and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

206
turn opposite right thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

207
WUG0 left twice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

208
turn opposite right after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

209
WUG0 left after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

210
WUG0 opposite left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

211
WUG0 after WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump
--
I_JUMP I_JUMP

212
WUG0 after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

213
WUG0 around left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

214
WUG0 thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

215
turn around left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

216
turn around right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

217
WUG0 right twice and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

218
turn right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

219
turn right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT

220
turn right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

221
WUG0 around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

222
turn left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

223
turn opposite right and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

224
WUG0 right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

225
WUG0 thrice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

226
WUG0 around left thrice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

227
WUG0 around left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

228
turn opposite left thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

229
WUG0 right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

230
WUG0 right twice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

231
turn opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

232
WUG0 around left twice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

233
WUG0 around right and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

234
WUG0 opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

235
WUG0 twice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

236
WUG0 opposite left twice and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

237
turn around right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

238
turn right and WUG0 around left thrice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

239
WUG0 around left and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

240
WUG0 left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

241
WUG0 left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

242
turn right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

243
turn right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

244
WUG0 after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

245
WUG0 around left and turn opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

246
turn right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

247
WUG0 around left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

248
turn left twice and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

249
WUG0 around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

250
turn opposite left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

251
WUG0 around right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

252
WUG0 twice after WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump
--
I_JUMP I_JUMP I_JUMP

253
WUG0 around left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

254
WUG0 thrice and WUG0 right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

255
WUG0 right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

256
WUG0 opposite right thrice and turn around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

257
turn around left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

258
WUG0 opposite right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

259
turn around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

260
turn left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

261
turn opposite right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

262
WUG0 opposite left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

263
WUG0 around left after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

264
turn around right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

265
WUG0 opposite right twice and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

266
WUG0 right twice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

267
WUG0 opposite right and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

268
turn around left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

269
WUG0 right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

270
turn around right twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

271
turn opposite left twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

272
WUG0 left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

273
WUG0 around left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

274
WUG0 right thrice and WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

275
WUG0 opposite right and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

276
WUG0 and turn around right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

277
turn opposite left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

278
WUG0 thrice and turn around right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

279
WUG0 right twice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

280
WUG0 around left twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

281
turn right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

282
WUG0 opposite left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

283
WUG0 opposite left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

284
WUG0 opposite left and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

285
turn right thrice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

286
WUG0 around left twice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

287
WUG0 around left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

288
WUG0 right thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

289
WUG0 opposite left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

290
WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP

291
WUG0 left and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

292
WUG0 opposite left after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

293
turn around left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

294
turn around right and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

295
WUG0 opposite right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

296
WUG0 around right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

297
WUG0 thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

298
WUG0 left thrice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

299
WUG0 left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

300
WUG0 right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

301
WUG0 opposite left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

302
WUG0 around right thrice and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

303
WUG0 around right thrice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

304
WUG0 right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

305
turn right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

306
turn opposite right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

307
WUG0 opposite left twice and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

308
turn around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

309
turn around left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

310
turn around right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

311
turn around right twice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

312
WUG0 left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

313
WUG0 opposite left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

314
turn around right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

315
turn around left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

316
WUG0 around right after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

317
WUG0 right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

318
WUG0 opposite left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

319
WUG0 opposite left thrice and turn around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

320
WUG0 twice and WUG0 opposite left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

321
turn opposite right and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

322
WUG0 after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

323
WUG0 around left and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

324
WUG0 right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

325
WUG0 and WUG0 opposite left twice WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

326
WUG0 after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

327
WUG0 right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

328
WUG0 around left and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

329
turn around right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

330
turn around left and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

331
turn left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

332
WUG0 right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

333
turn opposite left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

334
WUG0 right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

335
WUG0 right twice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

336
WUG0 around left thrice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

337
WUG0 opposite left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

338
WUG0 left twice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

339
turn around right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

340
WUG0 opposite left twice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

341
WUG0 opposite left and turn around right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

342
WUG0 opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

343
WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

344
WUG0 right twice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

345
WUG0 around left and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

346
turn opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

347
WUG0 around right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

348
WUG0 opposite right thrice and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

349
WUG0 around left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

350
WUG0 left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

351
WUG0 opposite left thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

352
WUG0 opposite left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

353
WUG0 around right and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

354
WUG0 and turn opposite left twice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

355
WUG0 around right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

356
WUG0 opposite left thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

357
WUG0 opposite right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

358
WUG0 opposite left thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

359
turn right and WUG0 thrice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump thrice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

360
WUG0 around right thrice and WUG0 left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

361
turn opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

362
turn left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

363
WUG0 twice and turn opposite right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

364
WUG0 and WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump
--
I_JUMP I_JUMP

365
WUG0 after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

366
turn opposite left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

367
WUG0 around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

368
turn around left twice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

369
turn opposite left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

370
turn around right thrice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

371
WUG0 opposite left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

372
WUG0 left thrice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

373
WUG0 right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

374
turn right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP

375
turn around left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

376
WUG0 opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

377
turn right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

378
WUG0 right and turn opposite left I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

379
WUG0 around left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

380
WUG0 opposite left twice and turn around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

381
WUG0 right twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
turn around right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

383
WUG0 around left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

384
WUG0 around right after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

385
WUG0 around left thrice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

386
turn around left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

387
WUG0 around right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

388
look WUG0 twice and turn around right twice WUG1 I_LOOK WUG1 I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
look right twice and turn around right twice
--
I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

389
run around WUG0 twice after run I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run around right twice after run
--
I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

390
walk opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk opposite right thrice after walk opposite left
--
I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK

391
turn around left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

392
turn right after WUG0 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump
--
I_JUMP I_TURN_RIGHT

393
turn opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

394
walk around right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
walk around right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

395
WUG0 around right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

396
WUG0 opposite left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

397
WUG0 right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

398
WUG0 thrice after turn right I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn right
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

399
WUG0 left and WUG0 thrice I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump thrice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

400
WUG0 opposite right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

401
WUG0 around left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

402
turn opposite right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

403
WUG0 twice and WUG0 opposite right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

404
WUG0 opposite right thrice after look left I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run opposite right thrice after look left
--
I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN

405
WUG0 opposite right twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

406
WUG0 twice and WUG0 opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

407
WUG0 left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

408
