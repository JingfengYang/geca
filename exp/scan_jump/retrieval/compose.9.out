12632
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 13
11 11
12 10
13 17
14 14
15 10
16 17
17 8
18 13
19 11
20 9
21 8
22 6
23 15
24 32
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 14
38 8
39 13
40 11
41 9
42 8
43 11
44 20
45 16
46 11
47 20
48 16
49 7
50 10
51 9
52 9
53 14
54 12
55 9
56 14
57 12
58 7
59 10
60 9
61 6
62 15
63 32
64 24
65 15
66 32
67 24
68 8
69 13
70 11
71 10
72 17
73 14
74 10
75 17
76 14
77 8
78 13
79 11
80 9
81 8
82 6
83 15
84 32
85 24
86 15
87 32
88 24
89 8
90 13
91 11
92 10
93 17
94 14
95 10
96 17
97 14
98 8
99 13
100 11
101 9
102 8
103 6
104 15
105 32
106 24
107 15
108 32
109 24
110 8
111 13
112 11
113 10
114 17
115 14
116 10
117 17
118 14
119 8
120 13
121 11
122 9
123 8
124 11
125 20
126 16
127 11
128 20
129 16
130 7
131 10
132 9
133 9
134 14
135 9
136 14
137 12
138 7
139 10
140 9
141 6
142 15
143 32
144 24
145 15
146 32
147 24
148 8
149 13
150 11
151 10
152 17
153 14
154 10
155 17
156 14
157 8
158 13
159 11
160 9
161 8
162 12
163 15
164 24
166 33
167 24
169 33
170 17
171 22
172 20
173 19
174 26
175 23
176 19
177 26
178 23
179 17
180 22
181 20
182 18
183 17
184 15
185 24
187 33
188 24
190 33
191 17
192 22
193 20
194 19
195 26
196 23
197 19
198 26
199 23
200 17
201 22
202 20
203 18
204 17
205 20
206 29
207 25
208 20
209 29
210 25
211 16
212 19
213 18
214 18
215 23
216 21
217 18
218 23
219 16
220 19
221 18
222 15
223 24
225 33
226 24
228 33
229 17
230 22
231 20
232 19
233 23
234 19
235 26
236 23
237 17
238 22
239 20
240 18
241 17
242 15
243 24
245 33
246 24
248 33
249 17
250 22
251 20
252 19
253 26
254 23
255 19
256 26
257 23
258 17
259 22
260 20
261 18
262 17
263 15
264 24
266 33
267 24
269 33
270 17
271 22
272 20
273 19
274 26
275 23
276 19
277 26
278 23
279 17
280 22
281 20
282 18
283 17
284 20
285 29
286 25
287 20
288 29
289 25
290 16
291 19
292 18
293 18
294 23
295 21
296 18
297 23
298 21
299 16
300 19
301 18
302 15
303 24
305 33
306 24
308 33
309 17
310 22
311 20
312 19
313 26
314 23
315 19
316 26
317 17
318 22
319 20
320 17
321 29
322 32
329 34
330 39
331 37
332 36
333 36
336 34
337 39
338 37
339 35
340 34
341 32
347 34
348 39
349 37
350 36
353 36
356 34
357 37
358 35
359 34
360 37
363 37
366 33
367 36
368 35
369 35
371 38
372 35
374 38
375 33
376 36
377 35
378 32
385 34
386 39
387 37
388 36
390 36
393 34
394 39
395 37
396 35
397 34
398 32
404 34
405 39
406 37
407 36
410 36
413 39
414 37
415 35
416 34
417 32
424 34
425 39
426 37
427 36
430 36
433 34
434 39
435 37
436 35
437 34
438 37
441 37
444 33
445 36
446 35
447 35
449 38
450 35
452 38
453 36
454 35
455 32
462 34
463 39
464 37
465 36
468 36
470 34
471 39
472 37
473 35
474 34
475 21
476 24
479 33
482 26
483 31
484 29
485 28
486 35
487 28
488 35
489 32
490 26
491 31
492 27
493 26
494 24
495 33
498 33
501 26
502 31
503 29
504 28
505 35
506 32
507 28
508 35
509 26
510 31
511 29
512 27
513 26
514 29
515 38
516 34
517 29
518 38
519 34
520 25
521 28
522 27
523 27
524 32
525 30
526 27
527 32
528 30
529 25
530 28
531 24
532 33
535 33
537 26
538 31
539 29
540 28
541 35
542 32
543 28
544 35
545 32
546 26
547 31
548 29
549 27
550 26
551 24
552 33
555 33
558 26
559 31
560 29
561 28
562 35
563 32
564 28
565 35
566 32
567 26
568 31
569 29
570 27
571 26
572 24
573 33
576 33
579 26
580 31
581 29
582 28
583 35
584 32
585 28
586 35
587 32
588 26
589 31
590 29
591 27
592 26
593 29
594 38
595 34
596 29
597 38
598 34
599 25
600 28
601 27
602 27
603 32
604 30
605 27
606 32
607 30
608 28
609 27
610 24
611 33
614 33
617 26
618 31
619 29
620 28
621 35
622 32
623 28
624 35
625 32
626 26
627 31
628 29
629 26
630 12
631 15
632 24
634 33
635 24
637 33
638 17
639 22
640 20
641 19
642 26
643 23
644 19
645 26
646 23
647 22
648 20
649 18
650 17
651 15
652 24
654 33
655 24
657 33
658 17
659 22
660 20
661 19
662 26
663 23
664 19
665 26
666 23
667 17
668 22
669 20
670 18
671 17
672 20
673 29
674 25
675 20
676 29
677 25
678 16
679 19
680 18
681 18
682 23
683 21
684 18
685 23
686 21
687 16
688 19
689 18
690 15
691 24
692 33
693 24
695 33
696 17
697 22
698 20
699 19
700 26
701 23
702 19
703 26
704 23
705 17
706 22
707 18
708 17
709 15
710 24
712 33
714 33
715 17
716 22
717 20
718 26
719 23
720 19
721 26
722 23
723 17
724 22
725 20
726 18
727 15
728 24
730 33
731 24
733 33
734 17
735 22
736 20
737 19
738 26
739 23
740 19
741 26
742 23
743 17
744 22
745 20
746 18
747 17
748 20
749 29
750 25
751 20
752 29
753 25
754 16
755 19
756 18
757 18
758 23
759 21
760 18
761 23
762 21
763 16
764 19
765 18
766 15
767 24
769 33
770 24
772 33
773 17
774 22
775 20
776 19
777 26
778 23
779 19
780 26
781 23
782 17
783 22
784 20
785 18
786 17
787 29
788 32
794 34
795 39
796 37
797 36
800 36
803 34
804 39
805 37
806 35
807 34
808 32
815 34
816 39
817 37
818 36
821 36
824 34
825 39
826 35
827 34
828 37
831 37
833 33
834 36
835 35
836 35
838 38
839 35
841 38
842 33
843 36
844 35
845 32
852 34
853 39
854 37
855 36
858 36
861 34
862 39
863 37
864 35
865 34
866 32
873 34
874 39
875 37
876 36
879 36
881 34
882 39
883 35
884 34
885 32
892 34
893 39
894 37
895 36
898 36
901 34
902 39
903 37
904 35
905 34
906 37
909 37
912 33
913 36
914 35
915 35
917 38
919 38
920 33
921 36
922 35
923 32
930 34
931 39
932 37
933 36
936 36
939 34
940 39
941 37
942 35
943 34
944 21
945 24
946 33
949 33
952 26
953 31
954 29
955 28
956 35
957 28
958 35
959 32
960 26
961 31
962 29
963 27
964 26
965 24
966 33
969 33
972 26
973 31
974 29
975 28
976 35
977 32
978 28
979 35
980 32
981 26
982 31
983 29
984 27
985 26
986 29
987 38
988 34
989 29
990 38
991 34
992 25
993 28
994 27
995 27
996 32
997 30
998 27
999 32
1000 30
1001 25
1002 28
1003 27
1004 24
1005 33
1007 33
1010 26
1011 31
1012 28
1013 35
1014 32
1015 28
1016 35
1017 32
1018 26
1019 31
1020 29
1021 27
1022 26
1023 24
1024 33
1027 33
1030 26
1031 31
1032 29
1033 28
1034 35
1035 32
1036 35
1037 32
1038 26
1039 29
1040 27
1041 26
1042 24
1043 33
1046 33
1049 26
1050 31
1051 29
1052 28
1053 35
1054 32
1055 35
1056 32
1057 26
1058 31
1059 29
1060 27
1061 29
1062 38
1063 34
1064 29
1065 38
1066 34
1067 25
1068 28
1069 27
1070 27
1071 30
1072 27
1073 25
1074 28
1075 27
1076 33
1079 33
1082 26
1083 31
1084 29
1085 28
1086 35
1087 32
1088 28
1089 35
1090 32
1091 26
1092 31
1093 29
1094 27
1095 26
1096 5
1097 8
1098 17
1099 34
1100 26
1101 17
1102 34
1103 26
1104 10
1105 15
1106 13
1107 19
1108 16
1109 12
1110 19
1111 16
1112 10
1113 15
1114 13
1115 11
1116 10
1117 8
1118 34
1119 26
1120 17
1121 34
1122 26
1123 10
1124 15
1125 13
1126 12
1127 19
1128 16
1129 12
1130 19
1131 16
1132 10
1133 15
1134 13
1135 11
1136 10
1137 13
1138 22
1139 18
1140 13
1141 22
1142 18
1143 9
1144 12
1145 11
1146 11
1147 16
1148 14
1149 11
1150 16
1151 14
1152 9
1153 12
1154 8
1155 17
1156 34
1157 26
1158 17
1159 34
1160 26
1161 10
1162 15
1163 13
1164 12
1165 19
1166 16
1167 12
1168 19
1169 16
1170 10
1171 15
1172 13
1173 11
1174 10
1175 8
1176 17
1177 34
1178 17
1179 34
1180 26
1181 10
1182 15
1183 13
1184 12
1185 19
1186 16
1187 12
1188 16
1189 10
1190 15
1191 13
1192 11
1193 10
1194 8
1195 17
1196 34
1197 26
1198 17
1199 34
1200 26
1201 10
1202 15
1203 13
1204 12
1205 19
1206 16
1207 12
1208 19
1209 16
1210 10
1211 15
1212 13
1213 11
1214 10
1215 13
1216 22
1217 18
1218 13
1219 22
1220 18
1221 9
1222 12
1223 11
1224 11
1225 16
1226 14
1227 11
1228 16
1229 14
1230 9
1231 12
1232 11
1233 8
1234 17
1235 34
1236 26
1237 17
1238 34
1239 26
1240 10
1241 15
1242 13
1243 12
1244 19
1245 16
1246 12
1247 19
1248 16
1249 10
1250 15
1251 13
1252 11
1253 10
1254 10
1255 13
1256 22
1257 39
1258 31
1259 22
1260 39
1261 15
1262 20
1263 18
1264 17
1265 24
1266 21
1267 17
1268 24
1269 21
1270 15
1271 20
1272 18
1273 16
1274 15
1275 13
1276 22
1277 39
1278 31
1279 22
1280 39
1281 31
1282 15
1283 20
1284 18
1285 17
1286 24
1287 21
1288 17
1289 24
1290 21
1291 15
1292 20
1293 18
1294 16
1295 15
1296 18
1297 27
1298 23
1299 18
1300 27
1301 23
1302 14
1303 17
1304 16
1305 16
1306 21
1307 19
1308 16
1309 21
1310 19
1311 14
1312 17
1313 16
1314 13
1315 22
1316 39
1317 31
1318 22
1319 39
1320 31
1321 15
1322 20
1323 18
1324 17
1325 24
1326 21
1327 17
1328 24
1329 21
1330 15
1331 20
1332 18
1333 16
1334 15
1335 13
1336 22
1337 39
1338 31
1339 22
1340 39
1341 31
1342 15
1343 20
1344 18
1345 17
1346 24
1347 21
1348 17
1349 24
1350 21
1351 15
1352 20
1353 18
1354 16
1355 15
1356 13
1357 22
1358 31
1359 22
1360 39
1361 31
1362 15
1363 20
1364 18
1365 17
1366 24
1367 21
1368 17
1369 24
1370 21
1371 15
1372 20
1373 18
1374 16
1375 15
1376 18
1377 27
1378 23
1379 27
1380 23
1381 14
1382 17
1383 16
1384 16
1385 21
1386 19
1387 16
1388 21
1389 19
1390 14
1391 17
1392 16
1393 13
1394 22
1395 39
1396 31
1397 22
1398 31
1399 15
1400 20
1401 18
1402 17
1403 24
1404 21
1405 17
1406 24
1407 21
1408 15
1409 20
1410 18
1411 16
1412 15
1413 8
1414 11
1415 20
1416 37
1417 29
1418 20
1419 37
1420 29
1421 13
1422 18
1423 16
1424 15
1425 22
1426 19
1427 15
1428 22
1429 19
1430 13
1431 18
1432 16
1433 14
1434 13
1435 11
1436 20
1437 37
1438 29
1439 37
1440 29
1441 13
1442 18
1443 16
1444 15
1445 22
1446 19
1447 15
1448 19
1449 13
1450 18
1451 16
1452 14
1453 13
1454 16
1455 25
1456 21
1457 16
1458 25
1459 21
1460 12
1461 15
1462 14
1463 14
1464 19
1465 17
1466 14
1467 19
1468 17
1469 12
1470 15
1471 14
1472 11
1473 20
1474 37
1475 29
1476 20
1477 37
1478 29
1479 13
1480 18
1481 16
1482 15
1483 19
1484 15
1485 22
1486 19
1487 13
1488 18
1489 16
1490 14
1491 13
1492 11
1493 20
1494 37
1495 29
1496 20
1497 37
1498 29
1499 13
1500 18
1501 16
1502 15
1503 22
1504 19
1505 15
1506 22
1507 19
1508 13
1509 18
1510 16
1511 14
1512 13
1513 11
1514 20
1515 37
1516 29
1517 20
1518 37
1519 29
1520 13
1521 18
1522 16
1523 22
1524 19
1525 15
1526 22
1527 19
1528 13
1529 18
1530 16
1531 14
1532 13
1533 16
1534 25
1535 21
1536 16
1537 25
1538 21
1539 12
1540 15
1541 14
1542 14
1543 19
1544 17
1545 14
1546 19
1547 17
1548 12
1549 15
1550 14
1551 11
1552 20
1553 37
1554 29
1555 20
1556 37
1557 29
1558 13
1559 18
1560 16
1561 15
1562 22
1563 15
1564 22
1565 19
1566 13
1567 18
1568 16
1569 14
1570 13
1571 7
1572 10
1573 19
1574 36
1575 28
1576 19
1577 36
1578 28
1579 12
1580 17
1581 15
1582 14
1583 21
1584 18
1585 14
1586 21
1587 18
1588 12
1589 17
1590 15
1591 13
1592 12
1593 10
1594 19
1595 36
1596 28
1597 19
1598 36
1599 12
1600 17
1601 15
1602 14
1603 21
1604 18
1605 14
1606 18
1607 12
1608 17
1609 15
1610 12
1611 15
1612 24
1613 20
1614 15
1615 24
1616 20
1617 11
1618 14
1619 13
1620 13
1621 18
1622 16
1623 13
1624 18
1625 16
1626 11
1627 14
1628 13
1629 10
1630 19
1631 36
1632 28
1633 19
1634 36
1635 28
1636 12
1637 17
1638 15
1639 14
1640 21
1641 18
1642 14
1643 21
1644 18
1645 12
1646 17
1647 15
1648 13
1649 12
1650 10
1651 19
1652 36
1653 19
1654 36
1655 28
1656 12
1657 17
1658 15
1659 14
1660 21
1661 18
1662 14
1663 21
1664 18
1665 12
1666 17
1667 15
1668 13
1669 12
1670 10
1671 19
1672 36
1673 28
1674 19
1675 36
1676 28
1677 12
1678 17
1679 15
1680 14
1681 21
1682 18
1683 14
1684 21
1685 18
1686 12
1687 15
1688 13
1689 12
1690 15
1691 24
1692 20
1693 15
1694 24
1695 20
1696 11
1697 14
1698 13
1699 13
1700 18
1701 16
1702 13
1703 18
1704 16
1705 11
1706 14
1707 13
1708 10
1709 19
1710 36
1711 28
1712 19
1713 36
1714 28
1715 12
1716 17
1717 15
1718 14
1719 21
1720 18
1721 14
1722 21
1723 18
1724 12
1725 17
1726 15
1727 13
1728 12
1729 14
1730 17
1731 26
1733 35
1734 26
1736 35
1737 19
1738 24
1739 22
1740 21
1741 25
1742 21
1743 28
1744 25
1745 19
1746 24
1747 22
1748 20
1749 19
1750 17
1751 26
1753 35
1754 26
1756 35
1757 19
1758 24
1759 22
1760 21
1761 28
1762 25
1763 21
1764 28
1765 25
1766 19
1767 24
1768 22
1769 20
1770 19
1771 22
1772 31
1773 27
1774 22
1775 31
1776 27
1777 18
1778 21
1779 20
1780 20
1781 25
1782 23
1783 20
1784 25
1785 23
1786 18
1787 21
1788 20
1789 17
1790 26
1792 35
1793 26
1795 35
1796 19
1797 24
1798 22
1799 21
1800 28
1801 25
1802 21
1803 28
1804 25
1805 19
1806 24
1807 22
1808 20
1809 19
1810 17
1811 26
1813 35
1814 26
1815 35
1816 19
1817 24
1818 22
1819 28
1820 25
1821 21
1822 28
1823 25
1824 19
1825 24
1826 22
1827 20
1828 19
1829 17
1830 26
1832 35
1833 26
1835 35
1836 19
1837 24
1838 22
1839 21
1840 28
1841 25
1842 21
1843 28
1844 25
1845 19
1846 24
1847 22
1848 20
1849 19
1850 22
1851 31
1852 27
1853 22
1854 31
1855 27
1856 18
1857 20
1858 20
1859 25
1860 23
1861 20
1862 23
1863 18
1864 21
1865 20
1866 17
1867 26
1869 35
1870 26
1871 19
1872 24
1873 22
1874 21
1875 28
1876 25
1877 21
1878 28
1879 25
1880 19
1881 24
1882 22
1883 20
1884 19
1885 11
1886 23
1888 23
1890 32
1891 16
1892 21
1893 19
1894 18
1895 25
1896 22
1897 18
1898 25
1899 22
1900 16
1901 21
1902 19
1903 17
1904 16
1905 14
1906 23
1908 23
1910 32
1911 16
1912 21
1913 19
1914 18
1915 25
1916 22
1917 18
1918 25
1919 22
1920 16
1921 21
1922 19
1923 17
1924 16
1925 19
1926 28
1927 19
1928 28
1929 24
1930 18
1931 17
1932 17
1933 22
1934 20
1935 17
1936 22
1937 20
1938 15
1939 18
1940 17
1941 14
1942 23
1944 32
1945 23
1947 32
1948 16
1949 19
1950 18
1951 25
1952 22
1953 25
1954 22
1955 16
1956 21
1957 19
1958 17
1959 16
1960 14
1961 23
1963 32
1964 23
1966 32
1967 16
1968 21
1969 19
1970 18
1971 25
1972 22
1973 18
1974 25
1975 22
1976 16
1977 21
1978 19
1979 17
1980 16
1981 23
1983 32
1984 23
1985 32
1986 16
1987 21
1988 19
1989 18
1990 25
1991 22
1992 18
1993 25
1994 22
1995 16
1996 21
1997 19
1998 17
1999 16
2000 19
2001 28
2002 24
2003 19
2004 28
2005 24
2006 15
2007 18
2008 17
2009 17
2010 22
2011 20
2012 17
2013 22
2014 20
2015 15
2016 18
2017 17
2018 14
2019 23
2021 32
2022 23
2024 32
2025 16
2026 21
2027 18
2028 25
2029 22
2030 18
2031 25
2032 16
2033 21
2034 17
2035 16
2036 7
2037 10
2038 19
2039 36
2040 28
2041 19
2042 36
2043 28
2044 12
2045 17
2046 15
2047 14
2048 21
2049 18
2050 14
2051 21
2052 18
2053 12
2054 17
2055 15
2056 13
2057 12
2058 10
2059 19
2060 36
2061 28
2062 19
2063 36
2064 28
2065 12
2066 17
2067 15
2068 14
2069 21
2070 18
2071 14
2072 21
2073 18
2074 12
2075 17
2076 15
2077 13
2078 12
2079 24
2080 20
2081 15
2082 24
2083 20
2084 11
2085 14
2086 13
2087 13
2088 18
2089 16
2090 13
2091 18
2092 16
2093 11
2094 14
2095 13
2096 10
2097 19
2098 36
2099 28
2100 19
2101 36
2102 28
2103 12
2104 17
2105 15
2106 14
2107 21
2108 18
2109 14
2110 21
2111 18
2112 12
2113 17
2114 15
2115 13
2116 12
2117 10
2118 19
2119 36
2120 28
2121 19
2122 36
2123 28
2124 12
2125 17
2126 15
2127 14
2128 21
2129 18
2130 14
2131 21
2132 18
2133 12
2134 13
2135 12
2136 10
2137 19
2138 36
2139 28
2140 19
2141 36
2142 28
2143 12
2144 17
2145 14
2146 21
2147 14
2148 21
2149 18
2150 12
2151 17
2152 15
2153 13
2154 12
2155 15
2156 24
2157 15
2158 24
2159 20
2160 11
2161 14
2162 13
2163 13
2164 18
2165 16
2166 13
2167 18
2168 16
2169 11
2170 14
2171 13
2172 10
2173 36
2174 28
2175 19
2176 36
2177 28
2178 12
2179 17
2180 15
2181 14
2182 21
2183 18
2184 14
2185 21
2186 18
2187 12
2188 17
2189 15
2190 13
2191 12
2192 14
2193 17
2194 26
2196 35
2197 26
2198 35
2199 19
2200 24
2201 22
2202 21
2203 28
2204 25
2205 21
2206 25
2207 19
2208 24
2209 22
2210 20
2211 19
2212 17
2213 26
2215 35
2216 26
2218 35
2219 19
2220 24
2221 22
2222 28
2223 25
2224 21
2225 28
2226 25
2227 19
2228 24
2229 22
2230 20
2231 19
2232 22
2233 31
2234 27
2235 22
2236 31
2237 18
2238 21
2239 20
2240 20
2241 25
2242 23
2243 20
2244 25
2245 23
2246 18
2247 21
2248 20
2249 17
2251 35
2252 26
2254 35
2255 19
2256 24
2257 22
2258 21
2259 28
2260 25
2261 21
2262 28
2263 25
2264 19
2265 24
2266 22
2267 20
2268 19
2269 17
2270 26
2272 35
2273 26
2275 35
2276 19
2277 24
2278 22
2279 28
2280 25
2281 21
2282 28
2283 25
2284 19
2285 24
2286 22
2287 20
2288 19
2289 17
2290 26
2292 35
2293 26
2295 35
2296 19
2297 22
2298 21
2299 28
2300 25
2301 21
2302 28
2303 25
2304 19
2305 24
2306 20
2307 19
2308 22
2309 31
2310 27
2311 22
2312 31
2313 27
2314 18
2315 21
2316 20
2317 20
2318 25
2319 23
2320 20
2321 25
2322 23
2323 18
2324 21
2325 20
2326 17
2327 26
2329 35
2330 26
2332 19
2333 24
2334 22
2335 21
2336 28
2337 25
2338 21
2339 28
2340 25
2341 19
2342 24
2343 22
2344 20
2345 19
2346 11
2347 14
2348 23
2350 32
2351 23
2353 32
2354 16
2355 21
2356 19
2357 18
2358 25
2359 22
2360 18
2361 25
2362 22
2363 16
2364 21
2365 19
2366 17
2367 16
2368 14
2369 23
2371 32
2372 23
2374 32
2375 16
2376 21
2377 19
2378 18
2379 25
2380 22
2381 18
2382 25
2383 22
2384 16
2385 21
2386 19
2387 17
2388 16
2389 19
2390 28
2391 24
2392 28
2393 24
2394 15
2395 18
2396 17
2397 17
2398 22
2399 20
2400 17
2401 22
2402 20
2403 15
2404 18
2405 17
2406 14
2407 23
2409 32
2410 23
2412 32
2413 16
2414 21
2415 19
2416 18
2417 25
2418 22
2419 18
2420 25
2421 22
2422 16
2423 21
2424 19
2425 17
2426 16
2427 14
2428 23
2430 32
2431 23
2433 32
2434 16
2435 21
2436 19
2437 18
2438 25
2439 22
2440 18
2441 25
2442 22
2443 16
2444 21
2445 19
2446 17
2447 16
2448 23
2450 32
2451 23
2453 32
2454 16
2455 21
2456 19
2457 18
2458 25
2459 22
2460 18
2461 25
2462 22
2463 16
2464 21
2465 19
2466 17
2467 16
2468 19
2469 28
2470 24
2471 19
2472 28
2473 24
2474 15
2475 18
2476 17
2477 17
2478 22
2479 20
2480 17
2481 22
2482 20
2483 15
2484 18
2485 17
2486 14
2487 23
2489 32
2491 32
2492 16
2493 21
2494 19
2495 18
2496 25
2497 22
2498 18
2499 25
2500 22
2501 21
2502 19
2503 17
2504 16
2505 5
2506 8
2507 17
2508 34
2509 26
2510 17
2511 34
2512 26
2513 10
2514 15
2515 13
2516 12
2517 19
2518 16
2519 12
2520 19
2521 16
2522 10
2523 15
2524 11
2525 10
2526 8
2527 17
2528 34
2529 26
2530 17
2531 34
2532 26
2533 10
2534 15
2535 13
2536 12
2537 19
2538 16
2539 12
2540 19
2541 16
2542 10
2543 15
2544 13
2545 11
2546 10
2547 22
2548 18
2549 13
2550 22
2551 18
2552 9
2553 12
2554 11
2555 11
2556 16
2557 14
2558 16
2559 14
2560 9
2561 12
2562 11
2563 8
2564 17
2565 34
2566 26
2567 17
2568 34
2569 26
2570 10
2571 15
2572 13
2573 12
2574 19
2575 16
2576 12
2577 19
2578 16
2579 10
2580 15
2581 13
2582 11
2583 10
2584 8
2585 17
2586 34
2587 26
2588 17
2589 34
2590 26
2591 10
2592 15
2593 13
2594 12
2595 19
2596 16
2597 12
2598 19
2599 16
2600 10
2601 15
2602 13
2603 11
2604 10
2605 8
2606 17
2607 34
2608 26
2609 34
2610 26
2611 15
2612 13
2613 12
2614 19
2615 16
2616 12
2617 19
2618 16
2619 10
2620 15
2621 13
2622 11
2623 10
2624 13
2625 22
2626 18
2627 13
2628 22
2629 18
2630 9
2631 12
2632 11
2633 11
2634 16
2635 14
2636 11
2637 16
2638 14
2639 9
2640 12
2641 11
2642 8
2643 17
2644 34
2645 26
2646 17
2647 34
2648 26
2649 10
2650 15
2651 13
2652 12
2653 19
2654 16
2655 12
2656 19
2657 16
2658 10
2659 15
2660 13
2661 10
2662 10
2663 13
2664 22
2665 39
2666 31
2667 22
2668 39
2669 31
2670 15
2671 20
2672 18
2673 17
2674 24
2675 21
2676 17
2677 24
2678 21
2679 15
2680 20
2681 18
2682 16
2683 15
2684 13
2685 22
2686 39
2687 31
2688 22
2689 39
2690 31
2691 15
2692 20
2693 18
2694 17
2695 24
2696 21
2697 17
2698 24
2699 21
2700 15
2701 20
2702 18
2703 16
2704 15
2705 18
2706 27
2707 23
2708 18
2709 27
2710 23
2711 14
2712 17
2713 16
2714 16
2715 21
2716 19
2717 16
2718 21
2719 19
2720 14
2721 17
2722 16
2723 13
2724 22
2725 39
2726 31
2727 22
2728 39
2729 31
2730 15
2731 20
2732 18
2733 17
2734 24
2735 21
2736 17
2737 24
2738 21
2739 15
2740 20
2741 18
2742 16
2743 15
2744 13
2745 22
2746 39
2747 31
2748 22
2749 39
2750 31
2751 15
2752 20
2753 18
2754 17
2755 24
2756 21
2757 17
2758 24
2759 21
2760 15
2761 20
2762 18
2763 16
2764 15
2765 13
2766 22
2767 39
2768 31
2769 22
2770 39
2771 31
2772 15
2773 20
2774 18
2775 24
2776 21
2777 17
2778 24
2779 21
2780 15
2781 20
2782 18
2783 16
2784 15
2785 18
2786 27
2787 23
2788 18
2789 27
2790 23
2791 14
2792 17
2793 16
2794 16
2795 21
2796 19
2797 16
2798 21
2799 19
2800 14
2801 17
2802 16
2803 13
2804 22
2805 39
2806 31
2807 22
2808 39
2809 31
2810 15
2811 20
2812 18
2813 24
2814 21
2815 17
2816 24
2817 21
2818 15
2819 20
2820 18
2821 16
2822 15
2823 8
2824 20
2825 37
2826 29
2827 20
2828 37
2829 29
2830 13
2831 18
2832 16
2833 15
2834 22
2835 19
2836 15
2837 22
2838 19
2839 13
2840 18
2841 16
2842 14
2843 13
2844 11
2845 20
2846 37
2847 29
2848 20
2849 37
2850 29
2851 13
2852 18
2853 16
2854 15
2855 22
2856 19
2857 15
2858 22
2859 19
2860 13
2861 18
2862 16
2863 14
2864 13
2865 16
2866 25
2867 21
2868 16
2869 25
2870 21
2871 12
2872 15
2873 14
2874 19
2875 17
2876 14
2877 19
2878 17
2879 12
2880 15
2881 14
2882 11
2883 20
2884 37
2885 29
2886 20
2887 37
2888 29
2889 13
2890 18
2891 15
2892 22
2893 15
2894 22
2895 19
2896 13
2897 18
2898 16
2899 14
2900 13
2901 11
2902 20
2903 37
2904 29
2905 20
2906 37
2907 29
2908 13
2909 18
2910 16
2911 15
2912 22
2913 19
2914 15
2915 22
2916 19
2917 13
2918 18
2919 16
2920 14
2921 13
2922 20
2923 37
2924 29
2925 20
2926 37
2927 29
2928 13
2929 18
2930 16
2931 15
2932 22
2933 19
2934 15
2935 22
2936 19
2937 13
2938 18
2939 16
2940 14
2941 13
2942 16
2943 25
2944 21
2945 16
2946 25
2947 21
2948 12
2949 15
2950 14
2951 14
2952 19
2953 17
2954 14
2955 19
2956 17
2957 12
2958 15
2959 14
2960 11
2961 20
2962 37
2963 29
2964 20
2965 37
2966 29
2967 13
2968 18
2969 16
2970 15
2971 22
2972 19
2973 15
2974 19
2975 13
2976 18
2977 16
2978 14
2979 13
2980 6
2981 9
2982 18
2983 35
2984 27
2985 18
2986 35
2987 27
2988 11
2989 14
2990 20
2991 17
2992 13
2993 20
2994 17
2995 11
2996 16
2997 14
2998 12
2999 11
3000 18
3001 35
3002 27
3003 18
3004 35
3005 27
3006 11
3007 14
3008 13
3009 20
3010 17
3011 13
3012 17
3013 11
3014 16
3015 14
3016 12
3017 11
3018 14
3019 23
3020 19
3021 14
3022 19
3023 13
3024 12
3025 12
3026 17
3027 15
3028 12
3029 17
3030 15
3031 10
3032 12
3033 9
3034 18
3035 35
3036 27
3037 18
3038 35
3039 27
3040 11
3041 16
3042 14
3043 13
3044 20
3045 17
3046 13
3047 20
3048 17
3049 11
3050 16
3051 14
3052 12
3053 11
3054 9
3055 18
3056 27
3057 18
3058 35
3059 11
3060 16
3061 14
3062 13
3063 20
3064 17
3065 13
3066 20
3067 17
3068 11
3069 16
3070 14
3071 12
3072 11
3073 9
3074 18
3075 35
3076 27
3077 18
3078 35
3079 27
3080 11
3081 16
3082 14
3083 13
3084 20
3085 17
3086 13
3087 20
3088 17
3089 11
3090 16
3091 14
3092 12
3093 11
3094 14
3095 23
3096 19
3097 14
3098 23
3099 19
3100 10
3101 13
3102 12
3103 12
3104 17
3105 15
3106 12
3107 17
3108 10
3109 13
3110 12
3111 9
3112 18
3113 35
3114 27
3115 18
3116 35
3117 27
3118 11
3119 16
3120 14
3121 13
3122 20
3123 17
3124 13
3125 20
3126 17
3127 11
3128 16
3129 14
3130 12
3131 11
3132 5
3133 8
3134 17
3135 34
3136 26
3137 17
3138 34
3139 26
3140 10
3141 15
3142 13
3143 12
3144 19
3145 16
3146 12
3147 19
3148 16
3149 10
3150 15
3151 13
3152 11
3153 10
3154 8
3155 17
3156 34
3157 26
3158 17
3159 34
3160 26
3161 10
3162 15
3163 13
3164 12
3165 19
3166 16
3167 12
3168 19
3169 16
3170 10
3171 13
3172 11
3173 10
3174 13
3175 18
3176 13
3177 22
3178 18
3179 9
3180 12
3181 11
3182 11
3183 16
3184 14
3185 11
3186 16
3187 14
3188 9
3189 12
3190 11
3191 8
3192 17
3193 34
3194 26
3195 17
3196 34
3197 26
3198 10
3199 15
3200 13
3201 19
3202 16
3203 12
3204 19
3205 16
3206 10
3207 15
3208 13
3209 10
3210 8
3211 17
3212 34
3213 26
3214 17
3215 34
3216 26
3217 10
3218 15
3219 12
3220 19
3221 16
3222 12
3223 19
3224 16
3225 10
3226 15
3227 13
3228 11
3229 10
3230 8
3231 17
3232 34
3233 26
3234 17
3235 34
3236 26
3237 10
3238 13
3239 12
3240 19
3241 16
3242 12
3243 19
3244 16
3245 10
3246 15
3247 13
3248 11
3249 10
3250 13
3251 22
3252 18
3253 13
3254 22
3255 18
3256 9
3257 12
3258 11
3259 11
3260 16
3261 14
3262 11
3263 16
3264 14
3265 9
3266 12
3267 11
3268 8
3269 17
3270 34
3271 26
3272 17
3273 34
3274 26
3275 10
3276 15
3277 13
3278 12
3279 19
3280 16
3281 12
3282 19
3283 16
3284 10
3285 15
3286 13
3287 11
3288 10
3289 3
3290 6
3291 15
3292 32
3293 24
3294 15
3295 32
3296 24
3297 8
3298 13
3299 11
3300 10
3301 17
3302 14
3303 10
3304 17
3305 14
3306 8
3307 13
3308 11
3309 9
3310 8
3311 6
3312 15
3313 24
3314 15
3315 32
3316 24
3317 8
3318 13
3319 11
3320 10
3321 17
3322 14
3323 10
3324 17
3325 14
3326 8
3327 11
3328 9
3329 8
3330 11
3331 20
3332 16
3333 11
3334 20
3335 16
3336 7
3337 10
3338 9
3339 9
3340 14
3341 12
3342 9
3343 14
3344 12
3345 7
3346 10
3347 9
3348 6
3349 15
3350 32
3351 24
3352 15
3353 32
3354 24
3355 8
3356 13
3357 11
3358 10
3359 17
3360 14
3361 10
3362 17
3363 14
3364 8
3365 13
3366 11
3367 9
3368 8
3369 6
3370 15
3371 32
3372 24
3373 32
3374 24
3375 8
3376 13
3377 11
3378 10
3379 17
3380 14
3381 10
3382 17
3383 14
3384 8
3385 11
3386 9
3387 8
3388 6
3389 15
3390 32
3391 24
3392 15
3393 32
3394 24
3395 8
3396 13
3397 11
3398 10
3399 17
3400 14
3401 10
3402 17
3403 14
3404 8
3405 13
3406 11
3407 9
3408 8
3409 11
3410 20
3411 16
3412 11
3413 20
3414 16
3415 7
3416 10
3417 9
3418 9
3419 14
3420 12
3421 14
3422 12
3423 10
3424 9
3425 6
3426 15
3427 32
3428 24
3429 15
3430 32
3431 24
3432 8
3433 11
3434 10
3435 17
3436 14
3437 10
3438 17
3439 14
3440 8
3441 13
3442 11
3443 9
3444 8
3445 15
3446 24
3448 33
3449 24
3451 33
3452 17
3453 22
3454 20
3455 19
3456 26
3457 23
3458 19
3459 26
3460 23
3461 17
3462 22
3463 20
3464 18
3465 17
3466 15
3468 33
3469 24
3471 33
3472 17
3473 22
3474 20
3475 19
3476 26
3477 23
3478 19
3479 26
3480 23
3481 17
3482 22
3483 20
3484 18
3485 17
3486 20
3487 29
3488 25
3489 20
3490 29
3491 25
3492 16
3493 19
3494 18
3495 18
3496 23
3497 21
3498 18
3499 23
3500 21
3501 19
3502 18
3503 24
3505 33
3506 24
3508 33
3509 22
3510 20
3511 19
3512 26
3513 23
3514 19
3515 26
3516 23
3517 17
3518 22
3519 20
3520 17
3521 15
3522 24
3524 33
3525 24
3527 33
3528 17
3529 22
3530 20
3531 19
3532 26
3533 23
3534 19
3535 26
3536 23
3537 17
3538 22
3539 20
3540 18
3541 17
3542 15
3544 33
3545 24
3547 33
3548 17
3549 22
3550 20
3551 19
3552 26
3553 23
3554 19
3555 26
3556 23
3557 17
3558 22
3559 20
3560 18
3561 17
3562 20
3563 29
3564 25
3565 20
3566 29
3567 16
3568 19
3569 18
3570 18
3571 23
3572 21
3573 18
3574 23
3575 21
3576 16
3577 19
3578 18
3579 15
3580 24
3582 33
3583 24
3585 33
3586 17
3587 22
3588 19
3589 26
3590 23
3591 19
3592 26
3593 23
3594 17
3595 22
3596 20
3597 18
3598 29
3599 32
3606 34
3607 39
3608 37
3611 36
3614 34
3615 39
3616 37
3617 35
3618 34
3619 32
3625 39
3626 36
3631 39
3632 37
3633 35
3634 34
3635 37
3638 37
3641 33
3642 36
3643 35
3645 35
3647 38
3648 33
3649 36
3650 35
3651 32
3658 34
3659 39
3660 37
3661 36
3664 36
3667 34
3668 39
3669 37
3670 35
3671 34
3672 32
3679 34
3680 39
3681 37
3682 36
3685 36
3688 34
3689 39
3690 37
3691 35
3692 34
3699 34
3700 39
3701 37
3702 36
3705 36
3708 34
3709 39
3710 37
3711 35
3712 34
3713 37
3716 37
3719 33
3720 36
3721 35
3722 35
3724 38
3725 35
3727 38
3728 36
3729 32
3736 34
3737 39
3738 37
3739 36
3742 36
3745 34
3746 39
3747 37
3748 35
3749 34
3750 21
3751 24
3752 33
3755 33
3758 26
3759 31
3760 29
3761 28
3762 35
3763 32
3764 35
3765 32
3766 26
3767 29
3768 27
3769 26
3770 24
3771 33
3773 33
3776 26
3777 31
3778 29
3779 28
3780 35
3781 32
3782 28
3783 35
3784 32
3785 26
3786 31
3787 29
3788 27
3789 26
3790 29
3791 38
3792 34
3793 29
3794 38
3795 34
3796 25
3797 28
3798 27
3799 27
3800 32
3801 30
3802 27
3803 32
3804 30
3805 25
3806 28
3807 27
3808 24
3809 33
3812 33
3815 26
3816 31
3817 29
3818 28
3819 35
3820 32
3821 28
3822 35
3823 32
3824 26
3825 31
3826 29
3827 27
3828 26
3829 24
3830 33
3833 33
3836 26
3837 31
3838 29
3839 28
3840 35
3841 32
3842 28
3843 35
3844 32
3845 26
3846 31
3847 29
3848 27
3849 26
3850 24
3851 33
3854 33
3857 26
3858 31
3859 29
3860 28
3861 35
3862 32
3863 28
3864 35
3865 32
3866 26
3867 31
3868 29
3869 27
3870 26
3871 29
3872 38
3873 34
3874 29
3875 38
3876 25
3877 28
3878 27
3879 27
3880 32
3881 30
3882 27
3883 32
3884 30
3885 25
3886 28
3887 27
3888 24
3889 33
3892 33
3895 26
3896 31
3897 29
3898 28
3899 35
3900 32
3901 28
3902 35
3903 32
3904 26
3905 31
3906 29
3907 27
3908 26
3909 12
3910 15
3911 24
3913 33
3914 24
3916 33
3917 17
3918 22
3919 20
3920 19
3921 26
3922 23
3923 19
3924 26
3925 23
3926 17
3927 22
3928 20
3929 18
3930 17
3931 15
3932 24
3933 33
3934 24
3936 33
3937 17
3938 22
3939 19
3940 26
3941 23
3942 19
3943 26
3944 23
3945 17
3946 22
3947 20
3948 18
3949 17
3950 20
3951 29
3952 25
3953 20
3954 29
3955 25
3956 16
3957 19
3958 18
3959 18
3960 23
3961 21
3962 18
3963 23
3964 21
3965 16
3966 19
3967 18
3968 15
3969 24
3971 33
3972 24
3974 33
3975 17
3976 22
3977 20
3978 19
3979 26
3980 23
3981 19
3982 23
3983 17
3984 22
3985 20
3986 18
3987 17
3988 15
3989 24
3990 33
3991 24
3993 33
3994 17
3995 22
3996 19
3997 26
3998 23
3999 19
4000 26
4001 23
4002 17
4003 22
4004 20
4005 18
4006 17
4007 15
4008 24
4010 33
4011 24
4013 33
4014 17
4015 22
4016 20
4017 19
4018 26
4019 23
4020 19
4021 26
4022 23
4023 17
4024 22
4025 20
4026 18
4027 17
4028 20
4029 29
4030 25
4031 20
4032 25
4033 16
4034 19
4035 18
4036 18
4037 23
4038 21
4039 18
4040 23
4041 21
4042 16
4043 19
4044 18
4045 15
4046 24
4048 33
4049 24
4051 33
4052 17
4053 20
4054 19
4055 26
4056 19
4057 26
4058 23
4059 17
4060 22
4061 20
4062 17
4063 29
4064 32
4070 34
4071 39
4072 37
4073 36
4076 36
4079 34
4080 39
4081 37
4082 35
4083 34
4084 32
4091 39
4092 37
4093 36
4096 36
4099 34
4100 39
4101 37
4102 35
4103 34
4104 37
4107 37
4110 33
4111 36
4112 35
4113 35
4115 38
4116 35
4118 38
4119 33
4120 35
4121 32
4128 34
4129 39
4130 37
4131 36
4134 36
4137 34
4138 39
4139 37
4140 35
4141 34
4142 32
4149 34
4150 39
4151 37
4152 36
4155 36
4158 34
4159 39
4160 37
4161 35
4162 34
4163 32
4169 34
4170 39
4171 37
4172 36
4175 36
4178 34
4179 37
4180 35
4181 34
4182 37
4185 37
4187 33
4188 36
4189 35
4190 35
4192 38
4193 35
4195 38
4196 33
4197 36
4198 35
4199 32
4205 34
4206 39
4207 37
4208 36
4211 36
4213 34
4214 39
4215 37
4216 35
4217 34
4218 21
4219 24
4220 33
4223 33
4226 26
4227 31
4228 29
4229 28
4230 35
4231 32
4232 28
4233 35
4234 32
4235 26
4236 31
4237 29
4238 27
4239 26
4240 24
4241 33
4244 33
4247 26
4248 31
4249 29
4250 28
4251 35
4252 32
4253 28
4254 35
4255 32
4256 26
4257 31
4258 29
4259 27
4260 26
4261 38
4262 34
4263 29
4264 38
4265 34
4266 25
4267 28
4268 27
4269 27
4270 32
4271 30
4272 32
4273 30
4274 25
4275 28
4276 24
4277 33
4280 33
4283 26
4284 31
4285 29
4286 28
4287 35
4288 32
4289 28
4290 35
4291 32
4292 26
4293 31
4294 29
4295 27
4296 26
4297 24
4298 33
4301 33
4304 26
4305 31
4306 29
4307 28
4308 35
4309 32
4310 28
4311 35
4312 26
4313 31
4314 29
4315 27
4316 26
4317 33
4320 33
4323 26
4324 31
4325 29
4326 28
4327 35
4328 28
4329 35
4330 32
4331 26
4332 31
4333 29
4334 27
4335 26
4336 29
4337 38
4338 34
4339 29
4340 38
4341 34
4342 25
4343 28
4344 27
4345 27
4346 32
4347 30
4348 27
4349 32
4350 30
4351 25
4352 28
4353 27
4354 33
4357 33
4360 26
4361 31
4362 29
4363 28
4364 35
4365 32
4366 28
4367 35
4368 32
4369 26
4370 31
4371 29
4372 27
4373 26
4374 5
4375 8
4376 17
4377 34
4378 26
4379 17
4380 34
4381 26
4382 10
4383 15
4384 13
4385 12
4386 19
4387 16
4388 12
4389 19
4390 16
4391 10
4392 15
4393 13
4394 11
4395 10
4396 8
4397 17
4398 34
4399 26
4400 17
4401 34
4402 26
4403 10
4404 15
4405 13
4406 12
4407 19
4408 16
4409 12
4410 19
4411 16
4412 10
4413 15
4414 13
4415 11
4416 10
4417 13
4418 22
4419 13
4420 22
4421 18
4422 9
4423 12
4424 11
4425 16
4426 14
4427 11
4428 16
4429 14
4430 9
4431 12
4432 11
4433 8
4434 17
4435 34
4436 26
4437 17
4438 34
4439 26
4440 10
4441 15
4442 13
4443 12
4444 19
4445 16
4446 12
4447 19
4448 16
4449 15
4450 13
4451 10
4452 8
4453 17
4454 34
4455 26
4456 17
4457 34
4458 26
4459 10
4460 15
4461 13
4462 12
4463 19
4464 16
4465 12
4466 19
4467 16
4468 10
4469 15
4470 13
4471 11
4472 8
4473 17
4474 34
4475 26
4476 17
4477 34
4478 26
4479 10
4480 15
4481 13
4482 12
4483 19
4484 16
4485 12
4486 19
4487 16
4488 10
4489 15
4490 13
4491 11
4492 10
4493 13
4494 22
4495 18
4496 13
4497 22
4498 18
4499 9
4500 12
4501 11
4502 16
4503 14
4504 11
4505 16
4506 14
4507 9
4508 12
4509 11
4510 8
4511 17
4512 34
4513 26
4514 17
4515 34
4516 26
4517 10
4518 15
4519 13
4520 12
4521 19
4522 16
4523 12
4524 19
4525 16
4526 10
4527 15
4528 13
4529 11
4530 10
4531 10
4532 13
4533 39
4534 31
4535 22
4536 39
4537 31
4538 15
4539 20
4540 18
4541 17
4542 24
4543 21
4544 17
4545 24
4546 21
4547 15
4548 18
4549 16
4550 15
4551 13
4552 22
4553 39
4554 31
4555 22
4556 39
4557 31
4558 15
4559 20
4560 18
4561 17
4562 24
4563 21
4564 17
4565 24
4566 21
4567 15
4568 18
4569 16
4570 15
4571 18
4572 27
4573 23
4574 18
4575 27
4576 23
4577 14
4578 17
4579 16
4580 16
4581 21
4582 19
4583 16
4584 21
4585 19
4586 14
4587 17
4588 16
4589 13
4590 22
4591 39
4592 31
4593 22
4594 39
4595 31
4596 15
4597 20
4598 18
4599 17
4600 24
4601 21
4602 17
4603 24
4604 21
4605 15
4606 20
4607 18
4608 16
4609 15
4610 13
4611 22
4612 39
4613 31
4614 22
4615 39
4616 31
4617 15
4618 20
4619 18
4620 17
4621 24
4622 21
4623 17
4624 24
4625 21
4626 15
4627 18
4628 16
4629 15
4630 13
4631 22
4632 39
4633 31
4634 39
4635 15
4636 20
4637 18
4638 17
4639 24
4640 21
4641 17
4642 24
4643 21
4644 15
4645 20
4646 18
4647 16
4648 15
4649 18
4650 27
4651 23
4652 18
4653 27
4654 23
4655 14
4656 17
4657 16
4658 16
4659 21
4660 19
4661 16
4662 21
4663 19
4664 14
4665 17
4666 16
4667 13
4668 22
4669 39
4670 31
4671 39
4672 15
4673 20
4674 18
4675 17
4676 24
4677 21
4678 17
4679 24
4680 21
4681 15
4682 20
4683 18
4684 16
4685 15
4686 8
4687 20
4688 37
4689 29
4690 20
4691 37
4692 29
4693 13
4694 18
4695 16
4696 15
4697 22
4698 19
4699 15
4700 22
4701 19
4702 13
4703 18
4704 16
4705 14
4706 13
4707 11
4708 20
4709 37
4710 29
4711 20
4712 37
4713 29
4714 13
4715 18
4716 16
4717 15
4718 22
4719 19
4720 15
4721 22
4722 19
4723 13
4724 18
4725 16
4726 14
4727 13
4728 16
4729 25
4730 21
4731 16
4732 25
4733 21
4734 12
4735 15
4736 14
4737 14
4738 19
4739 17
4740 19
4741 17
4742 12
4743 15
4744 14
4745 11
4746 20
4747 37
4748 29
4749 20
4750 37
4751 29
4752 13
4753 18
4754 16
4755 15
4756 22
4757 19
4758 15
4759 22
4760 19
4761 18
4762 16
4763 14
4764 13
4765 11
4766 20
4767 29
4768 20
4769 37
4770 13
4771 18
4772 16
4773 15
4774 22
4775 19
4776 15
4777 22
4778 19
4779 13
4780 18
4781 16
4782 14
4783 13
4784 11
4785 20
4786 37
4787 29
4788 20
4789 37
4790 29
4791 13
4792 18
4793 16
4794 15
4795 22
4796 19
4797 15
4798 22
4799 19
4800 13
4801 18
4802 16
4803 14
4804 13
4805 16
4806 25
4807 21
4808 16
4809 25
4810 21
4811 12
4812 15
4813 14
4814 19
4815 17
4816 14
4817 19
4818 17
4819 12
4820 15
4821 14
4822 11
4823 20
4824 37
4825 29
4826 20
4827 37
4828 29
4829 13
4830 18
4831 16
4832 15
4833 22
4834 19
4835 15
4836 22
4837 13
4838 18
4839 16
4840 14
4841 13
4842 7
4843 10
4844 19
4845 36
4846 28
4847 19
4848 36
4849 28
4850 12
4851 17
4852 15
4853 14
4854 21
4855 18
4856 14
4857 21
4858 18
4859 12
4860 17
4861 15
4862 13
4863 12
4864 10
4865 19
4866 36
4867 28
4868 19
4869 36
4870 28
4871 12
4872 17
4873 15
4874 14
4875 21
4876 14
4877 21
4878 18
4879 17
4880 15
4881 13
4882 12
4883 15
4884 20
4885 15
4886 24
4887 20
4888 11
4889 14
4890 13
4891 13
4892 18
4893 16
4894 13
4895 18
4896 16
4897 14
4898 13
4899 10
4900 19
4901 36
4902 28
4903 19
4904 36
4905 28
4906 12
4907 17
4908 15
4909 14
4910 21
4911 18
4912 14
4913 21
4914 18
4915 12
4916 17
4917 15
4918 13
4919 12
4920 10
4921 19
4922 36
4923 28
4924 19
4925 36
4926 28
4927 12
4928 17
4929 15
4930 14
4931 21
4932 18
4933 14
4934 18
4935 12
4936 17
4937 15
4938 13
4939 12
4940 10
4941 19
4942 36
4943 28
4944 19
4945 28
4946 12
4947 17
4948 15
4949 14
4950 21
4951 18
4952 14
4953 21
4954 18
4955 12
4956 17
4957 15
4958 13
4959 12
4960 15
4961 24
4962 20
4963 24
4964 20
4965 11
4966 14
4967 13
4968 13
4969 18
4970 16
4971 13
4972 18
4973 16
4974 11
4975 14
4976 13
4977 10
4978 19
4979 36
4980 28
4981 19
4982 36
4983 12
4984 17
4985 15
4986 14
4987 21
4988 18
4989 14
4990 21
4991 18
4992 12
4993 17
4994 15
4995 13
4996 12
4997 14
4998 17
5000 35
5001 26
5003 35
5004 19
5005 24
5006 22
5007 21
5008 28
5009 25
5010 21
5011 28
5012 25
5013 19
5014 24
5015 19
5016 17
5017 26
5019 35
5020 26
5022 35
5023 19
5024 24
5025 22
5026 21
5027 28
5028 25
5029 21
5030 25
5031 19
5032 24
5033 22
5034 20
5035 19
5036 22
5037 31
5038 27
5039 22
5040 31
5041 27
5042 18
5043 21
5044 20
5045 20
5046 25
5047 23
5048 20
5049 25
5050 23
5051 18
5052 21
5053 20
5054 17
5055 26
5057 35
5058 26
5060 35
5061 19
5062 22
5063 21
5064 28
5065 25
5066 21
5067 28
5068 25
5069 19
5070 24
5071 22
5072 19
5073 17
5074 26
5076 35
5077 26
5079 35
5080 19
5081 24
5082 22
5083 21
5084 28
5085 25
5086 21
5087 28
5088 25
5089 19
5090 24
5091 22
5092 20
5093 19
5094 17
5095 26
5097 35
5098 26
5100 35
5101 19
5102 24
5103 22
5104 21
5105 28
5106 25
5107 21
5108 25
5109 19
5110 24
5111 22
5112 20
5113 19
5114 22
5115 31
5116 27
5117 22
5118 31
5119 27
5120 18
5121 21
5122 20
5123 20
5124 25
5125 23
5126 20
5127 25
5128 23
5129 18
5130 21
5131 20
5132 17
5133 26
5135 35
5136 26
5138 35
5139 19
5140 24
5141 22
5142 21
5143 28
5144 25
5145 21
5146 28
5147 25
5148 24
5149 22
5150 20
5151 19
5152 11
5153 14
5154 23
5156 32
5157 23
5159 32
5160 16
5161 21
5162 19
5163 18
5164 25
5165 22
5166 18
5167 25
5168 22
5169 16
5170 21
5171 19
5172 17
5173 16
5174 14
5175 23
5177 32
5178 23
5180 32
5181 16
5182 21
5183 19
5184 18
5185 25
5186 22
5187 18
5188 25
5189 22
5190 16
5191 21
5192 19
5193 17
5194 16
5195 19
5196 28
5197 24
5198 19
5199 28
5200 24
5201 15
5202 17
5203 17
5204 22
5205 20
5206 17
5207 22
5208 20
5209 15
5210 18
5211 17
5212 14
5214 32
5215 23
5217 32
5218 16
5219 21
5220 19
5221 18
5222 25
5223 22
5224 18
5225 25
5226 22
5227 16
5228 21
5229 19
5230 17
5231 16
5232 14
5233 23
5235 32
5236 23
5238 32
5239 16
5240 21
5241 19
5242 18
5243 25
5244 22
5245 18
5246 25
5247 22
5248 16
5249 21
5250 19
5251 16
5252 14
5253 23
5255 32
5256 23
5258 32
5259 16
5260 19
5261 18
5262 25
5263 18
5264 25
5265 22
5266 16
5267 21
5268 19
5269 17
5270 16
5271 19
5272 28
5273 24
5274 19
5275 28
5276 24
5277 18
5278 17
5279 22
5280 20
5281 17
5282 22
5283 20
5284 18
5285 17
5286 14
5287 23
5289 32
5290 23
5292 32
5293 16
5294 21
5295 19
5296 18
5297 25
5298 18
5299 25
5300 22
5301 16
5302 21
5303 19
5304 17
5305 16
5306 7
5307 10
5308 19
5309 36
5310 28
5311 19
5312 28
5313 12
5314 17
5315 15
5316 14
5317 21
5318 18
5319 14
5320 21
5321 18
5322 17
5323 15
5324 13
5325 12
5326 10
5327 19
5328 36
5329 28
5330 19
5331 36
5332 12
5333 17
5334 15
5335 14
5336 21
5337 18
5338 14
5339 18
5340 12
5341 17
5342 15
5343 13
5344 12
5345 15
5346 24
5347 20
5348 15
5349 24
5350 20
5351 11
5352 14
5353 13
5354 13
5355 18
5356 16
5357 13
5358 18
5359 11
5360 14
5361 13
5362 10
5363 19
5364 36
5365 28
5366 19
5367 36
5368 28
5369 17
5370 15
5371 14
5372 21
5373 18
5374 14
5375 21
5376 18
5377 12
5378 17
5379 15
5380 13
5381 12
5382 10
5383 19
5384 36
5385 28
5386 19
5387 36
5388 28
5389 12
5390 17
5391 15
5392 14
5393 21
5394 18
5395 14
5396 21
5397 18
5398 12
5399 17
5400 15
5401 13
5402 12
5403 10
5404 19
5405 36
5406 28
5407 19
5408 36
5409 28
5410 12
5411 17
5412 15
5413 21
5414 18
5415 14
5416 21
5417 18
5418 12
5419 17
5420 15
5421 13
5422 12
5423 15
5424 24
5425 20
5426 15
5427 24
5428 20
5429 11
5430 14
5431 13
5432 13
5433 18
5434 16
5435 13
5436 18
5437 16
5438 11
5439 14
5440 13
5441 10
5442 19
5443 36
5444 28
5445 19
5446 36
5447 28
5448 12
5449 17
5450 15
5451 14
5452 21
5453 18
5454 14
5455 21
5456 18
5457 12
5458 17
5459 15
5460 13
5461 12
5462 14
5463 17
5464 26
5466 35
5467 26
5469 35
5470 19
5471 24
5472 22
5473 21
5474 28
5475 25
5476 21
5477 28
5478 25
5479 19
5480 24
5481 22
5482 20
5483 19
5484 17
5485 26
5487 35
5488 26
5489 35
5490 19
5491 24
5492 22
5493 21
5494 28
5495 25
5496 21
5497 28
5498 25
5499 19
5500 22
5501 20
5502 19
5503 22
5504 31
5505 27
5506 22
5507 31
5508 27
5509 18
5510 21
5511 20
5512 25
5513 23
5514 20
5515 25
5516 23
5517 18
5518 21
5519 20
5520 17
5521 26
5523 35
5524 26
5526 35
5527 19
5528 24
5529 22
5530 21
5531 28
5532 25
5533 21
5534 28
5535 25
5536 19
5537 24
5538 22
5539 20
5540 19
5541 17
5542 26
5544 35
5545 26
5547 35
5548 19
5549 24
5550 22
5551 21
5552 28
5553 25
5554 21
5555 28
5556 25
5557 19
5558 24
5559 20
5560 17
5561 26
5563 35
5564 26
5566 35
5567 19
5568 24
5569 22
5570 28
5571 25
5572 21
5573 28
5574 25
5575 19
5576 24
5577 22
5578 20
5579 19
5580 22
5581 31
5582 27
5583 22
5584 31
5585 27
5586 18
5587 21
5588 20
5589 20
5590 25
5591 23
5592 20
5593 25
5594 23
5595 18
5596 21
5597 20
5598 17
5599 26
5601 35
5602 26
5604 35
5605 19
5606 24
5607 22
5608 21
5609 25
5610 21
5611 28
5612 25
5613 19
5614 24
5615 22
5616 20
5617 19
5618 11
5619 14
5620 23
5622 32
5623 23
5625 32
5626 16
5627 21
5628 19
5629 18
5630 25
5631 22
5632 18
5633 25
5634 22
5635 16
5636 21
5637 19
5638 17
5639 16
5640 14
5641 23
5643 32
5645 32
5646 16
5647 21
5648 19
5649 18
5650 25
5651 22
5652 18
5653 25
5654 22
5655 16
5656 21
5657 19
5658 17
5659 16
5660 19
5661 28
5662 24
5663 19
5664 28
5665 24
5666 18
5667 17
5668 17
5669 22
5670 20
5671 17
5672 22
5673 20
5674 15
5675 18
5676 17
5677 14
5678 23
5680 32
5681 23
5683 32
5684 16
5685 19
5686 18
5687 25
5688 22
5689 18
5690 25
5691 22
5692 16
5693 19
5694 17
5695 16
5696 14
5697 23
5699 32
5700 23
5702 32
5703 16
5704 21
5705 19
5706 18
5707 25
5708 22
5709 18
5710 25
5711 22
5712 16
5713 21
5714 19
5715 17
5716 16
5717 14
5718 23
5720 32
5721 23
5723 32
5724 16
5725 21
5726 19
5727 18
5728 25
5729 22
5730 18
5731 25
5732 22
5733 16
5734 21
5735 19
5736 17
5737 16
5738 19
5739 28
5740 24
5741 19
5742 28
5743 24
5744 15
5745 18
5746 17
5747 17
5748 20
5749 17
5750 22
5751 15
5752 18
5753 17
5754 14
5755 23
5756 32
5757 23
5759 32
5760 16
5761 21
5762 19
5763 18
5764 25
5765 22
5766 18
5767 25
5768 22
5769 16
5770 21
5771 19
5772 17
5773 16
5774 5
5775 8
5776 17
5777 34
5778 26
5779 17
5780 34
5781 26
5782 10
5783 15
5784 13
5785 12
5786 19
5787 16
5788 12
5789 19
5790 16
5791 10
5792 15
5793 11
5794 10
5795 8
5796 17
5797 34
5798 26
5799 17
5800 34
5801 26
5802 10
5803 15
5804 13
5805 12
5806 19
5807 16
5808 12
5809 19
5810 16
5811 10
5812 15
5813 13
5814 11
5815 10
5816 13
5817 22
5818 18
5819 13
5820 22
5821 18
5822 9
5823 12
5824 11
5825 11
5826 16
5827 14
5828 16
5829 14
5830 9
5831 12
5832 11
5833 8
5834 17
5835 34
5836 26
5837 17
5838 34
5839 26
5840 10
5841 15
5842 13
5843 12
5844 19
5845 16
5846 12
5847 19
5848 16
5849 10
5850 15
5851 13
5852 11
5853 10
5854 8
5855 17
5856 34
5857 26
5858 17
5859 34
5860 10
5861 15
5862 13
5863 12
5864 19
5865 16
5866 19
5867 16
5868 10
5869 15
5870 13
5871 11
5872 10
5873 8
5874 17
5875 34
5876 26
5877 17
5878 34
5879 26
5880 10
5881 15
5882 13
5883 12
5884 19
5885 16
5886 12
5887 19
5888 16
5889 10
5890 15
5891 13
5892 11
5893 10
5894 13
5895 22
5896 18
5897 13
5898 22
5899 18
5900 9
5901 12
5902 11
5903 11
5904 16
5905 14
5906 11
5907 16
5908 14
5909 9
5910 12
5911 11
5912 8
5913 17
5914 34
5915 26
5916 17
5917 34
5918 26
5919 10
5920 15
5921 13
5922 12
5923 19
5924 16
5925 12
5926 19
5927 16
5928 10
5929 15
5930 13
5931 10
5932 10
5933 13
5934 22
5935 39
5936 31
5937 22
5938 39
5939 31
5940 20
5941 18
5942 17
5943 24
5944 21
5945 17
5946 24
5947 21
5948 15
5949 20
5950 18
5951 16
5952 15
5953 13
5954 22
5955 39
5956 31
5957 22
5958 39
5959 31
5960 15
5961 20
5962 18
5963 17
5964 24
5965 21
5966 17
5967 24
5968 15
5969 20
5970 18
5971 16
5972 15
5973 18
5974 27
5975 23
5976 18
5977 27
5978 23
5979 14
5980 17
5981 16
5982 16
5983 21
5984 19
5985 16
5986 21
5987 19
5988 14
5989 17
5990 16
5991 13
5992 39
5993 31
5994 22
5995 39
5996 31
5997 15
5998 20
5999 18
6000 17
6001 24
6002 21
6003 17
6004 24
6005 21
6006 15
6007 20
6008 18
6009 16
6010 15
6011 13
6012 22
6013 39
6014 31
6015 22
6016 39
6017 31
6018 15
6019 20
6020 18
6021 17
6022 24
6023 21
6024 17
6025 24
6026 21
6027 15
6028 20
6029 18
6030 16
6031 13
6032 22
6033 39
6034 31
6035 22
6036 31
6037 15
6038 20
6039 18
6040 17
6041 24
6042 21
6043 17
6044 24
6045 21
6046 15
6047 20
6048 18
6049 16
6050 15
6051 18
6052 27
6053 23
6054 18
6055 27
6056 23
6057 14
6058 17
6059 16
6060 16
6061 21
6062 19
6063 16
6064 21
6065 19
6066 17
6067 16
6068 13
6069 22
6070 39
6071 31
6072 22
6073 39
6074 31
6075 15
6076 20
6077 18
6078 17
6079 24
6080 21
6081 17
6082 24
6083 21
6084 15
6085 20
6086 18
6087 16
6088 15
6089 8
6090 11
6091 20
6092 37
6093 29
6094 20
6095 29
6096 13
6097 18
6098 16
6099 15
6100 22
6101 19
6102 15
6103 22
6104 19
6105 13
6106 18
6107 16
6108 14
6109 13
6110 11
6111 20
6112 37
6113 29
6114 20
6115 37
6116 29
6117 13
6118 18
6119 16
6120 15
6121 19
6122 15
6123 22
6124 19
6125 13
6126 18
6127 16
6128 14
6129 13
6130 16
6131 25
6132 21
6133 16
6134 25
6135 21
6136 12
6137 15
6138 14
6139 14
6140 19
6141 17
6142 14
6143 19
6144 17
6145 12
6146 15
6147 14
6148 11
6149 20
6150 37
6151 29
6152 20
6153 37
6154 29
6155 13
6156 18
6157 16
6158 15
6159 22
6160 19
6161 15
6162 22
6163 13
6164 18
6165 16
6166 14
6167 13
6168 11
6169 20
6170 37
6171 29
6172 20
6173 37
6174 29
6175 13
6176 18
6177 16
6178 15
6179 22
6180 19
6181 15
6182 19
6183 13
6184 18
6185 16
6186 14
6187 13
6188 11
6189 20
6190 37
6191 29
6192 20
6193 37
6194 13
6195 18
6196 16
6197 15
6198 22
6199 19
6200 15
6201 22
6202 19
6203 13
6204 18
6205 16
6206 14
6207 13
6208 16
6209 25
6210 21
6211 16
6212 25
6213 21
6214 12
6215 15
6216 14
6217 14
6218 19
6219 17
6220 14
6221 19
6222 17
6223 12
6224 15
6225 14
6226 11
6227 20
6228 29
6229 20
6230 37
6231 29
6232 13
6233 18
6234 16
6235 15
6236 19
6237 15
6238 22
6239 19
6240 13
6241 18
6242 16
6243 14
6244 13
6245 6
6246 9
6247 18
6248 35
6249 18
6250 27
6251 11
6252 16
6253 14
6254 13
6255 20
6256 17
6257 13
6258 20
6259 17
6260 11
6261 16
6262 14
6263 12
6264 11
6265 9
6266 18
6267 35
6268 27
6269 18
6270 35
6271 27
6272 11
6273 16
6274 14
6275 13
6276 20
6277 17
6278 13
6279 20
6280 17
6281 11
6282 16
6283 14
6284 12
6285 11
6286 14
6287 23
6288 19
6289 14
6290 23
6291 19
6292 10
6293 13
6294 12
6295 12
6296 17
6297 15
6298 12
6299 17
6300 15
6301 10
6302 13
6303 12
6304 9
6305 18
6306 35
6307 27
6308 18
6309 35
6310 27
6311 11
6312 16
6313 14
6314 13
6315 20
6316 17
6317 13
6318 20
6319 17
6320 11
6321 16
6322 14
6323 11
6324 9
6325 18
6326 35
6327 27
6328 18
6329 35
6330 27
6331 11
6332 16
6333 14
6334 13
6335 20
6336 17
6337 13
6338 20
6339 17
6340 11
6341 16
6342 14
6343 12
6344 11
6345 9
6346 18
6347 35
6348 27
6349 18
6350 27
6351 11
6352 16
6353 14
6354 13
6355 20
6356 17
6357 13
6358 20
6359 17
6360 11
6361 16
6362 14
6363 12
6364 11
6365 14
6366 23
6367 19
6368 14
6369 23
6370 19
6371 10
6372 13
6373 12
6374 12
6375 17
6376 12
6377 17
6378 15
6379 10
6380 13
6381 12
6382 9
6383 18
6384 35
6385 27
6386 18
6387 35
6388 27
6389 11
6390 16
6391 14
6392 13
6393 20
6394 17
6395 13
6396 20
6397 17
6398 11
6399 16
6400 14
6401 12
6402 11
6403 5
6404 8
6405 17
6406 34
6407 26
6408 17
6409 34
6410 26
6411 10
6412 15
6413 13
6414 12
6415 19
6416 16
6417 12
6418 19
6419 16
6420 10
6421 13
6422 11
6423 10
6424 8
6425 17
6426 34
6427 26
6428 17
6429 34
6430 26
6431 10
6432 15
6433 12
6434 19
6435 16
6436 12
6437 19
6438 16
6439 10
6440 15
6441 13
6442 11
6443 10
6444 13
6445 22
6446 18
6447 13
6448 22
6449 18
6450 9
6451 12
6452 11
6453 11
6454 16
6455 14
6456 11
6457 16
6458 14
6459 9
6460 12
6461 11
6462 17
6463 34
6464 26
6465 17
6466 34
6467 26
6468 10
6469 15
6470 13
6471 12
6472 19
6473 16
6474 12
6475 19
6476 16
6477 10
6478 15
6479 13
6480 11
6481 10
6482 8
6483 17
6484 34
6485 26
6486 17
6487 34
6488 26
6489 10
6490 15
6491 13
6492 12
6493 19
6494 16
6495 12
6496 19
6497 16
6498 10
6499 15
6500 13
6501 11
6502 10
6503 8
6504 17
6505 34
6506 26
6507 17
6508 34
6509 26
6510 10
6511 15
6512 13
6513 12
6514 19
6515 16
6516 12
6517 16
6518 10
6519 15
6520 13
6521 11
6522 10
6523 13
6524 22
6525 18
6526 13
6527 18
6528 9
6529 12
6530 11
6531 11
6532 16
6533 14
6534 11
6535 16
6536 14
6537 9
6538 12
6539 11
6540 8
6541 17
6542 34
6543 26
6544 17
6545 34
6546 26
6547 10
6548 15
6549 13
6550 12
6551 19
6552 16
6553 12
6554 19
6555 16
6556 10
6557 15
6558 13
6559 11
6560 10
6561 11
6562 20
6563 37
6564 29
6565 20
6566 37
6567 29
6568 13
6569 18
6570 16
6571 15
6572 22
6573 19
6574 15
6575 19
6576 13
6577 18
6578 16
6579 14
6580 13
6581 11
6582 20
6583 37
6584 29
6585 20
6586 37
6587 29
6588 13
6589 18
6590 16
6591 15
6592 22
6593 19
6594 15
6595 22
6596 19
6597 13
6598 18
6599 16
6600 14
6601 13
6602 16
6603 25
6604 21
6605 16
6606 25
6607 21
6608 12
6609 15
6610 14
6611 14
6612 19
6613 17
6614 14
6615 19
6616 17
6617 12
6618 14
6619 11
6620 20
6621 37
6622 29
6623 20
6624 37
6625 29
6626 13
6627 18
6628 16
6629 15
6630 22
6631 19
6632 15
6633 22
6634 19
6635 13
6636 18
6637 16
6638 14
6639 13
6640 11
6641 20
6642 37
6643 29
6644 20
6645 37
6646 29
6647 13
6648 18
6649 16
6650 15
6651 22
6652 19
6653 15
6654 22
6655 19
6656 13
6657 18
6658 16
6659 14
6660 13
6661 11
6662 20
6663 37
6664 29
6665 20
6666 37
6667 18
6668 16
6669 15
6670 22
6671 19
6672 15
6673 22
6674 19
6675 13
6676 18
6677 16
6678 14
6679 13
6680 25
6681 21
6682 16
6683 25
6684 21
6685 12
6686 15
6687 14
6688 14
6689 19
6690 17
6691 14
6692 19
6693 17
6694 12
6695 15
6696 14
6697 11
6698 20
6699 37
6700 29
6701 20
6702 37
6703 29
6704 13
6705 16
6706 15
6707 22
6708 19
6709 15
6710 22
6711 19
6712 13
6713 18
6714 16
6715 14
6716 13
6717 17
6718 20
6719 29
6721 38
6722 29
6723 38
6724 22
6725 27
6726 25
6727 24
6728 31
6729 28
6730 24
6731 31
6732 28
6733 22
6734 27
6735 25
6736 23
6737 22
6738 20
6739 29
6741 38
6742 29
6744 38
6745 22
6746 27
6747 25
6748 24
6749 31
6750 28
6751 24
6752 31
6753 28
6754 22
6755 27
6756 25
6757 23
6758 22
6759 25
6760 34
6761 30
6762 25
6763 34
6764 30
6765 21
6766 24
6767 23
6768 23
6769 28
6770 26
6771 23
6772 28
6773 26
6774 21
6775 24
6776 23
6777 20
6778 29
6780 38
6781 29
6783 38
6784 22
6785 27
6786 25
6787 24
6788 31
6789 28
6790 24
6791 31
6792 22
6793 27
6794 25
6795 23
6796 22
6797 20
6798 29
6799 38
6800 29
6802 38
6803 22
6804 27
6805 25
6806 24
6807 31
6808 28
6809 24
6810 31
6811 28
6812 22
6813 27
6814 25
6815 23
6816 22
6817 29
6818 38
6819 29
6821 38
6822 22
6823 27
6824 25
6825 24
6826 31
6827 28
6828 24
6829 31
6830 28
6831 22
6832 27
6833 25
6834 23
6835 22
6836 25
6837 30
6838 25
6839 34
6840 30
6841 21
6842 24
6843 23
6844 23
6845 28
6846 26
6847 23
6848 28
6849 26
6850 21
6851 24
6852 23
6853 20
6855 38
6856 29
6858 38
6859 22
6860 27
6861 25
6862 24
6863 31
6864 28
6865 24
6866 31
6867 28
6868 22
6869 27
6870 25
6871 23
6872 22
6873 13
6874 16
6875 25
6877 34
6878 25
6880 34
6881 18
6882 21
6883 20
6884 27
6885 24
6886 20
6887 27
6888 24
6889 18
6890 23
6891 19
6892 18
6893 25
6895 34
6896 25
6898 34
6899 18
6900 23
6901 21
6902 20
6903 27
6904 24
6905 20
6906 27
6907 24
6908 18
6909 23
6910 21
6911 19
6912 18
6913 21
6914 30
6915 26
6916 21
6917 30
6918 26
6919 17
6920 20
6921 19
6922 19
6923 24
6924 22
6925 19
6926 24
6927 22
6928 17
6929 20
6930 19
6931 16
6932 25
6934 34
6935 25
6937 34
6938 18
6939 23
6940 21
6941 20
6942 27
6943 24
6944 20
6945 27
6946 24
6947 18
6948 23
6949 21
6950 19
6951 18
6952 16
6953 25
6955 34
6956 25
6958 34
6959 18
6960 23
6961 21
6962 20
6963 27
6964 24
6965 20
6966 27
6967 24
6968 18
6969 23
6970 21
6971 19
6972 18
6973 16
6974 25
6976 25
6978 34
6979 18
6980 23
6981 21
6982 20
6983 27
6984 24
6985 20
6986 27
6987 24
6988 18
6989 21
6990 19
6991 21
6992 30
6993 21
6994 30
6995 26
6996 17
6997 20
6998 19
6999 19
7000 22
7001 19
7002 24
7003 22
7004 17
7005 20
7006 19
7007 16
7008 25
7010 34
7012 34
7013 18
7014 23
7015 21
7016 20
7017 27
7018 24
7019 20
7020 27
7021 24
7022 18
7023 23
7024 21
7025 19
7026 18
7027 8
7028 11
7029 20
7030 37
7031 29
7032 20
7033 37
7034 29
7035 13
7036 18
7037 16
7038 15
7039 22
7040 19
7041 15
7042 22
7043 19
7044 13
7045 18
7046 16
7047 14
7048 13
7049 11
7050 20
7051 37
7052 29
7053 20
7054 37
7055 29
7056 13
7057 18
7058 16
7059 15
7060 22
7061 19
7062 15
7063 22
7064 19
7065 13
7066 18
7067 16
7068 14
7069 13
7070 16
7071 25
7072 21
7073 16
7074 25
7075 21
7076 12
7077 15
7078 14
7079 14
7080 19
7081 17
7082 14
7083 19
7084 17
7085 12
7086 15
7087 14
7088 11
7089 20
7090 37
7091 29
7092 20
7093 37
7094 29
7095 13
7096 18
7097 16
7098 15
7099 22
7100 19
7101 22
7102 19
7103 13
7104 18
7105 16
7106 14
7107 13
7108 11
7109 20
7110 37
7111 29
7112 20
7113 37
7114 29
7115 13
7116 18
7117 16
7118 15
7119 22
7120 19
7121 15
7122 22
7123 19
7124 13
7125 18
7126 16
7127 14
7128 13
7129 11
7130 20
7131 29
7132 20
7133 37
7134 29
7135 13
7136 18
7137 16
7138 22
7139 19
7140 15
7141 22
7142 19
7143 13
7144 16
7145 14
7146 16
7147 25
7148 21
7149 16
7150 25
7151 21
7152 12
7153 15
7154 14
7155 14
7156 19
7157 17
7158 14
7159 19
7160 17
7161 12
7162 15
7163 14
7164 11
7165 20
7166 37
7167 29
7168 20
7169 37
7170 29
7171 13
7172 18
7173 16
7174 15
7175 22
7176 19
7177 15
7178 22
7179 19
7180 13
7181 18
7182 16
7183 14
7184 13
7185 17
7186 20
7188 38
7189 29
7191 38
7192 22
7193 27
7194 25
7195 24
7196 31
7197 28
7198 24
7199 31
7200 28
7201 22
7202 27
7203 25
7204 23
7205 22
7206 20
7207 29
7209 38
7210 29
7212 38
7213 22
7214 27
7215 25
7216 24
7217 31
7218 28
7219 24
7220 31
7221 28
7222 22
7223 27
7224 25
7225 23
7226 22
7227 25
7228 34
7229 30
7230 25
7231 34
7232 30
7233 21
7234 24
7235 23
7236 23
7237 28
7238 26
7239 23
7240 28
7241 26
7242 21
7243 24
7244 23
7245 20
7246 29
7248 38
7249 29
7251 38
7252 22
7253 27
7254 25
7255 24
7256 31
7257 28
7258 24
7259 31
7260 28
7261 22
7262 27
7263 25
7264 23
7265 22
7266 20
7267 29
7269 38
7270 29
7272 38
7273 22
7274 27
7275 25
7276 24
7277 31
7278 28
7279 24
7280 31
7281 28
7282 22
7283 27
7284 23
7285 22
7286 20
7287 29
7289 38
7290 29
7291 38
7292 22
7293 27
7294 25
7295 24
7296 31
7297 28
7298 24
7299 28
7300 22
7301 27
7302 25
7303 22
7304 25
7305 34
7306 30
7307 25
7308 34
7309 30
7310 21
7311 24
7312 23
7313 23
7314 28
7315 26
7316 23
7317 28
7318 26
7319 21
7320 24
7321 23
7322 20
7323 29
7325 38
7326 29
7328 38
7329 22
7330 27
7331 25
7332 24
7333 31
7334 28
7335 24
7336 31
7337 28
7338 22
7339 27
7340 25
7341 23
7342 22
7343 13
7344 16
7345 25
7347 34
7348 25
7350 34
7351 18
7352 23
7353 20
7354 27
7355 24
7356 20
7357 27
7358 24
7359 18
7360 23
7361 21
7362 19
7363 18
7364 16
7365 25
7367 34
7368 25
7370 34
7371 18
7372 23
7373 21
7374 20
7375 27
7376 24
7377 20
7378 27
7379 24
7380 18
7381 23
7382 19
7383 18
7384 21
7385 30
7386 26
7387 21
7388 30
7389 26
7390 17
7391 19
7392 24
7393 22
7394 19
7395 24
7396 22
7397 17
7398 20
7399 19
7400 16
7401 25
7403 34
7404 25
7406 34
7407 18
7408 23
7409 21
7410 20
7411 27
7412 24
7413 20
7414 27
7415 24
7416 18
7417 23
7418 21
7419 19
7420 18
7421 16
7422 25
7424 34
7425 25
7427 34
7428 18
7429 23
7430 21
7431 20
7432 27
7433 20
7434 27
7435 18
7436 23
7437 21
7438 19
7439 18
7440 16
7441 25
7443 34
7444 25
7446 34
7447 18
7448 23
7449 21
7450 20
7451 27
7452 24
7453 20
7454 27
7455 24
7456 18
7457 23
7458 21
7459 19
7460 18
7461 21
7462 30
7463 26
7464 21
7465 30
7466 26
7467 20
7468 19
7469 19
7470 24
7471 22
7472 19
7473 24
7474 22
7475 17
7476 20
7477 19
7478 16
7479 25
7481 34
7482 25
7484 34
7485 18
7486 23
7487 21
7488 20
7489 27
7490 24
7491 20
7492 27
7493 24
7494 18
7495 23
7496 21
7497 18
7498 4
7499 7
7500 16
7501 33
7502 25
7503 16
7504 33
7505 25
7506 9
7507 12
7508 11
7509 18
7510 15
7511 11
7512 18
7513 15
7514 9
7515 14
7516 12
7517 10
7518 9
7519 7
7520 16
7521 33
7522 25
7523 16
7524 33
7525 25
7526 9
7527 14
7528 12
7529 11
7530 18
7531 15
7532 11
7533 18
7534 9
7535 14
7536 12
7537 10
7538 12
7539 21
7540 17
7541 12
7542 21
7543 17
7544 8
7545 11
7546 10
7547 10
7548 15
7549 13
7550 10
7551 13
7552 8
7553 11
7554 10
7555 7
7556 16
7557 33
7558 25
7559 16
7560 33
7561 25
7562 9
7563 14
7564 12
7565 11
7566 18
7567 15
7568 11
7569 18
7570 15
7571 9
7572 14
7573 12
7574 10
7575 9
7576 7
7577 16
7578 33
7579 25
7580 16
7581 33
7582 25
7583 9
7584 14
7585 12
7586 11
7587 18
7588 15
7589 11
7590 18
7591 15
7592 9
7593 14
7594 12
7595 10
7596 9
7597 7
7598 16
7599 33
7600 25
7601 16
7602 33
7603 25
7604 9
7605 14
7606 12
7607 11
7608 18
7609 15
7610 11
7611 18
7612 15
7613 9
7614 14
7615 12
7616 10
7617 9
7618 12
7619 21
7620 17
7621 12
7622 21
7623 17
7624 8
7625 11
7626 10
7627 10
7628 15
7629 13
7630 10
7631 15
7632 13
7633 8
7634 11
7635 10
7636 16
7637 33
7638 25
7639 16
7640 33
7641 25
7642 9
7643 14
7644 12
7645 11
7646 18
7647 15
7648 18
7649 15
7650 9
7651 14
7652 12
7653 10
7654 9
7655 7
7656 10
7657 19
7658 36
7659 28
7660 19
7661 36
7662 28
7663 12
7664 15
7665 14
7666 21
7667 18
7668 14
7669 21
7670 18
7671 12
7672 17
7673 15
7674 13
7675 12
7676 10
7677 19
7678 36
7679 28
7680 36
7681 28
7682 12
7683 17
7684 15
7685 14
7686 21
7687 18
7688 14
7689 21
7690 18
7691 12
7692 17
7693 15
7694 13
7695 12
7696 15
7697 24
7698 20
7699 15
7700 24
7701 20
7702 11
7703 14
7704 13
7705 13
7706 18
7707 16
7708 13
7709 18
7710 16
7711 11
7712 14
7713 13
7714 10
7715 19
7716 36
7717 28
7718 19
7719 36
7720 28
7721 12
7722 17
7723 15
7724 14
7725 21
7726 18
7727 14
7728 21
7729 18
7730 12
7731 17
7732 15
7733 13
7734 12
7735 10
7736 19
7737 36
7738 28
7739 19
7740 36
7741 28
7742 17
7743 15
7744 14
7745 18
7746 14
7747 21
7748 18
7749 12
7750 17
7751 15
7752 13
7753 12
7754 10
7755 19
7756 36
7757 28
7758 19
7759 36
7760 28
7761 12
7762 17
7763 15
7764 14
7765 21
7766 18
7767 14
7768 21
7769 18
7770 12
7771 17
7772 15
7773 13
7774 12
7775 15
7776 24
7777 20
7778 15
7779 24
7780 20
7781 11
7782 14
7783 13
7784 13
7785 18
7786 16
7787 13
7788 18
7789 16
7790 11
7791 14
7792 13
7793 10
7794 19
7795 36
7796 28
7797 19
7798 36
7799 12
7800 17
7801 15
7802 14
7803 21
7804 18
7805 14
7806 21
7807 18
7808 12
7809 17
7810 15
7811 13
7812 12
7813 6
7814 9
7815 18
7816 35
7817 27
7818 18
7819 35
7820 11
7821 16
7822 14
7823 13
7824 20
7825 17
7826 13
7827 20
7828 17
7829 11
7830 16
7831 12
7832 11
7833 9
7834 18
7835 35
7836 27
7837 18
7838 35
7839 27
7840 11
7841 16
7842 14
7843 13
7844 17
7845 13
7846 20
7847 17
7848 11
7849 16
7850 14
7851 12
7852 11
7853 14
7854 23
7855 19
7856 14
7857 23
7858 19
7859 10
7860 13
7861 12
7862 12
7863 17
7864 15
7865 12
7866 17
7867 15
7868 10
7869 13
7870 12
7871 9
7872 18
7873 35
7874 27
7875 18
7876 27
7877 11
7878 16
7879 14
7880 13
7881 20
7882 17
7883 13
7884 20
7885 17
7886 11
7887 16
7888 14
7889 12
7890 11
7891 9
7892 18
7893 35
7894 27
7895 18
7896 35
7897 27
7898 11
7899 16
7900 14
7901 20
7902 17
7903 13
7904 17
7905 11
7906 16
7907 14
7908 12
7909 11
7910 9
7911 18
7912 35
7913 27
7914 18
7915 35
7916 27
7917 11
7918 16
7919 14
7920 13
7921 20
7922 17
7923 13
7924 20
7925 17
7926 11
7927 12
7928 11
7929 14
7930 23
7931 19
7932 14
7933 23
7934 19
7935 10
7936 13
7937 12
7938 12
7939 17
7940 12
7941 17
7942 15
7943 10
7944 13
7945 12
7946 9
7947 18
7948 35
7949 27
7950 18
7951 27
7952 16
7953 14
7954 13
7955 20
7956 17
7957 13
7958 20
7959 17
7960 11
7961 16
7962 14
7963 12
7964 11
7965 6
7966 9
7967 18
7968 35
7969 27
7970 18
7971 35
7972 27
7973 11
7974 16
7975 14
7976 13
7977 20
7978 17
7979 13
7980 20
7981 17
7982 11
7983 16
7984 12
7985 11
7986 9
7987 18
7988 35
7989 27
7990 18
7991 35
7992 27
7993 11
7994 16
7995 14
7996 13
7997 20
7998 17
7999 13
8000 20
8001 17
8002 11
8003 16
8004 14
8005 12
8006 14
8007 23
8008 19
8009 14
8010 23
8011 19
8012 10
8013 13
8014 12
8015 17
8016 15
8017 12
8018 17
8019 15
8020 10
8021 13
8022 12
8023 9
8024 18
8025 35
8026 27
8027 18
8028 35
8029 27
8030 11
8031 16
8032 14
8033 13
8034 20
8035 17
8036 13
8037 20
8038 17
8039 11
8040 16
8041 14
8042 12
8043 11
8044 9
8045 18
8046 35
8047 27
8048 18
8049 35
8050 27
8051 11
8052 16
8053 14
8054 13
8055 20
8056 17
8057 13
8058 20
8059 17
8060 11
8061 16
8062 14
8063 12
8064 9
8065 35
8066 27
8067 18
8068 35
8069 27
8070 11
8071 16
8072 14
8073 13
8074 20
8075 17
8076 13
8077 20
8078 17
8079 11
8080 16
8081 12
8082 11
8083 14
8084 23
8085 19
8086 14
8087 23
8088 19
8089 10
8090 13
8091 12
8092 12
8093 17
8094 15
8095 12
8096 17
8097 15
8098 10
8099 12
8100 9
8101 18
8102 35
8103 27
8104 18
8105 35
8106 27
8107 11
8108 16
8109 14
8110 13
8111 20
8112 17
8113 13
8114 20
8115 17
8116 11
8117 16
8118 14
8119 12
8120 11
8121 11
8122 14
8123 23
8125 32
8126 23
8128 32
8129 16
8130 21
8131 19
8132 18
8133 25
8134 22
8135 18
8136 25
8137 22
8138 21
8139 19
8140 17
8141 16
8142 14
8143 23
8145 32
8146 23
8148 32
8149 16
8150 21
8151 19
8152 18
8153 25
8154 22
8155 18
8156 25
8157 22
8158 16
8159 21
8160 19
8161 17
8162 19
8163 28
8164 24
8165 19
8166 28
8167 24
8168 15
8169 18
8170 17
8171 17
8172 22
8173 20
8174 17
8175 22
8176 20
8177 15
8178 18
8179 17
8180 14
8181 23
8183 32
8184 23
8186 32
8187 16
8188 21
8189 19
8190 18
8191 25
8192 22
8193 18
8194 25
8195 22
8196 16
8197 21
8198 19
8199 17
8200 16
8201 14
8202 23
8204 32
8205 23
8207 32
8208 16
8209 21
8210 19
8211 18
8212 25
8213 22
8214 18
8215 25
8216 22
8217 16
8218 21
8219 19
8220 17
8221 16
8222 14
8223 23
8225 32
8226 23
8228 32
8229 16
8230 21
8231 19
8232 18
8233 25
8234 22
8235 18
8236 25
8237 22
8238 16
8239 21
8240 19
8241 17
8242 16
8243 19
8244 28
8245 24
8246 19
8247 28
8248 24
8249 15
8250 18
8251 17
8252 17
8253 22
8254 20
8255 17
8256 20
8257 15
8258 18
8259 17
8260 14
8261 23
8263 32
8265 32
8266 21
8267 19
8268 18
8269 25
8270 22
8271 18
8272 25
8273 22
8274 16
8275 21
8276 19
8277 17
8278 16
8279 12
8280 21
8281 38
8282 30
8283 21
8284 38
8285 30
8286 19
8287 17
8288 16
8289 23
8290 20
8291 16
8292 23
8293 14
8294 19
8295 17
8296 15
8297 14
8298 12
8299 21
8300 38
8301 30
8302 21
8303 38
8304 30
8305 14
8306 19
8307 17
8308 16
8309 23
8310 20
8311 16
8312 23
8313 20
8314 14
8315 19
8316 17
8317 15
8318 14
8319 17
8320 26
8321 22
8322 17
8323 26
8324 22
8325 16
8326 15
8327 15
8328 20
8329 18
8330 15
8331 20
8332 18
8333 13
8334 16
8335 15
8336 12
8337 21
8338 38
8339 30
8340 21
8341 30
8342 14
8343 19
8344 17
8345 16
8346 23
8347 20
8348 16
8349 20
8350 14
8351 19
8352 17
8353 15
8354 14
8355 12
8356 21
8357 38
8358 30
8359 21
8360 38
8361 30
8362 14
8363 19
8364 17
8365 16
8366 23
8367 20
8368 16
8369 23
8370 20
8371 14
8372 19
8373 17
8374 15
8375 14
8376 12
8377 21
8378 38
8379 30
8380 21
8381 38
8382 30
8383 14
8384 19
8385 17
8386 16
8387 23
8388 20
8389 16
8390 23
8391 20
8392 14
8393 19
8394 17
8395 15
8396 14
8397 17
8398 26
8399 17
8400 26
8401 22
8402 13
8403 16
8404 15
8405 15
8406 20
8407 18
8408 15
8409 20
8410 18
8411 13
8412 16
8413 15
8414 12
8415 21
8416 38
8417 30
8418 21
8419 38
8420 30
8421 19
8422 17
8423 16
8424 23
8425 20
8426 16
8427 23
8428 20
8429 14
8430 19
8431 17
8432 15
8433 14
8434 6
8435 9
8436 18
8437 35
8438 27
8439 18
8440 35
8441 27
8442 11
8443 16
8444 14
8445 13
8446 20
8447 17
8448 13
8449 20
8450 17
8451 11
8452 16
8453 14
8454 12
8455 11
8456 9
8457 18
8458 35
8459 27
8460 18
8461 35
8462 27
8463 11
8464 14
8465 13
8466 20
8467 17
8468 13
8469 20
8470 17
8471 11
8472 16
8473 14
8474 12
8475 11
8476 14
8477 23
8478 19
8479 14
8480 23
8481 19
8482 10
8483 13
8484 12
8485 12
8486 17
8487 15
8488 12
8489 17
8490 15
8491 10
8492 13
8493 12
8494 9
8495 18
8496 35
8497 27
8498 18
8499 35
8500 27
8501 11
8502 16
8503 14
8504 13
8505 20
8506 17
8507 13
8508 20
8509 17
8510 11
8511 16
8512 14
8513 12
8514 11
8515 9
8516 18
8517 35
8518 27
8519 18
8520 35
8521 27
8522 11
8523 14
8524 13
8525 20
8526 17
8527 13
8528 20
8529 17
8530 11
8531 16
8532 14
8533 12
8534 11
8535 9
8536 18
8537 35
8538 27
8539 18
8540 35
8541 11
8542 16
8543 14
8544 13
8545 20
8546 17
8547 13
8548 20
8549 17
8550 11
8551 16
8552 14
8553 12
8554 11
8555 14
8556 23
8557 19
8558 23
8559 19
8560 10
8561 13
8562 12
8563 12
8564 17
8565 15
8566 12
8567 17
8568 15
8569 10
8570 13
8571 12
8572 9
8573 18
8574 35
8575 27
8576 18
8577 35
8578 27
8579 11
8580 16
8581 14
8582 13
8583 20
8584 17
8585 13
8586 20
8587 17
8588 11
8589 16
8590 14
8591 12
8592 11
8593 11
8594 14
8595 23
8596 32
8597 23
8598 32
8599 16
8600 21
8601 19
8602 18
8603 22
8604 18
8605 25
8606 22
8607 21
8608 19
8609 17
8610 16
8611 14
8612 23
8614 32
8615 23
8617 32
8618 16
8619 21
8620 19
8621 18
8622 25
8623 22
8624 18
8625 25
8626 22
8627 16
8628 21
8629 19
8630 17
8631 16
8632 19
8633 28
8634 24
8635 19
8636 28
8637 24
8638 15
8639 18
8640 17
8641 17
8642 22
8643 20
8644 17
8645 22
8646 20
8647 15
8648 18
8649 17
8650 14
8651 23
8653 32
8655 32
8656 16
8657 21
8658 19
8659 18
8660 25
8661 22
8662 18
8663 25
8664 22
8665 16
8666 21
8667 19
8668 17
8669 16
8670 14
8671 23
8673 32
8674 23
8676 32
8677 16
8678 21
8679 19
8680 18
8681 25
8682 22
8683 18
8684 25
8685 22
8686 16
8687 19
8688 17
8689 16
8690 14
8691 23
8693 32
8694 23
8696 32
8697 16
8698 21
8699 19
8700 18
8701 25
8702 22
8703 18
8704 25
8705 22
8706 16
8707 21
8708 19
8709 17
8710 16
8711 19
8712 28
8713 24
8714 19
8715 28
8716 24
8717 15
8718 18
8719 17
8720 17
8721 22
8722 20
8723 17
8724 22
8725 20
8726 15
8727 18
8728 17
8729 23
8731 32
8732 23
8734 32
8735 16
8736 21
8737 19
8738 18
8739 22
8740 25
8741 22
8742 16
8743 21
8744 17
8745 16
8746 12
8747 21
8748 38
8749 30
8750 21
8751 38
8752 30
8753 14
8754 19
8755 17
8756 16
8757 23
8758 20
8759 16
8760 23
8761 20
8762 14
8763 19
8764 17
8765 15
8766 14
8767 12
8768 21
8769 38
8770 30
8771 21
8772 38
8773 30
8774 14
8775 19
8776 17
8777 16
8778 23
8779 20
8780 16
8781 23
8782 20
8783 14
8784 19
8785 17
8786 15
8787 14
8788 17
8789 26
8790 22
8791 17
8792 26
8793 22
8794 13
8795 16
8796 15
8797 15
8798 20
8799 18
8800 15
8801 20
8802 13
8803 16
8804 15
8805 12
8806 21
8807 38
8808 30
8809 21
8810 38
8811 30
8812 14
8813 19
8814 17
8815 16
8816 23
8817 20
8818 16
8819 23
8820 20
8821 14
8822 19
8823 17
8824 15
8825 14
8826 12
8827 21
8828 38
8829 30
8830 21
8831 38
8832 30
8833 14
8834 19
8835 17
8836 16
8837 23
8838 20
8839 16
8840 23
8841 20
8842 14
8843 19
8844 17
8845 15
8846 14
8847 12
8848 21
8849 38
8850 30
8851 21
8852 38
8853 30
8854 14
8855 19
8856 17
8857 16
8858 23
8859 20
8860 16
8861 23
8862 20
8863 14
8864 17
8865 15
8866 14
8867 17
8868 26
8869 22
8870 17
8871 26
8872 22
8873 13
8874 16
8875 15
8876 15
8877 18
8878 15
8879 20
8880 18
8881 13
8882 16
8883 15
8884 12
8885 21
8886 38
8887 30
8888 21
8889 38
8890 30
8891 14
8892 19
8893 17
8894 16
8895 23
8896 20
8897 16
8898 23
8899 20
8900 14
8901 19
8902 17
8903 15
8904 14
8905 4
8906 7
8907 16
8908 33
8909 25
8910 16
8911 33
8912 25
8913 9
8914 14
8915 12
8916 11
8917 15
8918 11
8919 18
8920 15
8921 9
8922 14
8923 12
8924 10
8925 9
8926 7
8927 16
8928 33
8929 25
8930 16
8931 33
8932 25
8933 9
8934 12
8935 11
8936 15
8937 11
8938 18
8939 15
8940 14
8941 12
8942 10
8943 9
8944 12
8945 21
8946 17
8947 12
8948 17
8949 8
8950 11
8951 10
8952 10
8953 15
8954 13
8955 10
8956 15
8957 13
8958 8
8959 11
8960 10
8961 7
8962 16
8963 33
8964 25
8965 16
8966 33
8967 25
8968 9
8969 14
8970 12
8971 18
8972 15
8973 11
8974 18
8975 15
8976 9
8977 14
8978 12
8979 10
8980 9
8981 7
8982 16
8983 33
8984 25
8985 16
8986 33
8987 25
8988 9
8989 14
8990 12
8991 11
8992 15
8993 11
8994 18
8995 9
8996 14
8997 12
8998 10
8999 9
9000 16
9001 33
9002 25
9003 16
9004 33
9005 25
9006 9
9007 14
9008 12
9009 11
9010 18
9011 15
9012 11
9013 18
9014 15
9015 9
9016 14
9017 12
9018 10
9019 9
9020 12
9021 17
9022 12
9023 21
9024 17
9025 8
9026 11
9027 10
9028 15
9029 13
9030 10
9031 15
9032 13
9033 8
9034 10
9035 7
9036 16
9037 33
9038 25
9039 16
9040 33
9041 25
9042 9
9043 14
9044 12
9045 11
9046 18
9047 15
9048 11
9049 18
9050 15
9051 9
9052 14
9053 12
9054 10
9055 9
9056 7
9057 10
9058 19
9059 36
9060 28
9061 19
9062 36
9063 28
9064 12
9065 17
9066 15
9067 14
9068 21
9069 18
9070 21
9071 18
9072 12
9073 17
9074 15
9075 13
9076 12
9077 10
9078 19
9079 36
9080 28
9081 19
9082 36
9083 28
9084 12
9085 17
9086 15
9087 14
9088 21
9089 18
9090 14
9091 21
9092 18
9093 12
9094 17
9095 15
9096 13
9097 12
9098 15
9099 24
9100 20
9101 15
9102 24
9103 20
9104 11
9105 14
9106 13
9107 13
9108 18
9109 16
9110 13
9111 16
9112 11
9113 14
9114 13
9115 10
9116 36
9117 28
9118 19
9119 36
9120 28
9121 12
9122 17
9123 15
9124 14
9125 21
9126 18
9127 14
9128 21
9129 18
9130 12
9131 17
9132 15
9133 13
9134 12
9135 19
9136 36
9137 28
9138 19
9139 36
9140 28
9141 12
9142 17
9143 15
9144 14
9145 21
9146 18
9147 14
9148 21
9149 18
9150 12
9151 17
9152 15
9153 13
9154 12
9155 10
9156 19
9157 36
9158 28
9159 19
9160 36
9161 28
9162 12
9163 17
9164 15
9165 14
9166 21
9167 18
9168 14
9169 21
9170 18
9171 12
9172 17
9173 15
9174 13
9175 12
9176 15
9177 24
9178 20
9179 15
9180 24
9181 20
9182 11
9183 14
9184 13
9185 13
9186 18
9187 16
9188 18
9189 16
9190 11
9191 14
9192 10
9193 19
9194 36
9195 28
9196 19
9197 36
9198 28
9199 12
9200 17
9201 15
9202 14
9203 21
9204 18
9205 14
9206 21
9207 18
9208 12
9209 17
9210 15
9211 13
9212 12
9213 9
9214 18
9215 35
9216 27
9217 18
9218 35
9219 27
9220 11
9221 16
9222 14
9223 13
9224 20
9225 17
9226 13
9227 20
9228 17
9229 11
9230 16
9231 12
9232 11
9233 9
9234 18
9235 35
9236 27
9237 18
9238 35
9239 27
9240 11
9241 16
9242 14
9243 13
9244 20
9245 17
9246 13
9247 20
9248 17
9249 11
9250 16
9251 14
9252 12
9253 11
9254 14
9255 23
9256 19
9257 14
9258 23
9259 19
9260 10
9261 13
9262 12
9263 12
9264 17
9265 15
9266 12
9267 17
9268 10
9269 13
9270 12
9271 9
9272 18
9273 35
9274 27
9275 18
9276 35
9277 27
9278 11
9279 16
9280 14
9281 13
9282 20
9283 17
9284 13
9285 20
9286 17
9287 11
9288 16
9289 14
9290 12
9291 11
9292 18
9293 35
9294 27
9295 18
9296 35
9297 27
9298 11
9299 16
9300 14
9301 13
9302 20
9303 17
9304 13
9305 20
9306 17
9307 11
9308 16
9309 14
9310 12
9311 11
9312 9
9313 18
9314 35
9315 27
9316 35
9317 27
9318 16
9319 14
9320 13
9321 20
9322 17
9323 13
9324 20
9325 17
9326 11
9327 16
9328 14
9329 12
9330 11
9331 14
9332 23
9333 19
9334 14
9335 23
9336 19
9337 10
9338 13
9339 12
9340 12
9341 17
9342 15
9343 12
9344 17
9345 15
9346 10
9347 13
9348 12
9349 9
9350 18
9351 35
9352 27
9353 18
9354 35
9355 27
9356 11
9357 16
9358 14
9359 13
9360 20
9361 17
9362 13
9363 17
9364 11
9365 16
9366 14
9367 12
9368 11
9369 3
9370 6
9371 15
9372 32
9373 24
9374 15
9375 32
9376 24
9377 8
9378 13
9379 11
9380 10
9381 17
9382 14
9383 10
9384 17
9385 14
9386 8
9387 13
9388 11
9389 9
9390 8
9391 6
9392 15
9393 32
9394 24
9395 15
9396 32
9397 24
9398 8
9399 13
9400 11
9401 10
9402 17
9403 14
9404 10
9405 17
9406 14
9407 8
9408 13
9409 11
9410 9
9411 8
9412 11
9413 20
9414 16
9415 11
9416 20
9417 16
9418 7
9419 10
9420 9
9421 9
9422 14
9423 12
9424 9
9425 14
9426 12
9427 7
9428 10
9429 9
9430 6
9431 15
9432 32
9433 24
9434 15
9435 32
9436 24
9437 8
9438 13
9439 11
9440 10
9441 17
9442 14
9443 10
9444 17
9445 14
9446 8
9447 13
9448 11
9449 9
9450 8
9451 6
9452 15
9453 32
9454 24
9455 15
9456 32
9457 24
9458 8
9459 13
9460 11
9461 10
9462 17
9463 14
9464 10
9465 17
9466 14
9467 8
9468 13
9469 11
9470 9
9471 8
9472 6
9473 15
9474 32
9475 15
9476 32
9477 24
9478 8
9479 13
9480 11
9481 10
9482 17
9483 14
9484 17
9485 14
9486 8
9487 13
9488 11
9489 9
9490 8
9491 20
9492 16
9493 11
9494 20
9495 16
9496 7
9497 9
9498 9
9499 14
9500 12
9501 9
9502 14
9503 12
9504 7
9505 10
9506 9
9507 6
9508 15
9509 24
9510 15
9511 32
9512 24
9513 8
9514 13
9515 11
9516 10
9517 17
9518 14
9519 17
9520 14
9521 8
9522 13
9523 11
9524 9
9525 8
9526 12
9527 15
9528 24
9529 33
9530 24
9532 33
9533 17
9534 22
9535 20
9536 19
9537 26
9538 23
9539 19
9540 26
9541 23
9542 17
9543 22
9544 18
9545 17
9546 15
9547 24
9549 33
9550 24
9552 33
9553 17
9554 22
9555 20
9556 19
9557 26
9558 23
9559 19
9560 26
9561 23
9562 17
9563 22
9564 20
9565 18
9566 17
9567 20
9568 29
9569 25
9570 20
9571 25
9572 16
9573 19
9574 18
9575 18
9576 23
9577 21
9578 18
9579 23
9580 21
9581 16
9582 19
9583 18
9584 15
9585 24
9587 33
9588 24
9590 33
9591 17
9592 22
9593 20
9594 19
9595 26
9596 23
9597 19
9598 26
9599 17
9600 22
9601 20
9602 18
9603 17
9604 15
9606 33
9607 24
9609 33
9610 17
9611 22
9612 20
9613 19
9614 26
9615 23
9616 19
9617 26
9618 23
9619 17
9620 22
9621 20
9622 18
9623 17
9624 15
9625 24
9627 33
9628 24
9630 33
9631 17
9632 22
9633 20
9634 19
9635 26
9636 23
9637 19
9638 26
9639 23
9640 17
9641 22
9642 20
9643 18
9644 17
9645 20
9646 29
9647 25
9648 20
9649 29
9650 25
9651 16
9652 19
9653 18
9654 18
9655 23
9656 18
9657 23
9658 21
9659 16
9660 19
9661 18
9662 15
9663 24
9665 33
9666 24
9668 33
9669 17
9670 20
9671 19
9672 26
9673 23
9674 19
9675 26
9676 23
9677 17
9678 22
9679 20
9680 18
9681 17
9682 29
9683 32
9690 34
9691 39
9692 37
9693 36
9696 36
9699 34
9700 39
9701 37
9702 35
9703 34
9704 32
9711 34
9712 39
9713 37
9714 36
9717 36
9720 34
9721 39
9722 37
9723 35
9724 34
9725 37
9728 37
9731 33
9732 36
9733 35
9734 35
9736 38
9737 35
9739 38
9740 33
9741 36
9742 35
9749 34
9750 39
9751 37
9752 36
9755 36
9758 34
9759 39
9760 37
9761 35
9762 34
9763 32
9768 34
9769 39
9770 37
9771 36
9776 34
9777 39
9778 37
9779 35
9780 34
9781 32
9787 34
9788 39
9789 37
9790 36
9793 36
9796 34
9797 39
9798 37
9799 35
9800 34
9801 37
9804 37
9807 33
9808 36
9809 35
9810 35
9812 38
9813 35
9815 38
9816 33
9817 36
9818 35
9825 34
9826 39
9827 37
9828 36
9831 36
9833 34
9834 39
9835 37
9836 34
9837 21
9838 24
9839 33
9842 33
9845 26
9846 31
9847 29
9848 28
9849 35
9850 32
9851 28
9852 35
9853 32
9854 26
9855 31
9856 29
9857 27
9858 26
9859 24
9860 33
9863 33
9866 26
9867 31
9868 29
9869 28
9870 35
9871 32
9872 28
9873 35
9874 32
9875 26
9876 31
9877 29
9878 27
9879 26
9880 29
9881 38
9882 34
9883 29
9884 38
9885 34
9886 25
9887 28
9888 27
9889 27
9890 32
9891 30
9892 27
9893 32
9894 30
9895 25
9896 28
9897 27
9898 24
9899 33
9903 26
9904 31
9905 29
9906 28
9907 35
9908 32
9909 28
9910 35
9911 32
9912 26
9913 31
9914 29
9915 27
9916 26
9917 24
9918 33
9921 33
9924 26
9925 31
9926 29
9927 28
9928 32
9929 28
9930 35
9931 32
9932 26
9933 31
9934 29
9935 27
9936 26
9937 24
9938 33
9941 33
9944 26
9945 31
9946 29
9947 28
9948 35
9949 32
9950 28
9951 35
9952 32
9953 26
9954 31
9955 29
9956 27
9957 26
9958 29
9959 38
9960 34
9961 29
9962 38
9963 34
9964 25
9965 28
9966 27
9967 27
9968 32
9969 30
9970 27
9971 32
9972 30
9973 25
9974 28
9975 27
9976 24
9979 33
9982 26
9983 31
9984 29
9985 28
9986 35
9987 32
9988 28
9989 35
9990 32
9991 26
9992 31
9993 29
9994 27
9995 26
9996 12
9997 15
9998 24
10000 33
10001 24
10003 33
10004 22
10005 20
10006 19
10007 26
10008 23
10009 19
10010 26
10011 23
10012 17
10013 22
10014 20
10015 18
10016 17
10017 15
10018 24
10020 33
10021 24
10023 33
10024 17
10025 22
10026 20
10027 19
10028 26
10029 19
10030 26
10031 23
10032 17
10033 22
10034 20
10035 18
10036 20
10037 29
10038 25
10039 20
10040 29
10041 25
10042 16
10043 19
10044 18
10045 18
10046 23
10047 21
10048 18
10049 23
10050 21
10051 16
10052 19
10053 18
10054 15
10055 24
10057 33
10058 24
10060 33
10061 17
10062 22
10063 20
10064 19
10065 26
10066 23
10067 19
10068 26
10069 23
10070 17
10071 22
10072 20
10073 18
10074 17
10075 15
10076 24
10078 33
10079 24
10081 33
10082 17
10083 20
10084 19
10085 26
10086 23
10087 19
10088 26
10089 23
10090 17
10091 22
10092 20
10093 18
10094 17
10095 24
10097 33
10098 24
10100 33
10101 22
10102 20
10103 19
10104 26
10105 23
10106 19
10107 26
10108 17
10109 22
10110 20
10111 18
10112 17
10113 20
10114 29
10115 25
10116 20
10117 29
10118 25
10119 16
10120 19
10121 18
10122 18
10123 23
10124 21
10125 18
10126 23
10127 21
10128 16
10129 19
10130 18
10131 15
10132 24
10134 33
10135 24
10137 33
10138 17
10139 22
10140 20
10141 19
10142 26
10143 23
10144 19
10145 26
10146 23
10147 17
10148 22
10149 20
10150 18
10151 17
10152 29
10153 32
10159 34
10160 39
10161 37
10162 36
10164 36
10167 34
10168 39
10169 37
10170 35
10171 34
10172 32
10178 34
10179 39
10180 37
10181 36
10184 36
10187 34
10188 39
10189 37
10190 35
10191 34
10192 37
10195 37
10198 33
10199 36
10200 35
10201 35
10203 38
10204 35
10206 38
10207 33
10208 36
10209 35
10210 32
10217 34
10218 39
10219 37
10220 36
10223 36
10226 34
10227 39
10228 37
10229 35
10230 34
10231 32
10238 34
10239 39
10240 37
10241 36
10244 36
10247 34
10248 39
10249 37
10250 35
10251 32
10258 34
10259 39
10260 37
10261 36
10264 36
10267 34
10268 39
10269 37
10270 35
10271 34
10272 37
10275 37
10278 33
10279 36
10280 35
10281 35
10283 38
10284 35
10286 38
10287 33
10288 36
10289 35
10290 32
10296 34
10297 39
10298 37
10299 36
10302 36
10305 34
10306 39
10307 37
10308 35
10309 34
10310 21
10311 24
10312 33
10314 33
10317 26
10318 31
10319 29
10320 28
10321 35
10322 32
10323 28
10324 35
10325 32
10326 26
10327 31
10328 27
10329 26
10330 24
10331 33
10334 33
10337 26
10338 31
10339 29
10340 28
10341 35
10342 32
10343 28
10344 35
10345 32
10346 26
10347 31
10348 29
10349 27
10350 26
10351 29
10352 38
10353 34
10354 29
10355 38
10356 34
10357 28
10358 27
10359 32
10360 30
10361 27
10362 32
10363 30
10364 25
10365 28
10366 27
10367 24
10368 33
10371 33
10374 26
10375 31
10376 29
10377 28
10378 35
10379 32
10380 28
10381 35
10382 32
10383 26
10384 31
10385 29
10386 27
10387 26
10388 24
10389 33
10392 33
10395 26
10396 31
10397 29
10398 28
10399 35
10400 32
10401 28
10402 35
10403 32
10404 26
10405 31
10406 29
10407 27
10408 26
10409 24
10410 33
10413 33
10416 26
10417 31
10418 29
10419 28
10420 35
10421 32
10422 28
10423 35
10424 32
10425 26
10426 31
10427 29
10428 27
10429 26
10430 38
10431 34
10432 29
10433 38
10434 34
10435 25
10436 28
10437 27
10438 27
10439 32
10440 30
10441 27
10442 32
10443 30
10444 25
10445 28
10446 27
10447 24
10448 33
10451 33
10454 26
10455 31
10456 29
10457 28
10458 35
10459 32
10460 28
10461 35
10462 32
10463 26
10464 31
10465 29
10466 27
10467 26
10468 8
10469 34
10470 26
10471 17
10472 34
10473 26
10474 10
10475 13
10476 12
10477 19
10478 16
10479 12
10480 19
10481 16
10482 10
10483 15
10484 13
10485 11
10486 10
10487 8
10488 17
10489 34
10490 26
10491 17
10492 34
10493 26
10494 10
10495 15
10496 13
10497 12
10498 19
10499 16
10500 12
10501 19
10502 16
10503 10
10504 15
10505 13
10506 11
10507 10
10508 13
10509 22
10510 18
10511 13
10512 22
10513 18
10514 9
10515 12
10516 11
10517 11
10518 16
10519 14
10520 11
10521 16
10522 14
10523 9
10524 12
10525 11
10526 8
10527 17
10528 34
10529 17
10530 34
10531 26
10532 10
10533 15
10534 13
10535 12
10536 19
10537 16
10538 12
10539 19
10540 16
10541 10
10542 15
10543 13
10544 11
10545 10
10546 8
10547 17
10548 34
10549 26
10550 17
10551 34
10552 26
10553 10
10554 15
10555 13
10556 12
10557 19
10558 16
10559 12
10560 19
10561 16
10562 10
10563 15
10564 13
10565 11
10566 10
10567 17
10568 34
10569 26
10570 17
10571 34
10572 26
10573 10
10574 15
10575 12
10576 19
10577 16
10578 12
10579 19
10580 16
10581 10
10582 15
10583 13
10584 11
10585 10
10586 13
10587 22
10588 18
10589 13
10590 22
10591 18
10592 9
10593 12
10594 11
10595 11
10596 14
10597 11
10598 16
10599 14
10600 9
10601 12
10602 11
10603 8
10604 17
10605 34
10606 26
10607 17
10608 34
10609 26
10610 10
10611 15
10612 13
10613 12
10614 19
10615 12
10616 19
10617 16
10618 10
10619 15
10620 13
10621 11
10622 10
10623 10
10624 13
10625 22
10626 39
10627 31
10628 39
10629 31
10630 15
10631 20
10632 18
10633 17
10634 24
10635 21
10636 24
10637 21
10638 15
10639 20
10640 18
10641 16
10642 15
10643 13
10644 22
10645 39
10646 31
10647 22
10648 39
10649 31
10650 15
10651 20
10652 18
10653 17
10654 24
10655 21
10656 17
10657 24
10658 21
10659 15
10660 20
10661 18
10662 16
10663 15
10664 18
10665 27
10666 23
10667 18
10668 27
10669 23
10670 14
10671 17
10672 16
10673 16
10674 21
10675 19
10676 16
10677 21
10678 14
10679 17
10680 13
10681 22
10682 39
10683 31
10684 22
10685 39
10686 31
10687 15
10688 20
10689 18
10690 17
10691 24
10692 21
10693 17
10694 24
10695 21
10696 15
10697 20
10698 18
10699 16
10700 15
10701 13
10702 22
10703 39
10704 31
10705 22
10706 39
10707 31
10708 15
10709 20
10710 18
10711 24
10712 21
10713 24
10714 21
10715 15
10716 20
10717 18
10718 16
10719 15
10720 13
10721 22
10722 39
10723 31
10724 22
10725 39
10726 31
10727 15
10728 20
10729 17
10730 21
10731 17
10732 24
10733 21
10734 20
10735 18
10736 16
10737 15
10738 18
10739 27
10740 23
10741 18
10742 27
10743 23
10744 14
10745 17
10746 16
10747 16
10748 21
10749 19
10750 16
10751 21
10752 19
10753 14
10754 17
10755 16
10756 13
10757 22
10758 39
10759 31
10760 22
10761 39
10762 15
10763 20
10764 18
10765 17
10766 24
10767 21
10768 17
10769 24
10770 21
10771 15
10772 20
10773 18
10774 16
10775 15
10776 8
10777 11
10778 20
10779 37
10780 29
10781 20
10782 37
10783 29
10784 13
10785 18
10786 16
10787 15
10788 22
10789 19
10790 15
10791 22
10792 19
10793 13
10794 18
10795 16
10796 14
10797 13
10798 11
10799 20
10800 37
10801 29
10802 20
10803 37
10804 29
10805 13
10806 18
10807 16
10808 15
10809 22
10810 19
10811 15
10812 22
10813 19
10814 13
10815 18
10816 16
10817 14
10818 13
10819 16
10820 25
10821 21
10822 16
10823 25
10824 21
10825 12
10826 15
10827 14
10828 14
10829 19
10830 17
10831 14
10832 19
10833 17
10834 12
10835 15
10836 14
10837 11
10838 20
10839 37
10840 29
10841 20
10842 37
10843 29
10844 13
10845 18
10846 16
10847 22
10848 19
10849 15
10850 22
10851 19
10852 13
10853 18
10854 16
10855 14
10856 13
10857 11
10858 20
10859 37
10860 29
10861 20
10862 37
10863 29
10864 13
10865 18
10866 16
10867 15
10868 22
10869 19
10870 15
10871 22
10872 19
10873 13
10874 18
10875 16
10876 14
10877 13
10878 11
10879 20
10880 37
10881 29
10882 20
10883 37
10884 13
10885 18
10886 16
10887 15
10888 22
10889 19
10890 22
10891 19
10892 13
10893 18
10894 16
10895 14
10896 13
10897 16
10898 25
10899 21
10900 16
10901 25
10902 21
10903 12
10904 15
10905 14
10906 14
10907 19
10908 17
10909 14
10910 19
10911 17
10912 12
10913 15
10914 14
10915 11
10916 20
10917 37
10918 29
10919 20
10920 37
10921 29
10922 13
10923 18
10924 16
10925 15
10926 19
10927 15
10928 22
10929 19
10930 13
10931 18
10932 16
10933 14
10934 13
10935 7
10936 19
10937 36
10938 19
10939 36
10940 28
10941 12
10942 17
10943 15
10944 14
10945 21
10946 18
10947 14
10948 21
10949 18
10950 12
10951 17
10952 15
10953 13
10954 12
10955 10
10956 19
10957 36
10958 28
10959 19
10960 36
10961 28
10962 12
10963 17
10964 15
10965 14
10966 21
10967 18
10968 14
10969 21
10970 18
10971 12
10972 17
10973 15
10974 13
10975 12
10976 15
10977 24
10978 15
10979 24
10980 20
10981 11
10982 14
10983 13
10984 13
10985 18
10986 16
10987 13
10988 18
10989 16
10990 11
10991 14
10992 13
10993 10
10994 19
10995 36
10996 28
10997 19
10998 36
10999 12
11000 17
11001 15
11002 14
11003 21
11004 18
11005 14
11006 21
11007 18
11008 12
11009 17
11010 15
11011 13
11012 12
11013 10
11014 19
11015 36
11016 19
11017 36
11018 28
11019 12
11020 17
11021 15
11022 14
11023 21
11024 18
11025 14
11026 21
11027 18
11028 12
11029 17
11030 15
11031 13
11032 12
11033 10
11034 19
11035 36
11036 28
11037 19
11038 36
11039 28
11040 12
11041 17
11042 15
11043 14
11044 21
11045 18
11046 14
11047 21
11048 18
11049 12
11050 17
11051 15
11052 13
11053 12
11054 15
11055 24
11056 20
11057 15
11058 24
11059 20
11060 11
11061 14
11062 13
11063 13
11064 13
11065 18
11066 16
11067 11
11068 14
11069 13
11070 10
11071 19
11072 36
11073 28
11074 19
11075 36
11076 12
11077 17
11078 15
11079 14
11080 21
11081 18
11082 14
11083 18
11084 12
11085 17
11086 15
11087 13
11088 12
11089 14
11090 17
11091 26
11093 35
11094 26
11096 35
11097 19
11098 24
11099 21
11100 28
11101 25
11102 28
11103 19
11104 24
11105 22
11106 20
11107 19
11108 17
11109 26
11110 35
11111 26
11113 35
11114 19
11115 24
11116 22
11117 21
11118 28
11119 25
11120 21
11121 28
11122 25
11123 19
11124 24
11125 22
11126 20
11127 19
11128 22
11129 31
11130 27
11131 22
11132 31
11133 27
11134 18
11135 21
11136 20
11137 20
11138 25
11139 23
11140 20
11141 25
11142 23
11143 18
11144 21
11145 20
11146 17
11147 26
11149 35
11150 26
11152 35
11153 19
11154 24
11155 22
11156 21
11157 28
11158 25
11159 21
11160 28
11161 19
11162 24
11163 22
11164 20
11165 19
11166 17
11167 26
11169 35
11170 26
11172 35
11173 19
11174 24
11175 22
11176 21
11177 28
11178 25
11179 21
11180 28
11181 25
11182 19
11183 24
11184 22
11185 20
11186 19
11187 17
11188 26
11190 35
11191 26
11193 35
11194 19
11195 24
11196 22
11197 21
11198 28
11199 25
11200 21
11201 28
11202 25
11203 19
11204 24
11205 22
11206 20
11207 19
11208 22
11209 31
11210 27
11211 22
11212 31
11213 27
11214 18
11215 21
11216 20
11217 20
11218 25
11219 23
11220 20
11221 25
11222 23
11223 18
11224 21
11225 20
11226 17
11227 26
11229 35
11231 35
11232 19
11233 24
11234 22
11235 21
11236 28
11237 25
11238 21
11239 28
11240 25
11241 19
11242 24
11243 22
11244 20
11245 19
11246 14
11247 23
11249 32
11250 23
11252 32
11253 16
11254 21
11255 19
11256 18
11257 25
11258 22
11259 18
11260 25
11261 22
11262 16
11263 21
11264 19
11265 17
11266 16
11267 14
11268 23
11270 32
11271 23
11273 32
11274 16
11275 21
11276 19
11277 18
11278 25
11279 22
11280 18
11281 25
11282 22
11283 16
11284 21
11285 19
11286 17
11287 16
11288 19
11289 19
11290 28
11291 24
11292 15
11293 17
11294 17
11295 22
11296 20
11297 17
11298 22
11299 20
11300 15
11301 18
11302 17
11303 14
11304 23
11306 32
11308 32
11309 16
11310 21
11311 19
11312 18
11313 25
11314 22
11315 18
11316 25
11317 22
11318 16
11319 21
11320 19
11321 17
11322 16
11323 14
11324 23
11326 32
11327 23
11329 32
11330 16
11331 21
11332 19
11333 18
11334 25
11335 22
11336 18
11337 25
11338 22
11339 16
11340 21
11341 19
11342 17
11343 16
11344 14
11345 23
11347 32
11348 23
11350 32
11351 16
11352 21
11353 19
11354 18
11355 25
11356 22
11357 18
11358 25
11359 16
11360 21
11361 19
11362 17
11363 16
11364 19
11365 28
11366 24
11367 19
11368 28
11369 24
11370 15
11371 17
11372 17
11373 22
11374 20
11375 17
11376 22
11377 20
11378 15
11379 18
11380 17
11381 14
11382 23
11384 32
11385 23
11387 32
11388 16
11389 21
11390 19
11391 18
11392 25
11393 22
11394 18
11395 25
11396 22
11397 16
11398 21
11399 19
11400 17
11401 16
11402 7
11403 10
11404 19
11405 36
11406 28
11407 19
11408 36
11409 28
11410 12
11411 17
11412 15
11413 14
11414 21
11415 18
11416 14
11417 21
11418 18
11419 17
11420 15
11421 13
11422 12
11423 10
11424 19
11425 36
11426 28
11427 19
11428 36
11429 28
11430 12
11431 17
11432 15
11433 14
11434 21
11435 18
11436 14
11437 21
11438 18
11439 12
11440 17
11441 13
11442 12
11443 15
11444 24
11445 20
11446 15
11447 24
11448 20
11449 11
11450 14
11451 13
11452 13
11453 16
11454 13
11455 16
11456 11
11457 14
11458 13
11459 10
11460 19
11461 36
11462 28
11463 19
11464 36
11465 28
11466 12
11467 17
11468 15
11469 21
11470 18
11471 14
11472 21
11473 18
11474 12
11475 17
11476 15
11477 13
11478 12
11479 10
11480 19
11481 36
11482 28
11483 19
11484 36
11485 28
11486 12
11487 17
11488 15
11489 14
11490 18
11491 14
11492 21
11493 18
11494 12
11495 17
11496 15
11497 13
11498 12
11499 10
11500 19
11501 36
11502 28
11503 19
11504 36
11505 28
11506 12
11507 17
11508 15
11509 14
11510 21
11511 18
11512 14
11513 21
11514 18
11515 12
11516 17
11517 15
11518 12
11519 15
11520 24
11521 20
11522 15
11523 24
11524 20
11525 14
11526 13
11527 18
11528 16
11529 13
11530 18
11531 16
11532 11
11533 14
11534 13
11535 10
11536 19
11537 36
11538 19
11539 36
11540 28
11541 12
11542 17
11543 15
11544 14
11545 21
11546 18
11547 14
11548 12
11549 17
11550 15
11551 13
11552 12
11553 14
11554 26
11556 35
11557 26
11559 35
11560 19
11561 24
11562 22
11563 21
11564 28
11565 25
11566 21
11567 28
11568 25
11569 19
11570 24
11571 22
11572 20
11573 19
11574 17
11575 26
11577 35
11578 26
11580 35
11581 19
11582 24
11583 22
11584 21
11585 28
11586 25
11587 21
11588 25
11589 19
11590 24
11591 22
11592 20
11593 19
11594 22
11595 31
11596 27
11597 22
11598 31
11599 27
11600 18
11601 21
11602 20
11603 25
11604 23
11605 20
11606 25
11607 23
11608 18
11609 21
11610 20
11611 17
11612 26
11614 35
11616 35
11617 24
11618 22
11619 21
11620 28
11621 25
11622 21
11623 28
11624 25
11625 19
11626 24
11627 22
11628 20
11629 19
11630 17
11631 26
11633 35
11634 26
11636 35
11637 19
11638 24
11639 22
11640 21
11641 28
11642 25
11643 21
11644 25
11645 19
11646 24
11647 22
11648 19
11649 17
11650 26
11652 35
11653 26
11655 19
11656 24
11657 21
11658 28
11659 25
11660 21
11661 28
11662 25
11663 19
11664 24
11665 22
11666 20
11667 19
11668 22
11669 31
11670 27
11671 31
11672 27
11673 18
11674 21
11675 20
11676 20
11677 25
11678 23
11679 25
11680 23
11681 18
11682 21
11683 20
11684 17
11685 26
11687 35
11688 26
11690 35
11691 24
11692 22
11693 28
11694 25
11695 21
11696 28
11697 25
11698 19
11699 24
11700 22
11701 20
11702 19
11703 11
11704 14
11706 32
11707 23
11709 32
11710 16
11711 21
11712 19
11713 18
11714 25
11715 22
11716 18
11717 25
11718 22
11719 16
11720 21
11721 19
11722 17
11723 16
11724 14
11725 23
11727 32
11728 23
11730 32
11731 16
11732 21
11733 19
11734 18
11735 25
11736 22
11737 18
11738 25
11739 22
11740 21
11741 19
11742 17
11743 16
11744 19
11745 28
11746 24
11747 19
11748 28
11749 24
11750 15
11751 18
11752 17
11753 17
11754 20
11755 17
11756 22
11757 20
11758 15
11759 18
11760 17
11761 14
11762 23
11764 32
11765 23
11766 16
11767 21
11768 19
11769 18
11770 25
11771 22
11772 18
11773 25
11774 22
11775 16
11776 21
11777 17
11778 16
11779 14
11780 23
11782 32
11783 23
11785 32
11786 16
11787 21
11788 19
11789 18
11790 25
11791 22
11792 18
11793 25
11794 22
11795 16
11796 21
11797 19
11798 17
11799 16
11800 14
11801 23
11803 32
11804 23
11806 32
11807 16
11808 21
11809 19
11810 18
11811 25
11812 22
11813 18
11814 25
11815 22
11816 16
11817 21
11818 19
11819 17
11820 16
11821 19
11822 28
11823 24
11824 19
11825 28
11826 24
11827 15
11828 18
11829 17
11830 17
11831 22
11832 20
11833 15
11834 18
11835 17
11836 14
11837 23
11839 32
11840 23
11842 32
11843 16
11844 21
11845 19
11846 18
11847 25
11848 22
11849 18
11850 25
11851 22
11852 16
11853 21
11854 19
11855 17
11856 16
11857 5
11858 8
11859 17
11860 34
11861 26
11862 17
11863 34
11864 26
11865 10
11866 15
11867 13
11868 12
11869 19
11870 16
11871 12
11872 19
11873 16
11874 10
11875 15
11876 13
11877 11
11878 10
11879 8
11880 17
11881 34
11882 26
11883 17
11884 34
11885 26
11886 10
11887 15
11888 13
11889 12
11890 19
11891 16
11892 12
11893 19
11894 16
11895 10
11896 15
11897 13
11898 11
11899 10
11900 13
11901 22
11902 18
11903 13
11904 22
11905 18
11906 9
11907 12
11908 11
11909 11
11910 16
11911 11
11912 14
11913 12
11914 11
11915 8
11916 17
11917 34
11918 26
11919 17
11920 34
11921 26
11922 10
11923 15
11924 13
11925 12
11926 19
11927 16
11928 12
11929 19
11930 16
11931 10
11932 15
11933 13
11934 11
11935 10
11936 8
11937 17
11938 34
11939 26
11940 17
11941 34
11942 26
11943 10
11944 15
11945 13
11946 19
11947 16
11948 12
11949 19
11950 16
11951 10
11952 15
11953 13
11954 11
11955 10
11956 8
11957 17
11958 34
11959 17
11960 34
11961 26
11962 10
11963 13
11964 12
11965 19
11966 16
11967 12
11968 19
11969 16
11970 10
11971 15
11972 13
11973 11
11974 10
11975 13
11976 22
11977 18
11978 13
11979 22
11980 18
11981 9
11982 12
11983 11
11984 11
11985 16
11986 14
11987 11
11988 14
11989 9
11990 12
11991 11
11992 8
11993 17
11994 34
11995 26
11996 17
11997 34
11998 26
11999 10
12000 15
12001 13
12002 12
12003 19
12004 16
12005 12
12006 19
12007 16
12008 10
12009 15
12010 13
12011 11
12012 10
12013 10
12014 13
12015 22
12016 39
12017 31
12018 22
12019 39
12020 31
12021 15
12022 20
12023 18
12024 17
12025 24
12026 17
12027 24
12028 21
12029 15
12030 20
12031 18
12032 16
12033 15
12034 13
12035 22
12036 39
12037 31
12038 22
12039 39
12040 31
12041 20
12042 18
12043 17
12044 24
12045 21
12046 17
12047 24
12048 21
12049 15
12050 20
12051 16
12052 15
12053 18
12054 27
12055 23
12056 18
12057 27
12058 23
12059 14
12060 17
12061 16
12062 16
12063 21
12064 19
12065 16
12066 21
12067 19
12068 14
12069 17
12070 16
12071 13
12072 22
12073 39
12074 31
12075 22
12076 39
12077 31
12078 15
12079 20
12080 18
12081 17
12082 24
12083 21
12084 17
12085 24
12086 21
12087 15
12088 18
12089 16
12090 15
12091 13
12092 22
12093 39
12094 31
12095 22
12096 39
12097 31
12098 15
12099 20
12100 18
12101 17
12102 24
12103 21
12104 17
12105 24
12106 21
12107 15
12108 20
12109 18
12110 16
12111 13
12112 22
12113 39
12114 31
12115 22
12116 39
12117 31
12118 15
12119 20
12120 18
12121 24
12122 21
12123 17
12124 24
12125 21
12126 15
12127 20
12128 18
12129 16
12130 15
12131 18
12132 27
12133 18
12134 27
12135 23
12136 14
12137 17
12138 16
12139 16
12140 21
12141 19
12142 16
12143 21
12144 19
12145 14
12146 17
12147 16
12148 13
12149 22
12150 39
12151 31
12152 22
12153 39
12154 31
12155 15
12156 20
12157 18
12158 17
12159 24
12160 21
12161 17
12162 24
12163 21
12164 15
12165 20
12166 18
12167 16
12168 15
12169 8
12170 11
12171 20
12172 37
12173 29
12174 20
12175 37
12176 13
12177 18
12178 16
12179 22
12180 19
12181 15
12182 22
12183 19
12184 13
12185 18
12186 16
12187 13
12188 11
12189 20
12190 37
12191 29
12192 37
12193 29
12194 13
12195 18
12196 16
12197 15
12198 22
12199 19
12200 15
12201 22
12202 19
12203 13
12204 18
12205 16
12206 14
12207 13
12208 16
12209 25
12210 21
12211 16
12212 25
12213 21
12214 12
12215 15
12216 14
12217 14
12218 19
12219 17
12220 14
12221 19
12222 17
12223 12
12224 15
12225 14
12226 11
12227 20
12228 37
12229 29
12230 20
12231 37
12232 29
12233 13
12234 18
12235 16
12236 15
12237 22
12238 19
12239 15
12240 22
12241 19
12242 13
12243 18
12244 16
12245 13
12246 11
12247 20
12248 37
12249 29
12250 20
12251 37
12252 29
12253 13
12254 18
12255 16
12256 15
12257 22
12258 19
12259 15
12260 22
12261 19
12262 13
12263 18
12264 16
12265 14
12266 13
12267 11
12268 20
12269 37
12270 29
12271 20
12272 37
12273 29
12274 13
12275 18
12276 16
12277 15
12278 22
12279 19
12280 15
12281 22
12282 19
12283 13
12284 18
12285 16
12286 14
12287 13
12288 16
12289 25
12290 21
12291 16
12292 25
12293 21
12294 12
12295 15
12296 14
12297 14
12298 19
12299 14
12300 19
12301 17
12302 12
12303 14
12304 11
12305 20
12306 37
12307 29
12308 20
12309 37
12310 29
12311 13
12312 18
12313 16
12314 15
12315 22
12316 19
12317 19
12318 13
12319 18
12320 16
12321 14
12322 13
12323 6
12324 9
12325 18
12326 35
12327 27
12328 18
12329 35
12330 27
12331 11
12332 16
12333 13
12334 20
12335 17
12336 13
12337 20
12338 17
12339 11
12340 16
12341 14
12342 12
12343 11
12344 9
12345 18
12346 35
12347 27
12348 18
12349 35
12350 27
12351 11
12352 16
12353 14
12354 13
12355 20
12356 17
12357 13
12358 20
12359 17
12360 11
12361 16
12362 14
12363 12
12364 11
12365 14
12366 23
12367 19
12368 14
12369 23
12370 19
12371 10
12372 13
12373 12
12374 12
12375 17
12376 15
12377 12
12378 17
12379 15
12380 10
12381 13
12382 12
12383 9
12384 18
12385 35
12386 27
12387 18
12388 35
12389 27
12390 11
12391 16
12392 14
12393 13
12394 20
12395 13
12396 20
12397 17
12398 11
12399 16
12400 14
12401 12
12402 11
12403 9
12404 18
12405 35
12406 27
12407 18
12408 35
12409 27
12410 11
12411 16
12412 14
12413 13
12414 20
12415 17
12416 13
12417 20
12418 17
12419 11
12420 16
12421 14
12422 12
12423 9
12424 18
12425 35
12426 27
12427 18
12428 35
12429 27
12430 11
12431 16
12432 14
12433 13
12434 20
12435 17
12436 13
12437 20
12438 17
12439 11
12440 16
12441 14
12442 12
12443 11
12444 14
12445 23
12446 19
12447 14
12448 23
12449 19
12450 10
12451 13
12452 12
12453 17
12454 15
12455 12
12456 17
12457 15
12458 13
12459 12
12460 18
12461 35
12462 27
12463 18
12464 35
12465 27
12466 11
12467 16
12468 14
12469 13
12470 20
12471 17
12472 13
12473 20
12474 17
12475 11
12476 16
12477 12
12478 11
12479 5
12480 8
12481 17
12482 34
12483 26
12484 17
12485 34
12486 26
12487 10
12488 15
12489 13
12490 12
12491 19
12492 16
12493 12
12494 19
12495 16
12496 10
12497 15
12498 11
12499 10
12500 8
12501 34
12502 26
12503 17
12504 34
12505 26
12506 10
12507 15
12508 13
12509 12
12510 19
12511 16
12512 12
12513 19
12514 16
12515 10
12516 15
12517 13
12518 11
12519 10
12520 13
12521 22
12522 18
12523 13
12524 22
12525 9
12526 12
12527 11
12528 11
12529 16
12530 14
12531 11
12532 16
12533 14
12534 9
12535 12
12536 11
12537 8
12538 17
12539 34
12540 26
12541 17
12542 34
12543 26
12544 10
12545 15
12546 13
12547 12
12548 19
12549 16
12550 12
12551 19
12552 16
12553 10
12554 15
12555 13
12556 11
12557 10
12558 17
12559 34
12560 17
12561 34
12562 26
12563 15
12564 13
12565 12
12566 19
12567 16
12568 12
12569 19
12570 16
12571 10
12572 15
12573 13
12574 11
12575 10
12576 8
12577 17
12578 34
12579 26
12580 17
12581 34
12582 26
12583 10
12584 15
12585 13
12586 19
12587 16
12588 12
12589 19
12590 16
12591 10
12592 13
12593 11
12594 10
12595 13
12596 22
12597 13
12598 22
12599 18
12600 9
12601 12
12602 11
12603 11
12604 16
12605 14
12606 11
12607 16
12608 14
12609 9
12610 12
12611 11
12612 8
12613 17
12614 34
12615 26
12616 17
12617 34
12618 26
12619 10
12620 15
12621 13
12622 12
12623 19
12624 16
12625 19
12626 16
12627 10
12628 15
12629 13
12630 11
12631 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
turn around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

1
WUG0 around left twice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

2
WUG0 and turn opposite left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

3
WUG0 right and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

4
WUG0 around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

5
WUG0 left twice and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

6
WUG0 opposite left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

7
turn opposite left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

8
WUG0 around right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

9
turn around left and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

10
WUG0 opposite right and turn around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

11
WUG0 around right twice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

12
WUG0 around left thrice and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

13
turn around right and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

14
WUG0 around right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

15
WUG0 right and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

16
turn left and WUG0 opposite right twice I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite right twice
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

17
turn right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

18
turn opposite right thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

19
WUG0 left and WUG0 thrice I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump thrice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

20
WUG0 left thrice and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

21
WUG0 right thrice and WUG0 left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

22
turn opposite right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

23
WUG0 opposite right after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

24
WUG0 thrice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

25
turn opposite left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

26
WUG0 right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

27
turn opposite right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

28
WUG0 opposite left thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

29
turn around left twice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

30
WUG0 left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

31
WUG0 opposite left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

32
turn left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

33
WUG0 opposite right and turn around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

34
WUG0 right twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

35
WUG0 after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

36
WUG0 opposite left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

37
WUG0 opposite right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

38
turn opposite left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

39
turn right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

40
WUG0 after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

41
turn right and WUG0 around left thrice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

42
WUG0 left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

43
WUG0 opposite left thrice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

44
turn right thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

45
turn opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

46
WUG0 around left and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

47
turn left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

48
turn left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

49
WUG0 right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

50
turn opposite left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

51
WUG0 right twice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

52
WUG0 around left and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

53
turn right twice and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

54
WUG0 left thrice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

55
turn around right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

56
WUG0 around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

57
turn opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

58
WUG0 opposite left twice and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

59
WUG0 around left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

60
WUG0 opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

61
turn right and WUG0 opposite left I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite left
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

62
WUG0 right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

63
WUG0 around left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

64
WUG0 around right and WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

65
turn left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

66
turn left and WUG0 thrice I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump thrice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP

67
WUG0 around right after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

68
WUG0 left twice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

69
WUG0 opposite right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

70
WUG0 opposite left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

71
WUG0 left twice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

72
WUG0 around left thrice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

73
WUG0 around right and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

74
WUG0 around right thrice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

75
WUG0 left thrice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

76
WUG0 right twice and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

77
WUG0 thrice after turn right I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn right
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

78
WUG0 left thrice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

79
WUG0 around left thrice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

80
WUG0 left twice and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

81
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

82
WUG0 thrice and turn right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

83
WUG0 after WUG0 right I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump right
--
I_TURN_RIGHT I_JUMP I_JUMP

84
turn around left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

85
turn around left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

86
WUG0 left twice and turn opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

87
WUG0 right thrice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

88
WUG0 twice and WUG0 right twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

89
WUG0 around left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

90
turn opposite right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

91
WUG0 around left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

92
WUG0 opposite left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

93
turn opposite left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

94
turn around left and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

95
WUG0 opposite left thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

96
WUG0 opposite left twice and turn around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

97
WUG0 opposite left thrice and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

98
WUG0 right twice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

99
WUG0 right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

100
WUG0 around right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

101
WUG0 opposite left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

102
WUG0 opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

103
WUG0 right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

104
WUG0 after WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump
--
I_JUMP I_JUMP

105
turn opposite left twice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

106
turn right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

107
WUG0 opposite left thrice after walk left thrice I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run opposite left thrice after walk left thrice
--
I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

108
WUG0 around left and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

109
WUG0 opposite left and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

110
WUG0 opposite left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

111
WUG0 right twice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

112
WUG0 left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

113
WUG0 opposite left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

114
WUG0 and turn opposite left WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

115
WUG0 left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

116
WUG0 around right and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

117
WUG0 opposite left twice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

118
WUG0 around right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

119
WUG0 right twice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

120
WUG0 left twice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

121
WUG0 twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

122
WUG0 opposite right thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

123
WUG0 left twice and WUG0 around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

124
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

125
turn around left and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

126
WUG0 right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

127
turn left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

128
WUG0 right and WUG0 twice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump twice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

129
turn around right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

130
WUG0 right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

131
turn around right thrice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

132
turn opposite left and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

133
WUG0 opposite left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

134
turn opposite right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

135
WUG0 left thrice and WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

136
WUG0 around left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

137
WUG0 after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

138
WUG0 left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

139
WUG0 twice and turn opposite right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

140
turn around left and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

141
WUG0 around right after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

142
WUG0 right thrice and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

143
WUG0 twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

144
turn opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

145
turn right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

146
walk thrice and WUG0 right twice I_WALK I_WALK I_WALK I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk thrice and walk right twice
--
I_WALK I_WALK I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

147
WUG0 left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

148
WUG0 right twice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

149
WUG0 left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

150
WUG0 after WUG0 left I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump left
--
I_TURN_LEFT I_JUMP I_JUMP

151
turn opposite left thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

152
WUG0 left after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

153
turn opposite right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

154
turn right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

155
WUG0 around left twice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

156
WUG0 right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

157
WUG0 left and WUG0 right I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

158
WUG0 around right and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

159
turn around left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

160
WUG0 around right twice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

161
WUG0 opposite right thrice and turn around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

162
turn right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

163
WUG0 opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

164
turn around left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

165
turn opposite left and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

166
WUG0 opposite right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

167
turn opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

168
turn opposite left twice and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

169
WUG0 left and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

170
turn right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

171
WUG0 around left twice and WUG0 opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

172
WUG0 opposite left and turn opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

173
WUG0 opposite right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

174
WUG0 opposite right twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

175
WUG0 around right twice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

176
WUG0 opposite right twice and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

177
WUG0 opposite right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

178
turn around left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

179
WUG0 around left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

180
WUG0 left thrice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

181
WUG0 twice and WUG0 opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

182
WUG0 twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

183
WUG0 around left twice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

184
WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

185
WUG0 opposite left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

186
WUG0 right and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

187
WUG0 opposite left and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

188
WUG0 around left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

189
WUG0 left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

190
WUG0 opposite left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

191
WUG0 opposite left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

192
turn opposite left thrice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

193
WUG0 around left and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

194
turn around right and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

195
WUG0 opposite right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

196
WUG0 twice and WUG0 right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

197
turn around right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

198
WUG0 right thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

199
WUG0 around left twice after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

200
turn opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

201
WUG0 right and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

202
turn around left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

203
turn opposite right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

204
WUG0 opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

205
WUG0 left thrice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

206
WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

207
turn opposite right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

208
turn left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

209
WUG0 opposite left thrice and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

210
WUG0 right thrice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

211
WUG0 thrice and WUG0 opposite right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

212
turn around left twice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

213
turn around right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

214
turn opposite right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

215
WUG0 around right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

216
WUG0 around right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

217
turn left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

218
WUG0 left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

219
turn left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

220
WUG0 opposite right twice and turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

221
WUG0 around right twice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

222
WUG0 opposite left thrice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

223
WUG0 around right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

224
WUG0 twice and turn left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

225
WUG0 opposite left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

226
WUG0 opposite right and turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

227
WUG0 around right twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

228
WUG0 right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

229
WUG0 opposite left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

230
WUG0 and turn around right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

231
WUG0 around right twice and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

232
turn right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

233
WUG0 opposite left twice and turn around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

234
turn opposite left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

235
WUG0 left twice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

236
turn opposite left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

237
WUG0 right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

238
WUG0 thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

239
WUG0 opposite left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

240
turn opposite right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

241
WUG0 thrice WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice
--
I_JUMP I_JUMP I_JUMP

242
WUG0 right thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

243
WUG0 opposite left after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

244
WUG0 opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

245
WUG0 left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

246
turn around left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

247
WUG0 opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

248
turn around left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

249
WUG0 around left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

250
WUG0 twice and turn around right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

251
turn opposite left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

252
WUG0 right and turn around left I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

253
turn opposite left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

254
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

255
turn left and WUG0 around right I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

256
WUG0 right thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

257
WUG0 after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

258
WUG0 around left thrice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

259
WUG0 right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

260
WUG0 around left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

261
WUG0 around left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

262
WUG0 around left twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

263
WUG0 left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

264
WUG0 opposite left twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

265
WUG0 right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

266
WUG0 opposite left thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

267
WUG0 thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

268
turn left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

269
WUG0 opposite right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

270
turn right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

271
WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

272
turn opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

273
WUG0 twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

274
WUG0 opposite right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

275
WUG0 opposite right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

276
WUG0 right thrice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

277
turn left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

278
WUG0 right twice and WUG0 opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

279
turn right twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

280
WUG0 right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

281
turn opposite right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

282
turn right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

283
turn opposite left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

284
turn opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

285
turn opposite left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

286
turn right thrice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

287
turn opposite left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

288
turn right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

289
turn opposite right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

290
WUG0 twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

291
WUG0 twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

292
turn opposite left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

293
WUG0 twice and WUG0 around left thrice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

294
WUG0 around right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

295
turn opposite left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

296
WUG0 around left after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

297
turn around left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

298
WUG0 right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

299
turn right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

300
turn around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

301
WUG0 and WUG0 opposite right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

302
WUG0 around left and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

303
WUG0 opposite right thrice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

304
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

305
WUG0 thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

306
WUG0 thrice and WUG0 right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

307
turn left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

308
turn right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

309
turn left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

310
WUG0 opposite left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

311
WUG0 thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

312
turn left and WUG0 right twice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump right twice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

313
WUG0 thrice and WUG0 left thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

314
turn right and WUG0 twice I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump twice
--
I_TURN_RIGHT I_JUMP I_JUMP

315
WUG0 around right twice and WUG0 opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

316
run after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_RUN {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run after run around left thrice
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_RUN

317
WUG0 left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

318
WUG0 around left and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

319
turn right after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

320
WUG0 thrice and WUG0 around right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

321
WUG0 right twice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

322
WUG0 opposite right thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

323
WUG0 twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

324
WUG0 twice and WUG0 opposite left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

325
WUG0 left twice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

326
turn opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

327
turn left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

328
turn around left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

329
turn opposite left after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

330
turn right twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

331
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

332
turn around left and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

333
turn opposite left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

334
turn right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

335
WUG0 around left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

336
WUG0 opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

337
WUG0 opposite left and turn around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

338
turn opposite left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

339
WUG0 and WUG0 opposite right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

340
turn left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

341
WUG0 twice and WUG0 around right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

342
turn right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

343
turn around right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

344
WUG0 opposite left and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

345
turn around right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

346
turn opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

347
turn around right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

348
turn right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

349
WUG0 around right thrice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

350
turn right after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT

351
WUG0 left and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

352
WUG0 around right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

353
WUG0 right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

354
WUG0 right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

355
WUG0 and WUG0 right twice WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump right twice
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

356
WUG0 left thrice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

357
WUG0 around right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

358
WUG0 left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

359
WUG0 around right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

360
WUG0 around left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

361
WUG0 around right twice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

362
WUG0 opposite left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

363
turn right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

364
turn opposite left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

365
WUG0 around left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

366
WUG0 right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

367
WUG0 left thrice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

368
turn around left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

369
WUG0 twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

370
turn around right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

371
WUG0 opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

372
turn opposite left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

373
WUG0 around right thrice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

374
WUG0 opposite right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

375
WUG0 opposite left twice and turn around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

376
WUG0 thrice and WUG0 opposite left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

377
WUG0 and turn around right WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around right
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

378
WUG0 twice WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice
--
I_JUMP I_JUMP

379
WUG0 right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

380
WUG0 opposite right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

381
WUG0 around right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
WUG0 left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

383
WUG0 around right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

384
WUG0 and turn around left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

385
turn left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

386
turn opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

387
WUG0 around right and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

388
turn left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

389
turn opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

390
WUG0 right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

391
turn left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

392
WUG0 around left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

393
turn around left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

394
turn around left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

395
WUG0 around left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

396
walk and WUG0 around left thrice I_WALK I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk and walk around left thrice
--
I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK

397
turn around left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

398
turn around right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

399
turn opposite left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

400
WUG0 around right twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

401
WUG0 left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

402
WUG0 around left twice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

403
turn opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

404
WUG0 left after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

405
WUG0 around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

406
WUG0 around right thrice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

407
WUG0 around left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

408
turn left after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

409
WUG0 left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

410
turn opposite left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

411
walk around WUG0 thrice after walk I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
walk around left thrice after walk
--
I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK

412
turn opposite right twice and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

413
WUG0 opposite right twice after look around left I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk opposite right twice after look around left
--
I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK

414
WUG0 opposite left thrice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look opposite left thrice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

415
turn around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

416
turn around left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

417
WUG0 right twice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

418
WUG0 twice and WUG0 right WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

419
WUG0 opposite left and look opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run opposite left and look opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK

420
