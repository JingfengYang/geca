12620
0 3
1 3
2 6
3 15
4 24
5 15
6 32
7 24
8 8
9 13
10 11
11 10
12 17
13 14
14 10
15 17
16 14
17 8
18 13
19 11
20 9
21 8
22 6
23 15
24 32
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 14
38 8
39 13
40 11
41 9
42 8
43 11
44 16
45 11
46 20
47 7
48 10
49 9
50 9
51 14
52 12
53 9
54 12
55 7
56 10
57 9
58 6
59 15
60 32
61 24
62 15
63 32
64 24
65 8
66 13
67 11
68 10
69 17
70 10
71 14
72 8
73 13
74 11
75 9
76 8
77 6
78 15
79 32
80 24
81 15
82 32
83 24
84 8
85 13
86 11
87 10
88 17
89 14
90 10
91 17
92 8
93 13
94 11
95 9
96 8
97 6
98 15
99 32
100 24
101 15
102 32
103 24
104 8
105 13
106 11
107 10
108 17
109 14
110 10
111 17
112 14
113 8
114 13
115 11
116 9
117 8
118 11
119 20
120 16
121 11
122 20
123 16
124 7
125 10
126 9
127 9
128 14
129 12
130 9
131 14
132 12
133 7
134 10
135 9
136 6
137 15
138 32
139 24
140 15
141 32
142 24
143 8
144 13
145 11
146 10
147 17
148 14
149 10
150 17
151 14
152 8
153 13
154 11
155 9
156 12
157 15
158 24
160 33
161 24
163 33
164 17
165 22
166 20
167 19
168 26
169 23
170 19
171 26
172 23
173 17
174 22
175 20
176 18
177 17
178 15
179 24
181 33
182 24
184 33
185 17
186 22
187 20
188 19
189 26
190 23
191 19
192 26
193 23
194 17
195 22
196 20
197 18
198 17
199 20
200 29
201 25
202 20
203 29
204 25
205 16
206 19
207 18
208 18
209 23
210 21
211 18
212 23
213 21
214 16
215 19
216 18
217 15
218 24
220 33
221 24
223 33
224 17
225 22
226 20
227 19
228 26
229 23
230 19
231 26
232 23
233 17
234 22
235 20
236 18
237 17
238 24
240 33
241 24
243 17
244 22
245 20
246 19
247 26
248 23
249 19
250 26
251 23
252 17
253 22
254 20
255 18
256 17
257 15
258 24
260 33
261 24
263 33
264 17
265 22
266 20
267 19
268 26
269 23
270 19
271 26
272 23
273 17
274 22
275 20
276 18
277 17
278 20
279 29
280 25
281 29
282 25
283 16
284 19
285 18
286 18
287 23
288 21
289 18
290 23
291 21
292 16
293 19
294 18
295 15
296 24
298 24
300 33
301 17
302 22
303 20
304 19
305 26
306 23
307 19
308 26
309 23
310 17
311 22
312 20
313 18
314 17
315 29
316 32
323 34
324 39
325 37
326 36
329 36
332 34
333 39
334 37
335 35
336 34
337 32
344 34
345 39
346 37
347 36
350 36
353 34
354 39
355 37
356 35
357 34
358 37
361 37
364 33
365 36
366 35
367 35
369 38
370 35
372 38
373 33
374 36
375 35
376 32
383 34
384 39
385 37
386 36
389 36
392 34
393 39
394 37
395 35
396 34
397 32
404 34
405 39
406 37
407 36
410 36
413 34
414 39
415 37
416 35
417 34
418 32
423 34
424 39
425 37
426 36
428 36
431 34
432 39
433 37
434 35
435 34
436 37
439 37
442 36
443 35
444 35
446 38
447 35
449 38
450 33
451 36
452 35
453 32
460 34
461 39
462 37
463 36
466 36
469 34
470 39
471 37
472 35
473 34
474 21
475 24
476 33
479 33
482 26
483 31
484 29
485 28
486 35
487 32
488 28
489 35
490 32
491 26
492 31
493 29
494 27
495 26
496 24
497 33
500 33
503 26
504 31
505 29
506 28
507 35
508 32
509 28
510 35
511 32
512 26
513 29
514 27
515 26
516 29
517 38
518 29
519 38
520 34
521 25
522 28
523 27
524 27
525 32
526 30
527 27
528 32
529 30
530 25
531 28
532 27
533 24
534 33
537 33
539 26
540 31
541 29
542 28
543 35
544 32
545 28
546 35
547 32
548 31
549 29
550 27
551 26
552 24
553 33
556 33
559 26
560 31
561 29
562 28
563 28
564 35
565 32
566 26
567 31
568 29
569 27
570 26
571 24
572 33
575 33
578 26
579 31
580 29
581 35
582 32
583 35
584 32
585 26
586 31
587 29
588 27
589 26
590 38
591 34
592 29
593 34
594 25
595 28
596 27
597 30
598 27
599 32
600 30
601 25
602 28
603 27
604 24
605 33
608 33
611 26
612 31
613 29
614 28
615 35
616 32
617 28
618 35
619 32
620 26
621 31
622 29
623 27
624 26
625 12
626 15
627 24
629 33
630 24
632 33
633 17
634 22
635 20
636 19
637 23
638 19
639 26
640 23
641 17
642 22
643 20
644 18
645 17
646 15
647 24
649 24
651 33
652 17
653 22
654 19
655 26
656 23
657 19
658 26
659 23
660 17
661 22
662 20
663 18
664 17
665 20
666 25
667 20
668 29
669 25
670 16
671 19
672 18
673 18
674 23
675 21
676 18
677 23
678 21
679 16
680 19
681 18
682 15
683 24
685 33
686 24
688 33
689 17
690 22
691 20
692 19
693 26
694 23
695 19
696 26
697 23
698 17
699 22
700 20
701 17
702 15
703 24
705 33
706 24
708 33
709 17
710 22
711 20
712 19
713 26
714 23
715 26
716 23
717 17
718 22
719 20
720 18
721 17
722 15
723 24
725 33
726 24
728 33
729 17
730 22
731 20
732 19
733 26
734 23
735 19
736 26
737 23
738 17
739 22
740 20
741 18
742 17
743 20
744 29
745 25
746 20
747 29
748 25
749 16
750 19
751 18
752 18
753 23
754 21
755 18
756 23
757 16
758 18
759 15
760 24
761 33
762 24
764 33
765 17
766 22
767 20
768 19
769 26
770 23
771 26
772 23
773 17
774 22
775 20
776 18
777 17
778 29
779 32
785 39
786 37
787 36
792 34
793 39
794 35
795 34
796 32
802 34
803 39
804 37
805 36
808 36
811 34
812 39
813 37
814 35
815 34
816 37
819 37
822 33
823 36
824 35
825 35
827 38
828 35
830 38
831 33
832 36
833 35
834 32
841 39
842 37
843 36
848 34
849 39
850 37
851 35
852 34
853 32
860 34
861 37
862 36
865 36
868 34
869 39
870 37
871 35
872 34
873 32
880 34
881 39
882 37
883 36
886 36
889 34
890 39
891 37
892 35
893 37
896 37
898 33
899 36
900 35
901 35
903 38
904 35
906 38
907 33
908 36
909 35
910 32
917 34
918 39
919 37
920 36
923 36
926 34
927 37
928 35
929 34
930 21
931 24
932 33
935 33
938 26
939 31
940 29
941 28
942 35
943 32
944 28
945 35
946 32
947 26
948 31
949 29
950 27
951 26
952 24
953 33
956 33
959 26
960 31
961 29
962 28
963 35
964 32
965 28
966 35
967 32
968 26
969 31
970 29
971 27
972 26
973 29
974 38
975 34
976 29
977 38
978 25
979 28
980 27
981 27
982 32
983 30
984 27
985 30
986 25
987 28
988 27
989 24
992 33
995 26
996 31
997 29
998 28
999 35
1000 32
1001 35
1002 32
1003 26
1004 29
1005 27
1006 26
1007 24
1008 33
1011 33
1014 26
1015 31
1016 29
1017 28
1018 35
1019 32
1020 28
1021 35
1022 32
1023 26
1024 31
1025 29
1026 27
1027 26
1028 24
1029 33
1032 33
1035 26
1036 29
1037 28
1038 35
1039 32
1040 28
1041 35
1042 32
1043 26
1044 31
1045 29
1046 27
1047 26
1048 29
1049 38
1050 34
1051 29
1052 34
1053 25
1054 28
1055 27
1056 27
1057 32
1058 27
1059 32
1060 30
1061 25
1062 28
1063 27
1064 24
1065 33
1068 33
1071 26
1072 31
1073 29
1074 28
1075 35
1076 32
1077 28
1078 35
1079 32
1080 26
1081 31
1082 29
1083 27
1084 26
1085 5
1086 8
1087 17
1088 34
1089 26
1090 17
1091 34
1092 26
1093 10
1094 15
1095 13
1096 16
1097 12
1098 19
1099 16
1100 10
1101 15
1102 13
1103 11
1104 10
1105 8
1106 17
1107 34
1108 26
1109 17
1110 34
1111 26
1112 10
1113 15
1114 13
1115 12
1116 19
1117 16
1118 12
1119 19
1120 16
1121 10
1122 15
1123 13
1124 11
1125 10
1126 13
1127 22
1128 18
1129 13
1130 22
1131 18
1132 9
1133 12
1134 11
1135 11
1136 16
1137 14
1138 11
1139 16
1140 14
1141 9
1142 12
1143 11
1144 8
1145 17
1146 34
1147 26
1148 17
1149 34
1150 26
1151 10
1152 15
1153 13
1154 12
1155 19
1156 16
1157 12
1158 19
1159 16
1160 10
1161 15
1162 13
1163 11
1164 10
1165 8
1166 17
1167 34
1168 26
1169 17
1170 34
1171 26
1172 10
1173 15
1174 13
1175 12
1176 19
1177 16
1178 12
1179 16
1180 10
1181 15
1182 13
1183 11
1184 10
1185 17
1186 34
1187 26
1188 17
1189 34
1190 26
1191 10
1192 15
1193 13
1194 12
1195 19
1196 12
1197 19
1198 16
1199 10
1200 15
1201 13
1202 10
1203 13
1204 22
1205 18
1206 13
1207 22
1208 18
1209 9
1210 12
1211 11
1212 11
1213 16
1214 14
1215 11
1216 16
1217 14
1218 9
1219 12
1220 11
1221 8
1222 17
1223 34
1224 26
1225 17
1226 34
1227 26
1228 10
1229 15
1230 13
1231 12
1232 19
1233 16
1234 12
1235 19
1236 16
1237 10
1238 15
1239 13
1240 10
1241 10
1242 13
1243 22
1244 39
1245 22
1246 39
1247 31
1248 15
1249 20
1250 18
1251 17
1252 24
1253 21
1254 17
1255 24
1256 21
1257 15
1258 20
1259 18
1260 16
1261 15
1262 13
1263 22
1264 39
1265 31
1266 22
1267 39
1268 31
1269 15
1270 20
1271 18
1272 17
1273 24
1274 21
1275 17
1276 24
1277 21
1278 15
1279 20
1280 18
1281 16
1282 15
1283 18
1284 27
1285 23
1286 18
1287 27
1288 23
1289 14
1290 17
1291 16
1292 21
1293 19
1294 16
1295 21
1296 19
1297 14
1298 17
1299 16
1300 13
1301 22
1302 39
1303 31
1304 22
1305 39
1306 31
1307 15
1308 20
1309 18
1310 17
1311 24
1312 21
1313 17
1314 24
1315 21
1316 15
1317 20
1318 18
1319 16
1320 15
1321 13
1322 22
1323 39
1324 31
1325 22
1326 39
1327 31
1328 15
1329 20
1330 18
1331 17
1332 24
1333 21
1334 24
1335 15
1336 20
1337 18
1338 16
1339 15
1340 13
1341 22
1342 39
1343 31
1344 22
1345 39
1346 15
1347 20
1348 18
1349 17
1350 24
1351 21
1352 17
1353 24
1354 21
1355 15
1356 20
1357 18
1358 15
1359 18
1360 27
1361 23
1362 18
1363 27
1364 23
1365 14
1366 17
1367 16
1368 16
1369 21
1370 19
1371 16
1372 21
1373 19
1374 14
1375 17
1376 16
1377 13
1378 22
1379 39
1380 31
1381 22
1382 39
1383 31
1384 15
1385 20
1386 18
1387 17
1388 24
1389 21
1390 17
1391 24
1392 21
1393 15
1394 20
1395 18
1396 16
1397 15
1398 8
1399 11
1400 20
1401 37
1402 29
1403 20
1404 37
1405 29
1406 13
1407 18
1408 16
1409 15
1410 22
1411 19
1412 15
1413 22
1414 19
1415 13
1416 18
1417 16
1418 14
1419 13
1420 11
1421 20
1422 37
1423 29
1424 20
1425 37
1426 29
1427 13
1428 18
1429 16
1430 15
1431 22
1432 19
1433 15
1434 22
1435 19
1436 13
1437 18
1438 16
1439 14
1440 13
1441 16
1442 25
1443 21
1444 16
1445 25
1446 21
1447 12
1448 15
1449 14
1450 14
1451 19
1452 14
1453 19
1454 17
1455 15
1456 14
1457 11
1458 20
1459 37
1460 29
1461 20
1462 37
1463 29
1464 13
1465 18
1466 16
1467 15
1468 22
1469 19
1470 15
1471 22
1472 19
1473 13
1474 18
1475 16
1476 14
1477 13
1478 11
1479 20
1480 37
1481 29
1482 20
1483 37
1484 29
1485 13
1486 18
1487 16
1488 15
1489 22
1490 19
1491 15
1492 22
1493 19
1494 13
1495 18
1496 16
1497 13
1498 11
1499 20
1500 37
1501 29
1502 20
1503 37
1504 29
1505 13
1506 16
1507 15
1508 22
1509 19
1510 15
1511 22
1512 19
1513 13
1514 18
1515 16
1516 14
1517 13
1518 16
1519 25
1520 21
1521 16
1522 25
1523 21
1524 12
1525 15
1526 14
1527 19
1528 17
1529 14
1530 19
1531 17
1532 12
1533 15
1534 14
1535 11
1536 20
1537 37
1538 29
1539 20
1540 37
1541 29
1542 13
1543 18
1544 16
1545 15
1546 22
1547 19
1548 15
1549 22
1550 19
1551 13
1552 18
1553 16
1554 14
1555 13
1556 7
1557 10
1558 19
1559 28
1560 36
1561 28
1562 12
1563 17
1564 15
1565 14
1566 21
1567 18
1568 14
1569 21
1570 18
1571 12
1572 17
1573 15
1574 13
1575 12
1576 10
1577 19
1578 36
1579 28
1580 36
1581 28
1582 12
1583 17
1584 15
1585 14
1586 21
1587 18
1588 14
1589 21
1590 18
1591 12
1592 17
1593 15
1594 13
1595 12
1596 15
1597 24
1598 20
1599 15
1600 24
1601 20
1602 11
1603 14
1604 13
1605 13
1606 18
1607 16
1608 13
1609 18
1610 16
1611 11
1612 14
1613 13
1614 10
1615 19
1616 36
1617 28
1618 19
1619 36
1620 28
1621 12
1622 17
1623 15
1624 14
1625 21
1626 18
1627 14
1628 21
1629 18
1630 12
1631 17
1632 15
1633 13
1634 19
1635 36
1636 28
1637 19
1638 36
1639 28
1640 12
1641 17
1642 14
1643 21
1644 18
1645 14
1646 21
1647 18
1648 12
1649 17
1650 15
1651 13
1652 12
1653 10
1654 19
1655 36
1656 28
1657 19
1658 36
1659 28
1660 12
1661 17
1662 15
1663 14
1664 21
1665 18
1666 14
1667 21
1668 18
1669 12
1670 17
1671 15
1672 13
1673 12
1674 15
1675 20
1676 15
1677 24
1678 20
1679 11
1680 14
1681 13
1682 13
1683 18
1684 16
1685 13
1686 16
1687 11
1688 14
1689 13
1690 10
1691 19
1692 36
1693 28
1694 19
1695 28
1696 12
1697 17
1698 15
1699 14
1700 21
1701 18
1702 14
1703 21
1704 18
1705 12
1706 17
1707 15
1708 13
1709 12
1710 14
1711 17
1712 26
1714 26
1716 35
1717 19
1718 24
1719 22
1720 21
1721 28
1722 25
1723 21
1724 28
1725 25
1726 19
1727 24
1728 22
1729 20
1730 19
1731 17
1732 26
1734 35
1735 26
1737 35
1738 19
1739 24
1740 22
1741 21
1742 28
1743 25
1744 21
1745 28
1746 25
1747 19
1748 24
1749 22
1750 20
1751 19
1752 22
1753 31
1754 27
1755 22
1756 31
1757 27
1758 18
1759 21
1760 20
1761 20
1762 25
1763 23
1764 20
1765 25
1766 23
1767 18
1768 21
1769 20
1770 17
1771 26
1773 35
1774 26
1776 35
1777 19
1778 24
1779 22
1780 21
1781 28
1782 25
1783 21
1784 28
1785 25
1786 19
1787 24
1788 22
1789 20
1790 19
1791 17
1792 26
1794 35
1795 26
1797 35
1798 19
1799 24
1800 22
1801 21
1802 28
1803 25
1804 28
1805 25
1806 19
1807 24
1808 22
1809 20
1810 19
1811 17
1812 26
1814 35
1815 26
1817 35
1818 19
1819 24
1820 22
1821 21
1822 28
1823 25
1824 21
1825 28
1826 25
1827 19
1828 24
1829 22
1830 20
1831 19
1832 22
1833 31
1834 27
1835 22
1836 31
1837 27
1838 18
1839 21
1840 20
1841 20
1842 25
1843 23
1844 20
1845 25
1846 23
1847 18
1848 21
1849 20
1850 17
1851 26
1853 35
1855 35
1856 19
1857 24
1858 22
1859 28
1860 25
1861 21
1862 28
1863 25
1864 19
1865 24
1866 20
1867 19
1868 11
1869 14
1870 23
1872 32
1873 23
1875 32
1876 16
1877 21
1878 19
1879 18
1880 25
1881 22
1882 18
1883 25
1884 22
1885 16
1886 21
1887 19
1888 17
1889 16
1890 14
1891 23
1893 32
1894 23
1896 32
1897 16
1898 21
1899 19
1900 18
1901 25
1902 22
1903 18
1904 25
1905 22
1906 16
1907 21
1908 19
1909 17
1910 16
1911 19
1912 24
1913 19
1914 28
1915 24
1916 15
1917 18
1918 17
1919 17
1920 22
1921 20
1922 17
1923 22
1924 20
1925 15
1926 18
1927 17
1928 14
1929 23
1931 32
1932 23
1934 32
1935 16
1936 21
1937 19
1938 18
1939 25
1940 22
1941 18
1942 25
1943 22
1944 16
1945 21
1946 19
1947 17
1948 16
1949 14
1950 23
1952 32
1953 23
1955 32
1956 16
1957 21
1958 19
1959 18
1960 25
1961 22
1962 18
1963 25
1964 16
1965 21
1966 19
1967 17
1968 14
1969 23
1971 32
1972 23
1974 32
1975 16
1976 21
1977 19
1978 18
1979 25
1980 22
1981 18
1982 25
1983 22
1984 16
1985 21
1986 19
1987 17
1988 16
1989 19
1990 28
1991 24
1992 28
1993 24
1994 15
1995 18
1996 17
1997 17
1998 22
1999 20
2000 17
2001 22
2002 20
2003 15
2004 18
2005 17
2006 14
2007 23
2009 32
2010 23
2012 32
2013 16
2014 21
2015 19
2016 18
2017 25
2018 22
2019 18
2020 25
2021 22
2022 16
2023 21
2024 19
2025 17
2026 16
2027 7
2028 10
2029 19
2030 36
2031 28
2032 19
2033 36
2034 28
2035 12
2036 17
2037 15
2038 14
2039 21
2040 18
2041 14
2042 21
2043 18
2044 12
2045 17
2046 13
2047 10
2048 19
2049 36
2050 28
2051 19
2052 36
2053 28
2054 12
2055 17
2056 15
2057 14
2058 21
2059 18
2060 14
2061 21
2062 18
2063 12
2064 17
2065 15
2066 13
2067 15
2068 24
2069 20
2070 15
2071 24
2072 20
2073 11
2074 14
2075 13
2076 13
2077 18
2078 16
2079 13
2080 18
2081 16
2082 11
2083 14
2084 13
2085 10
2086 19
2087 36
2088 28
2089 19
2090 36
2091 28
2092 12
2093 17
2094 15
2095 14
2096 21
2097 18
2098 14
2099 21
2100 18
2101 17
2102 15
2103 13
2104 12
2105 10
2106 19
2107 36
2108 28
2109 36
2110 28
2111 12
2112 17
2113 15
2114 14
2115 21
2116 18
2117 14
2118 21
2119 18
2120 12
2121 17
2122 15
2123 13
2124 12
2125 19
2126 36
2127 28
2128 19
2129 36
2130 28
2131 12
2132 17
2133 15
2134 14
2135 21
2136 18
2137 14
2138 21
2139 18
2140 12
2141 17
2142 15
2143 13
2144 12
2145 15
2146 24
2147 20
2148 15
2149 24
2150 20
2151 11
2152 14
2153 13
2154 13
2155 18
2156 16
2157 13
2158 18
2159 16
2160 11
2161 14
2162 13
2163 10
2164 19
2165 28
2166 19
2167 36
2168 28
2169 12
2170 17
2171 15
2172 14
2173 21
2174 18
2175 14
2176 21
2177 18
2178 12
2179 17
2180 15
2181 13
2182 12
2183 14
2184 17
2185 26
2187 35
2188 26
2190 35
2191 19
2192 24
2193 22
2194 28
2195 25
2196 21
2197 28
2198 25
2199 19
2200 24
2201 20
2202 19
2203 17
2204 26
2206 35
2207 26
2209 35
2210 19
2211 24
2212 22
2213 21
2214 25
2215 21
2216 28
2217 25
2218 19
2219 24
2220 22
2221 20
2222 19
2223 22
2224 31
2225 27
2226 31
2227 27
2228 18
2229 21
2230 20
2231 20
2232 25
2233 23
2234 20
2235 25
2236 23
2237 18
2238 21
2239 20
2240 17
2241 26
2243 26
2245 35
2246 19
2247 24
2248 22
2249 21
2250 28
2251 25
2252 21
2253 28
2254 25
2255 19
2256 24
2257 22
2258 20
2259 19
2260 17
2261 26
2263 35
2264 26
2266 35
2267 19
2268 24
2269 22
2270 21
2271 28
2272 25
2273 21
2274 28
2275 25
2276 24
2277 22
2278 20
2279 19
2280 17
2281 26
2283 35
2284 26
2286 35
2287 19
2288 24
2289 22
2290 21
2291 28
2292 25
2293 21
2294 28
2295 25
2296 19
2297 24
2298 22
2299 20
2300 19
2301 22
2302 31
2303 27
2304 22
2305 27
2306 21
2307 20
2308 20
2309 25
2310 23
2311 20
2312 25
2313 23
2314 18
2315 21
2316 20
2317 17
2318 26
2320 35
2321 26
2323 35
2324 19
2325 24
2326 22
2327 21
2328 28
2329 25
2330 21
2331 28
2332 25
2333 19
2334 24
2335 22
2336 20
2337 19
2338 11
2339 14
2341 32
2342 23
2344 32
2345 16
2346 21
2347 19
2348 18
2349 25
2350 22
2351 18
2352 25
2353 22
2354 16
2355 21
2356 19
2357 17
2358 16
2359 14
2360 23
2362 32
2363 23
2365 32
2366 16
2367 21
2368 19
2369 18
2370 25
2371 22
2372 18
2373 25
2374 22
2375 16
2376 21
2377 19
2378 17
2379 16
2380 19
2381 28
2382 24
2383 19
2384 28
2385 24
2386 15
2387 18
2388 17
2389 22
2390 20
2391 17
2392 22
2393 20
2394 15
2395 18
2396 14
2397 23
2399 32
2400 23
2402 32
2403 16
2404 21
2405 19
2406 18
2407 25
2408 22
2409 18
2410 22
2411 16
2412 21
2413 17
2414 16
2415 14
2416 23
2418 32
2419 23
2421 32
2422 16
2423 21
2424 19
2425 18
2426 25
2427 22
2428 18
2429 25
2430 22
2431 16
2432 21
2433 19
2434 17
2435 16
2436 14
2437 23
2439 32
2440 23
2442 16
2443 21
2444 18
2445 25
2446 22
2447 18
2448 25
2449 22
2450 16
2451 21
2452 19
2453 17
2454 16
2455 19
2456 28
2457 24
2458 19
2459 28
2460 24
2461 15
2462 18
2463 17
2464 17
2465 22
2466 20
2467 17
2468 22
2469 20
2470 15
2471 18
2472 17
2473 14
2474 23
2476 32
2477 23
2479 32
2480 16
2481 21
2482 19
2483 18
2484 25
2485 22
2486 18
2487 25
2488 22
2489 16
2490 21
2491 19
2492 17
2493 16
2494 5
2495 8
2496 17
2497 34
2498 26
2499 17
2500 34
2501 26
2502 10
2503 15
2504 13
2505 12
2506 19
2507 16
2508 12
2509 19
2510 16
2511 10
2512 15
2513 13
2514 11
2515 10
2516 8
2517 17
2518 34
2519 26
2520 17
2521 34
2522 26
2523 10
2524 15
2525 13
2526 12
2527 19
2528 16
2529 12
2530 19
2531 16
2532 10
2533 15
2534 13
2535 11
2536 10
2537 13
2538 22
2539 18
2540 13
2541 22
2542 18
2543 9
2544 12
2545 11
2546 11
2547 16
2548 14
2549 11
2550 16
2551 14
2552 9
2553 12
2554 11
2555 8
2556 17
2557 34
2558 26
2559 17
2560 34
2561 26
2562 10
2563 15
2564 13
2565 12
2566 19
2567 16
2568 12
2569 19
2570 16
2571 10
2572 15
2573 13
2574 11
2575 10
2576 8
2577 17
2578 34
2579 26
2580 17
2581 34
2582 26
2583 10
2584 15
2585 13
2586 12
2587 19
2588 16
2589 12
2590 19
2591 16
2592 10
2593 15
2594 13
2595 11
2596 10
2597 8
2598 17
2599 34
2600 26
2601 17
2602 34
2603 26
2604 10
2605 13
2606 12
2607 19
2608 16
2609 12
2610 19
2611 16
2612 10
2613 15
2614 13
2615 11
2616 13
2617 22
2618 18
2619 13
2620 22
2621 18
2622 9
2623 12
2624 11
2625 11
2626 16
2627 14
2628 11
2629 16
2630 14
2631 9
2632 12
2633 11
2634 8
2635 17
2636 26
2637 17
2638 34
2639 26
2640 10
2641 15
2642 13
2643 12
2644 19
2645 16
2646 12
2647 19
2648 16
2649 10
2650 15
2651 13
2652 11
2653 10
2654 10
2655 13
2656 22
2657 39
2658 31
2659 22
2660 31
2661 15
2662 20
2663 18
2664 17
2665 24
2666 21
2667 17
2668 24
2669 21
2670 15
2671 18
2672 16
2673 15
2674 13
2675 22
2676 39
2677 31
2678 22
2679 39
2680 31
2681 15
2682 20
2683 18
2684 17
2685 24
2686 21
2687 24
2688 21
2689 15
2690 20
2691 18
2692 16
2693 15
2694 18
2695 27
2696 23
2697 18
2698 27
2699 23
2700 17
2701 16
2702 16
2703 21
2704 19
2705 16
2706 21
2707 19
2708 14
2709 17
2710 16
2711 13
2712 22
2713 39
2714 31
2715 22
2716 39
2717 31
2718 15
2719 20
2720 18
2721 17
2722 24
2723 21
2724 17
2725 24
2726 21
2727 15
2728 20
2729 18
2730 16
2731 15
2732 13
2733 22
2734 39
2735 31
2736 22
2737 39
2738 31
2739 15
2740 20
2741 18
2742 17
2743 24
2744 21
2745 17
2746 24
2747 21
2748 15
2749 20
2750 18
2751 16
2752 15
2753 13
2754 22
2755 39
2756 31
2757 22
2758 39
2759 31
2760 15
2761 18
2762 17
2763 24
2764 21
2765 17
2766 21
2767 15
2768 20
2769 16
2770 15
2771 18
2772 27
2773 23
2774 18
2775 27
2776 23
2777 14
2778 17
2779 16
2780 16
2781 21
2782 19
2783 16
2784 21
2785 19
2786 14
2787 17
2788 16
2789 13
2790 22
2791 39
2792 31
2793 22
2794 39
2795 31
2796 20
2797 18
2798 17
2799 24
2800 21
2801 17
2802 24
2803 21
2804 20
2805 18
2806 16
2807 15
2808 8
2809 11
2810 20
2811 37
2812 29
2813 20
2814 37
2815 29
2816 13
2817 18
2818 16
2819 15
2820 22
2821 19
2822 15
2823 22
2824 19
2825 13
2826 18
2827 16
2828 14
2829 13
2830 11
2831 20
2832 29
2833 20
2834 37
2835 29
2836 13
2837 16
2838 15
2839 22
2840 19
2841 22
2842 19
2843 13
2844 18
2845 16
2846 13
2847 16
2848 25
2849 21
2850 16
2851 25
2852 21
2853 12
2854 15
2855 14
2856 14
2857 19
2858 17
2859 14
2860 19
2861 17
2862 12
2863 15
2864 14
2865 11
2866 20
2867 37
2868 29
2869 20
2870 37
2871 29
2872 13
2873 18
2874 16
2875 15
2876 22
2877 19
2878 15
2879 22
2880 19
2881 13
2882 18
2883 16
2884 14
2885 13
2886 11
2887 20
2888 37
2889 29
2890 20
2891 37
2892 29
2893 13
2894 16
2895 15
2896 22
2897 19
2898 15
2899 22
2900 19
2901 13
2902 18
2903 16
2904 14
2905 13
2906 11
2907 20
2908 37
2909 29
2910 20
2911 37
2912 29
2913 13
2914 18
2915 15
2916 22
2917 19
2918 15
2919 22
2920 19
2921 13
2922 18
2923 16
2924 14
2925 13
2926 16
2927 25
2928 21
2929 16
2930 25
2931 21
2932 12
2933 15
2934 14
2935 14
2936 19
2937 17
2938 14
2939 19
2940 17
2941 12
2942 15
2943 14
2944 20
2945 37
2946 29
2947 20
2948 37
2949 29
2950 13
2951 18
2952 16
2953 15
2954 22
2955 19
2956 15
2957 22
2958 19
2959 13
2960 18
2961 16
2962 14
2963 13
2964 6
2965 9
2966 18
2967 35
2968 27
2969 18
2970 35
2971 27
2972 11
2973 16
2974 14
2975 13
2976 20
2977 17
2978 13
2979 20
2980 17
2981 11
2982 16
2983 14
2984 12
2985 11
2986 9
2987 18
2988 35
2989 27
2990 18
2991 35
2992 27
2993 11
2994 16
2995 14
2996 13
2997 20
2998 17
2999 13
3000 20
3001 17
3002 11
3003 16
3004 14
3005 12
3006 11
3007 14
3008 23
3009 19
3010 14
3011 23
3012 19
3013 10
3014 13
3015 12
3016 12
3017 17
3018 15
3019 12
3020 17
3021 15
3022 10
3023 13
3024 12
3025 9
3026 18
3027 27
3028 18
3029 35
3030 27
3031 11
3032 16
3033 14
3034 13
3035 20
3036 17
3037 13
3038 20
3039 17
3040 11
3041 16
3042 14
3043 12
3044 11
3045 9
3046 18
3047 35
3048 27
3049 18
3050 35
3051 27
3052 11
3053 16
3054 14
3055 13
3056 20
3057 17
3058 13
3059 20
3060 17
3061 11
3062 16
3063 14
3064 12
3065 11
3066 9
3067 18
3068 35
3069 27
3070 18
3071 35
3072 27
3073 11
3074 16
3075 14
3076 13
3077 20
3078 17
3079 13
3080 20
3081 17
3082 11
3083 16
3084 14
3085 12
3086 11
3087 14
3088 23
3089 19
3090 14
3091 23
3092 19
3093 13
3094 12
3095 12
3096 17
3097 15
3098 17
3099 15
3100 13
3101 12
3102 9
3103 18
3104 35
3105 27
3106 18
3107 35
3108 27
3109 11
3110 16
3111 14
3112 13
3113 20
3114 13
3115 20
3116 17
3117 11
3118 16
3119 14
3120 12
3121 11
3122 5
3123 8
3124 17
3125 34
3126 26
3127 17
3128 34
3129 10
3130 15
3131 13
3132 19
3133 16
3134 12
3135 19
3136 16
3137 10
3138 15
3139 13
3140 11
3141 10
3142 8
3143 17
3144 34
3145 26
3146 17
3147 34
3148 26
3149 10
3150 15
3151 13
3152 12
3153 19
3154 12
3155 19
3156 16
3157 10
3158 15
3159 13
3160 11
3161 10
3162 13
3163 22
3164 18
3165 13
3166 22
3167 9
3168 12
3169 11
3170 11
3171 16
3172 14
3173 11
3174 16
3175 14
3176 9
3177 12
3178 11
3179 8
3180 17
3181 34
3182 26
3183 17
3184 34
3185 26
3186 10
3187 15
3188 13
3189 12
3190 19
3191 16
3192 12
3193 19
3194 10
3195 15
3196 13
3197 11
3198 10
3199 8
3200 17
3201 34
3202 26
3203 17
3204 34
3205 26
3206 10
3207 15
3208 13
3209 12
3210 19
3211 16
3212 12
3213 19
3214 16
3215 10
3216 15
3217 13
3218 11
3219 10
3220 8
3221 17
3222 34
3223 26
3224 17
3225 34
3226 26
3227 10
3228 15
3229 13
3230 12
3231 19
3232 16
3233 12
3234 19
3235 16
3236 10
3237 15
3238 13
3239 11
3240 10
3241 13
3242 22
3243 18
3244 13
3245 22
3246 18
3247 9
3248 12
3249 11
3250 11
3251 16
3252 14
3253 11
3254 16
3255 14
3256 9
3257 12
3258 11
3259 8
3260 17
3261 34
3262 26
3263 17
3264 26
3265 10
3266 15
3267 13
3268 12
3269 19
3270 16
3271 12
3272 19
3273 16
3274 10
3275 15
3276 13
3277 11
3278 10
3279 3
3280 6
3281 15
3282 32
3283 24
3284 15
3285 32
3286 24
3287 8
3288 13
3289 11
3290 10
3291 17
3292 14
3293 10
3294 17
3295 14
3296 8
3297 13
3298 11
3299 9
3300 6
3301 15
3302 32
3303 24
3304 15
3305 32
3306 24
3307 8
3308 13
3309 11
3310 10
3311 17
3312 14
3313 10
3314 17
3315 14
3316 8
3317 13
3318 11
3319 9
3320 8
3321 11
3322 20
3323 16
3324 11
3325 20
3326 16
3327 7
3328 10
3329 9
3330 9
3331 14
3332 12
3333 9
3334 14
3335 7
3336 10
3337 9
3338 15
3339 32
3340 24
3341 32
3342 24
3343 8
3344 13
3345 11
3346 10
3347 17
3348 14
3349 10
3350 17
3351 14
3352 8
3353 13
3354 11
3355 9
3356 8
3357 6
3358 15
3359 24
3360 15
3361 32
3362 24
3363 8
3364 13
3365 11
3366 10
3367 17
3368 14
3369 10
3370 17
3371 14
3372 8
3373 13
3374 11
3375 9
3376 8
3377 6
3378 15
3379 32
3380 24
3381 15
3382 32
3383 24
3384 8
3385 13
3386 11
3387 10
3388 17
3389 14
3390 10
3391 17
3392 14
3393 8
3394 13
3395 11
3396 9
3397 8
3398 20
3399 16
3400 11
3401 20
3402 16
3403 7
3404 10
3405 9
3406 9
3407 14
3408 12
3409 9
3410 14
3411 12
3412 7
3413 10
3414 9
3415 6
3416 15
3417 32
3418 24
3419 15
3420 32
3421 24
3422 8
3423 13
3424 11
3425 10
3426 17
3427 14
3428 10
3429 17
3430 14
3431 8
3432 13
3433 11
3434 9
3435 8
3436 12
3437 15
3438 24
3440 33
3441 24
3443 33
3444 17
3445 22
3446 20
3447 19
3448 26
3449 23
3450 19
3451 26
3452 23
3453 17
3454 22
3455 20
3456 18
3457 17
3458 15
3459 24
3461 33
3462 24
3464 33
3465 17
3466 22
3467 20
3468 19
3469 26
3470 23
3471 19
3472 26
3473 23
3474 17
3475 22
3476 20
3477 18
3478 17
3479 20
3480 29
3481 25
3482 20
3483 29
3484 25
3485 16
3486 19
3487 18
3488 23
3489 21
3490 18
3491 23
3492 21
3493 16
3494 19
3495 15
3496 24
3498 33
3499 24
3500 33
3501 17
3502 22
3503 20
3504 19
3505 26
3506 23
3507 19
3508 26
3509 23
3510 17
3511 22
3512 20
3513 18
3514 17
3515 15
3516 24
3518 33
3519 24
3521 33
3522 17
3523 22
3524 20
3525 19
3526 26
3527 23
3528 19
3529 26
3530 23
3531 17
3532 22
3533 20
3534 18
3535 17
3536 15
3537 24
3539 33
3541 33
3542 17
3543 22
3544 20
3545 19
3546 26
3547 23
3548 19
3549 26
3550 23
3551 17
3552 22
3553 20
3554 18
3555 17
3556 20
3557 29
3558 20
3559 29
3560 25
3561 16
3562 19
3563 18
3564 18
3565 23
3566 21
3567 18
3568 23
3569 21
3570 16
3571 19
3572 18
3573 15
3574 24
3576 33
3577 24
3579 33
3580 17
3581 22
3582 20
3583 19
3584 26
3585 23
3586 19
3587 26
3588 23
3589 17
3590 22
3591 20
3592 18
3593 17
3594 29
3595 32
3602 34
3603 39
3604 37
3605 36
3608 36
3611 34
3612 39
3613 37
3614 35
3615 34
3616 32
3622 34
3623 39
3624 37
3625 36
3628 36
3631 34
3632 39
3633 37
3634 35
3635 34
3636 37
3639 37
3642 33
3643 36
3644 35
3645 35
3647 38
3648 35
3650 38
3651 33
3652 36
3653 35
3654 32
3661 34
3662 39
3663 37
3664 36
3667 36
3670 34
3671 39
3672 37
3673 35
3674 34
3675 32
3682 34
3683 39
3684 37
3685 36
3688 36
3691 34
3692 39
3693 37
3694 35
3695 34
3696 32
3703 34
3704 39
3705 37
3706 36
3708 36
3711 34
3712 39
3713 37
3714 35
3715 34
3716 37
3719 37
3722 33
3723 36
3724 35
3725 35
3727 38
3728 35
3730 38
3731 33
3732 36
3733 35
3734 32
3741 34
3742 39
3743 37
3744 36
3747 36
3749 34
3750 39
3751 37
3752 35
3753 34
3754 24
3755 33
3758 33
3761 26
3762 31
3763 29
3764 28
3765 35
3766 32
3767 28
3768 35
3769 32
3770 26
3771 31
3772 29
3773 27
3774 26
3775 24
3776 33
3779 33
3781 26
3782 31
3783 29
3784 28
3785 35
3786 32
3787 28
3788 35
3789 32
3790 26
3791 31
3792 29
3793 27
3794 26
3795 29
3796 34
3797 29
3798 38
3799 34
3800 25
3801 28
3802 27
3803 27
3804 32
3805 30
3806 32
3807 30
3808 25
3809 28
3810 27
3811 24
3812 33
3815 33
3818 26
3819 31
3820 29
3821 28
3822 35
3823 32
3824 28
3825 35
3826 32
3827 26
3828 31
3829 29
3830 27
3831 26
3832 24
3833 33
3836 33
3839 26
3840 31
3841 29
3842 28
3843 35
3844 32
3845 28
3846 35
3847 32
3848 26
3849 31
3850 29
3851 26
3852 24
3853 33
3856 33
3859 26
3860 31
3861 29
3862 35
3863 32
3864 28
3865 35
3866 32
3867 26
3868 31
3869 29
3870 26
3871 29
3872 38
3873 34
3874 29
3875 38
3876 34
3877 25
3878 28
3879 27
3880 27
3881 32
3882 30
3883 27
3884 32
3885 30
3886 25
3887 28
3888 27
3889 33
3892 33
3895 31
3896 28
3897 35
3898 32
3899 35
3900 32
3901 26
3902 31
3903 29
3904 27
3905 26
3906 12
3907 15
3908 24
3910 33
3911 24
3912 33
3913 17
3914 22
3915 20
3916 19
3917 26
3918 19
3919 26
3920 23
3921 17
3922 22
3923 20
3924 18
3925 17
3926 15
3928 33
3929 24
3931 33
3932 17
3933 22
3934 20
3935 19
3936 26
3937 23
3938 19
3939 26
3940 23
3941 17
3942 22
3943 20
3944 18
3945 17
3946 20
3947 29
3948 25
3949 20
3950 29
3951 25
3952 16
3953 19
3954 18
3955 18
3956 23
3957 21
3958 18
3959 23
3960 21
3961 16
3962 19
3963 18
3964 15
3965 24
3967 33
3968 24
3970 17
3971 22
3972 20
3973 19
3974 26
3975 23
3976 19
3977 26
3978 23
3979 17
3980 22
3981 20
3982 18
3983 17
3984 15
3985 24
3987 33
3988 24
3990 33
3991 17
3992 22
3993 20
3994 19
3995 26
3996 23
3997 19
3998 26
3999 23
4000 17
4001 22
4002 20
4003 18
4004 17
4005 15
4006 24
4008 33
4009 24
4010 33
4011 17
4012 22
4013 19
4014 26
4015 23
4016 19
4017 26
4018 23
4019 17
4020 22
4021 20
4022 18
4023 17
4024 20
4025 29
4026 25
4027 20
4028 29
4029 25
4030 16
4031 19
4032 18
4033 18
4034 23
4035 21
4036 18
4037 23
4038 21
4039 16
4040 19
4041 18
4042 15
4043 24
4045 33
4046 24
4048 33
4049 17
4050 22
4051 20
4052 19
4053 26
4054 23
4055 19
4056 26
4057 23
4058 17
4059 22
4060 20
4061 18
4062 17
4063 29
4064 32
4071 34
4072 39
4073 37
4074 36
4077 36
4080 34
4081 39
4082 37
4083 35
4084 34
4085 32
4091 34
4092 39
4093 37
4094 36
4097 36
4100 34
4101 37
4102 35
4103 34
4104 37
4107 37
4110 33
4111 36
4112 35
4114 38
4115 35
4117 38
4118 33
4119 36
4120 35
4121 32
4128 34
4129 39
4130 37
4131 36
4134 36
4137 34
4138 39
4139 37
4140 35
4141 34
4142 32
4149 34
4150 39
4151 37
4152 36
4154 36
4157 34
4158 39
4159 37
4160 35
4161 34
4162 32
4169 34
4170 39
4171 37
4172 36
4175 36
4178 34
4179 39
4180 37
4181 35
4182 34
4183 37
4186 37
4189 33
4190 36
4191 35
4192 35
4194 38
4195 35
4197 38
4198 33
4199 36
4200 35
4201 32
4207 34
4208 39
4209 37
4210 36
4213 36
4216 34
4217 39
4218 37
4219 35
4220 34
4221 21
4222 24
4223 33
4226 33
4229 26
4230 31
4231 29
4232 28
4233 35
4234 32
4235 28
4236 35
4237 32
4238 26
4239 31
4240 29
4241 26
4242 24
4243 33
4246 33
4249 26
4250 31
4251 29
4252 28
4253 35
4254 32
4255 28
4256 35
4257 32
4258 26
4259 31
4260 29
4261 27
4262 26
4263 29
4264 38
4265 34
4266 29
4267 38
4268 34
4269 25
4270 28
4271 27
4272 27
4273 32
4274 30
4275 27
4276 32
4277 30
4278 25
4279 28
4280 27
4281 24
4282 33
4285 33
4288 26
4289 29
4290 28
4291 35
4292 32
4293 28
4294 35
4295 32
4296 26
4297 31
4298 29
4299 27
4300 26
4301 24
4302 33
4305 33
4308 26
4309 31
4310 29
4311 35
4312 32
4313 28
4314 32
4315 26
4316 31
4317 29
4318 27
4319 26
4320 24
4321 33
4323 33
4326 26
4327 31
4328 29
4329 28
4330 35
4331 32
4332 28
4333 35
4334 32
4335 26
4336 31
4337 29
4338 27
4339 26
4340 29
4341 34
4342 29
4343 38
4344 34
4345 25
4346 28
4347 27
4348 27
4349 32
4350 30
4351 27
4352 32
4353 25
4354 28
4355 27
4356 24
4357 33
4362 26
4363 31
4364 29
4365 28
4366 35
4367 32
4368 28
4369 35
4370 32
4371 26
4372 31
4373 29
4374 27
4375 26
4376 5
4377 8
4378 17
4379 34
4380 26
4381 17
4382 34
4383 26
4384 10
4385 15
4386 13
4387 19
4388 16
4389 12
4390 19
4391 16
4392 10
4393 15
4394 13
4395 11
4396 10
4397 8
4398 17
4399 34
4400 26
4401 17
4402 34
4403 26
4404 10
4405 15
4406 13
4407 12
4408 19
4409 16
4410 12
4411 19
4412 16
4413 10
4414 15
4415 11
4416 10
4417 13
4418 22
4419 18
4420 13
4421 22
4422 18
4423 9
4424 12
4425 11
4426 11
4427 16
4428 14
4429 16
4430 14
4431 9
4432 12
4433 11
4434 8
4435 17
4436 34
4437 26
4438 17
4439 34
4440 26
4441 10
4442 15
4443 13
4444 12
4445 19
4446 16
4447 19
4448 16
4449 10
4450 15
4451 13
4452 11
4453 10
4454 8
4455 17
4456 26
4457 17
4458 34
4459 26
4460 10
4461 15
4462 13
4463 12
4464 19
4465 16
4466 12
4467 19
4468 16
4469 10
4470 13
4471 11
4472 10
4473 17
4474 26
4475 17
4476 10
4477 15
4478 13
4479 12
4480 19
4481 16
4482 12
4483 19
4484 16
4485 10
4486 15
4487 13
4488 11
4489 10
4490 13
4491 22
4492 18
4493 13
4494 22
4495 18
4496 9
4497 11
4498 11
4499 16
4500 14
4501 11
4502 16
4503 14
4504 11
4505 8
4506 17
4507 34
4508 26
4509 17
4510 34
4511 26
4512 10
4513 15
4514 13
4515 12
4516 19
4517 16
4518 12
4519 19
4520 16
4521 10
4522 15
4523 13
4524 11
4525 10
4526 13
4527 22
4528 31
4529 22
4530 39
4531 31
4532 15
4533 20
4534 18
4535 17
4536 24
4537 21
4538 17
4539 24
4540 21
4541 15
4542 20
4543 18
4544 16
4545 15
4546 13
4547 22
4548 39
4549 31
4550 22
4551 39
4552 31
4553 15
4554 20
4555 18
4556 17
4557 24
4558 21
4559 17
4560 24
4561 21
4562 15
4563 20
4564 18
4565 16
4566 15
4567 18
4568 27
4569 23
4570 18
4571 27
4572 23
4573 14
4574 17
4575 16
4576 16
4577 21
4578 19
4579 16
4580 21
4581 19
4582 14
4583 17
4584 16
4585 13
4586 22
4587 39
4588 31
4589 22
4590 39
4591 15
4592 20
4593 18
4594 17
4595 24
4596 21
4597 17
4598 24
4599 21
4600 15
4601 20
4602 18
4603 16
4604 15
4605 13
4606 22
4607 39
4608 31
4609 22
4610 39
4611 31
4612 15
4613 20
4614 18
4615 17
4616 24
4617 21
4618 17
4619 21
4620 15
4621 20
4622 18
4623 13
4624 22
4625 39
4626 31
4627 22
4628 39
4629 31
4630 15
4631 20
4632 18
4633 17
4634 24
4635 21
4636 17
4637 24
4638 21
4639 15
4640 20
4641 18
4642 16
4643 15
4644 18
4645 27
4646 23
4647 18
4648 27
4649 23
4650 14
4651 17
4652 16
4653 16
4654 21
4655 19
4656 16
4657 21
4658 19
4659 14
4660 17
4661 16
4662 13
4663 22
4664 39
4665 31
4666 22
4667 39
4668 31
4669 15
4670 20
4671 18
4672 17
4673 24
4674 21
4675 17
4676 21
4677 15
4678 20
4679 18
4680 16
4681 15
4682 8
4683 11
4684 20
4685 37
4686 29
4687 37
4688 29
4689 13
4690 18
4691 16
4692 15
4693 22
4694 19
4695 15
4696 22
4697 19
4698 13
4699 18
4700 16
4701 14
4702 13
4703 11
4704 20
4705 37
4706 29
4707 20
4708 29
4709 18
4710 16
4711 15
4712 19
4713 15
4714 22
4715 19
4716 13
4717 18
4718 16
4719 14
4720 13
4721 16
4722 25
4723 21
4724 16
4725 25
4726 21
4727 12
4728 15
4729 14
4730 14
4731 19
4732 17
4733 14
4734 17
4735 12
4736 15
4737 14
4738 11
4739 20
4740 37
4741 29
4742 20
4743 37
4744 29
4745 13
4746 18
4747 16
4748 15
4749 22
4750 19
4751 15
4752 22
4753 19
4754 13
4755 18
4756 16
4757 14
4758 13
4759 11
4760 20
4761 37
4762 29
4763 20
4764 37
4765 29
4766 13
4767 18
4768 16
4769 15
4770 22
4771 19
4772 22
4773 19
4774 18
4775 16
4776 14
4777 13
4778 11
4779 20
4780 37
4781 29
4782 20
4783 37
4784 29
4785 13
4786 18
4787 16
4788 15
4789 22
4790 19
4791 15
4792 22
4793 19
4794 13
4795 18
4796 16
4797 14
4798 13
4799 16
4800 25
4801 21
4802 16
4803 25
4804 12
4805 15
4806 14
4807 14
4808 19
4809 17
4810 14
4811 19
4812 17
4813 12
4814 15
4815 14
4816 11
4817 20
4818 37
4819 29
4820 20
4821 37
4822 29
4823 13
4824 18
4825 16
4826 15
4827 22
4828 15
4829 22
4830 19
4831 13
4832 18
4833 16
4834 14
4835 13
4836 7
4837 10
4838 19
4839 36
4840 28
4841 19
4842 36
4843 28
4844 12
4845 17
4846 15
4847 14
4848 21
4849 18
4850 14
4851 21
4852 18
4853 12
4854 17
4855 15
4856 13
4857 12
4858 10
4859 19
4860 36
4861 28
4862 19
4863 36
4864 28
4865 12
4866 17
4867 15
4868 14
4869 21
4870 18
4871 14
4872 21
4873 18
4874 12
4875 17
4876 15
4877 13
4878 12
4879 15
4880 24
4881 15
4882 24
4883 20
4884 11
4885 14
4886 13
4887 18
4888 16
4889 13
4890 18
4891 16
4892 11
4893 14
4894 13
4895 10
4896 19
4897 36
4898 28
4899 19
4900 36
4901 28
4902 12
4903 17
4904 15
4905 14
4906 21
4907 18
4908 14
4909 21
4910 18
4911 12
4912 17
4913 15
4914 13
4915 12
4916 10
4917 19
4918 36
4919 28
4920 19
4921 36
4922 28
4923 12
4924 17
4925 15
4926 14
4927 21
4928 18
4929 14
4930 21
4931 18
4932 12
4933 17
4934 15
4935 13
4936 12
4937 10
4938 19
4939 36
4940 28
4941 19
4942 36
4943 28
4944 12
4945 17
4946 15
4947 14
4948 21
4949 18
4950 18
4951 12
4952 17
4953 15
4954 13
4955 15
4956 20
4957 15
4958 24
4959 20
4960 11
4961 14
4962 13
4963 13
4964 18
4965 16
4966 13
4967 18
4968 16
4969 11
4970 14
4971 13
4972 10
4973 19
4974 36
4975 28
4976 19
4977 36
4978 28
4979 12
4980 17
4981 15
4982 14
4983 21
4984 18
4985 21
4986 18
4987 12
4988 17
4989 15
4990 13
4991 12
4992 14
4993 17
4994 26
4996 35
4997 26
4999 35
5000 19
5001 24
5002 21
5003 25
5004 21
5005 28
5006 25
5007 19
5008 24
5009 22
5010 19
5011 17
5012 26
5014 35
5015 26
5017 35
5018 19
5019 24
5020 22
5021 21
5022 28
5023 25
5024 21
5025 28
5026 25
5027 19
5028 24
5029 22
5030 20
5031 19
5032 22
5033 31
5034 27
5035 22
5036 31
5037 27
5038 18
5039 21
5040 20
5041 20
5042 25
5043 23
5044 20
5045 25
5046 23
5047 18
5048 21
5049 20
5050 17
5051 26
5053 35
5054 26
5056 35
5057 19
5058 24
5059 22
5060 21
5061 28
5062 25
5063 21
5064 28
5065 25
5066 19
5067 24
5068 22
5069 20
5070 19
5071 17
5072 26
5074 35
5075 26
5076 19
5077 24
5078 22
5079 21
5080 28
5081 25
5082 21
5083 28
5084 25
5085 19
5086 24
5087 22
5088 20
5089 19
5090 17
5091 26
5093 35
5094 26
5096 35
5097 19
5098 24
5099 22
5100 21
5101 28
5102 25
5103 21
5104 28
5105 25
5106 19
5107 24
5108 22
5109 20
5110 19
5111 22
5112 31
5113 22
5114 31
5115 27
5116 18
5117 21
5118 20
5119 20
5120 25
5121 23
5122 20
5123 25
5124 23
5125 18
5126 20
5127 26
5129 35
5130 26
5132 35
5133 19
5134 24
5135 22
5136 28
5137 25
5138 21
5139 28
5140 25
5141 19
5142 24
5143 22
5144 20
5145 19
5146 11
5147 23
5149 32
5150 23
5152 32
5153 16
5154 21
5155 19
5156 18
5157 25
5158 22
5159 18
5160 25
5161 22
5162 16
5163 21
5164 19
5165 17
5166 16
5167 14
5168 23
5170 32
5171 23
5173 32
5174 16
5175 21
5176 19
5177 18
5178 25
5179 22
5180 18
5181 25
5182 22
5183 16
5184 21
5185 19
5186 17
5187 16
5188 19
5189 28
5190 24
5191 19
5192 28
5193 24
5194 15
5195 18
5196 17
5197 17
5198 22
5199 20
5200 17
5201 22
5202 20
5203 15
5204 18
5205 17
5206 14
5207 23
5209 32
5210 23
5212 32
5213 16
5214 21
5215 19
5216 18
5217 25
5218 22
5219 18
5220 25
5221 22
5222 16
5223 21
5224 19
5225 17
5226 16
5227 14
5228 23
5230 32
5231 23
5233 32
5234 16
5235 21
5236 19
5237 18
5238 25
5239 22
5240 18
5241 25
5242 22
5243 16
5244 21
5245 19
5246 17
5247 16
5248 14
5249 23
5251 32
5252 23
5254 32
5255 16
5256 21
5257 19
5258 18
5259 22
5260 18
5261 25
5262 22
5263 16
5264 21
5265 19
5266 17
5267 16
5268 19
5269 24
5270 19
5271 28
5272 24
5273 15
5274 18
5275 17
5276 17
5277 22
5278 20
5279 17
5280 22
5281 15
5282 18
5283 17
5284 14
5285 23
5287 32
5288 23
5290 32
5291 16
5292 21
5293 19
5294 18
5295 25
5296 22
5297 25
5298 22
5299 16
5300 21
5301 17
5302 16
5303 7
5304 10
5305 19
5306 36
5307 28
5308 19
5309 36
5310 28
5311 12
5312 17
5313 15
5314 14
5315 21
5316 18
5317 14
5318 21
5319 18
5320 12
5321 17
5322 15
5323 13
5324 12
5325 10
5326 19
5327 36
5328 28
5329 36
5330 28
5331 12
5332 17
5333 15
5334 14
5335 21
5336 18
5337 14
5338 21
5339 18
5340 12
5341 15
5342 13
5343 12
5344 15
5345 24
5346 20
5347 15
5348 24
5349 20
5350 14
5351 13
5352 13
5353 18
5354 16
5355 13
5356 18
5357 16
5358 11
5359 14
5360 13
5361 10
5362 19
5363 36
5364 28
5365 36
5366 28
5367 12
5368 17
5369 15
5370 14
5371 18
5372 14
5373 21
5374 18
5375 12
5376 17
5377 15
5378 13
5379 12
5380 10
5381 19
5382 36
5383 28
5384 19
5385 28
5386 12
5387 17
5388 15
5389 14
5390 21
5391 18
5392 14
5393 21
5394 18
5395 12
5396 17
5397 15
5398 13
5399 12
5400 10
5401 19
5402 36
5403 28
5404 19
5405 36
5406 28
5407 12
5408 17
5409 15
5410 14
5411 21
5412 18
5413 14
5414 21
5415 18
5416 12
5417 17
5418 15
5419 13
5420 12
5421 15
5422 24
5423 20
5424 15
5425 24
5426 11
5427 14
5428 13
5429 13
5430 18
5431 16
5432 13
5433 18
5434 16
5435 11
5436 14
5437 13
5438 10
5439 19
5440 36
5441 28
5442 19
5443 36
5444 28
5445 12
5446 17
5447 15
5448 14
5449 21
5450 18
5451 14
5452 21
5453 18
5454 12
5455 17
5456 15
5457 13
5458 12
5459 14
5460 17
5461 26
5463 35
5464 26
5466 35
5467 19
5468 24
5469 22
5470 21
5471 28
5472 25
5473 21
5474 28
5475 25
5476 19
5477 24
5478 20
5479 19
5480 17
5481 26
5483 35
5484 26
5486 35
5487 19
5488 24
5489 22
5490 21
5491 28
5492 25
5493 21
5494 28
5495 25
5496 19
5497 24
5498 22
5499 20
5500 19
5501 22
5502 31
5503 27
5504 31
5505 27
5506 18
5507 21
5508 20
5509 20
5510 25
5511 23
5512 20
5513 25
5514 23
5515 18
5516 21
5517 17
5518 26
5519 35
5520 26
5522 35
5523 19
5524 24
5525 22
5526 21
5527 28
5528 25
5529 21
5530 28
5531 25
5532 19
5533 24
5534 22
5535 20
5536 19
5537 17
5538 26
5540 35
5541 26
5543 35
5544 19
5545 24
5546 22
5547 21
5548 28
5549 25
5550 21
5551 28
5552 25
5553 19
5554 24
5555 22
5556 20
5557 19
5558 17
5559 26
5561 35
5563 35
5564 19
5565 24
5566 28
5567 25
5568 21
5569 28
5570 25
5571 19
5572 24
5573 22
5574 20
5575 19
5576 22
5577 31
5578 27
5579 22
5580 31
5581 27
5582 18
5583 21
5584 20
5585 20
5586 25
5587 23
5588 20
5589 25
5590 23
5591 18
5592 21
5593 20
5594 17
5595 26
5597 35
5598 26
5600 35
5601 19
5602 24
5603 22
5604 21
5605 28
5606 25
5607 21
5608 28
5609 25
5610 19
5611 24
5612 22
5613 20
5614 19
5615 11
5616 14
5617 23
5619 32
5620 23
5622 32
5623 16
5624 21
5625 19
5626 18
5627 25
5628 22
5629 18
5630 25
5631 22
5632 16
5633 21
5634 19
5635 17
5636 16
5637 14
5638 23
5640 32
5641 23
5643 32
5644 16
5645 21
5646 19
5647 18
5648 25
5649 22
5650 18
5651 25
5652 22
5653 16
5654 21
5655 17
5656 16
5657 19
5658 28
5659 24
5660 19
5661 24
5662 15
5663 18
5664 17
5665 17
5666 22
5667 20
5668 17
5669 22
5670 20
5671 15
5672 18
5673 17
5674 14
5675 23
5677 32
5678 23
5680 32
5681 16
5682 21
5683 19
5684 18
5685 25
5686 22
5687 18
5688 25
5689 22
5690 16
5691 21
5692 19
5693 17
5694 16
5695 14
5696 23
5698 32
5699 23
5701 32
5702 16
5703 19
5704 18
5705 25
5706 22
5707 18
5708 25
5709 16
5710 21
5711 19
5712 17
5713 16
5714 14
5715 23
5716 32
5717 23
5719 32
5720 16
5721 21
5722 19
5723 18
5724 25
5725 22
5726 18
5727 25
5728 22
5729 16
5730 21
5731 19
5732 17
5733 16
5734 19
5735 28
5736 24
5737 19
5738 28
5739 24
5740 15
5741 18
5742 17
5743 17
5744 22
5745 20
5746 17
5747 22
5748 20
5749 15
5750 18
5751 17
5752 14
5753 23
5755 32
5756 23
5758 32
5759 16
5760 21
5761 19
5762 18
5763 25
5764 22
5765 18
5766 25
5767 22
5768 16
5769 21
5770 19
5771 17
5772 16
5773 5
5774 8
5775 17
5776 34
5777 26
5778 17
5779 34
5780 10
5781 15
5782 13
5783 12
5784 19
5785 16
5786 12
5787 19
5788 16
5789 10
5790 15
5791 13
5792 11
5793 10
5794 8
5795 17
5796 34
5797 26
5798 17
5799 34
5800 26
5801 15
5802 13
5803 12
5804 19
5805 16
5806 12
5807 19
5808 16
5809 10
5810 15
5811 13
5812 11
5813 10
5814 13
5815 22
5816 18
5817 13
5818 22
5819 18
5820 9
5821 12
5822 11
5823 11
5824 16
5825 14
5826 11
5827 16
5828 14
5829 9
5830 12
5831 11
5832 8
5833 17
5834 34
5835 26
5836 17
5837 34
5838 26
5839 10
5840 15
5841 13
5842 19
5843 16
5844 12
5845 19
5846 16
5847 10
5848 15
5849 13
5850 11
5851 10
5852 8
5853 17
5854 34
5855 26
5856 17
5857 34
5858 26
5859 10
5860 15
5861 13
5862 12
5863 19
5864 16
5865 12
5866 19
5867 16
5868 10
5869 15
5870 13
5871 11
5872 10
5873 8
5874 17
5875 34
5876 26
5877 17
5878 34
5879 26
5880 10
5881 15
5882 13
5883 12
5884 19
5885 16
5886 12
5887 19
5888 16
5889 10
5890 15
5891 13
5892 11
5893 10
5894 13
5895 22
5896 18
5897 22
5898 18
5899 9
5900 12
5901 11
5902 11
5903 16
5904 14
5905 11
5906 16
5907 14
5908 9
5909 12
5910 11
5911 8
5912 17
5913 34
5914 26
5915 17
5916 26
5917 10
5918 15
5919 13
5920 12
5921 19
5922 16
5923 12
5924 19
5925 16
5926 10
5927 15
5928 13
5929 11
5930 10
5931 10
5932 13
5933 22
5934 39
5935 31
5936 22
5937 39
5938 31
5939 15
5940 20
5941 18
5942 17
5943 24
5944 21
5945 17
5946 24
5947 21
5948 15
5949 20
5950 18
5951 16
5952 15
5953 13
5954 22
5955 39
5956 31
5957 22
5958 39
5959 31
5960 15
5961 20
5962 18
5963 17
5964 24
5965 21
5966 17
5967 24
5968 21
5969 20
5970 18
5971 16
5972 15
5973 18
5974 27
5975 23
5976 18
5977 27
5978 23
5979 14
5980 17
5981 16
5982 16
5983 21
5984 16
5985 21
5986 19
5987 14
5988 17
5989 16
5990 13
5991 22
5992 39
5993 22
5994 39
5995 31
5996 15
5997 20
5998 18
5999 17
6000 24
6001 21
6002 17
6003 24
6004 21
6005 15
6006 20
6007 18
6008 16
6009 15
6010 13
6011 22
6012 39
6013 31
6014 22
6015 39
6016 31
6017 15
6018 20
6019 18
6020 17
6021 24
6022 21
6023 17
6024 24
6025 21
6026 15
6027 18
6028 16
6029 15
6030 13
6031 22
6032 39
6033 31
6034 22
6035 39
6036 31
6037 15
6038 20
6039 18
6040 17
6041 21
6042 17
6043 24
6044 21
6045 15
6046 20
6047 18
6048 16
6049 15
6050 18
6051 27
6052 23
6053 18
6054 27
6055 23
6056 14
6057 17
6058 16
6059 16
6060 21
6061 19
6062 16
6063 21
6064 19
6065 14
6066 17
6067 16
6068 13
6069 22
6070 39
6071 31
6072 22
6073 39
6074 31
6075 15
6076 20
6077 18
6078 17
6079 24
6080 21
6081 17
6082 24
6083 21
6084 15
6085 20
6086 18
6087 16
6088 15
6089 8
6090 11
6091 20
6092 37
6093 29
6094 20
6095 37
6096 29
6097 13
6098 18
6099 16
6100 15
6101 22
6102 19
6103 15
6104 22
6105 19
6106 13
6107 18
6108 16
6109 14
6110 13
6111 11
6112 20
6113 37
6114 29
6115 20
6116 37
6117 29
6118 13
6119 18
6120 16
6121 15
6122 22
6123 19
6124 15
6125 19
6126 13
6127 18
6128 16
6129 14
6130 13
6131 16
6132 25
6133 21
6134 16
6135 25
6136 21
6137 12
6138 15
6139 14
6140 14
6141 19
6142 17
6143 14
6144 19
6145 17
6146 12
6147 14
6148 11
6149 20
6150 37
6151 29
6152 20
6153 37
6154 29
6155 13
6156 18
6157 16
6158 15
6159 22
6160 19
6161 15
6162 22
6163 19
6164 13
6165 18
6166 16
6167 14
6168 13
6169 11
6170 20
6171 37
6172 29
6173 20
6174 37
6175 29
6176 13
6177 18
6178 16
6179 15
6180 22
6181 19
6182 15
6183 22
6184 13
6185 18
6186 16
6187 14
6188 13
6189 11
6190 20
6191 37
6192 29
6193 20
6194 37
6195 29
6196 18
6197 16
6198 15
6199 22
6200 19
6201 15
6202 22
6203 19
6204 13
6205 18
6206 16
6207 14
6208 16
6209 25
6210 21
6211 16
6212 25
6213 21
6214 12
6215 15
6216 14
6217 14
6218 19
6219 17
6220 14
6221 19
6222 17
6223 12
6224 15
6225 14
6226 11
6227 20
6228 37
6229 29
6230 20
6231 37
6232 29
6233 13
6234 16
6235 15
6236 22
6237 19
6238 15
6239 22
6240 19
6241 13
6242 18
6243 16
6244 14
6245 13
6246 6
6247 9
6248 18
6249 35
6250 27
6251 18
6252 35
6253 27
6254 11
6255 16
6256 14
6257 13
6258 20
6259 17
6260 13
6261 17
6262 11
6263 16
6264 14
6265 12
6266 11
6267 9
6268 18
6269 35
6270 27
6271 35
6272 11
6273 16
6274 14
6275 13
6276 20
6277 17
6278 13
6279 20
6280 17
6281 11
6282 16
6283 14
6284 12
6285 11
6286 14
6287 19
6288 14
6289 23
6290 19
6291 13
6292 12
6293 12
6294 15
6295 12
6296 17
6297 10
6298 13
6299 12
6300 9
6301 18
6302 35
6303 27
6304 18
6305 35
6306 27
6307 11
6308 16
6309 14
6310 13
6311 20
6312 17
6313 13
6314 20
6315 11
6316 16
6317 14
6318 12
6319 11
6320 9
6321 18
6322 35
6323 27
6324 18
6325 35
6326 27
6327 11
6328 16
6329 14
6330 13
6331 20
6332 13
6333 20
6334 17
6335 11
6336 16
6337 14
6338 12
6339 11
6340 9
6341 18
6342 35
6343 27
6344 18
6345 35
6346 27
6347 11
6348 16
6349 14
6350 13
6351 20
6352 17
6353 13
6354 17
6355 11
6356 16
6357 14
6358 12
6359 11
6360 14
6361 23
6362 19
6363 14
6364 19
6365 10
6366 13
6367 12
6368 12
6369 17
6370 15
6371 12
6372 17
6373 15
6374 10
6375 13
6376 12
6377 9
6378 18
6379 35
6380 27
6381 18
6382 35
6383 27
6384 11
6385 16
6386 14
6387 13
6388 20
6389 17
6390 13
6391 20
6392 17
6393 11
6394 16
6395 14
6396 12
6397 11
6398 5
6399 8
6400 34
6401 26
6402 17
6403 34
6404 26
6405 10
6406 15
6407 13
6408 12
6409 19
6410 16
6411 12
6412 19
6413 16
6414 10
6415 15
6416 13
6417 11
6418 10
6419 8
6420 17
6421 34
6422 26
6423 17
6424 34
6425 26
6426 10
6427 15
6428 13
6429 12
6430 19
6431 16
6432 12
6433 19
6434 16
6435 10
6436 15
6437 13
6438 10
6439 13
6440 22
6441 18
6442 13
6443 22
6444 18
6445 9
6446 12
6447 11
6448 11
6449 16
6450 14
6451 11
6452 16
6453 14
6454 9
6455 12
6456 11
6457 8
6458 17
6459 34
6460 26
6461 17
6462 34
6463 26
6464 10
6465 15
6466 13
6467 12
6468 19
6469 12
6470 19
6471 16
6472 10
6473 15
6474 13
6475 11
6476 10
6477 8
6478 17
6479 34
6480 26
6481 17
6482 34
6483 26
6484 10
6485 15
6486 13
6487 19
6488 16
6489 12
6490 19
6491 16
6492 15
6493 13
6494 11
6495 10
6496 8
6497 17
6498 34
6499 26
6500 17
6501 34
6502 26
6503 10
6504 15
6505 13
6506 12
6507 19
6508 16
6509 12
6510 19
6511 16
6512 10
6513 15
6514 11
6515 10
6516 13
6517 22
6518 18
6519 13
6520 22
6521 18
6522 9
6523 12
6524 11
6525 11
6526 16
6527 14
6528 11
6529 16
6530 14
6531 9
6532 12
6533 11
6534 8
6535 17
6536 34
6537 26
6538 17
6539 34
6540 26
6541 10
6542 15
6543 13
6544 12
6545 19
6546 16
6547 19
6548 16
6549 10
6550 15
6551 13
6552 11
6553 10
6554 8
6555 11
6556 20
6557 37
6558 29
6559 20
6560 37
6561 29
6562 13
6563 18
6564 16
6565 15
6566 22
6567 19
6568 15
6569 22
6570 19
6571 13
6572 18
6573 16
6574 14
6575 13
6576 11
6577 20
6578 37
6579 29
6580 20
6581 37
6582 29
6583 13
6584 18
6585 16
6586 15
6587 22
6588 19
6589 15
6590 22
6591 19
6592 13
6593 18
6594 16
6595 14
6596 13
6597 16
6598 25
6599 21
6600 16
6601 25
6602 21
6603 12
6604 15
6605 14
6606 14
6607 19
6608 17
6609 14
6610 19
6611 12
6612 15
6613 14
6614 11
6615 20
6616 37
6617 29
6618 20
6619 37
6620 29
6621 13
6622 18
6623 16
6624 15
6625 22
6626 19
6627 22
6628 19
6629 13
6630 18
6631 16
6632 14
6633 13
6634 11
6635 20
6636 37
6637 29
6638 20
6639 37
6640 29
6641 13
6642 18
6643 16
6644 15
6645 22
6646 19
6647 15
6648 22
6649 19
6650 13
6651 18
6652 16
6653 14
6654 13
6655 11
6656 20
6657 37
6658 29
6659 20
6660 37
6661 29
6662 13
6663 18
6664 16
6665 15
6666 22
6667 19
6668 15
6669 22
6670 19
6671 18
6672 16
6673 14
6674 13
6675 16
6676 25
6677 21
6678 16
6679 25
6680 21
6681 12
6682 15
6683 14
6684 14
6685 19
6686 14
6687 19
6688 17
6689 12
6690 14
6691 11
6692 20
6693 37
6694 29
6695 20
6696 37
6697 29
6698 13
6699 18
6700 16
6701 15
6702 22
6703 19
6704 15
6705 22
6706 19
6707 13
6708 18
6709 16
6710 14
6711 13
6712 17
6713 20
6714 29
6716 38
6717 29
6719 38
6720 22
6721 27
6722 24
6723 31
6724 28
6725 24
6726 31
6727 28
6728 22
6729 27
6730 25
6731 23
6732 22
6733 20
6735 38
6736 29
6738 38
6739 22
6740 27
6741 25
6742 24
6743 31
6744 28
6745 24
6746 31
6747 28
6748 22
6749 27
6750 25
6751 23
6752 22
6753 25
6754 34
6755 30
6756 25
6757 34
6758 30
6759 21
6760 24
6761 23
6762 23
6763 28
6764 26
6765 23
6766 28
6767 26
6768 21
6769 24
6770 23
6771 20
6772 29
6774 38
6775 22
6776 27
6777 25
6778 24
6779 31
6780 28
6781 24
6782 31
6783 28
6784 22
6785 27
6786 25
6787 23
6788 22
6789 20
6790 29
6792 38
6793 29
6795 38
6796 22
6797 27
6798 25
6799 24
6800 31
6801 28
6802 24
6803 31
6804 28
6805 22
6806 27
6807 25
6808 23
6809 22
6810 20
6811 29
6814 38
6815 22
6816 27
6817 25
6818 24
6819 31
6820 28
6821 24
6822 31
6823 28
6824 22
6825 27
6826 25
6827 23
6828 22
6829 25
6830 34
6831 30
6832 25
6833 34
6834 30
6835 21
6836 24
6837 23
6838 23
6839 28
6840 23
6841 28
6842 26
6843 23
6844 20
6845 29
6847 38
6848 29
6850 38
6851 22
6852 27
6853 25
6854 24
6855 31
6856 28
6857 24
6858 31
6859 28
6860 22
6861 27
6862 25
6863 23
6864 22
6865 13
6866 16
6867 25
6869 34
6870 25
6872 34
6873 18
6874 23
6875 21
6876 20
6877 27
6878 24
6879 20
6880 27
6881 24
6882 18
6883 23
6884 21
6885 19
6886 18
6887 16
6888 25
6890 34
6891 25
6893 34
6894 18
6895 23
6896 21
6897 20
6898 27
6899 24
6900 20
6901 27
6902 24
6903 18
6904 23
6905 21
6906 19
6907 18
6908 21
6909 26
6910 21
6911 30
6912 26
6913 17
6914 19
6915 19
6916 24
6917 22
6918 24
6919 22
6920 17
6921 20
6922 19
6923 16
6924 25
6926 34
6927 25
6929 34
6930 23
6931 21
6932 20
6933 27
6934 24
6935 20
6936 27
6937 24
6938 18
6939 23
6940 21
6941 19
6942 18
6943 16
6944 25
6946 34
6947 25
6949 34
6950 18
6951 23
6952 21
6953 20
6954 27
6955 24
6956 20
6957 27
6958 24
6959 21
6960 18
6961 16
6962 25
6964 34
6965 25
6967 34
6968 18
6969 23
6970 21
6971 20
6972 27
6973 24
6974 20
6975 27
6976 24
6977 18
6978 23
6979 21
6980 19
6981 18
6982 21
6983 30
6984 26
6985 21
6986 30
6987 26
6988 17
6989 20
6990 19
6991 19
6992 24
6993 22
6994 19
6995 24
6996 22
6997 17
6998 20
6999 19
7000 16
7001 25
7002 34
7003 25
7005 34
7006 18
7007 23
7008 21
7009 20
7010 27
7011 24
7012 20
7013 27
7014 24
7015 18
7016 23
7017 21
7018 19
7019 18
7020 11
7021 20
7022 37
7023 29
7024 20
7025 37
7026 29
7027 13
7028 18
7029 16
7030 15
7031 22
7032 19
7033 15
7034 22
7035 19
7036 13
7037 18
7038 16
7039 14
7040 13
7041 11
7042 20
7043 37
7044 29
7045 20
7046 37
7047 29
7048 13
7049 18
7050 16
7051 15
7052 22
7053 19
7054 15
7055 22
7056 19
7057 13
7058 18
7059 16
7060 14
7061 13
7062 16
7063 25
7064 21
7065 16
7066 25
7067 21
7068 12
7069 15
7070 14
7071 14
7072 19
7073 17
7074 14
7075 19
7076 17
7077 15
7078 14
7079 11
7080 20
7081 37
7082 29
7083 20
7084 37
7085 29
7086 13
7087 18
7088 16
7089 15
7090 22
7091 19
7092 15
7093 22
7094 19
7095 13
7096 18
7097 16
7098 14
7099 13
7100 20
7101 29
7102 20
7103 37
7104 29
7105 13
7106 18
7107 16
7108 15
7109 22
7110 19
7111 15
7112 22
7113 19
7114 13
7115 18
7116 16
7117 14
7118 13
7119 20
7120 37
7121 29
7122 20
7123 37
7124 29
7125 13
7126 18
7127 16
7128 15
7129 22
7130 19
7131 15
7132 22
7133 19
7134 13
7135 18
7136 16
7137 14
7138 13
7139 16
7140 25
7141 21
7142 16
7143 25
7144 21
7145 12
7146 15
7147 14
7148 14
7149 19
7150 17
7151 14
7152 19
7153 17
7154 12
7155 15
7156 14
7157 11
7158 20
7159 37
7160 29
7161 20
7162 37
7163 29
7164 13
7165 18
7166 16
7167 15
7168 22
7169 19
7170 15
7171 22
7172 19
7173 13
7174 18
7175 16
7176 14
7177 13
7178 17
7179 20
7180 29
7182 38
7183 29
7185 38
7186 22
7187 27
7188 25
7189 24
7190 31
7191 28
7192 24
7193 31
7194 28
7195 22
7196 27
7197 25
7198 23
7199 22
7200 20
7201 29
7203 38
7204 29
7206 38
7207 22
7208 27
7209 25
7210 24
7211 31
7212 28
7213 31
7214 28
7215 22
7216 27
7217 25
7218 23
7219 22
7220 25
7221 34
7222 30
7223 25
7224 34
7225 30
7226 21
7227 24
7228 23
7229 23
7230 28
7231 26
7232 23
7233 28
7234 26
7235 21
7236 24
7237 23
7238 20
7239 29
7241 38
7242 29
7244 38
7245 22
7246 27
7247 25
7248 24
7249 31
7250 28
7251 24
7252 31
7253 28
7254 22
7255 27
7256 25
7257 23
7258 22
7259 20
7260 29
7262 38
7263 29
7265 38
7266 22
7267 27
7268 25
7269 24
7270 31
7271 28
7272 24
7273 31
7274 28
7275 22
7276 27
7277 25
7278 23
7279 20
7280 29
7282 38
7283 29
7285 38
7286 22
7287 27
7288 25
7289 24
7290 31
7291 24
7292 31
7293 28
7294 22
7295 27
7296 25
7297 23
7298 22
7299 25
7300 34
7301 30
7302 25
7303 34
7304 30
7305 21
7306 24
7307 23
7308 28
7309 26
7310 23
7311 28
7312 26
7313 21
7314 24
7315 23
7316 20
7317 29
7319 38
7320 29
7322 38
7323 22
7324 27
7325 25
7326 24
7327 28
7328 24
7329 31
7330 22
7331 27
7332 25
7333 23
7334 22
7335 13
7336 16
7337 25
7339 34
7340 25
7342 34
7343 18
7344 23
7345 21
7346 20
7347 27
7348 24
7349 20
7350 27
7351 24
7352 18
7353 23
7354 21
7355 19
7356 18
7357 16
7358 25
7360 34
7361 25
7363 34
7364 18
7365 23
7366 21
7367 20
7368 27
7369 24
7370 20
7371 27
7372 24
7373 18
7374 23
7375 21
7376 19
7377 18
7378 21
7379 30
7380 26
7381 30
7382 26
7383 17
7384 20
7385 19
7386 19
7387 24
7388 22
7389 19
7390 24
7391 22
7392 17
7393 20
7394 19
7395 16
7396 25
7398 34
7399 25
7401 34
7402 18
7403 23
7404 21
7405 20
7406 27
7407 24
7408 20
7409 24
7410 18
7411 23
7412 21
7413 19
7414 18
7415 16
7416 25
7418 34
7419 25
7421 34
7422 18
7423 23
7424 21
7425 20
7426 27
7427 24
7428 20
7429 27
7430 24
7431 18
7432 23
7433 21
7434 19
7435 18
7436 16
7437 25
7439 34
7440 25
7442 34
7443 18
7444 23
7445 21
7446 20
7447 27
7448 24
7449 20
7450 27
7451 24
7452 18
7453 23
7454 21
7455 19
7456 18
7457 21
7458 30
7459 26
7460 21
7461 30
7462 26
7463 17
7464 20
7465 19
7466 19
7467 24
7468 22
7469 19
7470 24
7471 22
7472 17
7473 20
7474 19
7475 16
7476 25
7478 34
7479 25
7481 34
7482 18
7483 21
7484 20
7485 27
7486 24
7487 20
7488 27
7489 24
7490 18
7491 23
7492 21
7493 19
7494 4
7495 7
7496 16
7497 33
7498 25
7499 16
7500 33
7501 25
7502 9
7503 14
7504 12
7505 11
7506 18
7507 15
7508 11
7509 18
7510 15
7511 9
7512 14
7513 12
7514 10
7515 9
7516 7
7517 16
7518 33
7519 25
7520 16
7521 33
7522 25
7523 9
7524 14
7525 12
7526 11
7527 18
7528 15
7529 11
7530 18
7531 15
7532 9
7533 14
7534 12
7535 10
7536 9
7537 12
7538 21
7539 17
7540 12
7541 21
7542 8
7543 11
7544 10
7545 10
7546 13
7547 10
7548 15
7549 13
7550 8
7551 11
7552 10
7553 16
7554 33
7555 25
7556 16
7557 33
7558 25
7559 9
7560 14
7561 12
7562 11
7563 18
7564 15
7565 11
7566 18
7567 15
7568 9
7569 14
7570 12
7571 10
7572 9
7573 7
7574 16
7575 33
7576 25
7577 16
7578 33
7579 25
7580 9
7581 14
7582 11
7583 18
7584 15
7585 11
7586 18
7587 15
7588 9
7589 14
7590 12
7591 9
7592 7
7593 16
7594 33
7595 25
7596 16
7597 33
7598 25
7599 9
7600 14
7601 12
7602 11
7603 18
7604 15
7605 11
7606 18
7607 15
7608 9
7609 14
7610 10
7611 9
7612 12
7613 21
7614 17
7615 12
7616 21
7617 17
7618 8
7619 11
7620 10
7621 10
7622 15
7623 10
7624 15
7625 13
7626 8
7627 11
7628 10
7629 7
7630 16
7631 33
7632 25
7633 16
7634 33
7635 25
7636 9
7637 14
7638 12
7639 11
7640 18
7641 15
7642 11
7643 18
7644 15
7645 9
7646 14
7647 12
7648 10
7649 9
7650 7
7651 10
7652 36
7653 28
7654 19
7655 36
7656 28
7657 12
7658 17
7659 15
7660 14
7661 21
7662 18
7663 21
7664 18
7665 12
7666 17
7667 15
7668 13
7669 12
7670 10
7671 19
7672 36
7673 28
7674 19
7675 36
7676 28
7677 12
7678 17
7679 15
7680 14
7681 21
7682 18
7683 14
7684 21
7685 18
7686 12
7687 17
7688 15
7689 13
7690 12
7691 15
7692 24
7693 20
7694 15
7695 24
7696 20
7697 11
7698 13
7699 13
7700 18
7701 16
7702 13
7703 18
7704 16
7705 11
7706 14
7707 13
7708 10
7709 19
7710 36
7711 28
7712 19
7713 36
7714 28
7715 12
7716 17
7717 15
7718 14
7719 21
7720 18
7721 14
7722 21
7723 18
7724 12
7725 17
7726 15
7727 13
7728 12
7729 10
7730 36
7731 28
7732 19
7733 36
7734 28
7735 12
7736 17
7737 15
7738 14
7739 21
7740 18
7741 14
7742 21
7743 18
7744 12
7745 17
7746 13
7747 12
7748 10
7749 19
7750 36
7751 28
7752 19
7753 36
7754 28
7755 12
7756 17
7757 15
7758 14
7759 21
7760 18
7761 14
7762 21
7763 18
7764 12
7765 17
7766 15
7767 13
7768 12
7769 15
7770 24
7771 20
7772 15
7773 24
7774 20
7775 11
7776 14
7777 13
7778 13
7779 18
7780 16
7781 13
7782 18
7783 16
7784 11
7785 14
7786 13
7787 10
7788 19
7789 36
7790 28
7791 19
7792 36
7793 28
7794 12
7795 17
7796 15
7797 14
7798 21
7799 18
7800 14
7801 18
7802 12
7803 17
7804 13
7805 12
7806 6
7807 9
7808 18
7809 35
7810 27
7811 18
7812 35
7813 27
7814 11
7815 16
7816 14
7817 13
7818 20
7819 13
7820 20
7821 17
7822 11
7823 16
7824 14
7825 12
7826 11
7827 9
7828 18
7829 35
7830 27
7831 18
7832 35
7833 27
7834 11
7835 16
7836 14
7837 13
7838 17
7839 13
7840 20
7841 17
7842 11
7843 16
7844 14
7845 12
7846 11
7847 14
7848 23
7849 19
7850 14
7851 23
7852 19
7853 10
7854 13
7855 12
7856 12
7857 17
7858 15
7859 12
7860 17
7861 15
7862 10
7863 13
7864 12
7865 9
7866 18
7867 35
7868 27
7869 18
7870 35
7871 27
7872 11
7873 16
7874 13
7875 20
7876 17
7877 13
7878 20
7879 17
7880 11
7881 16
7882 14
7883 12
7884 11
7885 9
7886 18
7887 35
7888 27
7889 18
7890 35
7891 27
7892 11
7893 16
7894 14
7895 13
7896 20
7897 17
7898 13
7899 20
7900 17
7901 11
7902 16
7903 14
7904 12
7905 11
7906 9
7907 18
7908 35
7909 27
7910 18
7911 35
7912 27
7913 16
7914 14
7915 13
7916 20
7917 17
7918 13
7919 20
7920 17
7921 11
7922 16
7923 14
7924 12
7925 11
7926 14
7927 23
7928 19
7929 14
7930 19
7931 10
7932 13
7933 12
7934 12
7935 17
7936 15
7937 12
7938 17
7939 15
7940 10
7941 13
7942 12
7943 9
7944 18
7945 35
7946 27
7947 18
7948 35
7949 11
7950 16
7951 14
7952 13
7953 20
7954 17
7955 13
7956 20
7957 17
7958 11
7959 16
7960 14
7961 12
7962 11
7963 6
7964 9
7965 18
7966 35
7967 27
7968 18
7969 35
7970 27
7971 11
7972 16
7973 14
7974 13
7975 20
7976 17
7977 13
7978 20
7979 17
7980 11
7981 16
7982 14
7983 12
7984 11
7985 18
7986 35
7987 27
7988 18
7989 35
7990 27
7991 11
7992 16
7993 14
7994 13
7995 20
7996 17
7997 13
7998 20
7999 17
8000 11
8001 16
8002 14
8003 12
8004 11
8005 14
8006 23
8007 19
8008 14
8009 23
8010 19
8011 10
8012 13
8013 12
8014 12
8015 17
8016 15
8017 12
8018 17
8019 15
8020 10
8021 13
8022 12
8023 9
8024 18
8025 35
8026 27
8027 18
8028 35
8029 27
8030 11
8031 16
8032 14
8033 13
8034 20
8035 17
8036 13
8037 20
8038 17
8039 11
8040 16
8041 14
8042 12
8043 11
8044 9
8045 18
8046 35
8047 27
8048 18
8049 35
8050 27
8051 11
8052 16
8053 14
8054 13
8055 20
8056 17
8057 13
8058 20
8059 17
8060 11
8061 16
8062 14
8063 12
8064 11
8065 9
8066 18
8067 35
8068 27
8069 18
8070 35
8071 27
8072 16
8073 14
8074 13
8075 20
8076 17
8077 13
8078 20
8079 17
8080 11
8081 16
8082 14
8083 12
8084 11
8085 14
8086 23
8087 19
8088 14
8089 23
8090 19
8091 10
8092 13
8093 12
8094 12
8095 17
8096 15
8097 12
8098 17
8099 15
8100 10
8101 13
8102 12
8103 9
8104 18
8105 35
8106 27
8107 18
8108 35
8109 27
8110 11
8111 16
8112 14
8113 13
8114 20
8115 17
8116 13
8117 20
8118 17
8119 11
8120 16
8121 14
8122 12
8123 11
8124 11
8125 14
8126 23
8128 32
8129 23
8131 32
8132 16
8133 21
8134 19
8135 18
8136 25
8137 25
8138 22
8139 16
8140 21
8141 19
8142 17
8143 16
8144 14
8145 23
8147 32
8148 23
8150 32
8151 21
8152 19
8153 18
8154 25
8155 22
8156 18
8157 25
8158 22
8159 16
8160 21
8161 19
8162 17
8163 16
8164 19
8165 28
8166 24
8167 19
8168 28
8169 24
8170 15
8171 18
8172 17
8173 17
8174 22
8175 17
8176 22
8177 20
8178 15
8179 18
8180 17
8181 14
8182 23
8184 23
8186 32
8187 16
8188 21
8189 19
8190 18
8191 25
8192 22
8193 18
8194 25
8195 22
8196 21
8197 19
8198 17
8199 16
8200 23
8201 32
8202 23
8204 32
8205 16
8206 21
8207 19
8208 18
8209 25
8210 22
8211 18
8212 25
8213 22
8214 16
8215 21
8216 17
8217 16
8218 14
8219 23
8221 32
8222 23
8224 32
8225 16
8226 21
8227 19
8228 18
8229 25
8230 22
8231 18
8232 25
8233 22
8234 16
8235 21
8236 19
8237 17
8238 16
8239 19
8240 28
8241 24
8242 19
8243 28
8244 24
8245 15
8246 18
8247 17
8248 17
8249 22
8250 20
8251 17
8252 22
8253 20
8254 15
8255 18
8256 17
8257 14
8258 23
8260 32
8261 23
8263 32
8264 16
8265 21
8266 19
8267 18
8268 25
8269 22
8270 18
8271 25
8272 22
8273 16
8274 21
8275 19
8276 17
8277 16
8278 9
8279 12
8280 21
8281 38
8282 30
8283 21
8284 38
8285 30
8286 14
8287 19
8288 17
8289 16
8290 20
8291 16
8292 23
8293 20
8294 14
8295 19
8296 17
8297 15
8298 14
8299 12
8300 21
8301 38
8302 30
8303 21
8304 38
8305 30
8306 14
8307 19
8308 16
8309 23
8310 20
8311 16
8312 23
8313 20
8314 14
8315 19
8316 17
8317 15
8318 14
8319 17
8320 26
8321 22
8322 17
8323 26
8324 22
8325 13
8326 16
8327 15
8328 15
8329 20
8330 18
8331 15
8332 20
8333 18
8334 13
8335 16
8336 15
8337 12
8338 21
8339 38
8340 30
8341 21
8342 38
8343 30
8344 14
8345 19
8346 17
8347 16
8348 23
8349 20
8350 16
8351 23
8352 20
8353 14
8354 19
8355 17
8356 15
8357 14
8358 12
8359 21
8360 38
8361 30
8362 21
8363 38
8364 30
8365 14
8366 19
8367 17
8368 16
8369 23
8370 20
8371 16
8372 23
8373 14
8374 19
8375 17
8376 15
8377 14
8378 12
8379 21
8380 38
8381 30
8382 38
8383 30
8384 14
8385 19
8386 17
8387 16
8388 23
8389 20
8390 16
8391 23
8392 20
8393 14
8394 19
8395 17
8396 15
8397 14
8398 26
8399 22
8400 17
8401 26
8402 22
8403 13
8404 16
8405 15
8406 15
8407 20
8408 18
8409 15
8410 20
8411 18
8412 13
8413 16
8414 15
8415 12
8416 21
8417 38
8418 30
8419 21
8420 38
8421 30
8422 14
8423 19
8424 17
8425 16
8426 23
8427 20
8428 16
8429 23
8430 20
8431 14
8432 19
8433 17
8434 15
8435 14
8436 6
8437 9
8438 18
8439 35
8440 27
8441 18
8442 35
8443 27
8444 11
8445 16
8446 14
8447 13
8448 20
8449 17
8450 13
8451 20
8452 17
8453 11
8454 16
8455 14
8456 12
8457 11
8458 9
8459 18
8460 35
8461 27
8462 18
8463 35
8464 27
8465 11
8466 16
8467 14
8468 13
8469 20
8470 17
8471 13
8472 20
8473 17
8474 11
8475 16
8476 14
8477 12
8478 11
8479 14
8480 23
8481 19
8482 14
8483 23
8484 19
8485 10
8486 13
8487 12
8488 17
8489 15
8490 12
8491 17
8492 15
8493 10
8494 13
8495 12
8496 9
8497 18
8498 35
8499 27
8500 18
8501 27
8502 11
8503 16
8504 14
8505 13
8506 20
8507 17
8508 13
8509 20
8510 17
8511 11
8512 16
8513 14
8514 12
8515 11
8516 9
8517 18
8518 35
8519 27
8520 18
8521 35
8522 27
8523 11
8524 16
8525 14
8526 13
8527 20
8528 17
8529 13
8530 20
8531 17
8532 11
8533 14
8534 12
8535 11
8536 9
8537 18
8538 35
8539 27
8540 18
8541 35
8542 27
8543 16
8544 14
8545 13
8546 17
8547 13
8548 20
8549 17
8550 11
8551 16
8552 14
8553 12
8554 11
8555 14
8556 23
8557 19
8558 14
8559 23
8560 19
8561 10
8562 13
8563 12
8564 12
8565 17
8566 15
8567 17
8568 15
8569 10
8570 13
8571 12
8572 9
8573 18
8574 35
8575 27
8576 18
8577 35
8578 27
8579 11
8580 16
8581 14
8582 13
8583 20
8584 17
8585 13
8586 20
8587 17
8588 11
8589 16
8590 14
8591 12
8592 11
8593 11
8594 14
8595 23
8597 32
8598 23
8599 16
8600 21
8601 19
8602 18
8603 25
8604 22
8605 18
8606 25
8607 22
8608 16
8609 21
8610 19
8611 17
8612 16
8613 14
8614 23
8616 32
8617 23
8619 32
8620 16
8621 21
8622 19
8623 18
8624 25
8625 22
8626 18
8627 25
8628 22
8629 16
8630 21
8631 19
8632 17
8633 16
8634 19
8635 28
8636 24
8637 19
8638 28
8639 24
8640 15
8641 18
8642 17
8643 17
8644 20
8645 17
8646 20
8647 15
8648 18
8649 17
8650 14
8651 23
8653 32
8654 23
8656 32
8657 16
8658 21
8659 19
8660 18
8661 25
8662 22
8663 18
8664 25
8665 22
8666 16
8667 21
8668 17
8669 16
8670 14
8671 23
8673 32
8674 23
8676 32
8677 16
8678 21
8679 19
8680 18
8681 25
8682 22
8683 18
8684 25
8685 22
8686 21
8687 19
8688 17
8689 16
8690 14
8691 23
8693 32
8694 23
8696 32
8697 16
8698 21
8699 19
8700 18
8701 25
8702 22
8703 18
8704 25
8705 22
8706 16
8707 21
8708 19
8709 17
8710 16
8711 19
8712 28
8713 24
8714 19
8715 28
8716 24
8717 15
8718 18
8719 17
8720 17
8721 22
8722 20
8723 17
8724 22
8725 20
8726 15
8727 18
8728 17
8729 14
8730 23
8732 32
8733 23
8735 32
8736 16
8737 19
8738 18
8739 25
8740 22
8741 18
8742 25
8743 22
8744 16
8745 21
8746 19
8747 17
8748 16
8749 9
8750 12
8751 21
8752 38
8753 30
8754 21
8755 38
8756 30
8757 14
8758 17
8759 16
8760 23
8761 20
8762 16
8763 23
8764 20
8765 14
8766 19
8767 17
8768 15
8769 14
8770 12
8771 21
8772 38
8773 21
8774 38
8775 30
8776 14
8777 19
8778 17
8779 16
8780 23
8781 20
8782 16
8783 23
8784 20
8785 14
8786 19
8787 17
8788 15
8789 14
8790 17
8791 26
8792 22
8793 17
8794 26
8795 22
8796 13
8797 16
8798 15
8799 15
8800 20
8801 18
8802 15
8803 20
8804 18
8805 13
8806 16
8807 15
8808 12
8809 21
8810 38
8811 30
8812 21
8813 38
8814 30
8815 14
8816 19
8817 17
8818 16
8819 23
8820 20
8821 16
8822 23
8823 20
8824 14
8825 19
8826 17
8827 15
8828 14
8829 12
8830 38
8831 30
8832 21
8833 38
8834 30
8835 14
8836 19
8837 17
8838 16
8839 23
8840 20
8841 16
8842 23
8843 20
8844 14
8845 19
8846 17
8847 14
8848 12
8849 21
8850 21
8851 38
8852 30
8853 14
8854 19
8855 17
8856 16
8857 23
8858 20
8859 16
8860 20
8861 14
8862 19
8863 17
8864 15
8865 14
8866 17
8867 26
8868 22
8869 17
8870 26
8871 22
8872 13
8873 16
8874 15
8875 15
8876 20
8877 18
8878 15
8879 20
8880 18
8881 13
8882 16
8883 15
8884 12
8885 21
8886 38
8887 30
8888 21
8889 38
8890 30
8891 14
8892 19
8893 17
8894 16
8895 23
8896 20
8897 16
8898 23
8899 20
8900 14
8901 19
8902 17
8903 15
8904 14
8905 4
8906 7
8907 16
8908 33
8909 25
8910 16
8911 33
8912 25
8913 9
8914 14
8915 12
8916 11
8917 18
8918 15
8919 11
8920 18
8921 15
8922 9
8923 14
8924 12
8925 10
8926 9
8927 7
8928 16
8929 33
8930 25
8931 16
8932 33
8933 25
8934 9
8935 14
8936 11
8937 18
8938 15
8939 11
8940 18
8941 15
8942 9
8943 14
8944 12
8945 10
8946 9
8947 21
8948 17
8949 12
8950 21
8951 17
8952 8
8953 11
8954 10
8955 10
8956 15
8957 13
8958 10
8959 13
8960 8
8961 11
8962 10
8963 7
8964 16
8965 33
8966 25
8967 33
8968 25
8969 9
8970 14
8971 12
8972 11
8973 18
8974 15
8975 11
8976 18
8977 15
8978 9
8979 14
8980 12
8981 10
8982 9
8983 7
8984 16
8985 33
8986 16
8987 33
8988 25
8989 9
8990 14
8991 11
8992 18
8993 15
8994 11
8995 18
8996 9
8997 14
8998 12
8999 10
9000 9
9001 7
9002 16
9003 33
9004 25
9005 16
9006 33
9007 25
9008 9
9009 14
9010 12
9011 11
9012 18
9013 15
9014 11
9015 18
9016 15
9017 9
9018 14
9019 12
9020 10
9021 9
9022 12
9023 21
9024 17
9025 12
9026 21
9027 17
9028 8
9029 10
9030 10
9031 15
9032 13
9033 10
9034 15
9035 13
9036 8
9037 11
9038 10
9039 7
9040 33
9041 25
9042 16
9043 33
9044 25
9045 9
9046 14
9047 12
9048 11
9049 18
9050 15
9051 11
9052 18
9053 15
9054 9
9055 14
9056 12
9057 10
9058 7
9059 10
9060 19
9061 36
9062 28
9063 19
9064 36
9065 28
9066 12
9067 17
9068 15
9069 14
9070 21
9071 18
9072 14
9073 21
9074 18
9075 12
9076 17
9077 15
9078 13
9079 12
9080 10
9081 19
9082 36
9083 28
9084 19
9085 36
9086 28
9087 12
9088 17
9089 15
9090 14
9091 21
9092 18
9093 14
9094 21
9095 18
9096 12
9097 17
9098 15
9099 13
9100 12
9101 15
9102 24
9103 20
9104 15
9105 24
9106 20
9107 11
9108 14
9109 13
9110 13
9111 18
9112 16
9113 13
9114 18
9115 16
9116 11
9117 14
9118 13
9119 10
9120 19
9121 36
9122 28
9123 19
9124 36
9125 28
9126 12
9127 17
9128 15
9129 14
9130 21
9131 18
9132 14
9133 21
9134 18
9135 12
9136 17
9137 15
9138 13
9139 12
9140 10
9141 19
9142 36
9143 28
9144 19
9145 36
9146 28
9147 12
9148 17
9149 15
9150 14
9151 21
9152 18
9153 14
9154 21
9155 18
9156 12
9157 17
9158 15
9159 13
9160 10
9161 19
9162 36
9163 28
9164 19
9165 36
9166 28
9167 12
9168 17
9169 15
9170 14
9171 18
9172 14
9173 18
9174 12
9175 17
9176 15
9177 13
9178 12
9179 15
9180 24
9181 20
9182 24
9183 20
9184 11
9185 14
9186 13
9187 13
9188 18
9189 16
9190 18
9191 16
9192 11
9193 14
9194 13
9195 19
9196 36
9197 28
9198 19
9199 36
9200 28
9201 12
9202 17
9203 15
9204 14
9205 21
9206 14
9207 21
9208 18
9209 12
9210 17
9211 15
9212 13
9213 12
9214 6
9215 9
9216 18
9217 35
9218 27
9219 18
9220 35
9221 27
9222 11
9223 16
9224 14
9225 13
9226 20
9227 17
9228 13
9229 20
9230 17
9231 16
9232 14
9233 12
9234 11
9235 9
9236 18
9237 35
9238 27
9239 18
9240 27
9241 11
9242 16
9243 14
9244 13
9245 20
9246 17
9247 13
9248 20
9249 17
9250 16
9251 14
9252 12
9253 11
9254 14
9255 23
9256 19
9257 14
9258 23
9259 19
9260 10
9261 13
9262 12
9263 12
9264 17
9265 15
9266 12
9267 17
9268 15
9269 10
9270 13
9271 12
9272 35
9273 27
9274 18
9275 35
9276 27
9277 11
9278 16
9279 14
9280 13
9281 20
9282 17
9283 13
9284 20
9285 17
9286 11
9287 16
9288 14
9289 12
9290 11
9291 9
9292 18
9293 35
9294 27
9295 18
9296 27
9297 11
9298 16
9299 14
9300 13
9301 20
9302 17
9303 13
9304 20
9305 17
9306 11
9307 16
9308 14
9309 12
9310 11
9311 9
9312 18
9313 35
9314 27
9315 18
9316 35
9317 27
9318 11
9319 16
9320 14
9321 13
9322 20
9323 17
9324 13
9325 20
9326 17
9327 11
9328 16
9329 14
9330 12
9331 11
9332 23
9333 19
9334 14
9335 23
9336 19
9337 10
9338 13
9339 12
9340 12
9341 17
9342 15
9343 12
9344 17
9345 15
9346 10
9347 13
9348 12
9349 9
9350 18
9351 35
9352 27
9353 18
9354 27
9355 11
9356 16
9357 14
9358 13
9359 20
9360 17
9361 13
9362 20
9363 17
9364 11
9365 16
9366 14
9367 12
9368 11
9369 3
9370 6
9371 15
9372 32
9373 24
9374 15
9375 32
9376 24
9377 13
9378 11
9379 10
9380 17
9381 14
9382 10
9383 17
9384 14
9385 8
9386 13
9387 11
9388 9
9389 8
9390 15
9391 32
9392 24
9393 15
9394 32
9395 24
9396 8
9397 13
9398 11
9399 17
9400 14
9401 10
9402 17
9403 14
9404 8
9405 13
9406 11
9407 9
9408 8
9409 11
9410 20
9411 16
9412 11
9413 20
9414 16
9415 7
9416 10
9417 9
9418 14
9419 12
9420 9
9421 14
9422 12
9423 7
9424 10
9425 9
9426 6
9427 15
9428 32
9429 24
9430 15
9431 32
9432 24
9433 8
9434 13
9435 11
9436 10
9437 17
9438 14
9439 10
9440 17
9441 14
9442 8
9443 13
9444 11
9445 9
9446 8
9447 6
9448 15
9449 32
9450 24
9451 15
9452 32
9453 24
9454 8
9455 13
9456 11
9457 10
9458 17
9459 14
9460 10
9461 17
9462 14
9463 8
9464 13
9465 11
9466 9
9467 8
9468 6
9469 15
9470 32
9471 24
9472 15
9473 32
9474 24
9475 8
9476 13
9477 11
9478 10
9479 17
9480 14
9481 10
9482 17
9483 14
9484 8
9485 13
9486 11
9487 9
9488 8
9489 11
9490 20
9491 16
9492 11
9493 20
9494 16
9495 7
9496 10
9497 9
9498 9
9499 14
9500 12
9501 9
9502 14
9503 12
9504 7
9505 10
9506 9
9507 6
9508 15
9509 32
9510 24
9511 15
9512 32
9513 24
9514 8
9515 13
9516 11
9517 10
9518 17
9519 14
9520 10
9521 17
9522 14
9523 8
9524 13
9525 11
9526 9
9527 8
9528 12
9529 15
9530 24
9532 33
9533 24
9535 33
9536 17
9537 22
9538 20
9539 19
9540 23
9541 19
9542 26
9543 23
9544 17
9545 22
9546 20
9547 18
9548 17
9549 15
9550 24
9552 33
9553 24
9555 33
9556 17
9557 22
9558 20
9559 19
9560 26
9561 23
9562 19
9563 26
9564 23
9565 17
9566 22
9567 20
9568 18
9569 17
9570 20
9571 29
9572 25
9573 20
9574 29
9575 25
9576 16
9577 19
9578 18
9579 18
9580 23
9581 21
9582 18
9583 23
9584 21
9585 16
9586 19
9587 18
9588 15
9590 33
9591 24
9592 33
9593 17
9594 22
9595 20
9596 19
9597 26
9598 23
9599 19
9600 23
9601 17
9602 22
9603 20
9604 18
9605 15
9606 24
9608 33
9609 24
9611 33
9612 17
9613 20
9614 19
9615 26
9616 19
9617 26
9618 23
9619 17
9620 22
9621 20
9622 17
9623 15
9624 24
9626 33
9627 24
9629 33
9630 17
9631 20
9632 19
9633 26
9634 23
9635 19
9636 26
9637 23
9638 17
9639 22
9640 18
9641 17
9642 20
9643 29
9644 25
9645 20
9646 29
9647 25
9648 16
9649 19
9650 18
9651 18
9652 23
9653 21
9654 18
9655 23
9656 21
9657 16
9658 19
9659 15
9660 24
9662 33
9663 24
9665 33
9666 17
9667 22
9668 20
9669 19
9670 26
9671 23
9672 19
9673 26
9674 23
9675 17
9676 20
9677 18
9678 17
9679 29
9680 32
9687 34
9688 39
9689 37
9690 36
9693 36
9696 39
9697 37
9698 35
9699 34
9700 32
9707 34
9708 39
9709 37
9710 36
9713 36
9716 34
9717 39
9718 37
9719 35
9720 34
9721 37
9724 37
9727 33
9728 36
9729 35
9730 35
9732 38
9733 35
9735 38
9736 33
9737 36
9738 35
9739 32
9746 34
9747 39
9748 37
9749 36
9752 36
9755 39
9756 37
9757 35
9758 34
9759 32
9765 34
9766 39
9767 37
9768 36
9771 36
9774 34
9775 39
9776 37
9777 35
9778 34
9779 32
9786 34
9787 39
9788 37
9789 36
9792 36
9795 34
9796 39
9797 37
9798 34
9799 37
9801 37
9804 33
9805 36
9806 35
9807 35
9809 38
9810 35
9812 38
9813 33
9814 36
9815 35
9816 32
9822 34
9823 39
9824 37
9825 36
9828 36
9831 34
9832 39
9833 37
9834 35
9835 34
9836 21
9837 24
9838 33
9841 33
9844 26
9845 31
9846 29
9847 28
9848 35
9849 32
9850 28
9851 35
9852 32
9853 26
9854 31
9855 29
9856 27
9857 26
9858 24
9859 33
9862 33
9865 26
9866 31
9867 29
9868 28
9869 35
9870 32
9871 28
9872 32
9873 26
9874 31
9875 29
9876 27
9877 26
9878 29
9879 38
9880 34
9881 29
9882 38
9883 25
9884 28
9885 27
9886 27
9887 32
9888 30
9889 27
9890 32
9891 30
9892 25
9893 28
9894 27
9895 24
9896 33
9899 33
9902 26
9903 31
9904 29
9905 28
9906 35
9907 32
9908 28
9909 35
9910 32
9911 26
9912 31
9913 29
9914 27
9915 26
9916 24
9917 33
9919 33
9922 26
9923 31
9924 29
9925 28
9926 35
9927 32
9928 28
9929 35
9930 32
9931 29
9932 24
9933 33
9935 33
9937 26
9938 31
9939 29
9940 28
9941 35
9942 32
9943 28
9944 35
9945 32
9946 26
9947 31
9948 29
9949 27
9950 26
9951 29
9952 38
9953 34
9954 29
9955 38
9956 34
9957 25
9958 28
9959 27
9960 27
9961 32
9962 30
9963 27
9964 32
9965 30
9966 25
9967 28
9968 27
9969 24
9970 33
9973 33
9976 26
9977 31
9978 29
9979 28
9980 32
9981 28
9982 35
9983 32
9984 26
9985 31
9986 29
9987 27
9988 26
9989 12
9990 15
9991 24
9993 33
9994 24
9996 33
9997 17
9998 22
9999 20
10000 19
10001 26
10002 23
10003 19
10004 26
10005 23
10006 17
10007 22
10008 20
10009 18
10010 17
10011 15
10012 24
10014 33
10015 24
10017 33
10018 17
10019 22
10020 20
10021 19
10022 26
10023 19
10024 26
10025 23
10026 17
10027 22
10028 20
10029 18
10030 17
10031 20
10032 29
10033 25
10034 20
10035 29
10036 25
10037 16
10038 19
10039 18
10040 18
10041 23
10042 21
10043 18
10044 23
10045 21
10046 16
10047 19
10048 18
10049 15
10051 33
10052 24
10054 33
10055 17
10056 22
10057 20
10058 19
10059 26
10060 23
10061 26
10062 23
10063 17
10064 22
10065 20
10066 18
10067 17
10068 15
10069 24
10071 33
10072 24
10074 33
10075 17
10076 22
10077 20
10078 19
10079 26
10080 19
10081 26
10082 23
10083 17
10084 22
10085 20
10086 18
10087 17
10088 15
10089 24
10091 33
10092 24
10094 33
10095 17
10096 22
10097 20
10098 19
10099 26
10100 23
10101 19
10102 26
10103 23
10104 20
10105 18
10106 17
10107 20
10108 29
10109 25
10110 20
10111 29
10112 25
10113 16
10114 19
10115 18
10116 18
10117 23
10118 21
10119 16
10120 19
10121 18
10122 15
10123 24
10125 33
10126 24
10128 33
10129 17
10130 22
10131 20
10132 19
10133 26
10134 23
10135 19
10136 26
10137 23
10138 17
10139 22
10140 20
10141 18
10142 17
10143 29
10144 32
10151 34
10152 39
10153 37
10154 36
10157 36
10159 34
10160 39
10161 37
10162 35
10163 34
10164 32
10171 34
10172 39
10173 37
10174 36
10177 36
10180 34
10181 39
10182 37
10183 35
10184 34
10189 33
10190 36
10191 35
10192 35
10194 38
10195 35
10197 38
10198 33
10199 36
10200 35
10201 32
10208 34
10209 39
10210 37
10211 36
10214 36
10217 34
10218 39
10219 37
10220 35
10221 34
10227 34
10228 39
10229 37
10232 36
10235 34
10236 39
10237 37
10238 35
10239 34
10240 32
10247 34
10248 39
10249 37
10250 36
10253 36
10255 34
10256 39
10257 37
10258 35
10259 34
10260 37
10263 37
10266 33
10267 36
10268 35
10269 35
10271 38
10272 35
10274 38
10275 33
10276 36
10277 35
10278 32
10283 34
10284 39
10285 37
10286 36
10289 36
10292 39
10293 37
10294 35
10295 34
10296 21
10297 24
10298 33
10301 33
10304 26
10305 31
10306 29
10307 28
10308 35
10309 32
10310 28
10311 35
10312 32
10313 26
10314 31
10315 29
10316 27
10317 26
10318 24
10319 33
10322 33
10325 26
10326 31
10327 29
10328 28
10329 35
10330 32
10331 28
10332 35
10333 32
10334 26
10335 31
10336 29
10337 27
10338 26
10339 29
10340 38
10341 34
10342 29
10343 38
10344 34
10345 25
10346 27
10347 27
10348 32
10349 30
10350 32
10351 30
10352 25
10353 28
10354 27
10355 24
10356 33
10359 33
10362 26
10363 31
10364 29
10365 28
10366 35
10367 32
10368 28
10369 35
10370 32
10371 26
10372 31
10373 29
10374 27
10375 26
10376 24
10377 33
10380 33
10383 26
10384 31
10385 29
10386 28
10387 35
10388 32
10389 28
10390 35
10391 32
10392 26
10393 31
10394 29
10395 27
10396 26
10397 24
10398 33
10401 33
10404 26
10405 31
10406 29
10407 28
10408 35
10409 32
10410 28
10411 35
10412 32
10413 26
10414 31
10415 29
10416 27
10417 26
10418 29
10419 38
10420 34
10421 29
10422 38
10423 34
10424 25
10425 28
10426 27
10427 27
10428 32
10429 30
10430 27
10431 32
10432 30
10433 25
10434 28
10435 27
10436 24
10437 33
10440 33
10443 26
10444 31
10445 29
10446 28
10447 35
10448 32
10449 28
10450 35
10451 32
10452 26
10453 31
10454 29
10455 27
10456 5
10457 8
10458 17
10459 34
10460 26
10461 17
10462 34
10463 10
10464 15
10465 13
10466 12
10467 19
10468 16
10469 12
10470 19
10471 16
10472 10
10473 15
10474 13
10475 11
10476 10
10477 8
10478 17
10479 34
10480 26
10481 17
10482 34
10483 26
10484 10
10485 15
10486 13
10487 12
10488 19
10489 16
10490 12
10491 19
10492 16
10493 10
10494 15
10495 13
10496 11
10497 10
10498 13
10499 22
10500 18
10501 13
10502 22
10503 18
10504 9
10505 12
10506 11
10507 11
10508 16
10509 14
10510 11
10511 16
10512 14
10513 9
10514 12
10515 11
10516 8
10517 17
10518 34
10519 26
10520 17
10521 34
10522 26
10523 10
10524 15
10525 13
10526 19
10527 16
10528 12
10529 19
10530 16
10531 15
10532 13
10533 10
10534 8
10535 17
10536 34
10537 26
10538 17
10539 34
10540 26
10541 10
10542 15
10543 13
10544 12
10545 19
10546 16
10547 12
10548 19
10549 16
10550 10
10551 15
10552 13
10553 11
10554 10
10555 8
10556 17
10557 34
10558 26
10559 17
10560 34
10561 26
10562 10
10563 15
10564 13
10565 12
10566 16
10567 12
10568 19
10569 16
10570 10
10571 15
10572 13
10573 11
10574 10
10575 13
10576 22
10577 18
10578 13
10579 22
10580 18
10581 9
10582 12
10583 11
10584 11
10585 16
10586 14
10587 11
10588 16
10589 14
10590 9
10591 12
10592 11
10593 8
10594 17
10595 34
10596 26
10597 34
10598 26
10599 10
10600 15
10601 13
10602 12
10603 19
10604 12
10605 19
10606 16
10607 10
10608 15
10609 13
10610 11
10611 10
10612 10
10613 13
10614 22
10615 31
10616 22
10617 39
10618 31
10619 15
10620 18
10621 17
10622 24
10623 21
10624 17
10625 24
10626 21
10627 15
10628 20
10629 18
10630 16
10631 15
10632 13
10633 22
10634 39
10635 31
10636 22
10637 39
10638 31
10639 15
10640 20
10641 18
10642 17
10643 24
10644 21
10645 17
10646 24
10647 21
10648 15
10649 20
10650 18
10651 16
10652 15
10653 18
10654 27
10655 18
10656 27
10657 23
10658 14
10659 17
10660 16
10661 16
10662 21
10663 19
10664 16
10665 21
10666 19
10667 14
10668 17
10669 16
10670 13
10671 22
10672 39
10673 31
10674 22
10675 39
10676 31
10677 15
10678 20
10679 18
10680 17
10681 24
10682 21
10683 24
10684 21
10685 15
10686 20
10687 18
10688 16
10689 15
10690 13
10691 22
10692 39
10693 31
10694 22
10695 39
10696 31
10697 20
10698 18
10699 17
10700 24
10701 21
10702 17
10703 24
10704 21
10705 15
10706 20
10707 18
10708 16
10709 15
10710 13
10711 22
10712 39
10713 31
10714 22
10715 39
10716 31
10717 15
10718 20
10719 18
10720 17
10721 24
10722 21
10723 17
10724 24
10725 21
10726 15
10727 20
10728 16
10729 15
10730 18
10731 23
10732 18
10733 27
10734 23
10735 14
10736 17
10737 16
10738 16
10739 21
10740 19
10741 16
10742 21
10743 19
10744 14
10745 17
10746 16
10747 13
10748 22
10749 39
10750 31
10751 22
10752 39
10753 31
10754 15
10755 20
10756 18
10757 24
10758 21
10759 17
10760 24
10761 21
10762 15
10763 20
10764 18
10765 16
10766 15
10767 8
10768 11
10769 20
10770 37
10771 29
10772 20
10773 37
10774 29
10775 13
10776 16
10777 15
10778 22
10779 19
10780 15
10781 19
10782 13
10783 18
10784 16
10785 14
10786 13
10787 11
10788 20
10789 37
10790 29
10791 20
10792 37
10793 29
10794 13
10795 16
10796 15
10797 22
10798 19
10799 15
10800 22
10801 19
10802 13
10803 16
10804 14
10805 13
10806 16
10807 25
10808 21
10809 16
10810 25
10811 21
10812 12
10813 15
10814 14
10815 14
10816 19
10817 17
10818 14
10819 19
10820 12
10821 15
10822 14
10823 11
10824 20
10825 29
10826 20
10827 37
10828 29
10829 13
10830 16
10831 22
10832 19
10833 15
10834 22
10835 19
10836 13
10837 16
10838 14
10839 13
10840 11
10841 20
10842 37
10843 29
10844 20
10845 37
10846 29
10847 13
10848 15
10849 22
10850 19
10851 15
10852 22
10853 19
10854 13
10855 18
10856 16
10857 14
10858 13
10859 11
10860 20
10861 37
10862 29
10863 20
10864 37
10865 13
10866 18
10867 16
10868 15
10869 22
10870 19
10871 15
10872 22
10873 19
10874 13
10875 18
10876 16
10877 14
10878 13
10879 16
10880 25
10881 21
10882 16
10883 25
10884 21
10885 12
10886 15
10887 14
10888 14
10889 19
10890 17
10891 14
10892 19
10893 17
10894 12
10895 15
10896 14
10897 11
10898 37
10899 29
10900 20
10901 37
10902 29
10903 13
10904 18
10905 16
10906 15
10907 22
10908 19
10909 15
10910 22
10911 19
10912 13
10913 18
10914 16
10915 14
10916 13
10917 7
10918 10
10919 19
10920 36
10921 28
10922 36
10923 28
10924 12
10925 17
10926 15
10927 14
10928 18
10929 14
10930 21
10931 18
10932 12
10933 17
10934 15
10935 13
10936 12
10937 10
10938 19
10939 36
10940 28
10941 19
10942 36
10943 28
10944 12
10945 17
10946 15
10947 14
10948 21
10949 18
10950 14
10951 18
10952 12
10953 17
10954 15
10955 13
10956 12
10957 15
10958 24
10959 20
10960 15
10961 24
10962 20
10963 11
10964 14
10965 13
10966 18
10967 16
10968 13
10969 18
10970 16
10971 11
10972 14
10973 13
10974 10
10975 19
10976 36
10977 28
10978 19
10979 36
10980 28
10981 12
10982 17
10983 15
10984 14
10985 21
10986 18
10987 14
10988 21
10989 18
10990 12
10991 17
10992 15
10993 13
10994 12
10995 10
10996 19
10997 36
10998 28
10999 19
11000 36
11001 28
11002 12
11003 17
11004 15
11005 14
11006 21
11007 18
11008 14
11009 21
11010 18
11011 12
11012 17
11013 13
11014 10
11015 19
11016 36
11017 28
11018 19
11019 36
11020 28
11021 12
11022 17
11023 15
11024 14
11025 21
11026 18
11027 14
11028 21
11029 18
11030 12
11031 17
11032 15
11033 13
11034 12
11035 15
11036 24
11037 20
11038 15
11039 24
11040 20
11041 11
11042 14
11043 13
11044 13
11045 18
11046 16
11047 13
11048 18
11049 16
11050 11
11051 14
11052 13
11053 10
11054 36
11055 28
11056 19
11057 36
11058 28
11059 12
11060 17
11061 14
11062 21
11063 18
11064 14
11065 21
11066 18
11067 12
11068 17
11069 15
11070 13
11071 12
11072 14
11073 17
11074 26
11076 35
11077 26
11079 35
11080 19
11081 24
11082 22
11083 21
11084 28
11085 25
11086 21
11087 28
11088 25
11089 19
11090 24
11091 22
11092 20
11093 19
11094 17
11095 26
11097 35
11098 26
11100 35
11101 19
11102 24
11103 22
11104 21
11105 25
11106 21
11107 28
11108 25
11109 19
11110 24
11111 22
11112 20
11113 19
11114 22
11115 31
11116 27
11117 22
11118 31
11119 27
11120 18
11121 21
11122 20
11123 20
11124 25
11125 23
11126 20
11127 25
11128 23
11129 18
11130 21
11131 20
11132 17
11133 26
11134 35
11135 26
11136 35
11137 19
11138 24
11139 22
11140 21
11141 28
11142 25
11143 21
11144 28
11145 25
11146 19
11147 24
11148 22
11149 20
11150 19
11151 17
11152 26
11154 35
11155 26
11157 35
11158 19
11159 24
11160 22
11161 28
11162 25
11163 21
11164 28
11165 25
11166 19
11167 24
11168 22
11169 20
11170 19
11171 17
11172 26
11174 35
11175 26
11177 35
11178 19
11179 24
11180 22
11181 21
11182 28
11183 25
11184 21
11185 28
11186 25
11187 19
11188 24
11189 20
11190 19
11191 22
11192 31
11193 27
11194 22
11195 31
11196 27
11197 18
11198 21
11199 20
11200 20
11201 25
11202 23
11203 20
11204 25
11205 23
11206 18
11207 21
11208 20
11209 17
11210 26
11212 35
11213 26
11215 35
11216 19
11217 22
11218 21
11219 28
11220 25
11221 21
11222 28
11223 25
11224 19
11225 24
11226 22
11227 20
11228 19
11229 11
11230 14
11231 23
11233 32
11234 23
11236 32
11237 16
11238 21
11239 19
11240 18
11241 25
11242 18
11243 25
11244 22
11245 16
11246 21
11247 19
11248 17
11249 16
11250 14
11251 23
11253 32
11254 23
11256 32
11257 16
11258 21
11259 19
11260 18
11261 25
11262 22
11263 18
11264 25
11265 22
11266 16
11267 19
11268 17
11269 16
11270 19
11271 28
11272 24
11273 19
11274 28
11275 24
11276 15
11277 18
11278 17
11279 17
11280 22
11281 20
11282 17
11283 22
11284 15
11285 18
11286 17
11287 14
11288 23
11290 32
11291 23
11293 32
11294 16
11295 21
11296 19
11297 18
11298 25
11299 22
11300 18
11301 25
11302 22
11303 16
11304 21
11305 19
11306 17
11307 16
11308 14
11309 23
11310 32
11311 23
11313 32
11314 16
11315 21
11316 19
11317 18
11318 25
11319 22
11320 18
11321 25
11322 22
11323 16
11324 21
11325 19
11326 17
11327 16
11328 14
11329 23
11331 32
11332 23
11334 32
11335 16
11336 21
11337 19
11338 18
11339 25
11340 22
11341 18
11342 25
11343 22
11344 16
11345 21
11346 19
11347 17
11348 16
11349 19
11350 28
11351 24
11352 19
11353 28
11354 24
11355 15
11356 18
11357 17
11358 22
11359 20
11360 22
11361 20
11362 15
11363 18
11364 17
11365 14
11366 23
11368 32
11369 23
11371 32
11372 16
11373 19
11374 18
11375 25
11376 22
11377 18
11378 22
11379 16
11380 21
11381 19
11382 17
11383 16
11384 7
11385 10
11386 19
11387 36
11388 28
11389 19
11390 28
11391 12
11392 17
11393 15
11394 14
11395 21
11396 18
11397 14
11398 21
11399 12
11400 17
11401 15
11402 13
11403 12
11404 10
11405 19
11406 36
11407 28
11408 19
11409 36
11410 28
11411 12
11412 17
11413 15
11414 14
11415 21
11416 18
11417 14
11418 18
11419 12
11420 17
11421 15
11422 13
11423 12
11424 15
11425 24
11426 20
11427 15
11428 24
11429 20
11430 11
11431 14
11432 13
11433 13
11434 18
11435 16
11436 13
11437 18
11438 16
11439 14
11440 10
11441 19
11442 36
11443 28
11444 19
11445 36
11446 28
11447 12
11448 17
11449 15
11450 14
11451 21
11452 18
11453 14
11454 18
11455 12
11456 17
11457 15
11458 12
11459 10
11460 19
11461 36
11462 28
11463 19
11464 36
11465 28
11466 12
11467 17
11468 15
11469 14
11470 21
11471 18
11472 14
11473 21
11474 18
11475 12
11476 17
11477 15
11478 13
11479 12
11480 10
11481 19
11482 36
11483 19
11484 36
11485 28
11486 12
11487 17
11488 15
11489 14
11490 21
11491 18
11492 14
11493 21
11494 18
11495 12
11496 17
11497 15
11498 13
11499 12
11500 15
11501 24
11502 20
11503 15
11504 24
11505 20
11506 11
11507 14
11508 13
11509 13
11510 18
11511 16
11512 13
11513 18
11514 16
11515 11
11516 14
11517 13
11518 10
11519 19
11520 36
11521 28
11522 19
11523 28
11524 12
11525 17
11526 15
11527 21
11528 18
11529 14
11530 21
11531 18
11532 12
11533 17
11534 15
11535 13
11536 12
11537 14
11538 17
11539 26
11541 35
11542 26
11544 35
11545 19
11546 24
11547 22
11548 21
11549 25
11550 21
11551 28
11552 25
11553 19
11554 24
11555 22
11556 20
11557 19
11558 17
11559 26
11561 35
11562 26
11564 35
11565 19
11566 24
11567 22
11568 21
11569 28
11570 25
11571 21
11572 25
11573 19
11574 24
11575 22
11576 20
11577 19
11578 22
11579 31
11580 27
11581 22
11582 31
11583 27
11584 18
11585 21
11586 20
11587 20
11588 25
11589 23
11590 23
11591 18
11592 21
11593 20
11594 17
11595 26
11597 35
11598 26
11600 35
11601 19
11602 24
11603 21
11604 28
11605 25
11606 21
11607 28
11608 25
11609 19
11610 24
11611 22
11612 20
11613 19
11614 17
11615 26
11617 35
11618 26
11620 35
11621 19
11622 24
11623 22
11624 21
11625 28
11626 25
11627 28
11628 25
11629 19
11630 24
11631 22
11632 20
11633 19
11634 26
11636 35
11637 26
11639 35
11640 19
11641 24
11642 22
11643 28
11644 25
11645 21
11646 28
11647 25
11648 19
11649 24
11650 20
11651 19
11652 22
11653 31
11654 27
11655 22
11656 31
11657 27
11658 18
11659 21
11660 20
11661 20
11662 25
11663 23
11664 20
11665 25
11666 23
11667 18
11668 21
11669 20
11670 17
11671 26
11673 35
11674 26
11676 35
11677 19
11678 24
11679 22
11680 21
11681 28
11682 25
11683 21
11684 28
11685 25
11686 19
11687 24
11688 22
11689 20
11690 19
11691 11
11692 14
11693 23
11695 32
11696 23
11698 32
11699 16
11700 21
11701 19
11702 18
11703 25
11704 22
11705 18
11706 25
11707 22
11708 16
11709 21
11710 19
11711 17
11712 16
11713 14
11714 23
11716 32
11717 23
11719 32
11720 16
11721 21
11722 19
11723 18
11724 25
11725 22
11726 18
11727 25
11728 22
11729 16
11730 21
11731 19
11732 17
11733 16
11734 19
11735 28
11736 24
11737 19
11738 28
11739 24
11740 15
11741 18
11742 17
11743 17
11744 22
11745 20
11746 17
11747 22
11748 20
11749 15
11750 18
11751 17
11752 14
11753 23
11755 32
11756 23
11758 32
11759 16
11760 21
11761 19
11762 18
11763 25
11764 22
11765 18
11766 25
11767 22
11768 16
11769 21
11770 19
11771 17
11772 16
11773 14
11774 23
11776 32
11777 32
11778 16
11779 21
11780 19
11781 18
11782 25
11783 22
11784 18
11785 25
11786 22
11787 16
11788 21
11789 19
11790 17
11791 16
11792 14
11793 23
11795 32
11796 23
11798 32
11799 16
11800 21
11801 19
11802 18
11803 25
11804 22
11805 18
11806 25
11807 22
11808 16
11809 21
11810 19
11811 17
11812 16
11813 19
11814 28
11815 24
11816 19
11817 28
11818 24
11819 15
11820 18
11821 17
11822 17
11823 22
11824 20
11825 17
11826 20
11827 15
11828 18
11829 17
11830 14
11831 23
11833 32
11834 23
11836 32
11837 16
11838 21
11839 19
11840 25
11841 22
11842 18
11843 25
11844 22
11845 21
11846 19
11847 17
11848 16
11849 5
11850 8
11851 17
11852 34
11853 17
11854 34
11855 26
11856 10
11857 13
11858 12
11859 19
11860 16
11861 12
11862 19
11863 16
11864 10
11865 15
11866 13
11867 11
11868 10
11869 8
11870 17
11871 26
11872 17
11873 34
11874 26
11875 15
11876 13
11877 12
11878 19
11879 16
11880 12
11881 19
11882 16
11883 10
11884 15
11885 13
11886 11
11887 10
11888 13
11889 22
11890 18
11891 13
11892 22
11893 18
11894 9
11895 12
11896 11
11897 16
11898 14
11899 11
11900 16
11901 14
11902 9
11903 12
11904 8
11905 34
11906 26
11907 17
11908 34
11909 26
11910 10
11911 15
11912 13
11913 12
11914 19
11915 16
11916 12
11917 19
11918 16
11919 10
11920 15
11921 13
11922 11
11923 10
11924 8
11925 17
11926 34
11927 26
11928 17
11929 34
11930 26
11931 10
11932 15
11933 13
11934 12
11935 19
11936 16
11937 12
11938 19
11939 16
11940 10
11941 15
11942 13
11943 11
11944 10
11945 8
11946 17
11947 34
11948 26
11949 17
11950 34
11951 10
11952 15
11953 13
11954 12
11955 19
11956 16
11957 12
11958 19
11959 16
11960 10
11961 15
11962 13
11963 11
11964 10
11965 13
11966 18
11967 13
11968 22
11969 18
11970 9
11971 12
11972 11
11973 11
11974 16
11975 14
11976 16
11977 14
11978 9
11979 12
11980 11
11981 8
11982 17
11983 34
11984 17
11985 34
11986 26
11987 10
11988 15
11989 13
11990 12
11991 19
11992 16
11993 12
11994 19
11995 16
11996 10
11997 13
11998 10
11999 10
12000 13
12001 22
12002 39
12003 31
12004 22
12005 39
12006 31
12007 15
12008 20
12009 18
12010 17
12011 24
12012 21
12013 17
12014 24
12015 15
12016 20
12017 16
12018 15
12019 13
12020 22
12021 39
12022 31
12023 22
12024 39
12025 31
12026 15
12027 20
12028 18
12029 17
12030 24
12031 21
12032 17
12033 21
12034 15
12035 20
12036 18
12037 16
12038 15
12039 18
12040 27
12041 23
12042 18
12043 27
12044 23
12045 14
12046 17
12047 16
12048 16
12049 21
12050 19
12051 16
12052 21
12053 19
12054 14
12055 17
12056 13
12057 22
12058 39
12059 31
12060 22
12061 39
12062 31
12063 15
12064 20
12065 18
12066 17
12067 24
12068 21
12069 17
12070 24
12071 21
12072 15
12073 18
12074 16
12075 15
12076 13
12077 22
12078 39
12079 31
12080 22
12081 39
12082 31
12083 15
12084 20
12085 18
12086 17
12087 24
12088 21
12089 17
12090 24
12091 21
12092 15
12093 20
12094 18
12095 16
12096 15
12097 13
12098 22
12099 39
12100 31
12101 22
12102 39
12103 31
12104 15
12105 20
12106 18
12107 17
12108 24
12109 21
12110 17
12111 24
12112 21
12113 15
12114 20
12115 18
12116 16
12117 18
12118 27
12119 23
12120 18
12121 27
12122 23
12123 14
12124 17
12125 16
12126 16
12127 21
12128 19
12129 16
12130 21
12131 19
12132 14
12133 17
12134 16
12135 13
12136 22
12137 39
12138 31
12139 22
12140 39
12141 31
12142 15
12143 20
12144 18
12145 24
12146 21
12147 17
12148 24
12149 21
12150 15
12151 20
12152 18
12153 16
12154 15
12155 8
12156 11
12157 37
12158 20
12159 37
12160 29
12161 13
12162 18
12163 16
12164 15
12165 22
12166 19
12167 15
12168 22
12169 19
12170 18
12171 16
12172 13
12173 20
12174 37
12175 29
12176 20
12177 29
12178 13
12179 18
12180 16
12181 15
12182 22
12183 19
12184 15
12185 22
12186 19
12187 13
12188 18
12189 16
12190 14
12191 13
12192 16
12193 25
12194 21
12195 16
12196 25
12197 21
12198 12
12199 15
12200 14
12201 14
12202 19
12203 17
12204 14
12205 19
12206 12
12207 15
12208 14
12209 11
12210 20
12211 37
12212 29
12213 20
12214 37
12215 29
12216 13
12217 18
12218 16
12219 22
12220 19
12221 15
12222 22
12223 19
12224 13
12225 18
12226 16
12227 14
12228 13
12229 11
12230 20
12231 37
12232 29
12233 20
12234 37
12235 29
12236 13
12237 18
12238 16
12239 15
12240 22
12241 19
12242 15
12243 22
12244 19
12245 18
12246 16
12247 14
12248 13
12249 11
12250 20
12251 37
12252 29
12253 20
12254 37
12255 29
12256 13
12257 18
12258 16
12259 15
12260 22
12261 19
12262 15
12263 22
12264 19
12265 13
12266 18
12267 16
12268 14
12269 25
12270 21
12271 16
12272 25
12273 21
12274 12
12275 15
12276 14
12277 14
12278 19
12279 17
12280 14
12281 19
12282 17
12283 12
12284 15
12285 14
12286 11
12287 20
12288 37
12289 29
12290 20
12291 37
12292 29
12293 13
12294 18
12295 16
12296 15
12297 22
12298 19
12299 15
12300 22
12301 19
12302 13
12303 18
12304 16
12305 14
12306 13
12307 6
12308 9
12309 18
12310 35
12311 27
12312 18
12313 35
12314 27
12315 11
12316 16
12317 14
12318 13
12319 20
12320 17
12321 13
12322 20
12323 17
12324 11
12325 16
12326 14
12327 11
12328 9
12329 18
12330 35
12331 27
12332 35
12333 27
12334 11
12335 16
12336 13
12337 20
12338 17
12339 13
12340 20
12341 17
12342 11
12343 16
12344 14
12345 12
12346 11
12347 14
12348 23
12349 19
12350 14
12351 23
12352 19
12353 10
12354 13
12355 12
12356 12
12357 17
12358 15
12359 12
12360 17
12361 15
12362 10
12363 13
12364 12
12365 9
12366 18
12367 35
12368 27
12369 18
12370 35
12371 27
12372 11
12373 16
12374 14
12375 13
12376 20
12377 17
12378 13
12379 20
12380 17
12381 16
12382 14
12383 12
12384 11
12385 9
12386 18
12387 35
12388 27
12389 18
12390 35
12391 27
12392 11
12393 16
12394 14
12395 13
12396 20
12397 17
12398 13
12399 20
12400 17
12401 11
12402 16
12403 14
12404 12
12405 11
12406 9
12407 18
12408 35
12409 27
12410 18
12411 35
12412 27
12413 11
12414 16
12415 13
12416 20
12417 17
12418 13
12419 20
12420 17
12421 11
12422 16
12423 14
12424 12
12425 11
12426 14
12427 23
12428 19
12429 14
12430 23
12431 19
12432 10
12433 13
12434 12
12435 12
12436 17
12437 15
12438 12
12439 17
12440 15
12441 10
12442 13
12443 12
12444 9
12445 18
12446 35
12447 18
12448 35
12449 27
12450 11
12451 16
12452 14
12453 13
12454 20
12455 17
12456 13
12457 20
12458 17
12459 11
12460 16
12461 14
12462 12
12463 11
12464 5
12465 8
12466 17
12467 34
12468 26
12469 17
12470 34
12471 26
12472 10
12473 15
12474 13
12475 12
12476 19
12477 16
12478 12
12479 19
12480 16
12481 10
12482 15
12483 13
12484 11
12485 10
12486 8
12487 17
12488 34
12489 26
12490 17
12491 34
12492 26
12493 10
12494 15
12495 13
12496 12
12497 19
12498 16
12499 12
12500 19
12501 16
12502 10
12503 15
12504 13
12505 11
12506 10
12507 22
12508 18
12509 13
12510 18
12511 9
12512 12
12513 11
12514 11
12515 16
12516 14
12517 11
12518 16
12519 14
12520 9
12521 12
12522 8
12523 17
12524 34
12525 26
12526 17
12527 34
12528 26
12529 10
12530 13
12531 12
12532 19
12533 12
12534 19
12535 16
12536 10
12537 15
12538 13
12539 11
12540 10
12541 8
12542 17
12543 34
12544 26
12545 17
12546 34
12547 26
12548 10
12549 15
12550 13
12551 12
12552 19
12553 16
12554 12
12555 19
12556 16
12557 10
12558 15
12559 13
12560 11
12561 10
12562 8
12563 17
12564 34
12565 26
12566 17
12567 34
12568 26
12569 10
12570 15
12571 13
12572 12
12573 19
12574 16
12575 12
12576 19
12577 16
12578 10
12579 15
12580 13
12581 11
12582 10
12583 13
12584 22
12585 18
12586 13
12587 22
12588 18
12589 9
12590 12
12591 11
12592 11
12593 16
12594 14
12595 11
12596 16
12597 14
12598 9
12599 12
12600 11
12601 8
12602 17
12603 34
12604 26
12605 34
12606 26
12607 10
12608 15
12609 13
12610 12
12611 19
12612 16
12613 12
12614 16
12615 10
12616 15
12617 13
12618 11
12619 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
turn left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

1
WUG0 thrice after walk right I_TURN_RIGHT I_WALK WUG1 WUG1 WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk thrice after walk right
--
I_TURN_RIGHT I_WALK I_WALK I_WALK I_WALK

2
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

3
WUG0 around right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

4
WUG0 opposite left thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

5
WUG0 right twice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

6
turn opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

7
WUG0 around right thrice and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

8
WUG0 opposite left and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

9
WUG0 right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

10
turn opposite left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

11
WUG0 opposite left and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

12
WUG0 opposite right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

13
WUG0 around right twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

14
turn around left and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

15
turn around left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

16
WUG0 around right twice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

17
WUG0 left and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

18
WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

19
WUG0 opposite left thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

20
WUG0 around right thrice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

21
turn left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

22
WUG0 around left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

23
WUG0 right thrice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

24
WUG0 left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

25
turn left thrice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

26
WUG0 around left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

27
turn right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

28
WUG0 and turn right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

29
WUG0 opposite right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

30
WUG0 opposite left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

31
turn left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

32
turn opposite left thrice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

33
turn opposite right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
turn left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

35
turn right after WUG0 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump
--
I_JUMP I_TURN_RIGHT

36
WUG0 opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

37
turn left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT

38
turn opposite right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

39
WUG0 opposite right after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

40
WUG0 thrice and turn around left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

41
WUG0 left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

42
WUG0 thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

43
WUG0 left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

44
turn opposite left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

45
turn around right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

46
run around left and WUG0 around right I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run around left and run around right
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

47
WUG0 left thrice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

48
turn left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

49
WUG0 right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

50
turn left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

51
WUG0 around left and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

52
WUG0 left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

53
WUG0 left thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

54
WUG0 opposite left after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

55
WUG0 left thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

56
WUG0 opposite left and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

57
WUG0 twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

58
WUG0 around right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

59
WUG0 opposite right and turn right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

60
WUG0 twice and turn opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

61
WUG0 left twice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

62
WUG0 around left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

63
turn around right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

64
WUG0 around right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

65
WUG0 right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

66
turn around left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

67
WUG0 left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

68
turn around right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

69
WUG0 right twice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

70
WUG0 right twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

71
WUG0 around right and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

72
WUG0 opposite right and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

73
WUG0 opposite left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

74
turn left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

75
WUG0 around right thrice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

76
WUG0 twice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

77
turn opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

78
WUG0 around left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

79
turn right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

80
turn opposite right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

81
turn opposite left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

82
WUG0 right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

83
WUG0 opposite right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

84
WUG0 opposite left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

85
WUG0 thrice and turn around left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

86
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

87
turn opposite right and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

88
WUG0 opposite right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

89
WUG0 thrice and turn right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

90
turn around right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

91
turn opposite right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

92
WUG0 around right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

93
WUG0 left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

94
WUG0 opposite right after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

95
WUG0 after WUG0 twice WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump twice
--
I_JUMP I_JUMP I_JUMP

96
WUG0 opposite right thrice and turn left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

97
turn opposite right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

98
WUG0 left after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP

99
turn left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

100
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

101
WUG0 left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

102
WUG0 around right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

103
WUG0 opposite right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

104
WUG0 opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

105
WUG0 left twice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

106
turn opposite left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

107
WUG0 opposite left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

108
WUG0 opposite right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

109
turn opposite right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

110
turn around right thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

111
turn around left twice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

112
WUG0 around right and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

113
turn around right and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

114
turn opposite left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

115
WUG0 opposite right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

116
WUG0 opposite right after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

117
turn right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

118
turn around right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

119
WUG0 thrice after WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

120
WUG0 after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

121
WUG0 opposite right and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

122
turn left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

123
WUG0 after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

124
WUG0 opposite left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

125
WUG0 opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

126
turn around left after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

127
WUG0 opposite left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

128
WUG0 left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

129
turn around right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

130
WUG0 opposite left thrice and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

131
turn opposite left and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

132
WUG0 left thrice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

133
WUG0 right thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

134
WUG0 opposite left and turn right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

135
turn opposite right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

136
WUG0 right after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

137
WUG0 around left after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

138
turn left after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

139
turn right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

140
WUG0 around right thrice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

141
WUG0 around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

142
WUG0 left twice and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

143
turn left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

144
WUG0 opposite right thrice and turn around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

145
WUG0 left after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

146
WUG0 around left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

147
WUG0 right twice and WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

148
turn opposite right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

149
turn around left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

150
turn left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

151
WUG0 twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

152
turn opposite left and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

153
WUG0 around right thrice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

154
WUG0 around left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

155
WUG0 opposite left thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

156
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

157
turn opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

158
WUG0 around right and WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

159
WUG0 left and turn around right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

160
turn left and WUG0 opposite right thrice I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

161
WUG0 around left thrice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

162
turn left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

163
turn opposite right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

164
WUG0 around left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

165
WUG0 opposite right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

166
WUG0 around left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

167
WUG0 left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

168
WUG0 right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

169
WUG0 right thrice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

170
WUG0 left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

171
turn around right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

172
WUG0 opposite left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

173
WUG0 around left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

174
WUG0 and turn opposite left WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

175
turn left twice and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

176
WUG0 around right after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

177
WUG0 around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

178
turn left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

179
WUG0 around left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

180
WUG0 opposite right and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

181
turn opposite right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

182
WUG0 around right and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

183
turn around left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

184
turn around right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

185
turn left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

186
turn opposite left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

187
turn around left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

188
turn right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

189
turn left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

190
WUG0 thrice and turn left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

191
WUG0 opposite left twice and turn opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

192
WUG0 around left twice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

193
turn left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

194
WUG0 twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

195
WUG0 twice and WUG0 twice WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP

196
WUG0 after turn right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP

197
turn left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

198
WUG0 opposite left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

199
WUG0 right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

200
WUG0 left twice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

201
WUG0 left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

202
WUG0 right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

203
WUG0 right and turn left I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT

204
WUG0 opposite right thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

205
turn opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

206
WUG0 left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

207
WUG0 left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

208
WUG0 opposite left after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

209
turn around right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

210
turn opposite right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

211
turn opposite right thrice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

212
WUG0 around right and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

213
WUG0 opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

214
WUG0 opposite right twice and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

215
WUG0 twice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

216
turn opposite left and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

217
WUG0 right thrice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

218
turn right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

219
WUG0 right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

220
WUG0 right and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

221
turn around right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

222
turn left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

223
WUG0 and WUG0 right twice WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump right twice
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

224
WUG0 opposite right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

225
turn around left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

226
WUG0 and turn left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

227
WUG0 opposite right and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

228
WUG0 twice and WUG0 opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

229
WUG0 opposite left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

230
WUG0 opposite left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

231
WUG0 around right after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

232
turn right and WUG0 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump
--
I_TURN_RIGHT I_JUMP

233
WUG0 around right twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

234
turn around left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

235
WUG0 left and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

236
WUG0 left thrice and WUG0 around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

237
turn opposite right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

238
WUG0 opposite left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

239
WUG0 opposite left twice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

240
WUG0 right after WUG0 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump
--
I_JUMP I_TURN_RIGHT I_JUMP

241
WUG0 left after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

242
WUG0 opposite right twice and turn left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

243
WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

244
WUG0 opposite left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

245
turn opposite right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

246
WUG0 opposite right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

247
turn around right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

248
WUG0 twice and turn around left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

249
turn opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

250
WUG0 around left thrice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

251
turn opposite left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

252
WUG0 around right and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

253
WUG0 opposite right and turn left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

254
WUG0 left twice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

255
WUG0 around left thrice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

256
run left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_RUN {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run left after run right twice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_RUN

257
turn opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

258
turn around right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

259
WUG0 left twice and WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

260
turn opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

261
WUG0 opposite left thrice and turn opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

262
WUG0 opposite right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

263
turn opposite left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

264
WUG0 right thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

265
turn around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

266
turn around left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

267
WUG0 opposite right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

268
WUG0 right thrice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

269
WUG0 around right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

270
WUG0 around right twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

271
WUG0 opposite right thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

272
turn around left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

273
turn around right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

274
WUG0 around right twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

275
WUG0 right and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

276
turn around right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

277
turn left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

278
turn right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

279
WUG0 opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

280
turn opposite right after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

281
WUG0 opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

282
WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

283
WUG0 opposite right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

284
WUG0 left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

285
WUG0 right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

286
WUG0 opposite left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

287
WUG0 thrice and WUG0 opposite left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

288
turn opposite left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

289
turn around left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

290
WUG0 right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

291
WUG0 opposite right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

292
WUG0 left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

293
WUG0 left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

294
turn opposite left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

295
WUG0 right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

296
turn opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

297
turn opposite left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

298
turn left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

299
WUG0 around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

300
WUG0 opposite left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

301
WUG0 opposite left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

302
WUG0 around right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

303
WUG0 opposite left after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

304
turn right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

305
WUG0 opposite left thrice after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

306
turn around right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

307
WUG0 left twice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

308
WUG0 left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

309
turn left and WUG0 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump
--
I_TURN_LEFT I_JUMP

310
turn left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

311
WUG0 around left thrice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

312
turn right thrice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

313
WUG0 left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

314
turn opposite right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

315
WUG0 right thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

316
WUG0 around right twice and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

317
WUG0 opposite left twice and turn around right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

318
WUG0 around left twice and turn around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

319
turn around left and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

320
WUG0 twice and WUG0 around left thrice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

321
WUG0 opposite right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

322
WUG0 around left thrice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

323
WUG0 opposite right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

324
turn around right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

325
WUG0 around left twice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

326
turn around left thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

327
turn right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

328
WUG0 around right and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

329
WUG0 opposite left and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

330
WUG0 left thrice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

331
WUG0 opposite right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

332
WUG0 around right twice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

333
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

334
turn right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

335
WUG0 around left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

336
WUG0 twice WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice
--
I_JUMP I_JUMP

337
WUG0 around right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

338
WUG0 left twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

339
turn right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

340
WUG0 left twice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

341
WUG0 after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

342
WUG0 opposite left thrice and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

343
WUG0 left twice and turn right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

344
WUG0 around right twice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

345
turn opposite right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

346
WUG0 around left thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

347
turn right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

348
turn around left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

349
WUG0 around left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

350
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

351
WUG0 thrice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

352
WUG0 thrice and WUG0 around right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

353
WUG0 thrice after WUG0 twice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

354
turn opposite right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

355
WUG0 around left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

356
turn left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

357
turn around right twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

358
WUG0 opposite left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

359
WUG0 twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

360
WUG0 around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

361
WUG0 around right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

362
WUG0 around right after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

363
WUG0 opposite right twice and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

364
turn right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

365
WUG0 around left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

366
WUG0 around left twice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

367
WUG0 opposite left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

368
turn opposite right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

369
WUG0 right and WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

370
WUG0 around right twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

371
WUG0 right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

372
WUG0 right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

373
turn opposite left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

374
WUG0 opposite left thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

375
WUG0 opposite left twice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

376
turn right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

377
WUG0 around right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

378
WUG0 right thrice and WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

379
WUG0 around left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

380
WUG0 right and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

381
WUG0 right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

383
turn opposite left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

384
walk WUG0 and walk thrice WUG1 I_WALK I_WALK I_WALK I_WALK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
walk right and walk thrice
--
I_TURN_RIGHT I_WALK I_WALK I_WALK I_WALK

385
run around WUG0 twice after turn around WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
run around left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN

386
WUG0 around right and look right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and look right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK

387
look opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
look opposite left thrice and walk opposite left
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_WALK

388
turn right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

389
WUG0 twice and turn right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

390
look around left twice and WUG0 opposite left thrice I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look around left twice and look opposite left thrice
--
I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK

391
turn right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

392
turn left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

393
WUG0 thrice and turn left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

394
WUG0 right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

395
