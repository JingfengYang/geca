12637
0 3
1 3
2 6
3 15
4 32
5 15
6 32
7 24
8 8
9 13
10 11
11 10
12 17
13 14
14 10
15 17
16 14
17 8
18 13
19 11
20 9
21 8
22 6
23 15
24 32
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 8
38 13
39 11
40 9
41 8
42 11
43 20
44 16
45 11
46 20
47 16
48 7
49 10
50 9
51 9
52 14
53 12
54 9
55 14
56 12
57 7
58 10
59 9
60 6
61 15
62 32
63 24
64 15
65 32
66 24
67 8
68 13
69 11
70 10
71 17
72 14
73 10
74 17
75 14
76 8
77 13
78 11
79 9
80 8
81 6
82 15
83 32
84 24
85 15
86 32
87 24
88 8
89 13
90 11
91 10
92 17
93 14
94 10
95 17
96 14
97 13
98 11
99 9
100 8
101 6
102 15
103 32
104 24
105 15
106 32
107 24
108 13
109 11
110 10
111 17
112 14
113 10
114 17
115 14
116 8
117 13
118 11
119 9
120 8
121 11
122 20
123 16
124 11
125 20
126 16
127 7
128 10
129 9
130 9
131 14
132 12
133 9
134 14
135 12
136 7
137 10
138 9
139 6
140 15
141 32
142 24
143 15
144 32
145 24
146 8
147 13
148 11
149 10
150 17
151 14
152 10
153 17
154 14
155 8
156 13
157 11
158 9
159 8
160 12
161 15
162 24
164 24
166 33
167 17
168 22
169 20
170 19
171 26
172 23
173 19
174 26
175 23
176 17
177 22
178 20
179 18
180 17
181 15
182 24
184 24
186 33
187 22
188 20
189 19
190 26
191 23
192 19
193 26
194 23
195 22
196 20
197 18
198 17
199 20
200 29
201 25
202 20
203 29
204 25
205 16
206 19
207 18
208 18
209 23
210 21
211 18
212 23
213 21
214 16
215 19
216 18
217 15
219 33
220 24
222 33
223 17
224 22
225 20
226 19
227 26
228 23
229 19
230 26
231 23
232 17
233 22
234 20
235 18
236 17
237 15
238 24
240 33
241 24
243 33
244 17
245 22
246 20
247 19
248 26
249 23
250 19
251 26
252 23
253 17
254 22
255 20
256 18
257 17
258 15
259 24
261 33
262 24
264 33
265 17
266 22
267 20
268 19
269 26
270 23
271 19
272 26
273 23
274 17
275 20
276 18
277 17
278 20
279 29
280 25
281 20
282 29
283 25
284 16
285 19
286 18
287 23
288 21
289 18
290 23
291 21
292 16
293 19
294 18
295 15
296 24
298 33
299 24
301 33
302 17
303 22
304 20
305 19
306 26
307 23
308 19
309 26
310 23
311 17
312 22
313 20
314 18
315 17
316 32
323 34
324 39
325 37
326 36
329 36
332 34
333 39
334 37
335 35
336 34
337 32
344 39
345 37
346 36
348 36
351 34
352 39
353 37
354 35
355 34
356 37
359 37
362 33
363 36
364 35
365 35
367 38
368 35
370 38
371 33
372 36
373 35
374 32
380 39
381 37
382 36
385 36
388 34
389 39
390 37
391 34
392 32
399 34
400 39
401 37
402 36
405 36
407 34
408 39
409 37
410 35
411 34
412 32
419 34
420 39
421 37
424 36
426 34
427 39
428 37
429 35
430 34
431 37
434 37
437 33
438 36
439 35
440 35
442 38
443 35
445 38
446 33
447 36
448 35
449 32
456 34
457 39
458 37
459 36
462 36
465 34
466 39
467 37
468 35
469 34
470 21
471 24
472 33
474 33
477 26
478 31
479 29
480 28
481 35
482 32
483 28
484 35
485 32
486 26
487 31
488 29
489 27
490 26
491 24
492 33
495 33
498 26
499 31
500 29
501 28
502 35
503 32
504 28
505 35
506 32
507 26
508 31
509 29
510 27
511 26
512 29
513 38
514 34
515 29
516 34
517 25
518 28
519 27
520 27
521 32
522 27
523 32
524 30
525 25
526 28
527 27
528 24
529 33
531 33
534 26
535 31
536 29
537 28
538 35
539 32
540 28
541 32
542 26
543 31
544 29
545 27
546 26
547 24
548 33
551 33
554 26
555 31
556 29
557 28
558 35
559 32
560 28
561 35
562 32
563 26
564 31
565 27
566 26
567 24
568 33
571 33
573 31
574 29
575 28
576 35
577 32
578 28
579 35
580 32
581 26
582 29
583 26
584 38
585 29
586 38
587 34
588 25
589 28
590 27
591 27
592 32
593 30
594 27
595 32
596 30
597 25
598 28
599 27
600 24
601 33
604 33
607 26
608 29
609 28
610 35
611 32
612 28
613 35
614 32
615 26
616 31
617 29
618 27
619 26
620 12
621 15
622 24
624 33
625 24
627 33
628 17
629 22
630 20
631 19
632 26
633 23
634 19
635 26
636 23
637 17
638 22
639 20
640 18
641 17
642 15
643 24
645 33
646 24
648 33
649 17
650 22
651 20
652 19
653 26
654 23
655 19
656 26
657 23
658 17
659 22
660 20
661 18
662 17
663 20
664 29
665 25
666 20
667 29
668 25
669 19
670 18
671 18
672 23
673 21
674 18
675 23
676 21
677 16
678 19
679 18
680 15
681 24
683 33
684 24
686 33
687 17
688 22
689 20
690 19
691 26
692 23
693 19
694 26
695 23
696 17
697 22
698 20
699 18
700 17
701 15
702 24
704 33
705 24
707 17
708 22
709 20
710 19
711 26
712 23
713 19
714 26
715 23
716 17
717 22
718 20
719 18
720 17
721 15
722 24
724 33
725 24
726 33
727 17
728 22
729 20
730 19
731 26
732 23
733 19
734 26
735 23
736 17
737 22
738 20
739 18
740 17
741 20
742 29
743 25
744 20
745 25
746 16
747 19
748 18
749 18
750 23
751 21
752 18
753 23
754 21
755 16
756 19
757 18
758 15
759 24
761 33
762 24
764 33
765 17
766 22
767 20
768 19
769 26
770 23
771 19
772 26
773 23
774 17
775 22
776 20
777 18
778 17
779 29
780 32
787 34
788 39
789 37
790 36
793 36
796 34
797 39
798 37
799 35
800 34
801 32
808 34
809 39
810 37
811 36
814 36
817 34
818 39
819 37
820 35
821 34
822 37
826 33
827 36
828 35
829 35
831 38
832 35
834 38
835 33
836 36
837 35
838 32
844 34
845 39
846 37
847 36
850 36
853 34
854 39
855 37
856 35
857 34
858 32
865 34
866 37
867 36
870 36
873 34
874 39
875 37
876 35
877 34
878 32
885 34
886 39
887 37
888 36
891 36
894 34
895 39
896 35
897 34
898 37
903 33
904 36
905 35
906 35
908 38
909 35
911 38
912 33
913 36
914 35
915 32
922 34
923 39
924 37
925 36
927 36
930 34
931 39
932 37
933 35
934 34
935 21
936 33
939 33
942 26
943 31
944 29
945 28
946 35
947 32
948 28
949 35
950 32
951 26
952 31
953 29
954 27
955 26
956 24
957 33
960 33
963 26
964 31
965 29
966 28
967 35
968 32
969 28
970 35
971 26
972 31
973 29
974 27
975 26
976 29
977 38
978 34
979 29
980 38
981 34
982 25
983 28
984 27
985 27
986 32
987 30
988 27
989 32
990 30
991 25
992 28
993 27
994 24
995 33
998 33
1000 26
1001 31
1002 29
1003 28
1004 35
1005 32
1006 28
1007 35
1008 32
1009 26
1010 31
1011 29
1012 27
1013 26
1014 24
1015 33
1018 33
1021 26
1022 31
1023 29
1024 28
1025 35
1026 32
1027 28
1028 35
1029 32
1030 26
1031 31
1032 29
1033 27
1034 26
1035 24
1036 33
1039 33
1042 26
1043 31
1044 29
1045 28
1046 35
1047 32
1048 28
1049 35
1050 32
1051 26
1052 31
1053 29
1054 27
1055 26
1056 29
1057 38
1058 34
1059 38
1060 34
1061 25
1062 28
1063 27
1064 27
1065 32
1066 30
1067 27
1068 32
1069 30
1070 25
1071 28
1072 27
1073 24
1074 33
1077 33
1080 26
1081 31
1082 29
1083 28
1084 35
1085 32
1086 28
1087 35
1088 32
1089 26
1090 31
1091 29
1092 27
1093 26
1094 5
1095 8
1096 17
1097 34
1098 26
1099 17
1100 34
1101 26
1102 10
1103 15
1104 13
1105 12
1106 19
1107 16
1108 12
1109 19
1110 16
1111 10
1112 15
1113 13
1114 11
1115 10
1116 8
1117 17
1118 34
1119 26
1120 17
1121 34
1122 26
1123 10
1124 15
1125 13
1126 12
1127 19
1128 16
1129 12
1130 19
1131 16
1132 10
1133 15
1134 13
1135 11
1136 13
1137 22
1138 18
1139 13
1140 18
1141 9
1142 12
1143 11
1144 11
1145 16
1146 14
1147 11
1148 16
1149 14
1150 9
1151 12
1152 11
1153 8
1154 17
1155 34
1156 26
1157 17
1158 34
1159 26
1160 10
1161 15
1162 13
1163 12
1164 19
1165 16
1166 12
1167 19
1168 16
1169 15
1170 13
1171 11
1172 10
1173 8
1174 17
1175 34
1176 26
1177 17
1178 34
1179 26
1180 10
1181 15
1182 13
1183 12
1184 19
1185 16
1186 12
1187 19
1188 16
1189 10
1190 15
1191 13
1192 11
1193 10
1194 8
1195 17
1196 34
1197 26
1198 17
1199 34
1200 26
1201 10
1202 15
1203 13
1204 12
1205 19
1206 12
1207 19
1208 16
1209 10
1210 15
1211 13
1212 11
1213 10
1214 13
1215 22
1216 18
1217 13
1218 22
1219 18
1220 9
1221 12
1222 11
1223 11
1224 16
1225 14
1226 11
1227 16
1228 14
1229 9
1230 12
1231 11
1232 8
1233 17
1234 34
1235 26
1236 17
1237 34
1238 26
1239 10
1240 15
1241 13
1242 12
1243 19
1244 16
1245 12
1246 19
1247 16
1248 10
1249 15
1250 13
1251 11
1252 10
1253 10
1254 13
1255 22
1256 39
1257 31
1258 22
1259 39
1260 31
1261 15
1262 20
1263 18
1264 17
1265 24
1266 21
1267 17
1268 24
1269 21
1270 15
1271 20
1272 18
1273 16
1274 15
1275 13
1276 22
1277 39
1278 31
1279 22
1280 39
1281 31
1282 15
1283 20
1284 17
1285 24
1286 21
1287 17
1288 24
1289 21
1290 15
1291 18
1292 16
1293 15
1294 18
1295 27
1296 23
1297 18
1298 27
1299 23
1300 14
1301 17
1302 16
1303 16
1304 21
1305 19
1306 16
1307 21
1308 19
1309 14
1310 17
1311 16
1312 13
1313 22
1314 39
1315 31
1316 22
1317 39
1318 31
1319 15
1320 20
1321 18
1322 17
1323 24
1324 21
1325 17
1326 21
1327 15
1328 20
1329 18
1330 16
1331 15
1332 13
1333 22
1334 39
1335 31
1336 22
1337 39
1338 31
1339 15
1340 20
1341 18
1342 17
1343 24
1344 21
1345 17
1346 24
1347 21
1348 15
1349 20
1350 18
1351 16
1352 15
1353 13
1354 22
1355 39
1356 31
1357 22
1358 39
1359 31
1360 15
1361 18
1362 17
1363 24
1364 21
1365 17
1366 24
1367 21
1368 15
1369 20
1370 18
1371 16
1372 15
1373 18
1374 27
1375 23
1376 18
1377 27
1378 23
1379 14
1380 17
1381 16
1382 16
1383 21
1384 19
1385 16
1386 21
1387 19
1388 14
1389 17
1390 16
1391 13
1392 22
1393 39
1394 31
1395 22
1396 39
1397 31
1398 15
1399 20
1400 18
1401 17
1402 24
1403 21
1404 17
1405 24
1406 21
1407 15
1408 20
1409 18
1410 16
1411 15
1412 8
1413 11
1414 20
1415 37
1416 29
1417 20
1418 37
1419 29
1420 13
1421 18
1422 16
1423 15
1424 22
1425 19
1426 15
1427 22
1428 19
1429 13
1430 18
1431 16
1432 14
1433 13
1434 11
1435 20
1436 37
1437 29
1438 20
1439 37
1440 29
1441 13
1442 18
1443 16
1444 19
1445 15
1446 22
1447 19
1448 13
1449 18
1450 16
1451 14
1452 13
1453 16
1454 25
1455 21
1456 16
1457 25
1458 21
1459 12
1460 15
1461 14
1462 14
1463 17
1464 14
1465 19
1466 17
1467 12
1468 15
1469 14
1470 11
1471 20
1472 37
1473 29
1474 20
1475 37
1476 29
1477 13
1478 18
1479 16
1480 15
1481 22
1482 19
1483 15
1484 22
1485 19
1486 13
1487 18
1488 16
1489 14
1490 13
1491 11
1492 20
1493 37
1494 29
1495 20
1496 37
1497 29
1498 13
1499 18
1500 16
1501 15
1502 22
1503 19
1504 15
1505 22
1506 19
1507 13
1508 18
1509 16
1510 14
1511 13
1512 11
1513 20
1514 37
1515 29
1516 20
1517 37
1518 29
1519 13
1520 18
1521 16
1522 15
1523 22
1524 19
1525 15
1526 22
1527 19
1528 13
1529 18
1530 16
1531 14
1532 13
1533 16
1534 25
1535 21
1536 16
1537 25
1538 21
1539 15
1540 14
1541 14
1542 19
1543 17
1544 14
1545 19
1546 17
1547 12
1548 15
1549 14
1550 11
1551 20
1552 37
1553 29
1554 20
1555 37
1556 29
1557 13
1558 18
1559 16
1560 15
1561 19
1562 15
1563 22
1564 13
1565 18
1566 16
1567 14
1568 13
1569 7
1570 10
1571 19
1572 36
1573 28
1574 19
1575 36
1576 28
1577 12
1578 17
1579 15
1580 14
1581 21
1582 18
1583 14
1584 21
1585 18
1586 12
1587 17
1588 15
1589 13
1590 12
1591 10
1592 19
1593 36
1594 28
1595 19
1596 36
1597 28
1598 12
1599 17
1600 15
1601 14
1602 21
1603 18
1604 14
1605 21
1606 18
1607 12
1608 17
1609 15
1610 13
1611 12
1612 15
1613 24
1614 20
1615 15
1616 24
1617 20
1618 11
1619 14
1620 13
1621 13
1622 18
1623 16
1624 13
1625 18
1626 16
1627 11
1628 14
1629 13
1630 10
1631 19
1632 36
1633 28
1634 19
1635 36
1636 28
1637 12
1638 17
1639 15
1640 14
1641 21
1642 18
1643 14
1644 18
1645 12
1646 17
1647 15
1648 13
1649 12
1650 10
1651 19
1652 36
1653 28
1654 19
1655 36
1656 28
1657 12
1658 17
1659 15
1660 14
1661 21
1662 18
1663 14
1664 21
1665 18
1666 12
1667 17
1668 15
1669 13
1670 12
1671 10
1672 19
1673 36
1674 28
1675 19
1676 36
1677 28
1678 12
1679 17
1680 15
1681 14
1682 21
1683 18
1684 14
1685 21
1686 18
1687 12
1688 17
1689 15
1690 13
1691 12
1692 15
1693 24
1694 20
1695 15
1696 24
1697 20
1698 11
1699 14
1700 13
1701 13
1702 18
1703 16
1704 13
1705 18
1706 16
1707 11
1708 14
1709 13
1710 10
1711 19
1712 36
1713 19
1714 28
1715 12
1716 17
1717 15
1718 14
1719 21
1720 18
1721 14
1722 21
1723 18
1724 12
1725 17
1726 15
1727 13
1728 12
1729 14
1730 17
1731 26
1733 35
1734 26
1736 35
1737 19
1738 24
1739 22
1740 21
1741 28
1742 25
1743 21
1744 28
1745 25
1746 19
1747 24
1748 22
1749 20
1750 19
1751 17
1752 26
1754 35
1755 26
1757 35
1758 19
1759 24
1760 22
1761 21
1762 28
1763 25
1764 21
1765 28
1766 25
1767 19
1768 24
1769 22
1770 20
1771 19
1772 22
1773 31
1774 27
1775 22
1776 31
1777 18
1778 21
1779 20
1780 20
1781 25
1782 23
1783 20
1784 25
1785 23
1786 18
1787 21
1788 20
1789 17
1790 26
1792 35
1793 26
1795 35
1796 19
1797 24
1798 22
1799 28
1800 25
1801 21
1802 28
1803 25
1804 19
1805 24
1806 22
1807 20
1808 19
1809 17
1810 26
1812 35
1813 26
1815 35
1816 19
1817 24
1818 22
1819 21
1820 28
1821 25
1822 21
1823 28
1824 25
1825 19
1826 24
1827 22
1828 20
1829 19
1830 17
1831 26
1833 26
1835 19
1836 24
1837 22
1838 21
1839 25
1840 21
1841 28
1842 25
1843 19
1844 24
1845 22
1846 20
1847 19
1848 22
1849 31
1850 27
1851 22
1852 31
1853 27
1854 18
1855 21
1856 20
1857 20
1858 25
1859 23
1860 20
1861 25
1862 23
1863 18
1864 21
1865 20
1866 17
1867 26
1869 35
1870 26
1872 35
1873 19
1874 24
1875 22
1876 21
1877 28
1878 25
1879 21
1880 28
1881 25
1882 19
1883 24
1884 22
1885 20
1886 19
1887 11
1888 14
1889 23
1891 32
1892 23
1893 32
1894 16
1895 21
1896 19
1897 18
1898 25
1899 22
1900 18
1901 25
1902 22
1903 16
1904 21
1905 19
1906 17
1907 16
1908 14
1909 23
1911 32
1912 23
1914 32
1915 21
1916 19
1917 18
1918 25
1919 22
1920 18
1921 25
1922 22
1923 16
1924 21
1925 19
1926 17
1927 16
1928 19
1929 28
1930 24
1931 19
1932 28
1933 24
1934 15
1935 18
1936 17
1937 17
1938 22
1939 20
1940 17
1941 22
1942 20
1943 15
1944 17
1945 14
1946 23
1948 32
1949 23
1951 32
1952 16
1953 21
1954 19
1955 18
1956 25
1957 22
1958 25
1959 22
1960 16
1961 21
1962 19
1963 17
1964 16
1965 14
1966 23
1968 32
1969 23
1971 32
1972 16
1973 21
1974 19
1975 18
1976 25
1977 22
1978 18
1979 25
1980 22
1981 16
1982 21
1983 19
1984 17
1985 16
1986 14
1987 23
1989 32
1990 23
1992 32
1993 16
1994 21
1995 19
1996 18
1997 25
1998 22
1999 18
2000 25
2001 22
2002 16
2003 21
2004 19
2005 17
2006 16
2007 19
2008 28
2009 24
2010 19
2011 28
2012 24
2013 15
2014 18
2015 17
2016 17
2017 22
2018 20
2019 17
2020 22
2021 20
2022 15
2023 18
2024 17
2025 14
2026 23
2028 32
2029 23
2031 32
2032 16
2033 21
2034 19
2035 18
2036 25
2037 22
2038 18
2039 25
2040 22
2041 16
2042 21
2043 19
2044 17
2045 16
2046 7
2047 10
2048 19
2049 36
2050 28
2051 19
2052 36
2053 28
2054 12
2055 17
2056 15
2057 14
2058 21
2059 18
2060 14
2061 21
2062 18
2063 12
2064 17
2065 15
2066 13
2067 12
2068 10
2069 19
2070 36
2071 28
2072 19
2073 36
2074 28
2075 12
2076 17
2077 15
2078 14
2079 21
2080 18
2081 14
2082 21
2083 18
2084 12
2085 15
2086 13
2087 12
2088 15
2089 24
2090 20
2091 15
2092 24
2093 20
2094 11
2095 14
2096 13
2097 13
2098 18
2099 16
2100 13
2101 18
2102 16
2103 11
2104 14
2105 13
2106 10
2107 19
2108 36
2109 28
2110 19
2111 36
2112 28
2113 12
2114 17
2115 15
2116 14
2117 21
2118 18
2119 21
2120 12
2121 17
2122 15
2123 13
2124 12
2125 10
2126 19
2127 36
2128 28
2129 19
2130 36
2131 28
2132 12
2133 17
2134 15
2135 14
2136 21
2137 18
2138 14
2139 21
2140 18
2141 12
2142 17
2143 15
2144 13
2145 12
2146 10
2147 19
2148 36
2149 28
2150 19
2151 36
2152 28
2153 12
2154 17
2155 15
2156 14
2157 21
2158 18
2159 14
2160 21
2161 18
2162 12
2163 17
2164 15
2165 13
2166 12
2167 15
2168 20
2169 15
2170 24
2171 20
2172 11
2173 14
2174 13
2175 13
2176 18
2177 16
2178 13
2179 18
2180 16
2181 11
2182 14
2183 13
2184 10
2185 19
2186 36
2187 19
2188 36
2189 28
2190 12
2191 17
2192 15
2193 21
2194 18
2195 14
2196 21
2197 18
2198 12
2199 17
2200 15
2201 13
2202 12
2203 14
2204 17
2205 26
2207 35
2208 26
2210 35
2211 19
2212 24
2213 22
2214 21
2215 28
2216 25
2217 21
2218 28
2219 25
2220 19
2221 24
2222 22
2223 20
2224 19
2225 17
2227 35
2228 26
2230 35
2231 19
2232 24
2233 22
2234 21
2235 28
2236 25
2237 21
2238 28
2239 25
2240 19
2241 24
2242 22
2243 20
2244 19
2245 22
2246 31
2247 27
2248 22
2249 31
2250 27
2251 18
2252 21
2253 20
2254 20
2255 25
2256 23
2257 20
2258 25
2259 23
2260 18
2261 21
2262 20
2263 17
2264 26
2266 35
2267 26
2269 35
2270 24
2271 22
2272 21
2273 28
2274 25
2275 21
2276 28
2277 25
2278 19
2279 24
2280 22
2281 20
2282 19
2283 17
2284 26
2286 35
2287 26
2289 35
2290 19
2291 24
2292 22
2293 21
2294 28
2295 25
2296 21
2297 28
2298 25
2299 19
2300 22
2301 20
2302 19
2303 17
2304 26
2306 35
2307 26
2309 35
2310 19
2311 24
2312 22
2313 21
2314 28
2315 25
2316 21
2317 28
2318 25
2319 19
2320 24
2321 22
2322 20
2323 19
2324 22
2325 31
2326 27
2327 22
2328 31
2329 27
2330 18
2331 21
2332 20
2333 20
2334 25
2335 23
2336 20
2337 25
2338 23
2339 18
2340 21
2341 20
2342 17
2343 26
2345 35
2346 26
2348 35
2349 24
2350 22
2351 21
2352 25
2353 21
2354 28
2355 25
2356 19
2357 24
2358 22
2359 20
2360 19
2361 11
2362 23
2364 32
2365 23
2367 32
2368 16
2369 21
2370 19
2371 25
2372 22
2373 18
2374 25
2375 22
2376 16
2377 21
2378 19
2379 17
2380 16
2381 14
2382 23
2384 32
2385 23
2387 32
2388 16
2389 21
2390 19
2391 18
2392 25
2393 22
2394 18
2395 25
2396 22
2397 16
2398 21
2399 19
2400 17
2401 16
2402 19
2403 28
2404 24
2405 19
2406 28
2407 24
2408 15
2409 18
2410 17
2411 17
2412 20
2413 17
2414 22
2415 20
2416 15
2417 18
2418 17
2419 14
2420 23
2422 32
2423 23
2425 32
2426 16
2427 21
2428 19
2429 18
2430 25
2431 22
2432 18
2433 25
2434 22
2435 16
2436 21
2437 19
2438 17
2439 16
2440 14
2441 23
2443 32
2444 23
2446 16
2447 21
2448 19
2449 18
2450 25
2451 22
2452 18
2453 22
2454 16
2455 21
2456 19
2457 16
2458 14
2459 23
2461 32
2462 23
2464 32
2465 16
2466 21
2467 19
2468 18
2469 25
2470 22
2471 18
2472 25
2473 22
2474 16
2475 21
2476 19
2477 17
2478 16
2479 19
2480 28
2481 24
2482 28
2483 24
2484 15
2485 18
2486 17
2487 17
2488 22
2489 20
2490 17
2491 22
2492 20
2493 15
2494 18
2495 17
2496 14
2497 23
2499 32
2500 23
2502 32
2503 16
2504 21
2505 19
2506 18
2507 25
2508 22
2509 18
2510 25
2511 22
2512 16
2513 21
2514 19
2515 17
2516 5
2517 8
2518 17
2519 34
2520 17
2521 34
2522 26
2523 10
2524 15
2525 13
2526 12
2527 19
2528 16
2529 12
2530 19
2531 16
2532 10
2533 15
2534 13
2535 11
2536 10
2537 8
2538 17
2539 34
2540 26
2541 17
2542 34
2543 26
2544 10
2545 15
2546 12
2547 19
2548 16
2549 12
2550 19
2551 16
2552 10
2553 15
2554 13
2555 11
2556 10
2557 13
2558 22
2559 18
2560 13
2561 22
2562 9
2563 12
2564 11
2565 16
2566 14
2567 11
2568 16
2569 14
2570 9
2571 12
2572 11
2573 8
2574 17
2575 34
2576 26
2577 17
2578 34
2579 26
2580 10
2581 15
2582 13
2583 12
2584 19
2585 16
2586 19
2587 16
2588 10
2589 15
2590 13
2591 11
2592 10
2593 8
2594 17
2595 34
2596 26
2597 17
2598 34
2599 26
2600 15
2601 13
2602 12
2603 19
2604 16
2605 12
2606 19
2607 16
2608 10
2609 15
2610 13
2611 11
2612 10
2613 8
2614 17
2615 34
2616 26
2617 17
2618 34
2619 26
2620 10
2621 15
2622 12
2623 16
2624 12
2625 19
2626 16
2627 10
2628 15
2629 13
2630 11
2631 10
2632 13
2633 22
2634 18
2635 13
2636 22
2637 18
2638 9
2639 12
2640 11
2641 11
2642 16
2643 14
2644 11
2645 9
2646 12
2647 11
2648 17
2649 34
2650 17
2651 34
2652 26
2653 10
2654 15
2655 13
2656 12
2657 19
2658 16
2659 12
2660 19
2661 16
2662 10
2663 13
2664 11
2665 10
2666 10
2667 13
2668 22
2669 39
2670 31
2671 22
2672 39
2673 31
2674 15
2675 20
2676 18
2677 17
2678 24
2679 21
2680 17
2681 24
2682 21
2683 15
2684 20
2685 18
2686 16
2687 15
2688 13
2689 22
2690 39
2691 31
2692 39
2693 31
2694 15
2695 20
2696 18
2697 17
2698 24
2699 21
2700 17
2701 24
2702 21
2703 15
2704 20
2705 18
2706 16
2707 18
2708 27
2709 23
2710 18
2711 27
2712 23
2713 14
2714 17
2715 16
2716 16
2717 21
2718 19
2719 16
2720 21
2721 19
2722 14
2723 17
2724 16
2725 13
2726 22
2727 39
2728 31
2729 22
2730 39
2731 31
2732 15
2733 20
2734 18
2735 17
2736 24
2737 21
2738 24
2739 21
2740 15
2741 20
2742 18
2743 16
2744 15
2745 13
2746 22
2747 39
2748 22
2749 39
2750 31
2751 15
2752 20
2753 18
2754 17
2755 24
2756 21
2757 17
2758 24
2759 21
2760 15
2761 20
2762 18
2763 16
2764 15
2765 13
2766 22
2767 39
2768 31
2769 22
2770 39
2771 31
2772 15
2773 20
2774 18
2775 17
2776 24
2777 21
2778 17
2779 24
2780 21
2781 15
2782 20
2783 18
2784 15
2785 18
2786 27
2787 23
2788 18
2789 27
2790 23
2791 14
2792 17
2793 16
2794 16
2795 21
2796 19
2797 16
2798 21
2799 19
2800 14
2801 17
2802 16
2803 13
2804 22
2805 39
2806 31
2807 22
2808 39
2809 31
2810 15
2811 20
2812 18
2813 17
2814 24
2815 21
2816 17
2817 24
2818 15
2819 18
2820 16
2821 8
2822 11
2823 20
2824 37
2825 29
2826 20
2827 37
2828 29
2829 13
2830 18
2831 16
2832 15
2833 22
2834 19
2835 15
2836 22
2837 19
2838 13
2839 18
2840 16
2841 14
2842 13
2843 11
2844 20
2845 37
2846 29
2847 20
2848 37
2849 29
2850 13
2851 18
2852 16
2853 15
2854 22
2855 19
2856 15
2857 22
2858 19
2859 13
2860 18
2861 16
2862 14
2863 13
2864 16
2865 25
2866 21
2867 16
2868 25
2869 21
2870 12
2871 15
2872 14
2873 14
2874 19
2875 17
2876 14
2877 19
2878 12
2879 15
2880 11
2881 20
2882 37
2883 29
2884 20
2885 37
2886 29
2887 13
2888 18
2889 16
2890 15
2891 22
2892 19
2893 15
2894 22
2895 19
2896 18
2897 16
2898 14
2899 13
2900 11
2901 20
2902 29
2903 20
2904 37
2905 29
2906 13
2907 16
2908 15
2909 22
2910 19
2911 15
2912 22
2913 19
2914 13
2915 18
2916 16
2917 14
2918 13
2919 11
2920 20
2921 37
2922 20
2923 37
2924 29
2925 13
2926 18
2927 16
2928 15
2929 22
2930 19
2931 15
2932 22
2933 13
2934 18
2935 16
2936 14
2937 13
2938 16
2939 25
2940 16
2941 12
2942 15
2943 14
2944 14
2945 19
2946 17
2947 14
2948 17
2949 12
2950 15
2951 14
2952 11
2953 20
2954 37
2955 29
2956 20
2957 29
2958 13
2959 18
2960 16
2961 15
2962 22
2963 19
2964 15
2965 22
2966 19
2967 13
2968 18
2969 16
2970 13
2971 6
2972 9
2973 18
2974 35
2975 27
2976 18
2977 35
2978 27
2979 11
2980 16
2981 14
2982 20
2983 17
2984 13
2985 20
2986 17
2987 11
2988 16
2989 14
2990 12
2991 11
2992 9
2993 35
2994 27
2995 18
2996 35
2997 27
2998 11
2999 14
3000 13
3001 20
3002 17
3003 13
3004 20
3005 17
3006 11
3007 16
3008 14
3009 12
3010 11
3011 14
3012 23
3013 19
3014 14
3015 23
3016 19
3017 10
3018 13
3019 12
3020 12
3021 17
3022 15
3023 12
3024 17
3025 15
3026 10
3027 12
3028 9
3029 18
3030 35
3031 27
3032 18
3033 35
3034 27
3035 11
3036 16
3037 14
3038 13
3039 20
3040 17
3041 13
3042 20
3043 17
3044 11
3045 16
3046 14
3047 12
3048 11
3049 9
3050 18
3051 35
3052 27
3053 18
3054 35
3055 27
3056 11
3057 16
3058 14
3059 13
3060 20
3061 17
3062 13
3063 20
3064 17
3065 11
3066 16
3067 14
3068 12
3069 9
3070 18
3071 35
3072 27
3073 18
3074 35
3075 27
3076 11
3077 16
3078 14
3079 13
3080 17
3081 13
3082 20
3083 16
3084 14
3085 12
3086 11
3087 14
3088 23
3089 19
3090 14
3091 23
3092 19
3093 10
3094 13
3095 12
3096 12
3097 17
3098 15
3099 12
3100 15
3101 10
3102 12
3103 9
3104 18
3105 35
3106 27
3107 18
3108 35
3109 27
3110 11
3111 16
3112 14
3113 13
3114 20
3115 17
3116 13
3117 20
3118 17
3119 11
3120 16
3121 14
3122 12
3123 11
3124 5
3125 8
3126 17
3127 34
3128 26
3129 17
3130 26
3131 15
3132 13
3133 12
3134 19
3135 16
3136 12
3137 19
3138 10
3139 15
3140 13
3141 11
3142 10
3143 17
3144 34
3145 26
3146 17
3147 34
3148 26
3149 10
3150 15
3151 13
3152 12
3153 19
3154 16
3155 12
3156 19
3157 16
3158 10
3159 15
3160 13
3161 11
3162 10
3163 13
3164 22
3165 13
3166 22
3167 18
3168 9
3169 12
3170 11
3171 11
3172 16
3173 14
3174 11
3175 16
3176 14
3177 9
3178 12
3179 11
3180 8
3181 17
3182 34
3183 26
3184 17
3185 34
3186 26
3187 10
3188 15
3189 13
3190 12
3191 19
3192 16
3193 12
3194 19
3195 16
3196 10
3197 15
3198 13
3199 11
3200 10
3201 8
3202 17
3203 34
3204 26
3205 17
3206 34
3207 26
3208 10
3209 15
3210 12
3211 19
3212 16
3213 12
3214 19
3215 16
3216 10
3217 15
3218 13
3219 11
3220 10
3221 8
3222 17
3223 34
3224 26
3225 17
3226 34
3227 26
3228 10
3229 15
3230 12
3231 19
3232 16
3233 12
3234 19
3235 16
3236 10
3237 15
3238 13
3239 11
3240 10
3241 13
3242 22
3243 18
3244 13
3245 22
3246 18
3247 9
3248 12
3249 11
3250 11
3251 16
3252 14
3253 11
3254 16
3255 14
3256 9
3257 12
3258 11
3259 8
3260 17
3261 34
3262 26
3263 17
3264 34
3265 26
3266 10
3267 15
3268 13
3269 12
3270 19
3271 16
3272 12
3273 19
3274 16
3275 10
3276 15
3277 13
3278 11
3279 10
3280 6
3281 15
3282 32
3283 15
3284 32
3285 24
3286 8
3287 13
3288 11
3289 10
3290 17
3291 14
3292 10
3293 17
3294 14
3295 8
3296 13
3297 11
3298 9
3299 8
3300 6
3301 15
3302 32
3303 24
3304 15
3305 32
3306 24
3307 8
3308 13
3309 11
3310 10
3311 17
3312 14
3313 10
3314 17
3315 14
3316 13
3317 11
3318 9
3319 8
3320 11
3321 20
3322 16
3323 11
3324 20
3325 16
3326 7
3327 10
3328 9
3329 9
3330 14
3331 12
3332 9
3333 14
3334 12
3335 10
3336 9
3337 6
3338 15
3339 32
3340 24
3341 15
3342 32
3343 24
3344 8
3345 11
3346 10
3347 17
3348 14
3349 10
3350 17
3351 14
3352 8
3353 13
3354 11
3355 9
3356 8
3357 6
3358 15
3359 32
3360 24
3361 15
3362 32
3363 24
3364 8
3365 13
3366 11
3367 10
3368 17
3369 14
3370 10
3371 17
3372 14
3373 8
3374 13
3375 11
3376 9
3377 6
3378 15
3379 32
3380 24
3381 15
3382 32
3383 24
3384 8
3385 13
3386 11
3387 10
3388 17
3389 14
3390 10
3391 17
3392 14
3393 8
3394 13
3395 11
3396 9
3397 8
3398 11
3399 20
3400 16
3401 11
3402 20
3403 16
3404 7
3405 10
3406 9
3407 9
3408 14
3409 12
3410 9
3411 14
3412 12
3413 10
3414 9
3415 6
3416 15
3417 32
3418 24
3419 15
3420 32
3421 24
3422 8
3423 13
3424 11
3425 10
3426 17
3427 14
3428 10
3429 14
3430 8
3431 13
3432 11
3433 9
3434 8
3435 12
3436 15
3437 24
3439 33
3440 24
3442 33
3443 17
3444 22
3445 20
3446 19
3447 26
3448 23
3449 26
3450 23
3451 17
3452 22
3453 20
3454 18
3455 17
3456 15
3457 24
3459 33
3460 24
3462 33
3463 17
3464 22
3465 20
3466 19
3467 26
3468 23
3469 19
3470 26
3471 17
3472 22
3473 20
3474 18
3475 17
3476 20
3477 29
3478 25
3479 20
3480 29
3481 25
3482 16
3483 19
3484 18
3485 18
3486 23
3487 21
3488 18
3489 23
3490 21
3491 16
3492 19
3493 15
3494 24
3496 33
3497 24
3499 33
3500 17
3501 22
3502 20
3503 19
3504 26
3505 23
3506 19
3507 26
3508 23
3509 17
3510 22
3511 20
3512 18
3513 17
3514 15
3515 24
3517 33
3518 24
3520 33
3521 17
3522 22
3523 20
3524 19
3525 26
3526 23
3527 19
3528 26
3529 23
3530 17
3531 22
3532 20
3533 18
3534 17
3535 15
3536 24
3538 33
3539 24
3541 33
3542 17
3543 22
3544 20
3545 19
3546 26
3547 23
3548 19
3549 26
3550 23
3551 17
3552 22
3553 20
3554 18
3555 17
3556 20
3557 29
3558 25
3559 20
3560 29
3561 25
3562 16
3563 19
3564 18
3565 18
3566 23
3567 21
3568 18
3569 23
3570 21
3571 16
3572 19
3573 18
3574 15
3575 24
3577 33
3578 24
3580 33
3581 17
3582 22
3583 20
3584 19
3585 26
3586 23
3587 19
3588 17
3589 22
3590 20
3591 18
3592 17
3593 29
3594 32
3600 37
3601 36
3604 36
3607 34
3608 39
3609 37
3610 35
3611 34
3612 32
3619 34
3620 39
3621 37
3626 34
3627 39
3628 37
3629 35
3630 34
3631 37
3634 37
3637 33
3638 36
3639 35
3640 35
3642 38
3643 35
3645 38
3646 33
3647 36
3648 35
3649 32
3656 34
3657 39
3658 37
3659 36
3662 36
3664 34
3665 39
3666 37
3667 35
3668 34
3669 32
3676 34
3677 39
3678 37
3679 36
3682 36
3685 34
3686 37
3687 35
3688 32
3695 34
3696 39
3697 37
3698 36
3701 36
3704 34
3705 39
3706 37
3707 35
3708 34
3709 37
3711 37
3714 33
3715 36
3716 35
3717 35
3719 38
3720 35
3722 38
3723 33
3724 36
3725 35
3726 32
3733 34
3734 39
3735 37
3736 36
3739 36
3742 34
3743 39
3744 37
3745 35
3746 34
3747 21
3748 24
3749 33
3752 33
3755 26
3756 31
3757 29
3758 28
3759 35
3760 32
3761 28
3762 35
3763 32
3764 26
3765 29
3766 27
3767 26
3768 24
3769 33
3772 33
3775 26
3776 31
3777 29
3778 28
3779 35
3780 32
3781 28
3782 35
3783 32
3784 26
3785 31
3786 29
3787 27
3788 26
3789 29
3790 38
3791 34
3792 29
3793 38
3794 34
3795 25
3796 28
3797 27
3798 32
3799 30
3800 27
3801 32
3802 30
3803 25
3804 28
3805 27
3806 24
3807 33
3810 33
3813 26
3814 31
3815 29
3816 28
3817 35
3818 32
3819 28
3820 35
3821 32
3822 26
3823 31
3824 29
3825 27
3826 26
3827 24
3828 33
3831 33
3834 26
3835 31
3836 28
3837 35
3838 32
3839 28
3840 32
3841 26
3842 31
3843 29
3844 27
3845 26
3846 33
3849 33
3852 26
3853 29
3854 28
3855 35
3856 32
3857 35
3858 32
3859 26
3860 31
3861 29
3862 27
3863 26
3864 29
3865 38
3866 34
3867 29
3868 38
3869 34
3870 25
3871 28
3872 27
3873 27
3874 32
3875 30
3876 27
3877 32
3878 30
3879 25
3880 28
3881 27
3882 24
3883 33
3886 33
3889 29
3890 28
3891 35
3892 32
3893 28
3894 35
3895 32
3896 26
3897 31
3898 29
3899 27
3900 26
3901 12
3902 15
3903 24
3905 33
3906 24
3908 33
3909 17
3910 22
3911 20
3912 19
3913 26
3914 23
3915 19
3916 26
3917 23
3918 17
3919 22
3920 20
3921 18
3922 17
3923 15
3924 24
3926 33
3927 24
3929 33
3930 17
3931 22
3932 20
3933 19
3934 26
3935 23
3936 19
3937 26
3938 23
3939 17
3940 20
3941 18
3942 17
3943 20
3944 29
3945 25
3946 20
3947 29
3948 25
3949 16
3950 19
3951 18
3952 18
3953 21
3954 18
3955 23
3956 21
3957 16
3958 19
3959 18
3960 15
3961 24
3963 33
3964 24
3966 33
3967 17
3968 22
3969 20
3970 19
3971 26
3972 23
3973 19
3974 26
3975 23
3976 17
3977 22
3978 20
3979 18
3980 17
3981 15
3982 24
3984 33
3985 24
3987 33
3988 17
3989 22
3990 20
3991 26
3992 23
3993 19
3994 26
3995 17
3996 22
3997 20
3998 18
3999 17
4000 15
4001 24
4003 33
4004 24
4006 33
4007 22
4008 20
4009 19
4010 26
4011 23
4012 19
4013 26
4014 23
4015 17
4016 22
4017 18
4018 17
4019 20
4020 29
4021 25
4022 20
4023 29
4024 25
4025 16
4026 19
4027 18
4028 18
4029 23
4030 18
4031 23
4032 21
4033 16
4034 19
4035 18
4036 15
4037 24
4039 33
4040 24
4042 33
4043 17
4044 22
4045 20
4046 19
4047 26
4048 23
4049 19
4050 26
4051 23
4052 17
4053 22
4054 20
4055 18
4056 17
4057 29
4058 32
4064 34
4065 39
4066 37
4067 36
4070 36
4073 34
4074 39
4075 37
4076 35
4077 34
4078 32
4084 34
4085 39
4086 37
4087 36
4090 36
4093 34
4094 39
4095 37
4096 35
4097 34
4098 37
4101 37
4104 33
4105 35
4106 35
4108 38
4109 35
4110 38
4111 33
4112 36
4113 35
4114 32
4121 34
4122 39
4123 37
4126 36
4129 34
4130 39
4131 37
4132 35
4133 34
4134 32
4141 34
4142 39
4143 37
4146 36
4149 34
4150 39
4151 37
4152 35
4153 34
4154 32
4161 34
4162 39
4163 37
4164 36
4167 36
4170 34
4171 39
4172 37
4173 35
4174 34
4175 37
4178 37
4180 33
4181 36
4182 35
4183 35
4185 38
4186 35
4188 38
4189 33
4190 36
4191 35
4192 32
4198 34
4199 39
4200 37
4201 36
4204 36
4207 34
4208 39
4209 37
4210 35
4211 34
4212 21
4213 24
4214 33
4217 33
4220 26
4221 31
4222 29
4223 28
4224 35
4225 32
4226 28
4227 35
4228 32
4229 26
4230 31
4231 29
4232 27
4233 26
4234 24
4235 33
4238 33
4241 26
4242 31
4243 29
4244 28
4245 35
4246 32
4247 28
4248 35
4249 32
4250 26
4251 31
4252 29
4253 27
4254 26
4255 29
4256 38
4257 34
4258 29
4259 38
4260 34
4261 25
4262 28
4263 27
4264 32
4265 30
4266 27
4267 32
4268 30
4269 25
4270 28
4271 27
4272 24
4273 33
4276 33
4279 26
4280 31
4281 29
4282 28
4283 35
4284 32
4285 28
4286 35
4287 32
4288 26
4289 31
4290 29
4291 26
4292 24
4293 33
4296 33
4299 26
4300 31
4301 29
4302 28
4303 35
4304 32
4305 28
4306 35
4307 32
4308 26
4309 31
4310 29
4311 27
4312 26
4313 24
4314 33
4317 33
4320 31
4321 29
4322 28
4323 35
4324 32
4325 32
4326 26
4327 31
4328 29
4329 27
4330 26
4331 29
4332 38
4333 34
4334 29
4335 38
4336 34
4337 25
4338 28
4339 27
4340 27
4341 32
4342 30
4343 27
4344 32
4345 30
4346 25
4347 28
4348 27
4349 24
4350 33
4355 26
4356 31
4357 29
4358 28
4359 35
4360 32
4361 28
4362 35
4363 32
4364 26
4365 31
4366 29
4367 27
4368 26
4369 5
4370 8
4371 17
4372 34
4373 26
4374 17
4375 34
4376 26
4377 10
4378 15
4379 13
4380 12
4381 12
4382 19
4383 16
4384 10
4385 15
4386 13
4387 11
4388 10
4389 8
4390 17
4391 34
4392 26
4393 17
4394 34
4395 26
4396 10
4397 15
4398 13
4399 12
4400 19
4401 16
4402 12
4403 19
4404 16
4405 10
4406 15
4407 13
4408 11
4409 10
4410 13
4411 22
4412 18
4413 13
4414 22
4415 18
4416 9
4417 12
4418 11
4419 16
4420 11
4421 14
4422 9
4423 12
4424 11
4425 8
4426 17
4427 34
4428 26
4429 17
4430 34
4431 26
4432 10
4433 15
4434 13
4435 12
4436 19
4437 16
4438 12
4439 19
4440 16
4441 15
4442 13
4443 11
4444 10
4445 8
4446 17
4447 34
4448 26
4449 17
4450 34
4451 26
4452 10
4453 13
4454 12
4455 19
4456 16
4457 12
4458 19
4459 16
4460 10
4461 15
4462 13
4463 11
4464 10
4465 8
4466 17
4467 34
4468 26
4469 17
4470 34
4471 10
4472 15
4473 13
4474 12
4475 19
4476 16
4477 12
4478 19
4479 16
4480 10
4481 15
4482 13
4483 11
4484 10
4485 22
4486 18
4487 13
4488 22
4489 18
4490 9
4491 12
4492 11
4493 11
4494 16
4495 14
4496 11
4497 16
4498 14
4499 9
4500 12
4501 11
4502 8
4503 17
4504 34
4505 26
4506 17
4507 34
4508 26
4509 10
4510 15
4511 13
4512 19
4513 16
4514 12
4515 19
4516 16
4517 10
4518 15
4519 11
4520 10
4521 10
4522 13
4523 22
4524 39
4525 31
4526 22
4527 39
4528 31
4529 15
4530 20
4531 18
4532 17
4533 24
4534 21
4535 24
4536 21
4537 15
4538 20
4539 18
4540 16
4541 15
4542 13
4543 22
4544 39
4545 31
4546 22
4547 39
4548 31
4549 15
4550 20
4551 18
4552 17
4553 24
4554 21
4555 17
4556 24
4557 21
4558 15
4559 20
4560 18
4561 16
4562 15
4563 18
4564 27
4565 23
4566 18
4567 27
4568 23
4569 14
4570 17
4571 16
4572 16
4573 21
4574 19
4575 16
4576 21
4577 19
4578 14
4579 17
4580 16
4581 13
4582 22
4583 39
4584 31
4585 39
4586 31
4587 15
4588 20
4589 18
4590 17
4591 24
4592 21
4593 17
4594 24
4595 15
4596 20
4597 18
4598 16
4599 15
4600 13
4601 22
4602 39
4603 31
4604 22
4605 39
4606 31
4607 15
4608 20
4609 18
4610 17
4611 24
4612 21
4613 17
4614 24
4615 21
4616 15
4617 20
4618 18
4619 16
4620 15
4621 13
4622 22
4623 39
4624 31
4625 22
4626 31
4627 15
4628 20
4629 18
4630 17
4631 24
4632 21
4633 17
4634 24
4635 21
4636 15
4637 20
4638 18
4639 15
4640 18
4641 27
4642 23
4643 18
4644 27
4645 23
4646 14
4647 17
4648 16
4649 16
4650 19
4651 16
4652 19
4653 14
4654 17
4655 16
4656 13
4657 39
4658 31
4659 22
4660 39
4661 31
4662 15
4663 20
4664 18
4665 17
4666 24
4667 21
4668 17
4669 24
4670 21
4671 15
4672 20
4673 18
4674 16
4675 8
4676 11
4677 20
4678 29
4679 20
4680 37
4681 29
4682 13
4683 18
4684 16
4685 15
4686 22
4687 19
4688 15
4689 22
4690 19
4691 13
4692 18
4693 16
4694 14
4695 13
4696 11
4697 20
4698 37
4699 29
4700 20
4701 37
4702 29
4703 13
4704 18
4705 16
4706 15
4707 22
4708 19
4709 15
4710 22
4711 19
4712 13
4713 18
4714 16
4715 14
4716 13
4717 16
4718 25
4719 21
4720 16
4721 25
4722 21
4723 12
4724 15
4725 14
4726 14
4727 19
4728 17
4729 14
4730 19
4731 17
4732 12
4733 15
4734 14
4735 11
4736 20
4737 37
4738 29
4739 20
4740 37
4741 29
4742 13
4743 18
4744 16
4745 15
4746 22
4747 19
4748 15
4749 22
4750 19
4751 13
4752 18
4753 16
4754 13
4755 11
4756 20
4757 37
4758 29
4759 20
4760 37
4761 13
4762 18
4763 16
4764 15
4765 22
4766 19
4767 15
4768 22
4769 19
4770 13
4771 18
4772 16
4773 14
4774 13
4775 11
4776 20
4777 37
4778 29
4779 20
4780 37
4781 29
4782 13
4783 18
4784 16
4785 15
4786 15
4787 22
4788 19
4789 13
4790 18
4791 16
4792 14
4793 13
4794 16
4795 25
4796 21
4797 16
4798 25
4799 21
4800 12
4801 15
4802 14
4803 14
4804 19
4805 17
4806 14
4807 19
4808 12
4809 15
4810 14
4811 11
4812 20
4813 37
4814 29
4815 20
4816 37
4817 29
4818 13
4819 18
4820 16
4821 15
4822 22
4823 19
4824 15
4825 22
4826 19
4827 13
4828 18
4829 16
4830 14
4831 13
4832 7
4833 10
4834 19
4835 36
4836 28
4837 19
4838 36
4839 28
4840 12
4841 17
4842 15
4843 14
4844 21
4845 18
4846 14
4847 21
4848 18
4849 12
4850 17
4851 15
4852 12
4853 10
4854 19
4855 36
4856 28
4857 19
4858 36
4859 28
4860 12
4861 17
4862 15
4863 21
4864 18
4865 14
4866 21
4867 18
4868 12
4869 17
4870 15
4871 13
4872 12
4873 15
4874 24
4875 20
4876 15
4877 24
4878 20
4879 11
4880 14
4881 13
4882 18
4883 16
4884 13
4885 18
4886 16
4887 11
4888 14
4889 13
4890 10
4891 19
4892 36
4893 28
4894 19
4895 36
4896 28
4897 12
4898 17
4899 15
4900 14
4901 21
4902 18
4903 14
4904 21
4905 18
4906 12
4907 17
4908 15
4909 13
4910 12
4911 10
4912 36
4913 28
4914 19
4915 36
4916 28
4917 12
4918 17
4919 15
4920 14
4921 21
4922 18
4923 14
4924 21
4925 18
4926 12
4927 17
4928 15
4929 13
4930 12
4931 10
4932 19
4933 36
4934 28
4935 36
4936 28
4937 12
4938 15
4939 14
4940 21
4941 18
4942 14
4943 21
4944 18
4945 17
4946 15
4947 13
4948 12
4949 15
4950 24
4951 20
4952 15
4953 24
4954 20
4955 11
4956 14
4957 13
4958 18
4959 16
4960 13
4961 18
4962 16
4963 11
4964 14
4965 13
4966 10
4967 19
4968 36
4969 28
4970 19
4971 36
4972 28
4973 12
4974 17
4975 15
4976 14
4977 21
4978 14
4979 21
4980 18
4981 12
4982 17
4983 15
4984 12
4985 14
4986 17
4987 26
4989 35
4990 26
4991 35
4992 19
4993 22
4994 21
4995 21
4996 28
4997 25
4998 19
4999 24
5000 22
5001 20
5002 19
5003 17
5004 26
5006 35
5007 26
5009 35
5010 19
5011 24
5012 22
5013 28
5014 25
5015 21
5016 28
5017 25
5018 19
5019 24
5020 22
5021 20
5022 19
5023 22
5024 31
5025 27
5026 22
5027 31
5028 27
5029 18
5030 21
5031 20
5032 20
5033 25
5034 23
5035 20
5036 25
5037 23
5038 18
5039 21
5040 20
5041 17
5042 26
5044 35
5045 26
5047 35
5048 19
5049 24
5050 22
5051 21
5052 28
5053 25
5054 21
5055 28
5056 25
5057 19
5058 24
5059 22
5060 20
5061 19
5062 17
5063 26
5065 35
5066 26
5068 35
5069 19
5070 24
5071 21
5072 28
5073 25
5074 21
5075 28
5076 25
5077 19
5078 24
5079 22
5080 20
5081 19
5082 17
5083 26
5085 35
5086 26
5088 35
5089 19
5090 24
5091 22
5092 21
5093 28
5094 25
5095 21
5096 28
5097 25
5098 19
5099 24
5100 22
5101 20
5102 19
5103 22
5104 31
5105 27
5106 22
5107 31
5108 27
5109 18
5110 20
5111 20
5112 25
5113 23
5114 20
5115 25
5116 23
5117 18
5118 21
5119 20
5120 17
5121 26
5123 35
5124 26
5126 35
5127 24
5128 22
5129 21
5130 28
5131 25
5132 21
5133 28
5134 25
5135 19
5136 24
5137 22
5138 20
5139 19
5140 11
5141 14
5142 23
5144 32
5145 23
5147 32
5148 16
5149 21
5150 19
5151 18
5152 25
5153 22
5154 18
5155 25
5156 22
5157 16
5158 21
5159 19
5160 17
5161 16
5162 14
5163 23
5165 32
5167 32
5168 16
5169 21
5170 19
5171 18
5172 25
5173 22
5174 18
5175 25
5176 22
5177 16
5178 21
5179 19
5180 17
5181 16
5182 19
5183 28
5184 24
5185 19
5186 24
5187 15
5188 18
5189 17
5190 17
5191 22
5192 20
5193 17
5194 22
5195 20
5196 15
5197 18
5198 17
5199 14
5200 23
5202 32
5203 23
5205 32
5206 16
5207 21
5208 19
5209 18
5210 25
5211 22
5212 18
5213 25
5214 22
5215 16
5216 19
5217 17
5218 16
5219 14
5220 23
5222 32
5223 23
5225 32
5226 16
5227 21
5228 19
5229 18
5230 25
5231 22
5232 18
5233 25
5234 22
5235 16
5236 19
5237 17
5238 16
5239 14
5240 23
5242 32
5243 23
5245 32
5246 16
5247 19
5248 18
5249 25
5250 22
5251 18
5252 25
5253 22
5254 16
5255 21
5256 19
5257 16
5258 19
5259 28
5260 24
5261 19
5262 28
5263 24
5264 15
5265 18
5266 17
5267 17
5268 22
5269 20
5270 17
5271 22
5272 20
5273 18
5274 17
5275 14
5276 23
5278 32
5279 23
5281 32
5282 16
5283 21
5284 19
5285 18
5286 25
5287 22
5288 18
5289 25
5290 22
5291 16
5292 21
5293 19
5294 17
5295 16
5296 7
5297 10
5298 19
5299 36
5300 28
5301 19
5302 36
5303 28
5304 12
5305 17
5306 15
5307 14
5308 21
5309 18
5310 21
5311 18
5312 12
5313 17
5314 15
5315 13
5316 12
5317 10
5318 19
5319 36
5320 28
5321 19
5322 36
5323 28
5324 12
5325 17
5326 15
5327 14
5328 21
5329 18
5330 14
5331 21
5332 18
5333 12
5334 17
5335 15
5336 13
5337 12
5338 15
5339 24
5340 20
5341 15
5342 24
5343 20
5344 11
5345 14
5346 13
5347 13
5348 18
5349 16
5350 13
5351 18
5352 16
5353 11
5354 14
5355 13
5356 10
5357 36
5358 28
5359 19
5360 36
5361 28
5362 12
5363 17
5364 15
5365 14
5366 18
5367 14
5368 21
5369 18
5370 12
5371 17
5372 15
5373 13
5374 12
5375 10
5376 19
5377 36
5378 28
5379 19
5380 36
5381 28
5382 12
5383 17
5384 15
5385 14
5386 18
5387 21
5388 18
5389 12
5390 17
5391 15
5392 13
5393 12
5394 10
5395 19
5396 36
5397 28
5398 19
5399 36
5400 28
5401 12
5402 17
5403 14
5404 21
5405 18
5406 14
5407 21
5408 18
5409 12
5410 17
5411 15
5412 13
5413 12
5414 15
5415 24
5416 20
5417 15
5418 24
5419 20
5420 11
5421 14
5422 13
5423 13
5424 18
5425 16
5426 13
5427 18
5428 16
5429 11
5430 14
5431 13
5432 10
5433 19
5434 36
5435 28
5436 19
5437 36
5438 28
5439 12
5440 17
5441 15
5442 14
5443 21
5444 18
5445 21
5446 18
5447 12
5448 17
5449 15
5450 13
5451 12
5452 14
5453 17
5454 26
5456 35
5457 26
5459 35
5460 19
5461 24
5462 22
5463 21
5464 28
5465 25
5466 21
5467 28
5468 25
5469 19
5470 24
5471 22
5472 20
5473 19
5474 17
5475 26
5477 35
5478 26
5479 35
5480 19
5481 24
5482 22
5483 21
5484 28
5485 25
5486 21
5487 28
5488 25
5489 19
5490 24
5491 22
5492 20
5493 19
5494 22
5495 31
5496 27
5497 22
5498 31
5499 27
5500 18
5501 21
5502 20
5503 20
5504 25
5505 23
5506 20
5507 25
5508 23
5509 18
5510 21
5511 26
5513 35
5514 26
5515 35
5516 19
5517 24
5518 22
5519 21
5520 28
5521 25
5522 21
5523 28
5524 25
5525 19
5526 24
5527 22
5528 20
5529 19
5530 17
5531 26
5533 35
5534 26
5536 35
5537 19
5538 24
5539 22
5540 21
5541 28
5542 25
5543 21
5544 28
5545 25
5546 19
5547 24
5548 22
5549 20
5550 19
5551 17
5552 26
5554 35
5555 26
5557 35
5558 19
5559 24
5560 22
5561 21
5562 25
5563 21
5564 28
5565 25
5566 19
5567 24
5568 22
5569 20
5570 19
5571 22
5572 31
5573 27
5574 22
5575 31
5576 27
5577 18
5578 21
5579 20
5580 20
5581 25
5582 20
5583 25
5584 23
5585 18
5586 21
5587 20
5588 17
5589 26
5591 35
5592 26
5594 35
5595 19
5596 24
5597 22
5598 21
5599 28
5600 25
5601 21
5602 28
5603 25
5604 19
5605 22
5606 20
5607 19
5608 11
5609 14
5610 23
5612 32
5613 23
5615 32
5616 16
5617 21
5618 19
5619 25
5620 18
5621 25
5622 22
5623 16
5624 21
5625 19
5626 17
5627 16
5628 14
5629 23
5631 32
5632 23
5634 32
5635 16
5636 21
5637 19
5638 18
5639 22
5640 18
5641 25
5642 22
5643 16
5644 21
5645 19
5646 17
5647 16
5648 19
5649 28
5650 24
5651 19
5652 28
5653 24
5654 15
5655 18
5656 17
5657 17
5658 22
5659 20
5660 17
5661 22
5662 20
5663 15
5664 18
5665 17
5666 14
5667 23
5669 23
5671 32
5672 16
5673 21
5674 19
5675 25
5676 22
5677 18
5678 25
5679 22
5680 16
5681 21
5682 19
5683 17
5684 16
5685 14
5686 23
5688 32
5689 23
5691 32
5692 16
5693 21
5694 19
5695 18
5696 25
5697 22
5698 18
5699 25
5700 22
5701 16
5702 21
5703 19
5704 17
5705 16
5706 14
5707 23
5709 32
5710 23
5712 32
5713 16
5714 21
5715 19
5716 18
5717 25
5718 22
5719 18
5720 25
5721 22
5722 16
5723 21
5724 19
5725 17
5726 19
5727 28
5728 24
5729 19
5730 28
5731 24
5732 15
5733 18
5734 17
5735 17
5736 22
5737 20
5738 17
5739 22
5740 20
5741 15
5742 18
5743 17
5744 23
5746 32
5747 23
5749 32
5750 16
5751 21
5752 19
5753 18
5754 25
5755 22
5756 18
5757 25
5758 22
5759 16
5760 21
5761 19
5762 17
5763 16
5764 5
5765 8
5766 17
5767 34
5768 26
5769 17
5770 34
5771 26
5772 10
5773 15
5774 13
5775 12
5776 19
5777 16
5778 12
5779 19
5780 16
5781 10
5782 11
5783 10
5784 8
5785 17
5786 34
5787 26
5788 17
5789 34
5790 26
5791 15
5792 13
5793 12
5794 19
5795 16
5796 12
5797 19
5798 16
5799 10
5800 15
5801 13
5802 11
5803 10
5804 13
5805 22
5806 18
5807 13
5808 22
5809 18
5810 9
5811 12
5812 11
5813 11
5814 16
5815 14
5816 11
5817 16
5818 14
5819 9
5820 12
5821 11
5822 8
5823 17
5824 34
5825 26
5826 17
5827 34
5828 26
5829 10
5830 15
5831 13
5832 12
5833 19
5834 16
5835 12
5836 19
5837 16
5838 10
5839 15
5840 13
5841 11
5842 10
5843 8
5844 17
5845 34
5846 26
5847 17
5848 26
5849 10
5850 15
5851 13
5852 12
5853 19
5854 16
5855 12
5856 19
5857 16
5858 10
5859 15
5860 13
5861 11
5862 10
5863 8
5864 17
5865 34
5866 26
5867 17
5868 34
5869 26
5870 10
5871 15
5872 13
5873 12
5874 19
5875 16
5876 12
5877 19
5878 16
5879 10
5880 15
5881 13
5882 11
5883 10
5884 13
5885 22
5886 18
5887 13
5888 22
5889 18
5890 9
5891 11
5892 11
5893 16
5894 14
5895 11
5896 16
5897 14
5898 9
5899 12
5900 11
5901 8
5902 17
5903 34
5904 26
5905 17
5906 34
5907 26
5908 10
5909 15
5910 13
5911 12
5912 19
5913 16
5914 12
5915 19
5916 16
5917 10
5918 15
5919 13
5920 11
5921 10
5922 10
5923 13
5924 22
5925 39
5926 31
5927 22
5928 39
5929 31
5930 15
5931 20
5932 18
5933 17
5934 24
5935 21
5936 17
5937 24
5938 21
5939 15
5940 20
5941 18
5942 16
5943 15
5944 13
5945 39
5946 31
5947 22
5948 39
5949 31
5950 15
5951 20
5952 18
5953 17
5954 24
5955 21
5956 17
5957 24
5958 21
5959 15
5960 20
5961 18
5962 16
5963 15
5964 18
5965 27
5966 23
5967 18
5968 27
5969 23
5970 14
5971 17
5972 16
5973 16
5974 21
5975 19
5976 16
5977 21
5978 19
5979 14
5980 17
5981 16
5982 13
5983 22
5984 39
5985 22
5986 39
5987 31
5988 15
5989 20
5990 18
5991 17
5992 24
5993 21
5994 24
5995 21
5996 15
5997 20
5998 18
5999 16
6000 15
6001 13
6002 22
6003 39
6004 31
6005 22
6006 39
6007 15
6008 20
6009 18
6010 17
6011 24
6012 21
6013 17
6014 24
6015 21
6016 15
6017 20
6018 18
6019 16
6020 15
6021 13
6022 22
6023 39
6024 31
6025 22
6026 39
6027 31
6028 15
6029 20
6030 18
6031 17
6032 24
6033 21
6034 17
6035 24
6036 21
6037 15
6038 20
6039 16
6040 18
6041 27
6042 23
6043 18
6044 27
6045 23
6046 14
6047 17
6048 16
6049 16
6050 21
6051 16
6052 21
6053 19
6054 14
6055 17
6056 16
6057 13
6058 22
6059 39
6060 31
6061 22
6062 39
6063 31
6064 15
6065 20
6066 18
6067 17
6068 24
6069 21
6070 17
6071 24
6072 21
6073 15
6074 20
6075 18
6076 16
6077 15
6078 8
6079 11
6080 37
6081 29
6082 37
6083 29
6084 13
6085 18
6086 15
6087 22
6088 15
6089 22
6090 19
6091 13
6092 18
6093 16
6094 14
6095 13
6096 11
6097 20
6098 29
6099 20
6100 37
6101 29
6102 13
6103 18
6104 16
6105 15
6106 22
6107 19
6108 15
6109 22
6110 19
6111 13
6112 18
6113 14
6114 13
6115 16
6116 25
6117 16
6118 25
6119 21
6120 12
6121 15
6122 14
6123 14
6124 19
6125 17
6126 14
6127 19
6128 17
6129 12
6130 15
6131 14
6132 11
6133 20
6134 37
6135 29
6136 20
6137 37
6138 29
6139 13
6140 18
6141 16
6142 15
6143 22
6144 19
6145 22
6146 19
6147 13
6148 18
6149 16
6150 14
6151 13
6152 11
6153 20
6154 37
6155 29
6156 20
6157 29
6158 13
6159 18
6160 16
6161 15
6162 22
6163 19
6164 15
6165 19
6166 13
6167 18
6168 16
6169 14
6170 13
6171 11
6172 20
6173 37
6174 29
6175 20
6176 37
6177 29
6178 13
6179 18
6180 16
6181 15
6182 22
6183 19
6184 15
6185 22
6186 19
6187 13
6188 18
6189 16
6190 14
6191 16
6192 25
6193 21
6194 16
6195 21
6196 12
6197 15
6198 14
6199 14
6200 19
6201 17
6202 14
6203 19
6204 17
6205 12
6206 15
6207 14
6208 11
6209 20
6210 37
6211 29
6212 20
6213 37
6214 29
6215 13
6216 18
6217 16
6218 15
6219 22
6220 19
6221 15
6222 22
6223 19
6224 13
6225 18
6226 16
6227 14
6228 13
6229 6
6230 9
6231 18
6232 35
6233 27
6234 35
6235 27
6236 11
6237 16
6238 14
6239 13
6240 20
6241 17
6242 13
6243 20
6244 17
6245 11
6246 16
6247 14
6248 12
6249 11
6250 9
6251 18
6252 35
6253 27
6254 18
6255 35
6256 27
6257 11
6258 16
6259 14
6260 13
6261 20
6262 17
6263 13
6264 20
6265 17
6266 11
6267 16
6268 14
6269 12
6270 11
6271 14
6272 23
6273 19
6274 14
6275 23
6276 19
6277 10
6278 13
6279 12
6280 17
6281 15
6282 12
6283 17
6284 15
6285 10
6286 13
6287 12
6288 9
6289 18
6290 35
6291 27
6292 18
6293 35
6294 27
6295 11
6296 16
6297 14
6298 13
6299 20
6300 17
6301 13
6302 20
6303 17
6304 11
6305 16
6306 14
6307 12
6308 11
6309 9
6310 18
6311 35
6312 27
6313 18
6314 35
6315 27
6316 11
6317 16
6318 14
6319 13
6320 20
6321 13
6322 20
6323 17
6324 11
6325 16
6326 14
6327 12
6328 9
6329 18
6330 35
6331 27
6332 18
6333 35
6334 27
6335 16
6336 14
6337 13
6338 20
6339 17
6340 13
6341 20
6342 17
6343 11
6344 16
6345 14
6346 12
6347 11
6348 14
6349 23
6350 19
6351 14
6352 23
6353 19
6354 10
6355 13
6356 12
6357 12
6358 17
6359 15
6360 12
6361 17
6362 15
6363 10
6364 13
6365 12
6366 9
6367 18
6368 35
6369 27
6370 18
6371 35
6372 27
6373 11
6374 14
6375 13
6376 20
6377 17
6378 13
6379 20
6380 17
6381 11
6382 16
6383 14
6384 12
6385 11
6386 5
6387 8
6388 17
6389 34
6390 17
6391 34
6392 26
6393 10
6394 15
6395 13
6396 12
6397 19
6398 16
6399 12
6400 19
6401 16
6402 10
6403 15
6404 13
6405 11
6406 10
6407 8
6408 34
6409 26
6410 17
6411 34
6412 26
6413 10
6414 15
6415 13
6416 12
6417 19
6418 12
6419 19
6420 16
6421 10
6422 15
6423 13
6424 11
6425 10
6426 13
6427 22
6428 18
6429 18
6430 12
6431 11
6432 11
6433 16
6434 14
6435 11
6436 16
6437 14
6438 9
6439 12
6440 11
6441 8
6442 17
6443 34
6444 26
6445 17
6446 34
6447 26
6448 10
6449 13
6450 12
6451 19
6452 12
6453 19
6454 16
6455 10
6456 15
6457 13
6458 11
6459 10
6460 8
6461 17
6462 34
6463 26
6464 17
6465 34
6466 26
6467 10
6468 15
6469 13
6470 12
6471 19
6472 16
6473 12
6474 19
6475 16
6476 10
6477 15
6478 13
6479 11
6480 10
6481 8
6482 17
6483 34
6484 26
6485 17
6486 34
6487 26
6488 10
6489 15
6490 13
6491 12
6492 19
6493 16
6494 12
6495 19
6496 16
6497 10
6498 15
6499 13
6500 10
6501 13
6502 22
6503 18
6504 13
6505 22
6506 18
6507 9
6508 12
6509 11
6510 11
6511 16
6512 14
6513 11
6514 16
6515 14
6516 9
6517 12
6518 11
6519 8
6520 17
6521 34
6522 26
6523 17
6524 34
6525 26
6526 10
6527 15
6528 13
6529 12
6530 19
6531 16
6532 12
6533 19
6534 16
6535 10
6536 15
6537 13
6538 11
6539 10
6540 8
6541 11
6542 20
6543 37
6544 29
6545 20
6546 37
6547 29
6548 13
6549 18
6550 16
6551 15
6552 22
6553 19
6554 15
6555 22
6556 19
6557 18
6558 16
6559 14
6560 13
6561 11
6562 20
6563 37
6564 29
6565 20
6566 37
6567 29
6568 13
6569 18
6570 16
6571 15
6572 22
6573 19
6574 15
6575 22
6576 19
6577 13
6578 18
6579 16
6580 14
6581 13
6582 16
6583 25
6584 21
6585 16
6586 25
6587 21
6588 12
6589 15
6590 14
6591 14
6592 19
6593 17
6594 14
6595 19
6596 17
6597 12
6598 15
6599 14
6600 11
6601 20
6602 37
6603 29
6604 20
6605 37
6606 29
6607 13
6608 18
6609 16
6610 15
6611 22
6612 19
6613 15
6614 22
6615 19
6616 13
6617 18
6618 16
6619 14
6620 13
6621 11
6622 20
6623 37
6624 29
6625 37
6626 29
6627 13
6628 18
6629 16
6630 15
6631 22
6632 19
6633 22
6634 19
6635 13
6636 18
6637 16
6638 14
6639 13
6640 11
6641 20
6642 37
6643 29
6644 20
6645 37
6646 29
6647 13
6648 18
6649 16
6650 15
6651 19
6652 15
6653 22
6654 19
6655 13
6656 18
6657 16
6658 14
6659 13
6660 16
6661 25
6662 21
6663 16
6664 25
6665 21
6666 12
6667 15
6668 14
6669 14
6670 19
6671 17
6672 14
6673 19
6674 17
6675 12
6676 15
6677 11
6678 20
6679 37
6680 29
6681 20
6682 37
6683 29
6684 13
6685 18
6686 16
6687 15
6688 22
6689 19
6690 15
6691 22
6692 19
6693 13
6694 18
6695 16
6696 14
6697 13
6698 17
6699 20
6700 29
6702 38
6703 29
6705 38
6706 22
6707 27
6708 25
6709 24
6710 31
6711 28
6712 24
6713 31
6714 28
6715 22
6716 27
6717 25
6718 23
6719 22
6720 20
6721 29
6723 29
6725 38
6726 22
6727 27
6728 25
6729 31
6730 28
6731 24
6732 31
6733 28
6734 22
6735 27
6736 25
6737 23
6738 22
6739 25
6740 34
6741 30
6742 25
6743 34
6744 30
6745 21
6746 24
6747 23
6748 23
6749 28
6750 26
6751 23
6752 28
6753 26
6754 21
6755 24
6756 23
6757 20
6758 38
6759 29
6761 38
6762 22
6763 27
6764 25
6765 24
6766 31
6767 28
6768 24
6769 31
6770 28
6771 22
6772 27
6773 25
6774 23
6775 22
6776 20
6777 29
6779 38
6780 29
6782 38
6783 22
6784 27
6785 25
6786 24
6787 31
6788 28
6789 24
6790 31
6791 28
6792 22
6793 27
6794 25
6795 23
6796 22
6797 20
6798 29
6800 38
6801 29
6803 38
6804 22
6805 27
6806 25
6807 24
6808 31
6809 28
6810 24
6811 31
6812 28
6813 22
6814 27
6815 25
6816 23
6817 25
6818 34
6819 30
6820 25
6821 34
6822 30
6823 21
6824 24
6825 23
6826 23
6827 28
6828 26
6829 23
6830 28
6831 21
6832 24
6833 23
6834 20
6835 29
6837 38
6838 29
6840 38
6841 22
6842 27
6843 25
6844 24
6845 31
6846 28
6847 24
6848 31
6849 28
6850 22
6851 27
6852 25
6853 23
6854 22
6855 13
6856 16
6857 25
6859 34
6860 25
6862 34
6863 18
6864 23
6865 21
6866 20
6867 24
6868 20
6869 27
6870 24
6871 18
6872 23
6873 21
6874 19
6875 18
6876 16
6877 25
6879 34
6880 25
6882 34
6883 18
6884 23
6885 21
6886 20
6887 27
6888 24
6889 20
6890 27
6891 24
6892 18
6893 23
6894 21
6895 19
6896 18
6897 21
6898 30
6899 26
6900 21
6901 30
6902 26
6903 17
6904 20
6905 19
6906 24
6907 22
6908 19
6909 22
6910 17
6911 20
6912 19
6913 16
6915 34
6917 34
6918 18
6919 21
6920 20
6921 27
6922 24
6923 20
6924 27
6925 24
6926 18
6927 23
6928 21
6929 19
6930 18
6931 16
6932 25
6934 34
6935 25
6937 34
6938 18
6939 21
6940 20
6941 27
6942 24
6943 20
6944 27
6945 24
6946 18
6947 23
6948 19
6949 18
6950 16
6951 25
6953 34
6954 25
6956 34
6957 18
6958 23
6959 21
6960 20
6961 27
6962 24
6963 20
6964 27
6965 24
6966 18
6967 23
6968 21
6969 19
6970 18
6971 21
6972 30
6973 26
6974 21
6975 30
6976 26
6977 17
6978 20
6979 19
6980 19
6981 24
6982 22
6983 19
6984 24
6985 22
6986 17
6987 20
6988 19
6989 16
6991 34
6992 25
6993 34
6994 18
6995 23
6996 21
6997 20
6998 27
6999 24
7000 20
7001 27
7002 24
7003 18
7004 23
7005 21
7006 19
7007 18
7008 8
7009 11
7010 20
7011 37
7012 29
7013 20
7014 37
7015 29
7016 13
7017 18
7018 16
7019 15
7020 22
7021 19
7022 15
7023 22
7024 19
7025 13
7026 18
7027 16
7028 14
7029 13
7030 11
7031 20
7032 37
7033 29
7034 20
7035 37
7036 29
7037 13
7038 18
7039 16
7040 15
7041 19
7042 15
7043 22
7044 19
7045 13
7046 18
7047 16
7048 14
7049 13
7050 16
7051 25
7052 21
7053 16
7054 25
7055 21
7056 12
7057 15
7058 14
7059 14
7060 19
7061 17
7062 14
7063 19
7064 17
7065 12
7066 15
7067 14
7068 11
7069 20
7070 37
7071 29
7072 20
7073 29
7074 13
7075 18
7076 16
7077 15
7078 22
7079 19
7080 15
7081 22
7082 19
7083 13
7084 18
7085 16
7086 14
7087 13
7088 11
7089 20
7090 37
7091 29
7092 20
7093 37
7094 29
7095 13
7096 18
7097 16
7098 15
7099 22
7100 19
7101 15
7102 22
7103 19
7104 13
7105 16
7106 14
7107 13
7108 11
7109 20
7110 37
7111 29
7112 20
7113 37
7114 29
7115 13
7116 18
7117 16
7118 15
7119 22
7120 19
7121 15
7122 22
7123 19
7124 13
7125 18
7126 16
7127 14
7128 13
7129 16
7130 25
7131 21
7132 16
7133 25
7134 21
7135 12
7136 15
7137 14
7138 14
7139 17
7140 14
7141 19
7142 17
7143 12
7144 15
7145 14
7146 11
7147 20
7148 37
7149 29
7150 20
7151 37
7152 29
7153 13
7154 18
7155 16
7156 15
7157 22
7158 19
7159 15
7160 22
7161 19
7162 13
7163 18
7164 16
7165 14
7166 13
7167 17
7168 20
7169 29
7171 38
7172 29
7174 38
7175 22
7176 27
7177 25
7178 24
7179 31
7180 28
7181 24
7182 31
7183 28
7184 22
7185 27
7186 25
7187 23
7188 22
7189 20
7190 29
7192 38
7193 29
7195 38
7196 22
7197 27
7198 25
7199 24
7200 31
7201 28
7202 24
7203 31
7204 28
7205 22
7206 27
7207 25
7208 23
7209 25
7210 34
7211 30
7212 25
7213 34
7214 30
7215 21
7216 24
7217 23
7218 23
7219 28
7220 26
7221 23
7222 28
7223 26
7224 21
7225 24
7226 23
7227 20
7228 29
7230 29
7232 38
7233 22
7234 27
7235 25
7236 24
7237 31
7238 28
7239 24
7240 31
7241 28
7242 22
7243 25
7244 23
7245 22
7246 20
7247 29
7249 38
7250 29
7252 38
7253 22
7254 27
7255 25
7256 24
7257 31
7258 28
7259 24
7260 31
7261 28
7262 22
7263 27
7264 25
7265 23
7266 22
7267 20
7268 29
7270 38
7271 29
7273 38
7274 22
7275 27
7276 25
7277 24
7278 31
7279 28
7280 24
7281 31
7282 28
7283 22
7284 27
7285 25
7286 23
7287 22
7288 25
7289 34
7290 30
7291 25
7292 34
7293 30
7294 21
7295 24
7296 23
7297 28
7298 26
7299 23
7300 28
7301 26
7302 21
7303 24
7304 23
7305 20
7306 29
7308 38
7309 29
7311 38
7312 22
7313 27
7314 25
7315 24
7316 31
7317 28
7318 24
7319 31
7320 28
7321 22
7322 27
7323 25
7324 23
7325 22
7326 13
7327 25
7329 34
7330 25
7332 34
7333 18
7334 23
7335 21
7336 20
7337 27
7338 24
7339 20
7340 27
7341 24
7342 18
7343 23
7344 21
7345 19
7346 18
7347 16
7348 25
7350 34
7351 25
7353 34
7354 18
7355 23
7356 21
7357 27
7358 24
7359 20
7360 24
7361 18
7362 23
7363 21
7364 19
7365 18
7366 21
7367 30
7368 26
7369 21
7370 30
7371 26
7372 17
7373 20
7374 19
7375 19
7376 24
7377 22
7378 19
7379 24
7380 22
7381 17
7382 20
7383 19
7384 16
7385 25
7387 34
7388 25
7390 34
7391 18
7392 23
7393 21
7394 20
7395 27
7396 24
7397 20
7398 27
7399 24
7400 18
7401 23
7402 21
7403 19
7404 18
7405 16
7406 25
7408 34
7409 25
7411 34
7412 23
7413 21
7414 20
7415 27
7416 24
7417 20
7418 27
7419 18
7420 23
7421 21
7422 19
7423 18
7424 16
7425 25
7427 34
7428 25
7430 34
7431 18
7432 23
7433 21
7434 20
7435 27
7436 24
7437 20
7438 27
7439 24
7440 18
7441 23
7442 21
7443 19
7444 18
7445 21
7446 30
7447 26
7448 21
7449 30
7450 26
7451 17
7452 20
7453 19
7454 19
7455 24
7456 22
7457 19
7458 24
7459 22
7460 20
7461 19
7462 16
7463 25
7465 34
7466 25
7467 34
7468 18
7469 23
7470 21
7471 20
7472 27
7473 24
7474 20
7475 27
7476 24
7477 18
7478 23
7479 21
7480 19
7481 18
7482 4
7483 7
7484 16
7485 33
7486 25
7487 16
7488 33
7489 25
7490 9
7491 14
7492 12
7493 11
7494 18
7495 15
7496 11
7497 18
7498 15
7499 9
7500 14
7501 12
7502 10
7503 9
7504 7
7505 16
7506 33
7507 25
7508 16
7509 25
7510 14
7511 12
7512 11
7513 18
7514 15
7515 11
7516 18
7517 15
7518 9
7519 14
7520 12
7521 10
7522 9
7523 12
7524 21
7525 17
7526 12
7527 21
7528 17
7529 8
7530 11
7531 10
7532 10
7533 13
7534 10
7535 15
7536 13
7537 8
7538 10
7539 16
7540 25
7541 16
7542 33
7543 25
7544 9
7545 14
7546 12
7547 11
7548 18
7549 11
7550 18
7551 15
7552 9
7553 14
7554 12
7555 10
7556 9
7557 7
7558 16
7559 33
7560 25
7561 16
7562 33
7563 25
7564 9
7565 14
7566 12
7567 11
7568 18
7569 11
7570 18
7571 15
7572 9
7573 14
7574 12
7575 10
7576 9
7577 7
7578 16
7579 33
7580 25
7581 16
7582 33
7583 25
7584 14
7585 11
7586 18
7587 15
7588 11
7589 18
7590 15
7591 9
7592 14
7593 12
7594 10
7595 9
7596 21
7597 17
7598 12
7599 21
7600 17
7601 8
7602 11
7603 10
7604 10
7605 15
7606 13
7607 10
7608 15
7609 13
7610 8
7611 10
7612 7
7613 16
7614 33
7615 25
7616 16
7617 33
7618 25
7619 9
7620 14
7621 12
7622 11
7623 18
7624 15
7625 11
7626 18
7627 15
7628 9
7629 14
7630 12
7631 10
7632 9
7633 7
7634 10
7635 19
7636 36
7637 28
7638 19
7639 36
7640 28
7641 12
7642 15
7643 14
7644 21
7645 18
7646 14
7647 21
7648 18
7649 12
7650 17
7651 13
7652 12
7653 10
7654 19
7655 36
7656 28
7657 19
7658 36
7659 28
7660 12
7661 17
7662 15
7663 14
7664 21
7665 18
7666 14
7667 18
7668 12
7669 17
7670 15
7671 13
7672 12
7673 15
7674 24
7675 20
7676 15
7677 24
7678 20
7679 11
7680 14
7681 13
7682 13
7683 18
7684 16
7685 13
7686 18
7687 16
7688 11
7689 14
7690 10
7691 36
7692 28
7693 19
7694 36
7695 28
7696 12
7697 17
7698 15
7699 14
7700 21
7701 18
7702 14
7703 21
7704 18
7705 12
7706 17
7707 15
7708 13
7709 12
7710 10
7711 19
7712 36
7713 28
7714 36
7715 28
7716 12
7717 17
7718 15
7719 14
7720 21
7721 18
7722 14
7723 21
7724 12
7725 17
7726 15
7727 13
7728 12
7729 10
7730 19
7731 36
7732 28
7733 19
7734 36
7735 28
7736 12
7737 17
7738 15
7739 14
7740 21
7741 18
7742 14
7743 21
7744 18
7745 12
7746 17
7747 15
7748 13
7749 12
7750 15
7751 24
7752 20
7753 24
7754 20
7755 11
7756 14
7757 13
7758 13
7759 18
7760 16
7761 13
7762 18
7763 16
7764 11
7765 14
7766 13
7767 10
7768 19
7769 36
7770 28
7771 19
7772 36
7773 28
7774 12
7775 17
7776 15
7777 14
7778 21
7779 18
7780 14
7781 21
7782 18
7783 12
7784 17
7785 15
7786 13
7787 12
7788 6
7789 9
7790 18
7791 35
7792 27
7793 18
7794 35
7795 27
7796 11
7797 16
7798 14
7799 13
7800 20
7801 17
7802 13
7803 20
7804 17
7805 11
7806 12
7807 11
7808 9
7809 18
7810 35
7811 27
7812 18
7813 35
7814 27
7815 11
7816 16
7817 13
7818 20
7819 17
7820 13
7821 20
7822 17
7823 11
7824 16
7825 14
7826 12
7827 11
7828 14
7829 23
7830 19
7831 14
7832 23
7833 19
7834 10
7835 13
7836 12
7837 12
7838 17
7839 15
7840 12
7841 17
7842 15
7843 10
7844 13
7845 12
7846 9
7847 18
7848 35
7849 27
7850 18
7851 35
7852 27
7853 16
7854 14
7855 13
7856 20
7857 13
7858 20
7859 17
7860 16
7861 14
7862 12
7863 11
7864 9
7865 18
7866 35
7867 27
7868 18
7869 35
7870 27
7871 11
7872 16
7873 14
7874 13
7875 20
7876 17
7877 13
7878 20
7879 17
7880 11
7881 16
7882 14
7883 12
7884 11
7885 9
7886 18
7887 35
7888 27
7889 18
7890 35
7891 27
7892 16
7893 13
7894 20
7895 17
7896 13
7897 20
7898 17
7899 11
7900 16
7901 14
7902 12
7903 11
7904 14
7905 23
7906 19
7907 14
7908 23
7909 19
7910 10
7911 13
7912 12
7913 12
7914 17
7915 15
7916 12
7917 15
7918 10
7919 13
7920 12
7921 9
7922 18
7923 35
7924 27
7925 18
7926 35
7927 27
7928 11
7929 16
7930 14
7931 13
7932 20
7933 17
7934 13
7935 20
7936 17
7937 11
7938 16
7939 14
7940 12
7941 11
7942 6
7943 18
7944 35
7945 27
7946 18
7947 35
7948 27
7949 11
7950 16
7951 14
7952 13
7953 17
7954 13
7955 20
7956 17
7957 11
7958 16
7959 14
7960 12
7961 11
7962 9
7963 35
7964 27
7965 18
7966 35
7967 27
7968 11
7969 16
7970 14
7971 13
7972 20
7973 17
7974 13
7975 20
7976 17
7977 11
7978 16
7979 14
7980 12
7981 11
7982 14
7983 19
7984 14
7985 23
7986 10
7987 13
7988 12
7989 12
7990 17
7991 15
7992 12
7993 17
7994 15
7995 10
7996 13
7997 12
7998 9
7999 18
8000 35
8001 27
8002 18
8003 35
8004 27
8005 11
8006 16
8007 14
8008 13
8009 20
8010 13
8011 20
8012 17
8013 11
8014 16
8015 14
8016 11
8017 18
8018 35
8019 27
8020 18
8021 35
8022 11
8023 16
8024 14
8025 13
8026 20
8027 17
8028 13
8029 20
8030 17
8031 11
8032 16
8033 14
8034 12
8035 11
8036 9
8037 18
8038 35
8039 27
8040 18
8041 35
8042 27
8043 11
8044 16
8045 14
8046 13
8047 20
8048 17
8049 13
8050 20
8051 17
8052 11
8053 16
8054 14
8055 12
8056 11
8057 14
8058 23
8059 19
8060 14
8061 23
8062 19
8063 10
8064 13
8065 12
8066 12
8067 17
8068 15
8069 12
8070 17
8071 15
8072 10
8073 13
8074 12
8075 9
8076 18
8077 35
8078 27
8079 18
8080 35
8081 27
8082 11
8083 16
8084 14
8085 13
8086 20
8087 17
8088 13
8089 20
8090 17
8091 11
8092 16
8093 14
8094 12
8095 11
8096 11
8097 14
8098 23
8100 32
8101 23
8103 32
8104 16
8105 21
8106 19
8107 18
8108 25
8109 22
8110 18
8111 25
8112 22
8113 16
8114 21
8115 19
8116 17
8117 16
8118 14
8119 23
8121 32
8122 23
8124 32
8125 16
8126 21
8127 19
8128 25
8129 22
8130 18
8131 25
8132 22
8133 16
8134 21
8135 19
8136 17
8137 16
8138 19
8139 28
8140 24
8141 19
8142 28
8143 24
8144 15
8145 18
8146 17
8147 17
8148 22
8149 20
8150 17
8151 22
8152 20
8153 15
8154 18
8155 17
8156 14
8157 23
8159 32
8160 23
8162 32
8163 16
8164 21
8165 19
8166 18
8167 25
8168 22
8169 18
8170 25
8171 22
8172 16
8173 21
8174 19
8175 17
8176 16
8177 14
8178 23
8180 32
8181 23
8182 32
8183 16
8184 21
8185 19
8186 18
8187 25
8188 22
8189 18
8190 25
8191 22
8192 16
8193 21
8194 19
8195 17
8196 16
8197 14
8198 23
8200 32
8201 23
8203 32
8204 16
8205 21
8206 19
8207 18
8208 25
8209 22
8210 18
8211 25
8212 22
8213 16
8214 21
8215 19
8216 17
8217 16
8218 19
8219 28
8220 24
8221 19
8222 28
8223 24
8224 15
8225 18
8226 17
8227 17
8228 22
8229 20
8230 17
8231 22
8232 20
8233 18
8234 17
8235 14
8236 23
8238 32
8239 23
8241 32
8242 16
8243 21
8244 19
8245 18
8246 25
8247 22
8248 18
8249 25
8250 22
8251 16
8252 21
8253 19
8254 17
8255 16
8256 9
8257 12
8258 21
8259 38
8260 30
8261 21
8262 38
8263 30
8264 14
8265 19
8266 17
8267 16
8268 23
8269 20
8270 16
8271 23
8272 20
8273 14
8274 19
8275 17
8276 15
8277 14
8278 12
8279 21
8280 38
8281 30
8282 21
8283 38
8284 30
8285 14
8286 19
8287 17
8288 16
8289 23
8290 20
8291 16
8292 20
8293 14
8294 19
8295 17
8296 15
8297 14
8298 17
8299 26
8300 22
8301 17
8302 26
8303 22
8304 13
8305 16
8306 15
8307 15
8308 20
8309 18
8310 15
8311 20
8312 18
8313 13
8314 16
8315 15
8316 12
8317 21
8318 38
8319 30
8320 21
8321 38
8322 30
8323 14
8324 19
8325 17
8326 23
8327 20
8328 16
8329 23
8330 20
8331 14
8332 19
8333 15
8334 14
8335 12
8336 21
8337 38
8338 30
8339 21
8340 38
8341 30
8342 14
8343 19
8344 17
8345 16
8346 23
8347 20
8348 16
8349 23
8350 20
8351 14
8352 19
8353 17
8354 15
8355 14
8356 12
8357 21
8358 38
8359 30
8360 21
8361 38
8362 30
8363 14
8364 17
8365 16
8366 23
8367 20
8368 16
8369 23
8370 20
8371 14
8372 19
8373 14
8374 17
8375 26
8376 22
8377 17
8378 26
8379 22
8380 13
8381 16
8382 15
8383 20
8384 18
8385 15
8386 20
8387 18
8388 13
8389 16
8390 15
8391 12
8392 21
8393 30
8394 21
8395 38
8396 30
8397 14
8398 19
8399 17
8400 16
8401 23
8402 20
8403 16
8404 23
8405 20
8406 14
8407 19
8408 17
8409 15
8410 14
8411 6
8412 9
8413 18
8414 35
8415 27
8416 18
8417 35
8418 27
8419 11
8420 16
8421 14
8422 13
8423 20
8424 17
8425 13
8426 20
8427 17
8428 11
8429 16
8430 14
8431 11
8432 9
8433 18
8434 35
8435 27
8436 18
8437 35
8438 27
8439 11
8440 16
8441 14
8442 13
8443 20
8444 17
8445 13
8446 20
8447 17
8448 11
8449 16
8450 14
8451 12
8452 11
8453 14
8454 23
8455 19
8456 14
8457 23
8458 10
8459 13
8460 12
8461 12
8462 17
8463 15
8464 12
8465 17
8466 15
8467 10
8468 13
8469 12
8470 9
8471 18
8472 35
8473 27
8474 18
8475 35
8476 27
8477 11
8478 16
8479 14
8480 13
8481 20
8482 17
8483 13
8484 20
8485 17
8486 11
8487 14
8488 12
8489 11
8490 9
8491 18
8492 35
8493 27
8494 18
8495 35
8496 27
8497 11
8498 16
8499 14
8500 13
8501 20
8502 17
8503 13
8504 20
8505 17
8506 11
8507 16
8508 14
8509 12
8510 11
8511 9
8512 18
8513 35
8514 27
8515 18
8516 27
8517 11
8518 16
8519 14
8520 13
8521 20
8522 17
8523 13
8524 20
8525 17
8526 11
8527 16
8528 14
8529 12
8530 11
8531 14
8532 23
8533 14
8534 23
8535 19
8536 10
8537 12
8538 12
8539 17
8540 15
8541 12
8542 17
8543 15
8544 10
8545 13
8546 12
8547 9
8548 18
8549 35
8550 27
8551 18
8552 35
8553 27
8554 11
8555 16
8556 14
8557 13
8558 20
8559 17
8560 13
8561 20
8562 17
8563 16
8564 14
8565 12
8566 11
8567 11
8568 14
8569 23
8571 32
8572 23
8573 32
8574 16
8575 21
8576 19
8577 18
8578 25
8579 22
8580 18
8581 25
8582 22
8583 16
8584 21
8585 19
8586 17
8587 16
8588 14
8589 23
8591 32
8592 23
8594 32
8595 16
8596 21
8597 19
8598 18
8599 25
8600 22
8601 18
8602 25
8603 22
8604 16
8605 21
8606 19
8607 17
8608 16
8609 19
8610 28
8611 24
8612 19
8613 28
8614 24
8615 15
8616 18
8617 17
8618 17
8619 22
8620 20
8621 17
8622 22
8623 20
8624 15
8625 18
8626 17
8627 14
8628 23
8630 32
8631 23
8633 32
8634 16
8635 21
8636 19
8637 18
8638 25
8639 22
8640 18
8641 25
8642 22
8643 16
8644 21
8645 19
8646 17
8647 16
8648 14
8650 32
8651 23
8653 32
8654 16
8655 21
8656 19
8657 18
8658 25
8659 22
8660 18
8661 25
8662 22
8663 16
8664 21
8665 19
8666 17
8667 16
8668 14
8669 23
8671 32
8672 23
8674 32
8675 16
8676 21
8677 19
8678 18
8679 25
8680 18
8681 25
8682 16
8683 21
8684 19
8685 17
8686 16
8687 19
8688 28
8689 24
8690 19
8691 28
8692 24
8693 15
8694 18
8695 17
8696 17
8697 22
8698 20
8699 17
8700 22
8701 20
8702 15
8703 17
8704 14
8705 23
8706 32
8707 23
8709 32
8710 16
8711 21
8712 19
8713 18
8714 25
8715 22
8716 18
8717 25
8718 22
8719 16
8720 21
8721 19
8722 17
8723 16
8724 9
8725 12
8726 21
8727 38
8728 30
8729 21
8730 38
8731 14
8732 19
8733 17
8734 16
8735 23
8736 20
8737 16
8738 23
8739 20
8740 14
8741 19
8742 17
8743 15
8744 14
8745 12
8746 21
8747 38
8748 30
8749 21
8750 38
8751 30
8752 19
8753 17
8754 16
8755 23
8756 20
8757 16
8758 23
8759 20
8760 14
8761 19
8762 15
8763 14
8764 17
8765 26
8766 17
8767 26
8768 22
8769 13
8770 16
8771 15
8772 15
8773 20
8774 18
8775 15
8776 20
8777 18
8778 13
8779 16
8780 15
8781 12
8782 21
8783 38
8784 30
8785 21
8786 38
8787 30
8788 14
8789 19
8790 17
8791 16
8792 23
8793 20
8794 16
8795 23
8796 20
8797 14
8798 19
8799 17
8800 15
8801 14
8802 12
8803 21
8804 38
8805 30
8806 21
8807 38
8808 30
8809 14
8810 19
8811 16
8812 23
8813 20
8814 16
8815 23
8816 20
8817 14
8818 19
8819 17
8820 15
8821 14
8822 12
8823 21
8824 38
8825 30
8826 21
8827 30
8828 14
8829 19
8830 17
8831 16
8832 23
8833 20
8834 16
8835 23
8836 20
8837 14
8838 17
8839 15
8840 14
8841 17
8842 26
8843 22
8844 17
8845 26
8846 22
8847 16
8848 15
8849 15
8850 20
8851 18
8852 15
8853 20
8854 18
8855 13
8856 16
8857 15
8858 12
8859 21
8860 38
8861 30
8862 21
8863 38
8864 30
8865 14
8866 19
8867 17
8868 16
8869 23
8870 20
8871 16
8872 23
8873 20
8874 14
8875 19
8876 17
8877 15
8878 14
8879 4
8880 7
8881 16
8882 33
8883 16
8884 33
8885 25
8886 9
8887 14
8888 12
8889 11
8890 18
8891 15
8892 11
8893 15
8894 9
8895 14
8896 12
8897 10
8898 9
8899 7
8900 16
8901 33
8902 25
8903 33
8904 25
8905 9
8906 14
8907 12
8908 11
8909 18
8910 15
8911 11
8912 18
8913 15
8914 9
8915 14
8916 12
8917 10
8918 9
8919 12
8920 21
8921 17
8922 12
8923 21
8924 17
8925 8
8926 11
8927 10
8928 10
8929 15
8930 13
8931 10
8932 15
8933 13
8934 8
8935 11
8936 10
8937 7
8938 16
8939 33
8940 25
8941 16
8942 33
8943 25
8944 9
8945 14
8946 12
8947 11
8948 18
8949 15
8950 11
8951 18
8952 15
8953 9
8954 12
8955 10
8956 9
8957 7
8958 16
8959 33
8960 25
8961 16
8962 33
8963 25
8964 9
8965 14
8966 12
8967 11
8968 18
8969 15
8970 11
8971 18
8972 15
8973 9
8974 14
8975 12
8976 10
8977 9
8978 7
8979 16
8980 33
8981 25
8982 16
8983 33
8984 25
8985 9
8986 14
8987 12
8988 11
8989 18
8990 15
8991 11
8992 18
8993 15
8994 9
8995 14
8996 12
8997 10
8998 9
8999 12
9000 21
9001 17
9002 21
9003 17
9004 8
9005 11
9006 10
9007 10
9008 15
9009 10
9010 15
9011 13
9012 8
9013 11
9014 10
9015 7
9016 16
9017 33
9018 25
9019 16
9020 33
9021 25
9022 9
9023 14
9024 12
9025 11
9026 18
9027 15
9028 11
9029 18
9030 15
9031 9
9032 14
9033 12
9034 10
9035 9
9036 7
9037 10
9038 19
9039 36
9040 28
9041 19
9042 36
9043 28
9044 12
9045 17
9046 15
9047 14
9048 21
9049 18
9050 14
9051 21
9052 18
9053 12
9054 15
9055 13
9056 12
9057 10
9058 19
9059 36
9060 19
9061 36
9062 28
9063 12
9064 17
9065 15
9066 14
9067 21
9068 18
9069 14
9070 21
9071 18
9072 12
9073 17
9074 15
9075 13
9076 12
9077 15
9078 24
9079 20
9080 15
9081 24
9082 20
9083 11
9084 13
9085 18
9086 16
9087 13
9088 18
9089 11
9090 14
9091 13
9092 10
9093 19
9094 36
9095 28
9096 19
9097 28
9098 12
9099 17
9100 15
9101 21
9102 18
9103 14
9104 21
9105 18
9106 12
9107 17
9108 15
9109 12
9110 10
9111 19
9112 36
9113 28
9114 19
9115 36
9116 28
9117 12
9118 17
9119 15
9120 14
9121 21
9122 18
9123 14
9124 21
9125 18
9126 12
9127 17
9128 15
9129 13
9130 12
9131 10
9132 19
9133 36
9134 28
9135 36
9136 28
9137 12
9138 17
9139 15
9140 14
9141 21
9142 18
9143 14
9144 21
9145 18
9146 12
9147 17
9148 15
9149 12
9150 15
9151 24
9152 20
9153 15
9154 24
9155 20
9156 11
9157 14
9158 13
9159 13
9160 18
9161 16
9162 13
9163 18
9164 16
9165 11
9166 14
9167 13
9168 10
9169 19
9170 36
9171 28
9172 19
9173 36
9174 28
9175 12
9176 17
9177 15
9178 14
9179 21
9180 18
9181 14
9182 21
9183 18
9184 12
9185 17
9186 15
9187 13
9188 12
9189 6
9190 9
9191 18
9192 35
9193 27
9194 18
9195 35
9196 27
9197 11
9198 16
9199 14
9200 13
9201 20
9202 17
9203 13
9204 20
9205 17
9206 11
9207 16
9208 14
9209 12
9210 11
9211 9
9212 18
9213 35
9214 27
9215 18
9216 35
9217 27
9218 11
9219 16
9220 14
9221 20
9222 17
9223 13
9224 20
9225 17
9226 11
9227 14
9228 12
9229 11
9230 14
9231 23
9232 19
9233 14
9234 23
9235 19
9236 10
9237 13
9238 12
9239 12
9240 15
9241 12
9242 17
9243 15
9244 10
9245 13
9246 12
9247 9
9248 18
9249 35
9250 27
9251 18
9252 35
9253 27
9254 11
9255 16
9256 14
9257 13
9258 20
9259 17
9260 13
9261 20
9262 17
9263 11
9264 16
9265 12
9266 11
9267 9
9268 35
9269 27
9270 18
9271 27
9272 11
9273 16
9274 14
9275 13
9276 20
9277 13
9278 20
9279 17
9280 11
9281 16
9282 14
9283 12
9284 11
9285 9
9286 18
9287 35
9288 27
9289 18
9290 35
9291 27
9292 11
9293 16
9294 14
9295 20
9296 17
9297 13
9298 20
9299 17
9300 11
9301 16
9302 12
9303 14
9304 23
9305 19
9306 14
9307 23
9308 19
9309 10
9310 13
9311 12
9312 12
9313 17
9314 15
9315 12
9316 17
9317 15
9318 10
9319 13
9320 12
9321 9
9322 18
9323 35
9324 27
9325 18
9326 35
9327 27
9328 11
9329 16
9330 14
9331 13
9332 20
9333 17
9334 13
9335 20
9336 17
9337 11
9338 16
9339 14
9340 12
9341 11
9342 3
9343 6
9344 15
9345 32
9346 24
9347 15
9348 32
9349 24
9350 8
9351 13
9352 11
9353 10
9354 17
9355 14
9356 10
9357 17
9358 14
9359 8
9360 13
9361 11
9362 9
9363 8
9364 6
9365 15
9366 32
9367 24
9368 15
9369 32
9370 24
9371 8
9372 13
9373 11
9374 10
9375 17
9376 14
9377 10
9378 17
9379 14
9380 8
9381 13
9382 11
9383 9
9384 8
9385 11
9386 20
9387 16
9388 11
9389 20
9390 16
9391 7
9392 10
9393 9
9394 14
9395 12
9396 9
9397 14
9398 12
9399 7
9400 10
9401 9
9402 6
9403 15
9404 32
9405 24
9406 15
9407 32
9408 24
9409 8
9410 13
9411 11
9412 10
9413 17
9414 14
9415 10
9416 17
9417 14
9418 8
9419 13
9420 11
9421 9
9422 8
9423 6
9424 15
9425 32
9426 24
9427 15
9428 24
9429 8
9430 13
9431 11
9432 10
9433 17
9434 14
9435 10
9436 17
9437 14
9438 8
9439 13
9440 11
9441 9
9442 8
9443 6
9444 15
9445 32
9446 24
9447 15
9448 32
9449 24
9450 8
9451 13
9452 11
9453 10
9454 17
9455 14
9456 10
9457 14
9458 8
9459 11
9460 9
9461 8
9462 11
9463 20
9464 16
9465 11
9466 20
9467 16
9468 7
9469 10
9470 9
9471 9
9472 14
9473 12
9474 9
9475 14
9476 12
9477 7
9478 10
9479 9
9480 6
9481 15
9482 32
9483 24
9484 15
9485 24
9486 8
9487 13
9488 11
9489 10
9490 17
9491 14
9492 10
9493 17
9494 14
9495 8
9496 13
9497 11
9498 9
9499 8
9500 12
9501 15
9502 24
9504 33
9505 24
9507 33
9508 22
9509 20
9510 19
9511 26
9512 23
9513 19
9514 26
9515 23
9516 17
9517 22
9518 20
9519 18
9520 17
9521 15
9522 24
9524 33
9525 24
9527 33
9528 17
9529 22
9530 20
9531 19
9532 26
9533 23
9534 19
9535 26
9536 23
9537 17
9538 22
9539 20
9540 18
9541 17
9542 20
9543 29
9544 25
9545 20
9546 29
9547 25
9548 16
9549 19
9550 18
9551 18
9552 21
9553 18
9554 23
9555 21
9556 16
9557 19
9558 18
9559 15
9560 24
9562 33
9563 24
9565 33
9566 17
9567 22
9568 20
9569 19
9570 26
9571 23
9572 19
9573 26
9574 23
9575 17
9576 22
9577 20
9578 18
9579 17
9580 15
9581 24
9583 33
9584 24
9586 33
9587 17
9588 22
9589 20
9590 19
9591 26
9592 23
9593 19
9594 26
9595 23
9596 17
9597 22
9598 20
9599 18
9600 17
9601 15
9602 24
9604 33
9605 24
9607 33
9608 17
9609 22
9610 20
9611 19
9612 26
9613 23
9614 19
9615 26
9616 23
9617 17
9618 22
9619 20
9620 18
9621 17
9622 20
9623 29
9624 25
9625 20
9626 29
9627 25
9628 16
9629 19
9630 18
9631 18
9632 23
9633 21
9634 18
9635 23
9636 21
9637 16
9638 19
9639 18
9640 15
9641 24
9643 33
9644 24
9646 33
9647 17
9648 22
9649 20
9650 19
9651 26
9652 23
9653 19
9654 26
9655 23
9656 17
9657 22
9658 20
9659 18
9660 17
9661 29
9662 32
9669 34
9670 39
9671 37
9672 36
9675 36
9678 34
9679 39
9680 37
9681 35
9682 34
9683 32
9690 34
9691 39
9692 37
9693 36
9696 36
9699 34
9700 39
9701 37
9702 35
9703 34
9704 37
9707 37
9710 33
9711 36
9712 35
9713 35
9715 38
9716 35
9717 38
9718 33
9719 36
9720 32
9727 34
9728 39
9729 37
9730 36
9733 36
9736 34
9737 39
9738 37
9739 35
9740 34
9741 32
9747 34
9748 39
9749 37
9750 36
9753 36
9756 34
9757 39
9758 37
9759 35
9760 34
9761 32
9768 34
9769 39
9770 37
9771 36
9774 36
9777 34
9778 39
9779 37
9780 35
9781 34
9782 37
9785 37
9788 33
9789 36
9790 35
9791 35
9793 38
9794 35
9796 38
9797 33
9798 36
9799 35
9800 32
9807 34
9808 39
9809 37
9810 36
9813 36
9816 34
9817 39
9818 37
9819 35
9820 34
9821 21
9822 24
9823 33
9826 33
9829 26
9830 31
9831 29
9832 28
9833 35
9834 32
9835 28
9836 35
9837 32
9838 26
9839 31
9840 29
9841 27
9842 26
9843 24
9844 33
9847 33
9850 26
9851 31
9852 29
9853 28
9854 35
9855 32
9856 28
9857 35
9858 32
9859 26
9860 31
9861 29
9862 27
9863 26
9864 29
9865 38
9866 34
9867 29
9868 38
9869 34
9870 25
9871 28
9872 27
9873 27
9874 32
9875 30
9876 27
9877 32
9878 30
9879 28
9880 27
9881 24
9882 33
9885 33
9888 26
9889 31
9890 29
9891 28
9892 35
9893 32
9894 28
9895 35
9896 32
9897 26
9898 31
9899 29
9900 27
9901 26
9902 24
9903 33
9906 33
9909 26
9910 31
9911 29
9912 28
9913 35
9914 28
9915 35
9916 32
9917 26
9918 31
9919 29
9920 27
9921 26
9922 24
9923 33
9926 33
9929 26
9930 31
9931 29
9932 28
9933 35
9934 32
9935 28
9936 35
9937 32
9938 26
9939 31
9940 29
9941 27
9942 26
9943 29
9944 38
9945 34
9946 29
9947 38
9948 34
9949 25
9950 28
9951 27
9952 27
9953 32
9954 27
9955 32
9956 30
9957 25
9958 28
9959 27
9960 24
9961 33
9964 33
9967 26
9968 31
9969 29
9970 28
9971 35
9972 32
9973 28
9974 35
9975 32
9976 26
9977 31
9978 29
9979 27
9980 26
9981 12
9982 15
9983 24
9985 33
9986 24
9988 33
9989 17
9990 22
9991 20
9992 19
9993 26
9994 23
9995 19
9996 26
9997 17
9998 22
9999 20
10000 18
10001 17
10002 15
10003 24
10005 33
10006 24
10008 33
10009 17
10010 22
10011 20
10012 19
10013 26
10014 23
10015 19
10016 26
10017 23
10018 17
10019 22
10020 20
10021 18
10022 17
10023 20
10024 29
10025 25
10026 20
10027 29
10028 25
10029 16
10030 19
10031 18
10032 18
10033 23
10034 21
10035 18
10036 23
10037 21
10038 16
10039 19
10040 18
10041 15
10042 24
10044 33
10045 24
10047 33
10048 17
10049 22
10050 20
10051 19
10052 26
10053 23
10054 19
10055 26
10056 23
10057 17
10058 22
10059 20
10060 18
10061 17
10062 15
10063 24
10064 33
10065 24
10066 33
10067 17
10068 22
10069 20
10070 19
10071 26
10072 23
10073 19
10074 26
10075 23
10076 17
10077 22
10078 20
10079 18
10080 17
10081 15
10082 24
10084 33
10085 24
10087 33
10088 17
10089 22
10090 20
10091 19
10092 26
10093 23
10094 19
10095 26
10096 23
10097 17
10098 22
10099 20
10100 18
10101 17
10102 20
10103 29
10104 25
10105 20
10106 29
10107 25
10108 16
10109 19
10110 18
10111 18
10112 23
10113 21
10114 18
10115 23
10116 16
10117 19
10118 18
10119 15
10120 24
10122 33
10123 24
10124 33
10125 17
10126 22
10127 20
10128 19
10129 26
10130 23
10131 19
10132 26
10133 23
10134 17
10135 22
10136 20
10137 18
10138 17
10139 29
10140 32
10147 34
10148 39
10149 37
10150 36
10153 36
10156 34
10157 39
10158 37
10159 35
10160 34
10161 32
10168 34
10169 37
10170 36
10173 36
10176 34
10177 39
10178 37
10179 35
10180 34
10181 37
10184 37
10187 33
10188 36
10189 35
10191 38
10192 35
10194 38
10195 33
10196 36
10197 35
10198 32
10205 34
10206 39
10207 37
10208 36
10211 36
10214 34
10215 39
10216 37
10217 35
10218 34
10219 32
10226 39
10227 37
10228 36
10231 36
10234 34
10235 39
10236 35
10237 34
10238 32
10245 34
10246 39
10247 37
10248 36
10251 36
10254 34
10255 39
10256 37
10257 35
10258 34
10259 37
10262 37
10265 33
10266 36
10267 35
10268 38
10269 35
10271 38
10272 33
10273 36
10274 35
10275 32
10282 34
10283 39
10284 37
10285 36
10288 36
10291 34
10292 39
10293 35
10294 34
10295 21
10296 24
10297 33
10300 33
10303 26
10304 31
10305 29
10306 28
10307 35
10308 32
10309 28
10310 35
10311 32
10312 26
10313 31
10314 29
10315 26
10316 24
10317 33
10320 33
10322 26
10323 31
10324 29
10325 28
10326 35
10327 32
10328 28
10329 35
10330 32
10331 26
10332 31
10333 29
10334 27
10335 26
10336 29
10337 38
10338 34
10339 29
10340 38
10341 34
10342 25
10343 28
10344 27
10345 27
10346 32
10347 30
10348 27
10349 32
10350 30
10351 25
10352 28
10353 27
10354 24
10357 33
10360 26
10361 31
10362 29
10363 28
10364 35
10365 32
10366 28
10367 35
10368 32
10369 26
10370 31
10371 29
10372 27
10373 26
10374 24
10375 33
10378 33
10381 26
10382 31
10383 29
10384 28
10385 35
10386 32
10387 28
10388 35
10389 32
10390 26
10391 31
10392 29
10393 27
10394 26
10395 24
10396 33
10398 33
10400 26
10401 31
10402 29
10403 28
10404 35
10405 32
10406 28
10407 35
10408 32
10409 26
10410 31
10411 29
10412 27
10413 26
10414 29
10415 38
10416 34
10417 29
10418 38
10419 34
10420 25
10421 28
10422 27
10423 27
10424 32
10425 30
10426 27
10427 32
10428 30
10429 25
10430 28
10431 27
10432 24
10433 33
10436 33
10439 26
10440 31
10441 29
10442 28
10443 35
10444 32
10445 28
10446 35
10447 32
10448 26
10449 31
10450 29
10451 27
10452 5
10453 8
10454 17
10455 34
10456 26
10457 17
10458 34
10459 26
10460 10
10461 13
10462 12
10463 19
10464 16
10465 12
10466 19
10467 16
10468 10
10469 15
10470 13
10471 11
10472 10
10473 8
10474 17
10475 34
10476 26
10477 17
10478 34
10479 26
10480 15
10481 13
10482 12
10483 16
10484 12
10485 19
10486 16
10487 10
10488 15
10489 13
10490 11
10491 10
10492 13
10493 22
10494 18
10495 13
10496 22
10497 18
10498 9
10499 12
10500 11
10501 16
10502 14
10503 11
10504 16
10505 14
10506 9
10507 12
10508 11
10509 8
10510 17
10511 34
10512 26
10513 17
10514 34
10515 26
10516 10
10517 15
10518 13
10519 19
10520 16
10521 12
10522 19
10523 16
10524 10
10525 15
10526 13
10527 11
10528 10
10529 8
10530 17
10531 26
10532 17
10533 34
10534 26
10535 10
10536 15
10537 13
10538 12
10539 16
10540 12
10541 19
10542 16
10543 10
10544 15
10545 13
10546 10
10547 8
10548 17
10549 34
10550 26
10551 34
10552 26
10553 10
10554 15
10555 13
10556 12
10557 19
10558 16
10559 12
10560 19
10561 16
10562 10
10563 15
10564 13
10565 11
10566 10
10567 13
10568 22
10569 18
10570 13
10571 22
10572 18
10573 9
10574 12
10575 11
10576 11
10577 16
10578 14
10579 11
10580 16
10581 14
10582 9
10583 12
10584 11
10585 8
10586 17
10587 26
10588 17
10589 34
10590 26
10591 10
10592 15
10593 13
10594 12
10595 19
10596 16
10597 12
10598 19
10599 16
10600 10
10601 15
10602 13
10603 11
10604 10
10605 10
10606 13
10607 22
10608 39
10609 31
10610 22
10611 39
10612 31
10613 15
10614 20
10615 18
10616 17
10617 24
10618 21
10619 17
10620 24
10621 21
10622 15
10623 20
10624 18
10625 15
10626 13
10627 22
10628 39
10629 22
10630 39
10631 31
10632 15
10633 20
10634 18
10635 17
10636 24
10637 21
10638 17
10639 24
10640 21
10641 20
10642 18
10643 16
10644 15
10645 18
10646 27
10647 23
10648 18
10649 27
10650 23
10651 14
10652 17
10653 16
10654 16
10655 21
10656 19
10657 16
10658 21
10659 19
10660 14
10661 17
10662 16
10663 13
10664 22
10665 39
10666 31
10667 39
10668 31
10669 15
10670 20
10671 18
10672 17
10673 21
10674 17
10675 24
10676 21
10677 15
10678 20
10679 18
10680 16
10681 15
10682 13
10683 39
10684 31
10685 22
10686 39
10687 31
10688 15
10689 20
10690 17
10691 24
10692 21
10693 17
10694 24
10695 21
10696 15
10697 20
10698 18
10699 16
10700 15
10701 13
10702 22
10703 39
10704 31
10705 22
10706 39
10707 31
10708 15
10709 20
10710 18
10711 17
10712 24
10713 17
10714 24
10715 21
10716 15
10717 20
10718 18
10719 16
10720 15
10721 18
10722 27
10723 23
10724 18
10725 27
10726 23
10727 14
10728 17
10729 16
10730 16
10731 21
10732 19
10733 16
10734 21
10735 19
10736 14
10737 17
10738 16
10739 13
10740 22
10741 39
10742 31
10743 22
10744 39
10745 31
10746 15
10747 20
10748 18
10749 17
10750 24
10751 21
10752 17
10753 24
10754 21
10755 15
10756 20
10757 18
10758 16
10759 15
10760 8
10761 11
10762 20
10763 37
10764 29
10765 20
10766 37
10767 29
10768 13
10769 18
10770 16
10771 15
10772 22
10773 19
10774 15
10775 22
10776 19
10777 13
10778 18
10779 16
10780 14
10781 13
10782 11
10783 20
10784 37
10785 29
10786 20
10787 37
10788 29
10789 13
10790 18
10791 16
10792 15
10793 22
10794 19
10795 15
10796 22
10797 19
10798 13
10799 18
10800 16
10801 14
10802 13
10803 16
10804 25
10805 21
10806 16
10807 25
10808 21
10809 12
10810 15
10811 14
10812 14
10813 19
10814 17
10815 14
10816 19
10817 17
10818 12
10819 15
10820 14
10821 11
10822 20
10823 37
10824 29
10825 20
10826 37
10827 29
10828 13
10829 18
10830 16
10831 15
10832 22
10833 19
10834 15
10835 22
10836 19
10837 13
10838 18
10839 16
10840 14
10841 13
10842 11
10843 20
10844 37
10845 29
10846 20
10847 37
10848 29
10849 18
10850 16
10851 15
10852 22
10853 19
10854 15
10855 22
10856 19
10857 13
10858 18
10859 16
10860 14
10861 13
10862 11
10863 20
10864 37
10865 29
10866 20
10867 37
10868 29
10869 13
10870 16
10871 15
10872 22
10873 19
10874 15
10875 22
10876 19
10877 13
10878 18
10879 16
10880 14
10881 13
10882 16
10883 25
10884 21
10885 16
10886 25
10887 21
10888 12
10889 15
10890 14
10891 14
10892 19
10893 17
10894 14
10895 19
10896 17
10897 12
10898 15
10899 14
10900 11
10901 20
10902 37
10903 29
10904 20
10905 37
10906 29
10907 13
10908 18
10909 16
10910 15
10911 22
10912 19
10913 15
10914 22
10915 19
10916 13
10917 18
10918 16
10919 14
10920 13
10921 7
10922 10
10923 19
10924 36
10925 28
10926 19
10927 36
10928 28
10929 12
10930 17
10931 15
10932 14
10933 21
10934 18
10935 14
10936 21
10937 18
10938 12
10939 17
10940 15
10941 13
10942 12
10943 10
10944 19
10945 36
10946 28
10947 19
10948 36
10949 28
10950 12
10951 15
10952 14
10953 21
10954 18
10955 14
10956 21
10957 18
10958 12
10959 17
10960 15
10961 13
10962 12
10963 15
10964 24
10965 20
10966 15
10967 24
10968 20
10969 11
10970 14
10971 13
10972 13
10973 18
10974 16
10975 13
10976 18
10977 16
10978 11
10979 14
10980 13
10981 10
10982 19
10983 36
10984 28
10985 36
10986 28
10987 12
10988 15
10989 14
10990 21
10991 14
10992 21
10993 18
10994 12
10995 17
10996 15
10997 13
10998 12
10999 10
11000 19
11001 36
11002 28
11003 19
11004 36
11005 28
11006 12
11007 17
11008 15
11009 14
11010 21
11011 18
11012 14
11013 21
11014 18
11015 12
11016 17
11017 15
11018 13
11019 12
11020 19
11021 36
11022 28
11023 19
11024 36
11025 28
11026 12
11027 17
11028 15
11029 14
11030 18
11031 14
11032 21
11033 12
11034 17
11035 13
11036 12
11037 15
11038 24
11039 20
11040 15
11041 24
11042 20
11043 11
11044 14
11045 13
11046 13
11047 16
11048 13
11049 18
11050 16
11051 11
11052 14
11053 13
11054 10
11055 19
11056 36
11057 28
11058 19
11059 36
11060 28
11061 12
11062 17
11063 15
11064 14
11065 21
11066 18
11067 14
11068 21
11069 18
11070 12
11071 17
11072 15
11073 13
11074 12
11075 14
11076 17
11077 26
11079 35
11080 26
11082 35
11083 19
11084 24
11085 22
11086 21
11087 28
11088 25
11089 21
11090 28
11091 25
11092 19
11093 24
11094 22
11095 20
11096 19
11097 17
11098 26
11100 35
11101 26
11103 35
11104 19
11105 24
11106 21
11107 28
11108 25
11109 21
11110 28
11111 25
11112 19
11113 24
11114 22
11115 20
11116 19
11117 22
11118 31
11119 27
11120 22
11121 31
11122 27
11123 18
11124 21
11125 20
11126 20
11127 25
11128 23
11129 20
11130 25
11131 23
11132 18
11133 21
11134 20
11135 17
11136 26
11138 26
11140 35
11141 19
11142 24
11143 22
11144 21
11145 28
11146 25
11147 21
11148 28
11149 25
11150 19
11151 24
11152 22
11153 20
11154 19
11155 17
11156 26
11158 35
11159 26
11161 35
11162 19
11163 24
11164 22
11165 21
11166 28
11167 25
11168 21
11169 28
11170 25
11171 19
11172 22
11173 20
11174 19
11175 17
11176 26
11178 35
11179 26
11181 35
11182 19
11183 24
11184 22
11185 21
11186 28
11187 25
11188 21
11189 28
11190 25
11191 19
11192 22
11193 20
11194 19
11195 22
11196 31
11197 27
11198 22
11199 31
11200 27
11201 18
11202 21
11203 20
11204 25
11205 23
11206 20
11207 25
11208 23
11209 18
11210 21
11211 20
11212 17
11213 26
11215 35
11216 26
11218 35
11219 19
11220 24
11221 22
11222 21
11223 28
11224 25
11225 21
11226 28
11227 25
11228 19
11229 24
11230 22
11231 20
11232 19
11233 11
11234 14
11235 23
11237 32
11238 23
11240 32
11241 16
11242 21
11243 19
11244 18
11245 25
11246 22
11247 18
11248 25
11249 22
11250 16
11251 21
11252 19
11253 17
11254 16
11255 14
11256 23
11258 32
11259 23
11261 32
11262 16
11263 19
11264 18
11265 25
11266 22
11267 18
11268 25
11269 22
11270 16
11271 21
11272 19
11273 17
11274 16
11275 19
11276 28
11277 24
11278 19
11279 28
11280 24
11281 15
11282 18
11283 17
11284 17
11285 22
11286 20
11287 17
11288 22
11289 20
11290 15
11291 18
11292 17
11293 14
11294 23
11296 32
11297 23
11299 32
11300 16
11301 21
11302 19
11303 18
11304 25
11305 22
11306 18
11307 25
11308 22
11309 21
11310 19
11311 17
11312 16
11313 14
11314 23
11316 32
11317 23
11319 32
11320 16
11321 21
11322 19
11323 18
11324 25
11325 22
11326 18
11327 25
11328 22
11329 16
11330 21
11331 19
11332 17
11333 16
11334 23
11337 32
11338 16
11339 19
11340 18
11341 25
11342 22
11343 18
11344 25
11345 22
11346 16
11347 21
11348 19
11349 17
11350 16
11351 19
11352 28
11353 24
11354 19
11355 28
11356 15
11357 18
11358 17
11359 17
11360 22
11361 20
11362 17
11363 22
11364 20
11365 15
11366 18
11367 17
11368 14
11369 23
11371 32
11372 23
11374 32
11375 16
11376 21
11377 19
11378 18
11379 25
11380 22
11381 18
11382 25
11383 22
11384 16
11385 21
11386 19
11387 17
11388 7
11389 10
11390 19
11391 36
11392 28
11393 19
11394 36
11395 28
11396 12
11397 17
11398 15
11399 14
11400 21
11401 18
11402 14
11403 21
11404 18
11405 12
11406 17
11407 15
11408 13
11409 12
11410 10
11411 19
11412 36
11413 28
11414 19
11415 36
11416 28
11417 17
11418 15
11419 14
11420 21
11421 18
11422 14
11423 21
11424 12
11425 17
11426 15
11427 13
11428 12
11429 15
11430 24
11431 20
11432 15
11433 24
11434 20
11435 11
11436 14
11437 13
11438 13
11439 18
11440 16
11441 13
11442 18
11443 11
11444 14
11445 13
11446 10
11447 19
11448 36
11449 28
11450 19
11451 36
11452 28
11453 12
11454 17
11455 15
11456 14
11457 21
11458 18
11459 14
11460 21
11461 18
11462 12
11463 17
11464 13
11465 12
11466 10
11467 19
11468 36
11469 28
11470 19
11471 36
11472 28
11473 12
11474 17
11475 15
11476 14
11477 21
11478 18
11479 18
11480 12
11481 17
11482 15
11483 13
11484 12
11485 10
11486 19
11487 36
11488 28
11489 19
11490 36
11491 28
11492 12
11493 17
11494 14
11495 21
11496 18
11497 14
11498 21
11499 18
11500 12
11501 17
11502 15
11503 13
11504 12
11505 15
11506 24
11507 20
11508 15
11509 24
11510 20
11511 11
11512 14
11513 13
11514 13
11515 18
11516 16
11517 13
11518 18
11519 16
11520 11
11521 14
11522 13
11523 10
11524 19
11525 36
11526 28
11527 19
11528 28
11529 12
11530 17
11531 15
11532 14
11533 21
11534 18
11535 14
11536 21
11537 18
11538 12
11539 17
11540 15
11541 13
11542 12
11543 14
11544 17
11545 26
11547 35
11548 26
11550 35
11551 19
11552 24
11553 22
11554 28
11555 25
11556 21
11557 28
11558 25
11559 19
11560 24
11561 22
11562 20
11563 19
11564 17
11565 26
11567 35
11568 26
11570 35
11571 19
11572 24
11573 22
11574 21
11575 28
11576 25
11577 21
11578 28
11579 25
11580 19
11581 24
11582 22
11583 20
11584 19
11585 22
11586 31
11587 27
11588 22
11589 31
11590 27
11591 18
11592 21
11593 20
11594 20
11595 25
11596 23
11597 20
11598 25
11599 23
11600 18
11601 21
11602 20
11603 17
11604 26
11606 35
11607 26
11609 19
11610 24
11611 21
11612 28
11613 25
11614 21
11615 28
11616 25
11617 19
11618 24
11619 22
11620 20
11621 19
11622 17
11623 26
11625 35
11626 26
11628 35
11629 19
11630 24
11631 22
11632 21
11633 28
11634 25
11635 21
11636 28
11637 25
11638 19
11639 24
11640 22
11641 20
11642 17
11643 26
11645 35
11646 26
11648 35
11649 24
11650 22
11651 21
11652 28
11653 25
11654 21
11655 28
11656 25
11657 19
11658 24
11659 22
11660 20
11661 19
11662 22
11663 31
11664 27
11665 22
11666 31
11667 27
11668 18
11669 21
11670 20
11671 20
11672 25
11673 20
11674 25
11675 23
11676 18
11677 21
11678 20
11679 17
11680 26
11682 35
11683 26
11685 35
11686 19
11687 24
11688 21
11689 28
11690 25
11691 21
11692 25
11693 19
11694 24
11695 22
11696 20
11697 19
11698 11
11699 14
11700 23
11702 32
11703 23
11705 32
11706 16
11707 21
11708 19
11709 18
11710 25
11711 22
11712 18
11713 25
11714 22
11715 16
11716 21
11717 19
11718 17
11719 16
11720 23
11722 32
11723 23
11724 32
11725 16
11726 21
11727 19
11728 18
11729 25
11730 22
11731 18
11732 25
11733 22
11734 16
11735 21
11736 19
11737 17
11738 16
11739 19
11740 28
11741 24
11742 19
11743 28
11744 24
11745 15
11746 18
11747 17
11748 22
11749 20
11750 17
11751 22
11752 20
11753 15
11754 18
11755 17
11756 14
11757 23
11759 32
11760 23
11762 32
11763 21
11764 19
11765 18
11766 25
11767 22
11768 18
11769 25
11770 22
11771 16
11772 21
11773 19
11774 17
11775 16
11776 14
11777 23
11779 32
11780 23
11782 32
11783 16
11784 21
11785 19
11786 18
11787 25
11788 22
11789 18
11790 25
11791 22
11792 16
11793 21
11794 19
11795 17
11796 16
11797 14
11798 23
11800 32
11801 23
11803 32
11804 16
11805 21
11806 19
11807 18
11808 22
11809 18
11810 25
11811 22
11812 16
11813 21
11814 19
11815 17
11816 16
11817 19
11818 28
11819 24
11820 19
11821 28
11822 24
11823 15
11824 18
11825 17
11826 17
11827 22
11828 20
11829 17
11830 22
11831 20
11832 15
11833 18
11834 17
11835 14
11836 23
11838 32
11839 23
11841 32
11842 16
11843 21
11844 19
11845 18
11846 25
11847 22
11848 18
11849 25
11850 22
11851 16
11852 21
11853 19
11854 17
11855 16
11856 5
11857 17
11858 34
11859 26
11860 17
11861 34
11862 26
11863 10
11864 15
11865 19
11866 16
11867 12
11868 19
11869 16
11870 10
11871 15
11872 13
11873 11
11874 10
11875 8
11876 17
11877 34
11878 26
11879 17
11880 34
11881 26
11882 10
11883 15
11884 13
11885 12
11886 19
11887 16
11888 12
11889 19
11890 16
11891 10
11892 15
11893 13
11894 11
11895 10
11896 13
11897 22
11898 18
11899 13
11900 22
11901 18
11902 12
11903 11
11904 11
11905 16
11906 14
11907 11
11908 16
11909 14
11910 9
11911 12
11912 11
11913 8
11914 17
11915 34
11916 26
11917 17
11918 34
11919 26
11920 10
11921 15
11922 13
11923 12
11924 19
11925 16
11926 12
11927 19
11928 16
11929 10
11930 15
11931 13
11932 11
11933 10
11934 8
11935 17
11936 34
11937 26
11938 17
11939 34
11940 26
11941 10
11942 15
11943 13
11944 12
11945 19
11946 16
11947 12
11948 19
11949 16
11950 10
11951 15
11952 13
11953 11
11954 10
11955 8
11956 17
11957 34
11958 26
11959 34
11960 26
11961 10
11962 15
11963 13
11964 12
11965 19
11966 16
11967 12
11968 19
11969 16
11970 10
11971 15
11972 13
11973 11
11974 10
11975 22
11976 18
11977 13
11978 22
11979 18
11980 9
11981 12
11982 11
11983 11
11984 16
11985 14
11986 11
11987 16
11988 14
11989 9
11990 12
11991 11
11992 8
11993 17
11994 34
11995 26
11996 17
11997 34
11998 26
11999 10
12000 15
12001 13
12002 12
12003 19
12004 16
12005 12
12006 19
12007 16
12008 10
12009 15
12010 13
12011 11
12012 10
12013 10
12014 13
12015 22
12016 39
12017 31
12018 22
12019 39
12020 31
12021 15
12022 18
12023 17
12024 24
12025 21
12026 17
12027 24
12028 21
12029 15
12030 20
12031 18
12032 15
12033 13
12034 22
12035 39
12036 31
12037 22
12038 39
12039 31
12040 15
12041 20
12042 18
12043 17
12044 24
12045 21
12046 17
12047 24
12048 21
12049 15
12050 20
12051 18
12052 16
12053 15
12054 18
12055 27
12056 23
12057 18
12058 27
12059 23
12060 14
12061 17
12062 16
12063 16
12064 21
12065 19
12066 16
12067 21
12068 19
12069 14
12070 17
12071 13
12072 22
12073 39
12074 31
12075 22
12076 39
12077 31
12078 15
12079 20
12080 18
12081 17
12082 24
12083 21
12084 17
12085 24
12086 21
12087 15
12088 20
12089 18
12090 16
12091 15
12092 13
12093 22
12094 39
12095 31
12096 22
12097 39
12098 31
12099 15
12100 20
12101 18
12102 17
12103 24
12104 21
12105 17
12106 24
12107 21
12108 15
12109 20
12110 18
12111 16
12112 15
12113 13
12114 22
12115 31
12116 22
12117 39
12118 31
12119 15
12120 20
12121 18
12122 17
12123 24
12124 21
12125 17
12126 24
12127 21
12128 15
12129 20
12130 18
12131 16
12132 15
12133 18
12134 27
12135 23
12136 18
12137 27
12138 23
12139 14
12140 17
12141 16
12142 21
12143 19
12144 16
12145 21
12146 19
12147 14
12148 17
12149 16
12150 13
12151 22
12152 39
12153 31
12154 22
12155 39
12156 31
12157 15
12158 20
12159 18
12160 17
12161 24
12162 21
12163 17
12164 24
12165 21
12166 20
12167 18
12168 16
12169 15
12170 8
12171 11
12172 20
12173 37
12174 29
12175 20
12176 37
12177 29
12178 13
12179 18
12180 16
12181 15
12182 22
12183 19
12184 15
12185 22
12186 19
12187 13
12188 18
12189 16
12190 14
12191 13
12192 11
12193 20
12194 37
12195 29
12196 20
12197 37
12198 29
12199 13
12200 18
12201 16
12202 15
12203 22
12204 19
12205 15
12206 22
12207 19
12208 13
12209 18
12210 14
12211 13
12212 16
12213 25
12214 21
12215 16
12216 25
12217 21
12218 12
12219 15
12220 14
12221 14
12222 19
12223 17
12224 14
12225 19
12226 17
12227 12
12228 15
12229 14
12230 11
12231 37
12232 29
12233 20
12234 37
12235 29
12236 13
12237 18
12238 16
12239 15
12240 22
12241 19
12242 15
12243 22
12244 19
12245 13
12246 18
12247 16
12248 14
12249 13
12250 11
12251 20
12252 37
12253 29
12254 20
12255 37
12256 29
12257 18
12258 16
12259 15
12260 22
12261 19
12262 15
12263 22
12264 19
12265 13
12266 18
12267 16
12268 14
12269 13
12270 11
12271 20
12272 37
12273 29
12274 20
12275 37
12276 29
12277 13
12278 16
12279 15
12280 22
12281 19
12282 15
12283 22
12284 19
12285 13
12286 18
12287 16
12288 14
12289 13
12290 16
12291 25
12292 16
12293 25
12294 21
12295 12
12296 15
12297 14
12298 14
12299 19
12300 17
12301 14
12302 19
12303 17
12304 12
12305 15
12306 11
12307 20
12308 37
12309 20
12310 37
12311 29
12312 13
12313 16
12314 15
12315 22
12316 19
12317 15
12318 22
12319 19
12320 13
12321 18
12322 16
12323 14
12324 13
12325 6
12326 9
12327 18
12328 35
12329 27
12330 35
12331 11
12332 16
12333 14
12334 13
12335 20
12336 17
12337 13
12338 20
12339 17
12340 11
12341 16
12342 14
12343 12
12344 11
12345 9
12346 18
12347 35
12348 27
12349 18
12350 27
12351 11
12352 16
12353 14
12354 13
12355 20
12356 17
12357 13
12358 20
12359 17
12360 11
12361 16
12362 14
12363 12
12364 11
12365 14
12366 23
12367 19
12368 14
12369 23
12370 19
12371 13
12372 12
12373 12
12374 17
12375 15
12376 12
12377 17
12378 15
12379 10
12380 13
12381 12
12382 9
12383 18
12384 35
12385 27
12386 18
12387 35
12388 11
12389 16
12390 14
12391 13
12392 20
12393 17
12394 13
12395 20
12396 17
12397 11
12398 16
12399 14
12400 12
12401 11
12402 9
12403 18
12404 35
12405 27
12406 18
12407 35
12408 27
12409 11
12410 16
12411 14
12412 13
12413 20
12414 17
12415 13
12416 20
12417 17
12418 11
12419 16
12420 14
12421 12
12422 11
12423 9
12424 18
12425 35
12426 27
12427 18
12428 35
12429 27
12430 11
12431 16
12432 14
12433 13
12434 17
12435 13
12436 20
12437 17
12438 11
12439 16
12440 14
12441 12
12442 11
12443 14
12444 23
12445 14
12446 23
12447 19
12448 10
12449 13
12450 12
12451 12
12452 17
12453 15
12454 12
12455 17
12456 15
12457 10
12458 13
12459 9
12460 18
12461 35
12462 27
12463 18
12464 35
12465 27
12466 11
12467 16
12468 14
12469 13
12470 20
12471 17
12472 13
12473 20
12474 17
12475 11
12476 16
12477 14
12478 12
12479 11
12480 5
12481 8
12482 17
12483 34
12484 26
12485 17
12486 34
12487 26
12488 10
12489 15
12490 13
12491 12
12492 19
12493 16
12494 12
12495 19
12496 16
12497 10
12498 13
12499 11
12500 10
12501 8
12502 17
12503 34
12504 26
12505 17
12506 34
12507 26
12508 10
12509 15
12510 13
12511 12
12512 19
12513 16
12514 12
12515 19
12516 16
12517 10
12518 15
12519 13
12520 10
12521 13
12522 22
12523 18
12524 13
12525 22
12526 18
12527 9
12528 12
12529 11
12530 11
12531 16
12532 14
12533 11
12534 16
12535 14
12536 9
12537 8
12538 17
12539 34
12540 26
12541 17
12542 34
12543 26
12544 10
12545 15
12546 13
12547 12
12548 19
12549 16
12550 12
12551 19
12552 16
12553 10
12554 15
12555 13
12556 11
12557 10
12558 17
12559 34
12560 26
12561 17
12562 34
12563 26
12564 10
12565 15
12566 13
12567 12
12568 19
12569 16
12570 12
12571 19
12572 16
12573 10
12574 15
12575 13
12576 11
12577 10
12578 8
12579 17
12580 34
12581 26
12582 17
12583 34
12584 26
12585 10
12586 15
12587 13
12588 12
12589 19
12590 16
12591 12
12592 19
12593 16
12594 15
12595 13
12596 11
12597 10
12598 13
12599 22
12600 18
12601 13
12602 22
12603 18
12604 9
12605 12
12606 11
12607 11
12608 16
12609 14
12610 11
12611 16
12612 14
12613 9
12614 12
12615 11
12616 8
12617 17
12618 34
12619 26
12620 17
12621 34
12622 26
12623 10
12624 15
12625 13
12626 12
12627 19
12628 16
12629 12
12630 19
12631 16
12632 10
12633 15
12634 13
12635 11
12636 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 opposite left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

1
WUG0 around right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

2
WUG0 opposite right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

3
turn right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

4
WUG0 right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

5
WUG0 opposite left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

6
WUG0 opposite right thrice and turn right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

7
turn left and WUG0 opposite right twice I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite right twice
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

8
WUG0 twice and turn right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

9
WUG0 around right after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

10
WUG0 opposite left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

11
WUG0 left twice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

12
WUG0 left twice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

13
turn around right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

14
WUG0 opposite left twice after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

15
turn around right and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

16
WUG0 around left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

17
turn opposite left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

18
WUG0 and turn opposite right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

19
WUG0 opposite left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

20
WUG0 around left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

21
WUG0 opposite left twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

22
turn opposite right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

23
turn opposite left and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

24
WUG0 opposite right twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

25
WUG0 thrice and WUG0 around left thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

26
WUG0 left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

27
WUG0 left thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

28
WUG0 thrice and turn around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

29
WUG0 around left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

30
WUG0 around left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

31
WUG0 left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

32
WUG0 right and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

33
WUG0 around right after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
turn left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

35
WUG0 left I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left
--
I_TURN_LEFT I_JUMP

36
WUG0 twice and turn around right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

37
turn opposite left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

38
WUG0 opposite right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

39
WUG0 opposite right after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

40
WUG0 twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

41
WUG0 thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

42
WUG0 opposite right thrice and turn opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

43
WUG0 right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

44
WUG0 left thrice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

45
WUG0 and turn around left twice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

46
WUG0 thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

47
turn left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

48
WUG0 opposite left twice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

49
WUG0 opposite right twice and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

50
WUG0 left and WUG0 twice I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump twice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP

51
turn right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

52
WUG0 right thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

53
turn around right thrice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

54
turn around right twice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

55
WUG0 around right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

56
WUG0 opposite left thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

57
WUG0 around left and WUG0 opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

58
WUG0 opposite right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

59
WUG0 around left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

60
WUG0 left thrice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

61
WUG0 around right thrice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

62
WUG0 around left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

63
turn opposite right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

64
turn around right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

65
turn around left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

66
turn left and WUG0 around right thrice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

67
WUG0 thrice and WUG0 opposite right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

68
WUG0 right thrice and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

69
WUG0 around right thrice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

70
WUG0 twice and turn around left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

71
turn around right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

72
WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

73
WUG0 after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

74
WUG0 around left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

75
WUG0 right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

76
turn left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

77
WUG0 right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

78
turn around right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

79
WUG0 and turn left WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left
--
I_JUMP I_TURN_LEFT

80
turn opposite left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

81
WUG0 left thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

82
WUG0 twice and WUG0 opposite left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

83
WUG0 left twice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

84
turn around right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

85
WUG0 left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

86
turn opposite right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

87
WUG0 right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

88
turn opposite right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

89
WUG0 opposite left twice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

90
WUG0 opposite left twice and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

91
WUG0 twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

92
WUG0 twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

93
WUG0 left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

94
WUG0 left and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

95
turn opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

96
WUG0 right and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

97
WUG0 thrice and turn around left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

98
WUG0 right and WUG0 opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

99
turn left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

100
WUG0 thrice and WUG0 right twice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

101
WUG0 after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

102
turn around left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

103
WUG0 around left thrice and turn around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

104
WUG0 around left thrice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

105
WUG0 opposite right thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

106
WUG0 around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

107
WUG0 opposite right twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

108
turn opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

109
WUG0 opposite right and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

110
turn opposite right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

111
turn opposite left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

112
turn right twice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

113
turn right twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

114
turn opposite right twice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

115
turn opposite left and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

116
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

117
WUG0 around right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

118
WUG0 twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

119
WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

120
turn opposite right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

121
WUG0 left twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

122
WUG0 right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

123
WUG0 opposite right after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

124
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

125
turn right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

126
WUG0 opposite right twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

127
WUG0 opposite left twice after turn left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

128
WUG0 opposite left thrice and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

129
turn around left and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

130
WUG0 around right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

131
WUG0 right thrice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

132
WUG0 opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

133
WUG0 right and turn left I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT

134
WUG0 right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

135
turn around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

136
WUG0 and WUG0 opposite right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

137
WUG0 opposite left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

138
WUG0 opposite right after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

139
WUG0 right thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

140
WUG0 opposite left thrice and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

141
WUG0 opposite right and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

142
WUG0 after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

143
WUG0 left thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

144
WUG0 around left after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

145
turn opposite left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

146
WUG0 opposite left twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

147
WUG0 around right and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

148
WUG0 around right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

149
turn right and WUG0 around left I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

150
WUG0 opposite left and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

151
WUG0 opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

152
turn right and WUG0 left thrice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

153
turn opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

154
WUG0 opposite left twice and turn around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

155
turn around left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

156
turn around right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

157
turn opposite left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

158
WUG0 opposite left twice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

159
turn around right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

160
WUG0 opposite right and turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

161
turn opposite right thrice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

162
WUG0 right twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

163
WUG0 around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

164
WUG0 thrice and WUG0 around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

165
turn left and WUG0 right thrice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump right thrice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

166
turn around left twice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

167
WUG0 opposite left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

168
turn around right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

169
WUG0 right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

170
WUG0 opposite right twice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

171
WUG0 around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

172
WUG0 right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

173
WUG0 around left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

174
turn left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

175
WUG0 and turn left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

176
WUG0 left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

177
WUG0 around right twice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

178
WUG0 around left after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

179
turn right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

180
turn around left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

181
turn around left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

182
turn around right and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

183
turn around right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

184
WUG0 opposite left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

185
WUG0 opposite right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

186
WUG0 around right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

187
WUG0 after WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump
--
I_JUMP I_JUMP

188
turn around left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

189
turn opposite left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

190
WUG0 opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

191
WUG0 opposite left twice and turn opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

192
WUG0 left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

193
turn around right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

194
turn right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

195
turn around right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

196
turn around left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

197
WUG0 left twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

198
WUG0 right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

199
turn right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

200
WUG0 thrice and turn left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

201
turn opposite left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

202
WUG0 left thrice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

203
WUG0 around right twice and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

204
WUG0 around left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

205
WUG0 right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

206
WUG0 around right and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

207
WUG0 left and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

208
WUG0 left twice and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

209
turn opposite right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

210
WUG0 right and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

211
WUG0 around left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

212
WUG0 left thrice and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

213
WUG0 thrice and turn right WUG1 WUG1 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT

214
turn left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

215
turn around right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

216
WUG0 opposite right thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

217
WUG0 right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

218
turn right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

219
WUG0 opposite left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

220
WUG0 around left thrice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

221
WUG0 around left twice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

222
WUG0 around right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

223
WUG0 opposite right and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

224
turn right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

225
WUG0 right twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

226
WUG0 opposite left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

227
turn opposite left twice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

228
WUG0 around left after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

229
WUG0 right twice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

230
WUG0 around right twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

231
turn right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

232
WUG0 opposite right after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

233
WUG0 thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

234
turn around left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

235
WUG0 opposite right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

236
WUG0 right after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP

237
WUG0 thrice and turn opposite right WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

238
WUG0 around left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

239
turn around left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

240
turn around right and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

241
WUG0 opposite right and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

242
WUG0 opposite left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

243
WUG0 twice and WUG0 opposite left WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

244
WUG0 opposite left and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

245
WUG0 left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

246
turn opposite left twice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

247
WUG0 around right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

248
WUG0 around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

249
WUG0 opposite left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

250
WUG0 twice and turn left WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn left
--
I_JUMP I_JUMP I_TURN_LEFT

251
WUG0 right thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

252
WUG0 left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

253
WUG0 around left thrice and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

254
WUG0 around left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

255
WUG0 opposite left thrice and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

256
turn right after WUG0 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump
--
I_JUMP I_TURN_RIGHT

257
WUG0 around right and WUG0 opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

258
WUG0 right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

259
WUG0 left thrice and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

260
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

261
WUG0 right and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

262
turn opposite right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

263
turn around left and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

264
WUG0 left and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

265
WUG0 around left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

266
WUG0 thrice and turn opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

267
turn around left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

268
turn around right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

269
WUG0 around left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

270
turn opposite right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

271
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

272
turn left twice and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

273
turn opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

274
WUG0 around left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

275
WUG0 around left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

276
turn right twice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

277
WUG0 thrice and turn opposite right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

278
turn around left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

279
turn right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

280
WUG0 thrice and WUG0 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump
--
I_JUMP I_JUMP I_JUMP I_JUMP

281
WUG0 twice and WUG0 opposite right thrice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

282
turn left and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

283
WUG0 right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

284
WUG0 twice and WUG0 right WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

285
WUG0 opposite right and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

286
WUG0 opposite right twice and turn opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

287
WUG0 around right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

288
WUG0 right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

289
WUG0 around left and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

290
turn right and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

291
WUG0 opposite right after turn right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

292
WUG0 opposite right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

293
WUG0 left thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

294
WUG0 left twice and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

295
WUG0 left thrice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

296
WUG0 opposite left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

297
WUG0 around left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

298
WUG0 opposite right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

299
turn around right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

300
WUG0 left twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

301
WUG0 twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

302
turn right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

303
WUG0 opposite left and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

304
WUG0 left after WUG0 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump
--
I_JUMP I_TURN_LEFT I_JUMP

305
WUG0 right thrice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

306
turn around right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

307
WUG0 twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

308
WUG0 around right twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

309
turn left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

310
turn opposite right thrice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

311
turn around left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

312
WUG0 opposite left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

313
turn opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

314
WUG0 thrice and turn left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

315
WUG0 thrice after WUG0 left I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump left
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

316
WUG0 left twice and WUG0 opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

317
turn left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

318
turn left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

319
turn opposite right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

320
WUG0 around left thrice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

321
WUG0 opposite left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

322
WUG0 around right and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

323
turn around left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

324
turn opposite left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

325
WUG0 left thrice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

326
turn right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

327
WUG0 around right thrice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

328
WUG0 and WUG0 thrice WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP

329
turn right after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

330
WUG0 around right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

331
WUG0 right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

332
WUG0 thrice and WUG0 around right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

333
WUG0 right twice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

334
WUG0 around right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

335
WUG0 right thrice and WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

336
WUG0 twice and WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump
--
I_JUMP I_JUMP I_JUMP

337
WUG0 around left and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

338
WUG0 left after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

339
WUG0 opposite right after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

340
WUG0 WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run
--
I_RUN

341
turn around left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

342
turn left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

343
WUG0 opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

344
WUG0 twice WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice
--
I_JUMP I_JUMP

345
WUG0 twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

346
WUG0 right twice and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

347
turn opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

348
turn right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

349
WUG0 around right thrice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

350
WUG0 left thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

351
WUG0 around left twice and turn around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

352
turn left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

353
WUG0 left and turn right I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT

354
WUG0 opposite right thrice and turn right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

355
WUG0 opposite right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

356
WUG0 around left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

357
WUG0 around right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

358
WUG0 left after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

359
WUG0 around right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

360
turn left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

361
WUG0 opposite right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

362
WUG0 right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

363
turn around right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

364
turn left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

365
turn around right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

366
WUG0 around right and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

367
WUG0 left twice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

368
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

369
WUG0 around right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

370
turn opposite left twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

371
walk left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
walk left thrice after run around left twice
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK

372
WUG0 opposite right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

373
WUG0 after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

374
WUG0 right and WUG0 twice I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump twice
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

375
turn around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

376
WUG0 around right after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

377
WUG0 opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

378
WUG0 opposite left twice and turn opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

379
WUG0 opposite left twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

380
WUG0 thrice after turn right I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn right
--
I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

381
WUG0 right and WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
WUG0 right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

383
walk opposite right and look opposite WUG0 I_TURN_RIGHT I_TURN_RIGHT I_WALK WUG1 WUG1 I_LOOK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
walk opposite right and look opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_LOOK

384
look opposite WUG0 after walk opposite right I_TURN_RIGHT I_TURN_RIGHT I_WALK WUG1 WUG1 I_LOOK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
look opposite right after walk opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_LOOK

385
run around WUG0 twice and walk WUG0 thrice WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
run around left twice and walk left thrice
--
I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK

386
run opposite left thrice and walk WUG0 I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN WUG1 I_WALK {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
run opposite left thrice and walk left
--
I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_WALK

387
look opposite WUG0 thrice and run opposite WUG0 thrice WUG1 WUG1 I_LOOK WUG1 WUG1 I_LOOK WUG1 WUG1 I_LOOK WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
look opposite left thrice and run opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

388
WUG0 right thrice and walk twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_WALK I_WALK {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look right thrice and walk twice
--
I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_WALK I_WALK

389
WUG0 around right thrice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

390
WUG0 twice and WUG0 around right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

391
WUG0 opposite left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

392
WUG0 left twice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

393
turn opposite left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

394
turn opposite left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

395
