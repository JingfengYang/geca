12634
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 13
11 11
12 10
13 17
14 10
15 17
16 14
17 8
18 13
19 11
20 9
21 8
22 6
23 15
24 32
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 14
38 8
39 13
40 11
41 9
42 8
43 11
44 20
45 16
46 11
47 20
48 16
49 7
50 10
51 9
52 9
53 14
54 12
55 9
56 14
57 12
58 7
59 10
60 9
61 6
62 15
63 32
64 24
65 15
66 32
67 24
68 8
69 13
70 11
71 10
72 17
73 14
74 10
75 17
76 14
77 8
78 13
79 11
80 9
81 8
82 6
83 15
84 32
85 24
86 15
87 32
88 24
89 8
90 13
91 11
92 10
93 17
94 14
95 10
96 17
97 14
98 8
99 13
100 11
101 9
102 8
103 6
104 15
105 32
106 24
107 15
108 32
109 24
110 8
111 13
112 11
113 10
114 17
115 14
116 10
117 17
118 14
119 8
120 13
121 11
122 9
123 8
124 11
125 20
126 16
127 11
128 20
129 16
130 7
131 10
132 9
133 9
134 14
135 12
136 9
137 14
138 12
139 7
140 10
141 9
142 6
143 15
144 32
145 24
146 15
147 32
148 24
149 8
150 13
151 11
152 10
153 17
154 14
155 10
156 17
157 14
158 8
159 13
160 11
161 9
162 8
163 12
164 15
165 24
167 33
168 24
170 33
171 17
172 22
173 20
174 19
175 26
176 23
177 19
178 26
179 23
180 17
181 22
182 20
183 18
184 17
185 24
187 33
188 24
190 33
191 17
192 22
193 20
194 19
195 26
196 23
197 19
198 26
199 23
200 17
201 22
202 20
203 18
204 17
205 20
206 29
207 25
208 20
209 29
210 25
211 19
212 18
213 18
214 23
215 21
216 18
217 23
218 21
219 16
220 19
221 15
222 24
224 33
225 24
227 33
228 17
229 22
230 20
231 19
232 26
233 23
234 19
235 26
236 23
237 22
238 20
239 18
240 17
241 15
242 24
244 33
245 24
247 33
248 17
249 22
250 20
251 19
252 26
253 23
254 19
255 26
256 23
257 17
258 22
259 20
260 18
261 17
262 15
263 24
265 33
266 24
268 33
269 17
270 22
271 20
272 19
273 26
274 23
275 19
276 26
277 23
278 17
279 22
280 20
281 18
282 17
283 20
284 29
285 25
286 20
287 29
288 25
289 16
290 19
291 18
292 18
293 23
294 21
295 18
296 23
297 21
298 16
299 19
300 18
301 15
302 24
304 33
305 24
307 17
308 22
309 20
310 26
311 23
312 19
313 26
314 23
315 17
316 22
317 20
318 18
319 17
320 29
321 32
327 34
328 39
329 37
330 36
333 36
336 34
337 39
338 37
339 35
340 34
341 32
348 34
349 39
350 37
353 36
356 34
357 39
358 37
359 35
360 34
361 37
364 37
367 33
368 36
369 35
370 35
372 38
373 35
375 38
376 33
377 36
378 35
385 34
386 39
387 37
388 36
393 34
394 39
395 37
396 35
397 34
398 32
405 34
406 39
407 37
408 36
411 36
414 34
415 39
416 37
417 35
418 34
419 32
426 34
427 39
428 37
429 36
432 36
435 34
436 39
437 37
438 35
439 34
440 37
443 37
446 33
447 36
448 35
449 35
451 38
452 35
454 38
455 33
456 36
457 32
464 34
465 39
466 37
467 36
470 36
473 34
474 39
475 37
476 35
477 34
478 21
479 24
480 33
483 33
485 26
486 31
487 29
488 28
489 35
490 32
491 28
492 35
493 32
494 26
495 31
496 29
497 27
498 24
499 33
502 33
505 26
506 31
507 29
508 28
509 35
510 32
511 28
512 35
513 32
514 26
515 31
516 29
517 27
518 26
519 38
520 34
521 29
522 38
523 34
524 25
525 28
526 27
527 27
528 32
529 30
530 27
531 32
532 30
533 25
534 28
535 27
536 24
537 33
540 33
543 26
544 31
545 29
546 28
547 35
548 32
549 28
550 35
551 32
552 26
553 31
554 29
555 27
556 26
557 24
558 33
561 33
564 26
565 31
566 29
567 28
568 35
569 32
570 28
571 35
572 32
573 26
574 31
575 29
576 27
577 26
578 24
579 33
582 33
585 26
586 31
587 29
588 28
589 35
590 32
591 28
592 35
593 32
594 26
595 31
596 29
597 27
598 26
599 29
600 38
601 34
602 29
603 38
604 34
605 25
606 28
607 27
608 27
609 32
610 30
611 27
612 32
613 30
614 28
615 27
616 24
617 33
620 33
623 26
624 31
625 29
626 28
627 35
628 32
629 28
630 35
631 32
632 26
633 31
634 29
635 27
636 26
637 12
638 15
639 24
641 33
642 24
644 33
645 17
646 22
647 20
648 19
649 26
650 23
651 19
652 26
653 23
654 17
655 22
656 20
657 18
658 17
659 24
661 33
662 24
664 33
665 22
666 20
667 19
668 26
669 19
670 26
671 23
672 17
673 22
674 20
675 18
676 17
677 20
678 29
679 25
680 20
681 29
682 25
683 16
684 19
685 18
686 18
687 23
688 21
689 18
690 23
691 21
692 16
693 19
694 18
695 15
696 24
698 33
699 24
701 33
702 17
703 22
704 20
705 19
706 23
707 19
708 26
709 17
710 22
711 18
712 17
713 15
714 24
716 33
717 24
719 33
720 17
721 22
722 19
723 26
724 23
725 19
726 26
727 17
728 22
729 20
730 18
731 17
732 24
734 33
735 24
737 33
738 17
739 20
740 19
741 26
742 23
743 19
744 26
745 17
746 22
747 20
748 18
749 17
750 20
751 29
752 25
753 20
754 29
755 25
756 16
757 19
758 18
759 18
760 23
761 21
762 18
763 23
764 21
765 16
766 19
767 15
768 24
770 33
771 24
773 33
774 17
775 22
776 20
777 19
778 26
779 23
780 19
781 26
782 23
783 17
784 22
785 20
786 18
787 17
788 29
789 32
796 39
797 37
798 36
801 36
804 34
805 39
806 37
807 35
808 34
809 32
816 34
817 39
818 37
819 36
822 36
824 34
825 39
826 37
827 35
828 34
829 37
832 37
835 33
836 36
837 35
838 35
840 38
841 35
843 38
844 33
845 36
846 35
847 32
853 34
854 39
855 37
856 36
859 36
862 34
863 39
864 37
865 35
866 34
867 32
874 34
875 39
876 37
877 36
880 36
883 34
884 39
885 35
886 34
887 32
894 34
895 39
896 37
897 36
900 36
902 34
903 39
904 37
905 34
906 37
909 37
912 33
913 36
914 35
915 35
917 38
918 35
920 38
921 33
922 36
923 35
924 32
931 34
932 39
933 37
934 36
937 36
940 34
941 39
942 37
943 35
944 34
945 21
946 24
947 33
949 33
952 26
953 31
954 29
955 28
956 35
957 32
958 28
959 35
960 32
961 26
962 31
963 29
964 26
965 24
966 33
969 33
971 26
972 31
973 29
974 35
975 32
976 28
977 35
978 32
979 26
980 31
981 29
982 27
983 26
984 29
985 38
986 34
987 38
988 34
989 25
990 28
991 27
992 27
993 32
994 30
995 27
996 32
997 30
998 25
999 27
1000 24
1001 33
1004 33
1007 26
1008 31
1009 29
1010 28
1011 35
1012 32
1013 35
1014 32
1015 26
1016 31
1017 29
1018 27
1019 26
1020 24
1021 33
1024 33
1027 26
1028 31
1029 29
1030 28
1031 35
1032 32
1033 28
1034 35
1035 32
1036 26
1037 31
1038 29
1039 27
1040 26
1041 24
1042 33
1047 26
1048 31
1049 29
1050 28
1051 35
1052 32
1053 28
1054 32
1055 26
1056 31
1057 29
1058 27
1059 26
1060 29
1061 38
1062 34
1063 29
1064 38
1065 34
1066 25
1067 28
1068 27
1069 32
1070 30
1071 27
1072 32
1073 30
1074 25
1075 28
1076 27
1077 24
1078 33
1081 33
1084 26
1085 31
1086 29
1087 28
1088 35
1089 32
1090 28
1091 35
1092 32
1093 26
1094 31
1095 29
1096 27
1097 26
1098 5
1099 8
1100 17
1101 34
1102 26
1103 17
1104 34
1105 26
1106 10
1107 15
1108 13
1109 12
1110 19
1111 16
1112 12
1113 19
1114 10
1115 15
1116 13
1117 11
1118 10
1119 8
1120 17
1121 34
1122 26
1123 17
1124 34
1125 26
1126 10
1127 15
1128 13
1129 12
1130 19
1131 16
1132 12
1133 19
1134 16
1135 10
1136 15
1137 13
1138 11
1139 10
1140 13
1141 22
1142 18
1143 13
1144 22
1145 18
1146 9
1147 12
1148 11
1149 11
1150 16
1151 11
1152 16
1153 14
1154 9
1155 12
1156 11
1157 8
1158 34
1159 26
1160 17
1161 34
1162 26
1163 10
1164 15
1165 13
1166 12
1167 16
1168 12
1169 19
1170 16
1171 10
1172 15
1173 13
1174 11
1175 10
1176 8
1177 34
1178 26
1179 17
1180 26
1181 10
1182 15
1183 13
1184 12
1185 19
1186 16
1187 12
1188 19
1189 16
1190 10
1191 15
1192 13
1193 11
1194 10
1195 8
1196 17
1197 34
1198 26
1199 17
1200 34
1201 26
1202 10
1203 15
1204 13
1205 12
1206 19
1207 16
1208 12
1209 19
1210 16
1211 10
1212 15
1213 13
1214 11
1215 10
1216 13
1217 22
1218 18
1219 13
1220 22
1221 18
1222 9
1223 12
1224 11
1225 11
1226 16
1227 14
1228 11
1229 16
1230 14
1231 9
1232 12
1233 11
1234 8
1235 17
1236 34
1237 26
1238 17
1239 34
1240 26
1241 10
1242 15
1243 13
1244 12
1245 19
1246 16
1247 19
1248 16
1249 10
1250 15
1251 13
1252 11
1253 10
1254 10
1255 13
1256 39
1257 31
1258 22
1259 39
1260 31
1261 15
1262 20
1263 18
1264 17
1265 24
1266 21
1267 17
1268 24
1269 21
1270 15
1271 20
1272 18
1273 16
1274 15
1275 13
1276 22
1277 39
1278 31
1279 22
1280 39
1281 31
1282 15
1283 20
1284 18
1285 17
1286 21
1287 17
1288 24
1289 21
1290 15
1291 20
1292 18
1293 16
1294 15
1295 18
1296 27
1297 23
1298 18
1299 27
1300 23
1301 14
1302 17
1303 21
1304 19
1305 16
1306 21
1307 19
1308 14
1309 17
1310 16
1311 13
1312 22
1313 39
1314 31
1315 22
1316 39
1317 31
1318 15
1319 20
1320 18
1321 17
1322 21
1323 17
1324 24
1325 21
1326 20
1327 18
1328 16
1329 15
1330 13
1331 22
1332 39
1333 31
1334 22
1335 39
1336 31
1337 15
1338 20
1339 18
1340 17
1341 24
1342 21
1343 17
1344 24
1345 21
1346 15
1347 20
1348 18
1349 16
1350 15
1351 13
1352 22
1353 39
1354 31
1355 22
1356 31
1357 15
1358 20
1359 18
1360 17
1361 24
1362 21
1363 17
1364 24
1365 21
1366 15
1367 20
1368 18
1369 16
1370 15
1371 18
1372 27
1373 23
1374 18
1375 27
1376 23
1377 14
1378 17
1379 16
1380 16
1381 21
1382 19
1383 16
1384 21
1385 19
1386 14
1387 17
1388 16
1389 13
1390 22
1391 31
1392 22
1393 39
1394 31
1395 15
1396 20
1397 18
1398 17
1399 24
1400 21
1401 17
1402 24
1403 21
1404 15
1405 20
1406 18
1407 16
1408 15
1409 8
1410 11
1411 20
1412 37
1413 29
1414 20
1415 37
1416 29
1417 13
1418 18
1419 16
1420 15
1421 22
1422 19
1423 15
1424 22
1425 19
1426 13
1427 18
1428 16
1429 14
1430 13
1431 11
1432 20
1433 37
1434 29
1435 20
1436 29
1437 13
1438 18
1439 15
1440 22
1441 19
1442 15
1443 22
1444 19
1445 13
1446 18
1447 16
1448 14
1449 13
1450 16
1451 25
1452 21
1453 16
1454 25
1455 21
1456 12
1457 15
1458 14
1459 14
1460 19
1461 17
1462 14
1463 19
1464 17
1465 12
1466 15
1467 14
1468 11
1469 20
1470 37
1471 29
1472 20
1473 37
1474 29
1475 13
1476 18
1477 16
1478 15
1479 22
1480 19
1481 15
1482 22
1483 19
1484 13
1485 18
1486 16
1487 14
1488 13
1489 11
1490 20
1491 37
1492 29
1493 20
1494 37
1495 29
1496 13
1497 18
1498 16
1499 15
1500 22
1501 19
1502 15
1503 22
1504 19
1505 13
1506 18
1507 16
1508 14
1509 13
1510 11
1511 20
1512 37
1513 29
1514 20
1515 37
1516 29
1517 13
1518 18
1519 16
1520 15
1521 22
1522 19
1523 15
1524 22
1525 19
1526 13
1527 18
1528 16
1529 14
1530 13
1531 16
1532 25
1533 21
1534 16
1535 25
1536 21
1537 12
1538 15
1539 14
1540 14
1541 19
1542 17
1543 14
1544 19
1545 17
1546 12
1547 15
1548 11
1549 20
1550 37
1551 29
1552 20
1553 37
1554 29
1555 13
1556 18
1557 16
1558 15
1559 22
1560 19
1561 15
1562 22
1563 19
1564 13
1565 18
1566 16
1567 14
1568 13
1569 7
1570 10
1571 19
1572 36
1573 28
1574 19
1575 36
1576 28
1577 12
1578 17
1579 15
1580 14
1581 21
1582 18
1583 14
1584 21
1585 18
1586 12
1587 17
1588 15
1589 13
1590 12
1591 10
1592 19
1593 36
1594 28
1595 19
1596 36
1597 28
1598 15
1599 14
1600 21
1601 14
1602 21
1603 18
1604 12
1605 17
1606 15
1607 13
1608 12
1609 15
1610 24
1611 20
1612 15
1613 24
1614 20
1615 11
1616 14
1617 13
1618 13
1619 18
1620 16
1621 13
1622 18
1623 16
1624 11
1625 14
1626 10
1627 19
1628 36
1629 28
1630 19
1631 36
1632 28
1633 12
1634 17
1635 15
1636 14
1637 21
1638 18
1639 14
1640 21
1641 18
1642 12
1643 17
1644 13
1645 12
1646 10
1647 19
1648 36
1649 28
1650 19
1651 36
1652 28
1653 12
1654 17
1655 15
1656 14
1657 21
1658 18
1659 14
1660 21
1661 18
1662 12
1663 17
1664 15
1665 13
1666 12
1667 10
1668 19
1669 36
1670 28
1671 19
1672 36
1673 28
1674 12
1675 17
1676 15
1677 14
1678 18
1679 14
1680 21
1681 18
1682 12
1683 17
1684 15
1685 13
1686 15
1687 24
1688 20
1689 15
1690 20
1691 11
1692 14
1693 13
1694 13
1695 18
1696 16
1697 13
1698 18
1699 16
1700 11
1701 14
1702 13
1703 10
1704 19
1705 36
1706 28
1707 19
1708 36
1709 28
1710 12
1711 15
1712 14
1713 21
1714 18
1715 14
1716 21
1717 18
1718 12
1719 17
1720 15
1721 13
1722 12
1723 14
1724 26
1726 35
1727 26
1729 35
1730 22
1731 21
1732 28
1733 21
1734 28
1735 25
1736 19
1737 24
1738 22
1739 20
1740 19
1741 17
1742 26
1744 35
1745 26
1747 35
1748 19
1749 24
1750 22
1751 21
1752 28
1753 25
1754 21
1755 28
1756 25
1757 19
1758 24
1759 22
1760 20
1761 19
1762 22
1763 31
1764 27
1765 22
1766 31
1767 27
1768 18
1769 21
1770 20
1771 20
1772 25
1773 23
1774 20
1775 25
1776 23
1777 18
1778 21
1779 20
1780 17
1781 26
1783 35
1784 26
1786 35
1787 19
1788 24
1789 22
1790 21
1791 28
1792 25
1793 21
1794 28
1795 25
1796 19
1797 24
1798 22
1799 20
1800 19
1801 17
1802 26
1803 35
1804 26
1806 35
1807 19
1808 24
1809 22
1810 21
1811 28
1812 25
1813 21
1814 28
1815 25
1816 19
1817 24
1818 22
1819 20
1820 19
1821 17
1822 26
1824 35
1825 26
1827 35
1828 19
1829 24
1830 22
1831 21
1832 28
1833 25
1834 21
1835 28
1836 25
1837 19
1838 24
1839 22
1840 20
1841 19
1842 22
1843 31
1844 27
1845 22
1846 31
1847 27
1848 18
1849 21
1850 20
1851 20
1852 25
1853 23
1854 20
1855 25
1856 23
1857 18
1858 21
1859 20
1860 17
1861 26
1863 35
1864 26
1866 35
1867 19
1868 24
1869 22
1870 21
1871 28
1872 25
1873 21
1874 28
1875 25
1876 19
1877 22
1878 20
1879 19
1880 11
1881 14
1882 23
1883 32
1884 23
1886 32
1887 16
1888 21
1889 19
1890 18
1891 25
1892 22
1893 18
1894 25
1895 22
1896 16
1897 21
1898 19
1899 17
1900 16
1901 14
1902 23
1904 32
1905 23
1907 16
1908 19
1909 18
1910 25
1911 22
1912 18
1913 25
1914 22
1915 16
1916 21
1917 19
1918 17
1919 16
1920 19
1921 28
1922 24
1923 19
1924 28
1925 24
1926 15
1927 18
1928 17
1929 22
1930 20
1931 17
1932 22
1933 20
1934 15
1935 18
1936 17
1937 14
1938 23
1940 32
1941 23
1943 32
1944 16
1945 21
1946 19
1947 18
1948 25
1949 18
1950 25
1951 22
1952 16
1953 21
1954 19
1955 17
1956 16
1957 14
1958 23
1960 32
1961 23
1963 32
1964 16
1965 21
1966 19
1967 18
1968 25
1969 22
1970 18
1971 25
1972 22
1973 16
1974 21
1975 19
1976 17
1977 16
1978 14
1979 23
1980 32
1981 23
1983 32
1984 16
1985 21
1986 18
1987 25
1988 22
1989 18
1990 25
1991 22
1992 16
1993 21
1994 19
1995 17
1996 16
1997 19
1998 19
1999 28
2000 24
2001 15
2002 18
2003 17
2004 17
2005 22
2006 20
2007 17
2008 22
2009 20
2010 15
2011 18
2012 17
2013 14
2014 23
2015 32
2016 23
2018 32
2019 16
2020 21
2021 19
2022 18
2023 25
2024 22
2025 25
2026 22
2027 16
2028 21
2029 19
2030 17
2031 16
2032 7
2033 10
2034 19
2035 36
2036 28
2037 19
2038 36
2039 28
2040 17
2041 15
2042 14
2043 21
2044 18
2045 14
2046 21
2047 18
2048 12
2049 17
2050 15
2051 13
2052 12
2053 10
2054 19
2055 36
2056 28
2057 19
2058 36
2059 28
2060 12
2061 17
2062 15
2063 14
2064 21
2065 18
2066 14
2067 21
2068 18
2069 12
2070 17
2071 15
2072 13
2073 12
2074 15
2075 24
2076 20
2077 15
2078 24
2079 20
2080 11
2081 14
2082 13
2083 13
2084 18
2085 16
2086 13
2087 18
2088 11
2089 14
2090 13
2091 10
2092 19
2093 36
2094 28
2095 19
2096 36
2097 28
2098 12
2099 17
2100 15
2101 14
2102 21
2103 18
2104 14
2105 21
2106 18
2107 12
2108 17
2109 15
2110 13
2111 12
2112 10
2113 19
2114 28
2115 19
2116 36
2117 28
2118 12
2119 17
2120 15
2121 14
2122 21
2123 18
2124 14
2125 21
2126 18
2127 12
2128 17
2129 15
2130 13
2131 12
2132 10
2133 19
2134 36
2135 28
2136 19
2137 36
2138 28
2139 12
2140 17
2141 15
2142 14
2143 21
2144 18
2145 14
2146 21
2147 18
2148 12
2149 17
2150 15
2151 13
2152 12
2153 15
2154 20
2155 15
2156 24
2157 20
2158 11
2159 14
2160 13
2161 13
2162 18
2163 16
2164 13
2165 18
2166 16
2167 11
2168 14
2169 13
2170 10
2171 19
2172 36
2173 28
2174 19
2175 36
2176 28
2177 12
2178 17
2179 15
2180 14
2181 21
2182 18
2183 14
2184 21
2185 18
2186 12
2187 17
2188 15
2189 13
2190 12
2191 14
2192 17
2194 35
2195 26
2197 35
2198 24
2199 22
2200 21
2201 28
2202 25
2203 21
2204 28
2205 25
2206 19
2207 24
2208 20
2209 19
2210 17
2211 26
2213 35
2214 26
2216 35
2217 19
2218 24
2219 22
2220 21
2221 28
2222 25
2223 21
2224 28
2225 25
2226 19
2227 22
2228 20
2229 19
2230 22
2231 31
2232 27
2233 22
2234 31
2235 27
2236 18
2237 21
2238 20
2239 20
2240 25
2241 23
2242 20
2243 25
2244 23
2245 18
2246 21
2247 20
2248 17
2249 26
2251 35
2252 26
2254 35
2255 19
2256 22
2257 21
2258 28
2259 25
2260 21
2261 28
2262 25
2263 19
2264 24
2265 22
2266 20
2267 19
2268 17
2269 26
2271 35
2273 35
2274 19
2275 24
2276 22
2277 21
2278 28
2279 25
2280 21
2281 28
2282 25
2283 19
2284 24
2285 22
2286 20
2287 19
2288 17
2289 26
2291 35
2292 26
2294 35
2295 19
2296 24
2297 22
2298 21
2299 28
2300 25
2301 21
2302 28
2303 25
2304 24
2305 22
2306 20
2307 19
2308 22
2309 31
2310 27
2311 22
2312 31
2313 27
2314 18
2315 21
2316 20
2317 20
2318 25
2319 23
2320 20
2321 25
2322 23
2323 18
2324 21
2325 20
2326 17
2327 26
2329 35
2330 26
2332 35
2333 19
2334 24
2335 22
2336 21
2337 28
2338 25
2339 21
2340 28
2341 25
2342 19
2343 24
2344 22
2345 20
2346 19
2347 11
2348 14
2349 23
2351 32
2352 23
2354 32
2355 16
2356 21
2357 19
2358 18
2359 25
2360 22
2361 18
2362 25
2363 22
2364 16
2365 21
2366 19
2367 17
2368 16
2369 14
2370 23
2372 32
2373 23
2375 16
2376 21
2377 19
2378 18
2379 25
2380 22
2381 18
2382 25
2383 16
2384 21
2385 19
2386 17
2387 16
2388 19
2389 28
2390 24
2391 19
2392 28
2393 24
2394 15
2395 18
2396 17
2397 17
2398 22
2399 20
2400 17
2401 22
2402 20
2403 15
2404 18
2405 17
2406 14
2408 32
2409 23
2411 32
2412 16
2413 21
2414 19
2415 18
2416 22
2417 18
2418 25
2419 22
2420 16
2421 21
2422 19
2423 17
2424 16
2425 14
2426 23
2428 32
2429 23
2431 32
2432 16
2433 21
2434 19
2435 18
2436 25
2437 22
2438 18
2439 25
2440 22
2441 16
2442 21
2443 19
2444 17
2445 16
2446 14
2447 23
2449 32
2450 23
2452 32
2453 16
2454 19
2455 18
2456 25
2457 22
2458 18
2459 25
2460 22
2461 21
2462 19
2463 16
2464 19
2465 28
2466 24
2467 19
2468 28
2469 24
2470 15
2471 18
2472 17
2473 17
2474 22
2475 20
2476 17
2477 22
2478 20
2479 15
2480 18
2481 17
2482 14
2483 23
2485 32
2486 23
2488 32
2489 16
2490 21
2491 19
2492 18
2493 25
2494 22
2495 18
2496 25
2497 22
2498 16
2499 21
2500 19
2501 17
2502 5
2503 8
2504 17
2505 34
2506 26
2507 17
2508 26
2509 10
2510 15
2511 13
2512 12
2513 19
2514 16
2515 12
2516 19
2517 16
2518 10
2519 15
2520 13
2521 11
2522 10
2523 8
2524 17
2525 26
2526 34
2527 26
2528 10
2529 15
2530 13
2531 12
2532 19
2533 16
2534 12
2535 19
2536 16
2537 10
2538 15
2539 13
2540 11
2541 10
2542 13
2543 22
2544 18
2545 13
2546 22
2547 18
2548 9
2549 12
2550 11
2551 11
2552 16
2553 14
2554 11
2555 16
2556 14
2557 9
2558 12
2559 11
2560 8
2561 17
2562 34
2563 17
2564 34
2565 26
2566 10
2567 15
2568 13
2569 12
2570 19
2571 16
2572 12
2573 19
2574 16
2575 10
2576 15
2577 13
2578 11
2579 10
2580 17
2581 34
2582 26
2583 17
2584 26
2585 15
2586 13
2587 12
2588 19
2589 16
2590 12
2591 19
2592 16
2593 10
2594 15
2595 13
2596 11
2597 10
2598 17
2599 34
2600 26
2601 17
2602 34
2603 26
2604 10
2605 15
2606 13
2607 12
2608 19
2609 16
2610 12
2611 16
2612 10
2613 15
2614 13
2615 11
2616 10
2617 13
2618 22
2619 18
2620 13
2621 22
2622 18
2623 9
2624 12
2625 11
2626 11
2627 16
2628 14
2629 11
2630 16
2631 14
2632 9
2633 11
2634 8
2635 17
2636 34
2637 26
2638 17
2639 34
2640 26
2641 10
2642 15
2643 13
2644 19
2645 16
2646 12
2647 19
2648 16
2649 10
2650 15
2651 13
2652 11
2653 10
2654 10
2655 13
2656 22
2657 39
2658 31
2659 22
2660 39
2661 31
2662 15
2663 20
2664 18
2665 17
2666 24
2667 21
2668 17
2669 24
2670 21
2671 15
2672 20
2673 18
2674 16
2675 15
2676 13
2677 22
2678 39
2679 31
2680 22
2681 39
2682 31
2683 15
2684 20
2685 18
2686 17
2687 24
2688 21
2689 17
2690 24
2691 21
2692 15
2693 20
2694 18
2695 16
2696 15
2697 18
2698 27
2699 23
2700 18
2701 27
2702 23
2703 14
2704 17
2705 16
2706 16
2707 21
2708 19
2709 16
2710 21
2711 19
2712 14
2713 17
2714 16
2715 13
2716 22
2717 39
2718 31
2719 22
2720 39
2721 31
2722 15
2723 20
2724 18
2725 24
2726 21
2727 17
2728 24
2729 21
2730 15
2731 20
2732 18
2733 16
2734 15
2735 13
2736 22
2737 39
2738 31
2739 22
2740 39
2741 31
2742 15
2743 20
2744 18
2745 17
2746 24
2747 21
2748 17
2749 24
2750 21
2751 15
2752 20
2753 18
2754 16
2755 15
2756 13
2757 22
2758 39
2759 31
2760 22
2761 39
2762 31
2763 15
2764 20
2765 18
2766 17
2767 24
2768 21
2769 17
2770 24
2771 21
2772 15
2773 20
2774 18
2775 16
2776 15
2777 18
2778 27
2779 23
2780 27
2781 23
2782 14
2783 17
2784 16
2785 16
2786 21
2787 19
2788 16
2789 21
2790 19
2791 14
2792 17
2793 16
2794 13
2795 22
2796 39
2797 31
2798 22
2799 39
2800 31
2801 20
2802 18
2803 17
2804 24
2805 17
2806 24
2807 21
2808 15
2809 20
2810 18
2811 16
2812 15
2813 8
2814 11
2815 20
2816 37
2817 29
2818 20
2819 37
2820 29
2821 13
2822 18
2823 16
2824 15
2825 22
2826 19
2827 15
2828 22
2829 19
2830 13
2831 18
2832 16
2833 14
2834 13
2835 11
2836 20
2837 37
2838 29
2839 20
2840 37
2841 29
2842 13
2843 18
2844 16
2845 15
2846 22
2847 19
2848 15
2849 22
2850 19
2851 13
2852 18
2853 16
2854 14
2855 13
2856 16
2857 25
2858 21
2859 16
2860 25
2861 21
2862 12
2863 15
2864 14
2865 14
2866 19
2867 17
2868 14
2869 19
2870 17
2871 12
2872 15
2873 14
2874 11
2875 20
2876 37
2877 29
2878 20
2879 37
2880 29
2881 13
2882 18
2883 16
2884 15
2885 22
2886 19
2887 15
2888 22
2889 19
2890 13
2891 18
2892 14
2893 13
2894 11
2895 20
2896 37
2897 20
2898 37
2899 29
2900 13
2901 18
2902 16
2903 15
2904 22
2905 19
2906 15
2907 22
2908 19
2909 13
2910 18
2911 16
2912 14
2913 13
2914 11
2915 20
2916 37
2917 29
2918 20
2919 37
2920 29
2921 13
2922 18
2923 16
2924 15
2925 22
2926 19
2927 15
2928 22
2929 19
2930 13
2931 18
2932 16
2933 14
2934 13
2935 16
2936 25
2937 21
2938 16
2939 25
2940 21
2941 12
2942 15
2943 14
2944 14
2945 19
2946 17
2947 14
2948 19
2949 17
2950 12
2951 15
2952 14
2953 11
2954 20
2955 37
2956 29
2957 20
2958 37
2959 29
2960 13
2961 18
2962 16
2963 15
2964 22
2965 19
2966 15
2967 22
2968 19
2969 13
2970 18
2971 16
2972 14
2973 13
2974 6
2975 9
2976 18
2977 35
2978 27
2979 18
2980 35
2981 27
2982 11
2983 14
2984 13
2985 20
2986 17
2987 13
2988 17
2989 11
2990 16
2991 14
2992 12
2993 11
2994 18
2995 35
2996 27
2997 18
2998 35
2999 27
3000 11
3001 16
3002 14
3003 13
3004 20
3005 17
3006 13
3007 20
3008 17
3009 11
3010 16
3011 14
3012 12
3013 11
3014 14
3015 23
3016 19
3017 14
3018 23
3019 19
3020 10
3021 12
3022 12
3023 17
3024 15
3025 12
3026 17
3027 15
3028 10
3029 13
3030 12
3031 9
3032 18
3033 35
3034 27
3035 18
3036 35
3037 27
3038 11
3039 16
3040 14
3041 13
3042 20
3043 17
3044 13
3045 20
3046 17
3047 11
3048 16
3049 14
3050 12
3051 9
3052 18
3053 35
3054 27
3055 18
3056 35
3057 27
3058 11
3059 16
3060 14
3061 13
3062 20
3063 17
3064 13
3065 20
3066 17
3067 11
3068 16
3069 12
3070 11
3071 9
3072 18
3073 35
3074 27
3075 18
3076 35
3077 27
3078 11
3079 14
3080 13
3081 20
3082 17
3083 13
3084 20
3085 17
3086 11
3087 16
3088 14
3089 12
3090 11
3091 14
3092 23
3093 19
3094 14
3095 23
3096 19
3097 10
3098 13
3099 12
3100 12
3101 17
3102 15
3103 12
3104 15
3105 10
3106 12
3107 9
3108 18
3109 35
3110 27
3111 18
3112 35
3113 27
3114 11
3115 16
3116 14
3117 13
3118 20
3119 17
3120 13
3121 20
3122 17
3123 11
3124 16
3125 14
3126 12
3127 11
3128 5
3129 8
3130 17
3131 34
3132 26
3133 17
3134 34
3135 26
3136 10
3137 15
3138 13
3139 12
3140 19
3141 16
3142 19
3143 16
3144 15
3145 13
3146 11
3147 10
3148 8
3149 17
3150 34
3151 26
3152 17
3153 26
3154 10
3155 15
3156 13
3157 12
3158 19
3159 16
3160 12
3161 19
3162 16
3163 10
3164 15
3165 13
3166 11
3167 10
3168 13
3169 22
3170 18
3171 13
3172 22
3173 18
3174 9
3175 12
3176 11
3177 11
3178 16
3179 14
3180 11
3181 16
3182 14
3183 9
3184 12
3185 11
3186 8
3187 17
3188 34
3189 26
3190 17
3191 34
3192 26
3193 10
3194 15
3195 13
3196 12
3197 19
3198 12
3199 19
3200 16
3201 10
3202 15
3203 13
3204 11
3205 10
3206 8
3207 17
3208 34
3209 26
3210 17
3211 34
3212 26
3213 10
3214 15
3215 13
3216 12
3217 19
3218 16
3219 12
3220 19
3221 16
3222 10
3223 15
3224 13
3225 11
3226 10
3227 8
3228 17
3229 34
3230 26
3231 17
3232 34
3233 26
3234 10
3235 15
3236 13
3237 12
3238 19
3239 16
3240 12
3241 19
3242 10
3243 15
3244 13
3245 11
3246 10
3247 13
3248 22
3249 18
3250 13
3251 22
3252 18
3253 9
3254 12
3255 11
3256 11
3257 16
3258 14
3259 11
3260 16
3261 14
3262 9
3263 12
3264 11
3265 8
3266 17
3267 34
3268 26
3269 34
3270 26
3271 10
3272 15
3273 13
3274 12
3275 19
3276 16
3277 12
3278 19
3279 16
3280 10
3281 15
3282 13
3283 11
3284 10
3285 3
3286 6
3287 15
3288 32
3289 24
3290 15
3291 32
3292 24
3293 8
3294 13
3295 11
3296 10
3297 17
3298 10
3299 17
3300 14
3301 8
3302 13
3303 11
3304 9
3305 8
3306 6
3307 32
3308 24
3309 15
3310 32
3311 24
3312 8
3313 13
3314 11
3315 10
3316 17
3317 14
3318 17
3319 14
3320 8
3321 13
3322 11
3323 9
3324 8
3325 11
3326 20
3327 16
3328 20
3329 16
3330 7
3331 10
3332 9
3333 9
3334 14
3335 12
3336 9
3337 14
3338 12
3339 7
3340 10
3341 9
3342 6
3343 15
3344 32
3345 24
3346 15
3347 32
3348 24
3349 8
3350 13
3351 11
3352 10
3353 17
3354 10
3355 17
3356 14
3357 8
3358 13
3359 11
3360 9
3361 8
3362 6
3363 15
3364 32
3365 24
3366 15
3367 32
3368 24
3369 13
3370 11
3371 10
3372 17
3373 14
3374 10
3375 17
3376 14
3377 8
3378 13
3379 11
3380 9
3381 8
3382 6
3383 32
3384 24
3385 15
3386 32
3387 24
3388 8
3389 13
3390 11
3391 10
3392 17
3393 14
3394 10
3395 14
3396 8
3397 13
3398 11
3399 9
3400 8
3401 11
3402 20
3403 16
3404 11
3405 20
3406 16
3407 7
3408 10
3409 9
3410 9
3411 14
3412 12
3413 9
3414 14
3415 12
3416 7
3417 10
3418 9
3419 6
3420 15
3421 32
3422 24
3423 15
3424 32
3425 24
3426 8
3427 13
3428 11
3429 10
3430 17
3431 14
3432 10
3433 17
3434 14
3435 8
3436 13
3437 11
3438 9
3439 8
3440 12
3441 15
3442 24
3444 33
3445 24
3447 33
3448 17
3449 22
3450 20
3451 19
3452 26
3453 23
3454 19
3455 26
3456 23
3457 17
3458 22
3459 20
3460 18
3461 17
3462 15
3463 24
3465 33
3466 24
3468 33
3469 17
3470 22
3471 20
3472 26
3473 23
3474 19
3475 26
3476 23
3477 17
3478 22
3479 20
3480 18
3481 17
3482 20
3483 29
3484 25
3485 20
3486 29
3487 25
3488 16
3489 18
3490 18
3491 23
3492 18
3493 23
3494 21
3495 16
3496 19
3497 18
3498 15
3499 24
3501 33
3502 24
3504 33
3505 17
3506 22
3507 20
3508 19
3509 26
3510 23
3511 19
3512 26
3513 23
3514 17
3515 22
3516 20
3517 18
3518 17
3519 15
3520 24
3522 33
3523 24
3525 33
3526 17
3527 20
3528 19
3529 26
3530 23
3531 19
3532 26
3533 23
3534 17
3535 22
3536 20
3537 18
3538 17
3539 15
3540 24
3542 33
3543 24
3545 33
3546 17
3547 22
3548 20
3549 19
3550 26
3551 23
3552 19
3553 26
3554 23
3555 17
3556 22
3557 20
3558 18
3559 17
3560 20
3561 29
3562 25
3563 20
3564 29
3565 25
3566 19
3567 18
3568 18
3569 23
3570 21
3571 18
3572 23
3573 21
3574 16
3575 19
3576 18
3577 15
3578 24
3580 33
3581 24
3583 33
3584 17
3585 22
3586 20
3587 19
3588 23
3589 19
3590 26
3591 23
3592 17
3593 22
3594 20
3595 18
3596 29
3597 32
3604 39
3605 37
3606 36
3608 36
3611 34
3612 39
3613 37
3614 35
3615 34
3616 32
3623 34
3624 39
3625 36
3628 36
3631 34
3632 39
3633 37
3634 35
3635 34
3636 37
3639 37
3642 33
3643 36
3644 35
3645 35
3647 38
3648 35
3650 38
3651 33
3652 36
3653 35
3654 32
3661 34
3662 39
3663 37
3664 36
3667 36
3670 34
3671 39
3672 37
3673 35
3674 34
3675 32
3682 34
3683 39
3684 37
3685 36
3687 36
3690 34
3691 39
3692 37
3693 35
3694 34
3695 32
3702 34
3703 39
3704 37
3707 36
3710 34
3711 39
3712 37
3713 35
3714 37
3717 37
3720 33
3721 36
3722 35
3723 35
3725 38
3726 35
3728 38
3729 33
3730 36
3731 35
3732 32
3739 34
3740 39
3741 37
3742 36
3745 36
3748 34
3749 39
3750 37
3751 35
3752 34
3753 21
3754 24
3755 33
3758 33
3761 26
3762 31
3763 29
3764 28
3765 35
3766 32
3767 28
3768 35
3769 32
3770 26
3771 31
3772 29
3773 26
3774 24
3775 33
3778 33
3780 26
3781 31
3782 29
3783 28
3784 35
3785 32
3786 28
3787 35
3788 32
3789 26
3790 31
3791 29
3792 27
3793 26
3794 29
3795 38
3796 34
3797 29
3798 38
3799 34
3800 25
3801 28
3802 27
3803 27
3804 32
3805 30
3806 32
3807 30
3808 25
3809 28
3810 27
3811 24
3812 33
3815 33
3818 26
3819 31
3820 29
3821 28
3822 35
3823 32
3824 28
3825 35
3826 32
3827 26
3828 31
3829 29
3830 27
3831 26
3832 24
3833 33
3838 26
3839 31
3840 29
3841 28
3842 35
3843 32
3844 28
3845 35
3846 32
3847 26
3848 31
3849 29
3850 26
3851 24
3852 33
3855 33
3858 26
3859 31
3860 29
3861 28
3862 35
3863 32
3864 28
3865 35
3866 32
3867 26
3868 31
3869 29
3870 27
3871 26
3872 29
3873 38
3874 34
3875 38
3876 34
3877 25
3878 28
3879 27
3880 27
3881 32
3882 30
3883 27
3884 32
3885 30
3886 25
3887 28
3888 27
3889 24
3890 33
3892 33
3895 26
3896 31
3897 29
3898 28
3899 35
3900 32
3901 28
3902 35
3903 32
3904 26
3905 31
3906 29
3907 27
3908 12
3909 15
3910 24
3912 33
3913 24
3915 33
3916 17
3917 22
3918 20
3919 19
3920 26
3921 23
3922 19
3923 26
3924 23
3925 17
3926 22
3927 20
3928 18
3929 17
3930 15
3931 24
3933 33
3934 24
3936 33
3937 17
3938 22
3939 20
3940 19
3941 26
3942 23
3943 19
3944 26
3945 23
3946 17
3947 22
3948 20
3949 18
3950 17
3951 20
3952 29
3953 25
3954 20
3955 29
3956 25
3957 16
3958 19
3959 18
3960 18
3961 23
3962 21
3963 18
3964 23
3965 21
3966 16
3967 19
3968 18
3969 15
3970 24
3972 33
3973 24
3975 33
3976 17
3977 22
3978 20
3979 19
3980 26
3981 23
3982 19
3983 26
3984 23
3985 22
3986 20
3987 18
3988 17
3989 15
3991 33
3992 24
3994 33
3995 17
3996 22
3997 20
3998 19
3999 26
4000 23
4001 19
4002 26
4003 23
4004 17
4005 22
4006 20
4007 18
4008 17
4009 15
4010 24
4012 33
4013 24
4015 33
4016 17
4017 22
4018 19
4019 26
4020 23
4021 19
4022 26
4023 23
4024 22
4025 20
4026 18
4027 17
4028 20
4029 29
4030 25
4031 20
4032 29
4033 25
4034 16
4035 19
4036 18
4037 18
4038 23
4039 21
4040 18
4041 23
4042 21
4043 16
4044 19
4045 18
4046 15
4047 24
4048 33
4049 24
4051 33
4052 17
4053 22
4054 20
4055 19
4056 26
4057 23
4058 19
4059 26
4060 23
4061 17
4062 22
4063 20
4064 18
4065 17
4066 29
4067 32
4073 34
4074 39
4075 37
4076 36
4079 36
4082 34
4083 39
4084 37
4085 35
4086 34
4087 32
4093 34
4094 39
4095 37
4096 36
4099 36
4102 34
4103 39
4104 37
4105 35
4106 37
4109 37
4112 33
4113 36
4114 35
4115 35
4117 38
4118 35
4120 38
4121 33
4122 36
4123 35
4124 32
4130 34
4131 39
4132 37
4133 36
4136 36
4139 34
4140 39
4141 37
4142 35
4143 34
4144 32
4151 34
4152 39
4153 37
4154 36
4157 36
4160 34
4161 39
4162 37
4163 35
4164 34
4165 32
4172 34
4173 39
4174 36
4177 36
4180 34
4181 39
4182 37
4183 35
4184 34
4185 37
4188 37
4191 33
4192 36
4193 35
4194 35
4196 38
4197 35
4199 38
4200 35
4201 32
4208 34
4209 39
4210 37
4213 36
4216 34
4217 39
4218 35
4219 34
4220 21
4221 24
4222 33
4225 33
4228 26
4229 31
4230 29
4231 28
4232 35
4233 32
4234 28
4235 35
4236 32
4237 26
4238 31
4239 29
4240 27
4241 26
4242 24
4243 33
4245 33
4248 26
4249 31
4250 29
4251 28
4252 35
4253 32
4254 28
4255 35
4256 32
4257 26
4258 31
4259 29
4260 27
4261 26
4262 29
4263 38
4264 29
4265 38
4266 34
4267 25
4268 28
4269 27
4270 27
4271 32
4272 30
4273 27
4274 32
4275 30
4276 25
4277 28
4278 27
4279 24
4280 33
4282 33
4285 26
4286 31
4287 29
4288 28
4289 35
4290 32
4291 28
4292 35
4293 32
4294 26
4295 31
4296 29
4297 27
4298 26
4299 24
4300 33
4303 33
4306 26
4307 31
4308 29
4309 28
4310 35
4311 28
4312 35
4313 32
4314 26
4315 29
4316 27
4317 26
4318 24
4319 33
4321 33
4323 26
4324 31
4325 29
4326 28
4327 35
4328 32
4329 28
4330 35
4331 32
4332 26
4333 31
4334 29
4335 27
4336 26
4337 29
4338 38
4339 34
4340 29
4341 38
4342 34
4343 25
4344 28
4345 27
4346 27
4347 32
4348 30
4349 27
4350 32
4351 30
4352 28
4353 24
4354 33
4357 33
4360 26
4361 31
4362 29
4363 28
4364 35
4365 32
4366 28
4367 35
4368 32
4369 26
4370 31
4371 27
4372 26
4373 5
4374 17
4375 34
4376 26
4377 17
4378 34
4379 26
4380 10
4381 15
4382 13
4383 12
4384 19
4385 16
4386 12
4387 19
4388 16
4389 10
4390 15
4391 13
4392 11
4393 10
4394 8
4395 17
4396 34
4397 26
4398 17
4399 34
4400 26
4401 10
4402 15
4403 13
4404 12
4405 19
4406 16
4407 12
4408 19
4409 16
4410 10
4411 15
4412 13
4413 11
4414 10
4415 13
4416 22
4417 18
4418 13
4419 22
4420 18
4421 9
4422 12
4423 11
4424 11
4425 16
4426 14
4427 11
4428 14
4429 9
4430 12
4431 8
4432 17
4433 34
4434 26
4435 17
4436 34
4437 26
4438 10
4439 15
4440 13
4441 12
4442 19
4443 16
4444 12
4445 19
4446 16
4447 10
4448 15
4449 13
4450 11
4451 10
4452 8
4453 17
4454 34
4455 26
4456 17
4457 34
4458 26
4459 10
4460 15
4461 12
4462 19
4463 16
4464 12
4465 19
4466 16
4467 10
4468 15
4469 13
4470 11
4471 10
4472 8
4473 17
4474 34
4475 26
4476 17
4477 34
4478 26
4479 10
4480 15
4481 13
4482 12
4483 19
4484 16
4485 12
4486 19
4487 16
4488 10
4489 15
4490 13
4491 11
4492 10
4493 13
4494 22
4495 18
4496 13
4497 22
4498 18
4499 12
4500 11
4501 11
4502 16
4503 14
4504 11
4505 16
4506 14
4507 9
4508 12
4509 11
4510 8
4511 17
4512 34
4513 26
4514 17
4515 34
4516 26
4517 10
4518 15
4519 13
4520 12
4521 19
4522 16
4523 12
4524 19
4525 16
4526 10
4527 15
4528 13
4529 11
4530 10
4531 10
4532 13
4533 22
4534 39
4535 31
4536 22
4537 39
4538 31
4539 15
4540 20
4541 18
4542 24
4543 21
4544 17
4545 24
4546 21
4547 15
4548 20
4549 18
4550 16
4551 15
4552 13
4553 22
4554 39
4555 31
4556 22
4557 39
4558 31
4559 15
4560 20
4561 18
4562 17
4563 24
4564 21
4565 17
4566 24
4567 21
4568 15
4569 20
4570 18
4571 16
4572 15
4573 18
4574 27
4575 23
4576 18
4577 27
4578 23
4579 14
4580 17
4581 16
4582 16
4583 21
4584 19
4585 16
4586 21
4587 19
4588 14
4589 17
4590 13
4591 22
4592 39
4593 31
4594 22
4595 39
4596 31
4597 15
4598 20
4599 18
4600 17
4601 24
4602 21
4603 17
4604 24
4605 21
4606 15
4607 20
4608 16
4609 15
4610 13
4611 22
4612 39
4613 31
4614 22
4615 39
4616 31
4617 15
4618 20
4619 18
4620 17
4621 24
4622 21
4623 17
4624 24
4625 21
4626 15
4627 20
4628 18
4629 16
4630 15
4631 13
4632 22
4633 39
4634 31
4635 22
4636 39
4637 31
4638 15
4639 20
4640 18
4641 17
4642 24
4643 21
4644 17
4645 24
4646 21
4647 15
4648 20
4649 18
4650 16
4651 15
4652 18
4653 27
4654 18
4655 27
4656 23
4657 14
4658 17
4659 16
4660 16
4661 21
4662 19
4663 16
4664 21
4665 19
4666 14
4667 17
4668 16
4669 13
4670 22
4671 39
4672 31
4673 22
4674 39
4675 31
4676 15
4677 20
4678 18
4679 17
4680 24
4681 21
4682 17
4683 24
4684 21
4685 15
4686 20
4687 18
4688 16
4689 15
4690 8
4691 11
4692 20
4693 37
4694 29
4695 20
4696 37
4697 29
4698 13
4699 18
4700 16
4701 15
4702 22
4703 19
4704 15
4705 22
4706 19
4707 13
4708 18
4709 16
4710 14
4711 13
4712 11
4713 20
4714 37
4715 29
4716 20
4717 37
4718 29
4719 13
4720 18
4721 16
4722 15
4723 22
4724 15
4725 22
4726 19
4727 13
4728 18
4729 16
4730 14
4731 13
4732 16
4733 25
4734 21
4735 25
4736 21
4737 12
4738 15
4739 14
4740 14
4741 19
4742 17
4743 14
4744 19
4745 17
4746 12
4747 15
4748 14
4749 11
4750 20
4751 37
4752 29
4753 37
4754 29
4755 13
4756 18
4757 16
4758 15
4759 22
4760 19
4761 15
4762 22
4763 19
4764 13
4765 18
4766 16
4767 14
4768 13
4769 11
4770 20
4771 37
4772 29
4773 20
4774 37
4775 29
4776 13
4777 18
4778 16
4779 22
4780 19
4781 15
4782 22
4783 19
4784 13
4785 18
4786 16
4787 14
4788 13
4789 11
4790 20
4791 37
4792 29
4793 20
4794 37
4795 29
4796 13
4797 18
4798 15
4799 22
4800 19
4801 15
4802 22
4803 19
4804 13
4805 18
4806 16
4807 14
4808 13
4809 16
4810 25
4811 21
4812 16
4813 25
4814 21
4815 12
4816 15
4817 14
4818 14
4819 19
4820 17
4821 14
4822 19
4823 17
4824 12
4825 15
4826 14
4827 11
4828 20
4829 37
4830 29
4831 20
4832 37
4833 29
4834 13
4835 18
4836 16
4837 15
4838 19
4839 15
4840 22
4841 19
4842 13
4843 18
4844 16
4845 14
4846 13
4847 7
4848 10
4849 19
4850 36
4851 28
4852 19
4853 36
4854 12
4855 17
4856 15
4857 14
4858 21
4859 18
4860 14
4861 21
4862 18
4863 12
4864 15
4865 13
4866 12
4867 10
4868 19
4869 36
4870 28
4871 19
4872 36
4873 28
4874 12
4875 17
4876 15
4877 14
4878 21
4879 18
4880 14
4881 21
4882 18
4883 12
4884 17
4885 15
4886 13
4887 12
4888 15
4889 24
4890 20
4891 15
4892 24
4893 20
4894 11
4895 14
4896 13
4897 13
4898 18
4899 16
4900 13
4901 18
4902 16
4903 14
4904 13
4905 10
4906 19
4907 36
4908 28
4909 19
4910 36
4911 28
4912 12
4913 17
4914 15
4915 14
4916 21
4917 18
4918 14
4919 21
4920 18
4921 12
4922 17
4923 15
4924 12
4925 10
4926 19
4927 36
4928 28
4929 19
4930 36
4931 28
4932 12
4933 17
4934 15
4935 14
4936 21
4937 18
4938 14
4939 21
4940 18
4941 12
4942 17
4943 15
4944 13
4945 12
4946 10
4947 19
4948 36
4949 28
4950 19
4951 36
4952 28
4953 12
4954 17
4955 15
4956 14
4957 21
4958 18
4959 14
4960 21
4961 18
4962 12
4963 17
4964 15
4965 13
4966 12
4967 15
4968 24
4969 20
4970 15
4971 24
4972 20
4973 11
4974 14
4975 13
4976 13
4977 18
4978 16
4979 13
4980 18
4981 16
4982 11
4983 14
4984 13
4985 10
4986 19
4987 36
4988 28
4989 19
4990 36
4991 28
4992 12
4993 17
4994 15
4995 14
4996 21
4997 18
4998 14
4999 21
5000 18
5001 12
5002 17
5003 15
5004 13
5005 12
5006 14
5007 17
5008 26
5010 35
5011 26
5013 35
5014 19
5015 24
5016 22
5017 28
5018 25
5019 21
5020 28
5021 25
5022 19
5023 24
5024 22
5025 20
5026 19
5027 17
5028 26
5030 35
5032 35
5033 19
5034 24
5035 22
5036 21
5037 28
5038 25
5039 21
5040 28
5041 25
5042 19
5043 24
5044 22
5045 20
5046 19
5047 22
5048 31
5049 27
5050 22
5051 27
5052 18
5053 21
5054 20
5055 20
5056 25
5057 23
5058 20
5059 25
5060 23
5061 21
5062 20
5063 17
5064 26
5066 35
5067 26
5069 35
5070 19
5071 24
5072 22
5073 21
5074 28
5075 25
5076 21
5077 28
5078 25
5079 19
5080 24
5081 22
5082 20
5083 19
5084 17
5085 26
5087 35
5088 26
5090 35
5091 19
5092 24
5093 22
5094 21
5095 28
5096 25
5097 21
5098 28
5099 25
5100 19
5101 24
5102 22
5103 20
5104 17
5105 26
5107 35
5108 26
5110 19
5111 24
5112 22
5113 21
5114 28
5115 25
5116 21
5117 28
5118 25
5119 19
5120 24
5121 22
5122 20
5123 19
5124 22
5125 31
5126 27
5127 22
5128 31
5129 27
5130 18
5131 21
5132 20
5133 20
5134 25
5135 23
5136 20
5137 25
5138 23
5139 18
5140 21
5141 20
5142 17
5143 26
5145 35
5146 26
5148 35
5149 19
5150 24
5151 22
5152 21
5153 28
5154 25
5155 21
5156 28
5157 25
5158 19
5159 24
5160 22
5161 19
5162 11
5163 14
5164 23
5166 32
5167 23
5169 16
5170 21
5171 19
5172 18
5173 25
5174 22
5175 18
5176 25
5177 22
5178 16
5179 21
5180 19
5181 17
5182 14
5183 23
5185 32
5186 23
5188 32
5189 16
5190 21
5191 19
5192 18
5193 25
5194 22
5195 18
5196 25
5197 22
5198 16
5199 21
5200 19
5201 17
5202 16
5203 19
5204 28
5205 24
5206 19
5207 28
5208 24
5209 15
5210 18
5211 17
5212 17
5213 22
5214 20
5215 17
5216 22
5217 20
5218 15
5219 18
5220 17
5221 14
5222 23
5224 32
5226 32
5227 16
5228 21
5229 19
5230 18
5231 25
5232 22
5233 18
5234 25
5235 22
5236 16
5237 21
5238 19
5239 17
5240 16
5241 14
5242 23
5244 32
5245 23
5247 32
5248 16
5249 21
5250 19
5251 18
5252 25
5253 22
5254 18
5255 25
5256 22
5257 16
5258 21
5259 19
5260 17
5261 16
5262 14
5263 23
5265 32
5266 23
5268 32
5269 16
5270 21
5271 19
5272 18
5273 25
5274 18
5275 25
5276 22
5277 16
5278 21
5279 19
5280 17
5281 16
5282 19
5283 24
5284 19
5285 28
5286 24
5287 15
5288 18
5289 17
5290 17
5291 22
5292 20
5293 17
5294 22
5295 20
5296 15
5297 18
5298 17
5299 14
5300 23
5302 32
5303 23
5305 32
5306 16
5307 21
5308 19
5309 18
5310 25
5311 22
5312 18
5313 25
5314 22
5315 16
5316 21
5317 19
5318 17
5319 16
5320 7
5321 10
5322 19
5323 36
5324 28
5325 19
5326 36
5327 28
5328 12
5329 17
5330 15
5331 14
5332 21
5333 18
5334 14
5335 21
5336 18
5337 12
5338 17
5339 15
5340 12
5341 10
5342 19
5343 36
5344 28
5345 19
5346 36
5347 28
5348 12
5349 17
5350 15
5351 14
5352 21
5353 18
5354 14
5355 18
5356 12
5357 17
5358 15
5359 13
5360 12
5361 15
5362 24
5363 20
5364 15
5365 24
5366 20
5367 11
5368 14
5369 13
5370 13
5371 18
5372 16
5373 13
5374 18
5375 16
5376 11
5377 14
5378 13
5379 10
5380 19
5381 36
5382 28
5383 19
5384 36
5385 28
5386 12
5387 17
5388 15
5389 14
5390 21
5391 18
5392 14
5393 21
5394 18
5395 12
5396 17
5397 15
5398 13
5399 12
5400 10
5401 19
5402 36
5403 28
5404 19
5405 36
5406 28
5407 12
5408 17
5409 14
5410 21
5411 14
5412 21
5413 18
5414 12
5415 17
5416 15
5417 13
5418 12
5419 10
5420 19
5421 36
5422 19
5423 36
5424 28
5425 12
5426 17
5427 15
5428 14
5429 21
5430 18
5431 14
5432 21
5433 18
5434 12
5435 17
5436 13
5437 12
5438 15
5439 24
5440 20
5441 15
5442 24
5443 20
5444 11
5445 14
5446 13
5447 13
5448 18
5449 16
5450 13
5451 18
5452 16
5453 11
5454 14
5455 13
5456 10
5457 19
5458 36
5459 28
5460 19
5461 36
5462 28
5463 12
5464 17
5465 15
5466 14
5467 21
5468 18
5469 14
5470 21
5471 18
5472 12
5473 17
5474 15
5475 13
5476 12
5477 14
5478 17
5479 26
5481 35
5483 35
5484 24
5485 22
5486 21
5487 28
5488 25
5489 21
5490 28
5491 25
5492 19
5493 24
5494 22
5495 20
5496 19
5497 17
5498 26
5500 35
5501 26
5503 35
5504 19
5505 24
5506 22
5507 21
5508 25
5509 21
5510 28
5511 24
5512 22
5513 20
5514 19
5515 22
5516 31
5517 27
5518 22
5519 31
5520 27
5521 18
5522 21
5523 20
5524 20
5525 25
5526 23
5527 20
5528 25
5529 23
5530 18
5531 21
5532 20
5533 17
5534 26
5535 35
5536 26
5538 35
5539 19
5540 24
5541 22
5542 21
5543 28
5544 25
5545 28
5546 25
5547 19
5548 24
5549 22
5550 20
5551 19
5552 17
5553 26
5554 35
5555 26
5557 35
5558 19
5559 24
5560 22
5561 21
5562 28
5563 25
5564 21
5565 28
5566 25
5567 19
5568 24
5569 22
5570 20
5571 19
5572 17
5573 26
5575 35
5576 26
5578 35
5579 19
5580 24
5581 22
5582 21
5583 28
5584 25
5585 21
5586 28
5587 25
5588 19
5589 24
5590 22
5591 20
5592 19
5593 22
5594 31
5595 27
5596 22
5597 31
5598 27
5599 18
5600 21
5601 20
5602 20
5603 25
5604 23
5605 20
5606 25
5607 23
5608 18
5609 21
5610 20
5611 17
5612 26
5614 35
5615 26
5617 35
5618 19
5619 24
5620 22
5621 21
5622 28
5623 25
5624 21
5625 25
5626 19
5627 24
5628 20
5629 19
5630 11
5631 14
5632 23
5634 32
5635 23
5637 32
5638 16
5639 21
5640 19
5641 18
5642 25
5643 22
5644 18
5645 25
5646 22
5647 16
5648 21
5649 17
5650 16
5651 14
5652 23
5654 32
5655 23
5657 32
5658 16
5659 21
5660 18
5661 25
5662 22
5663 18
5664 25
5665 22
5666 16
5667 21
5668 19
5669 17
5670 16
5671 19
5672 28
5673 19
5674 24
5675 15
5676 18
5677 17
5678 17
5679 22
5680 17
5681 22
5682 20
5683 15
5684 18
5685 17
5686 23
5688 32
5689 23
5690 32
5691 16
5692 21
5693 19
5694 18
5695 25
5696 18
5697 25
5698 22
5699 16
5700 21
5701 19
5702 17
5703 16
5704 14
5705 23
5707 32
5708 23
5710 32
5711 16
5712 21
5713 19
5714 18
5715 25
5716 22
5717 18
5718 25
5719 22
5720 16
5721 21
5722 19
5723 17
5724 16
5725 14
5726 23
5728 32
5729 23
5731 32
5732 16
5733 21
5734 19
5735 18
5736 25
5737 22
5738 18
5739 25
5740 22
5741 16
5742 21
5743 19
5744 17
5745 16
5746 19
5747 28
5748 24
5749 19
5750 28
5751 24
5752 15
5753 18
5754 17
5755 17
5756 22
5757 20
5758 17
5759 22
5760 20
5761 18
5762 17
5763 14
5764 23
5766 32
5767 23
5769 32
5770 16
5771 21
5772 19
5773 18
5774 25
5775 22
5776 18
5777 22
5778 16
5779 21
5780 19
5781 17
5782 16
5783 5
5784 8
5785 17
5786 34
5787 26
5788 17
5789 34
5790 26
5791 10
5792 15
5793 13
5794 12
5795 19
5796 16
5797 12
5798 16
5799 10
5800 13
5801 11
5802 10
5803 8
5804 17
5805 34
5806 26
5807 17
5808 34
5809 26
5810 10
5811 15
5812 13
5813 12
5814 19
5815 16
5816 12
5817 19
5818 16
5819 10
5820 15
5821 13
5822 11
5823 10
5824 13
5825 22
5826 18
5827 13
5828 22
5829 18
5830 12
5831 11
5832 16
5833 14
5834 11
5835 16
5836 14
5837 9
5838 12
5839 11
5840 8
5841 17
5842 34
5843 26
5844 17
5845 34
5846 26
5847 10
5848 15
5849 13
5850 12
5851 19
5852 12
5853 19
5854 16
5855 10
5856 15
5857 13
5858 11
5859 10
5860 8
5861 17
5862 34
5863 26
5864 17
5865 34
5866 26
5867 10
5868 15
5869 13
5870 12
5871 19
5872 16
5873 12
5874 19
5875 16
5876 15
5877 13
5878 11
5879 10
5880 8
5881 17
5882 34
5883 17
5884 34
5885 26
5886 10
5887 15
5888 13
5889 12
5890 19
5891 16
5892 12
5893 19
5894 16
5895 15
5896 13
5897 11
5898 10
5899 13
5900 22
5901 18
5902 13
5903 22
5904 18
5905 9
5906 12
5907 11
5908 11
5909 16
5910 14
5911 11
5912 16
5913 14
5914 9
5915 12
5916 11
5917 8
5918 17
5919 34
5920 26
5921 17
5922 34
5923 26
5924 15
5925 13
5926 19
5927 16
5928 12
5929 19
5930 16
5931 10
5932 15
5933 13
5934 11
5935 10
5936 10
5937 13
5938 22
5939 39
5940 31
5941 22
5942 31
5943 20
5944 18
5945 17
5946 24
5947 21
5948 17
5949 24
5950 21
5951 15
5952 20
5953 18
5954 16
5955 15
5956 13
5957 22
5958 39
5959 31
5960 22
5961 39
5962 31
5963 15
5964 20
5965 18
5966 17
5967 24
5968 21
5969 17
5970 21
5971 15
5972 20
5973 18
5974 16
5975 15
5976 18
5977 27
5978 23
5979 18
5980 27
5981 23
5982 14
5983 17
5984 16
5985 16
5986 21
5987 19
5988 16
5989 21
5990 19
5991 14
5992 17
5993 16
5994 13
5995 22
5996 39
5997 31
5998 22
5999 39
6000 31
6001 15
6002 20
6003 18
6004 17
6005 24
6006 21
6007 17
6008 24
6009 21
6010 15
6011 20
6012 18
6013 16
6014 15
6015 13
6016 22
6017 39
6018 31
6019 22
6020 39
6021 31
6022 15
6023 20
6024 18
6025 17
6026 24
6027 21
6028 17
6029 24
6030 21
6031 15
6032 20
6033 16
6034 15
6035 13
6036 22
6037 39
6038 31
6039 22
6040 39
6041 31
6042 15
6043 20
6044 18
6045 17
6046 24
6047 17
6048 24
6049 21
6050 15
6051 20
6052 18
6053 16
6054 15
6055 18
6056 23
6057 18
6058 27
6059 23
6060 14
6061 17
6062 16
6063 16
6064 21
6065 19
6066 16
6067 21
6068 19
6069 14
6070 17
6071 16
6072 13
6073 22
6074 39
6075 31
6076 22
6077 39
6078 31
6079 15
6080 20
6081 18
6082 17
6083 24
6084 17
6085 21
6086 15
6087 20
6088 18
6089 16
6090 15
6091 8
6092 11
6093 20
6094 37
6095 29
6096 20
6097 37
6098 29
6099 13
6100 18
6101 16
6102 15
6103 22
6104 19
6105 15
6106 22
6107 19
6108 13
6109 18
6110 16
6111 14
6112 13
6113 11
6114 37
6115 29
6116 20
6117 37
6118 29
6119 13
6120 18
6121 16
6122 22
6123 19
6124 15
6125 19
6126 13
6127 18
6128 16
6129 14
6130 13
6131 16
6132 25
6133 21
6134 16
6135 25
6136 21
6137 12
6138 15
6139 14
6140 14
6141 19
6142 14
6143 19
6144 17
6145 12
6146 15
6147 14
6148 11
6149 20
6150 37
6151 29
6152 20
6153 37
6154 29
6155 13
6156 18
6157 16
6158 15
6159 22
6160 19
6161 15
6162 22
6163 19
6164 13
6165 18
6166 16
6167 14
6168 13
6169 11
6170 20
6171 37
6172 29
6173 20
6174 37
6175 29
6176 13
6177 18
6178 15
6179 22
6180 19
6181 15
6182 22
6183 19
6184 13
6185 18
6186 16
6187 14
6188 13
6189 11
6190 20
6191 37
6192 29
6193 20
6194 37
6195 29
6196 13
6197 18
6198 16
6199 15
6200 22
6201 19
6202 15
6203 22
6204 13
6205 18
6206 16
6207 14
6208 13
6209 16
6210 25
6211 21
6212 16
6213 25
6214 21
6215 15
6216 14
6217 19
6218 17
6219 14
6220 19
6221 17
6222 12
6223 15
6224 14
6225 11
6226 20
6227 29
6228 20
6229 37
6230 29
6231 13
6232 18
6233 16
6234 15
6235 22
6236 19
6237 15
6238 22
6239 19
6240 13
6241 18
6242 16
6243 14
6244 13
6245 6
6246 9
6247 18
6248 35
6249 27
6250 18
6251 35
6252 27
6253 11
6254 16
6255 14
6256 13
6257 20
6258 17
6259 13
6260 20
6261 17
6262 11
6263 16
6264 14
6265 12
6266 11
6267 9
6268 18
6269 35
6270 27
6271 18
6272 35
6273 27
6274 11
6275 16
6276 14
6277 13
6278 20
6279 17
6280 13
6281 20
6282 17
6283 11
6284 16
6285 14
6286 12
6287 11
6288 23
6289 19
6290 14
6291 23
6292 19
6293 10
6294 13
6295 12
6296 12
6297 17
6298 15
6299 12
6300 17
6301 15
6302 10
6303 13
6304 12
6305 9
6306 18
6307 35
6308 27
6309 18
6310 35
6311 27
6312 11
6313 16
6314 14
6315 13
6316 20
6317 17
6318 13
6319 20
6320 17
6321 11
6322 16
6323 14
6324 12
6325 11
6326 9
6327 18
6328 35
6329 27
6330 18
6331 35
6332 27
6333 11
6334 16
6335 14
6336 13
6337 20
6338 17
6339 13
6340 20
6341 17
6342 11
6343 16
6344 14
6345 12
6346 11
6347 9
6348 18
6349 35
6350 27
6351 18
6352 35
6353 27
6354 11
6355 16
6356 14
6357 13
6358 20
6359 17
6360 13
6361 20
6362 17
6363 11
6364 16
6365 14
6366 12
6367 11
6368 14
6369 23
6370 19
6371 14
6372 23
6373 13
6374 12
6375 12
6376 17
6377 15
6378 17
6379 15
6380 10
6381 13
6382 12
6383 9
6384 18
6385 35
6386 27
6387 18
6388 35
6389 27
6390 11
6391 16
6392 14
6393 13
6394 20
6395 17
6396 13
6397 20
6398 17
6399 11
6400 16
6401 14
6402 12
6403 11
6404 5
6405 8
6406 17
6407 26
6408 17
6409 34
6410 26
6411 10
6412 15
6413 13
6414 12
6415 19
6416 16
6417 12
6418 19
6419 16
6420 10
6421 15
6422 13
6423 11
6424 10
6425 8
6426 17
6427 34
6428 26
6429 17
6430 34
6431 26
6432 10
6433 15
6434 13
6435 12
6436 19
6437 16
6438 12
6439 19
6440 16
6441 10
6442 15
6443 13
6444 11
6445 10
6446 13
6447 22
6448 18
6449 13
6450 22
6451 18
6452 9
6453 12
6454 11
6455 11
6456 16
6457 14
6458 11
6459 16
6460 14
6461 9
6462 12
6463 11
6464 8
6465 17
6466 34
6467 26
6468 17
6469 34
6470 26
6471 10
6472 15
6473 13
6474 12
6475 19
6476 16
6477 12
6478 19
6479 16
6480 10
6481 15
6482 13
6483 11
6484 10
6485 8
6486 17
6487 34
6488 26
6489 17
6490 26
6491 10
6492 15
6493 13
6494 12
6495 19
6496 16
6497 12
6498 19
6499 16
6500 10
6501 15
6502 13
6503 11
6504 10
6505 8
6506 17
6507 34
6508 17
6509 34
6510 26
6511 10
6512 15
6513 13
6514 12
6515 19
6516 16
6517 12
6518 19
6519 16
6520 10
6521 15
6522 13
6523 11
6524 10
6525 13
6526 22
6527 18
6528 13
6529 22
6530 18
6531 9
6532 12
6533 11
6534 11
6535 16
6536 14
6537 11
6538 16
6539 14
6540 9
6541 12
6542 11
6543 8
6544 17
6545 34
6546 26
6547 17
6548 34
6549 26
6550 10
6551 15
6552 13
6553 12
6554 19
6555 16
6556 12
6557 19
6558 16
6559 10
6560 15
6561 13
6562 11
6563 10
6564 8
6565 11
6566 20
6567 37
6568 29
6569 20
6570 37
6571 29
6572 13
6573 18
6574 16
6575 15
6576 22
6577 19
6578 15
6579 22
6580 19
6581 13
6582 18
6583 16
6584 14
6585 13
6586 11
6587 20
6588 37
6589 29
6590 20
6591 37
6592 29
6593 13
6594 18
6595 16
6596 15
6597 22
6598 19
6599 15
6600 22
6601 19
6602 13
6603 18
6604 16
6605 14
6606 13
6607 16
6608 25
6609 21
6610 16
6611 25
6612 21
6613 12
6614 15
6615 14
6616 14
6617 19
6618 17
6619 14
6620 19
6621 17
6622 12
6623 15
6624 14
6625 11
6626 20
6627 37
6628 29
6629 20
6630 37
6631 29
6632 13
6633 18
6634 15
6635 22
6636 19
6637 15
6638 22
6639 19
6640 13
6641 18
6642 16
6643 14
6644 13
6645 20
6646 37
6647 29
6648 20
6649 37
6650 29
6651 13
6652 18
6653 16
6654 15
6655 22
6656 19
6657 15
6658 22
6659 19
6660 13
6661 18
6662 16
6663 14
6664 13
6665 11
6666 20
6667 37
6668 29
6669 37
6670 29
6671 13
6672 16
6673 15
6674 22
6675 19
6676 15
6677 22
6678 19
6679 13
6680 18
6681 16
6682 14
6683 13
6684 16
6685 21
6686 16
6687 25
6688 21
6689 12
6690 15
6691 14
6692 14
6693 19
6694 17
6695 14
6696 19
6697 17
6698 12
6699 15
6700 14
6701 11
6702 20
6703 37
6704 29
6705 20
6706 37
6707 29
6708 13
6709 18
6710 16
6711 15
6712 22
6713 19
6714 15
6715 22
6716 19
6717 13
6718 18
6719 16
6720 14
6721 13
6722 17
6723 20
6725 38
6726 29
6728 38
6729 22
6730 27
6731 25
6732 24
6733 31
6734 28
6735 24
6736 31
6737 28
6738 22
6739 27
6740 25
6741 23
6742 22
6743 20
6744 29
6745 38
6746 29
6748 38
6749 22
6750 27
6751 24
6752 31
6753 24
6754 28
6755 22
6756 27
6757 25
6758 23
6759 22
6760 25
6761 34
6762 30
6763 25
6764 34
6765 30
6766 21
6767 23
6768 23
6769 28
6770 26
6771 26
6772 21
6773 24
6774 23
6775 20
6776 29
6778 38
6779 29
6781 38
6782 22
6783 25
6784 24
6785 28
6786 24
6787 31
6788 28
6789 22
6790 25
6791 23
6792 22
6793 20
6794 29
6796 38
6797 29
6799 38
6800 22
6801 27
6802 25
6803 24
6804 31
6805 28
6806 24
6807 31
6808 28
6809 22
6810 27
6811 25
6812 23
6813 22
6814 20
6815 29
6817 38
6818 29
6820 38
6821 22
6822 27
6823 25
6824 24
6825 31
6826 28
6827 24
6828 31
6829 22
6830 27
6831 25
6832 23
6833 22
6834 25
6835 34
6836 30
6837 25
6838 34
6839 30
6840 21
6841 24
6842 23
6843 23
6844 28
6845 26
6846 23
6847 28
6848 21
6849 24
6850 23
6851 20
6852 29
6854 38
6855 29
6857 38
6858 22
6859 27
6860 25
6861 24
6862 31
6863 28
6864 24
6865 31
6866 28
6867 22
6868 27
6869 23
6870 22
6871 13
6872 16
6873 25
6875 34
6876 25
6878 34
6879 18
6880 23
6881 20
6882 27
6883 24
6884 20
6885 27
6886 24
6887 18
6888 23
6889 21
6890 19
6891 18
6892 16
6893 25
6894 34
6895 25
6897 34
6898 18
6899 23
6900 21
6901 27
6902 24
6903 20
6904 27
6905 24
6906 18
6907 23
6908 19
6909 18
6910 21
6911 30
6912 26
6913 21
6914 30
6915 26
6916 17
6917 20
6918 19
6919 24
6920 22
6921 19
6922 24
6923 22
6924 17
6925 20
6926 19
6927 16
6928 25
6930 34
6931 25
6933 34
6934 18
6935 23
6936 21
6937 20
6938 27
6939 24
6940 20
6941 27
6942 24
6943 18
6944 23
6945 21
6946 19
6947 18
6948 16
6949 25
6950 34
6951 25
6953 34
6954 18
6955 23
6956 21
6957 20
6958 27
6959 24
6960 20
6961 27
6962 24
6963 18
6964 23
6965 21
6966 19
6967 18
6968 25
6970 34
6971 25
6973 34
6974 18
6975 23
6976 21
6977 20
6978 27
6979 24
6980 20
6981 27
6982 24
6983 18
6984 23
6985 21
6986 19
6987 18
6988 21
6989 30
6990 26
6991 21
6992 30
6993 26
6994 17
6995 20
6996 19
6997 19
6998 24
6999 22
7000 19
7001 24
7002 22
7003 17
7004 20
7005 19
7006 16
7007 25
7009 34
7010 25
7012 34
7013 18
7014 23
7015 21
7016 20
7017 27
7018 24
7019 20
7020 27
7021 24
7022 18
7023 23
7024 21
7025 19
7026 18
7027 8
7028 11
7029 20
7030 37
7031 29
7032 20
7033 37
7034 29
7035 13
7036 18
7037 16
7038 15
7039 22
7040 19
7041 15
7042 22
7043 19
7044 13
7045 18
7046 16
7047 14
7048 13
7049 11
7050 20
7051 37
7052 29
7053 20
7054 37
7055 29
7056 13
7057 18
7058 16
7059 15
7060 22
7061 19
7062 15
7063 22
7064 19
7065 13
7066 18
7067 16
7068 14
7069 13
7070 16
7071 25
7072 21
7073 16
7074 25
7075 21
7076 12
7077 14
7078 14
7079 17
7080 14
7081 19
7082 17
7083 12
7084 15
7085 14
7086 11
7087 20
7088 37
7089 29
7090 37
7091 29
7092 13
7093 18
7094 16
7095 15
7096 22
7097 19
7098 22
7099 19
7100 13
7101 18
7102 16
7103 14
7104 13
7105 11
7106 20
7107 37
7108 29
7109 20
7110 37
7111 29
7112 13
7113 18
7114 16
7115 15
7116 22
7117 19
7118 15
7119 22
7120 19
7121 13
7122 18
7123 16
7124 14
7125 13
7126 11
7127 20
7128 37
7129 29
7130 20
7131 37
7132 29
7133 13
7134 16
7135 15
7136 22
7137 19
7138 15
7139 22
7140 19
7141 13
7142 18
7143 16
7144 14
7145 13
7146 16
7147 25
7148 21
7149 16
7150 25
7151 21
7152 12
7153 15
7154 14
7155 19
7156 17
7157 14
7158 19
7159 17
7160 15
7161 14
7162 11
7163 20
7164 37
7165 29
7166 20
7167 37
7168 29
7169 13
7170 18
7171 16
7172 22
7173 19
7174 15
7175 22
7176 19
7177 13
7178 18
7179 16
7180 14
7181 13
7182 17
7183 20
7184 29
7186 38
7187 29
7189 38
7190 22
7191 27
7192 25
7193 24
7194 31
7195 28
7196 24
7197 31
7198 28
7199 22
7200 27
7201 25
7202 23
7203 22
7204 20
7205 29
7207 38
7208 29
7210 38
7211 22
7212 27
7213 24
7214 31
7215 28
7216 24
7217 31
7218 28
7219 22
7220 25
7221 23
7222 25
7223 34
7224 30
7225 25
7226 34
7227 30
7228 21
7229 24
7230 23
7231 23
7232 28
7233 26
7234 23
7235 28
7236 26
7237 21
7238 24
7239 23
7240 20
7242 38
7243 29
7245 38
7246 27
7247 25
7248 24
7249 31
7250 28
7251 24
7252 31
7253 28
7254 22
7255 27
7256 25
7257 23
7258 22
7259 20
7260 29
7262 38
7263 29
7265 38
7266 22
7267 27
7268 25
7269 24
7270 31
7271 28
7272 24
7273 31
7274 28
7275 22
7276 27
7277 25
7278 23
7279 22
7280 20
7281 29
7283 38
7284 29
7286 38
7287 22
7288 27
7289 25
7290 24
7291 31
7292 28
7293 24
7294 31
7295 28
7296 22
7297 27
7298 25
7299 23
7300 22
7301 25
7302 34
7303 30
7304 25
7305 34
7306 30
7307 21
7308 24
7309 23
7310 23
7311 28
7312 26
7313 23
7314 28
7315 26
7316 21
7317 24
7318 23
7319 20
7320 29
7321 38
7322 29
7324 38
7325 22
7326 27
7327 25
7328 24
7329 31
7330 24
7331 31
7332 28
7333 22
7334 27
7335 25
7336 23
7337 22
7338 13
7339 16
7340 25
7342 34
7343 25
7345 34
7346 18
7347 23
7348 21
7349 20
7350 27
7351 24
7352 20
7353 27
7354 24
7355 18
7356 23
7357 21
7358 18
7359 16
7360 25
7362 34
7363 25
7364 34
7365 18
7366 23
7367 21
7368 20
7369 27
7370 24
7371 20
7372 27
7373 24
7374 18
7375 23
7376 21
7377 19
7378 18
7379 21
7380 30
7381 26
7382 21
7383 30
7384 26
7385 17
7386 20
7387 19
7388 19
7389 24
7390 22
7391 19
7392 24
7393 22
7394 17
7395 19
7396 16
7397 25
7399 34
7400 25
7402 34
7403 18
7404 23
7405 20
7406 27
7407 24
7408 20
7409 27
7410 24
7411 18
7412 23
7413 21
7414 19
7415 18
7416 16
7417 25
7419 34
7421 34
7422 18
7423 23
7424 21
7425 20
7426 27
7427 24
7428 27
7429 24
7430 18
7431 23
7432 21
7433 19
7434 18
7435 25
7437 34
7438 25
7440 34
7441 18
7442 23
7443 21
7444 20
7445 27
7446 24
7447 20
7448 27
7449 24
7450 18
7451 23
7452 21
7453 19
7454 18
7455 21
7456 30
7457 26
7458 21
7459 30
7460 26
7461 17
7462 20
7463 19
7464 19
7465 24
7466 22
7467 19
7468 24
7469 22
7470 20
7471 19
7472 16
7473 25
7475 34
7476 25
7478 34
7479 18
7480 23
7481 21
7482 20
7483 27
7484 24
7485 20
7486 27
7487 24
7488 18
7489 23
7490 21
7491 19
7492 18
7493 4
7494 7
7495 16
7496 33
7497 25
7498 16
7499 33
7500 25
7501 9
7502 14
7503 12
7504 11
7505 18
7506 15
7507 11
7508 18
7509 15
7510 9
7511 14
7512 12
7513 10
7514 9
7515 7
7516 16
7517 33
7518 25
7519 16
7520 33
7521 25
7522 9
7523 14
7524 12
7525 11
7526 18
7527 15
7528 11
7529 18
7530 15
7531 9
7532 14
7533 12
7534 9
7535 12
7536 21
7537 17
7538 12
7539 21
7540 17
7541 8
7542 10
7543 10
7544 15
7545 13
7546 10
7547 15
7548 13
7549 8
7550 11
7551 10
7552 7
7553 16
7554 33
7555 25
7556 16
7557 33
7558 25
7559 9
7560 14
7561 12
7562 11
7563 18
7564 15
7565 11
7566 18
7567 15
7568 9
7569 14
7570 12
7571 10
7572 9
7573 7
7574 16
7575 33
7576 25
7577 16
7578 33
7579 25
7580 9
7581 14
7582 12
7583 11
7584 18
7585 11
7586 18
7587 15
7588 9
7589 14
7590 12
7591 10
7592 9
7593 7
7594 16
7595 33
7596 25
7597 16
7598 33
7599 25
7600 9
7601 14
7602 11
7603 18
7604 15
7605 11
7606 15
7607 9
7608 14
7609 12
7610 10
7611 9
7612 12
7613 21
7614 17
7615 12
7616 21
7617 8
7618 11
7619 10
7620 10
7621 15
7622 13
7623 10
7624 15
7625 13
7626 8
7627 11
7628 10
7629 7
7630 16
7631 33
7632 25
7633 16
7634 33
7635 25
7636 9
7637 14
7638 12
7639 11
7640 18
7641 15
7642 11
7643 18
7644 15
7645 9
7646 14
7647 12
7648 10
7649 9
7650 7
7651 10
7652 19
7653 36
7654 28
7655 19
7656 36
7657 28
7658 12
7659 17
7660 15
7661 14
7662 18
7663 14
7664 21
7665 18
7666 12
7667 17
7668 15
7669 13
7670 12
7671 10
7672 19
7673 36
7674 28
7675 19
7676 36
7677 28
7678 12
7679 17
7680 15
7681 21
7682 18
7683 14
7684 21
7685 18
7686 12
7687 17
7688 15
7689 13
7690 12
7691 15
7692 24
7693 20
7694 15
7695 24
7696 20
7697 11
7698 13
7699 13
7700 18
7701 16
7702 13
7703 18
7704 16
7705 11
7706 14
7707 13
7708 10
7709 19
7710 36
7711 28
7712 19
7713 36
7714 28
7715 12
7716 17
7717 15
7718 14
7719 21
7720 18
7721 14
7722 21
7723 18
7724 12
7725 17
7726 15
7727 13
7728 12
7729 10
7730 19
7731 36
7732 28
7733 19
7734 36
7735 28
7736 12
7737 17
7738 15
7739 14
7740 21
7741 14
7742 21
7743 18
7744 12
7745 17
7746 15
7747 13
7748 12
7749 10
7750 19
7751 36
7752 28
7753 19
7754 36
7755 28
7756 12
7757 17
7758 15
7759 14
7760 21
7761 18
7762 14
7763 21
7764 18
7765 12
7766 17
7767 13
7768 12
7769 15
7770 24
7771 20
7772 15
7773 20
7774 11
7775 14
7776 13
7777 13
7778 18
7779 16
7780 13
7781 18
7782 16
7783 11
7784 14
7785 13
7786 10
7787 19
7788 36
7789 28
7790 19
7791 36
7792 28
7793 12
7794 17
7795 15
7796 14
7797 21
7798 14
7799 21
7800 18
7801 12
7802 17
7803 15
7804 13
7805 12
7806 6
7807 9
7808 18
7809 35
7810 27
7811 18
7812 35
7813 27
7814 11
7815 16
7816 14
7817 13
7818 20
7819 17
7820 13
7821 20
7822 17
7823 11
7824 16
7825 14
7826 12
7827 11
7828 9
7829 18
7830 35
7831 27
7832 18
7833 35
7834 27
7835 11
7836 16
7837 14
7838 13
7839 20
7840 17
7841 13
7842 20
7843 17
7844 11
7845 16
7846 14
7847 12
7848 14
7849 23
7850 19
7851 14
7852 19
7853 10
7854 13
7855 12
7856 12
7857 17
7858 15
7859 12
7860 17
7861 15
7862 10
7863 13
7864 12
7865 9
7866 35
7867 27
7868 18
7869 35
7870 27
7871 11
7872 14
7873 13
7874 20
7875 17
7876 13
7877 20
7878 17
7879 11
7880 16
7881 14
7882 12
7883 11
7884 9
7885 18
7886 35
7887 27
7888 18
7889 35
7890 27
7891 11
7892 16
7893 14
7894 13
7895 20
7896 17
7897 13
7898 20
7899 17
7900 11
7901 16
7902 14
7903 12
7904 11
7905 9
7906 18
7907 35
7908 27
7909 18
7910 35
7911 27
7912 11
7913 16
7914 14
7915 13
7916 20
7917 17
7918 13
7919 20
7920 17
7921 16
7922 14
7923 12
7924 11
7925 14
7926 23
7927 19
7928 14
7929 23
7930 19
7931 10
7932 13
7933 12
7934 12
7935 15
7936 12
7937 17
7938 15
7939 10
7940 13
7941 12
7942 9
7943 18
7944 35
7945 27
7946 18
7947 35
7948 11
7949 16
7950 14
7951 13
7952 20
7953 17
7954 13
7955 20
7956 17
7957 11
7958 16
7959 14
7960 12
7961 11
7962 6
7963 9
7964 18
7965 35
7966 27
7967 35
7968 27
7969 11
7970 16
7971 14
7972 13
7973 20
7974 17
7975 13
7976 17
7977 11
7978 16
7979 14
7980 12
7981 11
7982 9
7983 18
7984 35
7985 27
7986 35
7987 27
7988 11
7989 16
7990 14
7991 13
7992 20
7993 17
7994 13
7995 20
7996 17
7997 11
7998 16
7999 14
8000 12
8001 11
8002 14
8003 23
8004 19
8005 14
8006 23
8007 19
8008 10
8009 13
8010 12
8011 12
8012 17
8013 15
8014 12
8015 17
8016 15
8017 10
8018 13
8019 12
8020 9
8021 18
8022 35
8023 27
8024 18
8025 35
8026 27
8027 11
8028 16
8029 14
8030 13
8031 20
8032 17
8033 13
8034 20
8035 17
8036 11
8037 16
8038 14
8039 12
8040 11
8041 9
8042 18
8043 35
8044 27
8045 18
8046 35
8047 27
8048 11
8049 16
8050 14
8051 13
8052 20
8053 17
8054 13
8055 20
8056 17
8057 11
8058 16
8059 14
8060 12
8061 11
8062 9
8063 18
8064 35
8065 18
8066 35
8067 27
8068 11
8069 16
8070 14
8071 13
8072 20
8073 17
8074 13
8075 20
8076 11
8077 16
8078 14
8079 12
8080 11
8081 14
8082 23
8083 19
8084 14
8085 23
8086 19
8087 10
8088 12
8089 12
8090 17
8091 15
8092 12
8093 17
8094 15
8095 10
8096 13
8097 12
8098 9
8099 18
8100 35
8101 27
8102 18
8103 35
8104 27
8105 11
8106 16
8107 14
8108 13
8109 20
8110 17
8111 13
8112 20
8113 17
8114 11
8115 14
8116 12
8117 11
8118 11
8119 14
8120 23
8122 32
8123 23
8125 32
8126 16
8127 21
8128 19
8129 18
8130 25
8131 22
8132 18
8133 25
8134 22
8135 16
8136 21
8137 19
8138 17
8139 16
8140 14
8141 23
8143 23
8145 32
8146 16
8147 21
8148 19
8149 18
8150 25
8151 18
8152 25
8153 22
8154 16
8155 21
8156 19
8157 19
8158 28
8159 24
8160 19
8161 28
8162 24
8163 18
8164 17
8165 22
8166 20
8167 17
8168 22
8169 20
8170 15
8171 18
8172 17
8173 14
8174 23
8175 32
8176 23
8178 32
8179 16
8180 21
8181 19
8182 18
8183 25
8184 22
8185 18
8186 25
8187 22
8188 16
8189 21
8190 19
8191 17
8192 16
8193 14
8194 23
8196 32
8197 23
8199 32
8200 16
8201 21
8202 19
8203 18
8204 25
8205 22
8206 18
8207 25
8208 22
8209 16
8210 21
8211 19
8212 17
8213 16
8214 14
8215 23
8217 23
8219 32
8220 16
8221 21
8222 19
8223 18
8224 25
8225 22
8226 18
8227 25
8228 22
8229 21
8230 19
8231 17
8232 16
8233 19
8234 28
8235 24
8236 19
8237 28
8238 24
8239 17
8240 17
8241 22
8242 20
8243 17
8244 22
8245 20
8246 15
8247 18
8248 17
8249 14
8250 23
8252 32
8253 23
8255 32
8256 16
8257 21
8258 18
8259 25
8260 22
8261 18
8262 25
8263 22
8264 16
8265 21
8266 19
8267 17
8268 16
8269 9
8270 12
8271 21
8272 38
8273 30
8274 38
8275 30
8276 14
8277 19
8278 17
8279 16
8280 23
8281 20
8282 16
8283 23
8284 20
8285 14
8286 19
8287 17
8288 15
8289 14
8290 12
8291 21
8292 38
8293 30
8294 21
8295 38
8296 30
8297 14
8298 19
8299 17
8300 16
8301 23
8302 20
8303 16
8304 23
8305 14
8306 19
8307 17
8308 15
8309 14
8310 17
8311 26
8312 22
8313 17
8314 22
8315 13
8316 16
8317 15
8318 15
8319 20
8320 15
8321 20
8322 18
8323 13
8324 16
8325 15
8326 12
8327 21
8328 38
8329 21
8330 38
8331 30
8332 14
8333 19
8334 17
8335 16
8336 20
8337 23
8338 20
8339 14
8340 19
8341 17
8342 15
8343 14
8344 12
8345 21
8346 38
8347 30
8348 21
8349 38
8350 30
8351 14
8352 19
8353 17
8354 16
8355 23
8356 20
8357 16
8358 23
8359 20
8360 14
8361 19
8362 17
8363 15
8364 14
8365 12
8366 21
8367 38
8368 30
8369 21
8370 38
8371 30
8372 14
8373 19
8374 17
8375 16
8376 23
8377 20
8378 16
8379 23
8380 20
8381 14
8382 19
8383 17
8384 15
8385 14
8386 17
8387 26
8388 22
8389 17
8390 26
8391 22
8392 13
8393 16
8394 15
8395 15
8396 20
8397 18
8398 15
8399 20
8400 18
8401 13
8402 16
8403 15
8404 21
8405 38
8406 30
8407 21
8408 38
8409 30
8410 14
8411 19
8412 17
8413 16
8414 23
8415 20
8416 16
8417 23
8418 14
8419 19
8420 17
8421 15
8422 14
8423 6
8424 9
8425 18
8426 35
8427 27
8428 18
8429 35
8430 27
8431 11
8432 16
8433 14
8434 13
8435 20
8436 17
8437 13
8438 20
8439 17
8440 11
8441 16
8442 14
8443 12
8444 11
8445 9
8446 18
8447 35
8448 27
8449 18
8450 35
8451 27
8452 11
8453 16
8454 14
8455 13
8456 20
8457 17
8458 13
8459 20
8460 17
8461 11
8462 16
8463 14
8464 12
8465 11
8466 14
8467 23
8468 19
8469 23
8470 19
8471 10
8472 13
8473 12
8474 12
8475 17
8476 15
8477 12
8478 17
8479 15
8480 10
8481 13
8482 12
8483 9
8484 18
8485 35
8486 27
8487 18
8488 35
8489 27
8490 11
8491 16
8492 14
8493 13
8494 20
8495 17
8496 13
8497 20
8498 17
8499 11
8500 14
8501 12
8502 11
8503 9
8504 18
8505 27
8506 18
8507 35
8508 27
8509 11
8510 16
8511 14
8512 13
8513 20
8514 17
8515 13
8516 20
8517 17
8518 11
8519 16
8520 14
8521 12
8522 11
8523 9
8524 18
8525 35
8526 27
8527 18
8528 35
8529 27
8530 11
8531 16
8532 13
8533 20
8534 17
8535 13
8536 20
8537 17
8538 11
8539 16
8540 14
8541 11
8542 14
8543 23
8544 19
8545 14
8546 23
8547 19
8548 10
8549 13
8550 12
8551 12
8552 17
8553 15
8554 12
8555 17
8556 15
8557 10
8558 13
8559 12
8560 9
8561 18
8562 35
8563 27
8564 18
8565 35
8566 27
8567 11
8568 16
8569 14
8570 13
8571 20
8572 17
8573 13
8574 20
8575 17
8576 11
8577 16
8578 14
8579 12
8580 11
8581 11
8582 14
8583 23
8585 32
8586 23
8588 16
8589 21
8590 19
8591 18
8592 25
8593 22
8594 18
8595 25
8596 22
8597 16
8598 21
8599 19
8600 17
8601 16
8602 14
8603 23
8605 32
8606 23
8608 32
8609 16
8610 21
8611 19
8612 25
8613 22
8614 18
8615 25
8616 22
8617 16
8618 21
8619 19
8620 17
8621 16
8622 19
8623 28
8624 24
8625 19
8626 28
8627 24
8628 15
8629 18
8630 17
8631 17
8632 22
8633 20
8634 17
8635 22
8636 20
8637 15
8638 18
8639 17
8640 14
8641 23
8643 32
8644 23
8646 32
8647 16
8648 21
8649 19
8650 25
8651 22
8652 18
8653 25
8654 22
8655 16
8656 21
8657 17
8658 16
8659 14
8660 23
8662 32
8663 23
8665 32
8666 16
8667 21
8668 19
8669 18
8670 25
8671 22
8672 25
8673 22
8674 16
8675 21
8676 19
8677 17
8678 16
8679 14
8680 23
8682 23
8684 32
8685 16
8686 21
8687 19
8688 18
8689 25
8690 22
8691 18
8692 25
8693 22
8694 16
8695 21
8696 19
8697 17
8698 16
8699 19
8700 28
8701 24
8702 19
8703 28
8704 24
8705 15
8706 18
8707 17
8708 17
8709 22
8710 20
8711 17
8712 22
8713 20
8714 15
8715 18
8716 17
8717 14
8718 23
8720 32
8721 23
8723 32
8724 16
8725 21
8726 18
8727 25
8728 22
8729 18
8730 25
8731 22
8732 16
8733 21
8734 19
8735 17
8736 16
8737 9
8738 12
8739 21
8740 30
8741 21
8742 38
8743 30
8744 14
8745 19
8746 17
8747 16
8748 23
8749 20
8750 16
8751 23
8752 20
8753 14
8754 19
8755 17
8756 15
8757 14
8758 12
8759 21
8760 38
8761 30
8762 21
8763 38
8764 30
8765 14
8766 17
8767 16
8768 23
8769 20
8770 23
8771 14
8772 19
8773 17
8774 15
8775 14
8776 17
8777 26
8778 22
8779 17
8780 26
8781 22
8782 13
8783 16
8784 15
8785 15
8786 20
8787 15
8788 20
8789 18
8790 13
8791 16
8792 15
8793 12
8794 21
8795 38
8796 30
8797 21
8798 38
8799 14
8800 19
8801 17
8802 16
8803 23
8804 20
8805 16
8806 20
8807 14
8808 19
8809 17
8810 15
8811 14
8812 12
8813 21
8814 38
8815 30
8816 21
8817 38
8818 14
8819 19
8820 17
8821 16
8822 23
8823 20
8824 16
8825 23
8826 20
8827 14
8828 19
8829 17
8830 15
8831 14
8832 12
8833 21
8834 38
8835 30
8836 21
8837 38
8838 30
8839 14
8840 19
8841 17
8842 16
8843 23
8844 20
8845 16
8846 23
8847 20
8848 14
8849 19
8850 17
8851 15
8852 14
8853 17
8854 26
8855 22
8856 17
8857 26
8858 22
8859 13
8860 16
8861 15
8862 15
8863 20
8864 18
8865 20
8866 18
8867 13
8868 16
8869 15
8870 12
8871 38
8872 30
8873 21
8874 38
8875 30
8876 19
8877 17
8878 16
8879 23
8880 20
8881 16
8882 20
8883 14
8884 19
8885 17
8886 15
8887 14
8888 4
8889 7
8890 16
8891 33
8892 25
8893 16
8894 33
8895 25
8896 9
8897 12
8898 18
8899 15
8900 11
8901 18
8902 15
8903 9
8904 14
8905 12
8906 10
8907 9
8908 7
8909 16
8910 33
8911 33
8912 25
8913 14
8914 12
8915 11
8916 15
8917 11
8918 18
8919 15
8920 9
8921 14
8922 12
8923 9
8924 12
8925 21
8926 17
8927 12
8928 21
8929 8
8930 11
8931 10
8932 10
8933 15
8934 13
8935 10
8936 15
8937 13
8938 8
8939 11
8940 10
8941 7
8942 16
8943 33
8944 25
8945 16
8946 33
8947 25
8948 9
8949 14
8950 12
8951 11
8952 18
8953 15
8954 11
8955 18
8956 15
8957 14
8958 12
8959 10
8960 9
8961 7
8962 16
8963 33
8964 25
8965 16
8966 33
8967 25
8968 9
8969 14
8970 12
8971 11
8972 18
8973 15
8974 11
8975 18
8976 15
8977 9
8978 14
8979 12
8980 10
8981 9
8982 7
8983 16
8984 33
8985 25
8986 16
8987 33
8988 25
8989 9
8990 14
8991 12
8992 11
8993 18
8994 15
8995 11
8996 18
8997 9
8998 14
8999 12
9000 10
9001 9
9002 12
9003 21
9004 17
9005 12
9006 21
9007 17
9008 8
9009 11
9010 10
9011 10
9012 15
9013 13
9014 10
9015 15
9016 13
9017 8
9018 11
9019 10
9020 7
9021 16
9022 33
9023 25
9024 16
9025 33
9026 25
9027 9
9028 14
9029 12
9030 11
9031 18
9032 15
9033 11
9034 18
9035 15
9036 9
9037 14
9038 12
9039 10
9040 9
9041 7
9042 10
9043 19
9044 36
9045 28
9046 19
9047 36
9048 28
9049 12
9050 17
9051 15
9052 21
9053 18
9054 14
9055 21
9056 18
9057 12
9058 17
9059 15
9060 13
9061 12
9062 10
9063 19
9064 36
9065 28
9066 19
9067 36
9068 28
9069 12
9070 17
9071 15
9072 14
9073 21
9074 18
9075 14
9076 21
9077 18
9078 12
9079 17
9080 12
9081 15
9082 24
9083 20
9084 15
9085 24
9086 20
9087 11
9088 14
9089 13
9090 13
9091 18
9092 16
9093 13
9094 18
9095 16
9096 11
9097 14
9098 13
9099 10
9100 19
9101 36
9102 28
9103 19
9104 36
9105 28
9106 12
9107 17
9108 15
9109 14
9110 21
9111 18
9112 14
9113 21
9114 18
9115 12
9116 17
9117 15
9118 13
9119 12
9120 19
9121 36
9122 28
9123 19
9124 36
9125 28
9126 12
9127 17
9128 15
9129 14
9130 21
9131 18
9132 14
9133 21
9134 18
9135 12
9136 17
9137 15
9138 13
9139 12
9140 10
9141 19
9142 36
9143 28
9144 19
9145 36
9146 28
9147 12
9148 17
9149 15
9150 14
9151 21
9152 18
9153 14
9154 21
9155 18
9156 12
9157 17
9158 15
9159 13
9160 12
9161 15
9162 24
9163 20
9164 15
9165 24
9166 20
9167 11
9168 14
9169 13
9170 18
9171 16
9172 13
9173 18
9174 16
9175 11
9176 14
9177 13
9178 19
9179 36
9180 28
9181 19
9182 36
9183 28
9184 12
9185 17
9186 15
9187 14
9188 21
9189 18
9190 14
9191 21
9192 18
9193 12
9194 17
9195 15
9196 13
9197 12
9198 6
9199 9
9200 18
9201 35
9202 27
9203 18
9204 35
9205 11
9206 16
9207 14
9208 13
9209 20
9210 17
9211 13
9212 20
9213 17
9214 11
9215 16
9216 14
9217 12
9218 11
9219 9
9220 18
9221 27
9222 18
9223 35
9224 27
9225 11
9226 16
9227 14
9228 13
9229 20
9230 13
9231 20
9232 17
9233 11
9234 16
9235 12
9236 11
9237 14
9238 23
9239 19
9240 14
9241 23
9242 19
9243 10
9244 13
9245 12
9246 12
9247 17
9248 15
9249 12
9250 17
9251 15
9252 10
9253 13
9254 12
9255 9
9256 18
9257 35
9258 27
9259 18
9260 35
9261 27
9262 11
9263 16
9264 14
9265 13
9266 17
9267 13
9268 20
9269 17
9270 11
9271 16
9272 14
9273 12
9274 11
9275 9
9276 18
9277 35
9278 27
9279 35
9280 27
9281 11
9282 16
9283 14
9284 20
9285 17
9286 13
9287 20
9288 17
9289 11
9290 16
9291 14
9292 12
9293 11
9294 9
9295 18
9296 35
9297 27
9298 18
9299 35
9300 27
9301 11
9302 16
9303 14
9304 13
9305 20
9306 13
9307 20
9308 17
9309 11
9310 16
9311 14
9312 12
9313 11
9314 14
9315 23
9316 19
9317 14
9318 23
9319 19
9320 10
9321 13
9322 12
9323 12
9324 17
9325 15
9326 12
9327 17
9328 15
9329 10
9330 13
9331 12
9332 9
9333 18
9334 35
9335 27
9336 18
9337 35
9338 27
9339 11
9340 14
9341 13
9342 20
9343 17
9344 13
9345 20
9346 17
9347 11
9348 16
9349 14
9350 12
9351 11
9352 3
9353 6
9354 15
9355 32
9356 24
9357 15
9358 32
9359 24
9360 8
9361 13
9362 11
9363 10
9364 17
9365 14
9366 10
9367 17
9368 14
9369 8
9370 13
9371 11
9372 9
9373 8
9374 6
9375 15
9376 32
9377 24
9378 15
9379 32
9380 24
9381 8
9382 13
9383 11
9384 10
9385 17
9386 14
9387 10
9388 17
9389 14
9390 8
9391 13
9392 11
9393 9
9394 8
9395 11
9396 20
9397 16
9398 11
9399 16
9400 7
9401 10
9402 9
9403 9
9404 14
9405 12
9406 9
9407 14
9408 12
9409 7
9410 10
9411 9
9412 6
9413 15
9414 32
9415 24
9416 15
9417 32
9418 24
9419 8
9420 13
9421 11
9422 10
9423 14
9424 10
9425 17
9426 14
9427 8
9428 13
9429 11
9430 9
9431 8
9432 6
9433 15
9434 32
9435 24
9436 15
9437 24
9438 8
9439 13
9440 11
9441 10
9442 17
9443 14
9444 10
9445 17
9446 14
9447 8
9448 13
9449 11
9450 9
9451 8
9452 6
9453 15
9454 32
9455 24
9456 15
9457 32
9458 24
9459 8
9460 13
9461 11
9462 10
9463 17
9464 14
9465 10
9466 17
9467 14
9468 8
9469 13
9470 11
9471 9
9472 8
9473 11
9474 20
9475 16
9476 11
9477 20
9478 16
9479 7
9480 10
9481 9
9482 9
9483 14
9484 12
9485 9
9486 14
9487 12
9488 7
9489 10
9490 9
9491 6
9492 15
9493 32
9494 24
9495 32
9496 24
9497 8
9498 13
9499 11
9500 10
9501 14
9502 10
9503 17
9504 14
9505 8
9506 13
9507 11
9508 9
9509 8
9510 12
9511 15
9512 24
9514 33
9515 24
9517 33
9518 17
9519 22
9520 20
9521 19
9522 26
9523 23
9524 19
9525 26
9526 23
9527 17
9528 22
9529 20
9530 18
9531 17
9532 15
9533 24
9535 33
9536 24
9538 33
9539 17
9540 20
9541 19
9542 26
9543 23
9544 19
9545 26
9546 23
9547 17
9548 22
9549 20
9550 18
9551 17
9552 20
9553 29
9554 25
9555 20
9556 29
9557 25
9558 16
9559 19
9560 18
9561 18
9562 23
9563 21
9564 18
9565 23
9566 21
9567 16
9568 19
9569 18
9570 15
9571 24
9573 33
9575 33
9576 17
9577 22
9578 20
9579 19
9580 26
9581 19
9582 26
9583 23
9584 17
9585 22
9586 20
9587 18
9588 17
9589 15
9590 24
9592 33
9593 24
9595 33
9596 17
9597 22
9598 20
9599 19
9600 26
9601 23
9602 19
9603 23
9604 17
9605 22
9606 20
9607 18
9608 17
9609 15
9610 24
9612 33
9613 24
9615 33
9616 22
9617 20
9618 19
9619 26
9620 23
9621 19
9622 26
9623 23
9624 17
9625 22
9626 20
9627 18
9628 17
9629 20
9630 29
9631 25
9632 20
9633 29
9634 25
9635 16
9636 19
9637 18
9638 18
9639 23
9640 21
9641 18
9642 23
9643 21
9644 16
9645 19
9646 18
9647 15
9648 24
9650 33
9651 24
9653 33
9654 17
9655 22
9656 20
9657 19
9658 26
9659 23
9660 19
9661 26
9662 23
9663 17
9664 22
9665 20
9666 18
9667 17
9668 29
9669 32
9675 34
9676 39
9677 37
9678 36
9681 36
9684 34
9685 39
9686 37
9687 35
9688 34
9689 32
9696 34
9697 39
9698 37
9699 36
9702 36
9705 34
9706 39
9707 37
9708 35
9709 34
9710 37
9713 37
9715 33
9716 36
9717 35
9718 35
9720 38
9721 35
9723 38
9724 33
9725 36
9726 35
9727 32
9732 34
9733 39
9734 37
9735 36
9740 34
9741 39
9742 37
9743 35
9744 34
9745 32
9752 34
9753 39
9754 37
9755 36
9758 36
9761 34
9762 39
9763 37
9764 35
9765 34
9766 32
9773 34
9774 39
9775 37
9776 36
9779 36
9782 34
9783 39
9784 37
9785 35
9786 34
9787 37
9790 37
9793 33
9794 36
9795 35
9796 35
9798 38
9799 35
9801 38
9802 33
9803 35
9804 32
9810 34
9811 39
9812 37
9813 36
9816 36
9818 34
9819 39
9820 37
9821 35
9822 34
9823 21
9824 24
9825 33
9828 33
9831 31
9832 29
9833 28
9834 35
9835 32
9836 28
9837 35
9838 32
9839 26
9840 31
9841 29
9842 27
9843 26
9844 24
9845 33
9848 33
9851 26
9852 31
9853 29
9854 28
9855 35
9856 32
9857 28
9858 35
9859 32
9860 26
9861 31
9862 29
9863 27
9864 26
9865 29
9866 38
9867 34
9868 29
9869 38
9870 34
9871 28
9872 27
9873 27
9874 32
9875 30
9876 27
9877 32
9878 30
9879 25
9880 28
9881 27
9882 24
9883 33
9886 33
9889 26
9890 31
9891 29
9892 28
9893 35
9894 32
9895 28
9896 35
9897 32
9898 26
9899 31
9900 29
9901 27
9902 26
9903 24
9904 33
9907 33
9910 26
9911 31
9912 29
9913 28
9914 35
9915 32
9916 28
9917 35
9918 32
9919 26
9920 31
9921 29
9922 27
9923 26
9924 24
9925 33
9928 33
9931 26
9932 31
9933 29
9934 28
9935 35
9936 32
9937 28
9938 35
9939 32
9940 26
9941 31
9942 29
9943 27
9944 26
9945 29
9946 38
9947 34
9948 29
9949 38
9950 34
9951 25
9952 28
9953 27
9954 27
9955 32
9956 30
9957 27
9958 32
9959 30
9960 25
9961 28
9962 27
9963 24
9964 33
9967 33
9970 26
9971 31
9972 29
9973 28
9974 35
9975 32
9976 28
9977 35
9978 32
9979 26
9980 31
9981 29
9982 27
9983 26
9984 12
9985 15
9986 24
9988 33
9989 24
9990 33
9991 17
9992 22
9993 20
9994 19
9995 26
9996 23
9997 19
9998 26
9999 23
10000 17
10001 20
10002 18
10003 17
10004 15
10005 24
10007 33
10008 24
10010 33
10011 17
10012 22
10013 20
10014 19
10015 23
10016 19
10017 26
10018 23
10019 17
10020 22
10021 20
10022 17
10023 20
10024 29
10025 25
10026 20
10027 29
10028 25
10029 19
10030 18
10031 18
10032 23
10033 21
10034 18
10035 23
10036 16
10037 19
10038 18
10039 15
10040 24
10042 33
10043 24
10045 33
10046 17
10047 22
10048 20
10049 26
10050 23
10051 19
10052 26
10053 23
10054 17
10055 22
10056 20
10057 18
10058 17
10059 15
10060 24
10062 33
10063 24
10065 33
10066 17
10067 22
10068 20
10069 19
10070 26
10071 23
10072 19
10073 26
10074 23
10075 17
10076 22
10077 20
10078 18
10079 17
10080 15
10081 24
10082 33
10083 24
10085 22
10086 20
10087 19
10088 26
10089 23
10090 19
10091 26
10092 23
10093 17
10094 22
10095 20
10096 18
10097 17
10098 20
10099 29
10100 25
10101 20
10102 29
10103 25
10104 19
10105 18
10106 18
10107 23
10108 21
10109 18
10110 23
10111 21
10112 19
10113 18
10114 15
10115 24
10117 33
10119 33
10120 17
10121 22
10122 20
10123 19
10124 26
10125 23
10126 19
10127 26
10128 23
10129 17
10130 22
10131 20
10132 18
10133 17
10134 29
10135 32
10142 34
10143 39
10144 37
10147 36
10150 34
10151 39
10152 37
10153 35
10154 34
10155 32
10162 34
10163 39
10164 37
10165 36
10168 36
10171 34
10172 39
10173 37
10174 35
10175 34
10176 37
10179 37
10182 33
10183 36
10184 35
10185 35
10187 35
10189 38
10190 33
10191 36
10192 35
10193 32
10200 34
10201 39
10202 37
10203 36
10206 36
10209 34
10210 39
10211 37
10212 35
10213 34
10214 32
10221 34
10222 39
10223 37
10224 36
10227 36
10230 34
10231 39
10232 37
10233 35
10234 34
10235 32
10242 34
10243 39
10244 37
10245 36
10248 36
10251 34
10252 39
10253 37
10254 35
10255 34
10256 37
10259 37
10262 33
10263 36
10264 35
10265 35
10267 38
10268 35
10270 38
10271 33
10272 36
10273 35
10274 32
10279 34
10280 39
10281 37
10284 36
10287 34
10288 39
10289 37
10290 35
10291 34
10292 21
10293 24
10294 33
10297 33
10300 26
10301 31
10302 29
10303 28
10304 35
10305 32
10306 28
10307 35
10308 32
10309 26
10310 31
10311 29
10312 27
10313 26
10314 24
10315 33
10318 33
10321 26
10322 31
10323 29
10324 28
10325 35
10326 32
10327 28
10328 32
10329 26
10330 31
10331 27
10332 26
10333 29
10334 38
10335 34
10336 29
10337 38
10338 34
10339 25
10340 28
10341 27
10342 27
10343 32
10344 30
10345 27
10346 32
10347 30
10348 25
10349 28
10350 27
10351 24
10352 33
10355 33
10358 26
10359 31
10360 29
10361 28
10362 35
10363 32
10364 28
10365 35
10366 32
10367 26
10368 31
10369 29
10370 27
10371 26
10372 24
10373 33
10378 26
10379 31
10380 29
10381 28
10382 35
10383 32
10384 28
10385 35
10386 32
10387 26
10388 31
10389 29
10390 27
10391 26
10392 33
10395 33
10398 26
10399 31
10400 29
10401 28
10402 35
10403 32
10404 28
10405 35
10406 26
10407 31
10408 29
10409 27
10410 26
10411 29
10412 38
10413 34
10414 29
10415 38
10416 34
10417 25
10418 28
10419 27
10420 27
10421 32
10422 30
10423 27
10424 32
10425 30
10426 25
10427 28
10428 27
10429 24
10430 33
10433 33
10436 26
10437 31
10438 29
10439 28
10440 35
10441 32
10442 28
10443 32
10444 26
10445 31
10446 29
10447 27
10448 26
10449 5
10450 8
10451 17
10452 34
10453 26
10454 17
10455 34
10456 26
10457 10
10458 15
10459 13
10460 12
10461 19
10462 16
10463 12
10464 19
10465 16
10466 10
10467 15
10468 13
10469 11
10470 10
10471 8
10472 17
10473 34
10474 26
10475 17
10476 34
10477 26
10478 10
10479 15
10480 13
10481 12
10482 19
10483 16
10484 12
10485 19
10486 16
10487 10
10488 15
10489 13
10490 11
10491 10
10492 13
10493 22
10494 18
10495 13
10496 22
10497 18
10498 9
10499 12
10500 11
10501 11
10502 16
10503 14
10504 11
10505 16
10506 14
10507 9
10508 12
10509 11
10510 8
10511 34
10512 26
10513 34
10514 26
10515 10
10516 15
10517 13
10518 12
10519 19
10520 16
10521 12
10522 19
10523 10
10524 15
10525 13
10526 11
10527 10
10528 8
10529 17
10530 34
10531 26
10532 17
10533 34
10534 26
10535 10
10536 15
10537 13
10538 12
10539 19
10540 16
10541 12
10542 19
10543 16
10544 10
10545 15
10546 13
10547 11
10548 10
10549 8
10550 17
10551 34
10552 26
10553 17
10554 34
10555 26
10556 10
10557 15
10558 13
10559 12
10560 19
10561 16
10562 12
10563 19
10564 16
10565 15
10566 13
10567 11
10568 10
10569 13
10570 22
10571 18
10572 13
10573 22
10574 18
10575 9
10576 12
10577 11
10578 11
10579 16
10580 14
10581 16
10582 14
10583 9
10584 12
10585 11
10586 8
10587 17
10588 34
10589 26
10590 17
10591 34
10592 26
10593 10
10594 15
10595 13
10596 12
10597 19
10598 16
10599 12
10600 19
10601 16
10602 10
10603 15
10604 13
10605 11
10606 10
10607 10
10608 13
10609 22
10610 39
10611 31
10612 22
10613 39
10614 31
10615 15
10616 20
10617 18
10618 17
10619 24
10620 21
10621 17
10622 24
10623 21
10624 15
10625 20
10626 18
10627 16
10628 15
10629 13
10630 22
10631 39
10632 31
10633 22
10634 39
10635 15
10636 20
10637 18
10638 17
10639 21
10640 17
10641 21
10642 15
10643 20
10644 18
10645 16
10646 15
10647 18
10648 27
10649 23
10650 18
10651 27
10652 23
10653 14
10654 17
10655 16
10656 16
10657 21
10658 19
10659 16
10660 21
10661 19
10662 14
10663 17
10664 16
10665 13
10666 22
10667 31
10668 22
10669 39
10670 31
10671 15
10672 20
10673 17
10674 24
10675 21
10676 17
10677 24
10678 21
10679 15
10680 20
10681 18
10682 16
10683 15
10684 13
10685 22
10686 39
10687 31
10688 22
10689 39
10690 31
10691 15
10692 20
10693 18
10694 17
10695 24
10696 21
10697 17
10698 24
10699 21
10700 15
10701 20
10702 18
10703 16
10704 15
10705 13
10706 22
10707 39
10708 31
10709 22
10710 39
10711 31
10712 15
10713 20
10714 17
10715 24
10716 21
10717 17
10718 24
10719 21
10720 15
10721 20
10722 18
10723 16
10724 15
10725 18
10726 27
10727 23
10728 18
10729 27
10730 23
10731 14
10732 17
10733 16
10734 16
10735 21
10736 19
10737 16
10738 21
10739 19
10740 14
10741 17
10742 16
10743 13
10744 22
10745 39
10746 31
10747 22
10748 39
10749 31
10750 15
10751 20
10752 18
10753 17
10754 24
10755 17
10756 24
10757 21
10758 15
10759 18
10760 16
10761 15
10762 8
10763 11
10764 20
10765 37
10766 29
10767 20
10768 37
10769 29
10770 13
10771 18
10772 16
10773 15
10774 22
10775 19
10776 15
10777 22
10778 19
10779 13
10780 16
10781 14
10782 13
10783 11
10784 37
10785 29
10786 20
10787 37
10788 29
10789 13
10790 18
10791 16
10792 15
10793 22
10794 19
10795 15
10796 22
10797 19
10798 13
10799 18
10800 14
10801 13
10802 16
10803 25
10804 21
10805 16
10806 25
10807 21
10808 12
10809 14
10810 14
10811 19
10812 17
10813 14
10814 19
10815 17
10816 12
10817 15
10818 11
10819 20
10820 29
10821 20
10822 37
10823 29
10824 13
10825 18
10826 16
10827 15
10828 22
10829 19
10830 15
10831 22
10832 19
10833 13
10834 18
10835 16
10836 14
10837 13
10838 11
10839 20
10840 37
10841 29
10842 20
10843 37
10844 29
10845 13
10846 18
10847 16
10848 15
10849 19
10850 15
10851 22
10852 19
10853 13
10854 18
10855 16
10856 14
10857 13
10858 11
10859 20
10860 37
10861 29
10862 20
10863 37
10864 29
10865 13
10866 18
10867 16
10868 15
10869 22
10870 19
10871 15
10872 22
10873 19
10874 13
10875 18
10876 16
10877 14
10878 13
10879 16
10880 25
10881 16
10882 25
10883 21
10884 12
10885 15
10886 14
10887 14
10888 19
10889 17
10890 14
10891 19
10892 17
10893 12
10894 15
10895 14
10896 11
10897 20
10898 37
10899 20
10900 37
10901 29
10902 13
10903 18
10904 16
10905 15
10906 22
10907 19
10908 15
10909 22
10910 19
10911 13
10912 18
10913 16
10914 14
10915 13
10916 7
10917 10
10918 19
10919 36
10920 28
10921 36
10922 28
10923 12
10924 17
10925 15
10926 14
10927 21
10928 18
10929 14
10930 21
10931 18
10932 12
10933 17
10934 15
10935 13
10936 12
10937 10
10938 19
10939 36
10940 28
10941 19
10942 36
10943 12
10944 17
10945 15
10946 14
10947 21
10948 18
10949 14
10950 21
10951 18
10952 12
10953 17
10954 15
10955 13
10956 12
10957 15
10958 24
10959 20
10960 15
10961 24
10962 20
10963 11
10964 14
10965 13
10966 13
10967 18
10968 16
10969 13
10970 18
10971 16
10972 11
10973 14
10974 13
10975 10
10976 19
10977 36
10978 28
10979 19
10980 36
10981 12
10982 17
10983 15
10984 14
10985 21
10986 18
10987 14
10988 21
10989 18
10990 12
10991 17
10992 15
10993 13
10994 12
10995 10
10996 19
10997 36
10998 28
10999 19
11000 36
11001 28
11002 12
11003 17
11004 15
11005 14
11006 21
11007 14
11008 21
11009 18
11010 12
11011 17
11012 15
11013 13
11014 12
11015 10
11016 19
11017 36
11018 28
11019 19
11020 36
11021 28
11022 12
11023 17
11024 15
11025 14
11026 21
11027 18
11028 14
11029 21
11030 18
11031 12
11032 17
11033 15
11034 13
11035 12
11036 15
11037 24
11038 20
11039 15
11040 24
11041 20
11042 11
11043 14
11044 13
11045 18
11046 16
11047 13
11048 18
11049 16
11050 11
11051 14
11052 13
11053 10
11054 19
11055 36
11056 28
11057 19
11058 36
11059 28
11060 12
11061 17
11062 15
11063 14
11064 21
11065 14
11066 21
11067 18
11068 12
11069 17
11070 15
11071 13
11072 14
11073 17
11074 26
11076 35
11077 26
11079 35
11080 19
11081 24
11082 22
11083 21
11084 28
11085 25
11086 21
11087 25
11088 19
11089 24
11090 22
11091 20
11092 19
11093 17
11094 26
11096 35
11097 26
11099 35
11100 19
11101 24
11102 22
11103 21
11104 28
11105 25
11106 21
11107 28
11108 25
11109 19
11110 24
11111 22
11112 20
11113 19
11114 22
11115 31
11116 27
11117 22
11118 31
11119 27
11120 18
11121 21
11122 20
11123 20
11124 25
11125 23
11126 20
11127 25
11128 23
11129 18
11130 20
11131 17
11132 26
11134 35
11135 26
11137 35
11138 19
11139 24
11140 22
11141 21
11142 28
11143 25
11144 21
11145 28
11146 25
11147 19
11148 24
11149 22
11150 20
11151 19
11152 17
11153 26
11154 35
11155 26
11157 35
11158 19
11159 24
11160 22
11161 21
11162 28
11163 25
11164 21
11165 28
11166 25
11167 19
11168 24
11169 22
11170 20
11171 19
11172 17
11173 26
11175 35
11176 26
11178 35
11179 19
11180 24
11181 22
11182 21
11183 28
11184 25
11185 21
11186 19
11187 24
11188 22
11189 20
11190 19
11191 22
11192 31
11193 27
11194 22
11195 31
11196 27
11197 18
11198 21
11199 20
11200 20
11201 25
11202 23
11203 20
11204 25
11205 23
11206 18
11207 21
11208 20
11209 17
11210 26
11212 35
11213 26
11214 35
11215 19
11216 24
11217 22
11218 21
11219 28
11220 25
11221 21
11222 28
11223 25
11224 19
11225 24
11226 22
11227 20
11228 19
11229 11
11230 14
11231 23
11233 32
11234 23
11236 32
11237 16
11238 21
11239 18
11240 25
11241 22
11242 18
11243 25
11244 22
11245 16
11246 21
11247 19
11248 17
11249 16
11250 14
11251 23
11253 32
11254 23
11256 32
11257 16
11258 21
11259 19
11260 18
11261 25
11262 22
11263 18
11264 25
11265 22
11266 16
11267 21
11268 19
11269 17
11270 16
11271 19
11272 28
11273 24
11274 19
11275 28
11276 24
11277 15
11278 18
11279 17
11280 17
11281 22
11282 20
11283 17
11284 22
11285 20
11286 15
11287 18
11288 17
11289 14
11290 23
11292 32
11293 23
11294 32
11295 16
11296 19
11297 18
11298 25
11299 22
11300 18
11301 25
11302 16
11303 21
11304 19
11305 17
11306 16
11307 23
11309 32
11310 23
11312 32
11313 16
11314 21
11315 19
11316 25
11317 22
11318 18
11319 22
11320 16
11321 21
11322 19
11323 17
11324 16
11325 14
11326 23
11328 32
11329 23
11331 32
11332 16
11333 21
11334 19
11335 18
11336 25
11337 22
11338 18
11339 25
11340 22
11341 16
11342 21
11343 19
11344 17
11345 16
11346 19
11347 28
11348 24
11349 19
11350 28
11351 24
11352 15
11353 18
11354 17
11355 17
11356 22
11357 20
11358 17
11359 20
11360 15
11361 18
11362 17
11363 14
11364 23
11366 32
11367 23
11369 32
11370 16
11371 21
11372 19
11373 18
11374 25
11375 22
11376 18
11377 25
11378 22
11379 16
11380 21
11381 19
11382 17
11383 16
11384 7
11385 10
11386 19
11387 36
11388 28
11389 19
11390 36
11391 28
11392 12
11393 17
11394 15
11395 14
11396 21
11397 18
11398 14
11399 21
11400 18
11401 12
11402 17
11403 15
11404 13
11405 12
11406 10
11407 19
11408 36
11409 28
11410 19
11411 36
11412 28
11413 12
11414 17
11415 15
11416 14
11417 21
11418 18
11419 14
11420 21
11421 18
11422 12
11423 17
11424 15
11425 13
11426 12
11427 15
11428 20
11429 15
11430 24
11431 20
11432 11
11433 13
11434 18
11435 16
11436 13
11437 18
11438 16
11439 11
11440 14
11441 13
11442 10
11443 19
11444 36
11445 28
11446 19
11447 36
11448 28
11449 12
11450 17
11451 15
11452 14
11453 21
11454 18
11455 14
11456 21
11457 18
11458 12
11459 15
11460 13
11461 12
11462 10
11463 19
11464 36
11465 28
11466 19
11467 36
11468 28
11469 12
11470 17
11471 15
11472 14
11473 21
11474 18
11475 14
11476 21
11477 18
11478 12
11479 17
11480 15
11481 13
11482 12
11483 10
11484 19
11485 36
11486 28
11487 19
11488 36
11489 28
11490 12
11491 17
11492 15
11493 14
11494 21
11495 18
11496 14
11497 18
11498 12
11499 17
11500 15
11501 13
11502 12
11503 15
11504 15
11505 24
11506 20
11507 11
11508 14
11509 13
11510 13
11511 18
11512 16
11513 13
11514 18
11515 16
11516 11
11517 14
11518 13
11519 10
11520 19
11521 36
11522 28
11523 19
11524 36
11525 28
11526 12
11527 17
11528 15
11529 14
11530 21
11531 18
11532 14
11533 21
11534 18
11535 12
11536 17
11537 15
11538 13
11539 12
11540 14
11541 17
11542 26
11544 35
11545 26
11547 35
11548 19
11549 24
11550 22
11551 21
11552 25
11553 21
11554 28
11555 25
11556 19
11557 24
11558 22
11559 19
11560 17
11561 26
11563 35
11564 26
11566 35
11567 19
11568 24
11569 22
11570 21
11571 28
11572 25
11573 21
11574 28
11575 25
11576 19
11577 24
11578 22
11579 20
11580 19
11581 22
11582 31
11583 27
11584 22
11585 27
11586 18
11587 21
11588 20
11589 20
11590 25
11591 23
11592 20
11593 25
11594 23
11595 18
11596 21
11597 20
11598 17
11599 26
11601 26
11603 35
11604 19
11605 24
11606 22
11607 21
11608 28
11609 25
11610 21
11611 28
11612 25
11613 19
11614 24
11615 22
11616 20
11617 19
11618 17
11619 26
11621 35
11622 26
11624 35
11625 19
11626 24
11627 22
11628 28
11629 25
11630 21
11631 28
11632 25
11633 19
11634 24
11635 22
11636 20
11637 17
11638 26
11640 35
11641 26
11643 35
11644 19
11645 24
11646 22
11647 21
11648 28
11649 25
11650 21
11651 28
11652 25
11653 19
11654 24
11655 22
11656 20
11657 19
11658 22
11659 31
11660 27
11661 22
11662 31
11663 27
11664 18
11665 21
11666 20
11667 20
11668 25
11669 23
11670 20
11671 25
11672 23
11673 18
11674 21
11675 20
11676 17
11677 26
11679 35
11680 26
11682 35
11683 19
11684 24
11685 22
11686 21
11687 28
11688 25
11689 21
11690 28
11691 25
11692 19
11693 24
11694 22
11695 20
11696 11
11697 14
11698 23
11700 32
11701 23
11702 32
11703 16
11704 21
11705 19
11706 18
11707 25
11708 22
11709 18
11710 25
11711 22
11712 16
11713 21
11714 19
11715 17
11716 16
11717 14
11718 23
11720 32
11721 23
11723 32
11724 16
11725 21
11726 19
11727 18
11728 25
11729 22
11730 18
11731 25
11732 22
11733 16
11734 21
11735 19
11736 17
11737 16
11738 19
11739 24
11740 19
11741 28
11742 24
11743 15
11744 18
11745 17
11746 17
11747 22
11748 20
11749 17
11750 22
11751 20
11752 15
11753 18
11754 17
11755 14
11756 23
11758 32
11760 32
11761 16
11762 21
11763 19
11764 18
11765 25
11766 22
11767 18
11768 25
11769 16
11770 21
11771 19
11772 17
11773 16
11774 14
11775 23
11777 32
11778 23
11780 32
11781 16
11782 21
11783 19
11784 18
11785 25
11786 18
11787 25
11788 22
11789 16
11790 21
11791 19
11792 17
11793 16
11794 14
11795 23
11797 32
11798 23
11800 32
11801 16
11802 21
11803 19
11804 18
11805 25
11806 22
11807 25
11808 16
11809 21
11810 19
11811 17
11812 16
11813 19
11814 28
11815 24
11816 19
11817 28
11818 24
11819 15
11820 18
11821 17
11822 17
11823 20
11824 17
11825 22
11826 20
11827 15
11828 18
11829 17
11830 14
11831 23
11833 32
11834 23
11835 32
11836 16
11837 21
11838 19
11839 18
11840 25
11841 22
11842 18
11843 25
11844 22
11845 16
11846 21
11847 19
11848 17
11849 16
11850 5
11851 8
11852 17
11853 34
11854 26
11855 17
11856 34
11857 26
11858 10
11859 15
11860 13
11861 12
11862 19
11863 16
11864 12
11865 19
11866 16
11867 10
11868 15
11869 13
11870 11
11871 10
11872 8
11873 17
11874 34
11875 26
11876 17
11877 34
11878 26
11879 10
11880 15
11881 13
11882 12
11883 19
11884 16
11885 12
11886 19
11887 16
11888 10
11889 15
11890 13
11891 11
11892 10
11893 13
11894 22
11895 18
11896 13
11897 22
11898 18
11899 9
11900 12
11901 11
11902 11
11903 16
11904 14
11905 11
11906 16
11907 14
11908 9
11909 12
11910 11
11911 8
11912 17
11913 34
11914 26
11915 17
11916 34
11917 26
11918 10
11919 15
11920 13
11921 12
11922 19
11923 16
11924 12
11925 19
11926 16
11927 10
11928 15
11929 13
11930 11
11931 8
11932 17
11933 34
11934 26
11935 17
11936 34
11937 26
11938 10
11939 15
11940 13
11941 12
11942 19
11943 16
11944 12
11945 19
11946 16
11947 10
11948 15
11949 13
11950 11
11951 10
11952 8
11953 17
11954 26
11955 17
11956 34
11957 26
11958 10
11959 15
11960 13
11961 12
11962 19
11963 16
11964 12
11965 19
11966 16
11967 10
11968 15
11969 13
11970 11
11971 10
11972 13
11973 22
11974 18
11975 22
11976 18
11977 9
11978 12
11979 11
11980 11
11981 16
11982 16
11983 14
11984 9
11985 12
11986 11
11987 8
11988 17
11989 34
11990 26
11991 17
11992 34
11993 26
11994 10
11995 15
11996 13
11997 12
11998 19
11999 16
12000 12
12001 19
12002 16
12003 10
12004 15
12005 13
12006 11
12007 10
12008 10
12009 13
12010 22
12011 39
12012 31
12013 22
12014 39
12015 31
12016 15
12017 20
12018 18
12019 17
12020 24
12021 21
12022 17
12023 24
12024 21
12025 15
12026 20
12027 18
12028 16
12029 15
12030 13
12031 22
12032 39
12033 22
12034 39
12035 31
12036 15
12037 20
12038 18
12039 17
12040 24
12041 21
12042 17
12043 24
12044 15
12045 20
12046 18
12047 16
12048 15
12049 18
12050 27
12051 23
12052 18
12053 27
12054 23
12055 14
12056 17
12057 16
12058 16
12059 21
12060 19
12061 16
12062 19
12063 14
12064 17
12065 16
12066 13
12067 22
12068 31
12069 22
12070 39
12071 31
12072 15
12073 20
12074 18
12075 17
12076 24
12077 21
12078 24
12079 15
12080 20
12081 18
12082 16
12083 15
12084 13
12085 22
12086 39
12087 31
12088 22
12089 39
12090 31
12091 15
12092 20
12093 18
12094 17
12095 24
12096 21
12097 17
12098 24
12099 21
12100 15
12101 20
12102 18
12103 16
12104 15
12105 13
12106 22
12107 39
12108 31
12109 22
12110 39
12111 31
12112 15
12113 20
12114 18
12115 24
12116 21
12117 17
12118 24
12119 21
12120 15
12121 20
12122 18
12123 16
12124 15
12125 18
12126 27
12127 23
12128 18
12129 27
12130 23
12131 14
12132 17
12133 16
12134 16
12135 21
12136 19
12137 16
12138 21
12139 19
12140 14
12141 17
12142 16
12143 13
12144 22
12145 39
12146 31
12147 22
12148 39
12149 31
12150 15
12151 20
12152 18
12153 17
12154 24
12155 21
12156 17
12157 24
12158 21
12159 15
12160 20
12161 18
12162 16
12163 15
12164 8
12165 11
12166 20
12167 29
12168 20
12169 37
12170 29
12171 13
12172 18
12173 16
12174 15
12175 22
12176 19
12177 15
12178 22
12179 19
12180 13
12181 18
12182 16
12183 14
12184 13
12185 11
12186 20
12187 37
12188 29
12189 37
12190 29
12191 13
12192 18
12193 16
12194 15
12195 22
12196 19
12197 15
12198 22
12199 19
12200 13
12201 18
12202 16
12203 14
12204 13
12205 16
12206 25
12207 21
12208 16
12209 25
12210 21
12211 12
12212 15
12213 14
12214 19
12215 17
12216 14
12217 19
12218 17
12219 12
12220 15
12221 14
12222 11
12223 20
12224 37
12225 29
12226 20
12227 37
12228 29
12229 13
12230 18
12231 16
12232 22
12233 19
12234 22
12235 19
12236 13
12237 18
12238 16
12239 14
12240 13
12241 11
12242 20
12243 37
12244 29
12245 20
12246 37
12247 29
12248 13
12249 18
12250 16
12251 15
12252 22
12253 19
12254 15
12255 22
12256 19
12257 13
12258 18
12259 16
12260 14
12261 13
12262 11
12263 20
12264 37
12265 29
12266 20
12267 37
12268 29
12269 13
12270 18
12271 16
12272 15
12273 22
12274 19
12275 15
12276 22
12277 19
12278 13
12279 18
12280 14
12281 13
12282 16
12283 25
12284 21
12285 25
12286 21
12287 12
12288 15
12289 14
12290 19
12291 17
12292 14
12293 19
12294 17
12295 12
12296 15
12297 14
12298 11
12299 20
12300 37
12301 29
12302 20
12303 37
12304 29
12305 13
12306 18
12307 16
12308 15
12309 22
12310 15
12311 22
12312 19
12313 13
12314 18
12315 16
12316 14
12317 13
12318 6
12319 18
12320 35
12321 27
12322 18
12323 35
12324 27
12325 11
12326 16
12327 14
12328 20
12329 17
12330 13
12331 20
12332 17
12333 11
12334 16
12335 14
12336 12
12337 11
12338 9
12339 18
12340 35
12341 27
12342 18
12343 35
12344 27
12345 11
12346 16
12347 14
12348 13
12349 20
12350 17
12351 13
12352 20
12353 17
12354 11
12355 16
12356 14
12357 12
12358 11
12359 14
12360 23
12361 19
12362 14
12363 23
12364 19
12365 10
12366 13
12367 12
12368 12
12369 17
12370 15
12371 12
12372 17
12373 15
12374 10
12375 13
12376 12
12377 9
12378 18
12379 35
12380 27
12381 18
12382 35
12383 27
12384 11
12385 16
12386 14
12387 13
12388 20
12389 17
12390 13
12391 20
12392 17
12393 11
12394 16
12395 14
12396 12
12397 11
12398 9
12399 18
12400 35
12401 27
12402 18
12403 35
12404 27
12405 11
12406 16
12407 14
12408 13
12409 20
12410 17
12411 13
12412 17
12413 11
12414 16
12415 14
12416 12
12417 11
12418 9
12419 18
12420 35
12421 27
12422 18
12423 35
12424 27
12425 14
12426 13
12427 20
12428 17
12429 13
12430 20
12431 17
12432 11
12433 16
12434 14
12435 12
12436 11
12437 14
12438 23
12439 19
12440 14
12441 23
12442 19
12443 10
12444 13
12445 12
12446 12
12447 17
12448 15
12449 12
12450 17
12451 15
12452 10
12453 13
12454 12
12455 9
12456 18
12457 35
12458 27
12459 18
12460 35
12461 27
12462 11
12463 16
12464 14
12465 13
12466 20
12467 17
12468 13
12469 20
12470 17
12471 11
12472 16
12473 14
12474 12
12475 11
12476 5
12477 8
12478 17
12479 34
12480 26
12481 17
12482 34
12483 26
12484 10
12485 15
12486 13
12487 12
12488 19
12489 16
12490 12
12491 19
12492 16
12493 10
12494 13
12495 11
12496 10
12497 8
12498 17
12499 34
12500 26
12501 17
12502 34
12503 26
12504 10
12505 15
12506 13
12507 12
12508 19
12509 16
12510 12
12511 19
12512 16
12513 10
12514 15
12515 13
12516 11
12517 10
12518 13
12519 22
12520 18
12521 13
12522 22
12523 18
12524 9
12525 12
12526 11
12527 11
12528 16
12529 14
12530 11
12531 16
12532 9
12533 12
12534 11
12535 8
12536 17
12537 34
12538 26
12539 17
12540 26
12541 10
12542 15
12543 13
12544 12
12545 19
12546 16
12547 12
12548 19
12549 16
12550 10
12551 15
12552 13
12553 11
12554 10
12555 8
12556 17
12557 34
12558 26
12559 17
12560 34
12561 26
12562 10
12563 15
12564 13
12565 12
12566 19
12567 16
12568 12
12569 19
12570 16
12571 10
12572 15
12573 13
12574 10
12575 8
12576 17
12577 34
12578 26
12579 17
12580 34
12581 26
12582 10
12583 15
12584 13
12585 12
12586 19
12587 16
12588 12
12589 19
12590 16
12591 10
12592 15
12593 13
12594 11
12595 10
12596 13
12597 22
12598 18
12599 13
12600 22
12601 18
12602 9
12603 12
12604 11
12605 11
12606 16
12607 14
12608 11
12609 16
12610 14
12611 9
12612 12
12613 8
12614 17
12615 34
12616 26
12617 17
12618 34
12619 26
12620 10
12621 15
12622 13
12623 12
12624 19
12625 16
12626 12
12627 19
12628 16
12629 10
12630 15
12631 13
12632 11
12633 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

1
WUG0 and turn opposite right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

2
turn around left and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

3
WUG0 around right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

4
WUG0 right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

5
WUG0 left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

6
turn around right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

7
WUG0 left thrice and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

8
WUG0 opposite right and turn around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

9
turn opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

10
turn right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

11
turn opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

12
WUG0 around right and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

13
turn around left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

14
WUG0 left after turn left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

15
WUG0 around right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

16
WUG0 right and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

17
WUG0 opposite left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

18
turn right thrice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

19
WUG0 right thrice and turn around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

20
WUG0 left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

21
WUG0 opposite left thrice and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

22
WUG0 opposite right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

23
WUG0 right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

24
WUG0 around left after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

25
WUG0 around right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

26
turn opposite right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

27
WUG0 opposite right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

28
turn opposite left after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

29
WUG0 opposite right twice and turn opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

30
turn right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

31
WUG0 thrice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

32
WUG0 around right and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

33
turn around left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

34
WUG0 right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

35
WUG0 around right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

36
WUG0 twice and WUG0 opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

37
WUG0 twice and WUG0 opposite right thrice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

38
WUG0 thrice and WUG0 around right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

39
turn around left thrice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

40
WUG0 twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

41
WUG0 after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

42
WUG0 around right twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

43
WUG0 left thrice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

44
turn left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

45
WUG0 thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

46
WUG0 opposite left and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

47
turn opposite left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

48
WUG0 twice and turn left WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn left
--
I_JUMP I_JUMP I_TURN_LEFT

49
turn opposite right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

50
turn right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

51
turn around right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

52
WUG0 twice after WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump
--
I_JUMP I_JUMP I_JUMP

53
WUG0 left thrice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

54
turn left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

55
WUG0 around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

56
turn around right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

57
WUG0 around left twice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

58
WUG0 opposite left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

59
WUG0 opposite left twice and turn around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

60
turn right and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

61
WUG0 right and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

62
WUG0 twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

63
turn opposite right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

64
WUG0 left twice and run right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_RUN {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and run right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_RUN

65
WUG0 twice and WUG0 around right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

66
WUG0 opposite right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

67
WUG0 around right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

68
turn right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

69
turn opposite left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

70
WUG0 after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

71
WUG0 opposite left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

72
WUG0 and turn opposite left WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite left
--
I_JUMP I_TURN_LEFT I_TURN_LEFT

73
turn around left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

74
turn around left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

75
turn opposite left and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

76
WUG0 thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

77
WUG0 thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

78
turn around left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

79
WUG0 around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

80
turn opposite left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

81
WUG0 opposite right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

82
WUG0 right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

83
WUG0 after WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump
--
I_JUMP I_JUMP

84
WUG0 around right and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

85
turn around right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

86
turn opposite right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

87
WUG0 thrice and turn left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

88
WUG0 left thrice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk left thrice and walk opposite left twice
--
I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK

89
WUG0 opposite right twice and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

90
turn around right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

91
WUG0 around left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

92
WUG0 thrice after WUG0 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump
--
I_JUMP I_JUMP I_JUMP I_JUMP

93
turn around left twice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

94
turn opposite left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

95
WUG0 after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

96
turn right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT

97
WUG0 twice and turn around right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

98
turn around right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

99
WUG0 opposite right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

100
WUG0 opposite left and turn right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

101
WUG0 left twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

102
WUG0 right after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

103
turn left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

104
WUG0 opposite left thrice and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

105
WUG0 around right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

106
WUG0 and turn around right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

107
WUG0 around left thrice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

108
WUG0 right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

109
turn opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

110
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

111
turn around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

112
WUG0 around left thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

113
WUG0 around left twice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

114
WUG0 opposite right twice and turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

115
turn opposite right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

116
WUG0 left thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

117
WUG0 thrice and WUG0 around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

118
WUG0 twice and turn opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

119
WUG0 left after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

120
WUG0 left and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

121
WUG0 opposite left twice and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

122
WUG0 opposite right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

123
WUG0 around right twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

124
WUG0 right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

125
WUG0 around left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

126
WUG0 around right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

127
WUG0 opposite left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

128
WUG0 around left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

129
WUG0 right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

130
WUG0 opposite right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

131
WUG0 thrice and turn around left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

132
turn right and WUG0 around left thrice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

133
WUG0 opposite left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

134
WUG0 opposite right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

135
WUG0 opposite right twice and turn left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

136
turn around right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

137
WUG0 left thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

138
WUG0 opposite right twice and turn left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

139
turn left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

140
WUG0 right and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

141
turn left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

142
WUG0 around right twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

143
WUG0 opposite left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

144
WUG0 opposite right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

145
WUG0 left thrice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

146
WUG0 right and turn left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

147
WUG0 and turn left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

148
WUG0 opposite right thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

149
WUG0 right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

150
turn left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

151
WUG0 right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

152
turn left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

153
turn left twice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

154
WUG0 around left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

155
WUG0 thrice and WUG0 around left twice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

156
WUG0 left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

157
turn left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

158
WUG0 opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

159
turn left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

160
WUG0 around left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

161
WUG0 opposite right thrice and turn opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

162
WUG0 left thrice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

163
WUG0 opposite right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

164
WUG0 around left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

165
turn around left thrice and WUG0 left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

166
turn left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

167
turn opposite left twice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

168
WUG0 opposite left after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

169
turn left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

170
WUG0 around right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

171
WUG0 around left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

172
turn opposite left and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

173
turn opposite left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

174
WUG0 left twice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

175
turn around right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

176
WUG0 opposite left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

177
WUG0 opposite left after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

178
WUG0 right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

179
WUG0 opposite left thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

180
WUG0 left twice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

181
turn around right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

182
WUG0 left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

183
WUG0 thrice and WUG0 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump
--
I_JUMP I_JUMP I_JUMP I_JUMP

184
WUG0 opposite left twice and turn opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

185
WUG0 opposite left and turn opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

186
WUG0 opposite right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

187
turn around left thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

188
turn right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

189
WUG0 right after WUG0 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump
--
I_JUMP I_TURN_RIGHT I_JUMP

190
WUG0 right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

191
WUG0 right thrice and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

192
WUG0 opposite right after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

193
turn left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

194
turn around left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

195
WUG0 opposite left and turn opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

196
WUG0 right twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

197
WUG0 right thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

198
WUG0 around left twice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

199
WUG0 around left and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

200
WUG0 right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

201
WUG0 right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

202
WUG0 twice and WUG0 right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

203
turn around right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

204
WUG0 left after WUG0 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump
--
I_JUMP I_TURN_LEFT I_JUMP

205
WUG0 around left and WUG0 opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

206
turn opposite right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

207
WUG0 opposite right thrice after turn left I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

208
WUG0 around left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

209
turn opposite left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

210
WUG0 thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

211
WUG0 right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

212
turn left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

213
turn opposite right twice and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

214
WUG0 right thrice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

215
turn around left and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

216
turn opposite right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

217
turn right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

218
WUG0 around right thrice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

219
WUG0 opposite right twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

220
WUG0 opposite left twice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

221
WUG0 around right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

222
WUG0 opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

223
WUG0 opposite left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

224
WUG0 twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

225
WUG0 right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

226
turn opposite left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

227
WUG0 opposite left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

228
WUG0 opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

229
WUG0 left thrice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

230
WUG0 opposite left thrice and turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

231
WUG0 right twice and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

232
turn left after WUG0 twice WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT

233
turn left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

234
turn opposite right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

235
turn opposite right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

236
WUG0 opposite left twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

237
turn around left after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

238
turn around right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

239
WUG0 opposite left twice and turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

240
WUG0 opposite right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

241
WUG0 opposite right twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

242
WUG0 around right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

243
WUG0 opposite right twice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

244
WUG0 right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

245
turn opposite left and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

246
turn around right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

247
turn around right and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

248
WUG0 around right thrice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

249
WUG0 left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

250
WUG0 left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

251
WUG0 around left thrice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

252
WUG0 opposite right thrice and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

253
WUG0 right after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

254
WUG0 left twice and turn opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

255
WUG0 right twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

256
WUG0 after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

257
turn right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

258
WUG0 right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

259
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

260
WUG0 around left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

261
turn around right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

262
WUG0 opposite left thrice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

263
WUG0 around left twice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

264
WUG0 right twice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

265
turn around right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

266
turn right and WUG0 around left twice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around left twice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

267
WUG0 opposite left and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

268
turn around left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

269
turn around right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

270
WUG0 opposite right thrice and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

271
WUG0 around left thrice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

272
turn around right thrice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

273
turn around right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

274
WUG0 opposite left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

275
WUG0 around right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

276
turn left thrice and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

277
WUG0 left twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

278
WUG0 around left twice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

279
WUG0 around right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

280
turn around left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

281
WUG0 opposite right twice and turn right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

282
WUG0 right thrice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

283
turn around right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

284
WUG0 opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

285
WUG0 opposite left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

286
WUG0 right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

287
WUG0 and turn around left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

288
WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

289
WUG0 thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

290
WUG0 left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

291
WUG0 around right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

292
WUG0 left and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

293
WUG0 left twice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

294
WUG0 thrice and WUG0 right WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump right
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

295
turn opposite left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

296
WUG0 left thrice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

297
turn left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

298
WUG0 left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

299
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

300
WUG0 opposite right thrice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

301
WUG0 around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

302
turn opposite left and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

303
WUG0 left twice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

304
turn right thrice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

305
turn left twice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

306
WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

307
turn around left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

308
WUG0 opposite right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

309
WUG0 left thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

310
turn opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

311
turn opposite left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

312
WUG0 around right after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

313
WUG0 around left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

314
turn opposite left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

315
turn opposite right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

316
WUG0 around right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

317
WUG0 after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

318
WUG0 opposite left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

319
WUG0 opposite right thrice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

320
WUG0 opposite right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

321
WUG0 and turn right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

322
WUG0 after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

323
turn left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

324
WUG0 right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

325
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

326
WUG0 right thrice and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

327
walk opposite left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk opposite left twice after walk left thrice
--
I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK

328
WUG0 opposite right and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

329
WUG0 around right and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

330
WUG0 around right twice and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

331
WUG0 opposite left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

332
WUG0 around right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

333
WUG0 opposite right and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

334
WUG0 opposite left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

335
turn left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

336
WUG0 opposite left thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

337
WUG0 right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

338
WUG0 opposite right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

339
WUG0 opposite right twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

340
turn opposite left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

341
WUG0 around left twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

342
turn around left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

343
WUG0 left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

344
turn opposite right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

345
turn opposite left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

346
WUG0 around left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

347
WUG0 around left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

348
turn left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

349
WUG0 left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

350
WUG0 around left twice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

351
WUG0 thrice and WUG0 opposite left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

352
WUG0 opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

353
turn around left twice after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

354
WUG0 left after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

355
turn opposite left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

356
WUG0 opposite right and turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

357
turn right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

358
turn right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

359
WUG0 opposite right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

360
WUG0 left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

361
WUG0 around left and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

362
run opposite WUG0 thrice after walk opposite WUG0 WUG1 WUG1 I_WALK WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run opposite right thrice after walk opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN

363
run opposite WUG0 twice and turn around WUG0 thrice WUG1 WUG1 I_RUN WUG1 WUG1 I_RUN WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
run opposite left twice and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

364
look opposite WUG0 and run opposite left thrice WUG1 WUG1 I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
look opposite left and run opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

365
run opposite left thrice after look opposite WUG0 WUG1 WUG1 I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
run opposite left thrice after look opposite left
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

366
turn opposite left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

367
look around right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look around right thrice after look left
--
I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK

368
walk left twice and WUG0 around left twice I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
walk left twice and jump around left twice
--
I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

369
turn around right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

370
turn around right and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

371
WUG0 twice after WUG0 left I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump left
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP

372
WUG0 opposite left and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

373
WUG0 left thrice and turn around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

374
WUG0 around left and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

375
WUG0 opposite right thrice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

376
WUG0 thrice and WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

377
turn left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

378
turn left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

379
WUG0 left thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

380
turn left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

381
WUG0 around right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
turn opposite left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

383
WUG0 left and turn right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

384
WUG0 thrice and WUG0 opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

385
WUG0 left after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

386
WUG0 right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

387
WUG0 around right and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

388
WUG0 right twice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

389
WUG0 opposite left twice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

390
run around right twice and WUG0 opposite left twice I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
run around right twice and look opposite left twice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK

391
