12619
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 13
11 11
12 10
13 17
14 14
15 10
16 17
17 14
18 8
19 13
20 11
21 9
22 8
23 6
24 15
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 17
34 14
35 10
36 17
37 14
38 8
39 13
40 11
41 9
42 8
43 11
44 20
45 16
46 11
47 20
48 16
49 7
50 10
51 9
52 9
53 14
54 9
55 14
56 12
57 7
58 10
59 9
60 6
61 15
62 32
63 24
64 15
65 32
66 24
67 8
68 13
69 11
70 10
71 17
72 14
73 10
74 14
75 8
76 13
77 11
78 9
79 8
80 6
81 15
82 32
83 24
84 15
85 32
86 24
87 8
88 13
89 11
90 10
91 17
92 14
93 10
94 17
95 8
96 13
97 11
98 8
99 6
100 15
101 32
102 24
103 15
104 32
105 24
106 8
107 13
108 11
109 10
110 17
111 14
112 10
113 17
114 13
115 11
116 9
117 8
118 11
119 20
120 16
121 11
122 20
123 16
124 7
125 10
126 9
127 9
128 14
129 9
130 12
131 7
132 10
133 9
134 6
135 15
136 32
137 24
138 15
139 32
140 24
141 8
142 13
143 11
144 10
145 17
146 14
147 10
148 17
149 8
150 13
151 11
152 9
153 12
154 15
155 24
157 33
158 24
160 33
161 17
162 22
163 20
164 19
165 26
166 23
167 19
168 26
169 23
170 17
171 22
172 20
173 18
174 17
175 15
176 24
178 33
179 24
181 33
182 17
183 22
184 20
185 19
186 26
187 23
188 19
189 26
190 23
191 17
192 22
193 20
194 18
195 17
196 20
197 29
198 25
199 20
200 29
201 25
202 16
203 19
204 18
205 18
206 23
207 21
208 18
209 23
210 21
211 16
212 18
213 15
214 24
216 33
217 24
219 33
220 17
221 22
222 20
223 19
224 26
225 23
226 19
227 26
228 23
229 17
230 22
231 20
232 18
233 17
234 15
235 24
237 33
238 24
240 33
241 17
242 20
243 26
244 23
245 19
246 26
247 23
248 22
249 20
250 18
251 17
252 15
253 24
255 33
256 24
258 33
259 17
260 22
261 19
262 26
263 23
264 19
265 26
266 23
267 17
268 22
269 20
270 18
271 17
272 20
273 29
274 25
275 20
276 29
277 25
278 16
279 19
280 18
281 18
282 23
283 21
284 18
285 23
286 21
287 16
288 19
289 18
290 15
291 24
293 33
294 24
296 17
297 22
298 20
299 19
300 26
301 23
302 19
303 26
304 23
305 17
306 22
307 20
308 18
309 17
310 29
311 32
317 34
318 39
319 37
320 36
322 36
325 34
326 39
327 37
328 35
329 34
330 32
337 34
338 39
339 37
340 36
343 36
346 34
347 39
348 37
349 35
350 34
351 37
354 37
357 33
358 36
359 35
360 35
362 38
363 35
365 38
366 33
367 36
368 35
369 32
376 34
377 39
378 37
379 36
382 36
385 34
386 39
387 37
388 35
389 34
390 32
397 34
398 39
399 37
400 36
403 36
406 34
407 39
408 37
409 35
410 34
411 32
418 34
419 39
420 37
421 36
424 36
427 34
428 39
429 37
430 35
431 34
432 37
435 37
438 33
439 36
440 35
441 35
443 38
444 35
446 38
447 33
448 36
449 35
450 32
457 34
458 39
459 37
460 36
463 36
466 34
467 39
468 37
469 35
470 34
471 21
472 24
473 33
476 33
479 31
480 29
481 35
482 32
483 28
484 35
485 32
486 26
487 29
488 27
489 26
490 24
491 33
494 33
497 26
498 31
499 29
500 28
501 35
502 32
503 28
504 35
505 32
506 26
507 31
508 29
509 26
510 29
511 38
512 34
513 29
514 34
515 27
516 27
517 32
518 30
519 27
520 32
521 30
522 25
523 28
524 27
525 24
526 33
529 33
532 26
533 31
534 29
535 28
536 35
537 32
538 28
539 32
540 26
541 31
542 29
543 27
544 26
545 24
546 33
549 33
551 26
552 31
553 29
554 28
555 32
556 28
557 35
558 26
559 31
560 29
561 27
562 26
563 24
564 33
567 33
570 26
571 31
572 29
573 28
574 35
575 32
576 28
577 35
578 32
579 26
580 29
581 27
582 26
583 29
584 38
585 34
586 29
587 38
588 34
589 25
590 28
591 27
592 27
593 32
594 30
595 27
596 32
597 30
598 25
599 28
600 27
601 33
604 33
607 26
608 31
609 29
610 28
611 35
612 32
613 28
614 35
615 32
616 26
617 31
618 29
619 27
620 12
621 15
622 24
624 33
625 24
627 33
628 17
629 22
630 20
631 19
632 26
633 23
634 19
635 26
636 23
637 17
638 22
639 20
640 18
641 17
642 15
643 24
645 33
646 24
648 33
649 17
650 22
651 20
652 19
653 26
654 23
655 26
656 23
657 17
658 22
659 20
660 18
661 17
662 20
663 29
664 25
665 20
666 29
667 25
668 19
669 18
670 18
671 23
672 21
673 18
674 23
675 21
676 16
677 19
678 18
679 15
680 24
682 33
683 24
685 33
686 17
687 22
688 20
689 19
690 26
691 23
692 19
693 26
694 23
695 17
696 22
697 20
698 18
699 17
700 15
701 24
703 33
704 24
706 33
707 17
708 22
709 20
710 19
711 26
712 23
713 19
714 26
715 23
716 17
717 22
718 20
719 18
720 17
721 15
722 24
724 33
725 24
727 33
728 17
729 22
730 20
731 19
732 26
733 19
734 26
735 23
736 17
737 22
738 20
739 18
740 17
741 20
742 29
743 25
744 20
745 29
746 25
747 16
748 19
749 18
750 18
751 23
752 21
753 18
754 23
755 21
756 16
757 19
758 18
759 15
760 24
762 33
763 24
765 33
766 17
767 22
768 20
769 19
770 26
771 23
772 19
773 26
774 23
775 17
776 22
777 20
778 18
779 17
780 29
781 32
788 34
789 39
790 37
791 36
794 36
797 34
798 39
799 37
800 35
801 34
802 32
808 34
809 39
810 37
811 36
814 36
817 34
818 39
819 37
820 35
821 34
822 37
825 37
828 33
829 36
830 35
831 35
833 38
834 35
836 38
837 33
838 36
839 35
840 32
847 34
848 39
849 37
850 36
853 36
856 34
857 39
858 37
859 35
860 34
861 32
867 34
868 39
869 37
872 36
875 34
876 39
877 37
878 35
879 34
880 32
887 34
888 39
889 37
890 36
893 36
896 34
897 39
898 37
899 35
900 34
901 37
904 37
907 33
908 36
909 35
910 35
912 38
913 35
915 38
916 33
917 36
918 35
919 32
926 34
927 37
928 36
931 36
934 34
935 37
936 35
937 34
938 21
939 24
940 33
943 33
945 26
946 31
947 29
948 28
949 35
950 32
951 28
952 35
953 32
954 26
955 31
956 29
957 27
958 26
959 24
960 33
963 33
966 26
967 31
968 28
969 35
970 32
971 28
972 32
973 26
974 29
975 27
976 26
977 38
978 34
979 29
980 38
981 34
982 25
983 28
984 27
985 27
986 32
987 30
988 27
989 32
990 30
991 25
992 28
993 27
994 24
995 33
998 33
1001 26
1002 31
1003 28
1004 35
1005 32
1006 28
1007 35
1008 32
1009 26
1010 31
1011 29
1012 27
1013 26
1014 24
1015 33
1018 33
1021 26
1022 31
1023 29
1024 28
1025 35
1026 32
1027 28
1028 35
1029 32
1030 26
1031 29
1032 27
1033 26
1034 24
1035 33
1038 33
1041 26
1042 31
1043 29
1044 28
1045 35
1046 32
1047 28
1048 35
1049 32
1050 26
1051 31
1052 29
1053 27
1054 26
1055 29
1056 38
1057 34
1058 29
1059 38
1060 34
1061 25
1062 28
1063 27
1064 27
1065 32
1066 30
1067 27
1068 32
1069 30
1070 25
1071 28
1072 27
1073 24
1074 33
1077 33
1080 26
1081 31
1082 29
1083 28
1084 35
1085 32
1086 28
1087 35
1088 32
1089 26
1090 31
1091 29
1092 27
1093 26
1094 5
1095 8
1096 17
1097 34
1098 17
1099 34
1100 26
1101 10
1102 15
1103 13
1104 12
1105 19
1106 16
1107 12
1108 19
1109 16
1110 10
1111 15
1112 13
1113 11
1114 10
1115 8
1116 17
1117 34
1118 26
1119 17
1120 34
1121 26
1122 10
1123 15
1124 13
1125 12
1126 19
1127 16
1128 12
1129 19
1130 16
1131 10
1132 15
1133 13
1134 11
1135 10
1136 13
1137 22
1138 18
1139 13
1140 22
1141 18
1142 9
1143 12
1144 11
1145 11
1146 16
1147 14
1148 11
1149 16
1150 14
1151 9
1152 12
1153 11
1154 8
1155 17
1156 34
1157 26
1158 17
1159 34
1160 26
1161 10
1162 15
1163 13
1164 12
1165 19
1166 16
1167 12
1168 19
1169 10
1170 15
1171 13
1172 11
1173 10
1174 8
1175 17
1176 34
1177 26
1178 17
1179 26
1180 10
1181 15
1182 13
1183 12
1184 19
1185 16
1186 12
1187 19
1188 16
1189 10
1190 15
1191 13
1192 11
1193 17
1194 34
1195 26
1196 17
1197 34
1198 26
1199 10
1200 15
1201 13
1202 12
1203 19
1204 16
1205 12
1206 19
1207 16
1208 10
1209 15
1210 13
1211 11
1212 10
1213 13
1214 22
1215 18
1216 13
1217 22
1218 18
1219 9
1220 12
1221 11
1222 11
1223 16
1224 14
1225 11
1226 16
1227 14
1228 9
1229 12
1230 11
1231 8
1232 17
1233 26
1234 17
1235 34
1236 26
1237 15
1238 13
1239 12
1240 16
1241 12
1242 19
1243 16
1244 10
1245 15
1246 13
1247 11
1248 10
1249 10
1250 13
1251 39
1252 31
1253 22
1254 39
1255 31
1256 15
1257 20
1258 18
1259 17
1260 24
1261 21
1262 17
1263 24
1264 21
1265 15
1266 20
1267 18
1268 16
1269 13
1270 22
1271 39
1272 22
1273 39
1274 31
1275 15
1276 20
1277 18
1278 17
1279 24
1280 21
1281 17
1282 24
1283 21
1284 15
1285 18
1286 16
1287 15
1288 18
1289 27
1290 23
1291 18
1292 27
1293 23
1294 14
1295 16
1296 16
1297 21
1298 19
1299 16
1300 21
1301 19
1302 14
1303 17
1304 16
1305 13
1306 22
1307 39
1308 31
1309 22
1310 31
1311 15
1312 20
1313 18
1314 17
1315 24
1316 21
1317 17
1318 24
1319 21
1320 15
1321 20
1322 18
1323 16
1324 15
1325 13
1326 22
1327 39
1328 31
1329 22
1330 39
1331 31
1332 15
1333 20
1334 17
1335 24
1336 21
1337 17
1338 24
1339 21
1340 15
1341 20
1342 18
1343 16
1344 15
1345 13
1346 22
1347 39
1348 31
1349 22
1350 39
1351 31
1352 15
1353 20
1354 18
1355 24
1356 21
1357 17
1358 24
1359 21
1360 15
1361 20
1362 18
1363 16
1364 18
1365 27
1366 18
1367 27
1368 23
1369 14
1370 17
1371 16
1372 16
1373 21
1374 19
1375 16
1376 21
1377 19
1378 14
1379 17
1380 16
1381 13
1382 39
1383 22
1384 39
1385 15
1386 20
1387 18
1388 17
1389 24
1390 21
1391 17
1392 24
1393 21
1394 15
1395 20
1396 18
1397 16
1398 15
1399 8
1400 11
1401 20
1402 37
1403 29
1404 20
1405 37
1406 29
1407 13
1408 18
1409 16
1410 15
1411 22
1412 19
1413 15
1414 22
1415 19
1416 13
1417 18
1418 16
1419 14
1420 13
1421 11
1422 20
1423 37
1424 29
1425 20
1426 37
1427 29
1428 13
1429 18
1430 16
1431 15
1432 22
1433 19
1434 15
1435 22
1436 19
1437 13
1438 18
1439 16
1440 14
1441 13
1442 16
1443 25
1444 21
1445 16
1446 25
1447 21
1448 12
1449 15
1450 14
1451 14
1452 19
1453 17
1454 14
1455 19
1456 17
1457 12
1458 15
1459 14
1460 11
1461 20
1462 37
1463 29
1464 20
1465 37
1466 29
1467 13
1468 18
1469 16
1470 15
1471 22
1472 19
1473 15
1474 22
1475 19
1476 13
1477 18
1478 14
1479 13
1480 11
1481 20
1482 37
1483 29
1484 20
1485 37
1486 29
1487 13
1488 18
1489 16
1490 15
1491 22
1492 19
1493 15
1494 22
1495 19
1496 13
1497 18
1498 16
1499 14
1500 13
1501 11
1502 20
1503 37
1504 29
1505 20
1506 37
1507 29
1508 13
1509 18
1510 16
1511 15
1512 22
1513 19
1514 15
1515 22
1516 19
1517 13
1518 18
1519 16
1520 14
1521 13
1522 16
1523 25
1524 21
1525 16
1526 25
1527 21
1528 12
1529 15
1530 14
1531 14
1532 19
1533 17
1534 14
1535 19
1536 17
1537 12
1538 15
1539 14
1540 11
1541 20
1542 37
1543 29
1544 20
1545 37
1546 29
1547 13
1548 18
1549 16
1550 15
1551 22
1552 19
1553 15
1554 22
1555 19
1556 13
1557 18
1558 16
1559 14
1560 13
1561 7
1562 10
1563 19
1564 36
1565 28
1566 19
1567 36
1568 28
1569 17
1570 15
1571 14
1572 21
1573 18
1574 14
1575 21
1576 18
1577 12
1578 17
1579 15
1580 12
1581 10
1582 19
1583 36
1584 28
1585 19
1586 36
1587 12
1588 17
1589 15
1590 14
1591 21
1592 18
1593 14
1594 21
1595 18
1596 12
1597 17
1598 15
1599 13
1600 12
1601 15
1602 24
1603 20
1604 15
1605 24
1606 20
1607 11
1608 14
1609 13
1610 13
1611 18
1612 16
1613 13
1614 18
1615 16
1616 11
1617 14
1618 13
1619 10
1620 19
1621 36
1622 28
1623 19
1624 36
1625 28
1626 12
1627 17
1628 15
1629 14
1630 21
1631 18
1632 14
1633 21
1634 18
1635 12
1636 15
1637 13
1638 12
1639 10
1640 19
1641 36
1642 28
1643 19
1644 36
1645 28
1646 12
1647 17
1648 15
1649 14
1650 21
1651 18
1652 14
1653 21
1654 18
1655 12
1656 17
1657 15
1658 13
1659 12
1660 10
1661 19
1662 36
1663 28
1664 19
1665 36
1666 28
1667 12
1668 17
1669 15
1670 14
1671 21
1672 18
1673 14
1674 21
1675 18
1676 12
1677 17
1678 15
1679 13
1680 12
1681 15
1682 24
1683 20
1684 15
1685 24
1686 20
1687 11
1688 13
1689 13
1690 18
1691 16
1692 13
1693 18
1694 16
1695 11
1696 14
1697 13
1698 10
1699 19
1700 36
1701 28
1702 19
1703 36
1704 28
1705 12
1706 17
1707 15
1708 14
1709 21
1710 18
1711 14
1712 21
1713 18
1714 12
1715 17
1716 15
1717 12
1718 14
1719 17
1720 26
1722 35
1723 26
1725 35
1726 19
1727 24
1728 22
1729 21
1730 28
1731 25
1732 21
1733 28
1734 25
1735 19
1736 24
1737 22
1738 20
1739 19
1740 17
1741 26
1743 35
1744 26
1746 35
1747 19
1748 24
1749 22
1750 21
1751 28
1752 25
1753 21
1754 28
1755 25
1756 19
1757 24
1758 22
1759 20
1760 19
1761 22
1762 31
1763 27
1764 22
1765 31
1766 27
1767 18
1768 20
1769 20
1770 25
1771 20
1772 25
1773 23
1774 18
1775 21
1776 20
1777 17
1778 26
1779 35
1780 26
1782 35
1783 19
1784 24
1785 22
1786 21
1787 25
1788 21
1789 28
1790 25
1791 19
1792 24
1793 22
1794 20
1795 19
1796 17
1797 26
1799 35
1800 26
1802 35
1803 19
1804 24
1805 22
1806 21
1807 28
1808 25
1809 21
1810 28
1811 25
1812 19
1813 24
1814 22
1815 20
1816 19
1817 17
1818 26
1820 35
1821 26
1823 35
1824 19
1825 24
1826 22
1827 21
1828 28
1829 25
1830 21
1831 28
1832 25
1833 19
1834 24
1835 22
1836 20
1837 19
1838 22
1839 31
1840 27
1841 22
1842 31
1843 27
1844 18
1845 21
1846 20
1847 20
1848 25
1849 23
1850 20
1851 25
1852 23
1853 18
1854 21
1855 20
1856 17
1857 26
1859 35
1860 26
1862 35
1863 19
1864 24
1865 22
1866 21
1867 28
1868 25
1869 21
1870 28
1871 25
1872 19
1873 24
1874 22
1875 20
1876 19
1877 11
1878 14
1879 23
1881 32
1882 23
1883 32
1884 16
1885 21
1886 19
1887 18
1888 25
1889 22
1890 18
1891 25
1892 22
1893 16
1894 21
1895 19
1896 17
1897 16
1898 14
1899 23
1901 32
1902 23
1904 32
1905 16
1906 21
1907 19
1908 18
1909 25
1910 22
1911 18
1912 25
1913 22
1914 16
1915 21
1916 19
1917 17
1918 16
1919 19
1920 28
1921 24
1922 19
1923 28
1924 24
1925 15
1926 18
1927 17
1928 17
1929 22
1930 20
1931 17
1932 22
1933 20
1934 15
1935 18
1936 17
1937 14
1938 23
1940 32
1941 23
1943 32
1944 16
1945 21
1946 19
1947 18
1948 25
1949 22
1950 18
1951 25
1952 22
1953 16
1954 21
1955 19
1956 17
1957 16
1958 14
1959 23
1961 32
1962 23
1964 32
1965 16
1966 21
1967 19
1968 18
1969 25
1970 22
1971 18
1972 25
1973 22
1974 16
1975 21
1976 17
1977 16
1978 14
1979 23
1981 23
1983 32
1984 16
1985 21
1986 19
1987 18
1988 25
1989 22
1990 18
1991 25
1992 22
1993 16
1994 21
1995 19
1996 17
1997 16
1998 19
1999 28
2000 24
2001 19
2002 28
2003 24
2004 15
2005 18
2006 17
2007 17
2008 20
2009 17
2010 22
2011 20
2012 18
2013 14
2014 23
2016 32
2017 23
2019 32
2020 16
2021 21
2022 19
2023 18
2024 25
2025 22
2026 18
2027 25
2028 22
2029 16
2030 21
2031 19
2032 17
2033 16
2034 7
2035 10
2036 19
2037 36
2038 19
2039 36
2040 28
2041 12
2042 17
2043 15
2044 14
2045 21
2046 18
2047 14
2048 21
2049 18
2050 12
2051 17
2052 15
2053 13
2054 12
2055 19
2056 36
2057 28
2058 19
2059 36
2060 28
2061 12
2062 17
2063 15
2064 14
2065 21
2066 18
2067 14
2068 21
2069 18
2070 12
2071 17
2072 15
2073 13
2074 12
2075 15
2076 24
2077 20
2078 15
2079 24
2080 20
2081 11
2082 14
2083 13
2084 18
2085 16
2086 13
2087 18
2088 16
2089 11
2090 14
2091 13
2092 10
2093 36
2094 28
2095 19
2096 36
2097 28
2098 12
2099 17
2100 15
2101 14
2102 21
2103 18
2104 14
2105 21
2106 18
2107 12
2108 17
2109 15
2110 13
2111 12
2112 10
2113 19
2114 36
2115 28
2116 19
2117 36
2118 28
2119 17
2120 15
2121 14
2122 21
2123 18
2124 14
2125 21
2126 18
2127 12
2128 17
2129 15
2130 12
2131 10
2132 19
2133 36
2134 28
2135 36
2136 28
2137 12
2138 17
2139 15
2140 14
2141 21
2142 18
2143 14
2144 21
2145 18
2146 12
2147 17
2148 15
2149 13
2150 12
2151 15
2152 24
2153 20
2154 15
2155 24
2156 20
2157 11
2158 14
2159 13
2160 13
2161 18
2162 16
2163 13
2164 18
2165 16
2166 11
2167 14
2168 13
2169 10
2170 19
2171 28
2172 19
2173 36
2174 28
2175 12
2176 17
2177 14
2178 21
2179 18
2180 14
2181 21
2182 18
2183 12
2184 17
2185 15
2186 13
2187 12
2188 14
2189 17
2190 26
2192 35
2193 26
2195 35
2196 19
2197 24
2198 22
2199 21
2200 25
2201 21
2202 28
2203 25
2204 19
2205 24
2206 22
2207 20
2208 19
2209 17
2211 35
2212 26
2214 35
2215 19
2216 24
2217 22
2218 21
2219 28
2220 25
2221 21
2222 28
2223 25
2224 19
2225 24
2226 22
2227 20
2228 19
2229 22
2230 31
2231 27
2232 22
2233 31
2234 27
2235 18
2236 21
2237 20
2238 20
2239 25
2240 23
2241 20
2242 25
2243 23
2244 21
2245 20
2246 17
2247 26
2249 35
2250 26
2252 35
2253 19
2254 24
2255 22
2256 21
2257 28
2258 25
2259 21
2260 28
2261 25
2262 19
2263 24
2264 22
2265 20
2266 19
2267 17
2268 26
2270 35
2271 26
2273 35
2274 19
2275 24
2276 22
2277 21
2278 28
2279 25
2280 21
2281 28
2282 25
2283 19
2284 24
2285 22
2286 20
2287 19
2288 17
2289 26
2291 35
2292 26
2293 35
2294 19
2295 24
2296 22
2297 21
2298 28
2299 25
2300 21
2301 28
2302 25
2303 19
2304 24
2305 22
2306 20
2307 19
2308 22
2309 31
2310 27
2311 22
2312 31
2313 27
2314 21
2315 20
2316 20
2317 25
2318 23
2319 20
2320 25
2321 23
2322 18
2323 21
2324 20
2325 17
2326 26
2328 26
2330 35
2331 19
2332 24
2333 22
2334 21
2335 28
2336 25
2337 21
2338 28
2339 25
2340 19
2341 24
2342 22
2343 20
2344 19
2345 11
2346 14
2347 23
2349 32
2350 23
2352 32
2353 16
2354 21
2355 19
2356 18
2357 25
2358 22
2359 18
2360 25
2361 22
2362 16
2363 21
2364 19
2365 17
2366 16
2367 14
2368 23
2370 32
2371 23
2373 32
2374 16
2375 21
2376 19
2377 18
2378 25
2379 22
2380 18
2381 25
2382 22
2383 16
2384 21
2385 19
2386 17
2387 16
2388 19
2389 28
2390 24
2391 19
2392 28
2393 24
2394 15
2395 18
2396 17
2397 17
2398 22
2399 20
2400 17
2401 20
2402 15
2403 18
2404 17
2405 14
2406 23
2408 32
2409 23
2411 32
2412 16
2413 21
2414 19
2415 18
2416 25
2417 22
2418 18
2419 25
2420 22
2421 16
2422 21
2423 19
2424 17
2425 16
2426 14
2427 23
2429 32
2430 23
2432 32
2433 16
2434 19
2435 18
2436 25
2437 22
2438 18
2439 25
2440 22
2441 16
2442 21
2443 19
2444 17
2445 16
2446 14
2447 23
2449 32
2450 23
2452 32
2453 16
2454 21
2455 19
2456 18
2457 25
2458 22
2459 18
2460 25
2461 22
2462 16
2463 21
2464 19
2465 17
2466 16
2467 19
2468 28
2469 24
2470 19
2471 28
2472 24
2473 15
2474 18
2475 17
2476 17
2477 22
2478 20
2479 22
2480 20
2481 15
2482 18
2483 17
2484 23
2486 32
2487 23
2489 16
2490 21
2491 19
2492 18
2493 25
2494 22
2495 18
2496 22
2497 16
2498 21
2499 19
2500 17
2501 16
2502 5
2503 8
2504 17
2505 26
2506 17
2507 34
2508 26
2509 10
2510 15
2511 13
2512 12
2513 19
2514 16
2515 12
2516 19
2517 16
2518 10
2519 15
2520 13
2521 11
2522 10
2523 8
2524 17
2525 34
2526 26
2527 17
2528 34
2529 26
2530 10
2531 15
2532 13
2533 12
2534 19
2535 16
2536 12
2537 19
2538 16
2539 10
2540 15
2541 13
2542 11
2543 10
2544 13
2545 22
2546 18
2547 13
2548 22
2549 18
2550 9
2551 12
2552 11
2553 16
2554 14
2555 11
2556 16
2557 14
2558 9
2559 12
2560 11
2561 8
2562 17
2563 34
2564 26
2565 17
2566 34
2567 26
2568 10
2569 15
2570 13
2571 12
2572 19
2573 16
2574 12
2575 19
2576 16
2577 10
2578 15
2579 13
2580 11
2581 10
2582 8
2583 17
2584 34
2585 26
2586 17
2587 34
2588 26
2589 10
2590 15
2591 13
2592 12
2593 19
2594 16
2595 12
2596 19
2597 16
2598 10
2599 15
2600 13
2601 10
2602 8
2603 17
2604 34
2605 26
2606 17
2607 34
2608 26
2609 10
2610 15
2611 13
2612 12
2613 19
2614 16
2615 12
2616 19
2617 16
2618 10
2619 15
2620 13
2621 11
2622 10
2623 13
2624 22
2625 18
2626 13
2627 22
2628 18
2629 9
2630 12
2631 11
2632 11
2633 16
2634 14
2635 11
2636 16
2637 9
2638 12
2639 11
2640 8
2641 17
2642 34
2643 26
2644 17
2645 34
2646 26
2647 10
2648 15
2649 13
2650 12
2651 19
2652 16
2653 12
2654 19
2655 16
2656 10
2657 15
2658 13
2659 11
2660 10
2661 10
2662 13
2663 22
2664 31
2665 22
2666 39
2667 31
2668 15
2669 20
2670 18
2671 17
2672 24
2673 21
2674 17
2675 24
2676 21
2677 15
2678 20
2679 18
2680 16
2681 15
2682 13
2683 22
2684 39
2685 31
2686 22
2687 39
2688 31
2689 15
2690 20
2691 18
2692 24
2693 21
2694 17
2695 24
2696 15
2697 20
2698 18
2699 16
2700 15
2701 18
2702 27
2703 23
2704 18
2705 27
2706 14
2707 17
2708 16
2709 16
2710 21
2711 19
2712 16
2713 21
2714 19
2715 14
2716 17
2717 16
2718 13
2719 22
2720 39
2721 31
2722 22
2723 39
2724 31
2725 15
2726 20
2727 18
2728 17
2729 24
2730 21
2731 17
2732 24
2733 21
2734 15
2735 20
2736 18
2737 16
2738 15
2739 13
2740 22
2741 39
2742 31
2743 22
2744 39
2745 31
2746 15
2747 20
2748 18
2749 17
2750 24
2751 21
2752 17
2753 24
2754 21
2755 15
2756 20
2757 18
2758 16
2759 15
2760 13
2761 22
2762 39
2763 31
2764 22
2765 39
2766 15
2767 20
2768 18
2769 17
2770 24
2771 21
2772 17
2773 24
2774 21
2775 20
2776 18
2777 16
2778 15
2779 18
2780 27
2781 23
2782 18
2783 27
2784 23
2785 14
2786 17
2787 16
2788 16
2789 21
2790 19
2791 16
2792 21
2793 19
2794 14
2795 17
2796 16
2797 13
2798 22
2799 31
2800 22
2801 39
2802 31
2803 15
2804 20
2805 18
2806 17
2807 24
2808 17
2809 24
2810 21
2811 15
2812 20
2813 18
2814 16
2815 15
2816 8
2817 11
2818 20
2819 37
2820 29
2821 20
2822 37
2823 29
2824 13
2825 18
2826 16
2827 15
2828 22
2829 15
2830 22
2831 19
2832 13
2833 16
2834 14
2835 13
2836 11
2837 20
2838 29
2839 20
2840 37
2841 29
2842 13
2843 18
2844 16
2845 15
2846 22
2847 19
2848 15
2849 22
2850 19
2851 13
2852 18
2853 16
2854 14
2855 13
2856 16
2857 25
2858 21
2859 16
2860 25
2861 21
2862 12
2863 15
2864 14
2865 14
2866 19
2867 17
2868 14
2869 19
2870 17
2871 12
2872 15
2873 14
2874 20
2875 37
2876 29
2877 20
2878 37
2879 29
2880 13
2881 18
2882 16
2883 15
2884 22
2885 19
2886 15
2887 22
2888 19
2889 13
2890 18
2891 16
2892 14
2893 13
2894 11
2895 20
2896 37
2897 29
2898 20
2899 37
2900 29
2901 13
2902 18
2903 16
2904 15
2905 22
2906 19
2907 15
2908 22
2909 19
2910 13
2911 18
2912 16
2913 14
2914 13
2915 11
2916 20
2917 37
2918 29
2919 20
2920 37
2921 29
2922 13
2923 18
2924 15
2925 22
2926 19
2927 15
2928 22
2929 19
2930 13
2931 18
2932 16
2933 14
2934 13
2935 16
2936 25
2937 21
2938 16
2939 25
2940 21
2941 12
2942 15
2943 14
2944 14
2945 19
2946 17
2947 14
2948 17
2949 15
2950 14
2951 11
2952 20
2953 37
2954 29
2955 20
2956 37
2957 29
2958 13
2959 18
2960 16
2961 15
2962 22
2963 19
2964 15
2965 22
2966 19
2967 13
2968 18
2969 16
2970 14
2971 13
2972 6
2973 9
2974 18
2975 35
2976 18
2977 35
2978 27
2979 11
2980 16
2981 14
2982 13
2983 17
2984 20
2985 17
2986 11
2987 16
2988 14
2989 12
2990 11
2991 9
2992 18
2993 35
2994 27
2995 18
2996 35
2997 27
2998 11
2999 16
3000 14
3001 13
3002 20
3003 17
3004 13
3005 20
3006 17
3007 11
3008 16
3009 14
3010 12
3011 11
3012 14
3013 23
3014 19
3015 14
3016 23
3017 19
3018 10
3019 13
3020 12
3021 12
3022 17
3023 15
3024 12
3025 17
3026 15
3027 10
3028 13
3029 12
3030 9
3031 18
3032 35
3033 18
3034 35
3035 27
3036 11
3037 16
3038 14
3039 13
3040 20
3041 17
3042 13
3043 20
3044 17
3045 11
3046 16
3047 14
3048 11
3049 9
3050 18
3051 35
3052 27
3053 18
3054 35
3055 27
3056 11
3057 16
3058 14
3059 13
3060 20
3061 13
3062 20
3063 17
3064 11
3065 16
3066 14
3067 12
3068 11
3069 9
3070 18
3071 35
3072 27
3073 18
3074 35
3075 27
3076 11
3077 16
3078 14
3079 13
3080 20
3081 17
3082 13
3083 20
3084 17
3085 11
3086 16
3087 14
3088 12
3089 11
3090 14
3091 23
3092 19
3093 14
3094 23
3095 19
3096 10
3097 13
3098 12
3099 12
3100 17
3101 15
3102 12
3103 17
3104 15
3105 10
3106 13
3107 12
3108 9
3109 18
3110 35
3111 27
3112 18
3113 35
3114 27
3115 11
3116 16
3117 14
3118 20
3119 17
3120 13
3121 20
3122 17
3123 11
3124 14
3125 12
3126 11
3127 5
3128 8
3129 17
3130 34
3131 26
3132 17
3133 34
3134 26
3135 10
3136 15
3137 13
3138 12
3139 19
3140 16
3141 12
3142 19
3143 16
3144 10
3145 15
3146 13
3147 11
3148 10
3149 8
3150 17
3151 34
3152 26
3153 17
3154 34
3155 26
3156 15
3157 13
3158 12
3159 19
3160 16
3161 12
3162 19
3163 16
3164 10
3165 15
3166 13
3167 11
3168 10
3169 13
3170 22
3171 18
3172 13
3173 22
3174 18
3175 9
3176 12
3177 11
3178 11
3179 16
3180 14
3181 11
3182 16
3183 14
3184 9
3185 12
3186 11
3187 8
3188 17
3189 34
3190 26
3191 17
3192 26
3193 10
3194 15
3195 13
3196 12
3197 19
3198 16
3199 12
3200 19
3201 16
3202 10
3203 15
3204 13
3205 11
3206 10
3207 8
3208 17
3209 34
3210 26
3211 17
3212 34
3213 10
3214 15
3215 13
3216 12
3217 19
3218 16
3219 12
3220 19
3221 16
3222 10
3223 15
3224 13
3225 11
3226 10
3227 8
3228 17
3229 34
3230 26
3231 17
3232 34
3233 26
3234 10
3235 15
3236 13
3237 12
3238 19
3239 16
3240 12
3241 19
3242 16
3243 10
3244 15
3245 13
3246 11
3247 10
3248 13
3249 22
3250 18
3251 13
3252 22
3253 18
3254 9
3255 12
3256 11
3257 11
3258 16
3259 14
3260 11
3261 16
3262 14
3263 12
3264 11
3265 8
3266 17
3267 34
3268 26
3269 17
3270 34
3271 26
3272 10
3273 15
3274 13
3275 12
3276 19
3277 16
3278 12
3279 19
3280 16
3281 10
3282 15
3283 13
3284 11
3285 10
3286 3
3287 6
3288 15
3289 32
3290 24
3291 15
3292 32
3293 24
3294 8
3295 13
3296 11
3297 10
3298 17
3299 14
3300 10
3301 17
3302 14
3303 8
3304 13
3305 11
3306 9
3307 8
3308 6
3309 15
3310 32
3311 24
3312 15
3313 32
3314 24
3315 8
3316 13
3317 11
3318 17
3319 14
3320 10
3321 17
3322 14
3323 8
3324 11
3325 9
3326 8
3327 11
3328 20
3329 16
3330 11
3331 20
3332 16
3333 7
3334 10
3335 9
3336 9
3337 14
3338 12
3339 9
3340 12
3341 7
3342 10
3343 6
3344 15
3345 32
3346 24
3347 15
3348 32
3349 24
3350 8
3351 13
3352 11
3353 10
3354 17
3355 14
3356 10
3357 17
3358 14
3359 8
3360 13
3361 11
3362 9
3363 8
3364 6
3365 15
3366 32
3367 24
3368 15
3369 32
3370 24
3371 8
3372 13
3373 11
3374 10
3375 17
3376 14
3377 10
3378 17
3379 14
3380 8
3381 13
3382 11
3383 9
3384 8
3385 6
3386 15
3387 32
3388 24
3389 15
3390 32
3391 24
3392 8
3393 13
3394 11
3395 10
3396 17
3397 14
3398 10
3399 17
3400 14
3401 8
3402 13
3403 11
3404 9
3405 8
3406 11
3407 20
3408 16
3409 11
3410 20
3411 16
3412 7
3413 10
3414 9
3415 14
3416 12
3417 14
3418 12
3419 7
3420 10
3421 9
3422 6
3423 15
3424 32
3425 24
3426 15
3427 32
3428 24
3429 8
3430 13
3431 11
3432 17
3433 14
3434 10
3435 17
3436 14
3437 8
3438 13
3439 11
3440 9
3441 8
3442 12
3443 15
3445 33
3446 24
3447 17
3448 22
3449 20
3450 19
3451 26
3452 23
3453 19
3454 26
3455 23
3456 22
3457 20
3458 18
3459 15
3460 24
3462 33
3463 24
3465 33
3466 17
3467 22
3468 19
3469 26
3470 23
3471 19
3472 26
3473 23
3474 17
3475 22
3476 20
3477 18
3478 17
3479 20
3480 29
3481 25
3482 29
3483 25
3484 16
3485 19
3486 18
3487 18
3488 23
3489 21
3490 18
3491 23
3492 21
3493 16
3494 19
3495 18
3496 15
3497 24
3499 33
3500 24
3502 33
3503 17
3504 22
3505 20
3506 19
3507 26
3508 23
3509 19
3510 26
3511 23
3512 17
3513 22
3514 20
3515 18
3516 17
3517 15
3518 24
3520 33
3521 24
3523 33
3524 17
3525 20
3526 19
3527 26
3528 23
3529 19
3530 26
3531 23
3532 17
3533 22
3534 18
3535 17
3536 15
3537 24
3539 33
3540 24
3542 33
3543 17
3544 22
3545 20
3546 19
3547 26
3548 23
3549 19
3550 23
3551 17
3552 22
3553 20
3554 18
3555 17
3556 20
3557 29
3558 25
3559 20
3560 25
3561 16
3562 19
3563 18
3564 18
3565 23
3566 21
3567 18
3568 23
3569 21
3570 16
3571 19
3572 18
3573 15
3574 24
3576 33
3577 24
3579 33
3580 17
3581 22
3582 20
3583 19
3584 26
3585 23
3586 19
3587 26
3588 23
3589 17
3590 22
3591 20
3592 18
3593 17
3594 29
3595 32
3601 34
3602 39
3603 37
3604 36
3607 36
3610 34
3611 39
3612 37
3613 35
3614 34
3615 32
3620 34
3621 39
3622 37
3623 36
3626 36
3629 34
3630 39
3631 37
3632 35
3633 34
3634 37
3637 37
3640 33
3641 36
3642 35
3643 35
3645 38
3647 38
3648 33
3649 36
3650 35
3651 32
3657 34
3658 39
3659 37
3660 36
3663 36
3666 34
3667 39
3668 37
3669 35
3670 34
3671 32
3678 34
3679 39
3680 37
3681 36
3684 36
3686 34
3687 39
3688 37
3689 35
3690 34
3691 32
3698 34
3699 39
3700 37
3701 36
3704 36
3707 34
3708 39
3709 37
3710 35
3711 34
3714 37
3717 33
3718 36
3719 35
3720 35
3722 38
3723 35
3725 38
3726 36
3727 35
3728 32
3735 34
3736 39
3737 37
3738 36
3741 36
3743 34
3744 39
3745 37
3746 35
3747 34
3748 21
3749 24
3750 33
3753 33
3756 26
3757 31
3758 29
3759 28
3760 32
3761 28
3762 35
3763 32
3764 26
3765 31
3766 29
3767 27
3768 26
3769 24
3770 33
3773 33
3776 26
3777 31
3778 29
3779 28
3780 35
3781 32
3782 28
3783 35
3784 32
3785 26
3786 31
3787 29
3788 27
3789 26
3790 29
3791 38
3792 34
3793 29
3794 38
3795 25
3796 28
3797 27
3798 27
3799 32
3800 30
3801 27
3802 32
3803 30
3804 25
3805 28
3806 27
3807 24
3808 33
3813 26
3814 31
3815 29
3816 28
3817 35
3818 32
3819 28
3820 35
3821 32
3822 26
3823 31
3824 29
3825 27
3826 26
3827 24
3828 33
3831 33
3834 26
3835 31
3836 29
3837 35
3838 32
3839 28
3840 35
3841 32
3842 26
3843 31
3844 29
3845 27
3846 26
3847 24
3848 33
3850 33
3853 26
3854 31
3855 29
3856 28
3857 35
3858 32
3859 28
3860 35
3861 32
3862 26
3863 31
3864 29
3865 27
3866 26
3867 38
3868 34
3869 29
3870 38
3871 34
3872 25
3873 28
3874 27
3875 32
3876 30
3877 27
3878 32
3879 30
3880 25
3881 28
3882 27
3883 24
3884 33
3887 33
3890 26
3891 31
3892 29
3893 28
3894 35
3895 32
3896 28
3897 35
3898 32
3899 26
3900 31
3901 29
3902 27
3903 26
3904 12
3905 15
3906 24
3908 33
3909 24
3911 33
3912 17
3913 22
3914 20
3915 19
3916 26
3917 23
3918 19
3919 26
3920 23
3921 17
3922 22
3923 20
3924 18
3925 17
3926 15
3927 24
3929 33
3930 24
3932 33
3933 17
3934 22
3935 20
3936 19
3937 26
3938 23
3939 19
3940 26
3941 23
3942 17
3943 22
3944 20
3945 18
3946 17
3947 20
3948 29
3949 25
3950 20
3951 29
3952 25
3953 16
3954 19
3955 18
3956 23
3957 21
3958 18
3959 23
3960 21
3961 16
3962 19
3963 18
3964 15
3965 24
3967 33
3968 24
3970 33
3971 17
3972 22
3973 20
3974 26
3975 23
3976 19
3977 26
3978 23
3979 17
3980 22
3981 20
3982 18
3983 17
3984 15
3985 24
3987 33
3988 24
3990 33
3991 17
3992 22
3993 20
3994 19
3995 26
3996 23
3997 19
3998 26
3999 23
4000 17
4001 22
4002 18
4003 17
4004 15
4005 24
4007 24
4009 33
4010 22
4011 19
4012 26
4013 23
4014 19
4015 26
4016 23
4017 17
4018 22
4019 20
4020 18
4021 17
4022 20
4023 29
4024 25
4025 20
4026 29
4027 25
4028 16
4029 19
4030 18
4031 18
4032 23
4033 21
4034 18
4035 23
4036 21
4037 16
4038 19
4039 18
4040 15
4041 24
4043 33
4044 24
4046 33
4047 17
4048 22
4049 20
4050 19
4051 26
4052 23
4053 19
4054 26
4055 23
4056 17
4057 22
4058 20
4059 18
4060 17
4061 29
4062 32
4069 34
4070 39
4071 37
4072 36
4075 36
4078 34
4079 39
4080 37
4081 35
4082 34
4083 32
4090 34
4091 39
4092 36
4095 36
4098 34
4099 39
4100 37
4101 35
4102 34
4103 37
4106 37
4109 33
4110 36
4111 35
4112 35
4114 38
4115 35
4117 38
4118 36
4119 35
4120 32
4126 39
4127 37
4128 36
4131 36
4134 34
4135 39
4136 37
4137 35
4138 34
4139 32
4145 34
4146 39
4147 37
4148 36
4151 36
4154 34
4155 39
4156 37
4157 35
4158 34
4159 32
4166 34
4167 39
4168 37
4169 36
4171 36
4174 34
4175 39
4176 37
4177 35
4178 34
4179 37
4182 37
4185 33
4186 36
4187 35
4188 35
4190 38
4191 35
4193 38
4194 33
4195 36
4196 35
4197 32
4203 34
4204 39
4205 37
4206 36
4209 36
4212 39
4213 37
4214 35
4215 34
4216 21
4217 24
4218 33
4221 33
4224 26
4225 31
4226 29
4227 28
4228 35
4229 32
4230 28
4231 35
4232 32
4233 26
4234 31
4235 29
4236 27
4237 24
4238 33
4241 33
4244 26
4245 31
4246 29
4247 28
4248 35
4249 32
4250 28
4251 35
4252 32
4253 26
4254 31
4255 29
4256 27
4257 26
4258 29
4259 38
4260 34
4261 29
4262 38
4263 34
4264 25
4265 28
4266 27
4267 27
4268 32
4269 30
4270 27
4271 32
4272 30
4273 25
4274 28
4275 27
4276 24
4277 33
4280 33
4283 26
4284 31
4285 29
4286 28
4287 35
4288 32
4289 28
4290 35
4291 32
4292 26
4293 29
4294 27
4295 26
4296 24
4297 33
4300 33
4303 26
4304 31
4305 29
4306 28
4307 35
4308 32
4309 28
4310 32
4311 26
4312 31
4313 29
4314 26
4315 24
4316 33
4318 33
4321 26
4322 31
4323 28
4324 35
4325 32
4326 28
4327 35
4328 32
4329 26
4330 31
4331 29
4332 27
4333 26
4334 29
4335 38
4336 34
4337 29
4338 38
4339 34
4340 25
4341 28
4342 27
4343 27
4344 32
4345 30
4346 27
4347 32
4348 30
4349 25
4350 27
4351 24
4352 33
4355 33
4357 26
4358 31
4359 29
4360 28
4361 35
4362 32
4363 28
4364 32
4365 26
4366 31
4367 29
4368 27
4369 26
4370 5
4371 8
4372 17
4373 34
4374 26
4375 17
4376 34
4377 26
4378 10
4379 15
4380 13
4381 12
4382 19
4383 16
4384 19
4385 16
4386 10
4387 15
4388 13
4389 11
4390 10
4391 8
4392 17
4393 34
4394 26
4395 17
4396 34
4397 26
4398 10
4399 15
4400 13
4401 12
4402 19
4403 16
4404 12
4405 19
4406 16
4407 10
4408 15
4409 13
4410 11
4411 10
4412 13
4413 22
4414 18
4415 13
4416 22
4417 18
4418 9
4419 12
4420 11
4421 11
4422 16
4423 14
4424 11
4425 16
4426 14
4427 9
4428 12
4429 11
4430 8
4431 17
4432 34
4433 26
4434 17
4435 34
4436 26
4437 10
4438 15
4439 13
4440 12
4441 19
4442 16
4443 12
4444 19
4445 10
4446 15
4447 13
4448 11
4449 10
4450 8
4451 17
4452 34
4453 26
4454 17
4455 34
4456 26
4457 10
4458 15
4459 12
4460 19
4461 16
4462 12
4463 19
4464 16
4465 10
4466 15
4467 13
4468 11
4469 10
4470 8
4471 17
4472 34
4473 26
4474 17
4475 34
4476 26
4477 10
4478 15
4479 13
4480 12
4481 19
4482 16
4483 12
4484 19
4485 16
4486 10
4487 15
4488 13
4489 11
4490 10
4491 13
4492 22
4493 18
4494 22
4495 18
4496 9
4497 12
4498 11
4499 11
4500 16
4501 14
4502 11
4503 16
4504 14
4505 9
4506 12
4507 11
4508 8
4509 17
4510 34
4511 26
4512 17
4513 26
4514 10
4515 15
4516 13
4517 12
4518 19
4519 16
4520 12
4521 19
4522 16
4523 10
4524 15
4525 13
4526 11
4527 10
4528 10
4529 13
4530 22
4531 31
4532 22
4533 39
4534 31
4535 15
4536 20
4537 18
4538 17
4539 24
4540 21
4541 17
4542 24
4543 21
4544 15
4545 20
4546 18
4547 16
4548 15
4549 13
4550 22
4551 39
4552 31
4553 39
4554 31
4555 15
4556 20
4557 18
4558 17
4559 24
4560 21
4561 17
4562 24
4563 21
4564 15
4565 20
4566 18
4567 16
4568 15
4569 18
4570 27
4571 23
4572 18
4573 27
4574 23
4575 14
4576 17
4577 16
4578 16
4579 21
4580 19
4581 16
4582 21
4583 19
4584 14
4585 17
4586 16
4587 13
4588 22
4589 39
4590 22
4591 39
4592 31
4593 15
4594 20
4595 18
4596 17
4597 24
4598 21
4599 24
4600 21
4601 15
4602 20
4603 18
4604 16
4605 15
4606 13
4607 22
4608 39
4609 31
4610 22
4611 39
4612 31
4613 15
4614 20
4615 18
4616 17
4617 24
4618 21
4619 17
4620 24
4621 21
4622 15
4623 20
4624 18
4625 16
4626 13
4627 22
4628 39
4629 31
4630 22
4631 39
4632 31
4633 15
4634 20
4635 18
4636 17
4637 24
4638 21
4639 17
4640 24
4641 21
4642 15
4643 20
4644 18
4645 16
4646 15
4647 18
4648 27
4649 23
4650 18
4651 27
4652 23
4653 14
4654 17
4655 16
4656 16
4657 21
4658 19
4659 16
4660 21
4661 19
4662 14
4663 17
4664 16
4665 22
4666 39
4667 31
4668 22
4669 39
4670 31
4671 15
4672 20
4673 18
4674 17
4675 24
4676 21
4677 17
4678 24
4679 21
4680 15
4681 20
4682 18
4683 16
4684 15
4685 8
4686 11
4687 20
4688 37
4689 29
4690 20
4691 37
4692 29
4693 13
4694 18
4695 16
4696 15
4697 22
4698 19
4699 15
4700 22
4701 19
4702 13
4703 18
4704 16
4705 14
4706 13
4707 11
4708 20
4709 37
4710 29
4711 20
4712 37
4713 29
4714 13
4715 18
4716 16
4717 15
4718 22
4719 19
4720 15
4721 22
4722 19
4723 13
4724 18
4725 16
4726 14
4727 13
4728 16
4729 25
4730 21
4731 25
4732 21
4733 12
4734 15
4735 14
4736 14
4737 19
4738 17
4739 14
4740 19
4741 17
4742 12
4743 15
4744 14
4745 11
4746 20
4747 37
4748 29
4749 20
4750 37
4751 29
4752 13
4753 16
4754 15
4755 22
4756 19
4757 15
4758 22
4759 19
4760 13
4761 18
4762 16
4763 14
4764 11
4765 20
4766 37
4767 29
4768 20
4769 37
4770 29
4771 13
4772 18
4773 16
4774 15
4775 22
4776 19
4777 15
4778 22
4779 19
4780 13
4781 18
4782 16
4783 14
4784 13
4785 11
4786 20
4787 37
4788 29
4789 20
4790 37
4791 29
4792 13
4793 18
4794 16
4795 15
4796 22
4797 19
4798 15
4799 22
4800 19
4801 13
4802 18
4803 16
4804 13
4805 16
4806 25
4807 21
4808 16
4809 25
4810 21
4811 12
4812 15
4813 14
4814 14
4815 19
4816 17
4817 14
4818 19
4819 17
4820 12
4821 15
4822 11
4823 20
4824 37
4825 29
4826 20
4827 37
4828 29
4829 13
4830 18
4831 16
4832 15
4833 22
4834 19
4835 15
4836 22
4837 19
4838 13
4839 18
4840 16
4841 14
4842 13
4843 7
4844 10
4845 19
4846 36
4847 28
4848 19
4849 28
4850 12
4851 17
4852 15
4853 14
4854 21
4855 18
4856 14
4857 21
4858 18
4859 12
4860 17
4861 15
4862 12
4863 10
4864 19
4865 36
4866 28
4867 19
4868 36
4869 28
4870 12
4871 17
4872 15
4873 14
4874 21
4875 18
4876 14
4877 21
4878 18
4879 12
4880 17
4881 15
4882 13
4883 12
4884 15
4885 24
4886 20
4887 15
4888 24
4889 20
4890 11
4891 14
4892 13
4893 13
4894 18
4895 16
4896 13
4897 18
4898 16
4899 11
4900 14
4901 13
4902 19
4903 36
4904 28
4905 19
4906 36
4907 28
4908 12
4909 17
4910 14
4911 21
4912 18
4913 14
4914 21
4915 18
4916 12
4917 17
4918 15
4919 13
4920 12
4921 10
4922 19
4923 36
4924 28
4925 19
4926 36
4927 28
4928 12
4929 17
4930 15
4931 14
4932 21
4933 18
4934 14
4935 18
4936 12
4937 17
4938 15
4939 13
4940 12
4941 10
4942 19
4943 36
4944 28
4945 19
4946 28
4947 12
4948 17
4949 15
4950 14
4951 21
4952 18
4953 14
4954 21
4955 18
4956 12
4957 17
4958 15
4959 13
4960 12
4961 15
4962 24
4963 20
4964 15
4965 24
4966 20
4967 11
4968 14
4969 13
4970 13
4971 18
4972 16
4973 13
4974 16
4975 14
4976 13
4977 10
4978 19
4979 36
4980 28
4981 19
4982 36
4983 28
4984 12
4985 17
4986 15
4987 14
4988 21
4989 18
4990 14
4991 21
4992 18
4993 12
4994 17
4995 15
4996 13
4997 12
4998 14
4999 17
5000 26
5002 35
5003 26
5005 35
5006 19
5007 24
5008 22
5009 21
5010 28
5011 25
5012 21
5013 28
5014 25
5015 19
5016 24
5017 22
5018 20
5019 19
5020 17
5021 26
5023 35
5024 26
5026 35
5027 19
5028 24
5029 22
5030 21
5031 28
5032 25
5033 21
5034 25
5035 19
5036 22
5037 20
5038 19
5039 22
5040 31
5041 27
5042 22
5043 31
5044 27
5045 18
5046 21
5047 20
5048 20
5049 25
5050 23
5051 20
5052 23
5053 18
5054 21
5055 20
5056 17
5057 26
5059 35
5060 26
5062 35
5063 24
5064 22
5065 21
5066 28
5067 25
5068 21
5069 28
5070 25
5071 19
5072 24
5073 22
5074 20
5075 19
5076 17
5077 26
5079 35
5080 26
5082 35
5083 19
5084 24
5085 22
5086 25
5087 21
5088 28
5089 25
5090 19
5091 24
5092 22
5093 20
5094 19
5095 17
5096 26
5098 35
5099 26
5101 35
5102 24
5103 22
5104 21
5105 28
5106 25
5107 21
5108 28
5109 25
5110 19
5111 24
5112 22
5113 20
5114 19
5115 22
5116 31
5117 27
5118 22
5119 31
5120 27
5121 18
5122 21
5123 20
5124 20
5125 25
5126 23
5127 20
5128 25
5129 23
5130 18
5131 21
5132 20
5133 26
5135 35
5136 26
5138 35
5139 19
5140 24
5141 22
5142 21
5143 28
5144 25
5145 21
5146 28
5147 25
5148 19
5149 24
5150 20
5151 11
5152 14
5153 23
5155 32
5157 16
5158 21
5159 19
5160 18
5161 25
5162 22
5163 18
5164 25
5165 22
5166 16
5167 21
5168 19
5169 17
5170 16
5171 14
5172 23
5174 32
5175 23
5177 32
5178 16
5179 21
5180 19
5181 18
5182 25
5183 22
5184 25
5185 22
5186 16
5187 21
5188 19
5189 17
5190 16
5191 19
5192 28
5193 24
5194 19
5195 28
5196 24
5197 15
5198 18
5199 17
5200 17
5201 22
5202 20
5203 17
5204 22
5205 20
5206 15
5207 18
5208 17
5209 14
5210 23
5212 32
5213 23
5215 32
5216 16
5217 21
5218 19
5219 18
5220 25
5221 22
5222 18
5223 25
5224 22
5225 16
5226 21
5227 19
5228 17
5229 16
5230 14
5231 23
5233 32
5234 23
5236 32
5237 16
5238 21
5239 19
5240 18
5241 25
5242 22
5243 18
5244 25
5245 22
5246 16
5247 21
5248 19
5249 17
5250 16
5251 14
5252 23
5254 32
5255 23
5257 32
5258 16
5259 21
5260 19
5261 25
5262 22
5263 18
5264 25
5265 22
5266 16
5267 21
5268 19
5269 17
5270 16
5271 19
5272 24
5273 19
5274 28
5275 24
5276 15
5277 18
5278 17
5279 17
5280 22
5281 20
5282 22
5283 20
5284 15
5285 18
5286 17
5287 14
5288 23
5290 32
5291 23
5293 32
5294 21
5295 19
5296 18
5297 25
5298 18
5299 25
5300 22
5301 16
5302 21
5303 19
5304 17
5305 16
5306 10
5307 19
5308 36
5309 28
5310 19
5311 36
5312 28
5313 12
5314 17
5315 15
5316 14
5317 21
5318 18
5319 14
5320 21
5321 18
5322 12
5323 17
5324 15
5325 13
5326 12
5327 10
5328 19
5329 36
5330 28
5331 19
5332 36
5333 28
5334 12
5335 15
5336 14
5337 21
5338 18
5339 14
5340 21
5341 18
5342 17
5343 15
5344 13
5345 12
5346 15
5347 24
5348 20
5349 15
5350 24
5351 20
5352 11
5353 14
5354 13
5355 13
5356 18
5357 16
5358 13
5359 18
5360 16
5361 11
5362 10
5363 36
5364 28
5365 19
5366 36
5367 28
5368 12
5369 17
5370 15
5371 14
5372 21
5373 18
5374 14
5375 18
5376 12
5377 17
5378 15
5379 13
5380 12
5381 10
5382 19
5383 36
5384 28
5385 19
5386 36
5387 28
5388 12
5389 17
5390 15
5391 14
5392 21
5393 18
5394 14
5395 21
5396 18
5397 12
5398 17
5399 15
5400 13
5401 12
5402 10
5403 19
5404 36
5405 28
5406 36
5407 28
5408 12
5409 15
5410 14
5411 21
5412 18
5413 14
5414 18
5415 12
5416 17
5417 15
5418 13
5419 12
5420 15
5421 24
5422 20
5423 15
5424 24
5425 20
5426 11
5427 14
5428 13
5429 13
5430 18
5431 16
5432 13
5433 18
5434 16
5435 11
5436 14
5437 13
5438 10
5439 19
5440 36
5441 28
5442 19
5443 28
5444 12
5445 17
5446 15
5447 14
5448 21
5449 18
5450 14
5451 21
5452 18
5453 12
5454 17
5455 13
5456 12
5457 14
5458 17
5459 26
5461 35
5462 26
5464 35
5465 19
5466 24
5467 22
5468 21
5469 28
5470 25
5471 21
5472 28
5473 25
5474 19
5475 24
5476 22
5477 20
5478 19
5479 17
5480 26
5482 35
5484 35
5485 19
5486 24
5487 22
5488 21
5489 28
5490 25
5491 21
5492 28
5493 25
5494 24
5495 22
5496 20
5497 19
5498 22
5499 31
5500 27
5501 22
5502 31
5503 27
5504 18
5505 21
5506 20
5507 20
5508 25
5509 23
5510 20
5511 25
5512 23
5513 18
5514 21
5515 20
5516 26
5518 35
5519 26
5521 35
5522 19
5523 24
5524 22
5525 21
5526 28
5527 25
5528 21
5529 28
5530 25
5531 19
5532 24
5533 22
5534 20
5535 19
5536 17
5537 26
5539 35
5540 26
5542 35
5543 19
5544 24
5545 22
5546 21
5547 28
5548 25
5549 21
5550 28
5551 25
5552 19
5553 24
5554 22
5555 20
5556 19
5557 17
5558 26
5560 35
5561 26
5563 35
5564 19
5565 22
5566 21
5567 28
5568 25
5569 21
5570 28
5571 25
5572 19
5573 24
5574 22
5575 20
5576 19
5577 22
5578 31
5579 27
5580 22
5581 31
5582 27
5583 18
5584 21
5585 20
5586 20
5587 25
5588 20
5589 25
5590 23
5591 18
5592 21
5593 20
5594 17
5595 26
5597 35
5598 26
5600 35
5601 19
5602 24
5603 22
5604 21
5605 25
5606 25
5607 19
5608 24
5609 22
5610 20
5611 19
5612 11
5613 14
5614 23
5616 32
5617 23
5619 32
5620 16
5621 21
5622 19
5623 18
5624 25
5625 22
5626 18
5627 25
5628 22
5629 16
5630 21
5631 19
5632 17
5633 16
5634 14
5635 23
5637 32
5638 23
5640 16
5641 21
5642 19
5643 18
5644 25
5645 22
5646 18
5647 25
5648 22
5649 16
5650 21
5651 19
5652 17
5653 16
5654 19
5655 28
5656 24
5657 19
5658 28
5659 24
5660 15
5661 18
5662 17
5663 17
5664 22
5665 20
5666 17
5667 22
5668 20
5669 15
5670 18
5671 17
5672 14
5673 23
5675 32
5677 32
5678 16
5679 21
5680 19
5681 18
5682 25
5683 22
5684 18
5685 25
5686 22
5687 16
5688 21
5689 19
5690 17
5691 16
5692 14
5693 23
5695 32
5696 23
5698 32
5699 16
5700 21
5701 19
5702 18
5703 22
5704 18
5705 25
5706 22
5707 16
5708 21
5709 19
5710 17
5711 16
5712 14
5713 23
5715 32
5716 23
5718 32
5719 16
5720 21
5721 19
5722 18
5723 25
5724 22
5725 18
5726 25
5727 22
5728 16
5729 21
5730 19
5731 17
5732 28
5733 24
5734 28
5735 24
5736 15
5737 18
5738 17
5739 17
5740 22
5741 20
5742 17
5743 22
5744 20
5745 15
5746 18
5747 17
5748 23
5750 32
5751 23
5753 32
5754 16
5755 21
5756 19
5757 18
5758 25
5759 22
5760 18
5761 25
5762 22
5763 16
5764 21
5765 19
5766 17
5767 16
5768 5
5769 8
5770 17
5771 34
5772 26
5773 17
5774 34
5775 26
5776 10
5777 15
5778 13
5779 12
5780 19
5781 16
5782 12
5783 19
5784 16
5785 10
5786 15
5787 11
5788 10
5789 8
5790 17
5791 34
5792 26
5793 17
5794 26
5795 10
5796 15
5797 13
5798 12
5799 19
5800 16
5801 12
5802 19
5803 16
5804 10
5805 15
5806 13
5807 11
5808 10
5809 13
5810 22
5811 18
5812 13
5813 22
5814 18
5815 9
5816 12
5817 11
5818 11
5819 16
5820 14
5821 11
5822 16
5823 14
5824 9
5825 12
5826 11
5827 8
5828 17
5829 34
5830 26
5831 17
5832 34
5833 26
5834 10
5835 15
5836 13
5837 12
5838 19
5839 16
5840 19
5841 16
5842 10
5843 15
5844 13
5845 11
5846 10
5847 8
5848 26
5849 17
5850 34
5851 26
5852 10
5853 15
5854 13
5855 12
5856 19
5857 16
5858 12
5859 19
5860 16
5861 10
5862 15
5863 13
5864 11
5865 10
5866 8
5867 17
5868 34
5869 26
5870 17
5871 34
5872 26
5873 10
5874 15
5875 19
5876 16
5877 12
5878 19
5879 10
5880 15
5881 13
5882 11
5883 10
5884 13
5885 22
5886 18
5887 13
5888 22
5889 18
5890 9
5891 12
5892 11
5893 11
5894 16
5895 14
5896 16
5897 14
5898 9
5899 12
5900 11
5901 8
5902 17
5903 34
5904 26
5905 17
5906 34
5907 26
5908 10
5909 15
5910 13
5911 12
5912 19
5913 16
5914 12
5915 19
5916 16
5917 10
5918 15
5919 13
5920 11
5921 10
5922 10
5923 13
5924 22
5925 39
5926 31
5927 22
5928 39
5929 31
5930 15
5931 20
5932 18
5933 17
5934 24
5935 21
5936 17
5937 24
5938 21
5939 15
5940 20
5941 18
5942 16
5943 15
5944 13
5945 22
5946 39
5947 31
5948 22
5949 39
5950 31
5951 15
5952 20
5953 18
5954 17
5955 24
5956 21
5957 24
5958 21
5959 15
5960 20
5961 18
5962 16
5963 15
5964 18
5965 27
5966 23
5967 18
5968 27
5969 14
5970 17
5971 16
5972 21
5973 19
5974 16
5975 21
5976 19
5977 14
5978 17
5979 16
5980 13
5981 22
5982 39
5983 31
5984 22
5985 39
5986 31
5987 15
5988 20
5989 18
5990 17
5991 24
5992 21
5993 17
5994 21
5995 15
5996 20
5997 18
5998 16
5999 15
6000 13
6001 22
6002 39
6003 31
6004 22
6005 39
6006 31
6007 15
6008 20
6009 18
6010 17
6011 24
6012 21
6013 17
6014 24
6015 21
6016 15
6017 20
6018 18
6019 16
6020 15
6021 22
6022 39
6023 31
6024 22
6025 39
6026 15
6027 20
6028 18
6029 17
6030 24
6031 21
6032 17
6033 24
6034 21
6035 15
6036 20
6037 18
6038 16
6039 15
6040 18
6041 27
6042 18
6043 27
6044 23
6045 14
6046 17
6047 16
6048 16
6049 21
6050 19
6051 16
6052 21
6053 19
6054 14
6055 17
6056 16
6057 13
6058 22
6059 39
6060 31
6061 22
6062 39
6063 31
6064 15
6065 18
6066 17
6067 24
6068 21
6069 17
6070 24
6071 21
6072 15
6073 20
6074 18
6075 16
6076 15
6077 8
6078 11
6079 20
6080 37
6081 29
6082 20
6083 37
6084 29
6085 13
6086 18
6087 16
6088 15
6089 22
6090 19
6091 15
6092 22
6093 19
6094 13
6095 18
6096 16
6097 14
6098 13
6099 11
6100 37
6101 29
6102 20
6103 37
6104 29
6105 13
6106 18
6107 16
6108 15
6109 22
6110 19
6111 15
6112 22
6113 19
6114 13
6115 18
6116 16
6117 14
6118 13
6119 16
6120 25
6121 21
6122 16
6123 25
6124 21
6125 12
6126 15
6127 14
6128 14
6129 19
6130 17
6131 14
6132 19
6133 17
6134 12
6135 15
6136 14
6137 11
6138 20
6139 37
6140 29
6141 20
6142 37
6143 29
6144 13
6145 18
6146 16
6147 15
6148 22
6149 19
6150 15
6151 22
6152 19
6153 13
6154 18
6155 16
6156 14
6157 13
6158 11
6159 20
6160 37
6161 29
6162 20
6163 37
6164 29
6165 13
6166 18
6167 16
6168 15
6169 22
6170 19
6171 15
6172 22
6173 19
6174 13
6175 18
6176 16
6177 14
6178 13
6179 11
6180 20
6181 37
6182 29
6183 20
6184 37
6185 29
6186 13
6187 18
6188 16
6189 15
6190 22
6191 19
6192 15
6193 22
6194 19
6195 13
6196 18
6197 16
6198 14
6199 13
6200 16
6201 25
6202 21
6203 16
6204 25
6205 21
6206 15
6207 14
6208 14
6209 19
6210 17
6211 14
6212 19
6213 17
6214 12
6215 15
6216 14
6217 11
6218 20
6219 37
6220 29
6221 20
6222 37
6223 29
6224 13
6225 18
6226 16
6227 15
6228 22
6229 19
6230 15
6231 22
6232 19
6233 13
6234 18
6235 16
6236 14
6237 13
6238 6
6239 9
6240 18
6241 35
6242 27
6243 18
6244 35
6245 27
6246 11
6247 14
6248 13
6249 20
6250 13
6251 20
6252 17
6253 16
6254 14
6255 12
6256 11
6257 9
6258 18
6259 35
6260 27
6261 18
6262 35
6263 27
6264 11
6265 16
6266 14
6267 13
6268 20
6269 17
6270 13
6271 20
6272 17
6273 11
6274 16
6275 14
6276 12
6277 11
6278 14
6279 23
6280 14
6281 19
6282 10
6283 12
6284 12
6285 17
6286 15
6287 12
6288 17
6289 15
6290 10
6291 13
6292 9
6293 18
6294 35
6295 27
6296 18
6297 35
6298 27
6299 11
6300 16
6301 14
6302 13
6303 20
6304 13
6305 20
6306 17
6307 11
6308 16
6309 14
6310 12
6311 11
6312 9
6313 18
6314 27
6315 18
6316 35
6317 27
6318 11
6319 16
6320 14
6321 13
6322 20
6323 17
6324 13
6325 17
6326 11
6327 16
6328 14
6329 12
6330 11
6331 18
6332 35
6333 27
6334 35
6335 27
6336 11
6337 16
6338 14
6339 13
6340 20
6341 17
6342 13
6343 20
6344 17
6345 11
6346 16
6347 14
6348 12
6349 11
6350 14
6351 23
6352 19
6353 19
6354 10
6355 13
6356 12
6357 12
6358 17
6359 15
6360 12
6361 15
6362 12
6363 9
6364 18
6365 35
6366 27
6367 18
6368 35
6369 27
6370 11
6371 14
6372 13
6373 20
6374 17
6375 13
6376 20
6377 11
6378 16
6379 14
6380 12
6381 11
6382 5
6383 8
6384 17
6385 34
6386 26
6387 17
6388 34
6389 26
6390 10
6391 15
6392 13
6393 12
6394 19
6395 16
6396 12
6397 19
6398 16
6399 10
6400 15
6401 13
6402 11
6403 10
6404 8
6405 17
6406 34
6407 26
6408 17
6409 34
6410 26
6411 10
6412 15
6413 13
6414 12
6415 19
6416 16
6417 12
6418 19
6419 16
6420 10
6421 15
6422 13
6423 11
6424 10
6425 13
6426 22
6427 18
6428 13
6429 22
6430 18
6431 9
6432 12
6433 11
6434 16
6435 14
6436 11
6437 16
6438 14
6439 9
6440 12
6441 11
6442 8
6443 17
6444 34
6445 26
6446 17
6447 34
6448 26
6449 10
6450 15
6451 13
6452 12
6453 19
6454 16
6455 12
6456 19
6457 16
6458 10
6459 15
6460 13
6461 11
6462 10
6463 8
6464 17
6465 34
6466 26
6467 17
6468 34
6469 26
6470 10
6471 15
6472 12
6473 19
6474 16
6475 12
6476 19
6477 16
6478 10
6479 15
6480 13
6481 11
6482 10
6483 8
6484 17
6485 34
6486 26
6487 17
6488 34
6489 26
6490 10
6491 15
6492 13
6493 12
6494 19
6495 16
6496 12
6497 19
6498 16
6499 10
6500 15
6501 11
6502 10
6503 13
6504 22
6505 18
6506 13
6507 22
6508 18
6509 9
6510 12
6511 11
6512 11
6513 16
6514 14
6515 11
6516 16
6517 14
6518 9
6519 12
6520 11
6521 8
6522 17
6523 26
6524 17
6525 34
6526 26
6527 10
6528 15
6529 13
6530 12
6531 19
6532 16
6533 12
6534 19
6535 16
6536 10
6537 15
6538 13
6539 11
6540 10
6541 8
6542 11
6543 20
6544 37
6545 29
6546 20
6547 37
6548 29
6549 13
6550 18
6551 16
6552 15
6553 22
6554 19
6555 15
6556 22
6557 19
6558 13
6559 18
6560 16
6561 14
6562 13
6563 11
6564 20
6565 37
6566 29
6567 20
6568 37
6569 29
6570 13
6571 18
6572 16
6573 15
6574 22
6575 19
6576 15
6577 22
6578 19
6579 13
6580 18
6581 16
6582 14
6583 13
6584 16
6585 25
6586 21
6587 16
6588 25
6589 12
6590 15
6591 14
6592 14
6593 19
6594 17
6595 14
6596 19
6597 17
6598 15
6599 14
6600 11
6601 20
6602 37
6603 29
6604 20
6605 37
6606 13
6607 18
6608 16
6609 15
6610 22
6611 19
6612 15
6613 22
6614 19
6615 13
6616 18
6617 16
6618 14
6619 13
6620 11
6621 20
6622 37
6623 29
6624 20
6625 37
6626 29
6627 13
6628 18
6629 16
6630 15
6631 22
6632 19
6633 15
6634 22
6635 19
6636 13
6637 18
6638 16
6639 14
6640 13
6641 11
6642 20
6643 37
6644 29
6645 20
6646 37
6647 29
6648 13
6649 18
6650 16
6651 15
6652 22
6653 19
6654 15
6655 22
6656 19
6657 13
6658 18
6659 16
6660 14
6661 13
6662 16
6663 25
6664 21
6665 16
6666 25
6667 21
6668 12
6669 15
6670 14
6671 14
6672 19
6673 17
6674 14
6675 19
6676 17
6677 12
6678 15
6679 14
6680 11
6681 20
6682 37
6683 29
6684 20
6685 37
6686 29
6687 13
6688 18
6689 16
6690 15
6691 22
6692 19
6693 15
6694 22
6695 19
6696 13
6697 18
6698 16
6699 14
6700 13
6701 17
6702 20
6703 29
6705 38
6706 29
6708 38
6709 22
6710 27
6711 25
6712 24
6713 31
6714 28
6715 24
6716 31
6717 28
6718 22
6719 25
6720 23
6721 22
6722 20
6723 29
6725 38
6726 29
6728 38
6729 22
6730 27
6731 25
6732 24
6733 31
6734 28
6735 24
6736 31
6737 28
6738 22
6739 27
6740 25
6741 23
6742 22
6743 25
6744 34
6745 30
6746 25
6747 34
6748 21
6749 24
6750 23
6751 23
6752 28
6753 26
6754 23
6755 28
6756 21
6757 24
6758 23
6759 20
6760 29
6762 38
6763 29
6765 22
6766 27
6767 25
6768 24
6769 31
6770 28
6771 24
6772 31
6773 28
6774 22
6775 27
6776 25
6777 23
6778 22
6779 20
6780 29
6782 38
6783 29
6785 38
6786 22
6787 27
6788 25
6789 24
6790 31
6791 28
6792 24
6793 31
6794 28
6795 22
6796 27
6797 25
6798 23
6799 20
6800 29
6802 38
6803 29
6805 38
6806 22
6807 27
6808 25
6809 24
6810 31
6811 28
6812 24
6813 28
6814 27
6815 25
6816 22
6817 25
6818 34
6819 30
6820 25
6821 34
6822 30
6823 21
6824 24
6825 23
6826 23
6827 28
6828 26
6829 23
6830 28
6831 26
6832 21
6833 24
6834 23
6835 20
6836 29
6838 38
6839 29
6841 38
6842 22
6843 27
6844 25
6845 24
6846 31
6847 28
6848 24
6849 31
6850 28
6851 22
6852 27
6853 25
6854 23
6855 22
6856 13
6857 16
6858 25
6860 34
6861 25
6863 34
6864 18
6865 23
6866 21
6867 20
6868 27
6869 24
6870 20
6871 27
6872 24
6873 18
6874 23
6875 21
6876 19
6877 18
6878 16
6879 25
6881 34
6882 25
6884 34
6885 18
6886 23
6887 21
6888 20
6889 27
6890 24
6891 20
6892 27
6893 24
6894 18
6895 23
6896 21
6897 19
6898 18
6899 21
6900 30
6901 26
6902 21
6903 30
6904 26
6905 17
6906 20
6907 19
6908 19
6909 24
6910 22
6911 19
6912 24
6913 22
6914 17
6915 20
6916 19
6917 16
6918 25
6920 34
6921 25
6923 34
6924 18
6925 23
6926 21
6927 20
6928 27
6929 24
6930 20
6931 27
6932 24
6933 18
6934 21
6935 19
6936 18
6937 16
6938 25
6940 34
6941 25
6943 34
6944 18
6945 23
6946 21
6947 20
6948 27
6949 24
6950 20
6951 27
6952 24
6953 23
6954 21
6955 19
6956 18
6957 16
6958 25
6960 34
6961 25
6963 34
6964 18
6965 23
6966 21
6967 20
6968 27
6969 24
6970 20
6971 27
6972 24
6973 18
6974 23
6975 21
6976 19
6977 18
6978 21
6979 30
6980 26
6981 21
6982 30
6983 26
6984 20
6985 19
6986 19
6987 24
6988 22
6989 19
6990 24
6991 22
6992 17
6993 20
6994 19
6995 16
6996 25
6998 34
6999 25
7001 34
7002 18
7003 23
7004 21
7005 20
7006 27
7007 24
7008 20
7009 27
7010 24
7011 18
7012 23
7013 21
7014 19
7015 18
7016 8
7017 11
7018 20
7019 37
7020 29
7021 20
7022 37
7023 29
7024 13
7025 18
7026 16
7027 15
7028 22
7029 19
7030 15
7031 22
7032 13
7033 18
7034 16
7035 14
7036 13
7037 11
7038 20
7039 37
7040 29
7041 20
7042 37
7043 29
7044 13
7045 18
7046 16
7047 15
7048 22
7049 19
7050 15
7051 22
7052 19
7053 13
7054 18
7055 16
7056 14
7057 13
7058 16
7059 25
7060 21
7061 16
7062 25
7063 12
7064 15
7065 14
7066 14
7067 19
7068 17
7069 14
7070 19
7071 17
7072 15
7073 14
7074 11
7075 20
7076 37
7077 29
7078 20
7079 37
7080 13
7081 18
7082 16
7083 15
7084 22
7085 19
7086 15
7087 22
7088 19
7089 13
7090 18
7091 16
7092 14
7093 13
7094 20
7095 37
7096 29
7097 20
7098 37
7099 29
7100 13
7101 18
7102 16
7103 15
7104 22
7105 19
7106 15
7107 22
7108 19
7109 13
7110 18
7111 16
7112 14
7113 13
7114 11
7115 20
7116 37
7117 29
7118 20
7119 37
7120 29
7121 13
7122 18
7123 16
7124 15
7125 22
7126 19
7127 15
7128 22
7129 19
7130 13
7131 18
7132 16
7133 14
7134 13
7135 16
7136 25
7137 21
7138 16
7139 21
7140 12
7141 15
7142 14
7143 14
7144 19
7145 17
7146 14
7147 19
7148 12
7149 15
7150 14
7151 11
7152 20
7153 37
7154 29
7155 20
7156 37
7157 29
7158 13
7159 18
7160 16
7161 22
7162 19
7163 15
7164 22
7165 19
7166 13
7167 18
7168 16
7169 14
7170 13
7171 17
7172 20
7173 29
7175 38
7176 29
7178 27
7179 25
7180 24
7181 31
7182 28
7183 24
7184 31
7185 28
7186 22
7187 27
7188 25
7189 23
7190 22
7191 20
7192 29
7194 38
7195 29
7197 38
7198 22
7199 27
7200 25
7201 24
7202 31
7203 28
7204 24
7205 31
7206 28
7207 22
7208 27
7209 25
7210 23
7211 22
7212 34
7213 30
7214 25
7215 34
7216 30
7217 21
7218 24
7219 23
7220 23
7221 28
7222 23
7223 28
7224 26
7225 21
7226 24
7227 23
7228 20
7229 29
7231 38
7232 29
7234 38
7235 22
7236 27
7237 25
7238 24
7239 31
7240 28
7241 24
7242 31
7243 28
7244 22
7245 27
7246 25
7247 23
7248 22
7249 20
7250 29
7252 38
7253 29
7255 38
7256 22
7257 27
7258 25
7259 24
7260 31
7261 28
7262 24
7263 31
7264 28
7265 22
7266 27
7267 25
7268 23
7269 22
7270 20
7271 29
7273 29
7275 38
7276 22
7277 27
7278 25
7279 24
7280 31
7281 28
7282 24
7283 31
7284 28
7285 22
7286 27
7287 25
7288 23
7289 22
7290 25
7291 34
7292 30
7293 25
7294 34
7295 30
7296 21
7297 24
7298 23
7299 23
7300 28
7301 26
7302 23
7303 28
7304 26
7305 21
7306 24
7307 23
7308 20
7309 29
7311 38
7312 29
7314 38
7315 22
7316 27
7317 25
7318 24
7319 31
7320 28
7321 24
7322 31
7323 28
7324 22
7325 27
7326 23
7327 22
7328 13
7329 16
7330 25
7332 34
7333 25
7335 34
7336 18
7337 23
7338 21
7339 20
7340 27
7341 20
7342 27
7343 24
7344 18
7345 23
7346 21
7347 18
7348 16
7349 25
7350 25
7352 34
7353 18
7354 23
7355 21
7356 20
7357 27
7358 24
7359 20
7360 27
7361 24
7362 18
7363 23
7364 21
7365 19
7366 18
7367 21
7368 30
7369 26
7370 21
7371 30
7372 26
7373 17
7374 20
7375 19
7376 24
7377 22
7378 19
7379 24
7380 22
7381 17
7382 20
7383 25
7385 34
7386 25
7388 34
7389 18
7390 23
7391 21
7392 20
7393 27
7394 24
7395 20
7396 27
7397 24
7398 18
7399 23
7400 21
7401 19
7402 25
7404 34
7405 25
7407 34
7408 18
7409 23
7410 21
7411 27
7412 24
7413 20
7414 27
7415 24
7416 18
7417 23
7418 21
7419 19
7420 18
7421 16
7423 34
7424 25
7426 34
7427 23
7428 20
7429 27
7430 24
7431 20
7432 27
7433 24
7434 18
7435 23
7436 21
7437 19
7438 18
7439 21
7440 30
7441 26
7442 21
7443 30
7444 26
7445 17
7446 20
7447 19
7448 19
7449 24
7450 22
7451 19
7452 24
7453 22
7454 17
7455 20
7456 19
7457 16
7458 25
7460 34
7461 25
7463 34
7464 18
7465 23
7466 21
7467 20
7468 27
7469 24
7470 20
7471 27
7472 24
7473 18
7474 23
7475 21
7476 19
7477 18
7478 4
7479 16
7480 33
7481 25
7482 16
7483 33
7484 25
7485 9
7486 14
7487 12
7488 11
7489 18
7490 15
7491 11
7492 18
7493 15
7494 9
7495 14
7496 12
7497 10
7498 9
7499 7
7500 16
7501 33
7502 25
7503 16
7504 33
7505 25
7506 9
7507 14
7508 12
7509 11
7510 18
7511 15
7512 11
7513 18
7514 9
7515 14
7516 12
7517 10
7518 9
7519 12
7520 17
7521 12
7522 21
7523 17
7524 8
7525 11
7526 10
7527 10
7528 15
7529 13
7530 10
7531 15
7532 13
7533 8
7534 11
7535 10
7536 7
7537 16
7538 33
7539 25
7540 16
7541 33
7542 25
7543 9
7544 12
7545 11
7546 18
7547 15
7548 11
7549 18
7550 15
7551 9
7552 14
7553 12
7554 10
7555 9
7556 7
7557 16
7558 33
7559 25
7560 16
7561 33
7562 25
7563 9
7564 14
7565 12
7566 11
7567 15
7568 11
7569 18
7570 15
7571 9
7572 14
7573 12
7574 10
7575 9
7576 7
7577 16
7578 33
7579 25
7580 16
7581 33
7582 25
7583 9
7584 14
7585 12
7586 18
7587 15
7588 11
7589 18
7590 15
7591 9
7592 14
7593 12
7594 10
7595 9
7596 12
7597 21
7598 17
7599 12
7600 21
7601 17
7602 8
7603 11
7604 10
7605 10
7606 15
7607 13
7608 10
7609 15
7610 13
7611 11
7612 10
7613 7
7614 16
7615 33
7616 25
7617 16
7618 33
7619 25
7620 9
7621 14
7622 11
7623 18
7624 15
7625 11
7626 18
7627 15
7628 9
7629 14
7630 12
7631 10
7632 9
7633 7
7634 10
7635 19
7636 36
7637 28
7638 19
7639 36
7640 28
7641 12
7642 17
7643 15
7644 21
7645 18
7646 14
7647 21
7648 18
7649 12
7650 17
7651 15
7652 13
7653 12
7654 10
7655 19
7656 36
7657 28
7658 19
7659 36
7660 28
7661 12
7662 17
7663 15
7664 14
7665 21
7666 18
7667 14
7668 21
7669 18
7670 12
7671 15
7672 13
7673 12
7674 15
7675 24
7676 20
7677 15
7678 24
7679 20
7680 11
7681 14
7682 13
7683 13
7684 18
7685 16
7686 13
7687 18
7688 16
7689 11
7690 14
7691 13
7692 10
7693 19
7694 36
7695 28
7696 19
7697 28
7698 12
7699 17
7700 15
7701 14
7702 21
7703 18
7704 14
7705 21
7706 18
7707 12
7708 17
7709 15
7710 12
7711 10
7712 19
7713 36
7714 28
7715 19
7716 36
7717 28
7718 12
7719 17
7720 15
7721 21
7722 18
7723 14
7724 21
7725 18
7726 12
7727 17
7728 15
7729 13
7730 12
7731 19
7732 36
7733 28
7734 19
7735 36
7736 28
7737 12
7738 17
7739 15
7740 14
7741 21
7742 18
7743 14
7744 21
7745 18
7746 12
7747 17
7748 15
7749 13
7750 12
7751 15
7752 24
7753 20
7754 15
7755 24
7756 20
7757 14
7758 13
7759 13
7760 18
7761 16
7762 13
7763 18
7764 16
7765 11
7766 14
7767 13
7768 10
7769 19
7770 36
7771 28
7772 19
7773 36
7774 28
7775 12
7776 17
7777 15
7778 14
7779 21
7780 14
7781 21
7782 18
7783 12
7784 17
7785 15
7786 13
7787 12
7788 6
7789 18
7790 35
7791 27
7792 18
7793 35
7794 27
7795 11
7796 16
7797 14
7798 13
7799 20
7800 17
7801 13
7802 20
7803 17
7804 11
7805 16
7806 14
7807 11
7808 18
7809 35
7810 18
7811 35
7812 27
7813 11
7814 16
7815 14
7816 13
7817 20
7818 17
7819 13
7820 20
7821 17
7822 11
7823 16
7824 14
7825 12
7826 11
7827 14
7828 23
7829 14
7830 23
7831 19
7832 10
7833 13
7834 12
7835 12
7836 17
7837 15
7838 12
7839 17
7840 15
7841 10
7842 13
7843 12
7844 9
7845 18
7846 35
7847 27
7848 35
7849 27
7850 11
7851 16
7852 14
7853 13
7854 20
7855 17
7856 13
7857 20
7858 17
7859 11
7860 16
7861 14
7862 12
7863 11
7864 9
7865 18
7866 35
7867 27
7868 18
7869 35
7870 27
7871 11
7872 16
7873 14
7874 13
7875 20
7876 17
7877 13
7878 20
7879 17
7880 11
7881 16
7882 14
7883 12
7884 11
7885 9
7886 18
7887 35
7888 27
7889 18
7890 35
7891 27
7892 11
7893 16
7894 14
7895 13
7896 17
7897 13
7898 20
7899 17
7900 11
7901 16
7902 14
7903 12
7904 11
7905 14
7906 23
7907 19
7908 14
7909 23
7910 19
7911 10
7912 13
7913 12
7914 12
7915 17
7916 15
7917 12
7918 17
7919 15
7920 10
7921 13
7922 12
7923 9
7924 18
7925 35
7926 27
7927 18
7928 35
7929 27
7930 11
7931 16
7932 14
7933 13
7934 20
7935 17
7936 13
7937 20
7938 17
7939 11
7940 16
7941 14
7942 12
7943 11
7944 6
7945 9
7946 18
7947 35
7948 27
7949 18
7950 35
7951 27
7952 11
7953 16
7954 14
7955 13
7956 17
7957 13
7958 20
7959 17
7960 11
7961 16
7962 14
7963 12
7964 11
7965 9
7966 18
7967 35
7968 27
7969 18
7970 35
7971 27
7972 11
7973 16
7974 14
7975 13
7976 20
7977 17
7978 13
7979 20
7980 17
7981 11
7982 16
7983 14
7984 12
7985 11
7986 14
7987 23
7988 19
7989 14
7990 23
7991 19
7992 10
7993 13
7994 12
7995 12
7996 17
7997 15
7998 12
7999 17
8000 15
8001 10
8002 13
8003 12
8004 18
8005 35
8006 27
8007 18
8008 35
8009 27
8010 11
8011 16
8012 14
8013 13
8014 20
8015 17
8016 13
8017 20
8018 17
8019 11
8020 16
8021 14
8022 12
8023 11
8024 9
8025 18
8026 35
8027 27
8028 18
8029 35
8030 27
8031 11
8032 16
8033 14
8034 13
8035 20
8036 17
8037 13
8038 20
8039 17
8040 11
8041 16
8042 12
8043 11
8044 9
8045 18
8046 35
8047 27
8048 18
8049 35
8050 27
8051 11
8052 16
8053 14
8054 13
8055 17
8056 13
8057 20
8058 17
8059 11
8060 14
8061 12
8062 11
8063 14
8064 23
8065 19
8066 14
8067 23
8068 19
8069 10
8070 13
8071 12
8072 12
8073 17
8074 15
8075 12
8076 17
8077 15
8078 10
8079 12
8080 9
8081 18
8082 35
8083 27
8084 18
8085 35
8086 27
8087 11
8088 16
8089 14
8090 13
8091 20
8092 17
8093 13
8094 17
8095 11
8096 14
8097 12
8098 11
8099 11
8100 14
8101 23
8103 32
8104 23
8105 32
8106 16
8107 21
8108 19
8109 18
8110 25
8111 22
8112 18
8113 22
8114 16
8115 21
8116 19
8117 17
8118 16
8119 14
8120 23
8122 32
8123 23
8124 32
8125 16
8126 21
8127 19
8128 18
8129 25
8130 22
8131 18
8132 25
8133 22
8134 16
8135 21
8136 19
8137 17
8138 16
8139 19
8140 28
8141 24
8142 19
8143 28
8144 24
8145 15
8146 18
8147 17
8148 17
8149 22
8150 20
8151 17
8152 22
8153 20
8154 15
8155 18
8156 17
8157 14
8158 23
8160 32
8161 23
8163 32
8164 16
8165 19
8166 18
8167 25
8168 22
8169 18
8170 25
8171 22
8172 16
8173 21
8174 19
8175 17
8176 16
8177 14
8178 23
8180 32
8181 23
8183 32
8184 16
8185 21
8186 19
8187 18
8188 25
8189 22
8190 18
8191 25
8192 22
8193 16
8194 21
8195 19
8196 17
8197 16
8198 14
8199 23
8201 32
8202 23
8203 32
8204 16
8205 21
8206 19
8207 18
8208 25
8209 22
8210 18
8211 25
8212 22
8213 16
8214 21
8215 19
8216 17
8217 16
8218 19
8219 28
8220 24
8221 19
8222 28
8223 24
8224 18
8225 17
8226 17
8227 22
8228 20
8229 17
8230 22
8231 20
8232 15
8233 18
8234 14
8235 23
8237 32
8238 23
8240 32
8241 16
8242 21
8243 19
8244 18
8245 25
8246 18
8247 22
8248 16
8249 21
8250 17
8251 16
8252 9
8253 12
8254 21
8255 38
8256 30
8257 21
8258 38
8259 30
8260 14
8261 19
8262 17
8263 16
8264 23
8265 20
8266 16
8267 23
8268 20
8269 14
8270 19
8271 17
8272 15
8273 14
8274 12
8275 21
8276 38
8277 30
8278 21
8279 38
8280 30
8281 14
8282 19
8283 17
8284 16
8285 23
8286 20
8287 16
8288 23
8289 14
8290 19
8291 17
8292 15
8293 14
8294 17
8295 26
8296 22
8297 17
8298 22
8299 13
8300 16
8301 15
8302 15
8303 20
8304 18
8305 20
8306 18
8307 13
8308 16
8309 15
8310 12
8311 38
8312 30
8313 21
8314 38
8315 30
8316 14
8317 19
8318 16
8319 23
8320 20
8321 16
8322 23
8323 20
8324 14
8325 19
8326 17
8327 15
8328 14
8329 12
8330 21
8331 38
8332 30
8333 21
8334 38
8335 30
8336 14
8337 19
8338 17
8339 16
8340 23
8341 20
8342 16
8343 23
8344 20
8345 14
8346 19
8347 17
8348 15
8349 14
8350 12
8351 21
8352 38
8353 30
8354 21
8355 38
8356 30
8357 14
8358 19
8359 17
8360 16
8361 23
8362 16
8363 23
8364 20
8365 14
8366 19
8367 17
8368 15
8369 14
8370 17
8371 26
8372 22
8373 17
8374 26
8375 22
8376 13
8377 16
8378 15
8379 20
8380 18
8381 15
8382 20
8383 18
8384 13
8385 16
8386 15
8387 12
8388 21
8389 38
8390 30
8391 21
8392 38
8393 30
8394 14
8395 19
8396 17
8397 16
8398 23
8399 20
8400 16
8401 23
8402 20
8403 14
8404 19
8405 17
8406 15
8407 14
8408 6
8409 9
8410 18
8411 35
8412 27
8413 18
8414 35
8415 27
8416 11
8417 16
8418 14
8419 13
8420 20
8421 17
8422 13
8423 20
8424 17
8425 11
8426 16
8427 14
8428 12
8429 9
8430 18
8431 35
8432 27
8433 18
8434 35
8435 27
8436 11
8437 16
8438 14
8439 13
8440 20
8441 17
8442 13
8443 20
8444 17
8445 16
8446 14
8447 12
8448 11
8449 14
8450 23
8451 19
8452 14
8453 23
8454 19
8455 10
8456 13
8457 12
8458 12
8459 17
8460 15
8461 12
8462 17
8463 15
8464 10
8465 13
8466 12
8467 9
8468 35
8469 27
8470 18
8471 27
8472 11
8473 16
8474 14
8475 13
8476 20
8477 17
8478 13
8479 20
8480 17
8481 11
8482 16
8483 14
8484 12
8485 11
8486 9
8487 27
8488 18
8489 35
8490 27
8491 11
8492 16
8493 14
8494 13
8495 20
8496 17
8497 13
8498 20
8499 17
8500 11
8501 16
8502 14
8503 12
8504 11
8505 18
8506 35
8507 27
8508 18
8509 35
8510 27
8511 11
8512 16
8513 14
8514 13
8515 20
8516 17
8517 13
8518 20
8519 17
8520 11
8521 16
8522 14
8523 11
8524 14
8525 23
8526 19
8527 14
8528 23
8529 19
8530 10
8531 13
8532 12
8533 12
8534 17
8535 15
8536 12
8537 17
8538 15
8539 10
8540 13
8541 12
8542 9
8543 18
8544 35
8545 27
8546 18
8547 35
8548 27
8549 11
8550 16
8551 14
8552 13
8553 20
8554 17
8555 13
8556 20
8557 11
8558 16
8559 14
8560 12
8561 11
8562 11
8563 14
8564 23
8566 32
8567 23
8569 16
8570 21
8571 19
8572 18
8573 25
8574 22
8575 18
8576 25
8577 22
8578 16
8579 21
8580 19
8581 17
8582 16
8583 14
8584 23
8586 32
8587 23
8589 32
8590 16
8591 21
8592 19
8593 18
8594 25
8595 22
8596 18
8597 25
8598 22
8599 16
8600 21
8601 19
8602 17
8603 16
8604 19
8605 28
8606 24
8607 19
8608 28
8609 24
8610 15
8611 18
8612 17
8613 17
8614 22
8615 20
8616 17
8617 22
8618 20
8619 15
8620 18
8621 17
8622 14
8623 23
8625 32
8627 32
8628 16
8629 21
8630 19
8631 18
8632 25
8633 22
8634 18
8635 25
8636 22
8637 16
8638 21
8639 19
8640 17
8641 16
8642 14
8643 23
8645 32
8646 23
8648 32
8649 16
8650 21
8651 19
8652 18
8653 25
8654 22
8655 18
8656 25
8657 22
8658 16
8659 21
8660 19
8661 17
8662 16
8663 14
8664 23
8666 32
8667 23
8669 32
8670 16
8671 21
8672 19
8673 18
8674 25
8675 22
8676 18
8677 25
8678 22
8679 16
8680 21
8681 19
8682 17
8683 16
8684 19
8685 28
8686 24
8687 19
8688 28
8689 24
8690 15
8691 18
8692 17
8693 17
8694 22
8695 20
8696 17
8697 22
8698 20
8699 15
8700 18
8701 17
8702 14
8704 32
8705 23
8707 32
8708 16
8709 19
8710 18
8711 25
8712 22
8713 18
8714 25
8715 22
8716 16
8717 21
8718 19
8719 17
8720 16
8721 9
8722 12
8723 21
8724 38
8725 30
8726 21
8727 38
8728 30
8729 14
8730 19
8731 17
8732 16
8733 23
8734 20
8735 16
8736 23
8737 14
8738 19
8739 17
8740 15
8741 14
8742 12
8743 21
8744 38
8745 30
8746 21
8747 38
8748 30
8749 14
8750 19
8751 17
8752 16
8753 23
8754 20
8755 16
8756 23
8757 20
8758 14
8759 19
8760 17
8761 15
8762 14
8763 17
8764 26
8765 22
8766 17
8767 26
8768 22
8769 13
8770 16
8771 15
8772 15
8773 20
8774 18
8775 15
8776 20
8777 18
8778 13
8779 16
8780 15
8781 12
8782 21
8783 30
8784 21
8785 38
8786 30
8787 14
8788 19
8789 17
8790 16
8791 23
8792 20
8793 16
8794 23
8795 20
8796 19
8797 17
8798 15
8799 14
8800 12
8801 21
8802 38
8803 30
8804 21
8805 38
8806 30
8807 14
8808 19
8809 17
8810 16
8811 23
8812 20
8813 16
8814 23
8815 20
8816 14
8817 19
8818 17
8819 15
8820 14
8821 12
8822 21
8823 38
8824 30
8825 21
8826 38
8827 30
8828 14
8829 19
8830 17
8831 16
8832 23
8833 16
8834 23
8835 20
8836 14
8837 19
8838 17
8839 15
8840 14
8841 17
8842 26
8843 22
8844 17
8845 26
8846 22
8847 13
8848 16
8849 15
8850 15
8851 20
8852 18
8853 15
8854 20
8855 18
8856 13
8857 16
8858 15
8859 12
8860 21
8861 38
8862 30
8863 21
8864 38
8865 30
8866 14
8867 19
8868 17
8869 16
8870 23
8871 20
8872 16
8873 23
8874 20
8875 14
8876 19
8877 17
8878 15
8879 14
8880 4
8881 7
8882 16
8883 33
8884 25
8885 16
8886 33
8887 25
8888 9
8889 14
8890 12
8891 11
8892 18
8893 15
8894 11
8895 18
8896 14
8897 12
8898 10
8899 9
8900 7
8901 16
8902 33
8903 16
8904 33
8905 25
8906 9
8907 14
8908 12
8909 11
8910 18
8911 15
8912 11
8913 18
8914 15
8915 9
8916 14
8917 9
8918 12
8919 17
8920 12
8921 21
8922 17
8923 8
8924 11
8925 10
8926 10
8927 15
8928 13
8929 10
8930 15
8931 13
8932 8
8933 11
8934 10
8935 7
8936 16
8937 33
8938 25
8939 33
8940 25
8941 9
8942 14
8943 12
8944 11
8945 18
8946 11
8947 18
8948 15
8949 9
8950 14
8951 12
8952 10
8953 9
8954 16
8955 33
8956 25
8957 16
8958 33
8959 9
8960 14
8961 12
8962 11
8963 18
8964 15
8965 18
8966 15
8967 9
8968 14
8969 12
8970 10
8971 9
8972 7
8973 16
8974 33
8975 25
8976 16
8977 25
8978 9
8979 14
8980 12
8981 18
8982 15
8983 18
8984 15
8985 9
8986 14
8987 12
8988 10
8989 9
8990 12
8991 21
8992 17
8993 12
8994 21
8995 17
8996 8
8997 11
8998 10
8999 10
9000 15
9001 13
9002 10
9003 15
9004 13
9005 11
9006 10
9007 7
9008 16
9009 33
9010 25
9011 16
9012 33
9013 9
9014 14
9015 12
9016 11
9017 18
9018 15
9019 11
9020 18
9021 15
9022 9
9023 14
9024 12
9025 10
9026 9
9027 7
9028 10
9029 19
9030 36
9031 28
9032 19
9033 36
9034 28
9035 12
9036 15
9037 14
9038 21
9039 18
9040 14
9041 21
9042 18
9043 12
9044 17
9045 15
9046 13
9047 12
9048 10
9049 19
9050 36
9051 28
9052 19
9053 36
9054 28
9055 12
9056 17
9057 15
9058 14
9059 21
9060 18
9061 14
9062 21
9063 18
9064 12
9065 17
9066 15
9067 13
9068 12
9069 15
9070 24
9071 20
9072 15
9073 24
9074 20
9075 11
9076 14
9077 13
9078 13
9079 18
9080 16
9081 13
9082 18
9083 16
9084 11
9085 14
9086 13
9087 10
9088 19
9089 36
9090 28
9091 19
9092 36
9093 28
9094 12
9095 17
9096 15
9097 14
9098 21
9099 18
9100 14
9101 21
9102 18
9103 12
9104 17
9105 15
9106 13
9107 12
9108 10
9109 19
9110 36
9111 28
9112 19
9113 36
9114 28
9115 12
9116 17
9117 15
9118 14
9119 21
9120 18
9121 14
9122 21
9123 18
9124 12
9125 17
9126 15
9127 13
9128 12
9129 10
9130 36
9131 28
9132 19
9133 36
9134 28
9135 12
9136 17
9137 15
9138 14
9139 21
9140 18
9141 14
9142 21
9143 18
9144 17
9145 15
9146 13
9147 12
9148 15
9149 24
9150 20
9151 15
9152 24
9153 20
9154 14
9155 13
9156 13
9157 18
9158 16
9159 13
9160 18
9161 16
9162 11
9163 14
9164 13
9165 10
9166 19
9167 36
9168 28
9169 19
9170 36
9171 28
9172 12
9173 17
9174 15
9175 14
9176 21
9177 18
9178 14
9179 21
9180 18
9181 12
9182 17
9183 15
9184 13
9185 12
9186 6
9187 9
9188 18
9189 35
9190 27
9191 18
9192 35
9193 27
9194 11
9195 16
9196 14
9197 13
9198 20
9199 17
9200 13
9201 20
9202 17
9203 11
9204 16
9205 14
9206 12
9207 11
9208 9
9209 18
9210 35
9211 27
9212 18
9213 35
9214 27
9215 11
9216 16
9217 14
9218 13
9219 20
9220 17
9221 13
9222 20
9223 17
9224 11
9225 16
9226 14
9227 12
9228 11
9229 14
9230 23
9231 19
9232 14
9233 23
9234 19
9235 10
9236 13
9237 12
9238 12
9239 17
9240 15
9241 12
9242 17
9243 15
9244 10
9245 13
9246 12
9247 9
9248 18
9249 35
9250 27
9251 18
9252 35
9253 27
9254 11
9255 16
9256 14
9257 13
9258 20
9259 17
9260 20
9261 11
9262 14
9263 12
9264 11
9265 9
9266 18
9267 18
9268 35
9269 27
9270 11
9271 16
9272 14
9273 13
9274 20
9275 17
9276 13
9277 20
9278 17
9279 11
9280 16
9281 14
9282 12
9283 11
9284 9
9285 18
9286 35
9287 27
9288 18
9289 35
9290 27
9291 11
9292 16
9293 14
9294 13
9295 20
9296 17
9297 13
9298 20
9299 17
9300 11
9301 16
9302 12
9303 11
9304 14
9305 23
9306 19
9307 14
9308 23
9309 19
9310 10
9311 13
9312 12
9313 12
9314 17
9315 15
9316 12
9317 17
9318 15
9319 10
9320 13
9321 12
9322 9
9323 18
9324 35
9325 18
9326 35
9327 27
9328 11
9329 14
9330 13
9331 20
9332 17
9333 13
9334 20
9335 17
9336 11
9337 16
9338 14
9339 12
9340 11
9341 3
9342 6
9343 15
9344 32
9345 24
9346 15
9347 32
9348 24
9349 8
9350 13
9351 11
9352 10
9353 17
9354 14
9355 10
9356 17
9357 14
9358 8
9359 13
9360 11
9361 9
9362 8
9363 6
9364 15
9365 32
9366 24
9367 15
9368 32
9369 24
9370 8
9371 13
9372 11
9373 10
9374 17
9375 14
9376 10
9377 17
9378 14
9379 8
9380 13
9381 11
9382 9
9383 8
9384 11
9385 20
9386 16
9387 11
9388 20
9389 16
9390 7
9391 10
9392 9
9393 9
9394 14
9395 12
9396 9
9397 14
9398 12
9399 7
9400 10
9401 9
9402 6
9403 15
9404 32
9405 24
9406 15
9407 32
9408 24
9409 8
9410 13
9411 11
9412 10
9413 17
9414 14
9415 10
9416 14
9417 8
9418 13
9419 11
9420 9
9421 8
9422 6
9423 15
9424 32
9425 24
9426 15
9427 32
9428 24
9429 8
9430 13
9431 11
9432 10
9433 17
9434 14
9435 10
9436 17
9437 8
9438 13
9439 11
9440 8
9441 6
9442 15
9443 32
9444 24
9445 15
9446 32
9447 24
9448 8
9449 13
9450 11
9451 10
9452 17
9453 14
9454 10
9455 17
9456 14
9457 8
9458 13
9459 11
9460 9
9461 8
9462 11
9463 20
9464 16
9465 11
9466 20
9467 16
9468 7
9469 10
9470 9
9471 9
9472 14
9473 12
9474 9
9475 14
9476 12
9477 7
9478 10
9479 9
9480 6
9481 32
9482 24
9483 15
9484 32
9485 24
9486 8
9487 13
9488 11
9489 10
9490 17
9491 14
9492 10
9493 17
9494 14
9495 8
9496 13
9497 11
9498 9
9499 8
9500 12
9501 15
9502 24
9504 33
9505 24
9507 33
9508 17
9509 22
9510 20
9511 19
9512 26
9513 23
9514 19
9515 23
9516 17
9517 22
9518 20
9519 18
9520 17
9521 15
9522 24
9524 33
9525 24
9527 33
9528 17
9529 22
9530 20
9531 19
9532 26
9533 23
9534 19
9535 26
9536 23
9537 17
9538 22
9539 20
9540 18
9541 17
9542 20
9543 29
9544 25
9545 20
9546 29
9547 25
9548 16
9549 19
9550 18
9551 18
9552 23
9553 21
9554 18
9555 21
9556 16
9557 19
9558 18
9559 15
9560 24
9561 33
9562 24
9564 33
9565 17
9566 22
9567 20
9568 26
9569 23
9570 19
9571 26
9572 23
9573 17
9574 22
9575 20
9576 18
9577 17
9578 24
9580 33
9581 24
9583 33
9584 17
9585 22
9586 20
9587 19
9588 26
9589 23
9590 19
9591 26
9592 23
9593 17
9594 22
9595 20
9596 18
9597 17
9598 15
9599 24
9601 33
9602 24
9604 33
9605 17
9606 22
9607 20
9608 19
9609 26
9610 23
9611 19
9612 26
9613 23
9614 17
9615 22
9616 20
9617 18
9618 17
9619 20
9620 29
9621 25
9622 20
9623 29
9624 25
9625 16
9626 19
9627 18
9628 18
9629 23
9630 21
9631 18
9632 23
9633 21
9634 16
9635 19
9636 18
9637 15
9638 24
9640 33
9641 24
9643 33
9644 17
9645 22
9646 20
9647 19
9648 26
9649 23
9650 19
9651 26
9652 23
9653 17
9654 22
9655 20
9656 18
9657 17
9658 29
9659 32
9664 34
9665 39
9666 37
9667 36
9670 36
9673 34
9674 39
9675 37
9676 35
9677 34
9678 32
9685 34
9686 39
9687 37
9688 36
9691 36
9694 34
9695 39
9696 37
9697 35
9698 34
9699 37
9702 37
9705 33
9706 36
9707 35
9708 35
9710 38
9711 35
9713 38
9714 33
9715 36
9716 35
9717 32
9724 34
9725 39
9726 37
9727 36
9730 36
9733 34
9734 39
9735 37
9736 35
9737 34
9738 32
9744 34
9745 39
9746 37
9747 36
9750 36
9752 34
9753 39
9754 37
9755 35
9756 34
9757 32
9764 39
9765 37
9766 36
9768 36
9771 34
9772 39
9773 37
9774 34
9775 37
9778 37
9781 33
9782 36
9783 35
9784 35
9786 38
9787 35
9789 38
9790 33
9791 36
9792 35
9799 34
9800 39
9801 37
9802 36
9805 36
9808 34
9809 39
9810 37
9811 35
9812 34
9813 21
9814 33
9816 33
9819 26
9820 31
9821 29
9822 28
9823 35
9824 32
9825 28
9826 35
9827 32
9828 26
9829 31
9830 29
9831 27
9832 26
9833 24
9834 33
9837 33
9840 26
9841 31
9842 29
9843 28
9844 35
9845 32
9846 28
9847 35
9848 32
9849 26
9850 31
9851 29
9852 27
9853 26
9854 29
9855 38
9856 34
9857 29
9858 38
9859 34
9860 25
9861 28
9862 27
9863 27
9864 32
9865 30
9866 27
9867 32
9868 30
9869 25
9870 28
9871 27
9872 24
9873 33
9876 33
9879 26
9880 31
9881 29
9882 28
9883 35
9884 32
9885 28
9886 35
9887 32
9888 26
9889 31
9890 29
9891 27
9892 26
9893 24
9894 33
9897 33
9900 26
9901 31
9902 29
9903 28
9904 35
9905 32
9906 28
9907 35
9908 32
9909 26
9910 31
9911 29
9912 27
9913 26
9914 24
9915 33
9917 33
9920 26
9921 31
9922 29
9923 28
9924 35
9925 32
9926 28
9927 35
9928 32
9929 26
9930 31
9931 29
9932 27
9933 26
9934 29
9935 38
9936 34
9937 29
9938 38
9939 34
9940 25
9941 28
9942 27
9943 27
9944 32
9945 30
9946 27
9947 32
9948 30
9949 25
9950 28
9951 27
9952 24
9953 33
9956 33
9959 26
9960 31
9961 29
9962 28
9963 35
9964 32
9965 28
9966 35
9967 32
9968 26
9969 31
9970 29
9971 27
9972 26
9973 12
9974 15
9975 24
9977 33
9978 24
9980 33
9981 17
9982 22
9983 20
9984 19
9985 26
9986 23
9987 19
9988 26
9989 23
9990 17
9991 22
9992 18
9993 15
9994 24
9996 33
9997 24
9999 33
10000 17
10001 22
10002 20
10003 19
10004 26
10005 23
10006 19
10007 26
10008 22
10009 20
10010 18
10011 17
10012 20
10013 29
10014 25
10015 20
10016 29
10017 25
10018 16
10019 19
10020 18
10021 18
10022 23
10023 21
10024 18
10025 23
10026 16
10027 19
10028 18
10029 15
10030 24
10032 33
10033 24
10035 33
10036 17
10037 22
10038 20
10039 19
10040 26
10041 23
10042 19
10043 26
10044 23
10045 17
10046 22
10047 20
10048 18
10049 17
10050 15
10051 24
10053 33
10054 24
10056 33
10057 17
10058 22
10059 20
10060 26
10061 23
10062 19
10063 26
10064 23
10065 17
10066 22
10067 20
10068 18
10069 17
10070 15
10071 24
10073 33
10074 24
10076 33
10077 17
10078 22
10079 19
10080 26
10081 19
10082 26
10083 23
10084 17
10085 22
10086 20
10087 18
10088 17
10089 20
10090 29
10091 25
10092 20
10093 29
10094 25
10095 16
10096 19
10097 18
10098 18
10099 23
10100 21
10101 18
10102 23
10103 21
10104 16
10105 19
10106 18
10107 15
10108 24
10110 33
10111 24
10113 33
10114 17
10115 22
10116 20
10117 19
10118 26
10119 23
10120 19
10121 26
10122 23
10123 17
10124 22
10125 20
10126 18
10127 17
10128 29
10129 32
10136 34
10137 39
10138 37
10141 36
10144 34
10145 39
10146 37
10147 35
10148 34
10149 32
10156 34
10157 39
10158 37
10159 36
10162 36
10165 34
10166 39
10167 37
10168 35
10169 34
10170 37
10173 37
10176 33
10177 36
10178 35
10179 35
10181 38
10182 35
10184 38
10185 33
10186 36
10187 35
10188 32
10194 34
10195 39
10196 36
10199 36
10202 34
10203 39
10204 37
10205 35
10206 34
10207 32
10214 34
10215 39
10216 37
10217 36
10220 36
10222 34
10223 39
10224 37
10225 35
10226 34
10227 32
10234 34
10235 39
10236 37
10237 36
10240 36
10243 34
10244 39
10245 37
10246 35
10247 34
10248 37
10251 37
10254 33
10255 36
10256 35
10257 35
10259 38
10260 35
10262 38
10263 33
10264 36
10265 35
10266 32
10273 34
10274 39
10275 37
10276 36
10278 36
10281 34
10282 39
10283 37
10284 35
10285 34
10286 21
10287 24
10288 33
10291 33
10294 26
10295 31
10296 29
10297 28
10298 35
10299 32
10300 28
10301 35
10302 32
10303 26
10304 31
10305 29
10306 27
10307 26
10308 24
10309 33
10312 33
10315 26
10316 31
10317 29
10318 28
10319 35
10320 32
10321 28
10322 35
10323 32
10324 26
10325 31
10326 29
10327 27
10328 26
10329 29
10330 38
10331 34
10332 29
10333 38
10334 34
10335 25
10336 28
10337 27
10338 27
10339 32
10340 30
10341 27
10342 32
10343 30
10344 25
10345 28
10346 27
10347 24
10348 33
10351 33
10354 26
10355 31
10356 29
10357 28
10358 35
10359 32
10360 28
10361 35
10362 32
10363 26
10364 31
10365 29
10366 27
10367 26
10368 24
10369 33
10372 33
10374 26
10375 31
10376 29
10377 35
10378 32
10379 28
10380 35
10381 32
10382 26
10383 31
10384 29
10385 27
10386 26
10387 24
10388 33
10391 33
10394 26
10395 31
10396 29
10397 28
10398 35
10399 32
10400 28
10401 35
10402 32
10403 26
10404 31
10405 29
10406 27
10407 26
10408 29
10409 38
10410 34
10411 29
10412 38
10413 34
10414 25
10415 28
10416 27
10417 27
10418 32
10419 30
10420 27
10421 30
10422 25
10423 28
10424 27
10425 24
10426 33
10429 33
10432 26
10433 31
10434 28
10435 35
10436 32
10437 28
10438 35
10439 32
10440 26
10441 31
10442 29
10443 27
10444 26
10445 5
10446 8
10447 34
10448 26
10449 17
10450 34
10451 26
10452 10
10453 13
10454 12
10455 19
10456 16
10457 12
10458 19
10459 16
10460 10
10461 15
10462 11
10463 10
10464 8
10465 17
10466 34
10467 26
10468 17
10469 34
10470 26
10471 10
10472 13
10473 12
10474 19
10475 16
10476 12
10477 19
10478 16
10479 10
10480 15
10481 13
10482 11
10483 10
10484 13
10485 22
10486 18
10487 13
10488 22
10489 18
10490 9
10491 12
10492 11
10493 11
10494 14
10495 11
10496 16
10497 14
10498 9
10499 12
10500 11
10501 8
10502 17
10503 34
10504 26
10505 17
10506 34
10507 26
10508 10
10509 15
10510 13
10511 12
10512 19
10513 16
10514 12
10515 19
10516 16
10517 10
10518 15
10519 13
10520 11
10521 10
10522 8
10523 17
10524 34
10525 26
10526 17
10527 34
10528 26
10529 10
10530 15
10531 13
10532 12
10533 19
10534 16
10535 12
10536 19
10537 16
10538 10
10539 15
10540 13
10541 11
10542 10
10543 8
10544 17
10545 34
10546 26
10547 17
10548 34
10549 26
10550 10
10551 15
10552 13
10553 12
10554 19
10555 16
10556 12
10557 19
10558 16
10559 10
10560 15
10561 13
10562 11
10563 10
10564 13
10565 22
10566 18
10567 13
10568 22
10569 18
10570 9
10571 12
10572 11
10573 16
10574 14
10575 11
10576 16
10577 14
10578 9
10579 12
10580 11
10581 8
10582 17
10583 26
10584 17
10585 34
10586 26
10587 10
10588 15
10589 13
10590 12
10591 19
10592 16
10593 12
10594 19
10595 10
10596 13
10597 11
10598 10
10599 13
10600 22
10601 39
10602 31
10603 22
10604 39
10605 31
10606 15
10607 20
10608 18
10609 17
10610 24
10611 21
10612 17
10613 24
10614 21
10615 15
10616 20
10617 18
10618 16
10619 15
10620 13
10621 22
10622 39
10623 31
10624 22
10625 39
10626 31
10627 15
10628 20
10629 18
10630 17
10631 24
10632 21
10633 17
10634 24
10635 21
10636 15
10637 20
10638 18
10639 16
10640 15
10641 18
10642 27
10643 23
10644 18
10645 27
10646 23
10647 14
10648 17
10649 16
10650 16
10651 21
10652 19
10653 16
10654 21
10655 19
10656 14
10657 17
10658 16
10659 13
10660 22
10661 39
10662 31
10663 22
10664 39
10665 31
10666 15
10667 20
10668 18
10669 17
10670 24
10671 17
10672 24
10673 21
10674 15
10675 20
10676 18
10677 16
10678 15
10679 13
10680 22
10681 31
10682 22
10683 39
10684 31
10685 15
10686 20
10687 18
10688 17
10689 24
10690 21
10691 17
10692 24
10693 21
10694 15
10695 20
10696 18
10697 16
10698 15
10699 13
10700 22
10701 39
10702 31
10703 39
10704 31
10705 15
10706 20
10707 18
10708 17
10709 24
10710 21
10711 17
10712 24
10713 21
10714 15
10715 20
10716 16
10717 15
10718 18
10719 27
10720 23
10721 18
10722 27
10723 23
10724 14
10725 17
10726 16
10727 21
10728 19
10729 21
10730 19
10731 14
10732 17
10733 13
10734 22
10735 39
10736 31
10737 22
10738 39
10739 31
10740 15
10741 20
10742 18
10743 17
10744 24
10745 21
10746 17
10747 24
10748 15
10749 20
10750 18
10751 16
10752 15
10753 8
10754 11
10755 20
10756 37
10757 29
10758 20
10759 37
10760 29
10761 13
10762 18
10763 16
10764 15
10765 22
10766 19
10767 15
10768 19
10769 13
10770 18
10771 16
10772 14
10773 13
10774 11
10775 20
10776 37
10777 29
10778 20
10779 37
10780 29
10781 13
10782 18
10783 16
10784 15
10785 22
10786 15
10787 22
10788 19
10789 13
10790 18
10791 16
10792 14
10793 13
10794 16
10795 25
10796 21
10797 16
10798 25
10799 21
10800 12
10801 15
10802 14
10803 14
10804 19
10805 17
10806 14
10807 19
10808 17
10809 12
10810 15
10811 14
10812 11
10813 20
10814 37
10815 29
10816 20
10817 37
10818 29
10819 13
10820 18
10821 15
10822 22
10823 19
10824 15
10825 19
10826 13
10827 18
10828 16
10829 14
10830 13
10831 11
10832 20
10833 37
10834 20
10835 37
10836 29
10837 13
10838 18
10839 16
10840 15
10841 22
10842 19
10843 15
10844 22
10845 19
10846 13
10847 18
10848 16
10849 14
10850 13
10851 11
10852 20
10853 37
10854 29
10855 20
10856 37
10857 29
10858 13
10859 18
10860 16
10861 15
10862 22
10863 19
10864 15
10865 22
10866 19
10867 13
10868 18
10869 16
10870 14
10871 16
10872 25
10873 21
10874 16
10875 25
10876 21
10877 12
10878 15
10879 14
10880 14
10881 19
10882 17
10883 14
10884 19
10885 17
10886 12
10887 15
10888 14
10889 11
10890 20
10891 37
10892 29
10893 20
10894 37
10895 13
10896 18
10897 16
10898 15
10899 22
10900 19
10901 15
10902 22
10903 19
10904 13
10905 18
10906 16
10907 14
10908 13
10909 7
10910 10
10911 19
10912 36
10913 19
10914 36
10915 28
10916 12
10917 17
10918 15
10919 14
10920 21
10921 18
10922 14
10923 21
10924 18
10925 12
10926 17
10927 15
10928 13
10929 10
10930 19
10931 36
10932 19
10933 36
10934 28
10935 12
10936 17
10937 14
10938 21
10939 18
10940 14
10941 18
10942 12
10943 17
10944 15
10945 13
10946 12
10947 15
10948 24
10949 20
10950 15
10951 24
10952 20
10953 11
10954 14
10955 13
10956 13
10957 18
10958 16
10959 13
10960 18
10961 16
10962 11
10963 14
10964 13
10965 10
10966 19
10967 36
10968 28
10969 19
10970 36
10971 28
10972 12
10973 17
10974 15
10975 14
10976 21
10977 18
10978 14
10979 21
10980 18
10981 12
10982 17
10983 15
10984 13
10985 12
10986 10
10987 19
10988 36
10989 28
10990 19
10991 36
10992 28
10993 12
10994 17
10995 15
10996 21
10997 18
10998 14
10999 21
11000 18
11001 12
11002 15
11003 13
11004 12
11005 10
11006 19
11007 36
11008 28
11009 19
11010 36
11011 28
11012 12
11013 17
11014 15
11015 14
11016 21
11017 18
11018 14
11019 21
11020 18
11021 12
11022 15
11023 13
11024 12
11025 15
11026 24
11027 20
11028 15
11029 24
11030 20
11031 11
11032 14
11033 13
11034 13
11035 18
11036 16
11037 13
11038 18
11039 16
11040 11
11041 14
11042 13
11043 10
11044 19
11045 36
11046 28
11047 19
11048 36
11049 28
11050 12
11051 17
11052 15
11053 14
11054 21
11055 18
11056 14
11057 21
11058 18
11059 12
11060 17
11061 15
11062 13
11063 12
11064 14
11065 17
11066 26
11068 35
11069 26
11071 35
11072 19
11073 24
11074 22
11075 21
11076 28
11077 25
11078 21
11079 28
11080 25
11081 19
11082 24
11083 22
11084 19
11085 17
11086 26
11088 35
11089 26
11091 35
11092 19
11093 22
11094 21
11095 28
11096 25
11097 21
11098 28
11099 25
11100 19
11101 24
11102 20
11103 19
11104 22
11105 31
11106 27
11107 22
11108 31
11109 27
11110 18
11111 21
11112 20
11113 25
11114 23
11115 20
11116 25
11117 23
11118 18
11119 21
11120 20
11121 17
11122 26
11124 35
11125 26
11127 35
11128 19
11129 24
11130 22
11131 21
11132 28
11133 25
11134 21
11135 28
11136 25
11137 19
11138 24
11139 22
11140 20
11141 19
11142 17
11143 26
11145 35
11146 26
11148 35
11149 19
11150 22
11151 21
11152 28
11153 25
11154 21
11155 28
11156 25
11157 19
11158 24
11159 22
11160 20
11161 19
11162 17
11163 26
11165 35
11166 26
11168 35
11169 24
11170 22
11171 21
11172 28
11173 25
11174 21
11175 28
11176 25
11177 24
11178 22
11179 20
11180 19
11181 22
11182 31
11183 27
11184 22
11185 31
11186 27
11187 18
11188 21
11189 20
11190 20
11191 25
11192 23
11193 20
11194 23
11195 18
11196 21
11197 20
11198 17
11199 26
11201 35
11202 26
11204 35
11205 19
11206 24
11207 22
11208 21
11209 28
11210 25
11211 21
11212 28
11213 25
11214 19
11215 24
11216 22
11217 19
11218 11
11219 14
11220 23
11222 32
11223 23
11224 32
11225 16
11226 21
11227 19
11228 18
11229 25
11230 22
11231 18
11232 25
11233 22
11234 16
11235 21
11236 19
11237 17
11238 16
11239 14
11240 23
11242 32
11243 23
11245 32
11246 16
11247 21
11248 19
11249 18
11250 25
11251 22
11252 18
11253 25
11254 22
11255 16
11256 21
11257 19
11258 17
11259 16
11260 19
11261 28
11262 24
11263 19
11264 28
11265 24
11266 15
11267 18
11268 17
11269 17
11270 22
11271 20
11272 17
11273 22
11274 20
11275 15
11276 18
11277 17
11278 14
11279 23
11281 32
11282 23
11284 32
11285 16
11286 21
11287 19
11288 25
11289 22
11290 18
11291 25
11292 22
11293 16
11294 21
11295 19
11296 17
11297 16
11298 14
11299 23
11301 32
11302 23
11303 32
11304 16
11305 21
11306 19
11307 18
11308 25
11309 22
11310 18
11311 25
11312 22
11313 16
11314 21
11315 19
11316 17
11317 16
11318 14
11319 23
11321 32
11322 23
11324 32
11325 16
11326 21
11327 19
11328 18
11329 25
11330 22
11331 18
11332 25
11333 22
11334 16
11335 21
11336 19
11337 17
11338 16
11339 19
11340 28
11341 24
11342 19
11343 28
11344 24
11345 15
11346 18
11347 17
11348 17
11349 22
11350 20
11351 17
11352 22
11353 20
11354 15
11355 18
11356 17
11357 14
11358 23
11359 32
11360 23
11362 32
11363 16
11364 21
11365 19
11366 18
11367 25
11368 22
11369 18
11370 25
11371 22
11372 16
11373 21
11374 19
11375 17
11376 16
11377 7
11378 10
11379 19
11380 36
11381 28
11382 19
11383 28
11384 12
11385 17
11386 15
11387 14
11388 21
11389 18
11390 21
11391 18
11392 12
11393 17
11394 15
11395 12
11396 19
11397 36
11398 28
11399 19
11400 36
11401 28
11402 12
11403 17
11404 15
11405 14
11406 21
11407 18
11408 14
11409 18
11410 17
11411 15
11412 13
11413 12
11414 15
11415 24
11416 20
11417 15
11418 24
11419 20
11420 14
11421 13
11422 13
11423 18
11424 16
11425 13
11426 18
11427 16
11428 11
11429 14
11430 13
11431 10
11432 19
11433 36
11434 28
11435 19
11436 36
11437 28
11438 12
11439 17
11440 15
11441 14
11442 21
11443 18
11444 14
11445 21
11446 18
11447 12
11448 17
11449 15
11450 13
11451 12
11452 10
11453 19
11454 36
11455 28
11456 36
11457 28
11458 12
11459 17
11460 15
11461 14
11462 21
11463 18
11464 14
11465 21
11466 18
11467 12
11468 17
11469 15
11470 13
11471 12
11472 10
11473 19
11474 36
11475 28
11476 19
11477 36
11478 28
11479 17
11480 15
11481 14
11482 21
11483 18
11484 14
11485 21
11486 18
11487 12
11488 17
11489 15
11490 13
11491 12
11492 15
11493 24
11494 20
11495 15
11496 24
11497 20
11498 11
11499 14
11500 13
11501 13
11502 18
11503 16
11504 13
11505 18
11506 16
11507 11
11508 14
11509 13
11510 10
11511 19
11512 36
11513 28
11514 19
11515 36
11516 28
11517 12
11518 17
11519 15
11520 14
11521 21
11522 18
11523 14
11524 21
11525 18
11526 12
11527 17
11528 15
11529 13
11530 12
11531 14
11532 17
11533 26
11535 35
11536 26
11538 35
11539 19
11540 24
11541 22
11542 21
11543 28
11544 25
11545 21
11546 28
11547 25
11548 19
11549 24
11550 22
11551 20
11552 19
11553 17
11554 26
11555 35
11556 26
11558 35
11559 19
11560 24
11561 21
11562 25
11563 21
11564 28
11565 25
11566 19
11567 24
11568 22
11569 20
11570 19
11571 22
11572 31
11573 27
11574 22
11575 31
11576 27
11577 18
11578 21
11579 20
11580 20
11581 25
11582 23
11583 20
11584 25
11585 23
11586 18
11587 21
11588 20
11589 17
11590 26
11592 35
11593 26
11595 35
11596 19
11597 24
11598 22
11599 21
11600 28
11601 25
11602 21
11603 28
11604 25
11605 19
11606 24
11607 22
11608 20
11609 19
11610 17
11611 26
11613 35
11614 26
11616 35
11617 19
11618 24
11619 22
11620 21
11621 28
11622 25
11623 21
11624 28
11625 25
11626 19
11627 24
11628 22
11629 20
11630 19
11631 17
11632 26
11634 26
11636 35
11637 19
11638 24
11639 22
11640 21
11641 28
11642 25
11643 21
11644 28
11645 25
11646 19
11647 24
11648 22
11649 20
11650 19
11651 22
11652 31
11653 27
11654 22
11655 31
11656 27
11657 18
11658 21
11659 20
11660 20
11661 25
11662 20
11663 23
11664 18
11665 21
11666 20
11667 17
11668 26
11670 35
11671 26
11673 35
11674 19
11675 24
11676 22
11677 21
11678 28
11679 25
11680 21
11681 28
11682 25
11683 19
11684 24
11685 22
11686 20
11687 19
11688 11
11689 14
11690 23
11692 32
11693 23
11695 32
11696 16
11697 21
11698 19
11699 18
11700 25
11701 22
11702 18
11703 25
11704 22
11705 16
11706 21
11707 19
11708 16
11709 14
11710 23
11712 32
11714 32
11715 16
11716 21
11717 19
11718 18
11719 25
11720 25
11721 22
11722 16
11723 21
11724 19
11725 17
11726 16
11727 19
11728 28
11729 24
11730 19
11731 28
11732 24
11733 15
11734 18
11735 17
11736 17
11737 22
11738 20
11739 22
11740 20
11741 15
11742 18
11743 17
11744 23
11746 32
11747 23
11749 32
11750 16
11751 21
11752 19
11753 18
11754 25
11755 22
11756 18
11757 25
11758 22
11759 16
11760 21
11761 19
11762 17
11763 16
11764 14
11765 23
11767 32
11768 32
11769 19
11770 18
11771 25
11772 22
11773 25
11774 22
11775 16
11776 21
11777 19
11778 17
11779 16
11780 14
11781 23
11783 32
11784 23
11786 32
11787 16
11788 21
11789 19
11790 18
11791 25
11792 22
11793 18
11794 25
11795 22
11796 16
11797 21
11798 19
11799 17
11800 16
11801 19
11802 28
11803 24
11804 19
11805 28
11806 24
11807 15
11808 18
11809 17
11810 17
11811 22
11812 20
11813 17
11814 22
11815 20
11816 15
11817 18
11818 17
11819 14
11820 23
11822 32
11823 23
11825 32
11826 16
11827 21
11828 19
11829 18
11830 25
11831 22
11832 25
11833 22
11834 16
11835 21
11836 19
11837 17
11838 16
11839 5
11840 8
11841 17
11842 34
11843 17
11844 34
11845 26
11846 10
11847 15
11848 13
11849 12
11850 19
11851 16
11852 12
11853 19
11854 16
11855 10
11856 15
11857 13
11858 11
11859 10
11860 8
11861 17
11862 34
11863 26
11864 17
11865 34
11866 26
11867 15
11868 13
11869 12
11870 19
11871 16
11872 12
11873 19
11874 16
11875 10
11876 15
11877 13
11878 11
11879 10
11880 13
11881 22
11882 18
11883 13
11884 18
11885 9
11886 12
11887 11
11888 11
11889 16
11890 11
11891 16
11892 14
11893 12
11894 11
11895 8
11896 17
11897 34
11898 26
11899 17
11900 34
11901 26
11902 10
11903 15
11904 13
11905 12
11906 19
11907 16
11908 12
11909 19
11910 16
11911 10
11912 15
11913 13
11914 11
11915 10
11916 8
11917 17
11918 34
11919 26
11920 17
11921 34
11922 26
11923 10
11924 15
11925 13
11926 12
11927 19
11928 16
11929 12
11930 19
11931 16
11932 10
11933 15
11934 13
11935 11
11936 10
11937 8
11938 17
11939 34
11940 26
11941 17
11942 34
11943 26
11944 10
11945 15
11946 13
11947 12
11948 19
11949 16
11950 12
11951 19
11952 16
11953 10
11954 15
11955 13
11956 11
11957 10
11958 13
11959 22
11960 18
11961 13
11962 22
11963 18
11964 12
11965 11
11966 11
11967 16
11968 14
11969 11
11970 16
11971 14
11972 9
11973 12
11974 11
11975 8
11976 17
11977 34
11978 26
11979 17
11980 34
11981 26
11982 10
11983 15
11984 13
11985 12
11986 19
11987 16
11988 12
11989 19
11990 16
11991 10
11992 15
11993 13
11994 11
11995 10
11996 13
11997 22
11998 39
11999 31
12000 22
12001 39
12002 31
12003 15
12004 20
12005 18
12006 17
12007 24
12008 21
12009 17
12010 21
12011 15
12012 20
12013 18
12014 16
12015 15
12016 13
12017 22
12018 39
12019 31
12020 22
12021 39
12022 31
12023 15
12024 18
12025 17
12026 24
12027 21
12028 17
12029 24
12030 21
12031 15
12032 20
12033 18
12034 16
12035 15
12036 18
12037 27
12038 23
12039 18
12040 27
12041 23
12042 14
12043 17
12044 16
12045 16
12046 21
12047 19
12048 16
12049 21
12050 19
12051 14
12052 17
12053 22
12054 39
12055 31
12056 22
12057 39
12058 31
12059 15
12060 20
12061 18
12062 17
12063 24
12064 21
12065 17
12066 24
12067 21
12068 15
12069 16
12070 15
12071 13
12072 22
12073 39
12074 31
12075 22
12076 39
12077 31
12078 15
12079 20
12080 17
12081 24
12082 21
12083 17
12084 24
12085 15
12086 20
12087 18
12088 16
12089 15
12090 13
12091 22
12092 39
12093 31
12094 22
12095 39
12096 31
12097 15
12098 20
12099 18
12100 17
12101 24
12102 21
12103 17
12104 24
12105 21
12106 15
12107 20
12108 18
12109 16
12110 15
12111 18
12112 27
12113 23
12114 18
12115 27
12116 23
12117 14
12118 17
12119 16
12120 16
12121 19
12122 16
12123 21
12124 19
12125 14
12126 17
12127 16
12128 13
12129 22
12130 39
12131 31
12132 22
12133 39
12134 31
12135 15
12136 20
12137 18
12138 17
12139 24
12140 21
12141 17
12142 24
12143 21
12144 15
12145 20
12146 18
12147 16
12148 15
12149 8
12150 11
12151 20
12152 37
12153 29
12154 20
12155 37
12156 29
12157 13
12158 18
12159 16
12160 15
12161 22
12162 19
12163 15
12164 22
12165 19
12166 13
12167 18
12168 16
12169 14
12170 13
12171 11
12172 20
12173 37
12174 29
12175 20
12176 37
12177 29
12178 13
12179 18
12180 16
12181 15
12182 22
12183 19
12184 15
12185 22
12186 19
12187 13
12188 18
12189 16
12190 14
12191 13
12192 16
12193 25
12194 21
12195 16
12196 25
12197 21
12198 12
12199 15
12200 14
12201 14
12202 19
12203 17
12204 14
12205 19
12206 12
12207 15
12208 14
12209 11
12210 20
12211 37
12212 29
12213 20
12214 37
12215 29
12216 13
12217 18
12218 16
12219 15
12220 22
12221 19
12222 15
12223 22
12224 19
12225 13
12226 18
12227 16
12228 14
12229 13
12230 11
12231 20
12232 37
12233 29
12234 20
12235 37
12236 29
12237 13
12238 18
12239 16
12240 15
12241 22
12242 19
12243 22
12244 19
12245 13
12246 18
12247 14
12248 13
12249 11
12250 20
12251 37
12252 29
12253 20
12254 37
12255 29
12256 13
12257 18
12258 16
12259 15
12260 22
12261 19
12262 15
12263 22
12264 19
12265 13
12266 16
12267 14
12268 13
12269 16
12270 25
12271 21
12272 16
12273 25
12274 21
12275 12
12276 15
12277 14
12278 14
12279 17
12280 14
12281 19
12282 17
12283 12
12284 15
12285 14
12286 11
12287 20
12288 37
12289 29
12290 20
12291 37
12292 29
12293 13
12294 18
12295 16
12296 15
12297 22
12298 19
12299 15
12300 22
12301 19
12302 13
12303 18
12304 16
12305 14
12306 13
12307 6
12308 9
12309 18
12310 35
12311 27
12312 18
12313 35
12314 11
12315 16
12316 14
12317 13
12318 20
12319 17
12320 13
12321 17
12322 11
12323 16
12324 14
12325 12
12326 11
12327 9
12328 18
12329 35
12330 27
12331 18
12332 35
12333 27
12334 11
12335 16
12336 14
12337 13
12338 20
12339 13
12340 17
12341 11
12342 16
12343 14
12344 12
12345 11
12346 14
12347 23
12348 19
12349 14
12350 23
12351 19
12352 10
12353 13
12354 12
12355 12
12356 17
12357 15
12358 12
12359 17
12360 15
12361 10
12362 13
12363 12
12364 9
12365 18
12366 35
12367 27
12368 18
12369 35
12370 27
12371 11
12372 16
12373 14
12374 20
12375 17
12376 13
12377 20
12378 17
12379 11
12380 16
12381 14
12382 12
12383 11
12384 9
12385 18
12386 35
12387 27
12388 18
12389 35
12390 27
12391 11
12392 16
12393 14
12394 13
12395 20
12396 17
12397 13
12398 20
12399 17
12400 11
12401 16
12402 14
12403 12
12404 11
12405 9
12406 18
12407 35
12408 18
12409 35
12410 27
12411 11
12412 16
12413 14
12414 13
12415 20
12416 17
12417 13
12418 20
12419 17
12420 11
12421 16
12422 14
12423 12
12424 11
12425 14
12426 23
12427 19
12428 14
12429 23
12430 19
12431 10
12432 13
12433 12
12434 12
12435 17
12436 15
12437 12
12438 17
12439 15
12440 10
12441 13
12442 12
12443 9
12444 35
12445 27
12446 18
12447 35
12448 27
12449 11
12450 16
12451 14
12452 20
12453 17
12454 13
12455 20
12456 17
12457 11
12458 16
12459 14
12460 12
12461 11
12462 5
12463 8
12464 17
12465 34
12466 26
12467 17
12468 34
12469 26
12470 10
12471 15
12472 13
12473 12
12474 19
12475 16
12476 12
12477 19
12478 16
12479 10
12480 15
12481 13
12482 11
12483 10
12484 8
12485 17
12486 34
12487 26
12488 17
12489 34
12490 26
12491 10
12492 15
12493 13
12494 12
12495 19
12496 16
12497 12
12498 19
12499 16
12500 10
12501 15
12502 13
12503 10
12504 13
12505 22
12506 18
12507 13
12508 22
12509 18
12510 9
12511 12
12512 11
12513 11
12514 16
12515 14
12516 11
12517 16
12518 14
12519 9
12520 12
12521 11
12522 8
12523 17
12524 34
12525 26
12526 17
12527 34
12528 26
12529 10
12530 15
12531 13
12532 12
12533 19
12534 16
12535 12
12536 19
12537 16
12538 10
12539 15
12540 13
12541 11
12542 10
12543 8
12544 17
12545 34
12546 26
12547 17
12548 26
12549 10
12550 15
12551 13
12552 19
12553 16
12554 12
12555 19
12556 16
12557 10
12558 15
12559 13
12560 11
12561 10
12562 8
12563 17
12564 34
12565 17
12566 34
12567 26
12568 10
12569 15
12570 13
12571 12
12572 19
12573 16
12574 12
12575 19
12576 16
12577 10
12578 15
12579 13
12580 11
12581 10
12582 13
12583 22
12584 18
12585 13
12586 22
12587 18
12588 9
12589 12
12590 11
12591 11
12592 16
12593 11
12594 14
12595 9
12596 12
12597 11
12598 8
12599 17
12600 34
12601 26
12602 17
12603 34
12604 26
12605 10
12606 15
12607 13
12608 12
12609 19
12610 16
12611 12
12612 19
12613 16
12614 10
12615 15
12616 13
12617 11
12618 10
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

1
WUG0 opposite left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

2
turn around right thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

3
WUG0 around right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

4
WUG0 around left thrice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

5
WUG0 opposite right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

6
WUG0 around left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

7
WUG0 left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

8
WUG0 right twice and WUG0 left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

9
WUG0 opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

10
WUG0 left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

11
WUG0 around right twice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

12
WUG0 around left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

13
WUG0 right twice and turn left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

14
WUG0 right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

15
turn opposite left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

16
WUG0 left after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

17
WUG0 opposite left thrice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

18
WUG0 twice and turn around left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn around left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

19
WUG0 right after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

20
turn left twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

21
turn opposite right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

22
turn around right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

23
WUG0 around left thrice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

24
WUG0 around right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

25
WUG0 left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

26
WUG0 around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

27
WUG0 left twice and WUG0 opposite right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump opposite right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

28
WUG0 left I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left
--
I_TURN_LEFT I_JUMP

29
WUG0 opposite right thrice and turn right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

30
WUG0 opposite left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

31
WUG0 after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

32
turn opposite left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

33
WUG0 around right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
WUG0 opposite left thrice and turn left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

35
WUG0 opposite right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

36
WUG0 twice after turn right I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn right
--
I_TURN_RIGHT I_JUMP I_JUMP

37
WUG0 around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

38
WUG0 opposite left thrice and turn right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

39
WUG0 opposite right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

40
turn around right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

41
turn around left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

42
turn opposite left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

43
WUG0 right twice and WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

44
WUG0 around left thrice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

45
WUG0 opposite left twice and turn around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

46
WUG0 and turn left WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left
--
I_JUMP I_TURN_LEFT

47
turn around right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

48
WUG0 around left thrice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

49
WUG0 left and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

50
turn around left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

51
WUG0 opposite right after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

52
turn opposite left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

53
WUG0 right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

54
turn opposite right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

55
WUG0 around left thrice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

56
WUG0 left thrice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

57
WUG0 opposite right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

58
WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

59
WUG0 right and turn around left I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

60
WUG0 right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

61
WUG0 around right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

62
WUG0 around right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

63
turn left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

64
turn right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

65
WUG0 opposite left twice and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

66
WUG0 twice and turn left WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn left
--
I_JUMP I_JUMP I_TURN_LEFT

67
WUG0 right and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

68
WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

69
WUG0 around right twice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

70
WUG0 left thrice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

71
WUG0 right thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

72
WUG0 thrice and turn left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT

73
WUG0 around left and WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

74
WUG0 right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

75
turn around right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

76
WUG0 around right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

77
turn around right after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

78
turn right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT

79
WUG0 after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

80
WUG0 opposite left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

81
WUG0 opposite right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

82
WUG0 opposite right twice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

83
WUG0 opposite left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

84
WUG0 around left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

85
WUG0 opposite right thrice and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

86
WUG0 left twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

87
WUG0 opposite right twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

88
WUG0 right twice after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

89
WUG0 twice and WUG0 right WUG1 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP

90
WUG0 left thrice and WUG0 around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

91
WUG0 thrice and turn opposite right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

92
WUG0 left after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP

93
WUG0 after turn right I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn right
--
I_TURN_RIGHT I_JUMP

94
WUG0 opposite right after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

95
turn around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

96
turn around right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

97
WUG0 right and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

98
WUG0 right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

99
WUG0 thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

100
turn right thrice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

101
WUG0 around left after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

102
WUG0 twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

103
WUG0 around left twice and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

104
WUG0 opposite left and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

105
turn opposite left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

106
turn around left and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

107
WUG0 opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

108
turn right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

109
WUG0 around left thrice and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

110
WUG0 after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

111
WUG0 opposite left after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

112
turn right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

113
turn opposite left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

114
WUG0 opposite right and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

115
WUG0 right thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

116
WUG0 opposite right and turn around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

117
WUG0 right thrice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

118
WUG0 and WUG0 around left twice WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump around left twice
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

119
WUG0 opposite right and turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

120
WUG0 right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

121
WUG0 twice and WUG0 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump
--
I_JUMP I_JUMP I_JUMP

122
WUG0 opposite right twice and WUG0 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

123
WUG0 around right and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

124
turn left and WUG0 right twice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump right twice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

125
turn around right and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

126
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

127
turn opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

128
WUG0 left and turn right twice I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

129
turn left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

130
turn opposite right thrice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

131
WUG0 left after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

132
turn left and WUG0 around left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

133
WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

134
WUG0 and WUG0 right WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump right
--
I_JUMP I_TURN_RIGHT I_JUMP

135
WUG0 opposite left and turn right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

136
WUG0 after turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP

137
WUG0 thrice and turn left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

138
WUG0 left thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

139
WUG0 opposite left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

140
turn right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

141
WUG0 around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

142
turn left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

143
turn opposite left after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

144
turn opposite right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

145
WUG0 right twice and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

146
WUG0 right twice and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

147
WUG0 opposite left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

148
turn opposite right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

149
turn around right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

150
WUG0 opposite right twice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

151
turn opposite left and WUG0 around right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

152
turn right and WUG0 left thrice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

153
turn opposite right twice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

154
WUG0 twice and turn opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

155
turn around left twice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

156
WUG0 around right twice and turn around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

157
WUG0 around right thrice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

158
WUG0 around right after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

159
turn opposite right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

160
turn right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

161
WUG0 left and turn right I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT

162
WUG0 thrice and turn around right twice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around right twice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

163
WUG0 left after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

164
WUG0 left thrice after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

165
WUG0 right and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

166
WUG0 right twice and turn opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

167
turn left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

168
WUG0 opposite left twice and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

169
turn opposite right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

170
WUG0 around right and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

171
turn right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

172
WUG0 around right thrice and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

173
WUG0 around left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

174
WUG0 left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

175
WUG0 right twice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

176
WUG0 around right twice and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

177
turn opposite left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

178
turn opposite right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

179
WUG0 opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

180
turn around right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

181
turn opposite right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

182
turn around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

183
WUG0 around left twice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

184
turn right thrice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

185
WUG0 opposite right after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

186
turn right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

187
turn around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

188
WUG0 around left twice and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

189
turn around right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

190
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

191
WUG0 opposite left thrice and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

192
WUG0 right twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

193
WUG0 thrice and WUG0 around right thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around right thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

194
WUG0 around right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

195
turn left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

196
WUG0 opposite left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

197
WUG0 twice after WUG0 twice WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP

198
turn around right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

199
WUG0 opposite left and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

200
WUG0 opposite right twice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

201
WUG0 right thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

202
turn left twice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

203
WUG0 right twice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

204
turn opposite right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

205
WUG0 opposite right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

206
WUG0 right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

207
WUG0 right twice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

208
WUG0 thrice and WUG0 twice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump twice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

209
WUG0 left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP

210
WUG0 opposite left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

211
WUG0 around right and WUG0 opposite right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump opposite right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

212
turn opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

213
WUG0 around left and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

214
turn around right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

215
WUG0 opposite left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

216
WUG0 right thrice and WUG0 around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

217
WUG0 opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

218
WUG0 thrice and WUG0 left thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

219
WUG0 opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

220
WUG0 right thrice and WUG0 around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

221
WUG0 twice and WUG0 around right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump around right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

222
turn around left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

223
WUG0 after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

224
turn left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

225
WUG0 left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

226
turn opposite left and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

227
WUG0 around right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

228
WUG0 around right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

229
WUG0 around left twice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

230
WUG0 opposite right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

231
WUG0 opposite left thrice and turn around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

232
WUG0 around left twice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

233
WUG0 twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

234
WUG0 twice and WUG0 left thrice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

235
turn right after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

236
turn right thrice and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

237
WUG0 around left and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

238
turn around right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

239
turn left thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

240
WUG0 after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run after run right thrice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_RUN

241
turn right thrice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

242
WUG0 around left thrice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

243
WUG0 opposite right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

244
WUG0 opposite right and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

245
turn opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

246
WUG0 right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT

247
WUG0 right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

248
WUG0 left and WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

249
WUG0 around left and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

250
WUG0 around left twice and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

251
turn around left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

252
WUG0 right and turn around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

253
WUG0 thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

254
turn left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

255
WUG0 opposite right thrice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

256
WUG0 around right twice and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

257
turn opposite left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

258
WUG0 around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

259
turn around right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

260
WUG0 around right twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

261
turn opposite right and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

262
WUG0 left twice after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

263
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

264
WUG0 opposite right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

265
WUG0 after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

266
WUG0 right thrice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

267
WUG0 around left twice and WUG0 opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

268
WUG0 around right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

269
WUG0 right twice and WUG0 thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

270
turn left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

271
turn around left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

272
turn right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

273
WUG0 opposite right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

274
turn opposite right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

275
WUG0 around left after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

276
WUG0 opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

277
WUG0 after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

278
WUG0 left thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

279
WUG0 right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

280
WUG0 around left and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

281
turn opposite left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

282
turn right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

283
turn around right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

284
turn around left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

285
WUG0 left twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

286
turn around left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

287
turn around right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

288
WUG0 left twice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

289
turn around left thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

290
WUG0 around left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

291
WUG0 and WUG0 opposite left twice WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump opposite left twice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

292
turn around left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

293
turn around right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

294
WUG0 around left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

295
WUG0 opposite left thrice after turn around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

296
WUG0 opposite right after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

297
turn around right after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

298
turn right and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

299
turn opposite right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

300
turn opposite right twice and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

301
turn around left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

302
turn left after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT

303
turn right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

304
WUG0 right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

305
WUG0 around right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

306
WUG0 opposite left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

307
WUG0 thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

308
WUG0 around left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

309
WUG0 opposite left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

310
turn opposite left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

311
WUG0 left twice and turn opposite left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

312
turn around right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

313
WUG0 left thrice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

314
turn right and WUG0 left twice I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump left twice
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

315
WUG0 left twice and WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

316
turn opposite right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

317
WUG0 opposite left and turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

318
turn around right twice and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

319
WUG0 around right twice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

320
WUG0 right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

321
WUG0 opposite left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

322
WUG0 around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

323
WUG0 opposite right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

324
WUG0 twice and WUG0 left WUG1 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump left
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP

325
turn around left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

326
WUG0 around right after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

327
WUG0 twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

328
turn around left twice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

329
turn opposite left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

330
WUG0 around right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

331
WUG0 opposite left twice and turn opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

332
turn left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

333
WUG0 opposite right and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

334
WUG0 around left twice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

335
WUG0 around left thrice after turn around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

336
WUG0 opposite left thrice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

337
WUG0 around left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

338
WUG0 right thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

339
WUG0 around left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

340
WUG0 right twice and WUG0 twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

341
WUG0 thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

342
turn around left thrice and WUG0 around right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

343
WUG0 and WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump
--
I_JUMP I_JUMP

344
WUG0 twice WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice
--
I_JUMP I_JUMP

345
WUG0 around right and turn opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

346
WUG0 opposite left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

347
WUG0 opposite left thrice and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

348
WUG0 twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

349
WUG0 left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

350
turn opposite left and WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

351
WUG0 opposite right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

352
WUG0 around left twice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

353
WUG0 opposite right and turn around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

354
WUG0 twice and turn opposite left thrice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left thrice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

355
WUG0 around right and WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

356
turn around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

357
turn opposite left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

358
turn opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

359
WUG0 opposite left and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

360
turn around left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

361
turn around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

362
WUG0 opposite right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

363
WUG0 left thrice and turn opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

364
WUG0 right thrice and turn around left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

365
WUG0 around right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

366
WUG0 and turn left thrice WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn left thrice
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

367
turn opposite right and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

368
WUG0 left thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

369
turn around left and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

370
WUG0 opposite right and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

371
WUG0 opposite right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

372
turn around left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

373
WUG0 around left and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

374
turn around left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

375
turn opposite left twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

376
WUG0 right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

377
WUG0 opposite right thrice and turn left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

378
WUG0 thrice and turn left WUG1 WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT

379
WUG0 around left after WUG0 twice WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

380
turn opposite right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

381
WUG0 opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

382
WUG0 opposite left twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

383
WUG0 opposite left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

384
turn right thrice and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

385
turn opposite left thrice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

386
WUG0 opposite left twice and turn around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

387
walk opposite right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_WALK {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
walk opposite right after run opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK

388
turn right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

389
turn right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

390
WUG0 left thrice after turn left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

391
WUG0 right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

392
turn WUG0 after run thrice I_RUN I_RUN I_RUN WUG1 {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
turn right after run thrice
--
I_RUN I_RUN I_RUN I_TURN_RIGHT

393
run around WUG0 thrice after turn WUG0 WUG1 WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN WUG1 I_RUN {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run around right thrice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

394
run opposite right thrice and walk opposite WUG0 I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN WUG1 WUG1 I_WALK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run opposite right thrice and walk opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK

395
look opposite WUG0 and turn left thrice WUG1 WUG1 I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
look opposite left and turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

396
WUG0 thrice after look opposite right I_TURN_RIGHT I_TURN_RIGHT I_LOOK WUG1 WUG1 WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look thrice after look opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_LOOK I_LOOK I_LOOK

397
turn left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
turn left thrice after look opposite left
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

398
WUG0 right twice after look opposite left twice I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look right twice after look opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK

399
WUG0 opposite left twice and look opposite right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_LOOK {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and look opposite right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_LOOK

400
WUG0 opposite right and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look opposite right and look thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_LOOK I_LOOK I_LOOK

401
turn right twice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

402
WUG0 right thrice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

403
WUG0 right and turn left thrice I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and turn left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

404
turn around right and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

405
WUG0 opposite left twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

406
WUG0 around right twice after WUG0 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

407
WUG0 left thrice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

408
WUG0 opposite left twice after look around right I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run opposite left twice after look around right
--
I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

409
WUG0 thrice and WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

410
WUG0 left thrice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

411
WUG0 around right twice and turn left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

412
