12639
0 3
1 3
2 6
3 15
4 32
5 24
6 15
7 32
8 24
9 8
10 11
11 10
12 17
13 14
14 10
15 17
16 14
17 8
18 13
19 11
20 9
21 8
22 6
23 15
24 32
25 24
26 15
27 32
28 24
29 8
30 13
31 11
32 10
33 14
34 17
35 14
36 8
37 13
38 9
39 8
40 11
41 20
42 16
43 11
44 20
45 16
46 7
47 10
48 9
49 9
50 14
51 12
52 9
53 14
54 12
55 7
56 10
57 9
58 6
59 15
60 32
61 24
62 15
63 32
64 24
65 8
66 11
67 10
68 17
69 14
70 10
71 17
72 14
73 8
74 13
75 11
76 9
77 8
78 6
79 32
80 24
81 15
82 32
83 24
84 8
85 13
86 11
87 10
88 17
89 14
90 10
91 14
92 8
93 13
94 11
95 9
96 8
97 6
98 15
99 32
100 24
101 15
102 32
103 24
104 8
105 13
106 11
107 10
108 17
109 14
110 10
111 17
112 14
113 8
114 13
115 11
116 9
117 8
118 11
119 20
120 16
121 11
122 20
123 16
124 7
125 10
126 9
127 9
128 14
129 12
130 9
131 14
132 12
133 7
134 10
135 9
136 6
137 15
138 32
139 24
140 15
141 32
142 24
143 8
144 13
145 11
146 10
147 17
148 14
149 10
150 17
151 14
152 8
153 13
154 9
155 8
156 15
157 24
159 33
160 24
162 33
163 17
164 22
165 20
166 19
167 23
168 19
169 26
170 23
171 17
172 22
173 20
174 18
175 17
176 15
177 24
179 33
180 24
182 33
183 17
184 22
185 20
186 19
187 26
188 23
189 19
190 26
191 23
192 17
193 22
194 20
195 18
196 17
197 20
198 29
199 25
200 20
201 29
202 25
203 16
204 19
205 18
206 18
207 23
208 21
209 18
210 23
211 21
212 16
213 19
214 18
215 24
217 33
218 24
220 33
221 17
222 22
223 20
224 19
225 26
226 23
227 19
228 26
229 23
230 17
231 22
232 20
233 18
234 17
235 15
236 24
238 33
239 24
241 33
242 17
243 22
244 20
245 19
246 26
247 23
248 19
249 26
250 17
251 22
252 20
253 18
254 17
255 15
256 24
258 33
259 24
261 33
262 17
263 22
264 20
265 19
266 26
267 23
268 23
269 17
270 22
271 20
272 18
273 17
274 20
275 29
276 25
277 20
278 29
279 25
280 16
281 19
282 18
283 18
284 23
285 21
286 18
287 23
288 21
289 16
290 19
291 18
292 24
294 33
295 24
297 33
298 17
299 22
300 20
301 19
302 26
303 23
304 19
305 26
306 23
307 17
308 22
309 20
310 18
311 17
312 29
313 32
320 34
321 39
322 37
323 36
326 36
329 34
330 39
331 37
332 35
333 34
334 32
341 34
342 39
343 37
344 36
347 36
350 34
351 39
352 37
353 35
354 34
355 37
358 37
361 33
362 36
363 35
364 35
366 38
367 35
369 38
370 33
371 36
372 35
373 32
380 34
381 39
382 37
383 36
386 36
389 34
390 39
391 37
392 35
393 34
394 32
401 34
402 39
403 37
404 36
407 36
410 34
411 39
412 37
413 35
414 34
415 32
422 39
423 37
424 36
426 36
429 39
430 37
431 35
432 34
433 37
436 37
439 33
440 36
441 35
442 35
444 38
445 35
447 38
448 33
449 36
450 35
451 32
458 34
459 39
460 37
461 36
464 36
467 34
468 39
469 37
470 35
471 34
472 21
473 24
474 33
479 26
480 31
481 29
482 35
483 28
484 35
485 32
486 26
487 31
488 27
489 26
490 24
491 33
494 33
496 26
497 31
498 29
499 28
500 35
501 32
502 28
503 35
504 32
505 26
506 31
507 29
508 27
509 26
510 29
511 38
512 34
513 29
514 38
515 34
516 25
517 28
518 27
519 27
520 32
521 30
522 27
523 32
524 30
525 25
526 28
527 27
528 24
529 33
532 33
535 26
536 31
537 29
538 28
539 35
540 28
541 35
542 32
543 26
544 31
545 29
546 27
547 26
548 24
549 33
552 33
555 26
556 31
557 29
558 28
559 35
560 32
561 28
562 35
563 32
564 26
565 31
566 29
567 27
568 26
569 24
570 33
575 26
576 31
577 29
578 28
579 35
580 32
581 28
582 35
583 32
584 26
585 31
586 29
587 27
588 26
589 29
590 38
591 34
592 29
593 38
594 34
595 25
596 28
597 27
598 27
599 32
600 30
601 27
602 32
603 30
604 25
605 28
606 27
607 24
608 33
611 33
614 26
615 29
616 28
617 35
618 32
619 28
620 35
621 32
622 26
623 31
624 29
625 27
626 26
627 12
628 15
629 24
631 33
632 24
634 33
635 17
636 22
637 20
638 19
639 26
640 23
641 19
642 26
643 23
644 17
645 18
646 17
647 15
648 24
650 33
651 24
653 33
654 22
655 20
656 19
657 26
658 23
659 19
660 26
661 23
662 17
663 22
664 20
665 18
666 17
667 20
668 29
669 20
670 29
671 25
672 16
673 18
674 23
675 21
676 18
677 23
678 21
679 16
680 19
681 18
682 15
683 24
685 24
687 33
688 17
689 22
690 20
691 19
692 26
693 23
694 19
695 26
696 23
697 17
698 22
699 20
700 18
701 17
702 15
704 33
706 33
707 17
708 22
709 20
710 19
711 26
712 23
713 19
714 26
715 23
716 17
717 22
718 20
719 18
720 17
721 15
722 24
724 33
725 24
727 33
728 17
729 22
730 20
731 19
732 26
733 23
734 19
735 26
736 23
737 17
738 22
739 20
740 18
741 17
742 20
743 29
744 25
745 20
746 29
747 25
748 16
749 19
750 18
751 18
752 23
753 21
754 18
755 23
756 21
757 16
758 19
759 15
760 24
762 33
763 24
765 33
766 17
767 22
768 20
769 19
770 26
771 23
772 19
773 26
774 23
775 17
776 22
777 20
778 18
779 17
780 29
781 32
788 34
789 37
790 36
793 36
796 34
797 39
798 37
799 35
800 34
806 34
807 39
808 37
809 36
812 36
815 34
816 39
817 37
818 35
819 34
822 37
825 33
826 36
827 35
828 35
830 38
831 35
833 38
834 36
835 35
836 32
843 34
844 39
845 37
846 36
849 36
852 34
853 39
854 37
855 35
856 34
857 32
864 34
865 39
866 37
867 36
870 36
873 34
874 39
875 37
876 35
877 34
878 32
884 34
885 39
886 37
887 36
890 36
893 39
894 37
895 35
896 34
897 37
900 37
903 36
904 35
905 35
907 38
908 35
910 38
911 33
912 36
913 35
914 32
921 34
922 39
923 37
924 36
927 36
930 34
931 39
932 35
933 34
934 21
935 24
936 33
938 33
941 26
942 31
943 29
944 28
945 35
946 32
947 28
948 35
949 32
950 26
951 31
952 29
953 27
954 26
955 24
956 33
959 33
962 26
963 31
964 28
965 35
966 32
967 35
968 32
969 26
970 31
971 29
972 27
973 26
974 38
975 34
976 29
977 38
978 34
979 25
980 27
981 27
982 32
983 30
984 27
985 32
986 30
987 25
988 28
989 27
990 24
991 33
994 33
997 26
998 31
999 29
1000 28
1001 35
1002 32
1003 28
1004 35
1005 32
1006 26
1007 31
1008 29
1009 27
1010 26
1011 24
1012 33
1015 33
1018 26
1019 31
1020 29
1021 28
1022 35
1023 32
1024 28
1025 35
1026 32
1027 31
1028 29
1029 27
1030 24
1031 33
1034 33
1037 31
1038 29
1039 28
1040 35
1041 32
1042 28
1043 35
1044 32
1045 26
1046 31
1047 29
1048 27
1049 26
1050 38
1051 34
1052 29
1053 38
1054 34
1055 25
1056 28
1057 27
1058 27
1059 32
1060 30
1061 27
1062 32
1063 30
1064 25
1065 27
1066 24
1067 33
1070 33
1073 26
1074 31
1075 29
1076 28
1077 35
1078 32
1079 28
1080 32
1081 26
1082 31
1083 29
1084 27
1085 26
1086 5
1087 8
1088 17
1089 34
1090 26
1091 17
1092 34
1093 26
1094 10
1095 15
1096 13
1097 12
1098 19
1099 16
1100 12
1101 19
1102 16
1103 10
1104 15
1105 13
1106 11
1107 10
1108 8
1109 17
1110 34
1111 26
1112 17
1113 34
1114 26
1115 10
1116 15
1117 13
1118 12
1119 19
1120 16
1121 12
1122 19
1123 10
1124 15
1125 13
1126 10
1127 13
1128 22
1129 18
1130 13
1131 22
1132 18
1133 9
1134 12
1135 11
1136 11
1137 16
1138 14
1139 11
1140 16
1141 14
1142 9
1143 12
1144 11
1145 8
1146 17
1147 34
1148 26
1149 17
1150 34
1151 26
1152 10
1153 15
1154 13
1155 12
1156 19
1157 16
1158 19
1159 10
1160 15
1161 13
1162 11
1163 10
1164 8
1165 17
1166 34
1167 17
1168 34
1169 26
1170 10
1171 15
1172 13
1173 12
1174 19
1175 16
1176 12
1177 19
1178 16
1179 10
1180 15
1181 13
1182 11
1183 10
1184 8
1185 17
1186 34
1187 26
1188 17
1189 34
1190 26
1191 10
1192 15
1193 13
1194 12
1195 19
1196 16
1197 12
1198 19
1199 16
1200 10
1201 15
1202 13
1203 11
1204 10
1205 13
1206 22
1207 18
1208 13
1209 22
1210 18
1211 12
1212 11
1213 11
1214 16
1215 14
1216 11
1217 16
1218 14
1219 9
1220 12
1221 11
1222 8
1223 17
1224 34
1225 26
1226 17
1227 34
1228 26
1229 10
1230 15
1231 13
1232 12
1233 19
1234 16
1235 12
1236 19
1237 16
1238 10
1239 15
1240 13
1241 11
1242 10
1243 13
1244 22
1245 39
1246 31
1247 22
1248 39
1249 31
1250 15
1251 20
1252 18
1253 17
1254 24
1255 21
1256 17
1257 24
1258 21
1259 15
1260 20
1261 18
1262 16
1263 15
1264 13
1265 22
1266 39
1267 31
1268 22
1269 39
1270 31
1271 15
1272 20
1273 18
1274 17
1275 24
1276 21
1277 17
1278 24
1279 21
1280 15
1281 20
1282 18
1283 16
1284 15
1285 18
1286 27
1287 23
1288 18
1289 23
1290 14
1291 17
1292 16
1293 16
1294 21
1295 19
1296 16
1297 21
1298 19
1299 14
1300 17
1301 16
1302 13
1303 22
1304 39
1305 31
1306 22
1307 39
1308 31
1309 15
1310 20
1311 18
1312 17
1313 24
1314 21
1315 17
1316 24
1317 21
1318 15
1319 20
1320 18
1321 16
1322 15
1323 22
1324 39
1325 31
1326 22
1327 39
1328 31
1329 15
1330 20
1331 18
1332 17
1333 24
1334 21
1335 17
1336 24
1337 21
1338 15
1339 20
1340 18
1341 16
1342 15
1343 13
1344 22
1345 39
1346 31
1347 22
1348 31
1349 15
1350 20
1351 18
1352 17
1353 24
1354 21
1355 17
1356 24
1357 21
1358 15
1359 20
1360 18
1361 16
1362 15
1363 18
1364 27
1365 23
1366 18
1367 27
1368 23
1369 14
1370 17
1371 16
1372 16
1373 21
1374 19
1375 16
1376 21
1377 19
1378 14
1379 17
1380 16
1381 13
1382 22
1383 39
1384 31
1385 22
1386 39
1387 31
1388 15
1389 20
1390 18
1391 17
1392 24
1393 21
1394 17
1395 24
1396 15
1397 20
1398 18
1399 16
1400 15
1401 8
1402 11
1403 20
1404 37
1405 29
1406 20
1407 37
1408 29
1409 13
1410 18
1411 16
1412 22
1413 19
1414 15
1415 22
1416 19
1417 13
1418 18
1419 16
1420 14
1421 13
1422 11
1423 20
1424 37
1425 29
1426 20
1427 37
1428 29
1429 13
1430 18
1431 16
1432 15
1433 22
1434 19
1435 15
1436 22
1437 19
1438 13
1439 18
1440 16
1441 14
1442 13
1443 16
1444 25
1445 21
1446 16
1447 25
1448 21
1449 12
1450 15
1451 14
1452 14
1453 19
1454 17
1455 14
1456 19
1457 17
1458 12
1459 15
1460 14
1461 11
1462 20
1463 37
1464 29
1465 20
1466 37
1467 29
1468 13
1469 18
1470 16
1471 15
1472 22
1473 19
1474 15
1475 22
1476 19
1477 13
1478 18
1479 16
1480 14
1481 13
1482 11
1483 20
1484 29
1485 20
1486 37
1487 29
1488 13
1489 18
1490 16
1491 15
1492 22
1493 19
1494 15
1495 19
1496 13
1497 18
1498 16
1499 14
1500 13
1501 11
1502 20
1503 37
1504 29
1505 20
1506 37
1507 29
1508 13
1509 18
1510 16
1511 15
1512 22
1513 19
1514 15
1515 22
1516 19
1517 13
1518 18
1519 16
1520 14
1521 16
1522 25
1523 21
1524 16
1525 25
1526 21
1527 12
1528 15
1529 14
1530 14
1531 19
1532 17
1533 14
1534 19
1535 17
1536 12
1537 15
1538 14
1539 11
1540 20
1541 37
1542 29
1543 20
1544 37
1545 29
1546 13
1547 18
1548 16
1549 15
1550 22
1551 19
1552 15
1553 22
1554 19
1555 13
1556 18
1557 16
1558 14
1559 13
1560 7
1561 19
1562 36
1563 28
1564 19
1565 28
1566 12
1567 17
1568 15
1569 14
1570 21
1571 18
1572 14
1573 21
1574 18
1575 12
1576 17
1577 15
1578 13
1579 12
1580 10
1581 19
1582 36
1583 28
1584 19
1585 36
1586 28
1587 12
1588 17
1589 15
1590 14
1591 21
1592 18
1593 14
1594 21
1595 18
1596 12
1597 17
1598 15
1599 13
1600 12
1601 15
1602 24
1603 20
1604 15
1605 24
1606 20
1607 11
1608 14
1609 13
1610 18
1611 16
1612 13
1613 18
1614 16
1615 11
1616 14
1617 13
1618 10
1619 19
1620 36
1621 28
1622 19
1623 28
1624 12
1625 17
1626 15
1627 14
1628 21
1629 18
1630 14
1631 21
1632 18
1633 12
1634 17
1635 15
1636 13
1637 12
1638 10
1639 19
1640 36
1641 28
1642 19
1643 28
1644 12
1645 17
1646 14
1647 21
1648 18
1649 14
1650 21
1651 18
1652 12
1653 17
1654 15
1655 13
1656 12
1657 10
1658 19
1659 36
1660 28
1661 19
1662 36
1663 28
1664 12
1665 17
1666 15
1667 14
1668 21
1669 18
1670 14
1671 21
1672 18
1673 12
1674 17
1675 15
1676 13
1677 15
1678 24
1679 20
1680 15
1681 24
1682 20
1683 11
1684 14
1685 13
1686 13
1687 18
1688 16
1689 13
1690 18
1691 16
1692 11
1693 14
1694 13
1695 10
1696 19
1697 19
1698 36
1699 28
1700 12
1701 17
1702 15
1703 14
1704 21
1705 18
1706 14
1707 21
1708 18
1709 12
1710 17
1711 15
1712 13
1713 12
1714 14
1715 17
1716 26
1718 35
1719 26
1721 35
1722 19
1723 24
1724 22
1725 21
1726 28
1727 25
1728 21
1729 28
1730 25
1731 24
1732 22
1733 19
1734 17
1736 35
1737 26
1739 35
1740 19
1741 24
1742 22
1743 21
1744 28
1745 25
1746 21
1747 28
1748 25
1749 19
1750 24
1751 22
1752 20
1753 19
1754 22
1755 31
1756 27
1757 22
1758 31
1759 27
1760 21
1761 20
1762 20
1763 25
1764 23
1765 20
1766 25
1767 23
1768 18
1769 21
1770 20
1771 17
1772 26
1774 35
1775 26
1777 35
1778 19
1779 24
1780 22
1781 21
1782 25
1783 21
1784 28
1785 25
1786 19
1787 24
1788 22
1789 20
1790 19
1791 17
1792 26
1794 35
1795 26
1797 35
1798 19
1799 24
1800 22
1801 21
1802 28
1803 25
1804 21
1805 28
1806 25
1807 19
1808 24
1809 22
1810 20
1811 19
1812 17
1813 26
1815 35
1816 26
1818 35
1819 19
1820 24
1821 22
1822 21
1823 28
1824 25
1825 21
1826 28
1827 25
1828 19
1829 24
1830 22
1831 20
1832 19
1833 22
1834 31
1835 27
1836 22
1837 31
1838 27
1839 18
1840 21
1841 20
1842 20
1843 25
1844 23
1845 20
1846 25
1847 23
1848 18
1849 21
1850 20
1851 26
1853 35
1854 26
1856 35
1857 19
1858 24
1859 22
1860 21
1861 28
1862 25
1863 21
1864 28
1865 25
1866 19
1867 24
1868 22
1869 20
1870 19
1871 11
1872 14
1873 23
1875 32
1876 23
1878 32
1879 16
1880 21
1881 19
1882 18
1883 25
1884 22
1885 18
1886 25
1887 22
1888 16
1889 21
1890 19
1891 17
1892 16
1893 14
1894 23
1896 32
1897 23
1899 32
1900 16
1901 21
1902 19
1903 18
1904 25
1905 22
1906 25
1907 22
1908 16
1909 21
1910 19
1911 17
1912 19
1913 28
1914 24
1915 19
1916 28
1917 24
1918 15
1919 18
1920 17
1921 17
1922 22
1923 20
1924 17
1925 22
1926 20
1927 15
1928 18
1929 17
1930 14
1931 23
1933 32
1934 23
1936 32
1937 16
1938 21
1939 19
1940 18
1941 25
1942 22
1943 18
1944 25
1945 22
1946 16
1947 21
1948 19
1949 17
1950 16
1951 14
1952 23
1954 32
1955 23
1957 32
1958 16
1959 21
1960 19
1961 18
1962 25
1963 22
1964 18
1965 25
1966 22
1967 16
1968 21
1969 19
1970 17
1971 16
1972 14
1973 23
1975 32
1976 23
1978 32
1979 16
1980 21
1981 19
1982 18
1983 25
1984 22
1985 18
1986 25
1987 22
1988 16
1989 21
1990 19
1991 17
1992 16
1993 19
1994 28
1995 24
1996 19
1997 28
1998 24
1999 15
2000 18
2001 17
2002 17
2003 22
2004 20
2005 17
2006 22
2007 20
2008 15
2009 18
2010 17
2011 14
2012 23
2014 32
2015 23
2017 32
2018 16
2019 21
2020 19
2021 18
2022 25
2023 22
2024 18
2025 25
2026 22
2027 16
2028 21
2029 19
2030 17
2031 16
2032 7
2033 10
2034 19
2035 36
2036 28
2037 19
2038 36
2039 28
2040 12
2041 15
2042 14
2043 21
2044 18
2045 14
2046 21
2047 18
2048 12
2049 17
2050 15
2051 13
2052 12
2053 10
2054 19
2055 36
2056 28
2057 19
2058 36
2059 28
2060 12
2061 17
2062 15
2063 14
2064 21
2065 18
2066 14
2067 21
2068 18
2069 12
2070 15
2071 13
2072 12
2073 15
2074 24
2075 20
2076 15
2077 24
2078 20
2079 11
2080 14
2081 13
2082 13
2083 18
2084 16
2085 18
2086 16
2087 11
2088 14
2089 13
2090 10
2091 19
2092 36
2093 28
2094 19
2095 36
2096 28
2097 12
2098 17
2099 15
2100 14
2101 21
2102 18
2103 14
2104 18
2105 12
2106 17
2107 15
2108 13
2109 12
2110 10
2111 19
2112 36
2113 28
2114 19
2115 36
2116 28
2117 12
2118 17
2119 15
2120 14
2121 21
2122 18
2123 14
2124 21
2125 18
2126 12
2127 17
2128 15
2129 13
2130 12
2131 10
2132 19
2133 36
2134 28
2135 19
2136 36
2137 28
2138 12
2139 17
2140 15
2141 14
2142 21
2143 18
2144 14
2145 21
2146 18
2147 12
2148 17
2149 15
2150 13
2151 12
2152 15
2153 24
2154 20
2155 15
2156 24
2157 20
2158 11
2159 14
2160 13
2161 13
2162 18
2163 16
2164 13
2165 18
2166 16
2167 14
2168 13
2169 10
2170 19
2171 36
2172 28
2173 19
2174 36
2175 28
2176 12
2177 17
2178 15
2179 14
2180 21
2181 18
2182 14
2183 21
2184 18
2185 12
2186 17
2187 15
2188 13
2189 12
2190 14
2191 17
2192 26
2194 26
2196 35
2197 19
2198 24
2199 22
2200 21
2201 28
2202 25
2203 21
2204 28
2205 25
2206 19
2207 24
2208 22
2209 20
2210 19
2211 17
2212 26
2214 35
2215 26
2217 35
2218 19
2219 24
2220 21
2221 28
2222 25
2223 21
2224 28
2225 25
2226 19
2227 24
2228 22
2229 20
2230 19
2231 22
2232 31
2233 27
2234 22
2235 31
2236 27
2237 18
2238 21
2239 20
2240 20
2241 25
2242 23
2243 20
2244 25
2245 23
2246 18
2247 21
2248 20
2249 17
2250 26
2251 35
2252 26
2254 35
2255 19
2256 24
2257 22
2258 21
2259 28
2260 25
2261 21
2262 28
2263 25
2264 19
2265 24
2266 22
2267 20
2268 19
2269 17
2270 26
2272 35
2273 26
2275 35
2276 22
2277 21
2278 28
2279 25
2280 21
2281 28
2282 25
2283 19
2284 24
2285 22
2286 20
2287 19
2288 17
2289 26
2291 35
2292 26
2294 35
2295 19
2296 24
2297 22
2298 21
2299 28
2300 25
2301 21
2302 28
2303 25
2304 19
2305 24
2306 22
2307 20
2308 19
2309 22
2310 31
2311 27
2312 22
2313 31
2314 27
2315 18
2316 21
2317 20
2318 20
2319 25
2320 20
2321 25
2322 23
2323 18
2324 21
2325 20
2326 17
2327 26
2329 35
2330 26
2331 35
2332 19
2333 24
2334 22
2335 21
2336 28
2337 25
2338 21
2339 28
2340 25
2341 19
2342 24
2343 22
2344 20
2345 19
2346 11
2347 14
2348 23
2350 32
2352 16
2353 21
2354 19
2355 18
2356 25
2357 22
2358 18
2359 22
2360 16
2361 21
2362 19
2363 17
2364 16
2365 14
2366 23
2368 32
2369 23
2371 21
2372 19
2373 18
2374 25
2375 22
2376 18
2377 25
2378 22
2379 16
2380 21
2381 19
2382 17
2383 16
2384 19
2385 28
2386 24
2387 19
2388 28
2389 24
2390 15
2391 17
2392 17
2393 22
2394 20
2395 17
2396 22
2397 20
2398 15
2399 17
2400 14
2401 23
2403 32
2404 23
2406 32
2407 16
2408 21
2409 19
2410 18
2411 25
2412 22
2413 18
2414 25
2415 22
2416 16
2417 19
2418 17
2419 16
2420 14
2421 23
2423 32
2424 23
2426 32
2427 16
2428 21
2429 19
2430 18
2431 25
2432 22
2433 18
2434 25
2435 22
2436 16
2437 21
2438 19
2439 17
2440 16
2441 14
2442 23
2444 32
2445 23
2447 32
2448 16
2449 19
2450 18
2451 25
2452 22
2453 18
2454 25
2455 22
2456 16
2457 21
2458 19
2459 17
2460 16
2461 19
2462 28
2463 24
2464 19
2465 28
2466 24
2467 15
2468 18
2469 17
2470 17
2471 22
2472 20
2473 17
2474 22
2475 20
2476 15
2477 18
2478 17
2479 14
2480 23
2482 32
2483 23
2485 32
2486 16
2487 21
2488 19
2489 25
2490 22
2491 18
2492 25
2493 22
2494 16
2495 21
2496 19
2497 17
2498 16
2499 5
2500 8
2501 17
2502 26
2503 17
2504 34
2505 26
2506 10
2507 15
2508 13
2509 12
2510 19
2511 16
2512 12
2513 19
2514 16
2515 10
2516 15
2517 13
2518 11
2519 10
2520 8
2521 17
2522 34
2523 26
2524 17
2525 26
2526 10
2527 13
2528 12
2529 19
2530 16
2531 12
2532 19
2533 10
2534 15
2535 13
2536 11
2537 10
2538 13
2539 22
2540 18
2541 22
2542 18
2543 9
2544 12
2545 11
2546 11
2547 16
2548 14
2549 11
2550 16
2551 14
2552 9
2553 12
2554 11
2555 8
2556 17
2557 34
2558 17
2559 34
2560 26
2561 10
2562 15
2563 13
2564 12
2565 19
2566 16
2567 12
2568 19
2569 16
2570 10
2571 15
2572 13
2573 11
2574 10
2575 8
2576 17
2577 34
2578 26
2579 17
2580 34
2581 26
2582 10
2583 15
2584 13
2585 12
2586 19
2587 16
2588 12
2589 19
2590 16
2591 10
2592 15
2593 13
2594 11
2595 10
2596 8
2597 17
2598 34
2599 26
2600 17
2601 34
2602 26
2603 10
2604 15
2605 13
2606 12
2607 19
2608 16
2609 12
2610 19
2611 16
2612 10
2613 15
2614 13
2615 11
2616 10
2617 13
2618 22
2619 13
2620 22
2621 18
2622 9
2623 12
2624 11
2625 11
2626 16
2627 14
2628 11
2629 16
2630 14
2631 9
2632 12
2633 11
2634 8
2635 17
2636 34
2637 26
2638 17
2639 34
2640 26
2641 10
2642 15
2643 13
2644 12
2645 19
2646 16
2647 12
2648 19
2649 16
2650 10
2651 15
2652 13
2653 11
2654 10
2655 10
2656 13
2657 22
2658 39
2659 31
2660 22
2661 39
2662 31
2663 15
2664 20
2665 18
2666 17
2667 24
2668 21
2669 17
2670 24
2671 21
2672 15
2673 20
2674 18
2675 16
2676 15
2677 13
2678 22
2679 39
2680 31
2681 22
2682 39
2683 31
2684 15
2685 20
2686 18
2687 17
2688 24
2689 21
2690 17
2691 24
2692 21
2693 15
2694 20
2695 18
2696 15
2697 18
2698 27
2699 23
2700 18
2701 27
2702 23
2703 14
2704 17
2705 16
2706 16
2707 21
2708 19
2709 16
2710 21
2711 19
2712 14
2713 17
2714 16
2715 13
2716 22
2717 39
2718 31
2719 22
2720 39
2721 31
2722 15
2723 20
2724 18
2725 17
2726 24
2727 21
2728 17
2729 24
2730 21
2731 15
2732 20
2733 18
2734 16
2735 15
2736 13
2737 22
2738 39
2739 31
2740 22
2741 39
2742 31
2743 15
2744 20
2745 18
2746 17
2747 24
2748 21
2749 24
2750 21
2751 15
2752 20
2753 18
2754 16
2755 15
2756 13
2757 22
2758 39
2759 31
2760 22
2761 39
2762 31
2763 15
2764 20
2765 18
2766 17
2767 24
2768 17
2769 24
2770 21
2771 15
2772 20
2773 18
2774 16
2775 15
2776 18
2777 27
2778 23
2779 18
2780 27
2781 23
2782 14
2783 17
2784 16
2785 16
2786 21
2787 19
2788 16
2789 21
2790 19
2791 14
2792 17
2793 16
2794 13
2795 22
2796 31
2797 22
2798 39
2799 31
2800 15
2801 20
2802 18
2803 17
2804 24
2805 21
2806 17
2807 24
2808 21
2809 15
2810 20
2811 18
2812 16
2813 15
2814 8
2815 11
2816 20
2817 37
2818 29
2819 20
2820 29
2821 13
2822 18
2823 16
2824 15
2825 22
2826 19
2827 15
2828 22
2829 19
2830 13
2831 18
2832 16
2833 14
2834 13
2835 11
2836 20
2837 37
2838 29
2839 20
2840 37
2841 29
2842 13
2843 18
2844 16
2845 15
2846 22
2847 19
2848 15
2849 22
2850 19
2851 13
2852 18
2853 16
2854 14
2855 13
2856 16
2857 25
2858 21
2859 16
2860 25
2861 21
2862 12
2863 15
2864 14
2865 14
2866 19
2867 17
2868 14
2869 19
2870 17
2871 12
2872 15
2873 14
2874 11
2875 20
2876 37
2877 29
2878 20
2879 37
2880 29
2881 13
2882 18
2883 16
2884 15
2885 22
2886 19
2887 15
2888 22
2889 19
2890 13
2891 18
2892 16
2893 14
2894 13
2895 11
2896 20
2897 37
2898 29
2899 20
2900 29
2901 13
2902 18
2903 16
2904 15
2905 22
2906 19
2907 15
2908 22
2909 13
2910 18
2911 16
2912 14
2913 13
2914 11
2915 20
2916 37
2917 29
2918 20
2919 37
2920 29
2921 13
2922 18
2923 16
2924 15
2925 22
2926 19
2927 15
2928 22
2929 19
2930 13
2931 18
2932 16
2933 14
2934 13
2935 16
2936 25
2937 16
2938 25
2939 21
2940 12
2941 15
2942 14
2943 14
2944 19
2945 17
2946 14
2947 19
2948 17
2949 12
2950 15
2951 14
2952 11
2953 20
2954 37
2955 29
2956 20
2957 37
2958 29
2959 13
2960 18
2961 16
2962 15
2963 22
2964 19
2965 15
2966 19
2967 13
2968 18
2969 16
2970 14
2971 13
2972 6
2973 9
2974 18
2975 35
2976 27
2977 18
2978 35
2979 27
2980 11
2981 16
2982 14
2983 13
2984 20
2985 13
2986 20
2987 17
2988 11
2989 16
2990 14
2991 12
2992 11
2993 9
2994 18
2995 35
2996 27
2997 18
2998 35
2999 27
3000 11
3001 16
3002 14
3003 13
3004 20
3005 17
3006 13
3007 20
3008 17
3009 11
3010 16
3011 14
3012 12
3013 11
3014 14
3015 23
3016 19
3017 14
3018 19
3019 10
3020 13
3021 12
3022 12
3023 17
3024 15
3025 12
3026 17
3027 15
3028 10
3029 13
3030 12
3031 9
3032 18
3033 35
3034 27
3035 18
3036 35
3037 27
3038 11
3039 16
3040 14
3041 13
3042 20
3043 13
3044 20
3045 17
3046 11
3047 16
3048 14
3049 12
3050 11
3051 9
3052 18
3053 35
3054 27
3055 18
3056 35
3057 27
3058 11
3059 16
3060 14
3061 13
3062 20
3063 17
3064 13
3065 20
3066 17
3067 11
3068 16
3069 14
3070 12
3071 11
3072 9
3073 18
3074 35
3075 27
3076 18
3077 35
3078 27
3079 11
3080 16
3081 14
3082 13
3083 20
3084 17
3085 13
3086 20
3087 17
3088 11
3089 16
3090 14
3091 12
3092 11
3093 14
3094 23
3095 19
3096 14
3097 23
3098 19
3099 10
3100 13
3101 12
3102 17
3103 15
3104 12
3105 17
3106 15
3107 10
3108 13
3109 12
3110 9
3111 18
3112 35
3113 27
3114 18
3115 27
3116 11
3117 16
3118 14
3119 13
3120 20
3121 17
3122 13
3123 20
3124 17
3125 11
3126 16
3127 14
3128 12
3129 11
3130 5
3131 8
3132 17
3133 34
3134 26
3135 17
3136 34
3137 26
3138 10
3139 15
3140 13
3141 19
3142 16
3143 12
3144 19
3145 16
3146 10
3147 15
3148 13
3149 11
3150 10
3151 8
3152 17
3153 34
3154 26
3155 17
3156 34
3157 26
3158 10
3159 15
3160 12
3161 19
3162 16
3163 12
3164 19
3165 16
3166 10
3167 15
3168 13
3169 11
3170 10
3171 13
3172 22
3173 18
3174 13
3175 22
3176 18
3177 9
3178 12
3179 11
3180 11
3181 16
3182 14
3183 11
3184 16
3185 14
3186 9
3187 12
3188 11
3189 8
3190 17
3191 34
3192 26
3193 17
3194 34
3195 26
3196 10
3197 15
3198 13
3199 12
3200 16
3201 12
3202 19
3203 16
3204 10
3205 15
3206 13
3207 11
3208 8
3209 17
3210 34
3211 26
3212 17
3213 34
3214 26
3215 10
3216 15
3217 13
3218 12
3219 19
3220 16
3221 12
3222 19
3223 16
3224 10
3225 15
3226 13
3227 11
3228 10
3229 8
3230 17
3231 34
3232 26
3233 17
3234 34
3235 26
3236 10
3237 15
3238 12
3239 19
3240 16
3241 12
3242 19
3243 16
3244 10
3245 15
3246 13
3247 11
3248 13
3249 22
3250 18
3251 13
3252 22
3253 9
3254 12
3255 11
3256 11
3257 16
3258 14
3259 11
3260 16
3261 14
3262 9
3263 12
3264 11
3265 8
3266 17
3267 34
3268 26
3269 17
3270 34
3271 26
3272 10
3273 15
3274 13
3275 12
3276 19
3277 16
3278 12
3279 19
3280 16
3281 10
3282 15
3283 13
3284 11
3285 10
3286 3
3287 6
3288 15
3289 32
3290 24
3291 15
3292 32
3293 24
3294 8
3295 13
3296 11
3297 10
3298 17
3299 14
3300 10
3301 17
3302 14
3303 8
3304 13
3305 11
3306 9
3307 8
3308 6
3309 15
3310 32
3311 24
3312 15
3313 24
3314 8
3315 13
3316 10
3317 17
3318 14
3319 10
3320 17
3321 14
3322 8
3323 13
3324 11
3325 9
3326 8
3327 11
3328 20
3329 16
3330 11
3331 20
3332 16
3333 7
3334 10
3335 9
3336 9
3337 14
3338 12
3339 9
3340 14
3341 12
3342 7
3343 10
3344 9
3345 6
3346 15
3347 32
3348 24
3349 15
3350 32
3351 24
3352 8
3353 13
3354 11
3355 10
3356 17
3357 14
3358 10
3359 17
3360 14
3361 8
3362 13
3363 11
3364 9
3365 8
3366 6
3367 15
3368 32
3369 24
3370 32
3371 24
3372 8
3373 13
3374 11
3375 10
3376 17
3377 14
3378 10
3379 17
3380 14
3381 8
3382 13
3383 11
3384 9
3385 8
3386 6
3387 15
3388 32
3389 24
3390 15
3391 32
3392 24
3393 8
3394 13
3395 11
3396 10
3397 17
3398 14
3399 10
3400 17
3401 14
3402 8
3403 13
3404 11
3405 9
3406 8
3407 11
3408 20
3409 16
3410 11
3411 20
3412 16
3413 7
3414 10
3415 9
3416 14
3417 12
3418 9
3419 14
3420 12
3421 7
3422 10
3423 9
3424 6
3425 15
3426 32
3427 24
3428 15
3429 32
3430 24
3431 8
3432 13
3433 11
3434 10
3435 17
3436 10
3437 17
3438 14
3439 8
3440 13
3441 11
3442 9
3443 8
3444 12
3445 15
3446 24
3448 33
3449 24
3451 33
3452 17
3453 22
3454 20
3455 19
3456 26
3457 23
3458 26
3459 23
3460 17
3461 22
3462 20
3463 18
3464 17
3465 15
3466 24
3468 33
3469 24
3471 33
3472 17
3473 22
3474 20
3475 19
3476 26
3477 23
3478 19
3479 26
3480 23
3481 17
3482 22
3483 20
3484 17
3485 20
3486 29
3487 25
3488 20
3489 29
3490 25
3491 16
3492 19
3493 18
3494 18
3495 23
3496 21
3497 18
3498 23
3499 21
3500 16
3501 19
3502 18
3503 15
3504 24
3506 33
3507 24
3509 33
3510 17
3511 22
3512 20
3513 19
3514 26
3515 23
3516 19
3517 26
3518 23
3519 17
3520 22
3521 20
3522 18
3523 17
3524 15
3525 24
3527 33
3528 24
3530 33
3531 17
3532 22
3533 20
3534 19
3535 26
3536 23
3537 19
3538 26
3539 23
3540 17
3541 22
3542 20
3543 18
3544 17
3545 15
3547 33
3548 24
3550 33
3551 17
3552 20
3553 19
3554 26
3555 23
3556 19
3557 26
3558 23
3559 17
3560 22
3561 20
3562 18
3563 17
3564 20
3565 29
3566 25
3567 20
3568 29
3569 25
3570 16
3571 18
3572 18
3573 23
3574 21
3575 18
3576 23
3577 21
3578 16
3579 19
3580 15
3581 24
3583 33
3584 24
3585 33
3586 22
3587 20
3588 19
3589 26
3590 23
3591 19
3592 23
3593 17
3594 22
3595 20
3596 18
3597 17
3598 29
3599 32
3606 39
3607 37
3608 36
3611 36
3614 34
3615 39
3616 37
3617 35
3618 34
3619 32
3625 34
3626 39
3627 37
3628 36
3631 36
3634 34
3635 39
3636 37
3637 35
3638 34
3639 37
3642 37
3645 33
3646 36
3647 35
3648 35
3650 38
3651 35
3653 38
3654 33
3655 36
3656 32
3662 34
3663 39
3664 37
3665 36
3668 36
3671 34
3672 39
3673 37
3674 35
3675 32
3681 34
3682 39
3683 37
3684 36
3687 36
3690 34
3691 39
3692 37
3693 35
3694 32
3701 34
3702 39
3703 37
3704 36
3707 36
3710 34
3711 39
3712 37
3713 35
3714 34
3715 37
3718 37
3721 33
3722 36
3723 35
3724 35
3726 38
3727 35
3729 38
3730 33
3731 36
3732 35
3733 32
3740 34
3741 39
3742 37
3743 36
3746 36
3749 34
3750 37
3751 35
3752 34
3753 21
3754 24
3755 33
3758 33
3761 26
3762 31
3763 29
3764 28
3765 35
3766 28
3767 35
3768 32
3769 26
3770 29
3771 27
3772 26
3773 24
3774 33
3777 33
3780 26
3781 31
3782 29
3783 28
3784 35
3785 32
3786 28
3787 35
3788 32
3789 26
3790 31
3791 29
3792 27
3793 26
3794 29
3795 38
3796 34
3797 29
3798 38
3799 34
3800 25
3801 28
3802 27
3803 27
3804 32
3805 30
3806 27
3807 32
3808 30
3809 25
3810 28
3811 27
3812 24
3813 33
3816 33
3819 26
3820 31
3821 29
3822 28
3823 35
3824 32
3825 35
3826 32
3827 26
3828 31
3829 29
3830 27
3831 26
3832 24
3833 33
3836 33
3839 26
3840 31
3841 29
3842 28
3843 32
3844 28
3845 35
3846 32
3847 26
3848 31
3849 29
3850 27
3851 26
3852 24
3853 33
3855 33
3857 26
3858 31
3859 28
3860 35
3861 32
3862 28
3863 35
3864 32
3865 26
3866 31
3867 29
3868 27
3869 26
3870 29
3871 38
3872 29
3873 34
3874 25
3875 28
3876 27
3877 27
3878 32
3879 30
3880 27
3881 32
3882 30
3883 25
3884 27
3885 24
3886 33
3889 33
3892 26
3893 31
3894 29
3895 28
3896 35
3897 32
3898 28
3899 35
3900 32
3901 26
3902 31
3903 29
3904 27
3905 26
3906 12
3907 15
3908 24
3910 33
3911 24
3913 33
3914 17
3915 22
3916 20
3917 19
3918 26
3919 23
3920 19
3921 26
3922 23
3923 17
3924 20
3925 18
3926 17
3927 15
3928 24
3930 33
3931 24
3933 33
3934 17
3935 22
3936 19
3937 26
3938 23
3939 19
3940 26
3941 23
3942 17
3943 22
3944 20
3945 18
3946 17
3947 20
3948 25
3949 20
3950 29
3951 25
3952 16
3953 19
3954 18
3955 18
3956 23
3957 21
3958 18
3959 23
3960 21
3961 16
3962 19
3963 15
3964 24
3966 33
3967 24
3969 33
3970 17
3971 22
3972 20
3973 19
3974 26
3975 23
3976 19
3977 26
3978 23
3979 17
3980 22
3981 20
3982 18
3983 17
3984 15
3985 24
3987 33
3988 24
3990 33
3991 17
3992 22
3993 20
3994 19
3995 26
3996 23
3997 19
3998 26
3999 23
4000 17
4001 22
4002 20
4003 18
4004 17
4005 15
4006 24
4008 33
4009 24
4011 33
4012 17
4013 22
4014 20
4015 19
4016 26
4017 23
4018 19
4019 26
4020 23
4021 17
4022 22
4023 20
4024 18
4025 17
4026 20
4027 29
4028 20
4029 29
4030 25
4031 16
4032 19
4033 18
4034 18
4035 23
4036 21
4037 18
4038 23
4039 21
4040 16
4041 18
4042 15
4043 24
4045 33
4046 24
4048 33
4049 17
4050 22
4051 20
4052 19
4053 26
4054 23
4055 19
4056 26
4057 23
4058 17
4059 22
4060 20
4061 18
4062 17
4063 29
4064 32
4071 34
4072 37
4073 36
4076 36
4079 34
4080 39
4081 37
4082 35
4083 34
4084 32
4091 34
4092 39
4093 37
4094 36
4097 36
4100 39
4101 37
4102 35
4103 34
4104 37
4107 37
4110 33
4111 36
4112 35
4113 35
4115 38
4116 35
4118 38
4119 33
4120 36
4121 35
4122 32
4128 34
4129 39
4130 37
4131 36
4134 36
4137 34
4138 39
4139 37
4140 35
4141 34
4142 32
4148 34
4149 39
4150 37
4151 36
4154 36
4157 34
4158 39
4159 37
4160 35
4161 34
4162 32
4169 34
4170 39
4171 37
4172 36
4175 36
4178 34
4179 39
4180 37
4181 35
4182 34
4183 37
4185 37
4188 33
4189 36
4190 35
4191 35
4193 38
4194 35
4196 38
4197 33
4198 36
4199 35
4200 32
4207 34
4208 39
4209 37
4210 36
4215 34
4216 39
4217 37
4218 35
4219 34
4220 21
4221 24
4222 33
4225 33
4228 26
4229 31
4230 29
4231 28
4232 35
4233 32
4234 28
4235 35
4236 32
4237 26
4238 31
4239 29
4240 27
4241 26
4242 24
4243 33
4246 33
4249 31
4250 29
4251 28
4252 35
4253 32
4254 28
4255 35
4256 32
4257 26
4258 31
4259 29
4260 27
4261 29
4262 38
4263 34
4264 29
4265 38
4266 34
4267 25
4268 28
4269 27
4270 27
4271 32
4272 30
4273 27
4274 32
4275 30
4276 25
4277 28
4278 27
4279 24
4280 33
4282 33
4285 26
4286 31
4287 29
4288 28
4289 35
4290 32
4291 28
4292 35
4293 32
4294 26
4295 31
4296 29
4297 27
4298 26
4299 24
4300 33
4303 33
4306 26
4307 31
4308 29
4309 28
4310 35
4311 32
4312 28
4313 35
4314 32
4315 26
4316 31
4317 29
4318 27
4319 26
4320 24
4321 33
4324 33
4327 26
4328 29
4329 28
4330 35
4331 28
4332 35
4333 32
4334 31
4335 29
4336 27
4337 26
4338 29
4339 38
4340 29
4341 38
4342 34
4343 28
4344 27
4345 27
4346 32
4347 30
4348 27
4349 32
4350 30
4351 25
4352 28
4353 27
4354 24
4355 33
4357 33
4360 26
4361 31
4362 29
4363 28
4364 35
4365 32
4366 28
4367 35
4368 32
4369 26
4370 31
4371 29
4372 26
4373 5
4374 8
4375 17
4376 34
4377 26
4378 17
4379 34
4380 26
4381 10
4382 15
4383 13
4384 12
4385 19
4386 12
4387 19
4388 16
4389 10
4390 15
4391 13
4392 11
4393 10
4394 8
4395 17
4396 34
4397 26
4398 17
4399 34
4400 26
4401 10
4402 15
4403 13
4404 19
4405 16
4406 12
4407 19
4408 16
4409 10
4410 15
4411 13
4412 11
4413 10
4414 13
4415 22
4416 18
4417 22
4418 18
4419 9
4420 12
4421 11
4422 11
4423 16
4424 14
4425 11
4426 16
4427 14
4428 9
4429 12
4430 11
4431 8
4432 17
4433 34
4434 26
4435 17
4436 34
4437 26
4438 10
4439 15
4440 13
4441 12
4442 19
4443 16
4444 12
4445 19
4446 16
4447 10
4448 15
4449 13
4450 11
4451 10
4452 8
4453 17
4454 34
4455 26
4456 17
4457 34
4458 26
4459 10
4460 15
4461 13
4462 12
4463 19
4464 16
4465 12
4466 19
4467 16
4468 10
4469 15
4470 11
4471 10
4472 8
4473 17
4474 34
4475 26
4476 17
4477 34
4478 26
4479 10
4480 15
4481 13
4482 12
4483 16
4484 12
4485 19
4486 16
4487 10
4488 15
4489 13
4490 11
4491 10
4492 13
4493 22
4494 18
4495 13
4496 22
4497 18
4498 9
4499 12
4500 11
4501 11
4502 16
4503 14
4504 11
4505 16
4506 14
4507 9
4508 12
4509 11
4510 8
4511 17
4512 34
4513 26
4514 17
4515 34
4516 26
4517 10
4518 15
4519 13
4520 12
4521 19
4522 16
4523 12
4524 19
4525 16
4526 10
4527 15
4528 13
4529 11
4530 10
4531 10
4532 13
4533 22
4534 39
4535 31
4536 22
4537 39
4538 31
4539 15
4540 20
4541 18
4542 17
4543 24
4544 21
4545 17
4546 24
4547 21
4548 15
4549 20
4550 18
4551 16
4552 15
4553 13
4554 22
4555 39
4556 31
4557 22
4558 39
4559 31
4560 15
4561 20
4562 18
4563 17
4564 24
4565 21
4566 17
4567 24
4568 21
4569 15
4570 20
4571 18
4572 16
4573 15
4574 27
4575 23
4576 18
4577 27
4578 23
4579 14
4580 17
4581 16
4582 16
4583 21
4584 19
4585 16
4586 21
4587 19
4588 17
4589 16
4590 13
4591 22
4592 39
4593 31
4594 22
4595 39
4596 31
4597 15
4598 18
4599 17
4600 24
4601 21
4602 17
4603 24
4604 21
4605 15
4606 20
4607 18
4608 16
4609 15
4610 13
4611 22
4612 39
4613 31
4614 22
4615 39
4616 31
4617 15
4618 20
4619 18
4620 17
4621 24
4622 21
4623 17
4624 24
4625 21
4626 15
4627 20
4628 18
4629 16
4630 15
4631 13
4632 22
4633 39
4634 31
4635 22
4636 39
4637 31
4638 15
4639 20
4640 18
4641 24
4642 21
4643 17
4644 24
4645 21
4646 15
4647 18
4648 16
4649 15
4650 18
4651 27
4652 23
4653 18
4654 27
4655 23
4656 14
4657 17
4658 16
4659 16
4660 21
4661 19
4662 16
4663 21
4664 19
4665 14
4666 17
4667 16
4668 13
4669 22
4670 39
4671 31
4672 22
4673 39
4674 31
4675 15
4676 20
4677 18
4678 17
4679 24
4680 21
4681 17
4682 24
4683 21
4684 15
4685 20
4686 18
4687 16
4688 15
4689 8
4690 11
4691 20
4692 37
4693 29
4694 20
4695 37
4696 29
4697 13
4698 18
4699 16
4700 15
4701 22
4702 19
4703 15
4704 22
4705 19
4706 13
4707 18
4708 16
4709 14
4710 13
4711 11
4712 20
4713 37
4714 29
4715 20
4716 37
4717 29
4718 13
4719 18
4720 16
4721 15
4722 22
4723 19
4724 15
4725 22
4726 19
4727 13
4728 18
4729 14
4730 13
4731 16
4732 25
4733 21
4734 16
4735 21
4736 12
4737 15
4738 14
4739 14
4740 19
4741 17
4742 14
4743 17
4744 12
4745 15
4746 14
4747 11
4748 20
4749 37
4750 29
4751 20
4752 37
4753 29
4754 13
4755 18
4756 16
4757 15
4758 22
4759 19
4760 15
4761 22
4762 19
4763 13
4764 18
4765 16
4766 14
4767 13
4768 11
4769 20
4770 37
4771 29
4772 20
4773 37
4774 29
4775 13
4776 18
4777 16
4778 15
4779 22
4780 19
4781 15
4782 22
4783 19
4784 13
4785 18
4786 16
4787 14
4788 11
4789 20
4790 37
4791 29
4792 20
4793 37
4794 29
4795 13
4796 16
4797 15
4798 22
4799 19
4800 15
4801 22
4802 19
4803 13
4804 18
4805 16
4806 14
4807 13
4808 16
4809 25
4810 21
4811 16
4812 25
4813 21
4814 12
4815 15
4816 14
4817 14
4818 19
4819 17
4820 14
4821 17
4822 12
4823 15
4824 14
4825 11
4826 20
4827 37
4828 29
4829 20
4830 37
4831 29
4832 13
4833 18
4834 16
4835 22
4836 19
4837 15
4838 22
4839 19
4840 13
4841 18
4842 16
4843 14
4844 13
4845 7
4846 10
4847 19
4848 36
4849 28
4850 19
4851 36
4852 28
4853 12
4854 17
4855 15
4856 14
4857 21
4858 18
4859 21
4860 18
4861 12
4862 17
4863 15
4864 13
4865 12
4866 10
4867 19
4868 36
4869 28
4870 19
4871 36
4872 28
4873 12
4874 17
4875 15
4876 14
4877 21
4878 18
4879 14
4880 21
4881 18
4882 12
4883 17
4884 15
4885 13
4886 12
4887 15
4888 24
4889 20
4890 24
4891 20
4892 11
4893 14
4894 13
4895 13
4896 18
4897 16
4898 13
4899 18
4900 16
4901 11
4902 14
4903 13
4904 10
4905 19
4906 36
4907 28
4908 19
4909 36
4910 28
4911 12
4912 17
4913 15
4914 14
4915 21
4916 18
4917 14
4918 21
4919 18
4920 12
4921 17
4922 15
4923 13
4924 12
4925 10
4926 19
4927 36
4928 28
4929 19
4930 36
4931 28
4932 12
4933 17
4934 15
4935 14
4936 21
4937 18
4938 14
4939 21
4940 18
4941 12
4942 17
4943 15
4944 13
4945 12
4946 10
4947 19
4948 36
4949 28
4950 19
4951 36
4952 28
4953 12
4954 17
4955 15
4956 14
4957 21
4958 18
4959 14
4960 21
4961 18
4962 12
4963 17
4964 15
4965 13
4966 15
4967 24
4968 20
4969 15
4970 24
4971 20
4972 11
4973 14
4974 13
4975 13
4976 16
4977 13
4978 18
4979 16
4980 11
4981 14
4982 13
4983 10
4984 19
4985 36
4986 28
4987 19
4988 36
4989 28
4990 12
4991 17
4992 15
4993 14
4994 21
4995 18
4996 14
4997 21
4998 18
4999 12
5000 17
5001 15
5002 13
5003 12
5004 14
5005 17
5006 26
5008 35
5009 26
5011 35
5012 19
5013 24
5014 22
5015 21
5016 28
5017 25
5018 21
5019 28
5020 25
5021 19
5022 24
5023 22
5024 19
5025 17
5026 26
5028 35
5029 26
5031 35
5032 19
5033 24
5034 22
5035 21
5036 28
5037 25
5038 21
5039 28
5040 25
5041 19
5042 24
5043 22
5044 19
5045 22
5046 31
5047 27
5048 22
5049 31
5050 27
5051 18
5052 20
5053 23
5054 20
5055 25
5056 23
5057 18
5058 21
5059 20
5060 17
5061 26
5063 35
5064 26
5066 35
5067 19
5068 24
5069 22
5070 21
5071 28
5072 25
5073 21
5074 28
5075 19
5076 24
5077 22
5078 20
5079 19
5080 17
5081 26
5083 35
5084 26
5086 35
5087 19
5088 24
5089 22
5090 21
5091 28
5092 25
5093 21
5094 28
5095 25
5096 19
5097 24
5098 22
5099 20
5100 19
5101 17
5102 26
5104 35
5105 26
5107 35
5108 19
5109 24
5110 22
5111 21
5112 28
5113 25
5114 21
5115 28
5116 25
5117 19
5118 24
5119 22
5120 20
5121 19
5122 22
5123 31
5124 27
5125 22
5126 31
5127 27
5128 18
5129 21
5130 20
5131 25
5132 23
5133 20
5134 25
5135 23
5136 18
5137 21
5138 20
5139 17
5140 26
5142 35
5143 26
5145 35
5146 19
5147 24
5148 22
5149 21
5150 28
5151 25
5152 21
5153 28
5154 25
5155 19
5156 24
5157 22
5158 20
5159 19
5160 11
5161 14
5162 23
5164 32
5165 23
5167 32
5168 16
5169 21
5170 19
5171 18
5172 25
5173 22
5174 18
5175 22
5176 16
5177 21
5178 19
5179 17
5180 16
5181 14
5182 23
5184 32
5185 23
5187 32
5188 16
5189 21
5190 19
5191 18
5192 25
5193 22
5194 18
5195 25
5196 22
5197 16
5198 21
5199 16
5200 19
5201 28
5202 24
5203 28
5204 15
5205 18
5206 17
5207 17
5208 22
5209 20
5210 17
5211 22
5212 20
5213 15
5214 18
5215 17
5216 14
5217 23
5219 32
5220 23
5222 32
5223 16
5224 21
5225 19
5226 18
5227 25
5228 22
5229 18
5230 25
5231 22
5232 16
5233 21
5234 19
5235 17
5236 16
5237 14
5238 23
5240 32
5241 23
5242 32
5243 16
5244 21
5245 19
5246 18
5247 25
5248 22
5249 18
5250 25
5251 22
5252 16
5253 21
5254 19
5255 17
5256 16
5257 14
5259 32
5260 23
5262 32
5263 16
5264 21
5265 19
5266 18
5267 25
5268 22
5269 18
5270 25
5271 22
5272 16
5273 21
5274 19
5275 17
5276 16
5277 19
5278 19
5279 28
5280 24
5281 15
5282 18
5283 17
5284 17
5285 22
5286 20
5287 17
5288 22
5289 20
5290 15
5291 18
5292 17
5293 23
5295 32
5296 23
5298 32
5299 16
5300 21
5301 19
5302 18
5303 25
5304 22
5305 18
5306 25
5307 22
5308 16
5309 21
5310 19
5311 17
5312 16
5313 7
5314 10
5315 19
5316 36
5317 28
5318 19
5319 36
5320 28
5321 12
5322 17
5323 15
5324 18
5325 14
5326 21
5327 18
5328 12
5329 17
5330 15
5331 13
5332 10
5333 19
5334 36
5335 28
5336 19
5337 36
5338 28
5339 12
5340 17
5341 15
5342 14
5343 21
5344 18
5345 14
5346 21
5347 18
5348 12
5349 17
5350 15
5351 13
5352 12
5353 15
5354 24
5355 20
5356 15
5357 24
5358 20
5359 11
5360 14
5361 13
5362 13
5363 18
5364 16
5365 13
5366 18
5367 16
5368 11
5369 14
5370 13
5371 10
5372 19
5373 36
5374 28
5375 19
5376 36
5377 28
5378 12
5379 17
5380 15
5381 14
5382 21
5383 18
5384 14
5385 21
5386 18
5387 12
5388 17
5389 15
5390 13
5391 12
5392 10
5393 19
5394 36
5395 28
5396 19
5397 36
5398 28
5399 12
5400 17
5401 15
5402 14
5403 18
5404 14
5405 21
5406 18
5407 12
5408 15
5409 13
5410 12
5411 10
5412 19
5413 36
5414 28
5415 19
5416 36
5417 28
5418 12
5419 17
5420 15
5421 14
5422 21
5423 18
5424 14
5425 21
5426 18
5427 12
5428 17
5429 15
5430 13
5431 12
5432 24
5433 20
5434 15
5435 24
5436 11
5437 14
5438 13
5439 13
5440 18
5441 16
5442 13
5443 18
5444 16
5445 11
5446 14
5447 13
5448 10
5449 19
5450 36
5451 28
5452 19
5453 36
5454 28
5455 12
5456 17
5457 15
5458 14
5459 21
5460 18
5461 14
5462 21
5463 18
5464 17
5465 15
5466 13
5467 12
5468 17
5469 26
5471 35
5472 26
5474 35
5475 19
5476 24
5477 22
5478 21
5479 28
5480 25
5481 21
5482 28
5483 25
5484 19
5485 24
5486 22
5487 20
5488 19
5489 17
5490 26
5492 35
5493 26
5495 35
5496 19
5497 24
5498 22
5499 21
5500 28
5501 25
5502 21
5503 28
5504 25
5505 19
5506 24
5507 22
5508 20
5509 19
5510 22
5511 31
5512 27
5513 22
5514 31
5515 27
5516 18
5517 21
5518 20
5519 20
5520 25
5521 23
5522 20
5523 25
5524 23
5525 18
5526 21
5527 20
5528 17
5529 26
5531 35
5532 26
5534 35
5535 19
5536 24
5537 22
5538 21
5539 28
5540 25
5541 21
5542 28
5543 25
5544 19
5545 24
5546 22
5547 20
5548 19
5549 17
5550 26
5551 35
5553 35
5554 19
5555 24
5556 22
5557 21
5558 28
5559 25
5560 21
5561 28
5562 25
5563 19
5564 24
5565 22
5566 20
5567 19
5568 17
5569 26
5571 35
5572 26
5574 35
5575 19
5576 24
5577 22
5578 21
5579 28
5580 25
5581 28
5582 25
5583 19
5584 24
5585 22
5586 20
5587 19
5588 22
5589 31
5590 27
5591 22
5592 31
5593 27
5594 21
5595 20
5596 20
5597 20
5598 25
5599 23
5600 18
5601 21
5602 20
5603 17
5604 26
5606 35
5607 26
5609 35
5610 19
5611 24
5612 22
5613 21
5614 28
5615 21
5616 28
5617 25
5618 19
5619 20
5620 19
5621 11
5622 14
5623 23
5625 32
5626 23
5628 32
5629 21
5630 19
5631 18
5632 25
5633 22
5634 18
5635 25
5636 22
5637 16
5638 21
5639 19
5640 17
5641 16
5642 14
5643 23
5645 32
5646 23
5648 32
5649 16
5650 21
5651 19
5652 18
5653 25
5654 22
5655 18
5656 25
5657 22
5658 16
5659 21
5660 19
5661 17
5662 16
5663 19
5664 28
5665 24
5666 19
5667 28
5668 24
5669 15
5670 18
5671 17
5672 17
5673 22
5674 20
5675 17
5676 22
5677 20
5678 15
5679 18
5680 17
5681 14
5682 23
5684 32
5685 23
5687 32
5688 16
5689 21
5690 19
5691 18
5692 25
5693 22
5694 18
5695 25
5696 22
5697 16
5698 21
5699 17
5700 16
5701 14
5702 23
5704 32
5705 23
5707 32
5708 16
5709 21
5710 19
5711 18
5712 25
5713 22
5714 18
5715 25
5716 22
5717 16
5718 21
5719 19
5720 17
5721 16
5722 14
5723 23
5725 32
5726 23
5728 32
5729 16
5730 21
5731 19
5732 18
5733 25
5734 22
5735 18
5736 25
5737 22
5738 16
5739 21
5740 19
5741 17
5742 16
5743 19
5744 28
5745 24
5746 19
5747 28
5748 24
5749 15
5750 18
5751 17
5752 17
5753 22
5754 20
5755 17
5756 22
5757 20
5758 15
5759 18
5760 17
5761 14
5763 32
5764 23
5766 32
5767 16
5768 21
5769 19
5770 18
5771 25
5772 22
5773 18
5774 25
5775 22
5776 16
5777 21
5778 17
5779 16
5780 5
5781 8
5782 17
5783 34
5784 26
5785 17
5786 34
5787 26
5788 10
5789 15
5790 13
5791 12
5792 19
5793 16
5794 12
5795 19
5796 16
5797 10
5798 15
5799 13
5800 10
5801 8
5802 17
5803 34
5804 26
5805 17
5806 34
5807 26
5808 10
5809 15
5810 13
5811 12
5812 19
5813 16
5814 12
5815 19
5816 16
5817 15
5818 13
5819 11
5820 13
5821 22
5822 18
5823 13
5824 22
5825 18
5826 9
5827 12
5828 11
5829 11
5830 16
5831 14
5832 11
5833 16
5834 14
5835 9
5836 12
5837 11
5838 8
5839 17
5840 34
5841 17
5842 34
5843 26
5844 10
5845 15
5846 13
5847 12
5848 19
5849 16
5850 12
5851 19
5852 16
5853 10
5854 15
5855 13
5856 11
5857 10
5858 8
5859 17
5860 34
5861 26
5862 17
5863 34
5864 26
5865 10
5866 15
5867 13
5868 12
5869 19
5870 16
5871 12
5872 19
5873 16
5874 10
5875 15
5876 13
5877 11
5878 10
5879 8
5880 17
5881 34
5882 26
5883 17
5884 34
5885 26
5886 10
5887 15
5888 13
5889 12
5890 19
5891 16
5892 12
5893 19
5894 16
5895 10
5896 15
5897 11
5898 10
5899 13
5900 22
5901 18
5902 13
5903 22
5904 18
5905 9
5906 12
5907 11
5908 11
5909 16
5910 14
5911 11
5912 16
5913 14
5914 9
5915 12
5916 8
5917 34
5918 26
5919 17
5920 34
5921 26
5922 10
5923 15
5924 13
5925 12
5926 19
5927 16
5928 12
5929 19
5930 10
5931 15
5932 11
5933 10
5934 10
5935 13
5936 22
5937 39
5938 31
5939 22
5940 39
5941 31
5942 15
5943 20
5944 18
5945 17
5946 24
5947 21
5948 17
5949 24
5950 21
5951 15
5952 20
5953 18
5954 16
5955 15
5956 13
5957 22
5958 39
5959 22
5960 39
5961 31
5962 15
5963 20
5964 18
5965 17
5966 24
5967 21
5968 17
5969 24
5970 21
5971 15
5972 20
5973 18
5974 16
5975 15
5976 18
5977 27
5978 23
5979 18
5980 27
5981 23
5982 14
5983 17
5984 16
5985 16
5986 21
5987 19
5988 16
5989 21
5990 19
5991 14
5992 17
5993 16
5994 13
5995 22
5996 39
5997 31
5998 22
5999 39
6000 31
6001 15
6002 20
6003 18
6004 17
6005 24
6006 21
6007 17
6008 24
6009 21
6010 15
6011 20
6012 18
6013 16
6014 15
6015 13
6016 22
6017 39
6018 31
6019 22
6020 39
6021 31
6022 15
6023 20
6024 18
6025 17
6026 24
6027 21
6028 17
6029 24
6030 21
6031 20
6032 18
6033 16
6034 15
6035 13
6036 22
6037 39
6038 31
6039 22
6040 39
6041 31
6042 15
6043 20
6044 18
6045 17
6046 24
6047 21
6048 17
6049 24
6050 21
6051 15
6052 20
6053 18
6054 16
6055 15
6056 18
6057 27
6058 23
6059 27
6060 23
6061 14
6062 17
6063 16
6064 16
6065 21
6066 19
6067 16
6068 21
6069 19
6070 14
6071 17
6072 16
6073 13
6074 22
6075 39
6076 31
6077 22
6078 39
6079 31
6080 15
6081 20
6082 17
6083 21
6084 17
6085 24
6086 21
6087 15
6088 20
6089 18
6090 16
6091 15
6092 8
6093 11
6094 20
6095 37
6096 29
6097 20
6098 37
6099 29
6100 13
6101 18
6102 16
6103 15
6104 22
6105 19
6106 15
6107 22
6108 19
6109 13
6110 18
6111 16
6112 14
6113 13
6114 11
6115 20
6116 37
6117 29
6118 20
6119 37
6120 29
6121 18
6122 16
6123 15
6124 22
6125 19
6126 15
6127 22
6128 19
6129 13
6130 18
6131 16
6132 14
6133 13
6134 16
6135 25
6136 21
6137 16
6138 25
6139 21
6140 12
6141 15
6142 14
6143 14
6144 19
6145 17
6146 14
6147 19
6148 17
6149 12
6150 15
6151 14
6152 11
6153 20
6154 37
6155 29
6156 20
6157 37
6158 29
6159 13
6160 18
6161 16
6162 15
6163 22
6164 19
6165 15
6166 22
6167 19
6168 13
6169 18
6170 16
6171 14
6172 13
6173 11
6174 20
6175 37
6176 29
6177 20
6178 37
6179 29
6180 13
6181 18
6182 16
6183 15
6184 22
6185 19
6186 15
6187 22
6188 19
6189 13
6190 18
6191 16
6192 14
6193 13
6194 11
6195 20
6196 37
6197 29
6198 20
6199 37
6200 29
6201 13
6202 18
6203 16
6204 15
6205 22
6206 19
6207 15
6208 22
6209 19
6210 13
6211 18
6212 16
6213 14
6214 13
6215 16
6216 25
6217 21
6218 16
6219 25
6220 21
6221 12
6222 15
6223 14
6224 14
6225 17
6226 14
6227 17
6228 12
6229 15
6230 14
6231 11
6232 20
6233 37
6234 29
6235 20
6236 37
6237 29
6238 13
6239 18
6240 16
6241 15
6242 22
6243 19
6244 15
6245 22
6246 19
6247 13
6248 18
6249 16
6250 14
6251 13
6252 6
6253 9
6254 18
6255 35
6256 27
6257 18
6258 35
6259 27
6260 11
6261 16
6262 14
6263 13
6264 20
6265 17
6266 13
6267 20
6268 17
6269 11
6270 14
6271 12
6272 11
6273 9
6274 18
6275 35
6276 27
6277 18
6278 35
6279 27
6280 11
6281 16
6282 14
6283 13
6284 20
6285 13
6286 20
6287 17
6288 11
6289 16
6290 14
6291 12
6292 11
6293 14
6294 23
6295 19
6296 14
6297 23
6298 19
6299 10
6300 13
6301 12
6302 12
6303 17
6304 15
6305 12
6306 17
6307 15
6308 10
6309 13
6310 12
6311 18
6312 35
6313 27
6314 18
6315 35
6316 11
6317 16
6318 14
6319 13
6320 20
6321 17
6322 13
6323 20
6324 17
6325 11
6326 16
6327 14
6328 12
6329 11
6330 9
6331 18
6332 35
6333 27
6334 18
6335 35
6336 27
6337 11
6338 16
6339 14
6340 13
6341 20
6342 17
6343 13
6344 20
6345 17
6346 11
6347 16
6348 14
6349 12
6350 11
6351 9
6352 18
6353 35
6354 27
6355 18
6356 35
6357 27
6358 11
6359 16
6360 14
6361 13
6362 20
6363 13
6364 20
6365 17
6366 11
6367 16
6368 14
6369 12
6370 11
6371 14
6372 19
6373 14
6374 23
6375 19
6376 10
6377 13
6378 12
6379 12
6380 17
6381 15
6382 12
6383 15
6384 10
6385 13
6386 12
6387 9
6388 18
6389 35
6390 27
6391 18
6392 35
6393 11
6394 16
6395 13
6396 20
6397 17
6398 13
6399 20
6400 17
6401 11
6402 16
6403 14
6404 12
6405 11
6406 5
6407 8
6408 17
6409 34
6410 26
6411 34
6412 10
6413 15
6414 13
6415 12
6416 19
6417 16
6418 12
6419 19
6420 16
6421 10
6422 15
6423 13
6424 11
6425 10
6426 8
6427 17
6428 34
6429 26
6430 17
6431 34
6432 26
6433 10
6434 15
6435 13
6436 12
6437 19
6438 16
6439 12
6440 19
6441 16
6442 10
6443 15
6444 13
6445 11
6446 10
6447 13
6448 22
6449 18
6450 13
6451 22
6452 18
6453 9
6454 12
6455 11
6456 11
6457 16
6458 11
6459 16
6460 14
6461 9
6462 12
6463 11
6464 8
6465 17
6466 34
6467 26
6468 17
6469 34
6470 26
6471 10
6472 13
6473 12
6474 19
6475 16
6476 12
6477 19
6478 16
6479 10
6480 15
6481 13
6482 11
6483 10
6484 8
6485 17
6486 34
6487 26
6488 17
6489 34
6490 26
6491 10
6492 15
6493 13
6494 12
6495 16
6496 12
6497 19
6498 16
6499 10
6500 15
6501 13
6502 11
6503 10
6504 8
6505 17
6506 34
6507 26
6508 17
6509 34
6510 26
6511 10
6512 15
6513 13
6514 12
6515 19
6516 16
6517 12
6518 19
6519 16
6520 10
6521 15
6522 13
6523 11
6524 10
6525 13
6526 18
6527 13
6528 22
6529 18
6530 9
6531 12
6532 11
6533 11
6534 16
6535 14
6536 11
6537 16
6538 9
6539 12
6540 11
6541 8
6542 17
6543 34
6544 26
6545 17
6546 34
6547 26
6548 15
6549 13
6550 12
6551 19
6552 16
6553 12
6554 19
6555 16
6556 10
6557 15
6558 13
6559 11
6560 10
6561 8
6562 11
6563 20
6564 37
6565 29
6566 20
6567 37
6568 29
6569 13
6570 18
6571 16
6572 15
6573 22
6574 15
6575 22
6576 19
6577 13
6578 18
6579 16
6580 14
6581 11
6582 20
6583 37
6584 29
6585 20
6586 37
6587 29
6588 13
6589 18
6590 16
6591 15
6592 22
6593 19
6594 15
6595 22
6596 19
6597 13
6598 18
6599 16
6600 14
6601 13
6602 16
6603 25
6604 21
6605 16
6606 25
6607 12
6608 15
6609 14
6610 14
6611 19
6612 17
6613 14
6614 19
6615 17
6616 12
6617 15
6618 14
6619 11
6620 20
6621 37
6622 29
6623 20
6624 37
6625 29
6626 13
6627 18
6628 16
6629 15
6630 22
6631 19
6632 15
6633 22
6634 19
6635 13
6636 18
6637 16
6638 14
6639 13
6640 11
6641 20
6642 37
6643 29
6644 20
6645 37
6646 29
6647 13
6648 18
6649 16
6650 15
6651 22
6652 19
6653 15
6654 22
6655 19
6656 18
6657 16
6658 14
6659 13
6660 11
6661 20
6662 37
6663 20
6664 37
6665 29
6666 13
6667 18
6668 16
6669 15
6670 22
6671 15
6672 22
6673 19
6674 13
6675 18
6676 14
6677 13
6678 25
6679 21
6680 16
6681 25
6682 21
6683 12
6684 15
6685 14
6686 14
6687 19
6688 17
6689 14
6690 19
6691 17
6692 12
6693 15
6694 14
6695 11
6696 20
6697 37
6698 29
6699 20
6700 37
6701 29
6702 13
6703 18
6704 16
6705 15
6706 22
6707 19
6708 15
6709 22
6710 19
6711 13
6712 18
6713 16
6714 14
6715 13
6716 17
6717 20
6718 29
6720 38
6721 29
6723 38
6724 22
6725 27
6726 25
6727 24
6728 31
6729 24
6730 31
6731 28
6732 22
6733 27
6734 25
6735 23
6736 22
6737 20
6738 29
6740 38
6742 38
6743 27
6744 25
6745 24
6746 31
6747 28
6748 31
6749 28
6750 22
6751 27
6752 25
6753 23
6754 22
6755 25
6756 34
6757 30
6758 25
6759 34
6760 30
6761 21
6762 24
6763 23
6764 23
6765 28
6766 26
6767 23
6768 28
6769 26
6770 21
6771 24
6772 23
6773 20
6774 29
6776 38
6777 29
6779 38
6780 22
6781 27
6782 25
6783 24
6784 31
6785 28
6786 24
6787 31
6788 22
6789 27
6790 25
6791 23
6792 22
6793 20
6794 29
6796 38
6797 29
6799 38
6800 22
6801 27
6802 25
6803 24
6804 31
6805 28
6806 24
6807 31
6808 28
6809 22
6810 27
6811 25
6812 23
6813 22
6814 20
6815 29
6817 38
6818 29
6820 38
6821 22
6822 27
6823 25
6824 24
6825 31
6826 28
6827 24
6828 31
6829 28
6830 22
6831 27
6832 25
6833 23
6834 22
6835 34
6836 30
6837 25
6838 30
6839 21
6840 24
6841 23
6842 23
6843 28
6844 26
6845 23
6846 28
6847 26
6848 21
6849 24
6850 23
6851 20
6852 29
6854 38
6855 29
6857 38
6858 22
6859 27
6860 25
6861 24
6862 31
6863 28
6864 24
6865 31
6866 28
6867 22
6868 27
6869 25
6870 23
6871 22
6872 13
6873 16
6874 25
6876 34
6877 25
6879 34
6880 18
6881 23
6882 21
6883 20
6884 27
6885 24
6886 20
6887 27
6888 24
6889 18
6890 23
6891 21
6892 19
6893 18
6894 16
6895 25
6897 34
6898 25
6900 34
6901 18
6902 23
6903 21
6904 20
6905 24
6906 20
6907 27
6908 24
6909 18
6910 23
6911 21
6912 19
6913 18
6914 21
6915 26
6916 21
6917 30
6918 26
6919 17
6920 20
6921 19
6922 19
6923 24
6924 22
6925 19
6926 24
6927 22
6928 20
6929 19
6930 16
6931 25
6933 34
6934 25
6936 34
6937 18
6938 23
6939 21
6940 20
6941 27
6942 24
6943 20
6944 27
6945 24
6946 18
6947 23
6948 21
6949 19
6950 18
6951 16
6952 25
6954 34
6955 25
6957 34
6958 23
6959 21
6960 20
6961 27
6962 24
6963 27
6964 24
6965 18
6966 23
6967 21
6968 19
6969 18
6970 16
6971 25
6973 34
6974 25
6976 34
6977 18
6978 21
6979 20
6980 27
6981 24
6982 20
6983 27
6984 24
6985 18
6986 23
6987 21
6988 19
6989 18
6990 21
6991 26
6992 21
6993 30
6994 26
6995 17
6996 20
6997 19
6998 24
6999 22
7000 19
7001 24
7002 22
7003 17
7004 20
7005 19
7006 16
7007 25
7009 25
7011 34
7012 18
7013 23
7014 21
7015 20
7016 27
7017 24
7018 20
7019 27
7020 24
7021 18
7022 23
7023 21
7024 19
7025 18
7026 8
7027 11
7028 20
7029 29
7030 20
7031 37
7032 29
7033 13
7034 16
7035 15
7036 22
7037 19
7038 15
7039 22
7040 19
7041 13
7042 18
7043 16
7044 14
7045 13
7046 11
7047 20
7048 37
7049 29
7050 20
7051 37
7052 29
7053 13
7054 18
7055 16
7056 15
7057 22
7058 19
7059 15
7060 22
7061 19
7062 13
7063 18
7064 16
7065 14
7066 13
7067 16
7068 25
7069 21
7070 16
7071 25
7072 21
7073 12
7074 15
7075 14
7076 14
7077 19
7078 17
7079 14
7080 19
7081 17
7082 12
7083 15
7084 14
7085 11
7086 20
7087 37
7088 29
7089 20
7090 37
7091 29
7092 13
7093 18
7094 16
7095 15
7096 22
7097 15
7098 22
7099 19
7100 13
7101 18
7102 16
7103 14
7104 13
7105 11
7106 20
7107 37
7108 29
7109 20
7110 37
7111 29
7112 13
7113 18
7114 16
7115 15
7116 22
7117 19
7118 15
7119 22
7120 19
7121 13
7122 18
7123 16
7124 14
7125 13
7126 11
7127 20
7128 37
7129 29
7130 20
7131 37
7132 29
7133 13
7134 18
7135 16
7136 15
7137 22
7138 19
7139 15
7140 22
7141 19
7142 13
7143 18
7144 16
7145 14
7146 13
7147 16
7148 25
7149 21
7150 16
7151 25
7152 21
7153 12
7154 15
7155 14
7156 19
7157 17
7158 14
7159 19
7160 17
7161 12
7162 15
7163 14
7164 11
7165 20
7166 37
7167 29
7168 20
7169 37
7170 13
7171 18
7172 16
7173 15
7174 22
7175 19
7176 15
7177 22
7178 19
7179 13
7180 18
7181 16
7182 14
7183 13
7184 17
7185 20
7186 29
7188 38
7189 29
7191 38
7192 22
7193 27
7194 25
7195 24
7196 31
7197 28
7198 28
7199 22
7200 27
7201 25
7202 23
7203 22
7204 20
7205 29
7207 38
7208 29
7210 38
7211 22
7212 27
7213 25
7214 24
7215 31
7216 28
7217 24
7218 31
7219 28
7220 22
7221 27
7222 25
7223 23
7224 22
7225 25
7226 34
7227 30
7228 25
7229 34
7230 30
7231 21
7232 24
7233 23
7234 23
7235 28
7236 26
7237 23
7238 28
7239 26
7240 21
7241 24
7242 20
7244 38
7245 29
7247 38
7248 22
7249 27
7250 25
7251 24
7252 31
7253 28
7254 24
7255 31
7256 28
7257 22
7258 27
7259 25
7260 23
7261 22
7262 20
7263 29
7265 38
7266 29
7268 38
7269 22
7270 25
7271 24
7272 31
7273 28
7274 24
7275 31
7276 28
7277 22
7278 27
7279 25
7280 23
7281 22
7282 20
7283 29
7285 38
7286 29
7288 38
7289 22
7290 27
7291 25
7292 24
7293 31
7294 28
7295 24
7296 31
7297 28
7298 22
7299 27
7300 25
7301 23
7302 22
7303 25
7304 34
7305 30
7306 25
7307 34
7308 30
7309 21
7310 24
7311 23
7312 23
7313 28
7314 26
7315 23
7316 28
7317 26
7318 21
7319 24
7320 23
7321 20
7322 29
7324 38
7325 29
7327 38
7328 22
7329 25
7330 24
7331 31
7332 28
7333 24
7334 31
7335 28
7336 22
7337 27
7338 25
7339 23
7340 22
7341 13
7342 16
7344 34
7345 25
7347 34
7348 18
7349 23
7350 21
7351 20
7352 27
7353 20
7354 27
7355 24
7356 18
7357 23
7358 21
7359 19
7360 18
7361 16
7362 25
7364 34
7365 25
7367 34
7368 18
7369 23
7370 21
7371 20
7372 27
7373 24
7374 20
7375 27
7376 24
7377 18
7378 23
7379 21
7380 19
7381 18
7382 21
7383 30
7384 26
7385 21
7386 30
7387 26
7388 17
7389 20
7390 19
7391 19
7392 24
7393 22
7394 19
7395 24
7396 22
7397 17
7398 20
7399 19
7400 16
7401 25
7403 34
7404 25
7406 34
7407 18
7408 21
7409 20
7410 27
7411 24
7412 20
7413 27
7414 24
7415 18
7416 23
7417 21
7418 19
7419 18
7420 16
7421 25
7423 34
7424 25
7426 34
7427 18
7428 23
7429 20
7430 27
7431 24
7432 20
7433 27
7434 24
7435 18
7436 23
7437 21
7438 19
7439 18
7440 16
7441 25
7443 34
7444 25
7446 34
7447 23
7448 21
7449 20
7450 27
7451 24
7452 27
7453 24
7454 18
7455 23
7456 21
7457 19
7458 18
7459 21
7460 30
7461 26
7462 21
7463 30
7464 17
7465 20
7466 19
7467 19
7468 24
7469 22
7470 19
7471 24
7472 22
7473 17
7474 20
7475 19
7476 16
7477 25
7479 34
7480 25
7482 34
7483 18
7484 23
7485 21
7486 20
7487 27
7488 24
7489 20
7490 27
7491 24
7492 18
7493 23
7494 21
7495 19
7496 18
7497 4
7498 7
7499 16
7500 33
7501 25
7502 33
7503 25
7504 9
7505 14
7506 12
7507 11
7508 18
7509 15
7510 11
7511 18
7512 15
7513 9
7514 14
7515 12
7516 10
7517 9
7518 7
7519 16
7520 33
7521 25
7522 16
7523 33
7524 25
7525 9
7526 14
7527 12
7528 11
7529 18
7530 15
7531 11
7532 18
7533 15
7534 9
7535 14
7536 12
7537 10
7538 9
7539 12
7540 21
7541 17
7542 12
7543 21
7544 17
7545 8
7546 11
7547 10
7548 10
7549 15
7550 13
7551 10
7552 15
7553 13
7554 8
7555 11
7556 10
7557 7
7558 16
7559 33
7560 25
7561 16
7562 33
7563 25
7564 9
7565 14
7566 12
7567 11
7568 18
7569 15
7570 11
7571 18
7572 15
7573 9
7574 14
7575 12
7576 10
7577 9
7578 7
7579 16
7580 33
7581 25
7582 16
7583 33
7584 25
7585 9
7586 14
7587 12
7588 11
7589 18
7590 15
7591 11
7592 18
7593 15
7594 9
7595 14
7596 12
7597 10
7598 9
7599 7
7600 16
7601 33
7602 25
7603 16
7604 33
7605 25
7606 9
7607 14
7608 11
7609 18
7610 15
7611 11
7612 18
7613 15
7614 9
7615 14
7616 12
7617 10
7618 9
7619 12
7620 21
7621 17
7622 12
7623 21
7624 17
7625 8
7626 11
7627 10
7628 10
7629 15
7630 13
7631 10
7632 15
7633 13
7634 8
7635 11
7636 10
7637 7
7638 16
7639 33
7640 25
7641 16
7642 33
7643 25
7644 9
7645 14
7646 12
7647 11
7648 18
7649 15
7650 11
7651 18
7652 15
7653 9
7654 14
7655 12
7656 10
7657 9
7658 7
7659 19
7660 36
7661 28
7662 19
7663 36
7664 28
7665 12
7666 17
7667 15
7668 14
7669 21
7670 18
7671 14
7672 21
7673 18
7674 12
7675 17
7676 15
7677 13
7678 12
7679 10
7680 19
7681 36
7682 28
7683 19
7684 36
7685 28
7686 12
7687 17
7688 15
7689 14
7690 21
7691 18
7692 14
7693 21
7694 18
7695 17
7696 15
7697 13
7698 12
7699 15
7700 24
7701 20
7702 15
7703 24
7704 20
7705 11
7706 14
7707 13
7708 13
7709 18
7710 16
7711 18
7712 16
7713 11
7714 14
7715 13
7716 10
7717 19
7718 36
7719 28
7720 19
7721 36
7722 28
7723 12
7724 17
7725 15
7726 21
7727 18
7728 14
7729 21
7730 18
7731 12
7732 17
7733 15
7734 13
7735 12
7736 10
7737 19
7738 28
7739 19
7740 36
7741 28
7742 12
7743 17
7744 15
7745 14
7746 21
7747 18
7748 14
7749 21
7750 12
7751 17
7752 15
7753 13
7754 12
7755 10
7756 19
7757 36
7758 28
7759 19
7760 36
7761 28
7762 12
7763 17
7764 15
7765 14
7766 21
7767 18
7768 14
7769 21
7770 18
7771 12
7772 17
7773 15
7774 13
7775 12
7776 15
7777 24
7778 20
7779 15
7780 24
7781 11
7782 14
7783 13
7784 13
7785 18
7786 16
7787 13
7788 18
7789 16
7790 11
7791 14
7792 13
7793 10
7794 19
7795 36
7796 28
7797 19
7798 36
7799 28
7800 17
7801 15
7802 14
7803 21
7804 18
7805 14
7806 21
7807 18
7808 12
7809 17
7810 15
7811 13
7812 12
7813 6
7814 9
7815 18
7816 35
7817 27
7818 18
7819 35
7820 27
7821 11
7822 16
7823 14
7824 13
7825 20
7826 17
7827 13
7828 20
7829 17
7830 11
7831 16
7832 14
7833 12
7834 11
7835 9
7836 18
7837 35
7838 27
7839 18
7840 35
7841 27
7842 11
7843 16
7844 14
7845 20
7846 17
7847 13
7848 20
7849 17
7850 11
7851 16
7852 14
7853 12
7854 11
7855 14
7856 23
7857 19
7858 14
7859 23
7860 10
7861 13
7862 12
7863 12
7864 17
7865 15
7866 12
7867 17
7868 15
7869 10
7870 13
7871 12
7872 9
7873 18
7874 35
7875 27
7876 18
7877 35
7878 27
7879 11
7880 16
7881 14
7882 13
7883 20
7884 17
7885 13
7886 20
7887 17
7888 11
7889 16
7890 14
7891 12
7892 11
7893 9
7894 18
7895 35
7896 27
7897 18
7898 35
7899 27
7900 11
7901 16
7902 14
7903 13
7904 20
7905 17
7906 13
7907 20
7908 17
7909 11
7910 16
7911 14
7912 12
7913 11
7914 9
7915 18
7916 35
7917 18
7918 35
7919 27
7920 11
7921 16
7922 14
7923 13
7924 20
7925 17
7926 13
7927 20
7928 17
7929 11
7930 16
7931 14
7932 12
7933 11
7934 14
7935 23
7936 14
7937 23
7938 19
7939 10
7940 13
7941 12
7942 12
7943 17
7944 15
7945 12
7946 17
7947 15
7948 10
7949 13
7950 12
7951 9
7952 18
7953 35
7954 27
7955 18
7956 35
7957 27
7958 11
7959 16
7960 14
7961 13
7962 20
7963 17
7964 13
7965 20
7966 17
7967 11
7968 16
7969 14
7970 12
7971 11
7972 6
7973 18
7974 35
7975 27
7976 18
7977 27
7978 16
7979 14
7980 13
7981 20
7982 17
7983 13
7984 20
7985 17
7986 11
7987 16
7988 14
7989 12
7990 11
7991 9
7992 18
7993 35
7994 27
7995 18
7996 27
7997 11
7998 16
7999 14
8000 13
8001 20
8002 17
8003 13
8004 20
8005 17
8006 11
8007 16
8008 14
8009 12
8010 11
8011 14
8012 23
8013 19
8014 23
8015 19
8016 10
8017 13
8018 12
8019 12
8020 17
8021 15
8022 12
8023 17
8024 15
8025 10
8026 13
8027 12
8028 9
8029 18
8030 35
8031 27
8032 18
8033 35
8034 27
8035 11
8036 16
8037 14
8038 13
8039 20
8040 17
8041 13
8042 20
8043 17
8044 11
8045 16
8046 14
8047 11
8048 9
8049 18
8050 35
8051 27
8052 18
8053 35
8054 27
8055 11
8056 16
8057 14
8058 13
8059 20
8060 17
8061 13
8062 20
8063 17
8064 11
8065 16
8066 14
8067 12
8068 11
8069 9
8070 18
8071 35
8072 27
8073 18
8074 35
8075 27
8076 11
8077 16
8078 14
8079 13
8080 20
8081 17
8082 13
8083 20
8084 17
8085 11
8086 16
8087 14
8088 12
8089 11
8090 14
8091 23
8092 19
8093 14
8094 23
8095 19
8096 10
8097 13
8098 12
8099 12
8100 17
8101 15
8102 12
8103 17
8104 15
8105 10
8106 12
8107 9
8108 18
8109 35
8110 27
8111 18
8112 35
8113 27
8114 11
8115 16
8116 14
8117 13
8118 20
8119 17
8120 13
8121 20
8122 17
8123 11
8124 16
8125 14
8126 12
8127 11
8128 11
8129 14
8130 23
8132 32
8133 23
8135 32
8136 16
8137 21
8138 19
8139 18
8140 25
8141 22
8142 18
8143 25
8144 22
8145 16
8146 21
8147 19
8148 17
8149 16
8150 14
8151 23
8153 32
8154 23
8156 32
8157 21
8158 18
8159 25
8160 22
8161 18
8162 25
8163 22
8164 16
8165 21
8166 17
8167 16
8168 19
8169 28
8170 24
8171 28
8172 24
8173 15
8174 18
8175 17
8176 17
8177 22
8178 20
8179 17
8180 22
8181 20
8182 18
8183 17
8184 14
8185 23
8187 32
8188 23
8190 32
8191 16
8192 21
8193 19
8194 18
8195 25
8196 22
8197 18
8198 25
8199 22
8200 16
8201 21
8202 19
8203 17
8204 16
8205 14
8206 23
8208 32
8209 23
8211 32
8212 16
8213 21
8214 19
8215 18
8216 25
8217 22
8218 18
8219 25
8220 22
8221 16
8222 19
8223 17
8224 16
8225 14
8226 23
8227 32
8228 23
8230 32
8231 16
8232 21
8233 19
8234 18
8235 25
8236 22
8237 18
8238 25
8239 22
8240 16
8241 21
8242 19
8243 17
8244 16
8245 19
8246 28
8247 24
8248 19
8249 28
8250 24
8251 15
8252 18
8253 17
8254 17
8255 22
8256 20
8257 17
8258 22
8259 20
8260 15
8261 18
8262 17
8263 14
8264 23
8266 32
8267 23
8269 16
8270 21
8271 19
8272 18
8273 25
8274 22
8275 18
8276 25
8277 22
8278 16
8279 21
8280 19
8281 17
8282 16
8283 9
8284 21
8285 38
8286 30
8287 21
8288 38
8289 30
8290 14
8291 19
8292 17
8293 16
8294 23
8295 20
8296 16
8297 23
8298 20
8299 14
8300 19
8301 15
8302 14
8303 12
8304 21
8305 38
8306 30
8307 38
8308 30
8309 14
8310 19
8311 17
8312 16
8313 23
8314 20
8315 16
8316 23
8317 20
8318 14
8319 19
8320 17
8321 15
8322 14
8323 17
8324 22
8325 17
8326 26
8327 22
8328 13
8329 16
8330 15
8331 15
8332 20
8333 18
8334 15
8335 20
8336 18
8337 13
8338 16
8339 15
8340 12
8341 38
8342 30
8343 21
8344 38
8345 30
8346 14
8347 19
8348 17
8349 23
8350 20
8351 16
8352 23
8353 20
8354 14
8355 19
8356 17
8357 15
8358 14
8359 12
8360 21
8361 38
8362 30
8363 21
8364 30
8365 14
8366 19
8367 17
8368 16
8369 23
8370 20
8371 16
8372 23
8373 20
8374 14
8375 19
8376 15
8377 14
8378 12
8379 21
8380 38
8381 30
8382 21
8383 38
8384 30
8385 14
8386 19
8387 17
8388 16
8389 23
8390 20
8391 23
8392 20
8393 14
8394 19
8395 17
8396 15
8397 14
8398 17
8399 26
8400 17
8401 26
8402 22
8403 13
8404 16
8405 15
8406 15
8407 20
8408 18
8409 15
8410 20
8411 18
8412 13
8413 16
8414 15
8415 12
8416 21
8417 38
8418 30
8419 21
8420 38
8421 30
8422 14
8423 19
8424 17
8425 16
8426 23
8427 20
8428 16
8429 23
8430 20
8431 14
8432 19
8433 17
8434 15
8435 14
8436 6
8437 9
8438 18
8439 35
8440 27
8441 18
8442 35
8443 27
8444 11
8445 16
8446 14
8447 13
8448 20
8449 17
8450 13
8451 20
8452 17
8453 11
8454 16
8455 14
8456 12
8457 9
8458 18
8459 35
8460 27
8461 18
8462 35
8463 27
8464 11
8465 16
8466 14
8467 13
8468 20
8469 17
8470 13
8471 20
8472 17
8473 11
8474 16
8475 14
8476 12
8477 11
8478 14
8479 23
8480 19
8481 14
8482 19
8483 10
8484 13
8485 12
8486 12
8487 17
8488 15
8489 12
8490 17
8491 15
8492 10
8493 13
8494 12
8495 18
8496 35
8497 27
8498 35
8499 27
8500 11
8501 16
8502 14
8503 13
8504 20
8505 17
8506 13
8507 20
8508 17
8509 11
8510 16
8511 14
8512 12
8513 11
8514 9
8515 18
8516 35
8517 27
8518 18
8519 35
8520 16
8521 14
8522 13
8523 20
8524 17
8525 13
8526 20
8527 11
8528 16
8529 14
8530 12
8531 11
8532 9
8533 18
8534 35
8535 27
8536 18
8537 35
8538 27
8539 11
8540 16
8541 14
8542 13
8543 20
8544 17
8545 13
8546 20
8547 17
8548 11
8549 16
8550 14
8551 12
8552 11
8553 14
8554 14
8555 23
8556 19
8557 10
8558 13
8559 12
8560 12
8561 17
8562 15
8563 12
8564 17
8565 15
8566 10
8567 12
8568 9
8569 18
8570 35
8571 27
8572 18
8573 35
8574 27
8575 11
8576 16
8577 14
8578 20
8579 17
8580 13
8581 20
8582 17
8583 11
8584 16
8585 14
8586 12
8587 11
8588 14
8589 23
8591 32
8592 23
8594 32
8595 16
8596 21
8597 18
8598 25
8599 22
8600 18
8601 25
8602 16
8603 21
8604 19
8605 17
8606 16
8607 14
8608 23
8610 32
8611 23
8613 32
8614 16
8615 21
8616 19
8617 18
8618 25
8619 22
8620 18
8621 25
8622 16
8623 21
8624 19
8625 17
8626 16
8627 19
8628 28
8629 24
8630 19
8631 28
8632 24
8633 15
8634 18
8635 17
8636 22
8637 20
8638 17
8639 22
8640 20
8641 15
8642 18
8643 17
8644 14
8645 23
8647 32
8648 23
8650 32
8651 16
8652 21
8653 19
8654 18
8655 25
8656 22
8657 18
8658 25
8659 22
8660 16
8661 21
8662 19
8663 17
8664 16
8665 14
8666 23
8668 32
8669 23
8671 32
8672 16
8673 21
8674 19
8675 18
8676 25
8677 18
8678 25
8679 21
8680 19
8681 17
8682 16
8683 14
8684 23
8686 32
8687 23
8689 32
8690 16
8691 21
8692 19
8693 18
8694 25
8695 22
8696 18
8697 25
8698 22
8699 16
8700 21
8701 19
8702 17
8703 16
8704 19
8705 28
8706 24
8707 19
8708 28
8709 24
8710 15
8711 18
8712 17
8713 17
8714 22
8715 20
8716 17
8717 22
8718 20
8719 15
8720 18
8721 17
8722 14
8723 23
8725 32
8726 23
8728 32
8729 16
8730 21
8731 19
8732 18
8733 25
8734 22
8735 18
8736 25
8737 22
8738 16
8739 21
8740 19
8741 17
8742 16
8743 9
8744 12
8745 21
8746 38
8747 30
8748 21
8749 38
8750 30
8751 14
8752 19
8753 17
8754 16
8755 23
8756 20
8757 16
8758 23
8759 20
8760 14
8761 19
8762 17
8763 15
8764 14
8765 12
8766 21
8767 38
8768 30
8769 21
8770 38
8771 30
8772 14
8773 19
8774 17
8775 16
8776 23
8777 20
8778 16
8779 23
8780 20
8781 14
8782 19
8783 17
8784 15
8785 14
8786 17
8787 26
8788 22
8789 17
8790 26
8791 22
8792 13
8793 16
8794 15
8795 15
8796 20
8797 18
8798 15
8799 20
8800 18
8801 13
8802 16
8803 15
8804 12
8805 21
8806 38
8807 30
8808 21
8809 38
8810 30
8811 14
8812 19
8813 17
8814 16
8815 23
8816 20
8817 16
8818 23
8819 20
8820 14
8821 19
8822 17
8823 15
8824 14
8825 12
8826 21
8827 38
8828 30
8829 38
8830 30
8831 14
8832 19
8833 17
8834 16
8835 23
8836 20
8837 16
8838 23
8839 20
8840 14
8841 19
8842 17
8843 15
8844 14
8845 12
8846 21
8847 38
8848 30
8849 21
8850 38
8851 30
8852 14
8853 19
8854 17
8855 16
8856 23
8857 20
8858 16
8859 23
8860 20
8861 14
8862 19
8863 17
8864 15
8865 14
8866 17
8867 26
8868 22
8869 26
8870 22
8871 13
8872 16
8873 15
8874 15
8875 20
8876 18
8877 15
8878 20
8879 18
8880 13
8881 16
8882 15
8883 12
8884 21
8885 38
8886 30
8887 21
8888 38
8889 30
8890 14
8891 19
8892 17
8893 16
8894 23
8895 20
8896 23
8897 20
8898 14
8899 19
8900 17
8901 15
8902 14
8903 7
8904 16
8905 33
8906 25
8907 16
8908 33
8909 25
8910 9
8911 14
8912 12
8913 11
8914 18
8915 15
8916 11
8917 18
8918 15
8919 9
8920 14
8921 10
8922 7
8923 16
8924 33
8925 25
8926 16
8927 33
8928 25
8929 9
8930 14
8931 12
8932 11
8933 15
8934 11
8935 18
8936 15
8937 9
8938 14
8939 12
8940 9
8941 21
8942 17
8943 12
8944 21
8945 17
8946 8
8947 11
8948 10
8949 10
8950 15
8951 13
8952 10
8953 15
8954 13
8955 8
8956 11
8957 10
8958 7
8959 16
8960 33
8961 25
8962 16
8963 33
8964 25
8965 9
8966 14
8967 12
8968 11
8969 18
8970 15
8971 11
8972 18
8973 15
8974 9
8975 14
8976 12
8977 9
8978 7
8979 16
8980 33
8981 25
8982 16
8983 33
8984 25
8985 9
8986 14
8987 12
8988 11
8989 18
8990 15
8991 11
8992 18
8993 15
8994 9
8995 14
8996 12
8997 10
8998 9
8999 7
9000 16
9001 33
9002 25
9003 33
9004 9
9005 14
9006 12
9007 11
9008 18
9009 15
9010 11
9011 18
9012 15
9013 9
9014 14
9015 12
9016 9
9017 12
9018 21
9019 17
9020 12
9021 21
9022 17
9023 11
9024 10
9025 10
9026 15
9027 13
9028 10
9029 15
9030 8
9031 11
9032 10
9033 7
9034 33
9035 25
9036 16
9037 33
9038 25
9039 9
9040 14
9041 12
9042 11
9043 18
9044 15
9045 18
9046 15
9047 9
9048 14
9049 12
9050 10
9051 9
9052 7
9053 10
9054 19
9055 36
9056 28
9057 19
9058 36
9059 28
9060 12
9061 17
9062 15
9063 14
9064 21
9065 18
9066 14
9067 21
9068 18
9069 12
9070 17
9071 15
9072 13
9073 12
9074 10
9075 19
9076 36
9077 28
9078 19
9079 36
9080 28
9081 12
9082 17
9083 15
9084 14
9085 21
9086 18
9087 14
9088 21
9089 18
9090 12
9091 17
9092 15
9093 13
9094 12
9095 15
9096 24
9097 20
9098 24
9099 20
9100 11
9101 14
9102 13
9103 13
9104 18
9105 16
9106 13
9107 18
9108 16
9109 11
9110 14
9111 13
9112 10
9113 19
9114 36
9115 28
9116 19
9117 36
9118 28
9119 12
9120 17
9121 15
9122 14
9123 21
9124 18
9125 14
9126 21
9127 18
9128 12
9129 17
9130 15
9131 13
9132 12
9133 10
9134 19
9135 36
9136 28
9137 19
9138 36
9139 28
9140 12
9141 17
9142 15
9143 14
9144 21
9145 18
9146 14
9147 18
9148 17
9149 15
9150 12
9151 10
9152 19
9153 36
9154 28
9155 36
9156 28
9157 12
9158 17
9159 15
9160 14
9161 21
9162 18
9163 14
9164 21
9165 18
9166 12
9167 17
9168 15
9169 13
9170 12
9171 20
9172 15
9173 24
9174 20
9175 11
9176 14
9177 13
9178 18
9179 16
9180 13
9181 18
9182 16
9183 11
9184 14
9185 13
9186 10
9187 19
9188 36
9189 28
9190 19
9191 36
9192 28
9193 12
9194 17
9195 15
9196 14
9197 21
9198 18
9199 14
9200 21
9201 12
9202 17
9203 15
9204 13
9205 12
9206 6
9207 9
9208 18
9209 35
9210 27
9211 18
9212 35
9213 11
9214 16
9215 14
9216 13
9217 20
9218 17
9219 13
9220 20
9221 17
9222 11
9223 16
9224 14
9225 12
9226 11
9227 9
9228 18
9229 35
9230 27
9231 18
9232 35
9233 27
9234 11
9235 16
9236 14
9237 13
9238 20
9239 17
9240 13
9241 20
9242 17
9243 11
9244 16
9245 14
9246 12
9247 11
9248 14
9249 23
9250 19
9251 14
9252 23
9253 19
9254 10
9255 12
9256 12
9257 17
9258 15
9259 12
9260 17
9261 15
9262 10
9263 13
9264 12
9265 9
9266 18
9267 35
9268 27
9269 18
9270 35
9271 27
9272 11
9273 14
9274 20
9275 17
9276 13
9277 20
9278 17
9279 11
9280 14
9281 12
9282 11
9283 9
9284 18
9285 35
9286 27
9287 18
9288 35
9289 27
9290 11
9291 16
9292 14
9293 13
9294 20
9295 17
9296 13
9297 20
9298 17
9299 11
9300 16
9301 14
9302 12
9303 11
9304 9
9305 18
9306 35
9307 27
9308 18
9309 35
9310 27
9311 16
9312 14
9313 13
9314 20
9315 17
9316 13
9317 20
9318 17
9319 11
9320 16
9321 14
9322 12
9323 11
9324 14
9325 23
9326 19
9327 14
9328 23
9329 19
9330 10
9331 13
9332 12
9333 17
9334 15
9335 12
9336 17
9337 15
9338 10
9339 13
9340 12
9341 9
9342 18
9343 35
9344 27
9345 18
9346 35
9347 27
9348 11
9349 16
9350 14
9351 13
9352 20
9353 13
9354 20
9355 17
9356 11
9357 16
9358 14
9359 12
9360 11
9361 3
9362 6
9363 15
9364 32
9365 24
9366 15
9367 32
9368 24
9369 8
9370 13
9371 10
9372 17
9373 10
9374 17
9375 14
9376 8
9377 13
9378 11
9379 9
9380 8
9381 6
9382 15
9383 32
9384 15
9385 32
9386 24
9387 8
9388 13
9389 11
9390 10
9391 17
9392 14
9393 10
9394 17
9395 14
9396 8
9397 13
9398 11
9399 9
9400 8
9401 11
9402 20
9403 16
9404 11
9405 20
9406 16
9407 7
9408 10
9409 9
9410 9
9411 14
9412 12
9413 9
9414 14
9415 12
9416 7
9417 10
9418 9
9419 6
9420 15
9421 32
9422 24
9423 15
9424 32
9425 24
9426 8
9427 13
9428 11
9429 10
9430 17
9431 14
9432 10
9433 17
9434 14
9435 8
9436 13
9437 11
9438 9
9439 8
9440 6
9441 15
9442 32
9443 24
9444 15
9445 32
9446 24
9447 8
9448 13
9449 11
9450 10
9451 17
9452 14
9453 10
9454 17
9455 14
9456 8
9457 13
9458 9
9459 8
9460 15
9461 32
9462 24
9463 15
9464 32
9465 24
9466 8
9467 13
9468 11
9469 10
9470 17
9471 14
9472 10
9473 17
9474 14
9475 8
9476 13
9477 11
9478 9
9479 8
9480 11
9481 20
9482 16
9483 11
9484 20
9485 16
9486 7
9487 10
9488 9
9489 9
9490 14
9491 12
9492 9
9493 14
9494 12
9495 7
9496 10
9497 9
9498 6
9499 15
9500 32
9501 24
9502 15
9503 32
9504 24
9505 8
9506 13
9507 11
9508 10
9509 17
9510 14
9511 10
9512 17
9513 14
9514 8
9515 13
9516 11
9517 9
9518 8
9519 12
9520 15
9521 24
9523 33
9524 24
9526 33
9527 17
9528 22
9529 20
9530 19
9531 26
9532 23
9533 19
9534 26
9535 23
9536 17
9537 22
9538 20
9539 18
9540 17
9541 15
9542 24
9544 33
9545 24
9547 33
9548 17
9549 22
9550 20
9551 19
9552 26
9553 23
9554 19
9555 23
9556 17
9557 22
9558 20
9559 18
9560 17
9561 20
9562 29
9563 25
9564 20
9565 29
9566 25
9567 16
9568 19
9569 18
9570 18
9571 23
9572 21
9573 18
9574 23
9575 21
9576 16
9577 19
9578 18
9579 15
9580 24
9582 33
9583 24
9585 33
9586 17
9587 22
9588 20
9589 19
9590 26
9591 19
9592 26
9593 23
9594 17
9595 22
9596 20
9597 18
9598 17
9599 15
9600 24
9602 33
9603 24
9605 33
9606 17
9607 22
9608 20
9609 19
9610 26
9611 23
9612 19
9613 26
9614 23
9615 22
9616 20
9617 18
9618 17
9619 15
9620 24
9622 33
9623 24
9625 33
9626 17
9627 22
9628 20
9629 19
9630 26
9631 23
9632 19
9633 26
9634 23
9635 17
9636 22
9637 20
9638 18
9639 17
9640 20
9641 29
9642 25
9643 20
9644 29
9645 25
9646 16
9647 19
9648 18
9649 18
9650 23
9651 21
9652 18
9653 23
9654 21
9655 16
9656 19
9657 18
9658 15
9659 24
9661 33
9662 24
9664 33
9665 20
9666 19
9667 26
9668 23
9669 19
9670 26
9671 23
9672 22
9673 20
9674 18
9675 17
9676 29
9677 32
9684 34
9685 39
9686 37
9687 36
9690 36
9693 34
9694 39
9695 37
9696 35
9697 34
9698 32
9705 34
9706 39
9707 37
9708 36
9710 36
9713 34
9714 39
9715 37
9716 35
9717 34
9718 37
9721 37
9724 33
9725 36
9726 35
9727 35
9729 38
9730 35
9732 38
9733 33
9734 36
9735 35
9736 32
9742 34
9743 39
9744 37
9745 36
9748 36
9751 34
9752 39
9753 37
9754 35
9755 34
9756 32
9763 34
9764 39
9765 37
9766 36
9769 36
9771 34
9772 39
9773 37
9774 35
9775 34
9776 32
9782 34
9783 39
9784 37
9785 36
9788 36
9791 34
9792 39
9793 37
9794 35
9795 34
9796 37
9799 37
9802 33
9803 36
9804 35
9806 38
9807 35
9809 38
9810 33
9811 36
9812 35
9813 32
9820 34
9821 39
9822 37
9823 36
9826 36
9829 34
9830 39
9831 37
9832 35
9833 34
9834 21
9835 24
9836 33
9839 33
9842 26
9843 31
9844 29
9845 28
9846 35
9847 32
9848 28
9849 35
9850 32
9851 26
9852 31
9853 29
9854 27
9855 26
9856 24
9857 33
9860 33
9863 26
9864 31
9865 29
9866 28
9867 35
9868 32
9869 28
9870 35
9871 32
9872 26
9873 31
9874 29
9875 27
9876 26
9877 29
9878 38
9879 34
9880 29
9881 38
9882 34
9883 25
9884 28
9885 27
9886 27
9887 32
9888 30
9889 27
9890 25
9891 28
9892 27
9893 24
9894 33
9897 33
9900 26
9901 31
9902 29
9903 28
9904 35
9905 32
9906 28
9907 35
9908 32
9909 26
9910 31
9911 29
9912 27
9913 26
9914 24
9915 33
9918 33
9921 26
9922 31
9923 29
9924 28
9925 35
9926 32
9927 28
9928 35
9929 32
9930 26
9931 31
9932 29
9933 27
9934 24
9935 33
9938 33
9941 26
9942 31
9943 29
9944 28
9945 32
9946 28
9947 35
9948 32
9949 26
9950 31
9951 29
9952 27
9953 26
9954 29
9955 38
9956 34
9957 29
9958 38
9959 34
9960 25
9961 28
9962 27
9963 32
9964 32
9965 30
9966 25
9967 28
9968 27
9969 24
9970 33
9973 33
9976 26
9977 31
9978 29
9979 28
9980 35
9981 32
9982 28
9983 35
9984 32
9985 26
9986 31
9987 29
9988 27
9989 15
9990 24
9992 33
9993 24
9995 33
9996 17
9997 22
9998 20
9999 19
10000 26
10001 23
10002 19
10003 26
10004 23
10005 17
10006 22
10007 20
10008 17
10009 24
10011 33
10012 24
10014 33
10015 17
10016 22
10017 20
10018 19
10019 26
10020 23
10021 26
10022 23
10023 17
10024 22
10025 20
10026 18
10027 17
10028 20
10029 29
10030 25
10031 20
10032 29
10033 25
10034 16
10035 19
10036 18
10037 18
10038 23
10039 21
10040 18
10041 23
10042 21
10043 16
10044 19
10045 18
10046 15
10047 24
10049 33
10050 24
10052 33
10053 17
10054 22
10055 19
10056 26
10057 23
10058 19
10059 26
10060 23
10061 17
10062 22
10063 20
10064 18
10065 17
10066 15
10068 33
10069 24
10071 33
10072 17
10073 22
10074 20
10075 19
10076 26
10077 23
10078 19
10079 26
10080 23
10081 17
10082 22
10083 20
10084 18
10085 17
10086 15
10087 24
10089 33
10090 24
10092 33
10093 17
10094 22
10095 20
10096 19
10097 26
10098 23
10099 19
10100 26
10101 23
10102 17
10103 22
10104 20
10105 18
10106 17
10107 20
10108 29
10109 25
10110 20
10111 29
10112 25
10113 16
10114 19
10115 18
10116 18
10117 23
10118 21
10119 18
10120 23
10121 21
10122 16
10123 19
10124 18
10125 15
10126 24
10128 33
10129 24
10131 33
10132 17
10133 22
10134 20
10135 19
10136 26
10137 19
10138 26
10139 23
10140 17
10141 22
10142 20
10143 18
10144 17
10145 29
10146 32
10153 34
10154 39
10155 37
10156 36
10159 36
10162 34
10163 39
10164 37
10165 35
10166 34
10167 32
10174 34
10175 39
10176 37
10177 36
10180 36
10183 34
10184 39
10185 37
10186 35
10187 34
10188 37
10190 37
10193 33
10194 36
10195 35
10196 35
10197 38
10198 35
10200 38
10201 33
10202 36
10203 35
10204 32
10211 34
10212 37
10213 36
10216 36
10219 34
10220 39
10221 37
10222 35
10223 34
10224 32
10231 34
10232 39
10233 37
10234 36
10237 36
10240 34
10241 39
10242 37
10243 35
10244 34
10245 32
10252 34
10253 37
10254 36
10257 36
10260 34
10261 39
10262 37
10263 35
10264 34
10265 37
10268 37
10271 33
10272 36
10273 35
10274 35
10276 38
10277 35
10279 38
10280 33
10281 36
10282 35
10283 32
10290 34
10291 39
10292 37
10293 36
10296 36
10299 34
10300 39
10301 37
10302 35
10303 34
10304 21
10305 24
10306 33
10309 33
10312 26
10313 31
10314 29
10315 28
10316 35
10317 28
10318 35
10319 32
10320 26
10321 31
10322 29
10323 27
10324 26
10325 24
10326 33
10329 33
10332 26
10333 31
10334 29
10335 28
10336 35
10337 32
10338 28
10339 35
10340 32
10341 26
10342 31
10343 29
10344 26
10345 29
10346 38
10347 34
10348 38
10349 34
10350 25
10351 28
10352 27
10353 27
10354 32
10355 30
10356 27
10357 32
10358 30
10359 25
10360 28
10361 27
10362 24
10363 33
10366 33
10369 26
10370 31
10371 29
10372 28
10373 35
10374 32
10375 28
10376 35
10377 32
10378 26
10379 31
10380 29
10381 27
10382 26
10383 24
10384 33
10386 33
10389 26
10390 31
10391 29
10392 28
10393 35
10394 32
10395 28
10396 35
10397 32
10398 26
10399 31
10400 29
10401 27
10402 26
10403 24
10404 33
10407 33
10410 26
10411 31
10412 29
10413 28
10414 35
10415 32
10416 28
10417 35
10418 32
10419 26
10420 31
10421 29
10422 27
10423 26
10424 29
10425 38
10426 34
10427 29
10428 38
10429 34
10430 28
10431 27
10432 27
10433 32
10434 30
10435 27
10436 32
10437 30
10438 25
10439 28
10440 27
10441 33
10444 33
10447 26
10448 31
10449 29
10450 28
10451 35
10452 32
10453 28
10454 35
10455 32
10456 26
10457 31
10458 29
10459 27
10460 26
10461 5
10462 8
10463 34
10464 17
10465 34
10466 26
10467 15
10468 13
10469 12
10470 19
10471 16
10472 12
10473 19
10474 16
10475 10
10476 15
10477 13
10478 11
10479 10
10480 8
10481 17
10482 34
10483 26
10484 34
10485 26
10486 10
10487 15
10488 13
10489 12
10490 19
10491 16
10492 12
10493 19
10494 16
10495 10
10496 15
10497 11
10498 10
10499 13
10500 18
10501 13
10502 18
10503 9
10504 12
10505 11
10506 11
10507 16
10508 14
10509 11
10510 16
10511 14
10512 9
10513 12
10514 11
10515 8
10516 17
10517 26
10518 17
10519 34
10520 26
10521 10
10522 15
10523 13
10524 12
10525 19
10526 16
10527 12
10528 19
10529 16
10530 10
10531 15
10532 13
10533 11
10534 10
10535 8
10536 17
10537 34
10538 26
10539 17
10540 34
10541 26
10542 10
10543 15
10544 13
10545 12
10546 19
10547 16
10548 12
10549 19
10550 16
10551 10
10552 15
10553 13
10554 11
10555 10
10556 8
10557 17
10558 26
10559 17
10560 34
10561 26
10562 10
10563 15
10564 13
10565 12
10566 19
10567 16
10568 12
10569 19
10570 16
10571 10
10572 15
10573 13
10574 11
10575 10
10576 13
10577 22
10578 18
10579 13
10580 22
10581 18
10582 9
10583 11
10584 11
10585 16
10586 14
10587 11
10588 16
10589 14
10590 9
10591 12
10592 11
10593 8
10594 17
10595 34
10596 26
10597 17
10598 34
10599 26
10600 10
10601 15
10602 13
10603 12
10604 19
10605 16
10606 12
10607 19
10608 16
10609 10
10610 15
10611 13
10612 11
10613 10
10614 10
10615 13
10616 22
10617 39
10618 31
10619 22
10620 39
10621 31
10622 15
10623 20
10624 18
10625 17
10626 24
10627 21
10628 17
10629 24
10630 21
10631 15
10632 20
10633 18
10634 16
10635 15
10636 13
10637 22
10638 39
10639 31
10640 22
10641 39
10642 31
10643 15
10644 20
10645 18
10646 17
10647 24
10648 21
10649 17
10650 24
10651 21
10652 15
10653 20
10654 18
10655 16
10656 15
10657 18
10658 27
10659 23
10660 18
10661 27
10662 23
10663 14
10664 17
10665 16
10666 16
10667 21
10668 19
10669 16
10670 21
10671 19
10672 14
10673 17
10674 16
10675 13
10676 22
10677 39
10678 31
10679 22
10680 39
10681 31
10682 20
10683 18
10684 17
10685 24
10686 21
10687 17
10688 24
10689 21
10690 15
10691 20
10692 18
10693 16
10694 15
10695 13
10696 22
10697 39
10698 31
10699 22
10700 39
10701 31
10702 15
10703 20
10704 18
10705 17
10706 24
10707 21
10708 17
10709 21
10710 15
10711 20
10712 18
10713 16
10714 15
10715 13
10716 22
10717 39
10718 31
10719 22
10720 39
10721 31
10722 15
10723 20
10724 18
10725 17
10726 24
10727 21
10728 24
10729 21
10730 15
10731 20
10732 18
10733 16
10734 15
10735 18
10736 27
10737 23
10738 27
10739 23
10740 14
10741 17
10742 16
10743 16
10744 21
10745 19
10746 16
10747 21
10748 19
10749 14
10750 17
10751 16
10752 13
10753 22
10754 39
10755 31
10756 22
10757 39
10758 31
10759 15
10760 20
10761 17
10762 24
10763 21
10764 17
10765 21
10766 15
10767 20
10768 18
10769 16
10770 15
10771 8
10772 11
10773 20
10774 37
10775 29
10776 20
10777 37
10778 29
10779 13
10780 18
10781 16
10782 15
10783 22
10784 19
10785 15
10786 22
10787 19
10788 13
10789 18
10790 16
10791 14
10792 13
10793 11
10794 20
10795 37
10796 20
10797 37
10798 29
10799 13
10800 18
10801 16
10802 15
10803 22
10804 19
10805 15
10806 22
10807 19
10808 13
10809 18
10810 16
10811 14
10812 13
10813 16
10814 25
10815 21
10816 16
10817 25
10818 21
10819 12
10820 15
10821 14
10822 14
10823 19
10824 17
10825 14
10826 19
10827 17
10828 12
10829 15
10830 14
10831 11
10832 20
10833 37
10834 29
10835 20
10836 37
10837 29
10838 13
10839 18
10840 16
10841 15
10842 22
10843 19
10844 15
10845 22
10846 19
10847 13
10848 18
10849 16
10850 14
10851 13
10852 11
10853 20
10854 37
10855 29
10856 20
10857 37
10858 29
10859 13
10860 16
10861 15
10862 22
10863 15
10864 22
10865 19
10866 13
10867 16
10868 14
10869 13
10870 11
10871 20
10872 37
10873 29
10874 20
10875 37
10876 29
10877 13
10878 18
10879 16
10880 15
10881 22
10882 19
10883 15
10884 22
10885 19
10886 13
10887 18
10888 16
10889 14
10890 13
10891 16
10892 25
10893 21
10894 16
10895 25
10896 21
10897 12
10898 15
10899 14
10900 14
10901 19
10902 17
10903 14
10904 19
10905 17
10906 12
10907 15
10908 14
10909 11
10910 20
10911 37
10912 29
10913 20
10914 37
10915 29
10916 13
10917 18
10918 16
10919 15
10920 22
10921 15
10922 22
10923 19
10924 13
10925 18
10926 16
10927 14
10928 13
10929 7
10930 10
10931 19
10932 36
10933 28
10934 19
10935 36
10936 28
10937 17
10938 15
10939 14
10940 21
10941 18
10942 14
10943 21
10944 12
10945 17
10946 15
10947 13
10948 12
10949 10
10950 19
10951 28
10952 19
10953 36
10954 28
10955 12
10956 17
10957 15
10958 14
10959 21
10960 18
10961 14
10962 21
10963 12
10964 17
10965 15
10966 13
10967 12
10968 15
10969 24
10970 20
10971 15
10972 24
10973 20
10974 11
10975 14
10976 13
10977 13
10978 18
10979 16
10980 13
10981 18
10982 16
10983 11
10984 14
10985 13
10986 10
10987 19
10988 36
10989 28
10990 19
10991 36
10992 28
10993 12
10994 17
10995 14
10996 21
10997 18
10998 14
10999 21
11000 18
11001 12
11002 17
11003 15
11004 13
11005 12
11006 10
11007 19
11008 36
11009 28
11010 19
11011 36
11012 28
11013 12
11014 17
11015 15
11016 14
11017 21
11018 18
11019 14
11020 21
11021 18
11022 12
11023 17
11024 12
11025 10
11026 19
11027 36
11028 28
11029 19
11030 36
11031 28
11032 12
11033 17
11034 15
11035 14
11036 21
11037 18
11038 14
11039 21
11040 18
11041 12
11042 17
11043 15
11044 13
11045 12
11046 15
11047 24
11048 20
11049 15
11050 24
11051 20
11052 11
11053 14
11054 13
11055 18
11056 16
11057 13
11058 18
11059 16
11060 11
11061 14
11062 13
11063 10
11064 19
11065 36
11066 28
11067 19
11068 36
11069 28
11070 12
11071 17
11072 15
11073 14
11074 18
11075 14
11076 21
11077 18
11078 12
11079 17
11080 15
11081 13
11082 12
11083 14
11084 17
11085 26
11087 35
11088 26
11090 35
11091 19
11092 24
11093 22
11094 21
11095 25
11096 21
11097 28
11098 19
11099 24
11100 22
11101 20
11102 19
11103 17
11104 26
11106 35
11107 26
11109 35
11110 19
11111 24
11112 22
11113 21
11114 28
11115 25
11116 21
11117 28
11118 25
11119 19
11120 24
11121 22
11122 20
11123 19
11124 22
11125 31
11126 27
11127 22
11128 31
11129 27
11130 18
11131 21
11132 20
11133 20
11134 25
11135 23
11136 20
11137 25
11138 23
11139 18
11140 21
11141 20
11142 17
11143 26
11145 35
11146 26
11148 35
11149 19
11150 24
11151 22
11152 21
11153 28
11154 25
11155 21
11156 28
11157 25
11158 19
11159 24
11160 22
11161 20
11162 19
11163 17
11164 26
11166 35
11167 26
11169 35
11170 19
11171 24
11172 22
11173 28
11174 25
11175 21
11176 28
11177 25
11178 19
11179 24
11180 22
11181 20
11182 19
11183 17
11184 26
11186 26
11188 35
11189 24
11190 22
11191 21
11192 28
11193 25
11194 21
11195 28
11196 25
11197 19
11198 24
11199 22
11200 20
11201 19
11202 22
11203 31
11204 27
11205 22
11206 27
11207 18
11208 20
11209 20
11210 25
11211 23
11212 20
11213 25
11214 18
11215 21
11216 20
11217 17
11218 26
11220 35
11221 26
11223 35
11224 19
11225 24
11226 22
11227 21
11228 28
11229 25
11230 21
11231 28
11232 25
11233 19
11234 24
11235 22
11236 20
11237 19
11238 11
11239 14
11240 23
11242 32
11243 23
11245 32
11246 16
11247 21
11248 19
11249 18
11250 25
11251 22
11252 18
11253 25
11254 22
11255 16
11256 21
11257 19
11258 17
11259 16
11260 14
11261 23
11263 32
11264 23
11266 32
11267 16
11268 21
11269 19
11270 18
11271 25
11272 18
11273 25
11274 22
11275 16
11276 21
11277 19
11278 17
11279 16
11280 19
11281 28
11282 24
11283 19
11284 24
11285 15
11286 18
11287 17
11288 17
11289 22
11290 20
11291 17
11292 22
11293 20
11294 15
11295 18
11296 17
11297 14
11298 23
11300 32
11301 23
11303 32
11304 16
11305 21
11306 19
11307 18
11308 25
11309 22
11310 18
11311 25
11312 22
11313 21
11314 19
11315 17
11316 16
11317 14
11318 23
11320 32
11321 23
11323 32
11324 16
11325 21
11326 19
11327 18
11328 25
11329 22
11330 22
11331 16
11332 21
11333 19
11334 17
11335 16
11336 14
11337 23
11339 32
11340 23
11342 32
11343 16
11344 21
11345 19
11346 18
11347 22
11348 18
11349 25
11350 22
11351 16
11352 21
11353 19
11354 17
11355 16
11356 19
11357 28
11358 19
11359 28
11360 24
11361 15
11362 18
11363 17
11364 17
11365 22
11366 20
11367 17
11368 22
11369 20
11370 15
11371 18
11372 17
11373 14
11374 23
11376 32
11377 23
11379 32
11380 16
11381 21
11382 19
11383 18
11384 25
11385 22
11386 18
11387 25
11388 22
11389 16
11390 21
11391 19
11392 17
11393 16
11394 7
11395 10
11396 19
11397 36
11398 28
11399 19
11400 36
11401 28
11402 12
11403 17
11404 15
11405 14
11406 21
11407 18
11408 14
11409 21
11410 18
11411 12
11412 17
11413 15
11414 13
11415 12
11416 10
11417 19
11418 36
11419 28
11420 19
11421 36
11422 28
11423 12
11424 17
11425 15
11426 14
11427 21
11428 14
11429 21
11430 12
11431 17
11432 15
11433 13
11434 12
11435 15
11436 24
11437 20
11438 15
11439 24
11440 20
11441 11
11442 14
11443 13
11444 13
11445 18
11446 16
11447 13
11448 16
11449 11
11450 14
11451 13
11452 10
11453 19
11454 36
11455 28
11456 19
11457 36
11458 28
11459 12
11460 17
11461 15
11462 14
11463 21
11464 18
11465 14
11466 21
11467 18
11468 12
11469 17
11470 15
11471 13
11472 12
11473 10
11474 19
11475 36
11476 28
11477 19
11478 36
11479 28
11480 12
11481 17
11482 15
11483 14
11484 21
11485 18
11486 14
11487 21
11488 18
11489 12
11490 17
11491 15
11492 13
11493 12
11494 10
11495 19
11496 36
11497 28
11498 19
11499 36
11500 28
11501 12
11502 17
11503 15
11504 14
11505 21
11506 18
11507 14
11508 21
11509 18
11510 12
11511 15
11512 13
11513 12
11514 15
11515 24
11516 20
11517 15
11518 24
11519 20
11520 11
11521 13
11522 13
11523 18
11524 16
11525 13
11526 18
11527 16
11528 11
11529 14
11530 13
11531 10
11532 19
11533 36
11534 28
11535 19
11536 36
11537 12
11538 17
11539 15
11540 14
11541 21
11542 18
11543 14
11544 21
11545 18
11546 12
11547 17
11548 15
11549 13
11550 12
11551 14
11552 17
11553 26
11555 35
11556 26
11558 35
11559 19
11560 24
11561 22
11562 21
11563 28
11564 25
11565 21
11566 28
11567 25
11568 24
11569 22
11570 20
11571 19
11572 17
11573 26
11575 35
11576 26
11578 35
11579 19
11580 24
11581 22
11582 21
11583 28
11584 25
11585 21
11586 28
11587 25
11588 19
11589 24
11590 22
11591 19
11592 22
11593 31
11594 27
11595 22
11596 31
11597 27
11598 18
11599 21
11600 20
11601 20
11602 25
11603 23
11604 20
11605 25
11606 23
11607 18
11608 21
11609 20
11610 17
11611 26
11613 35
11614 26
11616 35
11617 19
11618 24
11619 22
11620 21
11621 28
11622 25
11623 21
11624 28
11625 25
11626 19
11627 24
11628 22
11629 20
11630 19
11631 17
11632 26
11634 35
11635 26
11637 35
11638 19
11639 24
11640 22
11641 21
11642 28
11643 25
11644 21
11645 28
11646 25
11647 19
11648 24
11649 22
11650 20
11651 19
11652 17
11653 26
11655 35
11656 26
11658 35
11659 19
11660 24
11661 22
11662 21
11663 28
11664 25
11665 21
11666 28
11667 25
11668 19
11669 24
11670 22
11671 20
11672 19
11673 22
11674 31
11675 22
11676 31
11677 27
11678 18
11679 21
11680 20
11681 20
11682 25
11683 23
11684 20
11685 25
11686 23
11687 18
11688 21
11689 20
11690 17
11691 26
11693 35
11694 26
11696 35
11697 19
11698 24
11699 22
11700 21
11701 28
11702 25
11703 21
11704 28
11705 25
11706 19
11707 24
11708 22
11709 20
11710 19
11711 11
11712 14
11713 23
11715 32
11716 23
11718 32
11719 16
11720 21
11721 19
11722 18
11723 25
11724 22
11725 18
11726 25
11727 22
11728 16
11729 21
11730 19
11731 17
11732 16
11733 14
11734 23
11736 32
11737 23
11739 32
11740 16
11741 21
11742 19
11743 18
11744 25
11745 22
11746 18
11747 25
11748 22
11749 21
11750 19
11751 17
11752 16
11753 19
11754 28
11755 24
11756 19
11757 28
11758 24
11759 15
11760 18
11761 17
11762 17
11763 22
11764 20
11765 17
11766 22
11767 20
11768 15
11769 18
11770 17
11771 14
11772 23
11774 32
11775 23
11777 32
11778 16
11779 21
11780 19
11781 18
11782 25
11783 22
11784 18
11785 25
11786 16
11787 21
11788 19
11789 17
11790 16
11791 14
11793 32
11795 32
11796 16
11797 21
11798 19
11799 18
11800 25
11801 22
11802 18
11803 25
11804 22
11805 16
11806 21
11807 19
11808 17
11809 16
11810 14
11811 23
11813 32
11814 23
11816 32
11817 16
11818 21
11819 19
11820 18
11821 25
11822 22
11823 18
11824 25
11825 22
11826 16
11827 21
11828 19
11829 17
11830 16
11831 19
11832 28
11833 24
11834 19
11835 28
11836 24
11837 15
11838 18
11839 17
11840 17
11841 22
11842 20
11843 17
11844 22
11845 20
11846 15
11847 18
11848 17
11849 14
11850 23
11852 32
11853 23
11855 32
11856 16
11857 21
11858 19
11859 18
11860 25
11861 22
11862 18
11863 25
11864 22
11865 16
11866 21
11867 19
11868 17
11869 16
11870 5
11871 8
11872 17
11873 34
11874 26
11875 17
11876 34
11877 26
11878 10
11879 15
11880 13
11881 12
11882 19
11883 16
11884 12
11885 19
11886 16
11887 10
11888 15
11889 13
11890 11
11891 10
11892 8
11893 17
11894 34
11895 26
11896 17
11897 34
11898 26
11899 10
11900 15
11901 13
11902 12
11903 19
11904 16
11905 12
11906 19
11907 16
11908 10
11909 15
11910 13
11911 11
11912 10
11913 13
11914 22
11915 18
11916 13
11917 22
11918 18
11919 9
11920 12
11921 11
11922 11
11923 14
11924 11
11925 16
11926 14
11927 9
11928 12
11929 11
11930 8
11931 17
11932 34
11933 26
11934 17
11935 34
11936 26
11937 10
11938 15
11939 13
11940 12
11941 19
11942 16
11943 19
11944 16
11945 10
11946 13
11947 11
11948 10
11949 8
11950 17
11951 34
11952 26
11953 17
11954 26
11955 10
11956 15
11957 13
11958 12
11959 19
11960 16
11961 12
11962 19
11963 16
11964 10
11965 15
11966 13
11967 11
11968 10
11969 8
11970 17
11971 34
11972 26
11973 17
11974 34
11975 26
11976 10
11977 15
11978 13
11979 12
11980 19
11981 12
11982 19
11983 16
11984 10
11985 15
11986 13
11987 11
11988 10
11989 13
11990 22
11991 18
11992 22
11993 18
11994 9
11995 12
11996 11
11997 11
11998 16
11999 14
12000 11
12001 16
12002 14
12003 9
12004 11
12005 8
12006 17
12007 34
12008 26
12009 17
12010 34
12011 26
12012 10
12013 15
12014 13
12015 12
12016 19
12017 16
12018 12
12019 19
12020 16
12021 10
12022 15
12023 13
12024 11
12025 10
12026 10
12027 13
12028 22
12029 39
12030 31
12031 22
12032 31
12033 15
12034 20
12035 18
12036 17
12037 24
12038 21
12039 17
12040 24
12041 21
12042 15
12043 20
12044 18
12045 16
12046 15
12047 13
12048 22
12049 39
12050 31
12051 22
12052 39
12053 31
12054 15
12055 20
12056 18
12057 17
12058 24
12059 17
12060 24
12061 21
12062 15
12063 20
12064 16
12065 15
12066 18
12067 27
12068 23
12069 18
12070 27
12071 23
12072 14
12073 17
12074 16
12075 16
12076 19
12077 16
12078 21
12079 19
12080 14
12081 17
12082 13
12083 22
12084 31
12085 22
12086 39
12087 31
12088 15
12089 20
12090 18
12091 17
12092 24
12093 21
12094 17
12095 24
12096 21
12097 15
12098 20
12099 18
12100 16
12101 13
12102 39
12103 31
12104 22
12105 39
12106 15
12107 18
12108 17
12109 24
12110 21
12111 17
12112 24
12113 21
12114 15
12115 20
12116 18
12117 16
12118 15
12119 22
12120 39
12121 31
12122 22
12123 39
12124 15
12125 20
12126 18
12127 17
12128 24
12129 21
12130 17
12131 24
12132 21
12133 15
12134 20
12135 18
12136 16
12137 15
12138 18
12139 27
12140 23
12141 18
12142 27
12143 23
12144 14
12145 17
12146 16
12147 16
12148 21
12149 19
12150 16
12151 21
12152 19
12153 14
12154 17
12155 16
12156 13
12157 39
12158 31
12159 22
12160 39
12161 15
12162 20
12163 18
12164 17
12165 24
12166 21
12167 17
12168 24
12169 21
12170 15
12171 18
12172 16
12173 15
12174 8
12175 11
12176 20
12177 37
12178 29
12179 20
12180 37
12181 29
12182 13
12183 18
12184 16
12185 15
12186 22
12187 19
12188 15
12189 22
12190 19
12191 13
12192 18
12193 16
12194 14
12195 13
12196 11
12197 20
12198 37
12199 29
12200 20
12201 37
12202 29
12203 13
12204 18
12205 16
12206 15
12207 22
12208 19
12209 15
12210 22
12211 19
12212 18
12213 16
12214 14
12215 16
12216 25
12217 21
12218 16
12219 25
12220 21
12221 15
12222 14
12223 14
12224 19
12225 17
12226 14
12227 19
12228 17
12229 12
12230 15
12231 14
12232 11
12233 20
12234 37
12235 29
12236 20
12237 37
12238 29
12239 13
12240 18
12241 16
12242 15
12243 22
12244 15
12245 22
12246 19
12247 13
12248 18
12249 16
12250 14
12251 13
12252 11
12253 20
12254 37
12255 29
12256 20
12257 37
12258 29
12259 13
12260 18
12261 16
12262 15
12263 22
12264 19
12265 15
12266 22
12267 19
12268 13
12269 18
12270 16
12271 14
12272 13
12273 11
12274 20
12275 37
12276 29
12277 20
12278 37
12279 29
12280 13
12281 18
12282 16
12283 15
12284 22
12285 19
12286 15
12287 19
12288 13
12289 18
12290 16
12291 14
12292 13
12293 16
12294 25
12295 21
12296 16
12297 25
12298 21
12299 12
12300 15
12301 14
12302 14
12303 19
12304 17
12305 14
12306 19
12307 17
12308 15
12309 14
12310 11
12311 20
12312 37
12313 29
12314 20
12315 37
12316 29
12317 13
12318 18
12319 15
12320 22
12321 19
12322 15
12323 22
12324 13
12325 18
12326 16
12327 14
12328 13
12329 6
12330 9
12331 18
12332 35
12333 27
12334 18
12335 35
12336 27
12337 11
12338 16
12339 14
12340 13
12341 20
12342 17
12343 13
12344 20
12345 17
12346 11
12347 16
12348 14
12349 12
12350 11
12351 9
12352 18
12353 35
12354 18
12355 35
12356 27
12357 11
12358 16
12359 14
12360 13
12361 20
12362 17
12363 13
12364 20
12365 17
12366 11
12367 16
12368 14
12369 12
12370 11
12371 14
12372 23
12373 19
12374 14
12375 23
12376 19
12377 10
12378 13
12379 12
12380 12
12381 17
12382 15
12383 12
12384 17
12385 15
12386 10
12387 13
12388 12
12389 9
12390 35
12391 27
12392 18
12393 35
12394 27
12395 11
12396 16
12397 14
12398 20
12399 17
12400 13
12401 20
12402 17
12403 11
12404 16
12405 14
12406 12
12407 11
12408 9
12409 18
12410 27
12411 18
12412 35
12413 27
12414 11
12415 16
12416 14
12417 13
12418 20
12419 13
12420 20
12421 17
12422 11
12423 16
12424 14
12425 12
12426 11
12427 9
12428 18
12429 35
12430 27
12431 18
12432 35
12433 27
12434 11
12435 16
12436 14
12437 13
12438 20
12439 17
12440 13
12441 20
12442 17
12443 11
12444 16
12445 14
12446 12
12447 11
12448 14
12449 23
12450 19
12451 14
12452 23
12453 19
12454 10
12455 13
12456 12
12457 12
12458 17
12459 15
12460 12
12461 17
12462 15
12463 10
12464 13
12465 12
12466 9
12467 18
12468 35
12469 27
12470 18
12471 35
12472 27
12473 11
12474 16
12475 14
12476 13
12477 20
12478 17
12479 13
12480 20
12481 17
12482 11
12483 16
12484 12
12485 11
12486 5
12487 8
12488 17
12489 34
12490 26
12491 17
12492 34
12493 26
12494 15
12495 13
12496 12
12497 16
12498 12
12499 19
12500 16
12501 10
12502 15
12503 13
12504 11
12505 10
12506 8
12507 17
12508 34
12509 26
12510 17
12511 34
12512 26
12513 10
12514 15
12515 13
12516 12
12517 19
12518 16
12519 12
12520 19
12521 16
12522 10
12523 15
12524 13
12525 11
12526 10
12527 13
12528 22
12529 18
12530 13
12531 22
12532 18
12533 9
12534 12
12535 11
12536 11
12537 16
12538 14
12539 11
12540 16
12541 14
12542 9
12543 12
12544 11
12545 8
12546 17
12547 34
12548 26
12549 17
12550 34
12551 26
12552 10
12553 15
12554 13
12555 12
12556 19
12557 16
12558 12
12559 19
12560 16
12561 10
12562 15
12563 13
12564 11
12565 10
12566 8
12567 34
12568 26
12569 17
12570 34
12571 26
12572 10
12573 13
12574 12
12575 19
12576 16
12577 12
12578 19
12579 10
12580 15
12581 13
12582 10
12583 8
12584 17
12585 34
12586 26
12587 17
12588 34
12589 26
12590 10
12591 13
12592 12
12593 19
12594 16
12595 12
12596 19
12597 16
12598 10
12599 15
12600 13
12601 11
12602 10
12603 13
12604 22
12605 18
12606 13
12607 22
12608 18
12609 9
12610 11
12611 11
12612 16
12613 14
12614 11
12615 16
12616 14
12617 9
12618 12
12619 11
12620 8
12621 17
12622 34
12623 26
12624 17
12625 34
12626 10
12627 15
12628 13
12629 12
12630 19
12631 16
12632 12
12633 19
12634 16
12635 10
12636 15
12637 13
12638 11
0 230
1 230
2 230
3 230
4 230
5 230
6 230
7 230
8 230
9 230
10 230
11 230
12 230
13 230
14 230
15 230
16 230
17 230
18 230
19 230
20 230
21 230
22 230
23 230
24 230
25 230
26 230
27 230
28 230
29 230
30 230
31 230
32 230
33 230
34 230
35 230
36 230
37 230
38 230
39 230
40 230
41 230
42 230
43 230
44 230
45 230
46 230
47 230
48 230
49 230
50 230
51 230
52 230
53 230
54 230
55 230
56 230
57 230
58 230
59 230
60 230
61 230
62 230
63 230
64 230
65 230
66 230
67 230
68 230
69 230
70 230
71 230
72 230
73 230
74 230
75 230
76 230
77 230
78 230
79 230
80 230
81 230
82 230
83 230
84 230
85 230
86 230
87 230
88 230
89 230
90 230
91 230
92 230
93 230
94 230
95 230
96 230
97 230
98 230
99 230
100 230
101 230
102 230
103 230
104 230
105 230
106 230
107 230
108 230
109 230
110 230
111 230
112 230
113 230
114 230
115 230
116 230
117 230
118 230
119 230
120 230
121 230
122 230
123 230
124 230
125 230
126 230
127 230
128 230
129 230
130 230
131 230
132 230
133 230
134 230
135 230
136 230
137 230
138 230
139 230
140 230
141 230
142 230
143 230
144 230
145 230
146 230
147 230
148 230
149 230
150 230
151 230
152 230
153 230
154 230
155 230
156 230
157 230
158 230
159 230
160 230
161 230
162 230
163 230
164 230
165 230
166 230
167 230
168 230
169 230
170 230
171 230
172 230
173 230
174 230
175 230
176 230
177 230
178 230
179 230
180 230
181 230
182 230
183 230
184 230
185 230
186 230
187 230
188 230
189 230
190 230
191 230
192 230
193 230
194 230
195 230
196 230
197 230
198 230
199 230
200 230
201 230
202 230
203 230
204 230
205 230
206 230
207 230
208 230
209 230
210 230
211 230
212 230
213 230
214 230
215 230
216 230
217 230
218 230
219 230
220 230
221 230
222 230
223 230
224 230
225 230
226 230
227 230
228 230
229 230
WUG0 opposite right and WUG0 twice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

1
WUG0 right thrice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

2
WUG0 left after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP

3
WUG0 twice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

4
turn opposite left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

5
turn around left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

6
WUG0 left thrice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

7
turn around left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

8
turn opposite left after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

9
WUG0 opposite right and turn around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

10
WUG0 around right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

11
WUG0 left twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

12
WUG0 left and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

13
WUG0 opposite right twice and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

14
turn right twice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

15
WUG0 around right thrice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

16
turn opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

17
WUG0 opposite right twice and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

18
WUG0 left twice and WUG0 right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

19
turn right twice and WUG0 thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

20
WUG0 opposite right and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

21
turn around left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

22
WUG0 around left thrice after WUG0 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

23
turn opposite left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

24
WUG0 around right and WUG0 left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

25
WUG0 right twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

26
turn around right twice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

27
WUG0 thrice and turn left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

28
WUG0 opposite right thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

29
WUG0 left thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

30
WUG0 opposite right after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

31
WUG0 opposite right thrice after turn left I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

32
WUG0 opposite right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

33
WUG0 right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

34
turn around right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

35
turn opposite left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

36
WUG0 opposite right twice after turn left I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

37
WUG0 after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

38
WUG0 right and WUG0 around left twice I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around left twice
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

39
turn opposite right after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

40
WUG0 after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

41
turn around right twice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

42
WUG0 opposite left thrice and turn around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

43
WUG0 twice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

44
WUG0 opposite left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

45
WUG0 thrice and WUG0 opposite left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

46
WUG0 left thrice and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

47
WUG0 left and turn opposite left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

48
WUG0 opposite left thrice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

49
WUG0 around right and turn opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

50
WUG0 opposite left and WUG0 around right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump around right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

51
WUG0 after turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

52
WUG0 opposite right and WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

53
turn opposite right twice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

54
WUG0 and WUG0 around right thrice WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump around right thrice
--
I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

55
WUG0 around right twice and WUG0 opposite right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

56
WUG0 right thrice and turn right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

57
WUG0 thrice and WUG0 around left WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

58
WUG0 opposite left and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

59
WUG0 left thrice and turn left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

60
WUG0 opposite right thrice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

61
WUG0 opposite left thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

62
WUG0 after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

63
WUG0 opposite left after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

64
turn left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

65
WUG0 thrice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

66
WUG0 and turn around right thrice WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn around right thrice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

67
WUG0 and turn opposite right WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn opposite right
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

68
WUG0 opposite left thrice and turn right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT

69
WUG0 around right twice and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

70
WUG0 right twice after turn left twice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

71
WUG0 left after turn left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

72
WUG0 thrice after turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

73
WUG0 opposite right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

74
WUG0 around right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

75
WUG0 opposite left thrice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

76
WUG0 around left thrice and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

77
turn left twice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

78
turn opposite right after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

79
WUG0 around left twice and turn right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT

80
WUG0 around right twice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

81
WUG0 opposite right thrice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

82
turn opposite right twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

83
WUG0 around right thrice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

84
WUG0 opposite left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

85
WUG0 around left thrice and WUG0 right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

86
WUG0 around left twice and turn left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

87
turn left thrice and WUG0 thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

88
WUG0 around left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

89
WUG0 right twice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

90
turn right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

91
WUG0 opposite right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

92
WUG0 opposite right thrice and turn left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

93
turn opposite right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

94
WUG0 left after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

95
WUG0 twice and WUG0 right thrice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right thrice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

96
WUG0 around right twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

97
turn left and WUG0 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump
--
I_TURN_LEFT I_JUMP

98
WUG0 opposite left twice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

99
WUG0 opposite left and turn left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and turn left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

100
turn left thrice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

101
WUG0 opposite left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

102
turn left twice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

103
turn opposite right thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

104
WUG0 right thrice and WUG0 left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP

105
WUG0 around left thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

106
turn left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

107
WUG0 right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

108
turn around left thrice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

109
WUG0 left and WUG0 twice I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump twice
--
I_TURN_LEFT I_JUMP I_JUMP I_JUMP

110
WUG0 opposite right and turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

111
turn left twice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

112
WUG0 right after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

113
WUG0 thrice and turn left WUG1 WUG1 WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT

114
WUG0 left twice and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

115
WUG0 thrice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

116
WUG0 around left after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

117
WUG0 opposite right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

118
WUG0 around left after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

119
WUG0 right after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP

120
WUG0 right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

121
WUG0 opposite right and WUG0 opposite left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump opposite left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

122
turn opposite left twice and WUG0 left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

123
WUG0 thrice after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

124
WUG0 opposite left thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

125
WUG0 around right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

126
WUG0 opposite right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

127
WUG0 opposite left thrice and turn around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

128
WUG0 and turn right twice WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and turn right twice
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT

129
WUG0 left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

130
WUG0 left after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

131
turn around right thrice and WUG0 opposite left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

132
WUG0 around left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

133
WUG0 opposite left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

134
turn opposite right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

135
WUG0 left and WUG0 right I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

136
WUG0 around left twice and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

137
WUG0 opposite left twice and WUG0 opposite right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump opposite right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

138
WUG0 left twice after WUG0 opposite left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

139
turn right thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

140
turn around left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

141
turn around right twice and WUG0 around right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

142
WUG0 right twice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

143
WUG0 twice and WUG0 opposite left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

144
turn around right thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

145
WUG0 left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

146
turn around right thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

147
turn around right thrice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

148
turn left thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

149
turn opposite left twice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

150
WUG0 opposite right and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

151
WUG0 opposite right thrice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

152
WUG0 opposite right twice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

153
WUG0 thrice and run opposite left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN {'WUG0': ['run'], 'WUG1': ['I_RUN']}
0
run thrice and run opposite left twice
--
I_RUN I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN

154
WUG0 twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

155
turn opposite right twice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

156
WUG0 left twice and turn right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

157
WUG0 around left thrice and turn right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

158
turn opposite right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

159
WUG0 left twice and WUG0 around right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

160
turn around left thrice and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

161
WUG0 right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

162
WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

163
WUG0 opposite right thrice and WUG0 around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and jump around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

164
turn right thrice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

165
WUG0 thrice and WUG0 around left thrice WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump around left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

166
turn left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

167
turn left after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT

168
WUG0 left twice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

169
WUG0 right twice after turn right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

170
WUG0 opposite right twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

171
turn opposite left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

172
turn around right thrice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

173
turn around right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

174
WUG0 left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

175
WUG0 opposite left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

176
WUG0 around right twice and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

177
WUG0 and WUG0 right WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump right
--
I_JUMP I_TURN_RIGHT I_JUMP

178
WUG0 opposite left twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

179
WUG0 right twice after turn opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

180
WUG0 left and turn around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and turn around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

181
turn around right and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

182
WUG0 and WUG0 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump
--
I_JUMP I_JUMP

183
turn around right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

184
WUG0 left thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

185
turn left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

186
turn right thrice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

187
turn right twice and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

188
WUG0 right after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP

189
WUG0 around right thrice and WUG0 left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and jump left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

190
turn around left and WUG0 opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

191
WUG0 around right after WUG0 left I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump left
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

192
WUG0 opposite right twice and WUG0 left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

193
WUG0 right and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

194
turn around left and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

195
turn around right twice and WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right twice and jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

196
WUG0 right thrice and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

197
turn right and WUG0 around right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right and jump around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

198
turn right thrice and WUG0 left I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

199
turn around right and WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right and jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

200
WUG0 left twice and WUG0 around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

201
WUG0 after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP

202
WUG0 twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

203
WUG0 right after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

204
WUG0 thrice and WUG0 left WUG1 WUG1 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP

205
turn around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

206
turn right thrice and WUG0 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice and jump
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

207
WUG0 around left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

208
WUG0 opposite left twice and turn around right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn around right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

209
WUG0 twice and WUG0 right twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

210
turn opposite left thrice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

211
WUG0 opposite right and turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

212
WUG0 around left thrice and WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

213
WUG0 left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

214
WUG0 around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

215
WUG0 opposite right and WUG0 around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

216
WUG0 around left and WUG0 opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

217
turn opposite left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

218
WUG0 right after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

219
WUG0 around left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

220
WUG0 left after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP

221
WUG0 around right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

222
WUG0 right after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

223
WUG0 twice and WUG0 thrice WUG1 WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump thrice
--
I_JUMP I_JUMP I_JUMP I_JUMP I_JUMP

224
turn around left after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

225
WUG0 right after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

226
turn around left and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

227
WUG0 around right and turn around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

228
WUG0 around left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

229
WUG0 and WUG0 left thrice WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump and jump left thrice
--
I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

230
WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

231
WUG0 opposite left thrice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

232
turn around left twice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

233
WUG0 around left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

234
WUG0 right thrice and WUG0 opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

235
turn opposite left thrice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

236
turn left thrice and WUG0 right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

237
WUG0 opposite right and turn opposite left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn opposite left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

238
WUG0 thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

239
WUG0 around right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

240
turn left and WUG0 around left twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

241
WUG0 left thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

242
WUG0 opposite right twice and WUG0 around left twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and jump around left twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

243
WUG0 opposite right twice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

244
WUG0 thrice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

245
WUG0 twice and WUG0 opposite right twice WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump opposite right twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

246
WUG0 twice and turn opposite left twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite left twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

247
WUG0 left twice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

248
WUG0 around right after turn around right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after turn around right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

249
turn left twice and WUG0 twice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

250
WUG0 twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

251
turn opposite left twice after WUG0 opposite right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

252
turn right thrice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

253
WUG0 thrice and WUG0 opposite left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and jump opposite left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

254
WUG0 left twice and turn around right I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn around right
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

255
WUG0 around left and turn right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

256
WUG0 around right twice after turn right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

257
WUG0 opposite left twice and WUG0 right thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and jump right thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

258
WUG0 around left thrice and turn around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and turn around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

259
turn right thrice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

260
turn around left thrice and WUG0 left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

261
turn opposite left and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

262
WUG0 around left and WUG0 twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP

263
turn left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT

264
WUG0 around left and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

265
turn around left twice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

266
turn around right thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

267
WUG0 around right twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

268
WUG0 left thrice after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

269
WUG0 left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

270
WUG0 around right and turn opposite left twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn opposite left twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

271
turn left thrice after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

272
WUG0 left twice and WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

273
WUG0 around left thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

274
WUG0 left twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

275
WUG0 left thrice and WUG0 around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump around right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

276
WUG0 around left twice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

277
WUG0 twice and turn opposite right WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and turn opposite right
--
I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT

278
turn left thrice and WUG0 around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

279
WUG0 opposite left twice and turn opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

280
turn right twice and WUG0 around left I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump around left
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

281
WUG0 thrice and turn around left twice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left twice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

282
WUG0 around left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

283
turn around left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

284
WUG0 around right twice after turn left I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn left
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

285
WUG0 around left twice and WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

286
turn left thrice and WUG0 opposite right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump opposite right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

287
turn right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

288
turn around left thrice and WUG0 right I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left thrice and jump right
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP

289
WUG0 opposite left thrice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

290
WUG0 around left twice and WUG0 opposite right twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and jump opposite right twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

291
turn opposite left twice and WUG0 around right twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump around right twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

292
WUG0 around left and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

293
WUG0 left after turn right I_TURN_RIGHT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_JUMP

294
WUG0 around left thrice after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

295
turn left and WUG0 left I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP

296
WUG0 opposite left thrice and WUG0 opposite right twice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice and jump opposite right twice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

297
turn opposite left thrice and WUG0 twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left thrice and jump twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

298
WUG0 opposite right and turn around left thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and turn around left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

299
turn around left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

300
WUG0 opposite right thrice and turn around right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

301
WUG0 opposite left twice and turn opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice and turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

302
WUG0 opposite left twice after turn right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

303
WUG0 left after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

304
WUG0 opposite left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

305
WUG0 after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP

306
WUG0 right thrice and turn opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

307
WUG0 opposite right and WUG0 right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right and jump right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

308
WUG0 around left and turn around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left and turn around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

309
turn around left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

310
turn left thrice and WUG0 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice and jump
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP

311
WUG0 thrice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP

312
WUG0 right twice and turn around left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and turn around left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

313
turn opposite right and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

314
turn opposite left twice and WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice and jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

315
WUG0 around right thrice after WUG0 twice WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump twice
--
I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

316
WUG0 around right thrice after WUG0 thrice WUG1 WUG1 WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice after jump thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

317
WUG0 around right twice after turn opposite left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

318
WUG0 opposite left twice after turn around left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after turn around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

319
turn opposite left after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

320
turn left after WUG0 around left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left after jump around left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

321
WUG0 opposite right twice and turn left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT

322
WUG0 thrice and turn around left WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn around left
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

323
turn left and WUG0 right twice I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump right twice
--
I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

324
turn opposite left after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT

325
WUG0 after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

326
WUG0 around right and turn right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and turn right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT

327
turn opposite left after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

328
WUG0 thrice after turn around left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after turn around left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP

329
turn opposite right twice and WUG0 opposite left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice and jump opposite left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

330
WUG0 twice and WUG0 left WUG1 WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump twice and jump left
--
I_JUMP I_JUMP I_TURN_LEFT I_JUMP

331
WUG0 opposite right thrice and turn around right I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice and turn around right
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

332
WUG0 right thrice and WUG0 opposite left I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

333
WUG0 opposite left after turn right I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left after turn right
--
I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_JUMP

334
turn around left after WUG0 left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

335
turn right twice and WUG0 right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

336
turn opposite right twice after WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

337
WUG0 opposite right thrice after turn left thrice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after turn left thrice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

338
WUG0 thrice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP I_JUMP I_JUMP

339
turn opposite right thrice and WUG0 left thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice and jump left thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

340
WUG0 right after WUG0 WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump
--
I_JUMP I_TURN_RIGHT I_JUMP

341
WUG0 around left twice after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

342
WUG0 opposite right twice and turn around left I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right twice and turn around left
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

343
WUG0 left twice and turn opposite left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and turn opposite left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

344
WUG0 around right and WUG0 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right and jump
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_JUMP

345
WUG0 left thrice and turn opposite right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and turn opposite right thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

346
WUG0 opposite left thrice after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left thrice after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

347
WUG0 right thrice and turn around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

348
WUG0 right thrice after turn opposite left I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice after turn opposite left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

349
WUG0 left and WUG0 right twice I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump right twice
--
I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

350
WUG0 opposite right after WUG0 opposite right twice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after jump opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

351
turn opposite right thrice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right thrice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

352
WUG0 left twice after turn opposite left twice I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after turn opposite left twice
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

353
WUG0 opposite left and WUG0 thrice I_TURN_LEFT I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left and jump thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

354
WUG0 left twice and WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice and jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

355
WUG0 around right twice after turn opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice after turn opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

356
turn opposite right twice after WUG0 right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right twice after jump right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

357
WUG0 right twice and WUG0 around right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice and jump around right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

358
WUG0 right after WUG0 around right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right after jump around right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

359
WUG0 left twice after WUG0 right I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump right
--
I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

360
WUG0 around left thrice and WUG0 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left thrice and jump
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP

361
WUG0 opposite right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

362
WUG0 opposite right thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

363
WUG0 thrice and turn opposite left thrice WUG1 WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice and turn opposite left thrice
--
I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

364
turn left thrice after WUG0 twice WUG1 WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump twice
--
I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

365
WUG0 around right twice and WUG0 opposite right I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right twice and jump opposite right
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP

366
turn left thrice after WUG0 around left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left thrice after jump around left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

367
WUG0 left twice after WUG0 opposite right thrice I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left twice after jump opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

368
WUG0 around left after WUG0 left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left after jump left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

369
WUG0 left and WUG0 opposite left I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left and jump opposite left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

370
WUG0 left thrice and WUG0 thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump left thrice and jump thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_JUMP I_JUMP I_JUMP

371
WUG0 around right thrice and turn right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right thrice and turn right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

372
turn around left after WUG0 right thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around left after jump right thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

373
WUG0 right thrice and WUG0 opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and jump opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

374
WUG0 around left twice and turn left I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around left twice and turn left
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT

375
turn left and WUG0 around left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left and jump around left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP

376
WUG0 opposite right after turn around left I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite right after turn around left
--
I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

377
turn right twice and WUG0 right I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right twice and jump right
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP

378
WUG0 opposite left twice after WUG0 WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump opposite left twice after jump
--
I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP

379
WUG0 around right after WUG0 around right twice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump around right after jump around right twice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

380
turn left twice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn left twice after jump left thrice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT

381
walk around WUG0 twice after run thrice I_RUN I_RUN I_RUN WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK WUG1 I_WALK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
walk around right twice after run thrice
--
I_RUN I_RUN I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

382
run WUG0 and walk opposite right twice WUG1 I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run right and walk opposite right twice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK

383
run WUG0 and walk WUG0 twice WUG1 I_RUN WUG1 I_WALK WUG1 I_WALK {'WUG0': ['right'], 'WUG1': ['I_TURN_RIGHT']}
0
run right and walk right twice
--
I_TURN_RIGHT I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK

384
look after look WUG0 thrice WUG1 I_LOOK WUG1 I_LOOK WUG1 I_LOOK I_LOOK {'WUG0': ['left'], 'WUG1': ['I_TURN_LEFT']}
0
look after look left thrice
--
I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_LOOK

385
turn right thrice after WUG0 opposite left I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn right thrice after jump opposite left
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

386
WUG0 right twice after turn opposite right thrice I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after turn opposite right thrice
--
I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

387
turn opposite right after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite right after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT

388
turn opposite left twice after WUG0 opposite left thrice I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn opposite left twice after jump opposite left thrice
--
I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

389
WUG0 thrice WUG1 WUG1 WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump thrice
--
I_JUMP I_JUMP I_JUMP

390
turn around right thrice after WUG0 WUG1 I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
turn around right thrice after jump
--
I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT

391
WUG0 opposite left after look opposite right twice I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT WUG1 {'WUG0': ['walk'], 'WUG1': ['I_WALK']}
0
walk opposite left after look opposite right twice
--
I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_WALK

392
WUG0 right thrice and turn opposite left thrice I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right thrice and turn opposite left thrice
--
I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT

393
WUG0 right twice after WUG0 around left twice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT WUG1 I_TURN_RIGHT WUG1 {'WUG0': ['jump'], 'WUG1': ['I_JUMP']}
0
jump right twice after jump around left twice
--
I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP

394
run around right thrice after WUG0 left thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
run around right thrice after look left thrice
--
I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

395
WUG0 left thrice and run around right thrice I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_LEFT WUG1 I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN {'WUG0': ['look'], 'WUG1': ['I_LOOK']}
0
look left thrice and run around right thrice
--
I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN

396
