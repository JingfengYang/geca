I1203 11:38:37.393239 139746209720064 hlog.py:24] # --noTEST
I1203 11:38:37.393604 139746209720064 hlog.py:24] # --seed=8
I1203 11:38:37.393690 139746209720064 hlog.py:24] # --dataset=semparse
I1203 11:38:37.393768 139746209720064 hlog.py:24] # --model_dir=model
I1203 11:38:37.393843 139746209720064 hlog.py:24] # --n_checkpoint=10
I1203 11:38:37.393915 139746209720064 hlog.py:24] # --nologtostderr
I1203 11:38:37.393987 139746209720064 hlog.py:24] # --noalsologtostderr
I1203 11:38:37.394059 139746209720064 hlog.py:24] # --log_dir=
I1203 11:38:37.394131 139746209720064 hlog.py:24] # --verbosity=0
I1203 11:38:37.394202 139746209720064 hlog.py:24] # --verbosity=0
I1203 11:38:37.394272 139746209720064 hlog.py:24] # --stderrthreshold=fatal
I1203 11:38:37.394342 139746209720064 hlog.py:24] # --showprefixforinfo
I1203 11:38:37.394412 139746209720064 hlog.py:24] # --nodedup
I1203 11:38:37.394482 139746209720064 hlog.py:24] # --nobuild_comp_table
I1203 11:38:37.394552 139746209720064 hlog.py:24] # --semparse_split=query
I1203 11:38:37.394623 139746209720064 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 11:38:37.394693 139746209720064 hlog.py:24] # --semparse_mrl=logic
I1203 11:38:37.394762 139746209720064 hlog.py:24] # --val_fold=8
I1203 11:38:37.394832 139746209720064 hlog.py:24] # --test_fold=9
I1203 11:38:37.394901 139746209720064 hlog.py:24] # --n_emb=64
I1203 11:38:37.394971 139746209720064 hlog.py:24] # --n_enc=512
I1203 11:38:37.395040 139746209720064 hlog.py:24] # --dropout=0.5
I1203 11:38:37.395110 139746209720064 hlog.py:24] # --copy_sup
I1203 11:38:37.395180 139746209720064 hlog.py:24] # --n_epochs=150
I1203 11:38:37.395250 139746209720064 hlog.py:24] # --n_epoch_batches=32
I1203 11:38:37.395320 139746209720064 hlog.py:24] # --n_batch=64
I1203 11:38:37.395402 139746209720064 hlog.py:24] # --lr=0.001
I1203 11:38:37.395485 139746209720064 hlog.py:24] # --clip=1.0
I1203 11:38:37.395557 139746209720064 hlog.py:24] # --sched_factor=0.5
I1203 11:38:37.395629 139746209720064 hlog.py:24] # --norun_with_pdb
I1203 11:38:37.395701 139746209720064 hlog.py:24] # --nopdb_post_mortem
I1203 11:38:37.395785 139746209720064 hlog.py:24] # --norun_with_profiling
I1203 11:38:37.395855 139746209720064 hlog.py:24] # --use_cprofile_for_profiling
I1203 11:38:37.395925 139746209720064 hlog.py:24] # --noonly_check_args
I1203 11:38:37.395994 139746209720064 hlog.py:24] # --augment=composed.val8.json
I1203 11:38:37.396064 139746209720064 hlog.py:24] # --aug_ratio=0.3
I1203 11:38:37.396134 139746209720064 hlog.py:24] # --noinvert
I1203 11:38:37.396203 139746209720064 hlog.py:24] # --nohelp
I1203 11:38:37.396273 139746209720064 hlog.py:24] # --nohelp
I1203 11:38:37.396343 139746209720064 hlog.py:24] # --nohelpshort
I1203 11:38:37.396412 139746209720064 hlog.py:24] # --nohelpfull
I1203 11:38:37.396481 139746209720064 hlog.py:24] # --nohelpxml
I1203 11:38:37.396551 139746209720064 hlog.py:24] # 
I1203 11:38:37.434655 139746209720064 hlog.py:32] train 543
I1203 11:38:37.434821 139746209720064 hlog.py:32] aug 1000
I1203 11:38:52.829848 139746209720064 hlog.py:32] train/00000/loss 2.9670
I1203 11:38:56.498889 139746209720064 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 11:38:57.063992 139746209720064 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 11:38:57.064582 139746209720064 hlog.py:18] train/00000{15.88s}
I1203 11:39:07.756705 139746209720064 hlog.py:32] train/00001/loss 1.0449
I1203 11:39:10.255496 139746209720064 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 11:39:10.674813 139746209720064 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 11:39:10.675427 139746209720064 hlog.py:18] train/00001{13.61s}
I1203 11:39:22.600850 139746209720064 hlog.py:32] train/00002/loss 0.6798
I1203 11:39:25.629671 139746209720064 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 11:39:26.093120 139746209720064 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 11:39:26.093674 139746209720064 hlog.py:18] train/00002{15.42s}
I1203 11:39:37.613917 139746209720064 hlog.py:32] train/00003/loss 0.5020
I1203 11:39:44.899919 139746209720064 hlog.py:32] train/00003/eval_train/acc 0.0800
I1203 11:39:46.181525 139746209720064 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 11:39:46.182213 139746209720064 hlog.py:18] train/00003{20.09s}
I1203 11:39:57.856451 139746209720064 hlog.py:32] train/00004/loss 0.4092
I1203 11:40:05.247363 139746209720064 hlog.py:32] train/00004/eval_train/acc 0.1750
I1203 11:40:06.397589 139746209720064 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 11:40:06.398308 139746209720064 hlog.py:18] train/00004{20.22s}
I1203 11:40:17.873776 139746209720064 hlog.py:32] train/00005/loss 0.3456
I1203 11:40:22.546481 139746209720064 hlog.py:32] train/00005/eval_train/acc 0.1990
I1203 11:40:23.057232 139746209720064 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 11:40:23.057849 139746209720064 hlog.py:18] train/00005{16.66s}
I1203 11:40:35.264111 139746209720064 hlog.py:32] train/00006/loss 0.3168
I1203 11:40:39.129246 139746209720064 hlog.py:32] train/00006/eval_train/acc 0.2660
I1203 11:40:39.923398 139746209720064 hlog.py:32] train/00006/eval_val/acc 0.1554
I1203 11:40:39.923929 139746209720064 hlog.py:18] train/00006{16.87s}
I1203 11:40:51.688296 139746209720064 hlog.py:32] train/00007/loss 0.2600
I1203 11:40:56.782848 139746209720064 hlog.py:32] train/00007/eval_train/acc 0.3130
I1203 11:40:57.481204 139746209720064 hlog.py:32] train/00007/eval_val/acc 0.1014
I1203 11:40:57.481710 139746209720064 hlog.py:18] train/00007{17.56s}
I1203 11:41:08.468602 139746209720064 hlog.py:32] train/00008/loss 0.2350
I1203 11:41:12.326910 139746209720064 hlog.py:32] train/00008/eval_train/acc 0.4340
I1203 11:41:12.941163 139746209720064 hlog.py:32] train/00008/eval_val/acc 0.2905
I1203 11:41:12.941820 139746209720064 hlog.py:18] train/00008{15.46s}
I1203 11:41:24.764166 139746209720064 hlog.py:32] train/00009/loss 0.2122
I1203 11:41:29.485275 139746209720064 hlog.py:32] train/00009/eval_train/acc 0.4310
I1203 11:41:30.231071 139746209720064 hlog.py:32] train/00009/eval_val/acc 0.3041
I1203 11:41:30.365889 139746209720064 hlog.py:18] train/00009{17.42s}
I1203 11:41:41.940249 139746209720064 hlog.py:32] train/00010/loss 0.1700
I1203 11:41:47.241789 139746209720064 hlog.py:32] train/00010/eval_train/acc 0.5080
I1203 11:41:47.925625 139746209720064 hlog.py:32] train/00010/eval_val/acc 0.4054
I1203 11:41:47.926075 139746209720064 hlog.py:18] train/00010{17.56s}
I1203 11:41:59.996695 139746209720064 hlog.py:32] train/00011/loss 0.1584
I1203 11:42:05.165724 139746209720064 hlog.py:32] train/00011/eval_train/acc 0.5530
I1203 11:42:05.814415 139746209720064 hlog.py:32] train/00011/eval_val/acc 0.3649
I1203 11:42:05.814929 139746209720064 hlog.py:18] train/00011{17.89s}
I1203 11:42:17.577534 139746209720064 hlog.py:32] train/00012/loss 0.1549
I1203 11:42:21.949266 139746209720064 hlog.py:32] train/00012/eval_train/acc 0.5980
I1203 11:42:22.532010 139746209720064 hlog.py:32] train/00012/eval_val/acc 0.4054
I1203 11:42:22.532670 139746209720064 hlog.py:18] train/00012{16.72s}
I1203 11:42:33.849998 139746209720064 hlog.py:32] train/00013/loss 0.1549
I1203 11:42:37.778511 139746209720064 hlog.py:32] train/00013/eval_train/acc 0.5840
I1203 11:42:38.366624 139746209720064 hlog.py:32] train/00013/eval_val/acc 0.4324
I1203 11:42:38.367103 139746209720064 hlog.py:18] train/00013{15.83s}
I1203 11:42:49.515730 139746209720064 hlog.py:32] train/00014/loss 0.1398
I1203 11:42:53.351599 139746209720064 hlog.py:32] train/00014/eval_train/acc 0.6840
I1203 11:42:53.898009 139746209720064 hlog.py:32] train/00014/eval_val/acc 0.4797
I1203 11:42:53.898508 139746209720064 hlog.py:18] train/00014{15.53s}
I1203 11:43:05.623737 139746209720064 hlog.py:32] train/00015/loss 0.1244
I1203 11:43:10.875036 139746209720064 hlog.py:32] train/00015/eval_train/acc 0.6480
I1203 11:43:11.752715 139746209720064 hlog.py:32] train/00015/eval_val/acc 0.4324
I1203 11:43:11.753220 139746209720064 hlog.py:18] train/00015{17.85s}
I1203 11:43:24.440170 139746209720064 hlog.py:32] train/00016/loss 0.1156
I1203 11:43:29.606524 139746209720064 hlog.py:32] train/00016/eval_train/acc 0.6310
I1203 11:43:30.476314 139746209720064 hlog.py:32] train/00016/eval_val/acc 0.4595
I1203 11:43:30.477007 139746209720064 hlog.py:18] train/00016{18.72s}
I1203 11:43:41.992136 139746209720064 hlog.py:32] train/00017/loss 0.1177
I1203 11:43:45.647790 139746209720064 hlog.py:32] train/00017/eval_train/acc 0.6530
I1203 11:43:46.202463 139746209720064 hlog.py:32] train/00017/eval_val/acc 0.5270
I1203 11:43:46.202996 139746209720064 hlog.py:18] train/00017{15.73s}
I1203 11:43:57.166444 139746209720064 hlog.py:32] train/00018/loss 0.0950
I1203 11:44:01.220119 139746209720064 hlog.py:32] train/00018/eval_train/acc 0.7030
I1203 11:44:01.987888 139746209720064 hlog.py:32] train/00018/eval_val/acc 0.5270
I1203 11:44:01.988329 139746209720064 hlog.py:18] train/00018{15.79s}
I1203 11:44:13.401424 139746209720064 hlog.py:32] train/00019/loss 0.0809
I1203 11:44:17.711273 139746209720064 hlog.py:32] train/00019/eval_train/acc 0.7550
I1203 11:44:18.259476 139746209720064 hlog.py:32] train/00019/eval_val/acc 0.6014
I1203 11:44:18.417639 139746209720064 hlog.py:18] train/00019{16.43s}
I1203 11:44:30.464758 139746209720064 hlog.py:32] train/00020/loss 0.0876
I1203 11:44:34.072764 139746209720064 hlog.py:32] train/00020/eval_train/acc 0.7230
I1203 11:44:34.699677 139746209720064 hlog.py:32] train/00020/eval_val/acc 0.5946
I1203 11:44:34.700220 139746209720064 hlog.py:18] train/00020{16.28s}
I1203 11:44:45.751185 139746209720064 hlog.py:32] train/00021/loss 0.0756
I1203 11:44:49.509002 139746209720064 hlog.py:32] train/00021/eval_train/acc 0.8050
I1203 11:44:50.081016 139746209720064 hlog.py:32] train/00021/eval_val/acc 0.5946
I1203 11:44:50.081578 139746209720064 hlog.py:18] train/00021{15.38s}
I1203 11:45:01.575198 139746209720064 hlog.py:32] train/00022/loss 0.0820
I1203 11:45:05.442350 139746209720064 hlog.py:32] train/00022/eval_train/acc 0.7840
I1203 11:45:06.002279 139746209720064 hlog.py:32] train/00022/eval_val/acc 0.5676
I1203 11:45:06.002707 139746209720064 hlog.py:18] train/00022{15.92s}
I1203 11:45:18.587342 139746209720064 hlog.py:32] train/00023/loss 0.0778
I1203 11:45:22.906219 139746209720064 hlog.py:32] train/00023/eval_train/acc 0.8100
I1203 11:45:23.435402 139746209720064 hlog.py:32] train/00023/eval_val/acc 0.5811
I1203 11:45:23.435929 139746209720064 hlog.py:18] train/00023{17.43s}
I1203 11:45:35.512109 139746209720064 hlog.py:32] train/00024/loss 0.0612
I1203 11:45:40.365300 139746209720064 hlog.py:32] train/00024/eval_train/acc 0.7830
I1203 11:45:40.950163 139746209720064 hlog.py:32] train/00024/eval_val/acc 0.6689
I1203 11:45:40.950738 139746209720064 hlog.py:18] train/00024{17.51s}
I1203 11:45:52.697242 139746209720064 hlog.py:32] train/00025/loss 0.0567
I1203 11:45:57.023720 139746209720064 hlog.py:32] train/00025/eval_train/acc 0.8200
I1203 11:45:57.561401 139746209720064 hlog.py:32] train/00025/eval_val/acc 0.6757
I1203 11:45:57.561808 139746209720064 hlog.py:18] train/00025{16.61s}
I1203 11:46:08.989433 139746209720064 hlog.py:32] train/00026/loss 0.0655
I1203 11:46:13.313561 139746209720064 hlog.py:32] train/00026/eval_train/acc 0.8450
I1203 11:46:13.861581 139746209720064 hlog.py:32] train/00026/eval_val/acc 0.6554
I1203 11:46:13.862062 139746209720064 hlog.py:18] train/00026{16.30s}
I1203 11:46:25.916855 139746209720064 hlog.py:32] train/00027/loss 0.0575
I1203 11:46:29.653438 139746209720064 hlog.py:32] train/00027/eval_train/acc 0.7980
I1203 11:46:30.229387 139746209720064 hlog.py:32] train/00027/eval_val/acc 0.6419
I1203 11:46:30.229866 139746209720064 hlog.py:18] train/00027{16.37s}
I1203 11:46:41.607546 139746209720064 hlog.py:32] train/00028/loss 0.0587
I1203 11:46:45.668183 139746209720064 hlog.py:32] train/00028/eval_train/acc 0.8480
I1203 11:46:46.193704 139746209720064 hlog.py:32] train/00028/eval_val/acc 0.6419
I1203 11:46:46.194194 139746209720064 hlog.py:18] train/00028{15.96s}
I1203 11:46:57.630386 139746209720064 hlog.py:32] train/00029/loss 0.0620
I1203 11:47:01.295691 139746209720064 hlog.py:32] train/00029/eval_train/acc 0.8670
I1203 11:47:01.844574 139746209720064 hlog.py:32] train/00029/eval_val/acc 0.6622
I1203 11:47:01.874878 139746209720064 hlog.py:18] train/00029{15.68s}
I1203 11:47:13.901043 139746209720064 hlog.py:32] train/00030/loss 0.0562
I1203 11:47:18.213813 139746209720064 hlog.py:32] train/00030/eval_train/acc 0.8410
I1203 11:47:18.805196 139746209720064 hlog.py:32] train/00030/eval_val/acc 0.6284
I1203 11:47:18.805681 139746209720064 hlog.py:18] train/00030{16.93s}
I1203 11:47:31.256973 139746209720064 hlog.py:32] train/00031/loss 0.0485
I1203 11:47:35.076659 139746209720064 hlog.py:32] train/00031/eval_train/acc 0.8810
I1203 11:47:35.600244 139746209720064 hlog.py:32] train/00031/eval_val/acc 0.6554
I1203 11:47:35.600758 139746209720064 hlog.py:18] train/00031{16.79s}
I1203 11:47:47.062145 139746209720064 hlog.py:32] train/00032/loss 0.0423
I1203 11:47:50.682761 139746209720064 hlog.py:32] train/00032/eval_train/acc 0.9030
I1203 11:47:51.273152 139746209720064 hlog.py:32] train/00032/eval_val/acc 0.6892
I1203 11:47:51.273610 139746209720064 hlog.py:18] train/00032{15.67s}
I1203 11:48:02.584589 139746209720064 hlog.py:32] train/00033/loss 0.0340
I1203 11:48:06.468886 139746209720064 hlog.py:32] train/00033/eval_train/acc 0.9110
I1203 11:48:07.042783 139746209720064 hlog.py:32] train/00033/eval_val/acc 0.6892
I1203 11:48:07.043262 139746209720064 hlog.py:18] train/00033{15.77s}
I1203 11:48:18.682184 139746209720064 hlog.py:32] train/00034/loss 0.0301
I1203 11:48:22.715906 139746209720064 hlog.py:32] train/00034/eval_train/acc 0.9260
I1203 11:48:23.311074 139746209720064 hlog.py:32] train/00034/eval_val/acc 0.7365
I1203 11:48:23.311578 139746209720064 hlog.py:18] train/00034{16.27s}
I1203 11:48:35.512039 139746209720064 hlog.py:32] train/00035/loss 0.0277
I1203 11:48:39.493838 139746209720064 hlog.py:32] train/00035/eval_train/acc 0.9290
I1203 11:48:40.079154 139746209720064 hlog.py:32] train/00035/eval_val/acc 0.7095
I1203 11:48:40.079723 139746209720064 hlog.py:18] train/00035{16.77s}
I1203 11:48:51.578295 139746209720064 hlog.py:32] train/00036/loss 0.0278
I1203 11:48:55.820892 139746209720064 hlog.py:32] train/00036/eval_train/acc 0.9560
I1203 11:48:56.424018 139746209720064 hlog.py:32] train/00036/eval_val/acc 0.7230
I1203 11:48:56.424500 139746209720064 hlog.py:18] train/00036{16.34s}
I1203 11:49:07.778257 139746209720064 hlog.py:32] train/00037/loss 0.0256
I1203 11:49:11.603605 139746209720064 hlog.py:32] train/00037/eval_train/acc 0.9360
I1203 11:49:12.204697 139746209720064 hlog.py:32] train/00037/eval_val/acc 0.6689
I1203 11:49:12.205365 139746209720064 hlog.py:18] train/00037{15.78s}
I1203 11:49:23.436523 139746209720064 hlog.py:32] train/00038/loss 0.0278
I1203 11:49:27.689218 139746209720064 hlog.py:32] train/00038/eval_train/acc 0.9440
I1203 11:49:28.267279 139746209720064 hlog.py:32] train/00038/eval_val/acc 0.7568
I1203 11:49:28.267803 139746209720064 hlog.py:18] train/00038{16.06s}
I1203 11:49:39.342344 139746209720064 hlog.py:32] train/00039/loss 0.0279
I1203 11:49:44.963121 139746209720064 hlog.py:32] train/00039/eval_train/acc 0.9260
I1203 11:49:45.491608 139746209720064 hlog.py:32] train/00039/eval_val/acc 0.6959
I1203 11:49:45.647210 139746209720064 hlog.py:18] train/00039{17.38s}
I1203 11:49:57.718712 139746209720064 hlog.py:32] train/00040/loss 0.0334
I1203 11:50:01.319951 139746209720064 hlog.py:32] train/00040/eval_train/acc 0.9420
I1203 11:50:01.845169 139746209720064 hlog.py:32] train/00040/eval_val/acc 0.6689
I1203 11:50:01.845631 139746209720064 hlog.py:18] train/00040{16.20s}
I1203 11:50:13.237240 139746209720064 hlog.py:32] train/00041/loss 0.0349
I1203 11:50:16.991317 139746209720064 hlog.py:32] train/00041/eval_train/acc 0.8980
I1203 11:50:17.636630 139746209720064 hlog.py:32] train/00041/eval_val/acc 0.5811
I1203 11:50:17.637110 139746209720064 hlog.py:18] train/00041{15.79s}
I1203 11:50:30.360894 139746209720064 hlog.py:32] train/00042/loss 0.0330
I1203 11:50:34.570835 139746209720064 hlog.py:32] train/00042/eval_train/acc 0.9440
I1203 11:50:35.147950 139746209720064 hlog.py:32] train/00042/eval_val/acc 0.7095
I1203 11:50:35.148417 139746209720064 hlog.py:18] train/00042{17.51s}
I1203 11:50:46.074607 139746209720064 hlog.py:32] train/00043/loss 0.0379
I1203 11:50:50.416420 139746209720064 hlog.py:32] train/00043/eval_train/acc 0.9430
I1203 11:50:50.935496 139746209720064 hlog.py:32] train/00043/eval_val/acc 0.7095
I1203 11:50:50.935996 139746209720064 hlog.py:18] train/00043{15.79s}
I1203 11:51:03.335210 139746209720064 hlog.py:32] train/00044/loss 0.0375
I1203 11:51:07.638898 139746209720064 hlog.py:32] train/00044/eval_train/acc 0.9440
I1203 11:51:08.224401 139746209720064 hlog.py:32] train/00044/eval_val/acc 0.6622
I1203 11:51:08.224916 139746209720064 hlog.py:18] train/00044{17.29s}
I1203 11:51:19.787927 139746209720064 hlog.py:32] train/00045/loss 0.0345
I1203 11:51:24.374262 139746209720064 hlog.py:32] train/00045/eval_train/acc 0.9080
I1203 11:51:24.936995 139746209720064 hlog.py:32] train/00045/eval_val/acc 0.6554
I1203 11:51:24.937470 139746209720064 hlog.py:18] train/00045{16.71s}
I1203 11:51:36.943716 139746209720064 hlog.py:32] train/00046/loss 0.0528
I1203 11:51:40.899739 139746209720064 hlog.py:32] train/00046/eval_train/acc 0.9230
I1203 11:51:41.458314 139746209720064 hlog.py:32] train/00046/eval_val/acc 0.6959
I1203 11:51:41.458793 139746209720064 hlog.py:18] train/00046{16.52s}
I1203 11:51:54.124893 139746209720064 hlog.py:32] train/00047/loss 0.0588
I1203 11:51:57.914613 139746209720064 hlog.py:32] train/00047/eval_train/acc 0.9270
I1203 11:51:58.475509 139746209720064 hlog.py:32] train/00047/eval_val/acc 0.6757
I1203 11:51:58.476013 139746209720064 hlog.py:18] train/00047{17.02s}
I1203 11:52:10.540473 139746209720064 hlog.py:32] train/00048/loss 0.0583
I1203 11:52:15.190358 139746209720064 hlog.py:32] train/00048/eval_train/acc 0.8910
I1203 11:52:15.722009 139746209720064 hlog.py:32] train/00048/eval_val/acc 0.6689
I1203 11:52:15.722485 139746209720064 hlog.py:18] train/00048{17.25s}
I1203 11:52:27.144439 139746209720064 hlog.py:32] train/00049/loss 0.0532
I1203 11:52:30.832134 139746209720064 hlog.py:32] train/00049/eval_train/acc 0.9090
I1203 11:52:31.364772 139746209720064 hlog.py:32] train/00049/eval_val/acc 0.6622
I1203 11:52:31.395470 139746209720064 hlog.py:18] train/00049{15.67s}
I1203 11:52:42.711259 139746209720064 hlog.py:32] train/00050/loss 0.0365
I1203 11:52:46.375960 139746209720064 hlog.py:32] train/00050/eval_train/acc 0.9500
I1203 11:52:46.892642 139746209720064 hlog.py:32] train/00050/eval_val/acc 0.6622
I1203 11:52:46.893116 139746209720064 hlog.py:18] train/00050{15.50s}
I1203 11:52:58.408812 139746209720064 hlog.py:32] train/00051/loss 0.0245
I1203 11:53:02.248647 139746209720064 hlog.py:32] train/00051/eval_train/acc 0.9550
I1203 11:53:02.849272 139746209720064 hlog.py:32] train/00051/eval_val/acc 0.7027
I1203 11:53:02.849962 139746209720064 hlog.py:18] train/00051{15.96s}
I1203 11:53:13.528399 139746209720064 hlog.py:32] train/00052/loss 0.0228
I1203 11:53:17.067008 139746209720064 hlog.py:32] train/00052/eval_train/acc 0.9720
I1203 11:53:17.610723 139746209720064 hlog.py:32] train/00052/eval_val/acc 0.7027
I1203 11:53:17.611128 139746209720064 hlog.py:18] train/00052{14.76s}
I1203 11:53:29.195076 139746209720064 hlog.py:32] train/00053/loss 0.0233
I1203 11:53:33.373356 139746209720064 hlog.py:32] train/00053/eval_train/acc 0.9830
I1203 11:53:33.905093 139746209720064 hlog.py:32] train/00053/eval_val/acc 0.7568
I1203 11:53:33.905572 139746209720064 hlog.py:18] train/00053{16.29s}
I1203 11:53:45.406579 139746209720064 hlog.py:32] train/00054/loss 0.0200
I1203 11:53:49.373458 139746209720064 hlog.py:32] train/00054/eval_train/acc 0.9690
I1203 11:53:49.922663 139746209720064 hlog.py:32] train/00054/eval_val/acc 0.7635
I1203 11:53:49.923423 139746209720064 hlog.py:18] train/00054{16.02s}
I1203 11:54:01.230603 139746209720064 hlog.py:32] train/00055/loss 0.0169
I1203 11:54:04.985404 139746209720064 hlog.py:32] train/00055/eval_train/acc 0.9830
I1203 11:54:05.534553 139746209720064 hlog.py:32] train/00055/eval_val/acc 0.7432
I1203 11:54:05.535043 139746209720064 hlog.py:18] train/00055{15.61s}
I1203 11:54:16.802791 139746209720064 hlog.py:32] train/00056/loss 0.0146
I1203 11:54:20.692473 139746209720064 hlog.py:32] train/00056/eval_train/acc 0.9920
I1203 11:54:21.327155 139746209720064 hlog.py:32] train/00056/eval_val/acc 0.7365
I1203 11:54:21.327765 139746209720064 hlog.py:18] train/00056{15.79s}
I1203 11:54:33.496315 139746209720064 hlog.py:32] train/00057/loss 0.0144
I1203 11:54:37.295442 139746209720064 hlog.py:32] train/00057/eval_train/acc 0.9870
I1203 11:54:37.824838 139746209720064 hlog.py:32] train/00057/eval_val/acc 0.7297
I1203 11:54:37.825324 139746209720064 hlog.py:18] train/00057{16.50s}
I1203 11:54:48.691728 139746209720064 hlog.py:32] train/00058/loss 0.0127
I1203 11:54:52.890888 139746209720064 hlog.py:32] train/00058/eval_train/acc 0.9820
I1203 11:54:53.457918 139746209720064 hlog.py:32] train/00058/eval_val/acc 0.7365
I1203 11:54:53.458456 139746209720064 hlog.py:18] train/00058{15.63s}
I1203 11:55:05.396985 139746209720064 hlog.py:32] train/00059/loss 0.0168
I1203 11:55:09.079565 139746209720064 hlog.py:32] train/00059/eval_train/acc 0.9950
I1203 11:55:09.626952 139746209720064 hlog.py:32] train/00059/eval_val/acc 0.7365
I1203 11:55:09.784179 139746209720064 hlog.py:18] train/00059{16.33s}
I1203 11:55:21.378594 139746209720064 hlog.py:32] train/00060/loss 0.0144
I1203 11:55:25.145768 139746209720064 hlog.py:32] train/00060/eval_train/acc 0.9890
I1203 11:55:25.702355 139746209720064 hlog.py:32] train/00060/eval_val/acc 0.7635
I1203 11:55:25.702902 139746209720064 hlog.py:18] train/00060{15.92s}
I1203 11:55:37.557400 139746209720064 hlog.py:32] train/00061/loss 0.0146
I1203 11:55:41.313436 139746209720064 hlog.py:32] train/00061/eval_train/acc 0.9900
I1203 11:55:41.902972 139746209720064 hlog.py:32] train/00061/eval_val/acc 0.7703
I1203 11:55:41.903489 139746209720064 hlog.py:18] train/00061{16.20s}
I1203 11:55:54.690477 139746209720064 hlog.py:32] train/00062/loss 0.0134
I1203 11:55:58.540778 139746209720064 hlog.py:32] train/00062/eval_train/acc 0.9860
I1203 11:55:59.109526 139746209720064 hlog.py:32] train/00062/eval_val/acc 0.7635
I1203 11:55:59.110027 139746209720064 hlog.py:18] train/00062{17.21s}
I1203 11:56:10.890431 139746209720064 hlog.py:32] train/00063/loss 0.0130
I1203 11:56:14.533109 139746209720064 hlog.py:32] train/00063/eval_train/acc 0.9930
I1203 11:56:15.096037 139746209720064 hlog.py:32] train/00063/eval_val/acc 0.7568
I1203 11:56:15.096531 139746209720064 hlog.py:18] train/00063{15.99s}
I1203 11:56:26.865959 139746209720064 hlog.py:32] train/00064/loss 0.0105
I1203 11:56:31.040989 139746209720064 hlog.py:32] train/00064/eval_train/acc 0.9940
I1203 11:56:31.582221 139746209720064 hlog.py:32] train/00064/eval_val/acc 0.7838
I1203 11:56:31.582684 139746209720064 hlog.py:18] train/00064{16.49s}
I1203 11:56:43.649023 139746209720064 hlog.py:32] train/00065/loss 0.0103
I1203 11:56:47.446703 139746209720064 hlog.py:32] train/00065/eval_train/acc 0.9890
I1203 11:56:48.007508 139746209720064 hlog.py:32] train/00065/eval_val/acc 0.7365
I1203 11:56:48.008011 139746209720064 hlog.py:18] train/00065{16.43s}
I1203 11:56:59.767856 139746209720064 hlog.py:32] train/00066/loss 0.0112
I1203 11:57:03.839056 139746209720064 hlog.py:32] train/00066/eval_train/acc 0.9880
I1203 11:57:04.383378 139746209720064 hlog.py:32] train/00066/eval_val/acc 0.7568
I1203 11:57:04.383923 139746209720064 hlog.py:18] train/00066{16.38s}
I1203 11:57:15.872232 139746209720064 hlog.py:32] train/00067/loss 0.0105
I1203 11:57:19.604135 139746209720064 hlog.py:32] train/00067/eval_train/acc 0.9960
I1203 11:57:20.163049 139746209720064 hlog.py:32] train/00067/eval_val/acc 0.7703
I1203 11:57:20.163550 139746209720064 hlog.py:18] train/00067{15.78s}
I1203 11:57:31.251007 139746209720064 hlog.py:32] train/00068/loss 0.0098
I1203 11:57:35.624928 139746209720064 hlog.py:32] train/00068/eval_train/acc 0.9880
I1203 11:57:36.176723 139746209720064 hlog.py:32] train/00068/eval_val/acc 0.7703
I1203 11:57:36.177170 139746209720064 hlog.py:18] train/00068{16.01s}
I1203 11:57:49.164453 139746209720064 hlog.py:32] train/00069/loss 0.0107
I1203 11:57:52.984129 139746209720064 hlog.py:32] train/00069/eval_train/acc 0.9940
I1203 11:57:53.536206 139746209720064 hlog.py:32] train/00069/eval_val/acc 0.7770
I1203 11:57:53.566586 139746209720064 hlog.py:18] train/00069{17.39s}
I1203 11:58:05.649583 139746209720064 hlog.py:32] train/00070/loss 0.0087
I1203 11:58:09.558642 139746209720064 hlog.py:32] train/00070/eval_train/acc 0.9920
I1203 11:58:10.143163 139746209720064 hlog.py:32] train/00070/eval_val/acc 0.7770
I1203 11:58:10.143914 139746209720064 hlog.py:18] train/00070{16.58s}
I1203 11:58:21.718291 139746209720064 hlog.py:32] train/00071/loss 0.0089
I1203 11:58:25.534583 139746209720064 hlog.py:32] train/00071/eval_train/acc 0.9950
I1203 11:58:26.088745 139746209720064 hlog.py:32] train/00071/eval_val/acc 0.7500
I1203 11:58:26.089240 139746209720064 hlog.py:18] train/00071{15.95s}
I1203 11:58:37.234935 139746209720064 hlog.py:32] train/00072/loss 0.0083
I1203 11:58:40.989445 139746209720064 hlog.py:32] train/00072/eval_train/acc 0.9940
I1203 11:58:41.537547 139746209720064 hlog.py:32] train/00072/eval_val/acc 0.7770
I1203 11:58:41.538105 139746209720064 hlog.py:18] train/00072{15.45s}
I1203 11:58:52.987689 139746209720064 hlog.py:32] train/00073/loss 0.0078
I1203 11:58:57.114797 139746209720064 hlog.py:32] train/00073/eval_train/acc 0.9940
I1203 11:58:57.674287 139746209720064 hlog.py:32] train/00073/eval_val/acc 0.7635
I1203 11:58:57.674838 139746209720064 hlog.py:18] train/00073{16.14s}
I1203 11:59:09.371992 139746209720064 hlog.py:32] train/00074/loss 0.0092
I1203 11:59:13.492376 139746209720064 hlog.py:32] train/00074/eval_train/acc 0.9930
I1203 11:59:14.081605 139746209720064 hlog.py:32] train/00074/eval_val/acc 0.7838
I1203 11:59:14.082320 139746209720064 hlog.py:18] train/00074{16.41s}
I1203 11:59:25.273947 139746209720064 hlog.py:32] train/00075/loss 0.0068
I1203 11:59:28.883304 139746209720064 hlog.py:32] train/00075/eval_train/acc 0.9940
I1203 11:59:29.463198 139746209720064 hlog.py:32] train/00075/eval_val/acc 0.7838
I1203 11:59:29.463805 139746209720064 hlog.py:18] train/00075{15.38s}
I1203 11:59:40.323295 139746209720064 hlog.py:32] train/00076/loss 0.0069
I1203 11:59:44.196601 139746209720064 hlog.py:32] train/00076/eval_train/acc 0.9910
I1203 11:59:44.763315 139746209720064 hlog.py:32] train/00076/eval_val/acc 0.7770
I1203 11:59:44.763927 139746209720064 hlog.py:18] train/00076{15.30s}
I1203 11:59:56.822457 139746209720064 hlog.py:32] train/00077/loss 0.0076
I1203 12:00:00.528780 139746209720064 hlog.py:32] train/00077/eval_train/acc 0.9980
I1203 12:00:01.119645 139746209720064 hlog.py:32] train/00077/eval_val/acc 0.7838
I1203 12:00:01.120182 139746209720064 hlog.py:18] train/00077{16.36s}
I1203 12:00:12.369253 139746209720064 hlog.py:32] train/00078/loss 0.0063
I1203 12:00:16.058940 139746209720064 hlog.py:32] train/00078/eval_train/acc 0.9970
I1203 12:00:16.610066 139746209720064 hlog.py:32] train/00078/eval_val/acc 0.7905
I1203 12:00:16.610538 139746209720064 hlog.py:18] train/00078{15.49s}
I1203 12:00:28.256844 139746209720064 hlog.py:32] train/00079/loss 0.0061
I1203 12:00:32.225198 139746209720064 hlog.py:32] train/00079/eval_train/acc 0.9980
I1203 12:00:32.790348 139746209720064 hlog.py:32] train/00079/eval_val/acc 0.7973
I1203 12:00:32.949198 139746209720064 hlog.py:18] train/00079{16.34s}
I1203 12:00:44.189224 139746209720064 hlog.py:32] train/00080/loss 0.0056
I1203 12:00:48.039159 139746209720064 hlog.py:32] train/00080/eval_train/acc 0.9910
I1203 12:00:48.594351 139746209720064 hlog.py:32] train/00080/eval_val/acc 0.7838
I1203 12:00:48.594841 139746209720064 hlog.py:18] train/00080{15.65s}
I1203 12:01:00.326246 139746209720064 hlog.py:32] train/00081/loss 0.0055
I1203 12:01:03.915312 139746209720064 hlog.py:32] train/00081/eval_train/acc 0.9990
I1203 12:01:04.478979 139746209720064 hlog.py:32] train/00081/eval_val/acc 0.7770
I1203 12:01:04.479467 139746209720064 hlog.py:18] train/00081{15.88s}
I1203 12:01:15.606118 139746209720064 hlog.py:32] train/00082/loss 0.0053
I1203 12:01:19.477769 139746209720064 hlog.py:32] train/00082/eval_train/acc 0.9950
I1203 12:01:20.035645 139746209720064 hlog.py:32] train/00082/eval_val/acc 0.7838
I1203 12:01:20.036164 139746209720064 hlog.py:18] train/00082{15.56s}
I1203 12:01:31.575221 139746209720064 hlog.py:32] train/00083/loss 0.0054
I1203 12:01:35.454028 139746209720064 hlog.py:32] train/00083/eval_train/acc 0.9980
I1203 12:01:36.001389 139746209720064 hlog.py:32] train/00083/eval_val/acc 0.8041
I1203 12:01:36.001808 139746209720064 hlog.py:18] train/00083{15.97s}
I1203 12:01:47.723206 139746209720064 hlog.py:32] train/00084/loss 0.0054
I1203 12:01:51.466869 139746209720064 hlog.py:32] train/00084/eval_train/acc 0.9950
I1203 12:01:52.024755 139746209720064 hlog.py:32] train/00084/eval_val/acc 0.7838
I1203 12:01:52.025277 139746209720064 hlog.py:18] train/00084{16.02s}
I1203 12:02:04.099790 139746209720064 hlog.py:32] train/00085/loss 0.0050
I1203 12:02:08.190957 139746209720064 hlog.py:32] train/00085/eval_train/acc 0.9950
I1203 12:02:08.733147 139746209720064 hlog.py:32] train/00085/eval_val/acc 0.7905
I1203 12:02:08.733626 139746209720064 hlog.py:18] train/00085{16.71s}
I1203 12:02:19.483826 139746209720064 hlog.py:32] train/00086/loss 0.0051
I1203 12:02:23.641593 139746209720064 hlog.py:32] train/00086/eval_train/acc 0.9970
I1203 12:02:24.173693 139746209720064 hlog.py:32] train/00086/eval_val/acc 0.7905
I1203 12:02:24.174178 139746209720064 hlog.py:18] train/00086{15.44s}
I1203 12:02:35.756171 139746209720064 hlog.py:32] train/00087/loss 0.0063
I1203 12:02:39.699392 139746209720064 hlog.py:32] train/00087/eval_train/acc 0.9960
I1203 12:02:40.245612 139746209720064 hlog.py:32] train/00087/eval_val/acc 0.7838
I1203 12:02:40.246065 139746209720064 hlog.py:18] train/00087{16.07s}
I1203 12:02:51.812383 139746209720064 hlog.py:32] train/00088/loss 0.0045
I1203 12:02:55.606729 139746209720064 hlog.py:32] train/00088/eval_train/acc 0.9980
I1203 12:02:56.181567 139746209720064 hlog.py:32] train/00088/eval_val/acc 0.7770
I1203 12:02:56.182059 139746209720064 hlog.py:18] train/00088{15.94s}
I1203 12:03:07.593300 139746209720064 hlog.py:32] train/00089/loss 0.0052
I1203 12:03:11.247394 139746209720064 hlog.py:32] train/00089/eval_train/acc 0.9960
I1203 12:03:11.796823 139746209720064 hlog.py:32] train/00089/eval_val/acc 0.8108
I1203 12:03:11.845478 139746209720064 hlog.py:18] train/00089{15.66s}
I1203 12:03:23.285738 139746209720064 hlog.py:32] train/00090/loss 0.0054
I1203 12:03:26.938677 139746209720064 hlog.py:32] train/00090/eval_train/acc 0.9960
I1203 12:03:27.477205 139746209720064 hlog.py:32] train/00090/eval_val/acc 0.7905
I1203 12:03:27.477680 139746209720064 hlog.py:18] train/00090{15.63s}
I1203 12:03:39.211198 139746209720064 hlog.py:32] train/00091/loss 0.0052
I1203 12:03:43.206089 139746209720064 hlog.py:32] train/00091/eval_train/acc 0.9960
I1203 12:03:43.762588 139746209720064 hlog.py:32] train/00091/eval_val/acc 0.7905
I1203 12:03:43.763081 139746209720064 hlog.py:18] train/00091{16.29s}
I1203 12:03:55.181953 139746209720064 hlog.py:32] train/00092/loss 0.0047
I1203 12:03:59.108269 139746209720064 hlog.py:32] train/00092/eval_train/acc 0.9960
I1203 12:03:59.723167 139746209720064 hlog.py:32] train/00092/eval_val/acc 0.7973
I1203 12:03:59.723844 139746209720064 hlog.py:18] train/00092{15.96s}
I1203 12:04:11.935452 139746209720064 hlog.py:32] train/00093/loss 0.0045
I1203 12:04:15.666915 139746209720064 hlog.py:32] train/00093/eval_train/acc 0.9950
I1203 12:04:16.229383 139746209720064 hlog.py:32] train/00093/eval_val/acc 0.7905
I1203 12:04:16.229870 139746209720064 hlog.py:18] train/00093{16.51s}
I1203 12:04:28.220399 139746209720064 hlog.py:32] train/00094/loss 0.0055
I1203 12:04:32.274027 139746209720064 hlog.py:32] train/00094/eval_train/acc 0.9950
I1203 12:04:32.840753 139746209720064 hlog.py:32] train/00094/eval_val/acc 0.8041
I1203 12:04:32.841258 139746209720064 hlog.py:18] train/00094{16.61s}
I1203 12:04:44.780138 139746209720064 hlog.py:32] train/00095/loss 0.0052
I1203 12:04:48.921999 139746209720064 hlog.py:32] train/00095/eval_train/acc 0.9950
I1203 12:04:49.475129 139746209720064 hlog.py:32] train/00095/eval_val/acc 0.7973
I1203 12:04:49.475676 139746209720064 hlog.py:18] train/00095{16.63s}
I1203 12:05:01.559526 139746209720064 hlog.py:32] train/00096/loss 0.0045
I1203 12:05:05.179634 139746209720064 hlog.py:32] train/00096/eval_train/acc 1.0000
I1203 12:05:05.709166 139746209720064 hlog.py:32] train/00096/eval_val/acc 0.7703
I1203 12:05:05.709637 139746209720064 hlog.py:18] train/00096{16.23s}
I1203 12:05:17.659969 139746209720064 hlog.py:32] train/00097/loss 0.0043
I1203 12:05:21.577842 139746209720064 hlog.py:32] train/00097/eval_train/acc 0.9980
I1203 12:05:22.162127 139746209720064 hlog.py:32] train/00097/eval_val/acc 0.7838
I1203 12:05:22.162548 139746209720064 hlog.py:18] train/00097{16.45s}
I1203 12:05:33.985124 139746209720064 hlog.py:32] train/00098/loss 0.0046
I1203 12:05:37.749355 139746209720064 hlog.py:32] train/00098/eval_train/acc 0.9970
I1203 12:05:38.340859 139746209720064 hlog.py:32] train/00098/eval_val/acc 0.7905
I1203 12:05:38.341359 139746209720064 hlog.py:18] train/00098{16.18s}
I1203 12:05:49.757939 139746209720064 hlog.py:32] train/00099/loss 0.0039
I1203 12:05:53.553850 139746209720064 hlog.py:32] train/00099/eval_train/acc 1.0000
I1203 12:05:54.137418 139746209720064 hlog.py:32] train/00099/eval_val/acc 0.7973
I1203 12:05:54.168160 139746209720064 hlog.py:18] train/00099{15.83s}
I1203 12:06:06.279842 139746209720064 hlog.py:32] train/00100/loss 0.0035
I1203 12:06:10.335289 139746209720064 hlog.py:32] train/00100/eval_train/acc 0.9980
I1203 12:06:10.991459 139746209720064 hlog.py:32] train/00100/eval_val/acc 0.7703
I1203 12:06:10.992078 139746209720064 hlog.py:18] train/00100{16.82s}
I1203 12:06:22.536437 139746209720064 hlog.py:32] train/00101/loss 0.0039
I1203 12:06:26.076103 139746209720064 hlog.py:32] train/00101/eval_train/acc 1.0000
I1203 12:06:26.671453 139746209720064 hlog.py:32] train/00101/eval_val/acc 0.7838
I1203 12:06:26.672032 139746209720064 hlog.py:18] train/00101{15.68s}
I1203 12:06:38.159085 139746209720064 hlog.py:32] train/00102/loss 0.0035
I1203 12:06:42.061629 139746209720064 hlog.py:32] train/00102/eval_train/acc 0.9990
I1203 12:06:42.648651 139746209720064 hlog.py:32] train/00102/eval_val/acc 0.7905
I1203 12:06:42.649262 139746209720064 hlog.py:18] train/00102{15.98s}
I1203 12:06:54.080532 139746209720064 hlog.py:32] train/00103/loss 0.0037
I1203 12:06:58.588554 139746209720064 hlog.py:32] train/00103/eval_train/acc 0.9930
I1203 12:06:59.172675 139746209720064 hlog.py:32] train/00103/eval_val/acc 0.7905
I1203 12:06:59.173157 139746209720064 hlog.py:18] train/00103{16.52s}
I1203 12:07:11.124410 139746209720064 hlog.py:32] train/00104/loss 0.0035
I1203 12:07:15.519834 139746209720064 hlog.py:32] train/00104/eval_train/acc 0.9970
I1203 12:07:16.175526 139746209720064 hlog.py:32] train/00104/eval_val/acc 0.7905
I1203 12:07:16.176074 139746209720064 hlog.py:18] train/00104{17.00s}
I1203 12:07:27.478848 139746209720064 hlog.py:32] train/00105/loss 0.0031
I1203 12:07:31.325105 139746209720064 hlog.py:32] train/00105/eval_train/acc 0.9990
I1203 12:07:31.914522 139746209720064 hlog.py:32] train/00105/eval_val/acc 0.7838
I1203 12:07:31.914997 139746209720064 hlog.py:18] train/00105{15.74s}
I1203 12:07:43.159034 139746209720064 hlog.py:32] train/00106/loss 0.0033
I1203 12:07:46.832376 139746209720064 hlog.py:32] train/00106/eval_train/acc 0.9990
I1203 12:07:47.434793 139746209720064 hlog.py:32] train/00106/eval_val/acc 0.7973
I1203 12:07:47.435219 139746209720064 hlog.py:18] train/00106{15.52s}
I1203 12:07:58.200225 139746209720064 hlog.py:32] train/00107/loss 0.0031
I1203 12:08:02.142361 139746209720064 hlog.py:32] train/00107/eval_train/acc 0.9990
I1203 12:08:02.754457 139746209720064 hlog.py:32] train/00107/eval_val/acc 0.7973
I1203 12:08:02.754994 139746209720064 hlog.py:18] train/00107{15.32s}
I1203 12:08:14.384081 139746209720064 hlog.py:32] train/00108/loss 0.0037
I1203 12:08:18.335170 139746209720064 hlog.py:32] train/00108/eval_train/acc 0.9960
I1203 12:08:18.924719 139746209720064 hlog.py:32] train/00108/eval_val/acc 0.7973
I1203 12:08:18.925194 139746209720064 hlog.py:18] train/00108{16.17s}
I1203 12:08:31.625075 139746209720064 hlog.py:32] train/00109/loss 0.0040
I1203 12:08:35.424068 139746209720064 hlog.py:32] train/00109/eval_train/acc 1.0000
I1203 12:08:36.010383 139746209720064 hlog.py:32] train/00109/eval_val/acc 0.7973
I1203 12:08:36.041369 139746209720064 hlog.py:18] train/00109{17.12s}
I1203 12:08:48.152559 139746209720064 hlog.py:32] train/00110/loss 0.0034
I1203 12:08:52.052978 139746209720064 hlog.py:32] train/00110/eval_train/acc 0.9980
I1203 12:08:52.619820 139746209720064 hlog.py:32] train/00110/eval_val/acc 0.7973
I1203 12:08:52.620278 139746209720064 hlog.py:18] train/00110{16.58s}
I1203 12:09:04.364109 139746209720064 hlog.py:32] train/00111/loss 0.0034
I1203 12:09:08.368827 139746209720064 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 12:09:08.955609 139746209720064 hlog.py:32] train/00111/eval_val/acc 0.8041
I1203 12:09:08.956228 139746209720064 hlog.py:18] train/00111{16.34s}
I1203 12:09:21.198705 139746209720064 hlog.py:32] train/00112/loss 0.0033
I1203 12:09:25.182325 139746209720064 hlog.py:32] train/00112/eval_train/acc 1.0000
I1203 12:09:25.744137 139746209720064 hlog.py:32] train/00112/eval_val/acc 0.7905
I1203 12:09:25.744653 139746209720064 hlog.py:18] train/00112{16.79s}
I1203 12:09:37.625841 139746209720064 hlog.py:32] train/00113/loss 0.0033
I1203 12:09:41.191655 139746209720064 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 12:09:41.776528 139746209720064 hlog.py:32] train/00113/eval_val/acc 0.7905
I1203 12:09:41.777111 139746209720064 hlog.py:18] train/00113{16.03s}
I1203 12:09:53.512570 139746209720064 hlog.py:32] train/00114/loss 0.0032
I1203 12:09:57.387222 139746209720064 hlog.py:32] train/00114/eval_train/acc 0.9980
I1203 12:09:57.976959 139746209720064 hlog.py:32] train/00114/eval_val/acc 0.7905
I1203 12:09:57.977460 139746209720064 hlog.py:18] train/00114{16.20s}
I1203 12:10:10.560314 139746209720064 hlog.py:32] train/00115/loss 0.0033
I1203 12:10:14.282208 139746209720064 hlog.py:32] train/00115/eval_train/acc 0.9990
I1203 12:10:14.869228 139746209720064 hlog.py:32] train/00115/eval_val/acc 0.7905
I1203 12:10:14.869698 139746209720064 hlog.py:18] train/00115{16.89s}
I1203 12:10:26.926754 139746209720064 hlog.py:32] train/00116/loss 0.0030
I1203 12:10:30.915504 139746209720064 hlog.py:32] train/00116/eval_train/acc 1.0000
I1203 12:10:31.520337 139746209720064 hlog.py:32] train/00116/eval_val/acc 0.7905
I1203 12:10:31.520889 139746209720064 hlog.py:18] train/00116{16.65s}
I1203 12:10:43.748208 139746209720064 hlog.py:32] train/00117/loss 0.0037
I1203 12:10:47.879352 139746209720064 hlog.py:32] train/00117/eval_train/acc 1.0000
I1203 12:10:48.534172 139746209720064 hlog.py:32] train/00117/eval_val/acc 0.7905
I1203 12:10:48.534723 139746209720064 hlog.py:18] train/00117{17.01s}
I1203 12:11:00.019697 139746209720064 hlog.py:32] train/00118/loss 0.0029
I1203 12:11:03.762513 139746209720064 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 12:11:04.325145 139746209720064 hlog.py:32] train/00118/eval_val/acc 0.7838
I1203 12:11:04.325635 139746209720064 hlog.py:18] train/00118{15.79s}
I1203 12:11:17.206335 139746209720064 hlog.py:32] train/00119/loss 0.0035
I1203 12:11:21.062679 139746209720064 hlog.py:32] train/00119/eval_train/acc 1.0000
I1203 12:11:21.681810 139746209720064 hlog.py:32] train/00119/eval_val/acc 0.7973
I1203 12:11:21.713200 139746209720064 hlog.py:18] train/00119{17.39s}
I1203 12:11:33.030399 139746209720064 hlog.py:32] train/00120/loss 0.0033
I1203 12:11:36.994378 139746209720064 hlog.py:32] train/00120/eval_train/acc 0.9980
I1203 12:11:37.591415 139746209720064 hlog.py:32] train/00120/eval_val/acc 0.7973
I1203 12:11:37.591866 139746209720064 hlog.py:18] train/00120{15.88s}
I1203 12:11:48.708281 139746209720064 hlog.py:32] train/00121/loss 0.0035
I1203 12:11:52.642953 139746209720064 hlog.py:32] train/00121/eval_train/acc 1.0000
I1203 12:11:53.222005 139746209720064 hlog.py:32] train/00121/eval_val/acc 0.7838
I1203 12:11:53.222444 139746209720064 hlog.py:18] train/00121{15.63s}
I1203 12:12:04.358362 139746209720064 hlog.py:32] train/00122/loss 0.0030
I1203 12:12:08.364696 139746209720064 hlog.py:32] train/00122/eval_train/acc 1.0000
I1203 12:12:08.985483 139746209720064 hlog.py:32] train/00122/eval_val/acc 0.7973
I1203 12:12:08.986310 139746209720064 hlog.py:18] train/00122{15.76s}
I1203 12:12:21.142017 139746209720064 hlog.py:32] train/00123/loss 0.0029
I1203 12:12:24.932934 139746209720064 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 12:12:25.515362 139746209720064 hlog.py:32] train/00123/eval_val/acc 0.7905
I1203 12:12:25.515902 139746209720064 hlog.py:18] train/00123{16.53s}
I1203 12:12:36.931742 139746209720064 hlog.py:32] train/00124/loss 0.0022
I1203 12:12:40.684419 139746209720064 hlog.py:32] train/00124/eval_train/acc 1.0000
I1203 12:12:41.264724 139746209720064 hlog.py:32] train/00124/eval_val/acc 0.7905
I1203 12:12:41.265229 139746209720064 hlog.py:18] train/00124{15.75s}
I1203 12:12:53.304816 139746209720064 hlog.py:32] train/00125/loss 0.0036
I1203 12:12:57.417057 139746209720064 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 12:12:57.997380 139746209720064 hlog.py:32] train/00125/eval_val/acc 0.7905
I1203 12:12:57.997855 139746209720064 hlog.py:18] train/00125{16.73s}
I1203 12:13:09.107219 139746209720064 hlog.py:32] train/00126/loss 0.0031
I1203 12:13:12.774360 139746209720064 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 12:13:13.364679 139746209720064 hlog.py:32] train/00126/eval_val/acc 0.7838
I1203 12:13:13.365133 139746209720064 hlog.py:18] train/00126{15.37s}
I1203 12:13:25.500558 139746209720064 hlog.py:32] train/00127/loss 0.0028
I1203 12:13:29.397552 139746209720064 hlog.py:32] train/00127/eval_train/acc 1.0000
I1203 12:13:29.974981 139746209720064 hlog.py:32] train/00127/eval_val/acc 0.7838
I1203 12:13:29.975498 139746209720064 hlog.py:18] train/00127{16.61s}
I1203 12:13:41.142224 139746209720064 hlog.py:32] train/00128/loss 0.0027
I1203 12:13:44.865154 139746209720064 hlog.py:32] train/00128/eval_train/acc 1.0000
I1203 12:13:45.440276 139746209720064 hlog.py:32] train/00128/eval_val/acc 0.7838
I1203 12:13:45.440752 139746209720064 hlog.py:18] train/00128{15.47s}
I1203 12:13:56.844331 139746209720064 hlog.py:32] train/00129/loss 0.0026
I1203 12:14:00.831245 139746209720064 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 12:14:01.410215 139746209720064 hlog.py:32] train/00129/eval_val/acc 0.7905
I1203 12:14:01.440470 139746209720064 hlog.py:18] train/00129{16.00s}
I1203 12:14:12.757308 139746209720064 hlog.py:32] train/00130/loss 0.0030
I1203 12:14:16.584114 139746209720064 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 12:14:17.166699 139746209720064 hlog.py:32] train/00130/eval_val/acc 0.7905
I1203 12:14:17.167185 139746209720064 hlog.py:18] train/00130{15.73s}
I1203 12:14:28.764344 139746209720064 hlog.py:32] train/00131/loss 0.0032
I1203 12:14:32.423358 139746209720064 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 12:14:33.028839 139746209720064 hlog.py:32] train/00131/eval_val/acc 0.7905
I1203 12:14:33.029293 139746209720064 hlog.py:18] train/00131{15.86s}
I1203 12:14:45.334074 139746209720064 hlog.py:32] train/00132/loss 0.0033
I1203 12:14:49.381814 139746209720064 hlog.py:32] train/00132/eval_train/acc 0.9970
I1203 12:14:49.973207 139746209720064 hlog.py:32] train/00132/eval_val/acc 0.7838
I1203 12:14:49.973711 139746209720064 hlog.py:18] train/00132{16.94s}
I1203 12:15:01.591660 139746209720064 hlog.py:32] train/00133/loss 0.0029
I1203 12:15:05.259259 139746209720064 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 12:15:05.847118 139746209720064 hlog.py:32] train/00133/eval_val/acc 0.7838
I1203 12:15:05.847709 139746209720064 hlog.py:18] train/00133{15.87s}
I1203 12:15:17.164715 139746209720064 hlog.py:32] train/00134/loss 0.0027
I1203 12:15:20.945096 139746209720064 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 12:15:21.540549 139746209720064 hlog.py:32] train/00134/eval_val/acc 0.7905
I1203 12:15:21.541026 139746209720064 hlog.py:18] train/00134{15.69s}
I1203 12:15:34.333291 139746209720064 hlog.py:32] train/00135/loss 0.0033
I1203 12:15:38.075929 139746209720064 hlog.py:32] train/00135/eval_train/acc 0.9990
I1203 12:15:38.664334 139746209720064 hlog.py:32] train/00135/eval_val/acc 0.7838
I1203 12:15:38.664844 139746209720064 hlog.py:18] train/00135{17.12s}
I1203 12:15:50.509506 139746209720064 hlog.py:32] train/00136/loss 0.0029
I1203 12:15:54.454654 139746209720064 hlog.py:32] train/00136/eval_train/acc 1.0000
I1203 12:15:55.051302 139746209720064 hlog.py:32] train/00136/eval_val/acc 0.7838
I1203 12:15:55.051771 139746209720064 hlog.py:18] train/00136{16.39s}
I1203 12:16:07.043933 139746209720064 hlog.py:32] train/00137/loss 0.0032
I1203 12:16:10.694818 139746209720064 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 12:16:11.291536 139746209720064 hlog.py:32] train/00137/eval_val/acc 0.7838
I1203 12:16:11.292058 139746209720064 hlog.py:18] train/00137{16.24s}
I1203 12:16:22.902906 139746209720064 hlog.py:32] train/00138/loss 0.0028
I1203 12:16:26.863267 139746209720064 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 12:16:27.450386 139746209720064 hlog.py:32] train/00138/eval_val/acc 0.7905
I1203 12:16:27.450873 139746209720064 hlog.py:18] train/00138{16.16s}
I1203 12:16:39.071931 139746209720064 hlog.py:32] train/00139/loss 0.0030
I1203 12:16:42.948462 139746209720064 hlog.py:32] train/00139/eval_train/acc 1.0000
I1203 12:16:43.547509 139746209720064 hlog.py:32] train/00139/eval_val/acc 0.7838
I1203 12:16:43.578862 139746209720064 hlog.py:18] train/00139{16.13s}
I1203 12:16:55.072475 139746209720064 hlog.py:32] train/00140/loss 0.0023
I1203 12:16:58.791441 139746209720064 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 12:16:59.385771 139746209720064 hlog.py:32] train/00140/eval_val/acc 0.7905
I1203 12:16:59.386270 139746209720064 hlog.py:18] train/00140{15.81s}
I1203 12:17:10.765112 139746209720064 hlog.py:32] train/00141/loss 0.0026
I1203 12:17:14.915232 139746209720064 hlog.py:32] train/00141/eval_train/acc 1.0000
I1203 12:17:15.511287 139746209720064 hlog.py:32] train/00141/eval_val/acc 0.7838
I1203 12:17:15.511813 139746209720064 hlog.py:18] train/00141{16.13s}
I1203 12:17:27.067034 139746209720064 hlog.py:32] train/00142/loss 0.0026
I1203 12:17:30.950517 139746209720064 hlog.py:32] train/00142/eval_train/acc 1.0000
I1203 12:17:31.532618 139746209720064 hlog.py:32] train/00142/eval_val/acc 0.7838
I1203 12:17:31.533050 139746209720064 hlog.py:18] train/00142{16.02s}
I1203 12:17:44.010720 139746209720064 hlog.py:32] train/00143/loss 0.0030
I1203 12:17:47.812610 139746209720064 hlog.py:32] train/00143/eval_train/acc 1.0000
I1203 12:17:48.405911 139746209720064 hlog.py:32] train/00143/eval_val/acc 0.7770
I1203 12:17:48.406406 139746209720064 hlog.py:18] train/00143{16.87s}
I1203 12:17:59.995831 139746209720064 hlog.py:32] train/00144/loss 0.0025
I1203 12:18:03.922614 139746209720064 hlog.py:32] train/00144/eval_train/acc 1.0000
I1203 12:18:04.508185 139746209720064 hlog.py:32] train/00144/eval_val/acc 0.7770
I1203 12:18:04.508851 139746209720064 hlog.py:18] train/00144{16.10s}
I1203 12:18:16.748982 139746209720064 hlog.py:32] train/00145/loss 0.0031
I1203 12:18:20.701316 139746209720064 hlog.py:32] train/00145/eval_train/acc 1.0000
I1203 12:18:21.281894 139746209720064 hlog.py:32] train/00145/eval_val/acc 0.7770
I1203 12:18:21.282411 139746209720064 hlog.py:18] train/00145{16.77s}
I1203 12:18:32.771477 139746209720064 hlog.py:32] train/00146/loss 0.0027
I1203 12:18:36.731968 139746209720064 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 12:18:37.353582 139746209720064 hlog.py:32] train/00146/eval_val/acc 0.7838
I1203 12:18:37.354082 139746209720064 hlog.py:18] train/00146{16.07s}
I1203 12:18:48.914630 139746209720064 hlog.py:32] train/00147/loss 0.0030
I1203 12:18:52.681563 139746209720064 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 12:18:53.269421 139746209720064 hlog.py:32] train/00147/eval_val/acc 0.7838
I1203 12:18:53.269924 139746209720064 hlog.py:18] train/00147{15.92s}
I1203 12:19:04.913354 139746209720064 hlog.py:32] train/00148/loss 0.0027
I1203 12:19:08.805064 139746209720064 hlog.py:32] train/00148/eval_train/acc 1.0000
I1203 12:19:09.394936 139746209720064 hlog.py:32] train/00148/eval_val/acc 0.7838
I1203 12:19:09.395592 139746209720064 hlog.py:18] train/00148{16.13s}
I1203 12:19:20.603783 139746209720064 hlog.py:32] train/00149/loss 0.0024
I1203 12:19:24.337755 139746209720064 hlog.py:32] train/00149/eval_train/acc 1.0000
I1203 12:19:24.535526 139746209720064 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 12:19:24.535755 139746209720064 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 12:19:24.535859 139746209720064 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 12:19:24.535944 139746209720064 hlog.py:32] train/00149/eval_val/0/corr True
I1203 12:19:24.536021 139746209720064 hlog.py:32] train/00149/eval_val/0 
I1203 12:19:24.536104 139746209720064 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 12:19:24.536204 139746209720064 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 12:19:24.536301 139746209720064 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.536389 139746209720064 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.536468 139746209720064 hlog.py:32] train/00149/eval_val/1/corr True
I1203 12:19:24.536541 139746209720064 hlog.py:32] train/00149/eval_val/1 
I1203 12:19:24.536614 139746209720064 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 12:19:24.536701 139746209720064 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 12:19:24.536795 139746209720064 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1203 12:19:24.536884 139746209720064 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 12:19:24.536967 139746209720064 hlog.py:32] train/00149/eval_val/2/corr False
I1203 12:19:24.537041 139746209720064 hlog.py:32] train/00149/eval_val/2 
I1203 12:19:24.537113 139746209720064 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 12:19:24.537200 139746209720064 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 12:19:24.537295 139746209720064 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 12:19:24.537383 139746209720064 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 12:19:24.537461 139746209720064 hlog.py:32] train/00149/eval_val/3/corr False
I1203 12:19:24.537534 139746209720064 hlog.py:32] train/00149/eval_val/3 
I1203 12:19:24.537605 139746209720064 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 12:19:24.537698 139746209720064 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 12:19:24.537792 139746209720064 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 12:19:24.537880 139746209720064 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 12:19:24.537958 139746209720064 hlog.py:32] train/00149/eval_val/4/corr True
I1203 12:19:24.538031 139746209720064 hlog.py:32] train/00149/eval_val/4 
I1203 12:19:24.538102 139746209720064 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 12:19:24.538193 139746209720064 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 12:19:24.538285 139746209720064 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.538373 139746209720064 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.538450 139746209720064 hlog.py:32] train/00149/eval_val/5/corr True
I1203 12:19:24.538523 139746209720064 hlog.py:32] train/00149/eval_val/5 
I1203 12:19:24.538594 139746209720064 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 12:19:24.538685 139746209720064 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 12:19:24.538792 139746209720064 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.538881 139746209720064 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.538958 139746209720064 hlog.py:32] train/00149/eval_val/6/corr True
I1203 12:19:24.539031 139746209720064 hlog.py:32] train/00149/eval_val/6 
I1203 12:19:24.539102 139746209720064 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 12:19:24.539192 139746209720064 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 12:19:24.539285 139746209720064 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.539372 139746209720064 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.539472 139746209720064 hlog.py:32] train/00149/eval_val/7/corr True
I1203 12:19:24.539548 139746209720064 hlog.py:32] train/00149/eval_val/7 
I1203 12:19:24.539622 139746209720064 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 12:19:24.539729 139746209720064 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 12:19:24.539822 139746209720064 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 12:19:24.539910 139746209720064 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 12:19:24.539987 139746209720064 hlog.py:32] train/00149/eval_val/8/corr True
I1203 12:19:24.540059 139746209720064 hlog.py:32] train/00149/eval_val/8 
I1203 12:19:24.540131 139746209720064 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 12:19:24.540222 139746209720064 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 12:19:24.540314 139746209720064 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 12:19:24.540402 139746209720064 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 12:19:24.540479 139746209720064 hlog.py:32] train/00149/eval_val/9/corr True
I1203 12:19:24.540551 139746209720064 hlog.py:32] train/00149/eval_val/9 
I1203 12:19:24.540622 139746209720064 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 12:19:24.540713 139746209720064 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 12:19:24.540806 139746209720064 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.540894 139746209720064 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.540971 139746209720064 hlog.py:32] train/00149/eval_val/10/corr True
I1203 12:19:24.541043 139746209720064 hlog.py:32] train/00149/eval_val/10 
I1203 12:19:24.541114 139746209720064 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 12:19:24.541208 139746209720064 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 12:19:24.541311 139746209720064 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 12:19:24.541404 139746209720064 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 12:19:24.541482 139746209720064 hlog.py:32] train/00149/eval_val/11/corr True
I1203 12:19:24.541554 139746209720064 hlog.py:32] train/00149/eval_val/11 
I1203 12:19:24.541625 139746209720064 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 12:19:24.541719 139746209720064 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 12:19:24.541820 139746209720064 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 12:19:24.541920 139746209720064 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 12:19:24.541998 139746209720064 hlog.py:32] train/00149/eval_val/12/corr True
I1203 12:19:24.542071 139746209720064 hlog.py:32] train/00149/eval_val/12 
I1203 12:19:24.542142 139746209720064 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 12:19:24.542236 139746209720064 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 12:19:24.542336 139746209720064 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 12:19:24.542429 139746209720064 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 12:19:24.542507 139746209720064 hlog.py:32] train/00149/eval_val/13/corr True
I1203 12:19:24.542579 139746209720064 hlog.py:32] train/00149/eval_val/13 
I1203 12:19:24.542650 139746209720064 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 12:19:24.542743 139746209720064 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 12:19:24.542845 139746209720064 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 12:19:24.542937 139746209720064 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 12:19:24.543015 139746209720064 hlog.py:32] train/00149/eval_val/14/corr True
I1203 12:19:24.543088 139746209720064 hlog.py:32] train/00149/eval_val/14 
I1203 12:19:24.543159 139746209720064 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 12:19:24.543253 139746209720064 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 12:19:24.543354 139746209720064 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 12:19:24.543469 139746209720064 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 12:19:24.543551 139746209720064 hlog.py:32] train/00149/eval_val/15/corr True
I1203 12:19:24.543627 139746209720064 hlog.py:32] train/00149/eval_val/15 
I1203 12:19:24.543700 139746209720064 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 12:19:24.543808 139746209720064 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 12:19:24.543909 139746209720064 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 12:19:24.544003 139746209720064 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 12:19:24.544080 139746209720064 hlog.py:32] train/00149/eval_val/16/corr True
I1203 12:19:24.544153 139746209720064 hlog.py:32] train/00149/eval_val/16 
I1203 12:19:24.544224 139746209720064 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 12:19:24.544310 139746209720064 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 12:19:24.544408 139746209720064 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 12:19:24.544502 139746209720064 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 12:19:24.544586 139746209720064 hlog.py:32] train/00149/eval_val/17/corr False
I1203 12:19:24.544659 139746209720064 hlog.py:32] train/00149/eval_val/17 
I1203 12:19:24.544730 139746209720064 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 12:19:24.544826 139746209720064 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 12:19:24.544927 139746209720064 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 12:19:24.545021 139746209720064 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 12:19:24.545099 139746209720064 hlog.py:32] train/00149/eval_val/18/corr True
I1203 12:19:24.545172 139746209720064 hlog.py:32] train/00149/eval_val/18 
I1203 12:19:24.545243 139746209720064 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 12:19:24.545329 139746209720064 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 12:19:24.545426 139746209720064 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 12:19:24.545519 139746209720064 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 12:19:24.545597 139746209720064 hlog.py:32] train/00149/eval_val/19/corr False
I1203 12:19:24.545669 139746209720064 hlog.py:32] train/00149/eval_val/19 
I1203 12:19:24.545740 139746209720064 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 12:19:24.545827 139746209720064 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 12:19:24.545925 139746209720064 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 12:19:24.546018 139746209720064 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 12:19:24.546096 139746209720064 hlog.py:32] train/00149/eval_val/20/corr False
I1203 12:19:24.546168 139746209720064 hlog.py:32] train/00149/eval_val/20 
I1203 12:19:24.546240 139746209720064 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 12:19:24.546334 139746209720064 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 12:19:24.546435 139746209720064 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 12:19:24.546528 139746209720064 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 12:19:24.546606 139746209720064 hlog.py:32] train/00149/eval_val/21/corr True
I1203 12:19:24.546679 139746209720064 hlog.py:32] train/00149/eval_val/21 
I1203 12:19:24.546750 139746209720064 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 12:19:24.546837 139746209720064 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 12:19:24.546931 139746209720064 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _len ( B , A ) , _const ( B , _cityid ( rio grande , _ ) ) ) )
I1203 12:19:24.547019 139746209720064 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 12:19:24.547097 139746209720064 hlog.py:32] train/00149/eval_val/22/corr False
I1203 12:19:24.547170 139746209720064 hlog.py:32] train/00149/eval_val/22 
I1203 12:19:24.547240 139746209720064 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 12:19:24.547331 139746209720064 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 12:19:24.547445 139746209720064 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 12:19:24.547544 139746209720064 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 12:19:24.547626 139746209720064 hlog.py:32] train/00149/eval_val/23/corr True
I1203 12:19:24.547700 139746209720064 hlog.py:32] train/00149/eval_val/23 
I1203 12:19:24.547786 139746209720064 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 12:19:24.547872 139746209720064 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 12:19:24.547967 139746209720064 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _loc ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1203 12:19:24.548056 139746209720064 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 12:19:24.548133 139746209720064 hlog.py:32] train/00149/eval_val/24/corr False
I1203 12:19:24.548206 139746209720064 hlog.py:32] train/00149/eval_val/24 
I1203 12:19:24.548277 139746209720064 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 12:19:24.548369 139746209720064 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 12:19:24.548464 139746209720064 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 12:19:24.548554 139746209720064 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 12:19:24.548632 139746209720064 hlog.py:32] train/00149/eval_val/25/corr True
I1203 12:19:24.548705 139746209720064 hlog.py:32] train/00149/eval_val/25 
I1203 12:19:24.548776 139746209720064 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 12:19:24.548867 139746209720064 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 12:19:24.548963 139746209720064 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 12:19:24.549052 139746209720064 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 12:19:24.549130 139746209720064 hlog.py:32] train/00149/eval_val/26/corr True
I1203 12:19:24.549203 139746209720064 hlog.py:32] train/00149/eval_val/26 
I1203 12:19:24.549274 139746209720064 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 12:19:24.549361 139746209720064 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 12:19:24.549463 139746209720064 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1203 12:19:24.549554 139746209720064 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 12:19:24.549632 139746209720064 hlog.py:32] train/00149/eval_val/27/corr False
I1203 12:19:24.549705 139746209720064 hlog.py:32] train/00149/eval_val/27 
I1203 12:19:24.549776 139746209720064 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 12:19:24.549867 139746209720064 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 12:19:24.549962 139746209720064 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 12:19:24.550051 139746209720064 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 12:19:24.550128 139746209720064 hlog.py:32] train/00149/eval_val/28/corr True
I1203 12:19:24.550201 139746209720064 hlog.py:32] train/00149/eval_val/28 
I1203 12:19:24.550272 139746209720064 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 12:19:24.550364 139746209720064 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 12:19:24.550459 139746209720064 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 12:19:24.550559 139746209720064 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 12:19:24.550638 139746209720064 hlog.py:32] train/00149/eval_val/29/corr True
I1203 12:19:24.550711 139746209720064 hlog.py:32] train/00149/eval_val/29 
I1203 12:19:24.550781 139746209720064 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 12:19:24.550868 139746209720064 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 12:19:24.550961 139746209720064 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north north ) ) ) )
I1203 12:19:24.551051 139746209720064 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 12:19:24.551129 139746209720064 hlog.py:32] train/00149/eval_val/30/corr False
I1203 12:19:24.551201 139746209720064 hlog.py:32] train/00149/eval_val/30 
I1203 12:19:24.551272 139746209720064 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 12:19:24.551363 139746209720064 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 12:19:24.551481 139746209720064 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 12:19:24.551574 139746209720064 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 12:19:24.551655 139746209720064 hlog.py:32] train/00149/eval_val/31/corr True
I1203 12:19:24.551743 139746209720064 hlog.py:32] train/00149/eval_val/31 
I1203 12:19:24.551814 139746209720064 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 12:19:24.551901 139746209720064 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 12:19:24.551995 139746209720064 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 12:19:24.552085 139746209720064 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 12:19:24.552163 139746209720064 hlog.py:32] train/00149/eval_val/32/corr False
I1203 12:19:24.552236 139746209720064 hlog.py:32] train/00149/eval_val/32 
I1203 12:19:24.552306 139746209720064 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 12:19:24.552398 139746209720064 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 12:19:24.552494 139746209720064 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 12:19:24.552583 139746209720064 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 12:19:24.552661 139746209720064 hlog.py:32] train/00149/eval_val/33/corr True
I1203 12:19:24.552733 139746209720064 hlog.py:32] train/00149/eval_val/33 
I1203 12:19:24.552804 139746209720064 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 12:19:24.552896 139746209720064 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 12:19:24.552992 139746209720064 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 12:19:24.553081 139746209720064 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 12:19:24.553159 139746209720064 hlog.py:32] train/00149/eval_val/34/corr True
I1203 12:19:24.553231 139746209720064 hlog.py:32] train/00149/eval_val/34 
I1203 12:19:24.553302 139746209720064 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 12:19:24.553397 139746209720064 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 12:19:24.553495 139746209720064 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.553593 139746209720064 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.553672 139746209720064 hlog.py:32] train/00149/eval_val/35/corr True
I1203 12:19:24.553744 139746209720064 hlog.py:32] train/00149/eval_val/35 
I1203 12:19:24.553815 139746209720064 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 12:19:24.553907 139746209720064 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 12:19:24.554005 139746209720064 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.554097 139746209720064 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.554174 139746209720064 hlog.py:32] train/00149/eval_val/36/corr True
I1203 12:19:24.554247 139746209720064 hlog.py:32] train/00149/eval_val/36 
I1203 12:19:24.554318 139746209720064 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 12:19:24.554411 139746209720064 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 12:19:24.554509 139746209720064 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.554600 139746209720064 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.554678 139746209720064 hlog.py:32] train/00149/eval_val/37/corr True
I1203 12:19:24.554750 139746209720064 hlog.py:32] train/00149/eval_val/37 
I1203 12:19:24.554821 139746209720064 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 12:19:24.554914 139746209720064 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 12:19:24.555012 139746209720064 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.555103 139746209720064 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.555181 139746209720064 hlog.py:32] train/00149/eval_val/38/corr True
I1203 12:19:24.555253 139746209720064 hlog.py:32] train/00149/eval_val/38 
I1203 12:19:24.555324 139746209720064 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 12:19:24.555438 139746209720064 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 12:19:24.555542 139746209720064 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.555637 139746209720064 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 12:19:24.555730 139746209720064 hlog.py:32] train/00149/eval_val/39/corr True
I1203 12:19:24.555804 139746209720064 hlog.py:32] train/00149/eval_val/39 
I1203 12:19:24.555875 139746209720064 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 12:19:24.555962 139746209720064 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 12:19:24.556060 139746209720064 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _state ( B ) , _traverse ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 12:19:24.556149 139746209720064 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 12:19:24.556228 139746209720064 hlog.py:32] train/00149/eval_val/40/corr False
I1203 12:19:24.556300 139746209720064 hlog.py:32] train/00149/eval_val/40 
I1203 12:19:24.556371 139746209720064 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 12:19:24.556458 139746209720064 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 12:19:24.556561 139746209720064 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 12:19:24.556652 139746209720064 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 12:19:24.556729 139746209720064 hlog.py:32] train/00149/eval_val/41/corr False
I1203 12:19:24.556802 139746209720064 hlog.py:32] train/00149/eval_val/41 
I1203 12:19:24.556873 139746209720064 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 12:19:24.556960 139746209720064 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 12:19:24.557059 139746209720064 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 12:19:24.557148 139746209720064 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 12:19:24.557225 139746209720064 hlog.py:32] train/00149/eval_val/42/corr False
I1203 12:19:24.557298 139746209720064 hlog.py:32] train/00149/eval_val/42 
I1203 12:19:24.557368 139746209720064 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 12:19:24.557464 139746209720064 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 12:19:24.557568 139746209720064 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 12:19:24.557662 139746209720064 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 12:19:24.557740 139746209720064 hlog.py:32] train/00149/eval_val/43/corr True
I1203 12:19:24.557812 139746209720064 hlog.py:32] train/00149/eval_val/43 
I1203 12:19:24.557883 139746209720064 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 12:19:24.557978 139746209720064 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 12:19:24.558082 139746209720064 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 12:19:24.558177 139746209720064 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 12:19:24.558255 139746209720064 hlog.py:32] train/00149/eval_val/44/corr True
I1203 12:19:24.558327 139746209720064 hlog.py:32] train/00149/eval_val/44 
I1203 12:19:24.558398 139746209720064 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 12:19:24.558491 139746209720064 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 12:19:24.558589 139746209720064 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 12:19:24.558680 139746209720064 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 12:19:24.558758 139746209720064 hlog.py:32] train/00149/eval_val/45/corr True
I1203 12:19:24.558831 139746209720064 hlog.py:32] train/00149/eval_val/45 
I1203 12:19:24.558902 139746209720064 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 12:19:24.558994 139746209720064 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 12:19:24.559092 139746209720064 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 12:19:24.559183 139746209720064 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 12:19:24.559260 139746209720064 hlog.py:32] train/00149/eval_val/46/corr True
I1203 12:19:24.559339 139746209720064 hlog.py:32] train/00149/eval_val/46 
I1203 12:19:24.559430 139746209720064 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 12:19:24.559523 139746209720064 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 12:19:24.559624 139746209720064 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) ) , A ) )
I1203 12:19:24.559733 139746209720064 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 12:19:24.559812 139746209720064 hlog.py:32] train/00149/eval_val/47/corr False
I1203 12:19:24.559884 139746209720064 hlog.py:32] train/00149/eval_val/47 
I1203 12:19:24.559955 139746209720064 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 12:19:24.560048 139746209720064 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 12:19:24.560149 139746209720064 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( called , _ ) ) ) , A ) )
I1203 12:19:24.560242 139746209720064 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 12:19:24.560320 139746209720064 hlog.py:32] train/00149/eval_val/48/corr False
I1203 12:19:24.560393 139746209720064 hlog.py:32] train/00149/eval_val/48 
I1203 12:19:24.560463 139746209720064 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 12:19:24.560557 139746209720064 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 12:19:24.560658 139746209720064 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 12:19:24.560751 139746209720064 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 12:19:24.560829 139746209720064 hlog.py:32] train/00149/eval_val/49/corr True
I1203 12:19:24.560901 139746209720064 hlog.py:32] train/00149/eval_val/49 
I1203 12:19:24.560972 139746209720064 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 12:19:24.561065 139746209720064 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 12:19:24.561166 139746209720064 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 12:19:24.561259 139746209720064 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 12:19:24.561336 139746209720064 hlog.py:32] train/00149/eval_val/50/corr True
I1203 12:19:24.561409 139746209720064 hlog.py:32] train/00149/eval_val/50 
I1203 12:19:24.561480 139746209720064 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 12:19:24.561574 139746209720064 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 12:19:24.561675 139746209720064 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 12:19:24.561769 139746209720064 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 12:19:24.561846 139746209720064 hlog.py:32] train/00149/eval_val/51/corr True
I1203 12:19:24.561919 139746209720064 hlog.py:32] train/00149/eval_val/51 
I1203 12:19:24.561989 139746209720064 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 12:19:24.562081 139746209720064 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 12:19:24.562183 139746209720064 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 12:19:24.562274 139746209720064 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 12:19:24.562351 139746209720064 hlog.py:32] train/00149/eval_val/52/corr True
I1203 12:19:24.562424 139746209720064 hlog.py:32] train/00149/eval_val/52 
I1203 12:19:24.562495 139746209720064 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 12:19:24.562587 139746209720064 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 12:19:24.562682 139746209720064 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 12:19:24.562772 139746209720064 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 12:19:24.562850 139746209720064 hlog.py:32] train/00149/eval_val/53/corr True
I1203 12:19:24.562922 139746209720064 hlog.py:32] train/00149/eval_val/53 
I1203 12:19:24.562994 139746209720064 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 12:19:24.563085 139746209720064 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 12:19:24.563180 139746209720064 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.563270 139746209720064 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.563348 139746209720064 hlog.py:32] train/00149/eval_val/54/corr True
I1203 12:19:24.563440 139746209720064 hlog.py:32] train/00149/eval_val/54 
I1203 12:19:24.563515 139746209720064 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 12:19:24.563610 139746209720064 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 12:19:24.563708 139746209720064 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 12:19:24.563811 139746209720064 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 12:19:24.563889 139746209720064 hlog.py:32] train/00149/eval_val/55/corr True
I1203 12:19:24.563961 139746209720064 hlog.py:32] train/00149/eval_val/55 
I1203 12:19:24.564033 139746209720064 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 12:19:24.564123 139746209720064 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 12:19:24.564219 139746209720064 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 12:19:24.564309 139746209720064 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 12:19:24.564386 139746209720064 hlog.py:32] train/00149/eval_val/56/corr True
I1203 12:19:24.564459 139746209720064 hlog.py:32] train/00149/eval_val/56 
I1203 12:19:24.564530 139746209720064 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 12:19:24.564622 139746209720064 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 12:19:24.564717 139746209720064 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.564806 139746209720064 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.564884 139746209720064 hlog.py:32] train/00149/eval_val/57/corr True
I1203 12:19:24.564957 139746209720064 hlog.py:32] train/00149/eval_val/57 
I1203 12:19:24.565028 139746209720064 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 12:19:24.565119 139746209720064 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 12:19:24.565214 139746209720064 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.565310 139746209720064 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.565389 139746209720064 hlog.py:32] train/00149/eval_val/58/corr True
I1203 12:19:24.565461 139746209720064 hlog.py:32] train/00149/eval_val/58 
I1203 12:19:24.565532 139746209720064 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 12:19:24.565624 139746209720064 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 12:19:24.565719 139746209720064 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 12:19:24.565808 139746209720064 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 12:19:24.565886 139746209720064 hlog.py:32] train/00149/eval_val/59/corr True
I1203 12:19:24.565958 139746209720064 hlog.py:32] train/00149/eval_val/59 
I1203 12:19:24.566029 139746209720064 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 12:19:24.566120 139746209720064 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 12:19:24.566215 139746209720064 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 12:19:24.566304 139746209720064 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 12:19:24.566382 139746209720064 hlog.py:32] train/00149/eval_val/60/corr True
I1203 12:19:24.566454 139746209720064 hlog.py:32] train/00149/eval_val/60 
I1203 12:19:24.566525 139746209720064 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 12:19:24.566617 139746209720064 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 12:19:24.566712 139746209720064 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 12:19:24.566802 139746209720064 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 12:19:24.566879 139746209720064 hlog.py:32] train/00149/eval_val/61/corr True
I1203 12:19:24.566952 139746209720064 hlog.py:32] train/00149/eval_val/61 
I1203 12:19:24.567023 139746209720064 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 12:19:24.567113 139746209720064 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 12:19:24.567209 139746209720064 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 12:19:24.567298 139746209720064 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 12:19:24.567376 139746209720064 hlog.py:32] train/00149/eval_val/62/corr True
I1203 12:19:24.567474 139746209720064 hlog.py:32] train/00149/eval_val/62 
I1203 12:19:24.567548 139746209720064 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 12:19:24.567642 139746209720064 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 12:19:24.567753 139746209720064 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.567843 139746209720064 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.567921 139746209720064 hlog.py:32] train/00149/eval_val/63/corr True
I1203 12:19:24.567993 139746209720064 hlog.py:32] train/00149/eval_val/63 
I1203 12:19:24.568064 139746209720064 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 12:19:24.796855 139746209720064 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 12:19:24.797056 139746209720064 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 12:19:24.797168 139746209720064 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 12:19:24.797253 139746209720064 hlog.py:32] train/00149/eval_val/64/corr True
I1203 12:19:24.797330 139746209720064 hlog.py:32] train/00149/eval_val/64 
I1203 12:19:24.797407 139746209720064 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 12:19:24.797502 139746209720064 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 12:19:24.797601 139746209720064 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.797692 139746209720064 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.797771 139746209720064 hlog.py:32] train/00149/eval_val/65/corr True
I1203 12:19:24.797844 139746209720064 hlog.py:32] train/00149/eval_val/65 
I1203 12:19:24.797916 139746209720064 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 12:19:24.798009 139746209720064 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 12:19:24.798105 139746209720064 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.798195 139746209720064 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.798273 139746209720064 hlog.py:32] train/00149/eval_val/66/corr True
I1203 12:19:24.798345 139746209720064 hlog.py:32] train/00149/eval_val/66 
I1203 12:19:24.798416 139746209720064 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 12:19:24.798510 139746209720064 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 12:19:24.798605 139746209720064 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.798695 139746209720064 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.798772 139746209720064 hlog.py:32] train/00149/eval_val/67/corr True
I1203 12:19:24.798844 139746209720064 hlog.py:32] train/00149/eval_val/67 
I1203 12:19:24.798915 139746209720064 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 12:19:24.799009 139746209720064 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 12:19:24.799107 139746209720064 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 12:19:24.799198 139746209720064 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 12:19:24.799276 139746209720064 hlog.py:32] train/00149/eval_val/68/corr True
I1203 12:19:24.799348 139746209720064 hlog.py:32] train/00149/eval_val/68 
I1203 12:19:24.799440 139746209720064 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 12:19:24.799539 139746209720064 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 12:19:24.799639 139746209720064 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.799746 139746209720064 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.799824 139746209720064 hlog.py:32] train/00149/eval_val/69/corr True
I1203 12:19:24.799896 139746209720064 hlog.py:32] train/00149/eval_val/69 
I1203 12:19:24.799967 139746209720064 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 12:19:24.800058 139746209720064 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 12:19:24.800151 139746209720064 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.800239 139746209720064 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.800325 139746209720064 hlog.py:32] train/00149/eval_val/70/corr True
I1203 12:19:24.800398 139746209720064 hlog.py:32] train/00149/eval_val/70 
I1203 12:19:24.800469 139746209720064 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 12:19:24.800561 139746209720064 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 12:19:24.800654 139746209720064 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 12:19:24.800742 139746209720064 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 12:19:24.800819 139746209720064 hlog.py:32] train/00149/eval_val/71/corr True
I1203 12:19:24.800892 139746209720064 hlog.py:32] train/00149/eval_val/71 
I1203 12:19:24.800962 139746209720064 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 12:19:24.801053 139746209720064 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 12:19:24.801146 139746209720064 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 12:19:24.801234 139746209720064 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 12:19:24.801311 139746209720064 hlog.py:32] train/00149/eval_val/72/corr True
I1203 12:19:24.801384 139746209720064 hlog.py:32] train/00149/eval_val/72 
I1203 12:19:24.801455 139746209720064 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 12:19:24.801546 139746209720064 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 12:19:24.801639 139746209720064 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 12:19:24.801727 139746209720064 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 12:19:24.801805 139746209720064 hlog.py:32] train/00149/eval_val/73/corr True
I1203 12:19:24.801877 139746209720064 hlog.py:32] train/00149/eval_val/73 
I1203 12:19:24.801947 139746209720064 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 12:19:24.802038 139746209720064 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 12:19:24.802130 139746209720064 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 12:19:24.802218 139746209720064 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 12:19:24.802296 139746209720064 hlog.py:32] train/00149/eval_val/74/corr True
I1203 12:19:24.802368 139746209720064 hlog.py:32] train/00149/eval_val/74 
I1203 12:19:24.802439 139746209720064 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 12:19:24.802531 139746209720064 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 12:19:24.802624 139746209720064 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 12:19:24.802712 139746209720064 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 12:19:24.802790 139746209720064 hlog.py:32] train/00149/eval_val/75/corr True
I1203 12:19:24.802862 139746209720064 hlog.py:32] train/00149/eval_val/75 
I1203 12:19:24.802933 139746209720064 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 12:19:24.803025 139746209720064 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 12:19:24.803118 139746209720064 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 12:19:24.803206 139746209720064 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 12:19:24.803283 139746209720064 hlog.py:32] train/00149/eval_val/76/corr True
I1203 12:19:24.803356 139746209720064 hlog.py:32] train/00149/eval_val/76 
I1203 12:19:24.803455 139746209720064 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 12:19:24.803552 139746209720064 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 12:19:24.803649 139746209720064 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 12:19:24.803753 139746209720064 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 12:19:24.803830 139746209720064 hlog.py:32] train/00149/eval_val/77/corr True
I1203 12:19:24.803902 139746209720064 hlog.py:32] train/00149/eval_val/77 
I1203 12:19:24.803973 139746209720064 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 12:19:24.804064 139746209720064 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 12:19:24.804157 139746209720064 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 12:19:24.804245 139746209720064 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 12:19:24.804322 139746209720064 hlog.py:32] train/00149/eval_val/78/corr True
I1203 12:19:24.804395 139746209720064 hlog.py:32] train/00149/eval_val/78 
I1203 12:19:24.804466 139746209720064 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 12:19:24.804558 139746209720064 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 12:19:24.804652 139746209720064 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 12:19:24.804740 139746209720064 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 12:19:24.804818 139746209720064 hlog.py:32] train/00149/eval_val/79/corr True
I1203 12:19:24.804890 139746209720064 hlog.py:32] train/00149/eval_val/79 
I1203 12:19:24.804961 139746209720064 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 12:19:24.805052 139746209720064 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 12:19:24.805144 139746209720064 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.805232 139746209720064 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.805310 139746209720064 hlog.py:32] train/00149/eval_val/80/corr True
I1203 12:19:24.805382 139746209720064 hlog.py:32] train/00149/eval_val/80 
I1203 12:19:24.805453 139746209720064 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 12:19:24.805540 139746209720064 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 12:19:24.805634 139746209720064 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) , _state ( B ) ) )
I1203 12:19:24.805722 139746209720064 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.805800 139746209720064 hlog.py:32] train/00149/eval_val/81/corr False
I1203 12:19:24.805872 139746209720064 hlog.py:32] train/00149/eval_val/81 
I1203 12:19:24.805943 139746209720064 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 12:19:24.806034 139746209720064 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 12:19:24.806127 139746209720064 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 12:19:24.806214 139746209720064 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 12:19:24.806292 139746209720064 hlog.py:32] train/00149/eval_val/82/corr True
I1203 12:19:24.806364 139746209720064 hlog.py:32] train/00149/eval_val/82 
I1203 12:19:24.806435 139746209720064 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 12:19:24.806527 139746209720064 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 12:19:24.806626 139746209720064 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 12:19:24.806715 139746209720064 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 12:19:24.806792 139746209720064 hlog.py:32] train/00149/eval_val/83/corr True
I1203 12:19:24.806864 139746209720064 hlog.py:32] train/00149/eval_val/83 
I1203 12:19:24.806935 139746209720064 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 12:19:24.807027 139746209720064 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 12:19:24.807120 139746209720064 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 12:19:24.807209 139746209720064 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 12:19:24.807286 139746209720064 hlog.py:32] train/00149/eval_val/84/corr False
I1203 12:19:24.807359 139746209720064 hlog.py:32] train/00149/eval_val/84 
I1203 12:19:24.807454 139746209720064 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 12:19:24.807552 139746209720064 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 12:19:24.807649 139746209720064 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 12:19:24.807752 139746209720064 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 12:19:24.807831 139746209720064 hlog.py:32] train/00149/eval_val/85/corr True
I1203 12:19:24.807903 139746209720064 hlog.py:32] train/00149/eval_val/85 
I1203 12:19:24.807974 139746209720064 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 12:19:24.808063 139746209720064 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 12:19:24.808165 139746209720064 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _const ( C , _riverid ( a ) ) ) ) )
I1203 12:19:24.808259 139746209720064 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 12:19:24.808337 139746209720064 hlog.py:32] train/00149/eval_val/86/corr False
I1203 12:19:24.808410 139746209720064 hlog.py:32] train/00149/eval_val/86 
I1203 12:19:24.808481 139746209720064 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 12:19:24.808569 139746209720064 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 12:19:24.808672 139746209720064 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 12:19:24.808769 139746209720064 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 12:19:24.808849 139746209720064 hlog.py:32] train/00149/eval_val/87/corr False
I1203 12:19:24.808921 139746209720064 hlog.py:32] train/00149/eval_val/87 
I1203 12:19:24.808992 139746209720064 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 12:19:24.809084 139746209720064 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 12:19:24.809180 139746209720064 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 12:19:24.809269 139746209720064 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 12:19:24.809346 139746209720064 hlog.py:32] train/00149/eval_val/88/corr True
I1203 12:19:24.809419 139746209720064 hlog.py:32] train/00149/eval_val/88 
I1203 12:19:24.809490 139746209720064 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 12:19:24.809595 139746209720064 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 12:19:24.809698 139746209720064 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.809792 139746209720064 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.809870 139746209720064 hlog.py:32] train/00149/eval_val/89/corr True
I1203 12:19:24.809942 139746209720064 hlog.py:32] train/00149/eval_val/89 
I1203 12:19:24.810014 139746209720064 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 12:19:24.810110 139746209720064 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 12:19:24.810216 139746209720064 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 12:19:24.810313 139746209720064 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 12:19:24.810391 139746209720064 hlog.py:32] train/00149/eval_val/90/corr True
I1203 12:19:24.810463 139746209720064 hlog.py:32] train/00149/eval_val/90 
I1203 12:19:24.810534 139746209720064 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 12:19:24.810627 139746209720064 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 12:19:24.810724 139746209720064 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.810815 139746209720064 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.810893 139746209720064 hlog.py:32] train/00149/eval_val/91/corr True
I1203 12:19:24.810965 139746209720064 hlog.py:32] train/00149/eval_val/91 
I1203 12:19:24.811036 139746209720064 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 12:19:24.811129 139746209720064 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 12:19:24.811226 139746209720064 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.811317 139746209720064 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.811395 139746209720064 hlog.py:32] train/00149/eval_val/92/corr True
I1203 12:19:24.811492 139746209720064 hlog.py:32] train/00149/eval_val/92 
I1203 12:19:24.811566 139746209720064 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 12:19:24.811662 139746209720064 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 12:19:24.811774 139746209720064 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.811865 139746209720064 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.811944 139746209720064 hlog.py:32] train/00149/eval_val/93/corr True
I1203 12:19:24.812016 139746209720064 hlog.py:32] train/00149/eval_val/93 
I1203 12:19:24.812087 139746209720064 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 12:19:24.812180 139746209720064 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 12:19:24.812277 139746209720064 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.812368 139746209720064 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.812452 139746209720064 hlog.py:32] train/00149/eval_val/94/corr True
I1203 12:19:24.812525 139746209720064 hlog.py:32] train/00149/eval_val/94 
I1203 12:19:24.812596 139746209720064 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 12:19:24.812690 139746209720064 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 12:19:24.812787 139746209720064 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.812878 139746209720064 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.812955 139746209720064 hlog.py:32] train/00149/eval_val/95/corr True
I1203 12:19:24.813028 139746209720064 hlog.py:32] train/00149/eval_val/95 
I1203 12:19:24.813098 139746209720064 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 12:19:24.813193 139746209720064 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 12:19:24.813295 139746209720064 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 12:19:24.813388 139746209720064 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 12:19:24.813466 139746209720064 hlog.py:32] train/00149/eval_val/96/corr True
I1203 12:19:24.813539 139746209720064 hlog.py:32] train/00149/eval_val/96 
I1203 12:19:24.813610 139746209720064 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 12:19:24.813709 139746209720064 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 12:19:24.813857 139746209720064 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 12:19:24.813967 139746209720064 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 12:19:24.814046 139746209720064 hlog.py:32] train/00149/eval_val/97/corr True
I1203 12:19:24.814118 139746209720064 hlog.py:32] train/00149/eval_val/97 
I1203 12:19:24.814189 139746209720064 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 12:19:24.814284 139746209720064 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 12:19:24.814384 139746209720064 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 12:19:24.814476 139746209720064 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 12:19:24.814554 139746209720064 hlog.py:32] train/00149/eval_val/98/corr True
I1203 12:19:24.814627 139746209720064 hlog.py:32] train/00149/eval_val/98 
I1203 12:19:24.814697 139746209720064 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 12:19:24.814791 139746209720064 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 12:19:24.814891 139746209720064 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 12:19:24.814983 139746209720064 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 12:19:24.815067 139746209720064 hlog.py:32] train/00149/eval_val/99/corr True
I1203 12:19:24.815140 139746209720064 hlog.py:32] train/00149/eval_val/99 
I1203 12:19:24.815211 139746209720064 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 12:19:24.815299 139746209720064 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 12:19:24.815396 139746209720064 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 12:19:24.815514 139746209720064 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 12:19:24.815594 139746209720064 hlog.py:32] train/00149/eval_val/100/corr False
I1203 12:19:24.815669 139746209720064 hlog.py:32] train/00149/eval_val/100 
I1203 12:19:24.815755 139746209720064 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 12:19:24.815843 139746209720064 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 12:19:24.815946 139746209720064 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 12:19:24.816040 139746209720064 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 12:19:24.816118 139746209720064 hlog.py:32] train/00149/eval_val/101/corr False
I1203 12:19:24.816190 139746209720064 hlog.py:32] train/00149/eval_val/101 
I1203 12:19:24.816261 139746209720064 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 12:19:24.816349 139746209720064 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 12:19:24.816444 139746209720064 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( over ) ) ) ) )
I1203 12:19:24.816534 139746209720064 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 12:19:24.816612 139746209720064 hlog.py:32] train/00149/eval_val/102/corr False
I1203 12:19:24.816684 139746209720064 hlog.py:32] train/00149/eval_val/102 
I1203 12:19:24.816755 139746209720064 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 12:19:24.816846 139746209720064 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 12:19:24.816941 139746209720064 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 12:19:24.817031 139746209720064 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 12:19:24.817109 139746209720064 hlog.py:32] train/00149/eval_val/103/corr True
I1203 12:19:24.817181 139746209720064 hlog.py:32] train/00149/eval_val/103 
I1203 12:19:24.817252 139746209720064 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 12:19:24.817343 139746209720064 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 12:19:24.817439 139746209720064 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.817528 139746209720064 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.817606 139746209720064 hlog.py:32] train/00149/eval_val/104/corr True
I1203 12:19:24.817678 139746209720064 hlog.py:32] train/00149/eval_val/104 
I1203 12:19:24.817749 139746209720064 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 12:19:24.817840 139746209720064 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 12:19:24.817935 139746209720064 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 12:19:24.818024 139746209720064 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 12:19:24.818108 139746209720064 hlog.py:32] train/00149/eval_val/105/corr True
I1203 12:19:24.818181 139746209720064 hlog.py:32] train/00149/eval_val/105 
I1203 12:19:24.818252 139746209720064 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 12:19:24.818343 139746209720064 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 12:19:24.818438 139746209720064 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 12:19:24.818528 139746209720064 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 12:19:24.818605 139746209720064 hlog.py:32] train/00149/eval_val/106/corr True
I1203 12:19:24.818678 139746209720064 hlog.py:32] train/00149/eval_val/106 
I1203 12:19:24.818749 139746209720064 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 12:19:24.818840 139746209720064 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 12:19:24.818935 139746209720064 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.819025 139746209720064 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.819102 139746209720064 hlog.py:32] train/00149/eval_val/107/corr True
I1203 12:19:24.819175 139746209720064 hlog.py:32] train/00149/eval_val/107 
I1203 12:19:24.819246 139746209720064 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 12:19:24.819337 139746209720064 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 12:19:24.819454 139746209720064 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 12:19:24.819549 139746209720064 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 12:19:24.819629 139746209720064 hlog.py:32] train/00149/eval_val/108/corr True
I1203 12:19:24.819704 139746209720064 hlog.py:32] train/00149/eval_val/108 
I1203 12:19:24.819789 139746209720064 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 12:19:24.819880 139746209720064 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 12:19:24.819975 139746209720064 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 12:19:24.820065 139746209720064 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 12:19:24.820143 139746209720064 hlog.py:32] train/00149/eval_val/109/corr True
I1203 12:19:24.820215 139746209720064 hlog.py:32] train/00149/eval_val/109 
I1203 12:19:24.820286 139746209720064 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 12:19:24.820377 139746209720064 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 12:19:24.820472 139746209720064 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.820562 139746209720064 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 12:19:24.820639 139746209720064 hlog.py:32] train/00149/eval_val/110/corr True
I1203 12:19:24.820711 139746209720064 hlog.py:32] train/00149/eval_val/110 
I1203 12:19:24.820782 139746209720064 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 12:19:24.820874 139746209720064 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 12:19:24.820969 139746209720064 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 12:19:24.821064 139746209720064 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 12:19:24.821143 139746209720064 hlog.py:32] train/00149/eval_val/111/corr True
I1203 12:19:24.821216 139746209720064 hlog.py:32] train/00149/eval_val/111 
I1203 12:19:24.821287 139746209720064 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 12:19:24.821378 139746209720064 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 12:19:24.821474 139746209720064 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 12:19:24.821563 139746209720064 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 12:19:24.821641 139746209720064 hlog.py:32] train/00149/eval_val/112/corr True
I1203 12:19:24.821713 139746209720064 hlog.py:32] train/00149/eval_val/112 
I1203 12:19:24.821784 139746209720064 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 12:19:24.821876 139746209720064 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 12:19:24.821972 139746209720064 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 12:19:24.822062 139746209720064 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 12:19:24.822140 139746209720064 hlog.py:32] train/00149/eval_val/113/corr True
I1203 12:19:24.822212 139746209720064 hlog.py:32] train/00149/eval_val/113 
I1203 12:19:24.822283 139746209720064 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 12:19:24.822374 139746209720064 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 12:19:24.822469 139746209720064 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.822558 139746209720064 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 12:19:24.822636 139746209720064 hlog.py:32] train/00149/eval_val/114/corr True
I1203 12:19:24.822707 139746209720064 hlog.py:32] train/00149/eval_val/114 
I1203 12:19:24.822778 139746209720064 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 12:19:24.822870 139746209720064 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 12:19:24.822966 139746209720064 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 12:19:24.823057 139746209720064 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 12:19:24.823134 139746209720064 hlog.py:32] train/00149/eval_val/115/corr True
I1203 12:19:24.823207 139746209720064 hlog.py:32] train/00149/eval_val/115 
I1203 12:19:24.823278 139746209720064 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 12:19:24.823369 139746209720064 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 12:19:24.823486 139746209720064 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.823579 139746209720064 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 12:19:24.823659 139746209720064 hlog.py:32] train/00149/eval_val/116/corr True
I1203 12:19:24.823747 139746209720064 hlog.py:32] train/00149/eval_val/116 
I1203 12:19:24.823818 139746209720064 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 12:19:24.823911 139746209720064 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 12:19:24.824008 139746209720064 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.824105 139746209720064 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.824184 139746209720064 hlog.py:32] train/00149/eval_val/117/corr True
I1203 12:19:24.824257 139746209720064 hlog.py:32] train/00149/eval_val/117 
I1203 12:19:24.824327 139746209720064 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 12:19:24.824419 139746209720064 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 12:19:24.824516 139746209720064 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.824607 139746209720064 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.824685 139746209720064 hlog.py:32] train/00149/eval_val/118/corr True
I1203 12:19:24.824757 139746209720064 hlog.py:32] train/00149/eval_val/118 
I1203 12:19:24.824828 139746209720064 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 12:19:24.824920 139746209720064 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 12:19:24.825018 139746209720064 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.825109 139746209720064 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 12:19:24.825186 139746209720064 hlog.py:32] train/00149/eval_val/119/corr True
I1203 12:19:24.825259 139746209720064 hlog.py:32] train/00149/eval_val/119 
I1203 12:19:24.825330 139746209720064 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 12:19:24.825418 139746209720064 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 12:19:24.825507 139746209720064 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 12:19:24.825592 139746209720064 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 12:19:24.825669 139746209720064 hlog.py:32] train/00149/eval_val/120/corr True
I1203 12:19:24.825741 139746209720064 hlog.py:32] train/00149/eval_val/120 
I1203 12:19:24.825812 139746209720064 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 12:19:24.825901 139746209720064 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 12:19:24.825990 139746209720064 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 12:19:24.826074 139746209720064 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 12:19:24.826152 139746209720064 hlog.py:32] train/00149/eval_val/121/corr True
I1203 12:19:24.826224 139746209720064 hlog.py:32] train/00149/eval_val/121 
I1203 12:19:24.826295 139746209720064 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 12:19:24.826387 139746209720064 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 12:19:24.826483 139746209720064 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 12:19:24.826574 139746209720064 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 12:19:24.826651 139746209720064 hlog.py:32] train/00149/eval_val/122/corr True
I1203 12:19:24.826724 139746209720064 hlog.py:32] train/00149/eval_val/122 
I1203 12:19:24.826795 139746209720064 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 12:19:24.826887 139746209720064 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 12:19:24.826984 139746209720064 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 12:19:24.827081 139746209720064 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 12:19:24.827159 139746209720064 hlog.py:32] train/00149/eval_val/123/corr True
I1203 12:19:24.827231 139746209720064 hlog.py:32] train/00149/eval_val/123 
I1203 12:19:24.827302 139746209720064 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 12:19:24.827394 139746209720064 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 12:19:24.827517 139746209720064 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 12:19:24.827611 139746209720064 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 12:19:24.827691 139746209720064 hlog.py:32] train/00149/eval_val/124/corr True
I1203 12:19:24.827777 139746209720064 hlog.py:32] train/00149/eval_val/124 
I1203 12:19:24.827848 139746209720064 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 12:19:24.827941 139746209720064 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 12:19:24.828039 139746209720064 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 12:19:24.828130 139746209720064 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 12:19:24.828207 139746209720064 hlog.py:32] train/00149/eval_val/125/corr True
I1203 12:19:24.828280 139746209720064 hlog.py:32] train/00149/eval_val/125 
I1203 12:19:24.828351 139746209720064 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 12:19:24.828442 139746209720064 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 12:19:24.828535 139746209720064 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.828623 139746209720064 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.828700 139746209720064 hlog.py:32] train/00149/eval_val/126/corr True
I1203 12:19:24.828772 139746209720064 hlog.py:32] train/00149/eval_val/126 
I1203 12:19:24.828843 139746209720064 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 12:19:24.828932 139746209720064 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 12:19:24.829025 139746209720064 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.829112 139746209720064 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.829189 139746209720064 hlog.py:32] train/00149/eval_val/127/corr False
I1203 12:19:24.829262 139746209720064 hlog.py:32] train/00149/eval_val/127 
I1203 12:19:24.829333 139746209720064 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 12:19:24.988063 139746209720064 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 12:19:24.988204 139746209720064 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.988303 139746209720064 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.988387 139746209720064 hlog.py:32] train/00149/eval_val/128/corr True
I1203 12:19:24.988463 139746209720064 hlog.py:32] train/00149/eval_val/128 
I1203 12:19:24.988538 139746209720064 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 12:19:24.988633 139746209720064 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 12:19:24.988728 139746209720064 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.988825 139746209720064 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.988905 139746209720064 hlog.py:32] train/00149/eval_val/129/corr True
I1203 12:19:24.988978 139746209720064 hlog.py:32] train/00149/eval_val/129 
I1203 12:19:24.989050 139746209720064 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 12:19:24.989142 139746209720064 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 12:19:24.989235 139746209720064 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.989323 139746209720064 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.989401 139746209720064 hlog.py:32] train/00149/eval_val/130/corr True
I1203 12:19:24.989473 139746209720064 hlog.py:32] train/00149/eval_val/130 
I1203 12:19:24.989544 139746209720064 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 12:19:24.989636 139746209720064 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 12:19:24.989728 139746209720064 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.989816 139746209720064 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.989894 139746209720064 hlog.py:32] train/00149/eval_val/131/corr True
I1203 12:19:24.989967 139746209720064 hlog.py:32] train/00149/eval_val/131 
I1203 12:19:24.990037 139746209720064 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 12:19:24.990123 139746209720064 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 12:19:24.990219 139746209720064 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 12:19:24.990306 139746209720064 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 12:19:24.990384 139746209720064 hlog.py:32] train/00149/eval_val/132/corr False
I1203 12:19:24.990457 139746209720064 hlog.py:32] train/00149/eval_val/132 
I1203 12:19:24.990528 139746209720064 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 12:19:24.990615 139746209720064 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 12:19:24.990713 139746209720064 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _state ( C ) , _loc ( D , A ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 12:19:24.990800 139746209720064 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 12:19:24.990878 139746209720064 hlog.py:32] train/00149/eval_val/133/corr False
I1203 12:19:24.990951 139746209720064 hlog.py:32] train/00149/eval_val/133 
I1203 12:19:24.991022 139746209720064 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 12:19:24.991110 139746209720064 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 12:19:24.991214 139746209720064 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.991308 139746209720064 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.991387 139746209720064 hlog.py:32] train/00149/eval_val/134/corr False
I1203 12:19:24.991484 139746209720064 hlog.py:32] train/00149/eval_val/134 
I1203 12:19:24.991558 139746209720064 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 12:19:24.991649 139746209720064 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 12:19:24.991769 139746209720064 hlog.py:32] train/00149/eval_val/135/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.991871 139746209720064 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 12:19:24.991950 139746209720064 hlog.py:32] train/00149/eval_val/135/corr False
I1203 12:19:24.992023 139746209720064 hlog.py:32] train/00149/eval_val/135 
I1203 12:19:24.992095 139746209720064 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 12:19:24.992187 139746209720064 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 12:19:24.992282 139746209720064 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.992372 139746209720064 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.992449 139746209720064 hlog.py:32] train/00149/eval_val/136/corr True
I1203 12:19:24.992522 139746209720064 hlog.py:32] train/00149/eval_val/136 
I1203 12:19:24.992593 139746209720064 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 12:19:24.992685 139746209720064 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 12:19:24.992781 139746209720064 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.992870 139746209720064 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.992948 139746209720064 hlog.py:32] train/00149/eval_val/137/corr True
I1203 12:19:24.993021 139746209720064 hlog.py:32] train/00149/eval_val/137 
I1203 12:19:24.993091 139746209720064 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 12:19:24.993182 139746209720064 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 12:19:24.993278 139746209720064 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.993367 139746209720064 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.993445 139746209720064 hlog.py:32] train/00149/eval_val/138/corr True
I1203 12:19:24.993518 139746209720064 hlog.py:32] train/00149/eval_val/138 
I1203 12:19:24.993588 139746209720064 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 12:19:24.993680 139746209720064 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 12:19:24.993776 139746209720064 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.993865 139746209720064 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 12:19:24.993943 139746209720064 hlog.py:32] train/00149/eval_val/139/corr True
I1203 12:19:24.994015 139746209720064 hlog.py:32] train/00149/eval_val/139 
I1203 12:19:24.994085 139746209720064 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 12:19:24.994180 139746209720064 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 12:19:24.994281 139746209720064 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 12:19:24.994374 139746209720064 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 12:19:24.994452 139746209720064 hlog.py:32] train/00149/eval_val/140/corr True
I1203 12:19:24.994524 139746209720064 hlog.py:32] train/00149/eval_val/140 
I1203 12:19:24.994595 139746209720064 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 12:19:24.994690 139746209720064 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 12:19:24.994797 139746209720064 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 12:19:24.994892 139746209720064 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 12:19:24.994970 139746209720064 hlog.py:32] train/00149/eval_val/141/corr True
I1203 12:19:24.995043 139746209720064 hlog.py:32] train/00149/eval_val/141 
I1203 12:19:24.995114 139746209720064 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 12:19:24.995200 139746209720064 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 12:19:24.995294 139746209720064 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 12:19:24.995382 139746209720064 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 12:19:24.995486 139746209720064 hlog.py:32] train/00149/eval_val/142/corr False
I1203 12:19:24.995561 139746209720064 hlog.py:32] train/00149/eval_val/142 
I1203 12:19:24.995635 139746209720064 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 12:19:24.995736 139746209720064 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 12:19:24.995831 139746209720064 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 12:19:24.995919 139746209720064 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 12:19:24.995997 139746209720064 hlog.py:32] train/00149/eval_val/143/corr False
I1203 12:19:24.996069 139746209720064 hlog.py:32] train/00149/eval_val/143 
I1203 12:19:24.996140 139746209720064 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 12:19:24.996227 139746209720064 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 12:19:24.996315 139746209720064 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 12:19:24.996403 139746209720064 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 12:19:24.996481 139746209720064 hlog.py:32] train/00149/eval_val/144/corr False
I1203 12:19:24.996553 139746209720064 hlog.py:32] train/00149/eval_val/144 
I1203 12:19:24.996624 139746209720064 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 12:19:24.996710 139746209720064 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 12:19:24.996805 139746209720064 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) )
I1203 12:19:24.996893 139746209720064 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 12:19:24.996971 139746209720064 hlog.py:32] train/00149/eval_val/145/corr False
I1203 12:19:24.997044 139746209720064 hlog.py:32] train/00149/eval_val/145 
I1203 12:19:24.997115 139746209720064 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 12:19:24.997205 139746209720064 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 12:19:24.997343 139746209720064 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _state ( A ) , _traverse ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _largest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) ) )
I1203 12:19:24.997442 139746209720064 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 12:19:24.997520 139746209720064 hlog.py:32] train/00149/eval_val/146/corr False
I1203 12:19:24.997593 139746209720064 hlog.py:32] train/00149/eval_val/146 
I1203 12:19:24.997672 139746209720064 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 12:19:24.997766 139746209720064 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 12:19:24.997865 139746209720064 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 12:19:24.997956 139746209720064 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 12:19:24.998034 139746209720064 hlog.py:32] train/00149/eval_val/147/corr True
I1203 12:19:24.998107 139746209720064 hlog.py:32] train/00149/eval_val/147 
I1203 12:19:24.998178 139746209720064 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 12:19:24.998257 139746209720064 hlog.py:32] train/00149/eval_val/acc 0.7838
I1203 12:19:25.028116 139746209720064 hlog.py:18] train/00149{15.63s}
I1203 12:19:25.030137 139746209720064 hlog.py:18] train{2443.85s}
