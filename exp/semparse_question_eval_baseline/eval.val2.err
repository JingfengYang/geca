I1203 07:31:54.507383 140333345224448 hlog.py:24] # --noTEST
I1203 07:31:54.507800 140333345224448 hlog.py:24] # --seed=2
I1203 07:31:54.507888 140333345224448 hlog.py:24] # --dataset=semparse
I1203 07:31:54.507968 140333345224448 hlog.py:24] # --model_dir=model
I1203 07:31:54.508044 140333345224448 hlog.py:24] # --n_checkpoint=10
I1203 07:31:54.508119 140333345224448 hlog.py:24] # --nologtostderr
I1203 07:31:54.508192 140333345224448 hlog.py:24] # --noalsologtostderr
I1203 07:31:54.508265 140333345224448 hlog.py:24] # --log_dir=
I1203 07:31:54.508337 140333345224448 hlog.py:24] # --verbosity=0
I1203 07:31:54.508409 140333345224448 hlog.py:24] # --verbosity=0
I1203 07:31:54.508481 140333345224448 hlog.py:24] # --stderrthreshold=fatal
I1203 07:31:54.508553 140333345224448 hlog.py:24] # --showprefixforinfo
I1203 07:31:54.508624 140333345224448 hlog.py:24] # --nodedup
I1203 07:31:54.508696 140333345224448 hlog.py:24] # --nobuild_comp_table
I1203 07:31:54.508768 140333345224448 hlog.py:24] # --semparse_split=query
I1203 07:31:54.508839 140333345224448 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 07:31:54.508911 140333345224448 hlog.py:24] # --semparse_mrl=logic
I1203 07:31:54.508983 140333345224448 hlog.py:24] # --val_fold=8
I1203 07:31:54.509054 140333345224448 hlog.py:24] # --test_fold=9
I1203 07:31:54.509125 140333345224448 hlog.py:24] # --n_emb=64
I1203 07:31:54.509196 140333345224448 hlog.py:24] # --n_enc=512
I1203 07:31:54.509268 140333345224448 hlog.py:24] # --dropout=0.5
I1203 07:31:54.509339 140333345224448 hlog.py:24] # --copy_sup
I1203 07:31:54.509411 140333345224448 hlog.py:24] # --n_epochs=150
I1203 07:31:54.509482 140333345224448 hlog.py:24] # --n_epoch_batches=32
I1203 07:31:54.509553 140333345224448 hlog.py:24] # --n_batch=64
I1203 07:31:54.509625 140333345224448 hlog.py:24] # --lr=0.001
I1203 07:31:54.509696 140333345224448 hlog.py:24] # --clip=1.0
I1203 07:31:54.509767 140333345224448 hlog.py:24] # --sched_factor=0.5
I1203 07:31:54.509839 140333345224448 hlog.py:24] # --norun_with_pdb
I1203 07:31:54.509910 140333345224448 hlog.py:24] # --nopdb_post_mortem
I1203 07:31:54.509982 140333345224448 hlog.py:24] # --norun_with_profiling
I1203 07:31:54.510053 140333345224448 hlog.py:24] # --use_cprofile_for_profiling
I1203 07:31:54.510125 140333345224448 hlog.py:24] # --noonly_check_args
I1203 07:31:54.510196 140333345224448 hlog.py:24] # --augment=composed.val2.json
I1203 07:31:54.510267 140333345224448 hlog.py:24] # --aug_ratio=0.3
I1203 07:31:54.510339 140333345224448 hlog.py:24] # --noinvert
I1203 07:31:54.510410 140333345224448 hlog.py:24] # --nohelp
I1203 07:31:54.510482 140333345224448 hlog.py:24] # --nohelp
I1203 07:31:54.510553 140333345224448 hlog.py:24] # --nohelpshort
I1203 07:31:54.510625 140333345224448 hlog.py:24] # --nohelpfull
I1203 07:31:54.510696 140333345224448 hlog.py:24] # --nohelpxml
I1203 07:31:54.510767 140333345224448 hlog.py:24] # 
I1203 07:31:54.553906 140333345224448 hlog.py:32] train 543
I1203 07:31:54.554156 140333345224448 hlog.py:32] aug 1000
I1203 07:32:09.744705 140333345224448 hlog.py:32] train/00000/loss 3.2355
I1203 07:32:21.842613 140333345224448 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 07:32:23.837384 140333345224448 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 07:32:23.838113 140333345224448 hlog.py:18] train/00000{25.53s}
I1203 07:32:35.958924 140333345224448 hlog.py:32] train/00001/loss 1.1267
I1203 07:32:39.824437 140333345224448 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 07:32:40.538910 140333345224448 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 07:32:40.539392 140333345224448 hlog.py:18] train/00001{16.70s}
I1203 07:32:52.805306 140333345224448 hlog.py:32] train/00002/loss 0.7078
I1203 07:32:55.252702 140333345224448 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 07:32:55.648934 140333345224448 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 07:32:55.649429 140333345224448 hlog.py:18] train/00002{15.11s}
I1203 07:33:07.468455 140333345224448 hlog.py:32] train/00003/loss 0.5331
I1203 07:33:10.092724 140333345224448 hlog.py:32] train/00003/eval_train/acc 0.0920
I1203 07:33:10.559777 140333345224448 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 07:33:10.560238 140333345224448 hlog.py:18] train/00003{14.91s}
I1203 07:33:22.141254 140333345224448 hlog.py:32] train/00004/loss 0.4526
I1203 07:33:25.234777 140333345224448 hlog.py:32] train/00004/eval_train/acc 0.1310
I1203 07:33:25.720468 140333345224448 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 07:33:25.720937 140333345224448 hlog.py:18] train/00004{15.16s}
I1203 07:33:37.074860 140333345224448 hlog.py:32] train/00005/loss 0.3980
I1203 07:33:41.748569 140333345224448 hlog.py:32] train/00005/eval_train/acc 0.1140
I1203 07:33:42.512364 140333345224448 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 07:33:42.512892 140333345224448 hlog.py:18] train/00005{16.79s}
I1203 07:33:53.920309 140333345224448 hlog.py:32] train/00006/loss 0.3514
I1203 07:33:57.114847 140333345224448 hlog.py:32] train/00006/eval_train/acc 0.1460
I1203 07:33:57.630104 140333345224448 hlog.py:32] train/00006/eval_val/acc 0.0000
I1203 07:33:57.630645 140333345224448 hlog.py:18] train/00006{15.12s}
I1203 07:34:09.537588 140333345224448 hlog.py:32] train/00007/loss 0.3098
I1203 07:34:15.137349 140333345224448 hlog.py:32] train/00007/eval_train/acc 0.2360
I1203 07:34:15.990756 140333345224448 hlog.py:32] train/00007/eval_val/acc 0.0068
I1203 07:34:15.991297 140333345224448 hlog.py:18] train/00007{18.36s}
I1203 07:34:26.991848 140333345224448 hlog.py:32] train/00008/loss 0.2739
I1203 07:34:32.060742 140333345224448 hlog.py:32] train/00008/eval_train/acc 0.2950
I1203 07:34:32.877922 140333345224448 hlog.py:32] train/00008/eval_val/acc 0.0338
I1203 07:34:32.878461 140333345224448 hlog.py:18] train/00008{16.89s}
I1203 07:34:44.376616 140333345224448 hlog.py:32] train/00009/loss 0.2227
I1203 07:34:48.039347 140333345224448 hlog.py:32] train/00009/eval_train/acc 0.3090
I1203 07:34:48.596474 140333345224448 hlog.py:32] train/00009/eval_val/acc 0.1081
I1203 07:34:48.708590 140333345224448 hlog.py:18] train/00009{15.83s}
I1203 07:35:00.525150 140333345224448 hlog.py:32] train/00010/loss 0.1942
I1203 07:35:04.014368 140333345224448 hlog.py:32] train/00010/eval_train/acc 0.4360
I1203 07:35:04.781283 140333345224448 hlog.py:32] train/00010/eval_val/acc 0.2703
I1203 07:35:04.781794 140333345224448 hlog.py:18] train/00010{16.07s}
I1203 07:35:16.297986 140333345224448 hlog.py:32] train/00011/loss 0.1824
I1203 07:35:21.477046 140333345224448 hlog.py:32] train/00011/eval_train/acc 0.5040
I1203 07:35:22.238648 140333345224448 hlog.py:32] train/00011/eval_val/acc 0.2770
I1203 07:35:22.239127 140333345224448 hlog.py:18] train/00011{17.46s}
I1203 07:35:33.756036 140333345224448 hlog.py:32] train/00012/loss 0.1733
I1203 07:35:37.853712 140333345224448 hlog.py:32] train/00012/eval_train/acc 0.5510
I1203 07:35:38.396034 140333345224448 hlog.py:32] train/00012/eval_val/acc 0.2905
I1203 07:35:38.396543 140333345224448 hlog.py:18] train/00012{16.16s}
I1203 07:35:50.679889 140333345224448 hlog.py:32] train/00013/loss 0.2034
I1203 07:35:55.130875 140333345224448 hlog.py:32] train/00013/eval_train/acc 0.4740
I1203 07:35:55.694344 140333345224448 hlog.py:32] train/00013/eval_val/acc 0.1757
I1203 07:35:55.694862 140333345224448 hlog.py:18] train/00013{17.30s}
I1203 07:36:07.134520 140333345224448 hlog.py:32] train/00014/loss 0.1499
I1203 07:36:11.250552 140333345224448 hlog.py:32] train/00014/eval_train/acc 0.5390
I1203 07:36:11.804455 140333345224448 hlog.py:32] train/00014/eval_val/acc 0.3108
I1203 07:36:11.805037 140333345224448 hlog.py:18] train/00014{16.11s}
I1203 07:36:23.606687 140333345224448 hlog.py:32] train/00015/loss 0.1466
I1203 07:36:27.516476 140333345224448 hlog.py:32] train/00015/eval_train/acc 0.5640
I1203 07:36:28.181253 140333345224448 hlog.py:32] train/00015/eval_val/acc 0.3108
I1203 07:36:28.181772 140333345224448 hlog.py:18] train/00015{16.38s}
I1203 07:36:39.238387 140333345224448 hlog.py:32] train/00016/loss 0.1299
I1203 07:36:43.015578 140333345224448 hlog.py:32] train/00016/eval_train/acc 0.5850
I1203 07:36:43.572456 140333345224448 hlog.py:32] train/00016/eval_val/acc 0.3581
I1203 07:36:43.572959 140333345224448 hlog.py:18] train/00016{15.39s}
I1203 07:36:54.923038 140333345224448 hlog.py:32] train/00017/loss 0.1268
I1203 07:36:59.085516 140333345224448 hlog.py:32] train/00017/eval_train/acc 0.6260
I1203 07:36:59.667539 140333345224448 hlog.py:32] train/00017/eval_val/acc 0.3041
I1203 07:36:59.668038 140333345224448 hlog.py:18] train/00017{16.09s}
I1203 07:37:11.325406 140333345224448 hlog.py:32] train/00018/loss 0.1038
I1203 07:37:15.238530 140333345224448 hlog.py:32] train/00018/eval_train/acc 0.6600
I1203 07:37:15.866306 140333345224448 hlog.py:32] train/00018/eval_val/acc 0.4392
I1203 07:37:15.866803 140333345224448 hlog.py:18] train/00018{16.20s}
I1203 07:37:26.867369 140333345224448 hlog.py:32] train/00019/loss 0.0972
I1203 07:37:30.629482 140333345224448 hlog.py:32] train/00019/eval_train/acc 0.7450
I1203 07:37:31.223396 140333345224448 hlog.py:32] train/00019/eval_val/acc 0.4189
I1203 07:37:31.281141 140333345224448 hlog.py:18] train/00019{15.41s}
I1203 07:37:42.645246 140333345224448 hlog.py:32] train/00020/loss 0.0944
I1203 07:37:47.201663 140333345224448 hlog.py:32] train/00020/eval_train/acc 0.7080
I1203 07:37:47.837356 140333345224448 hlog.py:32] train/00020/eval_val/acc 0.4527
I1203 07:37:47.838192 140333345224448 hlog.py:18] train/00020{16.56s}
I1203 07:37:59.876965 140333345224448 hlog.py:32] train/00021/loss 0.0990
I1203 07:38:03.564969 140333345224448 hlog.py:32] train/00021/eval_train/acc 0.7230
I1203 07:38:04.174318 140333345224448 hlog.py:32] train/00021/eval_val/acc 0.3919
I1203 07:38:04.174813 140333345224448 hlog.py:18] train/00021{16.34s}
I1203 07:38:16.417227 140333345224448 hlog.py:32] train/00022/loss 0.0956
I1203 07:38:20.642771 140333345224448 hlog.py:32] train/00022/eval_train/acc 0.7260
I1203 07:38:21.245238 140333345224448 hlog.py:32] train/00022/eval_val/acc 0.4662
I1203 07:38:21.245801 140333345224448 hlog.py:18] train/00022{17.07s}
I1203 07:38:32.934765 140333345224448 hlog.py:32] train/00023/loss 0.0749
I1203 07:38:36.750949 140333345224448 hlog.py:32] train/00023/eval_train/acc 0.7910
I1203 07:38:37.337901 140333345224448 hlog.py:32] train/00023/eval_val/acc 0.4932
I1203 07:38:37.338622 140333345224448 hlog.py:18] train/00023{16.09s}
I1203 07:38:49.447487 140333345224448 hlog.py:32] train/00024/loss 0.0805
I1203 07:38:53.863080 140333345224448 hlog.py:32] train/00024/eval_train/acc 0.7670
I1203 07:38:54.450550 140333345224448 hlog.py:32] train/00024/eval_val/acc 0.4865
I1203 07:38:54.450996 140333345224448 hlog.py:18] train/00024{17.11s}
I1203 07:39:07.376281 140333345224448 hlog.py:32] train/00025/loss 0.0693
I1203 07:39:10.999244 140333345224448 hlog.py:32] train/00025/eval_train/acc 0.8210
I1203 07:39:11.630145 140333345224448 hlog.py:32] train/00025/eval_val/acc 0.4730
I1203 07:39:11.630627 140333345224448 hlog.py:18] train/00025{17.18s}
I1203 07:39:23.435935 140333345224448 hlog.py:32] train/00026/loss 0.0627
I1203 07:39:27.111353 140333345224448 hlog.py:32] train/00026/eval_train/acc 0.8050
I1203 07:39:27.677541 140333345224448 hlog.py:32] train/00026/eval_val/acc 0.4257
I1203 07:39:27.678011 140333345224448 hlog.py:18] train/00026{16.05s}
I1203 07:39:39.544149 140333345224448 hlog.py:32] train/00027/loss 0.0542
I1203 07:39:43.158176 140333345224448 hlog.py:32] train/00027/eval_train/acc 0.8310
I1203 07:39:43.733274 140333345224448 hlog.py:32] train/00027/eval_val/acc 0.5203
I1203 07:39:43.733751 140333345224448 hlog.py:18] train/00027{16.06s}
I1203 07:39:56.289396 140333345224448 hlog.py:32] train/00028/loss 0.0450
I1203 07:40:00.100571 140333345224448 hlog.py:32] train/00028/eval_train/acc 0.8690
I1203 07:40:00.690597 140333345224448 hlog.py:32] train/00028/eval_val/acc 0.5878
I1203 07:40:00.691223 140333345224448 hlog.py:18] train/00028{16.96s}
I1203 07:40:12.003961 140333345224448 hlog.py:32] train/00029/loss 0.0402
I1203 07:40:15.695137 140333345224448 hlog.py:32] train/00029/eval_train/acc 0.8800
I1203 07:40:16.278467 140333345224448 hlog.py:32] train/00029/eval_val/acc 0.5878
I1203 07:40:16.438243 140333345224448 hlog.py:18] train/00029{15.75s}
I1203 07:40:28.327765 140333345224448 hlog.py:32] train/00030/loss 0.0511
I1203 07:40:32.474907 140333345224448 hlog.py:32] train/00030/eval_train/acc 0.8440
I1203 07:40:33.063445 140333345224448 hlog.py:32] train/00030/eval_val/acc 0.5135
I1203 07:40:33.064099 140333345224448 hlog.py:18] train/00030{16.63s}
I1203 07:40:45.668246 140333345224448 hlog.py:32] train/00031/loss 0.0556
I1203 07:40:49.557933 140333345224448 hlog.py:32] train/00031/eval_train/acc 0.8470
I1203 07:40:50.105744 140333345224448 hlog.py:32] train/00031/eval_val/acc 0.5203
I1203 07:40:50.106210 140333345224448 hlog.py:18] train/00031{17.04s}
I1203 07:41:01.292620 140333345224448 hlog.py:32] train/00032/loss 0.0643
I1203 07:41:05.070663 140333345224448 hlog.py:32] train/00032/eval_train/acc 0.8740
I1203 07:41:05.655294 140333345224448 hlog.py:32] train/00032/eval_val/acc 0.5270
I1203 07:41:05.655954 140333345224448 hlog.py:18] train/00032{15.55s}
I1203 07:41:18.088978 140333345224448 hlog.py:32] train/00033/loss 0.0543
I1203 07:41:21.738977 140333345224448 hlog.py:32] train/00033/eval_train/acc 0.8320
I1203 07:41:22.306598 140333345224448 hlog.py:32] train/00033/eval_val/acc 0.5811
I1203 07:41:22.307104 140333345224448 hlog.py:18] train/00033{16.65s}
I1203 07:41:35.192287 140333345224448 hlog.py:32] train/00034/loss 0.0510
I1203 07:41:39.022504 140333345224448 hlog.py:32] train/00034/eval_train/acc 0.8850
I1203 07:41:39.594109 140333345224448 hlog.py:32] train/00034/eval_val/acc 0.5811
I1203 07:41:39.594720 140333345224448 hlog.py:18] train/00034{17.29s}
I1203 07:41:51.984218 140333345224448 hlog.py:32] train/00035/loss 0.0676
I1203 07:41:55.895463 140333345224448 hlog.py:32] train/00035/eval_train/acc 0.8560
I1203 07:41:56.481129 140333345224448 hlog.py:32] train/00035/eval_val/acc 0.5203
I1203 07:41:56.481803 140333345224448 hlog.py:18] train/00035{16.89s}
I1203 07:42:08.128354 140333345224448 hlog.py:32] train/00036/loss 0.0855
I1203 07:42:12.525008 140333345224448 hlog.py:32] train/00036/eval_train/acc 0.8390
I1203 07:42:13.090321 140333345224448 hlog.py:32] train/00036/eval_val/acc 0.5473
I1203 07:42:13.090745 140333345224448 hlog.py:18] train/00036{16.61s}
I1203 07:42:25.939126 140333345224448 hlog.py:32] train/00037/loss 0.0690
I1203 07:42:31.644204 140333345224448 hlog.py:32] train/00037/eval_train/acc 0.8410
I1203 07:42:32.228983 140333345224448 hlog.py:32] train/00037/eval_val/acc 0.5541
I1203 07:42:32.229514 140333345224448 hlog.py:18] train/00037{19.14s}
I1203 07:42:43.647345 140333345224448 hlog.py:32] train/00038/loss 0.0503
I1203 07:42:47.581274 140333345224448 hlog.py:32] train/00038/eval_train/acc 0.8740
I1203 07:42:48.171541 140333345224448 hlog.py:32] train/00038/eval_val/acc 0.5676
I1203 07:42:48.172230 140333345224448 hlog.py:18] train/00038{15.94s}
I1203 07:42:59.737743 140333345224448 hlog.py:32] train/00039/loss 0.0552
I1203 07:43:03.985697 140333345224448 hlog.py:32] train/00039/eval_train/acc 0.8980
I1203 07:43:04.598033 140333345224448 hlog.py:32] train/00039/eval_val/acc 0.5405
I1203 07:43:04.630486 140333345224448 hlog.py:18] train/00039{16.46s}
I1203 07:43:16.088978 140333345224448 hlog.py:32] train/00040/loss 0.0394
I1203 07:43:19.833495 140333345224448 hlog.py:32] train/00040/eval_train/acc 0.9460
I1203 07:43:20.417168 140333345224448 hlog.py:32] train/00040/eval_val/acc 0.5473
I1203 07:43:20.417745 140333345224448 hlog.py:18] train/00040{15.79s}
I1203 07:43:32.213814 140333345224448 hlog.py:32] train/00041/loss 0.0323
I1203 07:43:36.643177 140333345224448 hlog.py:32] train/00041/eval_train/acc 0.9430
I1203 07:43:37.206818 140333345224448 hlog.py:32] train/00041/eval_val/acc 0.6014
I1203 07:43:37.207315 140333345224448 hlog.py:18] train/00041{16.79s}
I1203 07:43:48.831092 140333345224448 hlog.py:32] train/00042/loss 0.0294
I1203 07:43:52.711052 140333345224448 hlog.py:32] train/00042/eval_train/acc 0.9230
I1203 07:43:53.321488 140333345224448 hlog.py:32] train/00042/eval_val/acc 0.6081
I1203 07:43:53.322042 140333345224448 hlog.py:18] train/00042{16.11s}
I1203 07:44:06.169221 140333345224448 hlog.py:32] train/00043/loss 0.0272
I1203 07:44:10.221801 140333345224448 hlog.py:32] train/00043/eval_train/acc 0.9420
I1203 07:44:10.794887 140333345224448 hlog.py:32] train/00043/eval_val/acc 0.5878
I1203 07:44:10.795381 140333345224448 hlog.py:18] train/00043{17.47s}
I1203 07:44:23.153171 140333345224448 hlog.py:32] train/00044/loss 0.0252
I1203 07:44:26.982275 140333345224448 hlog.py:32] train/00044/eval_train/acc 0.9540
I1203 07:44:27.521135 140333345224448 hlog.py:32] train/00044/eval_val/acc 0.5743
I1203 07:44:27.521599 140333345224448 hlog.py:18] train/00044{16.72s}
I1203 07:44:39.024292 140333345224448 hlog.py:32] train/00045/loss 0.0231
I1203 07:44:42.895834 140333345224448 hlog.py:32] train/00045/eval_train/acc 0.9700
I1203 07:44:43.468771 140333345224448 hlog.py:32] train/00045/eval_val/acc 0.6284
I1203 07:44:43.469228 140333345224448 hlog.py:18] train/00045{15.95s}
I1203 07:44:55.247374 140333345224448 hlog.py:32] train/00046/loss 0.0197
I1203 07:44:59.601070 140333345224448 hlog.py:32] train/00046/eval_train/acc 0.9690
I1203 07:45:00.210960 140333345224448 hlog.py:32] train/00046/eval_val/acc 0.6284
I1203 07:45:00.211465 140333345224448 hlog.py:18] train/00046{16.74s}
I1203 07:45:11.235100 140333345224448 hlog.py:32] train/00047/loss 0.0184
I1203 07:45:15.309669 140333345224448 hlog.py:32] train/00047/eval_train/acc 0.9850
I1203 07:45:15.874658 140333345224448 hlog.py:32] train/00047/eval_val/acc 0.6419
I1203 07:45:15.875069 140333345224448 hlog.py:18] train/00047{15.66s}
I1203 07:45:27.824234 140333345224448 hlog.py:32] train/00048/loss 0.0166
I1203 07:45:31.627097 140333345224448 hlog.py:32] train/00048/eval_train/acc 0.9690
I1203 07:45:32.228486 140333345224448 hlog.py:32] train/00048/eval_val/acc 0.6216
I1203 07:45:32.228986 140333345224448 hlog.py:18] train/00048{16.35s}
I1203 07:45:43.258101 140333345224448 hlog.py:32] train/00049/loss 0.0165
I1203 07:45:47.582294 140333345224448 hlog.py:32] train/00049/eval_train/acc 0.9700
I1203 07:45:48.177581 140333345224448 hlog.py:32] train/00049/eval_val/acc 0.5811
I1203 07:45:48.209605 140333345224448 hlog.py:18] train/00049{15.98s}
I1203 07:45:59.831088 140333345224448 hlog.py:32] train/00050/loss 0.0163
I1203 07:46:03.652896 140333345224448 hlog.py:32] train/00050/eval_train/acc 0.9820
I1203 07:46:04.215569 140333345224448 hlog.py:32] train/00050/eval_val/acc 0.6149
I1203 07:46:04.216076 140333345224448 hlog.py:18] train/00050{16.01s}
I1203 07:46:15.317712 140333345224448 hlog.py:32] train/00051/loss 0.0144
I1203 07:46:19.639077 140333345224448 hlog.py:32] train/00051/eval_train/acc 0.9790
I1203 07:46:20.233494 140333345224448 hlog.py:32] train/00051/eval_val/acc 0.6149
I1203 07:46:20.233968 140333345224448 hlog.py:18] train/00051{16.02s}
I1203 07:46:32.718400 140333345224448 hlog.py:32] train/00052/loss 0.0151
I1203 07:46:36.425205 140333345224448 hlog.py:32] train/00052/eval_train/acc 0.9870
I1203 07:46:37.018369 140333345224448 hlog.py:32] train/00052/eval_val/acc 0.5878
I1203 07:46:37.018855 140333345224448 hlog.py:18] train/00052{16.78s}
I1203 07:46:47.880388 140333345224448 hlog.py:32] train/00053/loss 0.0122
I1203 07:46:51.700326 140333345224448 hlog.py:32] train/00053/eval_train/acc 0.9840
I1203 07:46:52.274478 140333345224448 hlog.py:32] train/00053/eval_val/acc 0.6419
I1203 07:46:52.274963 140333345224448 hlog.py:18] train/00053{15.26s}
I1203 07:47:04.355661 140333345224448 hlog.py:32] train/00054/loss 0.0132
I1203 07:47:07.999816 140333345224448 hlog.py:32] train/00054/eval_train/acc 0.9900
I1203 07:47:08.573424 140333345224448 hlog.py:32] train/00054/eval_val/acc 0.6284
I1203 07:47:08.573880 140333345224448 hlog.py:18] train/00054{16.30s}
I1203 07:47:19.726627 140333345224448 hlog.py:32] train/00055/loss 0.0118
I1203 07:47:23.930608 140333345224448 hlog.py:32] train/00055/eval_train/acc 0.9830
I1203 07:47:24.516477 140333345224448 hlog.py:32] train/00055/eval_val/acc 0.6486
I1203 07:47:24.516969 140333345224448 hlog.py:18] train/00055{15.94s}
I1203 07:47:35.881119 140333345224448 hlog.py:32] train/00056/loss 0.0125
I1203 07:47:40.063266 140333345224448 hlog.py:32] train/00056/eval_train/acc 0.9930
I1203 07:47:40.673418 140333345224448 hlog.py:32] train/00056/eval_val/acc 0.6284
I1203 07:47:40.674165 140333345224448 hlog.py:18] train/00056{16.16s}
I1203 07:47:52.799545 140333345224448 hlog.py:32] train/00057/loss 0.0132
I1203 07:47:57.222330 140333345224448 hlog.py:32] train/00057/eval_train/acc 0.9850
I1203 07:47:57.799488 140333345224448 hlog.py:32] train/00057/eval_val/acc 0.6351
I1203 07:47:57.799983 140333345224448 hlog.py:18] train/00057{17.13s}
I1203 07:48:09.525471 140333345224448 hlog.py:32] train/00058/loss 0.0115
I1203 07:48:13.545188 140333345224448 hlog.py:32] train/00058/eval_train/acc 0.9890
I1203 07:48:14.154875 140333345224448 hlog.py:32] train/00058/eval_val/acc 0.6284
I1203 07:48:14.155311 140333345224448 hlog.py:18] train/00058{16.36s}
I1203 07:48:25.400547 140333345224448 hlog.py:32] train/00059/loss 0.0112
I1203 07:48:29.553576 140333345224448 hlog.py:32] train/00059/eval_train/acc 0.9880
I1203 07:48:30.125650 140333345224448 hlog.py:32] train/00059/eval_val/acc 0.6216
I1203 07:48:30.283117 140333345224448 hlog.py:18] train/00059{16.13s}
I1203 07:48:42.225960 140333345224448 hlog.py:32] train/00060/loss 0.0125
I1203 07:48:46.284123 140333345224448 hlog.py:32] train/00060/eval_train/acc 0.9900
I1203 07:48:46.865028 140333345224448 hlog.py:32] train/00060/eval_val/acc 0.6351
I1203 07:48:46.865510 140333345224448 hlog.py:18] train/00060{16.58s}
I1203 07:48:59.107935 140333345224448 hlog.py:32] train/00061/loss 0.0126
I1203 07:49:03.432255 140333345224448 hlog.py:32] train/00061/eval_train/acc 0.9830
I1203 07:49:04.027478 140333345224448 hlog.py:32] train/00061/eval_val/acc 0.6216
I1203 07:49:04.027997 140333345224448 hlog.py:18] train/00061{17.16s}
I1203 07:49:15.111356 140333345224448 hlog.py:32] train/00062/loss 0.0099
I1203 07:49:18.834719 140333345224448 hlog.py:32] train/00062/eval_train/acc 0.9980
I1203 07:49:19.401465 140333345224448 hlog.py:32] train/00062/eval_val/acc 0.6419
I1203 07:49:19.401946 140333345224448 hlog.py:18] train/00062{15.37s}
I1203 07:49:31.643209 140333345224448 hlog.py:32] train/00063/loss 0.0114
I1203 07:49:35.395096 140333345224448 hlog.py:32] train/00063/eval_train/acc 0.9910
I1203 07:49:35.943113 140333345224448 hlog.py:32] train/00063/eval_val/acc 0.6757
I1203 07:49:35.943602 140333345224448 hlog.py:18] train/00063{16.54s}
I1203 07:49:47.780645 140333345224448 hlog.py:32] train/00064/loss 0.0105
I1203 07:49:51.989669 140333345224448 hlog.py:32] train/00064/eval_train/acc 0.9970
I1203 07:49:52.594411 140333345224448 hlog.py:32] train/00064/eval_val/acc 0.6149
I1203 07:49:52.595119 140333345224448 hlog.py:18] train/00064{16.65s}
I1203 07:50:03.867900 140333345224448 hlog.py:32] train/00065/loss 0.0099
I1203 07:50:07.837768 140333345224448 hlog.py:32] train/00065/eval_train/acc 0.9940
I1203 07:50:08.424606 140333345224448 hlog.py:32] train/00065/eval_val/acc 0.6216
I1203 07:50:08.425082 140333345224448 hlog.py:18] train/00065{15.83s}
I1203 07:50:19.680545 140333345224448 hlog.py:32] train/00066/loss 0.0092
I1203 07:50:23.672263 140333345224448 hlog.py:32] train/00066/eval_train/acc 0.9930
I1203 07:50:24.270382 140333345224448 hlog.py:32] train/00066/eval_val/acc 0.6351
I1203 07:50:24.271118 140333345224448 hlog.py:18] train/00066{15.85s}
I1203 07:50:35.929171 140333345224448 hlog.py:32] train/00067/loss 0.0116
I1203 07:50:39.951366 140333345224448 hlog.py:32] train/00067/eval_train/acc 0.9960
I1203 07:50:40.530490 140333345224448 hlog.py:32] train/00067/eval_val/acc 0.6216
I1203 07:50:40.530917 140333345224448 hlog.py:18] train/00067{16.26s}
I1203 07:50:52.529807 140333345224448 hlog.py:32] train/00068/loss 0.0100
I1203 07:50:56.300653 140333345224448 hlog.py:32] train/00068/eval_train/acc 0.9970
I1203 07:50:56.876661 140333345224448 hlog.py:32] train/00068/eval_val/acc 0.6554
I1203 07:50:56.877252 140333345224448 hlog.py:18] train/00068{16.35s}
I1203 07:51:09.144636 140333345224448 hlog.py:32] train/00069/loss 0.0103
I1203 07:51:12.862117 140333345224448 hlog.py:32] train/00069/eval_train/acc 0.9880
I1203 07:51:13.449751 140333345224448 hlog.py:32] train/00069/eval_val/acc 0.6554
I1203 07:51:13.606045 140333345224448 hlog.py:18] train/00069{16.73s}
I1203 07:51:25.334270 140333345224448 hlog.py:32] train/00070/loss 0.0087
I1203 07:51:29.145030 140333345224448 hlog.py:32] train/00070/eval_train/acc 0.9850
I1203 07:51:29.799509 140333345224448 hlog.py:32] train/00070/eval_val/acc 0.6216
I1203 07:51:29.800096 140333345224448 hlog.py:18] train/00070{16.19s}
I1203 07:51:41.477646 140333345224448 hlog.py:32] train/00071/loss 0.0101
I1203 07:51:45.438824 140333345224448 hlog.py:32] train/00071/eval_train/acc 0.9980
I1203 07:51:46.014844 140333345224448 hlog.py:32] train/00071/eval_val/acc 0.6284
I1203 07:51:46.015399 140333345224448 hlog.py:18] train/00071{16.22s}
I1203 07:51:57.066379 140333345224448 hlog.py:32] train/00072/loss 0.0089
I1203 07:52:01.313586 140333345224448 hlog.py:32] train/00072/eval_train/acc 0.9880
I1203 07:52:01.893719 140333345224448 hlog.py:32] train/00072/eval_val/acc 0.6284
I1203 07:52:01.894228 140333345224448 hlog.py:18] train/00072{15.88s}
I1203 07:52:13.978939 140333345224448 hlog.py:32] train/00073/loss 0.0088
I1203 07:52:18.079510 140333345224448 hlog.py:32] train/00073/eval_train/acc 0.9800
I1203 07:52:18.661848 140333345224448 hlog.py:32] train/00073/eval_val/acc 0.6149
I1203 07:52:18.662372 140333345224448 hlog.py:18] train/00073{16.77s}
I1203 07:52:29.619794 140333345224448 hlog.py:32] train/00074/loss 0.0094
I1203 07:52:33.582595 140333345224448 hlog.py:32] train/00074/eval_train/acc 0.9840
I1203 07:52:34.171591 140333345224448 hlog.py:32] train/00074/eval_val/acc 0.6216
I1203 07:52:34.172114 140333345224448 hlog.py:18] train/00074{15.51s}
I1203 07:52:45.705252 140333345224448 hlog.py:32] train/00075/loss 0.0083
I1203 07:52:49.550102 140333345224448 hlog.py:32] train/00075/eval_train/acc 1.0000
I1203 07:52:50.147644 140333345224448 hlog.py:32] train/00075/eval_val/acc 0.6351
I1203 07:52:50.148241 140333345224448 hlog.py:18] train/00075{15.98s}
I1203 07:53:01.672597 140333345224448 hlog.py:32] train/00076/loss 0.0152
I1203 07:53:05.763046 140333345224448 hlog.py:32] train/00076/eval_train/acc 0.9900
I1203 07:53:06.331622 140333345224448 hlog.py:32] train/00076/eval_val/acc 0.6419
I1203 07:53:06.332134 140333345224448 hlog.py:18] train/00076{16.18s}
I1203 07:53:18.801651 140333345224448 hlog.py:32] train/00077/loss 0.0101
I1203 07:53:22.544623 140333345224448 hlog.py:32] train/00077/eval_train/acc 0.9980
I1203 07:53:23.110138 140333345224448 hlog.py:32] train/00077/eval_val/acc 0.6689
I1203 07:53:23.110877 140333345224448 hlog.py:18] train/00077{16.78s}
I1203 07:53:35.443046 140333345224448 hlog.py:32] train/00078/loss 0.0079
I1203 07:53:39.386223 140333345224448 hlog.py:32] train/00078/eval_train/acc 0.9990
I1203 07:53:39.955774 140333345224448 hlog.py:32] train/00078/eval_val/acc 0.6419
I1203 07:53:39.956275 140333345224448 hlog.py:18] train/00078{16.85s}
I1203 07:53:52.141469 140333345224448 hlog.py:32] train/00079/loss 0.0074
I1203 07:53:56.239987 140333345224448 hlog.py:32] train/00079/eval_train/acc 0.9980
I1203 07:53:56.816018 140333345224448 hlog.py:32] train/00079/eval_val/acc 0.6554
I1203 07:53:56.866514 140333345224448 hlog.py:18] train/00079{16.91s}
I1203 07:54:08.898403 140333345224448 hlog.py:32] train/00080/loss 0.0071
I1203 07:54:12.606795 140333345224448 hlog.py:32] train/00080/eval_train/acc 0.9980
I1203 07:54:13.169693 140333345224448 hlog.py:32] train/00080/eval_val/acc 0.6486
I1203 07:54:13.170161 140333345224448 hlog.py:18] train/00080{16.30s}
I1203 07:54:25.049549 140333345224448 hlog.py:32] train/00081/loss 0.0057
I1203 07:54:29.164820 140333345224448 hlog.py:32] train/00081/eval_train/acc 0.9990
I1203 07:54:29.752810 140333345224448 hlog.py:32] train/00081/eval_val/acc 0.6419
I1203 07:54:29.753296 140333345224448 hlog.py:18] train/00081{16.58s}
I1203 07:54:41.088437 140333345224448 hlog.py:32] train/00082/loss 0.0051
I1203 07:54:44.967653 140333345224448 hlog.py:32] train/00082/eval_train/acc 0.9950
I1203 07:54:45.555804 140333345224448 hlog.py:32] train/00082/eval_val/acc 0.6554
I1203 07:54:45.556289 140333345224448 hlog.py:18] train/00082{15.80s}
I1203 07:54:57.190805 140333345224448 hlog.py:32] train/00083/loss 0.0057
I1203 07:55:01.269838 140333345224448 hlog.py:32] train/00083/eval_train/acc 0.9970
I1203 07:55:01.839058 140333345224448 hlog.py:32] train/00083/eval_val/acc 0.6486
I1203 07:55:01.839757 140333345224448 hlog.py:18] train/00083{16.28s}
I1203 07:55:13.040738 140333345224448 hlog.py:32] train/00084/loss 0.0059
I1203 07:55:16.932513 140333345224448 hlog.py:32] train/00084/eval_train/acc 1.0000
I1203 07:55:17.502181 140333345224448 hlog.py:32] train/00084/eval_val/acc 0.6284
I1203 07:55:17.502626 140333345224448 hlog.py:18] train/00084{15.66s}
I1203 07:55:29.372096 140333345224448 hlog.py:32] train/00085/loss 0.0064
I1203 07:55:33.296113 140333345224448 hlog.py:32] train/00085/eval_train/acc 0.9970
I1203 07:55:33.863864 140333345224448 hlog.py:32] train/00085/eval_val/acc 0.6419
I1203 07:55:33.864462 140333345224448 hlog.py:18] train/00085{16.36s}
I1203 07:55:45.786209 140333345224448 hlog.py:32] train/00086/loss 0.0055
I1203 07:55:49.728150 140333345224448 hlog.py:32] train/00086/eval_train/acc 1.0000
I1203 07:55:50.304081 140333345224448 hlog.py:32] train/00086/eval_val/acc 0.6622
I1203 07:55:50.304654 140333345224448 hlog.py:18] train/00086{16.44s}
I1203 07:56:02.859693 140333345224448 hlog.py:32] train/00087/loss 0.0048
I1203 07:56:06.768114 140333345224448 hlog.py:32] train/00087/eval_train/acc 0.9960
I1203 07:56:07.338648 140333345224448 hlog.py:32] train/00087/eval_val/acc 0.6554
I1203 07:56:07.339157 140333345224448 hlog.py:18] train/00087{17.03s}
I1203 07:56:18.546928 140333345224448 hlog.py:32] train/00088/loss 0.0050
I1203 07:56:22.246116 140333345224448 hlog.py:32] train/00088/eval_train/acc 1.0000
I1203 07:56:22.851794 140333345224448 hlog.py:32] train/00088/eval_val/acc 0.6554
I1203 07:56:22.852537 140333345224448 hlog.py:18] train/00088{15.51s}
I1203 07:56:34.236012 140333345224448 hlog.py:32] train/00089/loss 0.0045
I1203 07:56:37.907645 140333345224448 hlog.py:32] train/00089/eval_train/acc 1.0000
I1203 07:56:38.477473 140333345224448 hlog.py:32] train/00089/eval_val/acc 0.6622
I1203 07:56:38.645973 140333345224448 hlog.py:18] train/00089{15.79s}
I1203 07:56:50.900563 140333345224448 hlog.py:32] train/00090/loss 0.0049
I1203 07:56:55.044303 140333345224448 hlog.py:32] train/00090/eval_train/acc 1.0000
I1203 07:56:55.611960 140333345224448 hlog.py:32] train/00090/eval_val/acc 0.6824
I1203 07:56:55.612541 140333345224448 hlog.py:18] train/00090{16.97s}
I1203 07:57:07.077310 140333345224448 hlog.py:32] train/00091/loss 0.0046
I1203 07:57:10.922428 140333345224448 hlog.py:32] train/00091/eval_train/acc 1.0000
I1203 07:57:11.515337 140333345224448 hlog.py:32] train/00091/eval_val/acc 0.6554
I1203 07:57:11.516109 140333345224448 hlog.py:18] train/00091{15.90s}
I1203 07:57:23.571042 140333345224448 hlog.py:32] train/00092/loss 0.0045
I1203 07:57:27.422178 140333345224448 hlog.py:32] train/00092/eval_train/acc 1.0000
I1203 07:57:27.993348 140333345224448 hlog.py:32] train/00092/eval_val/acc 0.6554
I1203 07:57:27.993845 140333345224448 hlog.py:18] train/00092{16.48s}
I1203 07:57:39.291941 140333345224448 hlog.py:32] train/00093/loss 0.0044
I1203 07:57:43.225181 140333345224448 hlog.py:32] train/00093/eval_train/acc 1.0000
I1203 07:57:43.809850 140333345224448 hlog.py:32] train/00093/eval_val/acc 0.6554
I1203 07:57:43.810368 140333345224448 hlog.py:18] train/00093{15.82s}
I1203 07:57:55.509093 140333345224448 hlog.py:32] train/00094/loss 0.0051
I1203 07:57:59.543909 140333345224448 hlog.py:32] train/00094/eval_train/acc 0.9980
I1203 07:58:00.121204 140333345224448 hlog.py:32] train/00094/eval_val/acc 0.6486
I1203 07:58:00.121709 140333345224448 hlog.py:18] train/00094{16.31s}
I1203 07:58:11.661864 140333345224448 hlog.py:32] train/00095/loss 0.0048
I1203 07:58:15.695785 140333345224448 hlog.py:32] train/00095/eval_train/acc 0.9970
I1203 07:58:16.280840 140333345224448 hlog.py:32] train/00095/eval_val/acc 0.6351
I1203 07:58:16.281332 140333345224448 hlog.py:18] train/00095{16.16s}
I1203 07:58:27.542728 140333345224448 hlog.py:32] train/00096/loss 0.0045
I1203 07:58:31.670038 140333345224448 hlog.py:32] train/00096/eval_train/acc 0.9970
I1203 07:58:32.246787 140333345224448 hlog.py:32] train/00096/eval_val/acc 0.6486
I1203 07:58:32.247203 140333345224448 hlog.py:18] train/00096{15.97s}
I1203 07:58:44.113377 140333345224448 hlog.py:32] train/00097/loss 0.0044
I1203 07:58:47.672036 140333345224448 hlog.py:32] train/00097/eval_train/acc 1.0000
I1203 07:58:48.235223 140333345224448 hlog.py:32] train/00097/eval_val/acc 0.6554
I1203 07:58:48.235757 140333345224448 hlog.py:18] train/00097{15.99s}
I1203 07:58:59.491482 140333345224448 hlog.py:32] train/00098/loss 0.0039
I1203 07:59:03.736105 140333345224448 hlog.py:32] train/00098/eval_train/acc 1.0000
I1203 07:59:04.362042 140333345224448 hlog.py:32] train/00098/eval_val/acc 0.6486
I1203 07:59:04.362527 140333345224448 hlog.py:18] train/00098{16.13s}
I1203 07:59:15.541046 140333345224448 hlog.py:32] train/00099/loss 0.0039
I1203 07:59:19.611021 140333345224448 hlog.py:32] train/00099/eval_train/acc 0.9980
I1203 07:59:20.178947 140333345224448 hlog.py:32] train/00099/eval_val/acc 0.6419
I1203 07:59:20.210631 140333345224448 hlog.py:18] train/00099{15.85s}
I1203 07:59:33.094808 140333345224448 hlog.py:32] train/00100/loss 0.0043
I1203 07:59:36.890157 140333345224448 hlog.py:32] train/00100/eval_train/acc 1.0000
I1203 07:59:37.486574 140333345224448 hlog.py:32] train/00100/eval_val/acc 0.6554
I1203 07:59:37.487013 140333345224448 hlog.py:18] train/00100{17.28s}
I1203 07:59:48.960528 140333345224448 hlog.py:32] train/00101/loss 0.0039
I1203 07:59:52.947264 140333345224448 hlog.py:32] train/00101/eval_train/acc 0.9970
I1203 07:59:53.500706 140333345224448 hlog.py:32] train/00101/eval_val/acc 0.6554
I1203 07:59:53.501216 140333345224448 hlog.py:18] train/00101{16.01s}
I1203 08:00:04.329970 140333345224448 hlog.py:32] train/00102/loss 0.0039
I1203 08:00:08.095575 140333345224448 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 08:00:08.654438 140333345224448 hlog.py:32] train/00102/eval_val/acc 0.6689
I1203 08:00:08.654907 140333345224448 hlog.py:18] train/00102{15.15s}
I1203 08:00:20.596404 140333345224448 hlog.py:32] train/00103/loss 0.0038
I1203 08:00:24.471585 140333345224448 hlog.py:32] train/00103/eval_train/acc 1.0000
I1203 08:00:25.030327 140333345224448 hlog.py:32] train/00103/eval_val/acc 0.6689
I1203 08:00:25.030795 140333345224448 hlog.py:18] train/00103{16.38s}
I1203 08:00:37.258345 140333345224448 hlog.py:32] train/00104/loss 0.0039
I1203 08:00:41.029721 140333345224448 hlog.py:32] train/00104/eval_train/acc 1.0000
I1203 08:00:41.591468 140333345224448 hlog.py:32] train/00104/eval_val/acc 0.6622
I1203 08:00:41.592086 140333345224448 hlog.py:18] train/00104{16.56s}
I1203 08:00:53.070981 140333345224448 hlog.py:32] train/00105/loss 0.0040
I1203 08:00:56.771170 140333345224448 hlog.py:32] train/00105/eval_train/acc 1.0000
I1203 08:00:57.327433 140333345224448 hlog.py:32] train/00105/eval_val/acc 0.6689
I1203 08:00:57.327894 140333345224448 hlog.py:18] train/00105{15.74s}
I1203 08:01:08.260818 140333345224448 hlog.py:32] train/00106/loss 0.0035
I1203 08:01:12.295384 140333345224448 hlog.py:32] train/00106/eval_train/acc 1.0000
I1203 08:01:12.874552 140333345224448 hlog.py:32] train/00106/eval_val/acc 0.6554
I1203 08:01:12.875056 140333345224448 hlog.py:18] train/00106{15.55s}
I1203 08:01:25.333756 140333345224448 hlog.py:32] train/00107/loss 0.0037
I1203 08:01:29.170222 140333345224448 hlog.py:32] train/00107/eval_train/acc 1.0000
I1203 08:01:29.750419 140333345224448 hlog.py:32] train/00107/eval_val/acc 0.6622
I1203 08:01:29.750910 140333345224448 hlog.py:18] train/00107{16.88s}
I1203 08:01:41.810673 140333345224448 hlog.py:32] train/00108/loss 0.0040
I1203 08:01:45.557546 140333345224448 hlog.py:32] train/00108/eval_train/acc 1.0000
I1203 08:01:46.148564 140333345224448 hlog.py:32] train/00108/eval_val/acc 0.6622
I1203 08:01:46.149074 140333345224448 hlog.py:18] train/00108{16.40s}
I1203 08:01:58.873135 140333345224448 hlog.py:32] train/00109/loss 0.0038
I1203 08:02:02.575503 140333345224448 hlog.py:32] train/00109/eval_train/acc 1.0000
I1203 08:02:03.153213 140333345224448 hlog.py:32] train/00109/eval_val/acc 0.6622
I1203 08:02:03.184940 140333345224448 hlog.py:18] train/00109{17.04s}
I1203 08:02:15.810848 140333345224448 hlog.py:32] train/00110/loss 0.0038
I1203 08:02:19.970256 140333345224448 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 08:02:20.534161 140333345224448 hlog.py:32] train/00110/eval_val/acc 0.6622
I1203 08:02:20.534638 140333345224448 hlog.py:18] train/00110{17.35s}
I1203 08:02:32.268249 140333345224448 hlog.py:32] train/00111/loss 0.0038
I1203 08:02:36.309664 140333345224448 hlog.py:32] train/00111/eval_train/acc 0.9990
I1203 08:02:36.894727 140333345224448 hlog.py:32] train/00111/eval_val/acc 0.6622
I1203 08:02:36.895415 140333345224448 hlog.py:18] train/00111{16.36s}
I1203 08:02:48.865785 140333345224448 hlog.py:32] train/00112/loss 0.0036
I1203 08:02:53.048884 140333345224448 hlog.py:32] train/00112/eval_train/acc 1.0000
I1203 08:02:53.617120 140333345224448 hlog.py:32] train/00112/eval_val/acc 0.6689
I1203 08:02:53.617655 140333345224448 hlog.py:18] train/00112{16.72s}
I1203 08:03:04.756208 140333345224448 hlog.py:32] train/00113/loss 0.0034
I1203 08:03:08.693962 140333345224448 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 08:03:09.306857 140333345224448 hlog.py:32] train/00113/eval_val/acc 0.6622
I1203 08:03:09.307372 140333345224448 hlog.py:18] train/00113{15.69s}
I1203 08:03:20.675154 140333345224448 hlog.py:32] train/00114/loss 0.0038
I1203 08:03:24.599076 140333345224448 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 08:03:25.170988 140333345224448 hlog.py:32] train/00114/eval_val/acc 0.6486
I1203 08:03:25.171487 140333345224448 hlog.py:18] train/00114{15.86s}
I1203 08:03:36.787846 140333345224448 hlog.py:32] train/00115/loss 0.0034
I1203 08:03:40.973541 140333345224448 hlog.py:32] train/00115/eval_train/acc 1.0000
I1203 08:03:41.536018 140333345224448 hlog.py:32] train/00115/eval_val/acc 0.6554
I1203 08:03:41.536481 140333345224448 hlog.py:18] train/00115{16.36s}
I1203 08:03:53.542304 140333345224448 hlog.py:32] train/00116/loss 0.0040
I1203 08:03:57.292847 140333345224448 hlog.py:32] train/00116/eval_train/acc 0.9980
I1203 08:03:57.889026 140333345224448 hlog.py:32] train/00116/eval_val/acc 0.6622
I1203 08:03:57.889506 140333345224448 hlog.py:18] train/00116{16.35s}
I1203 08:04:09.166022 140333345224448 hlog.py:32] train/00117/loss 0.0034
I1203 08:04:13.038002 140333345224448 hlog.py:32] train/00117/eval_train/acc 1.0000
I1203 08:04:13.623328 140333345224448 hlog.py:32] train/00117/eval_val/acc 0.6554
I1203 08:04:13.623885 140333345224448 hlog.py:18] train/00117{15.73s}
I1203 08:04:25.171401 140333345224448 hlog.py:32] train/00118/loss 0.0033
I1203 08:04:29.255243 140333345224448 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 08:04:29.816692 140333345224448 hlog.py:32] train/00118/eval_val/acc 0.6554
I1203 08:04:29.817100 140333345224448 hlog.py:18] train/00118{16.19s}
I1203 08:04:40.820130 140333345224448 hlog.py:32] train/00119/loss 0.0035
I1203 08:04:44.536167 140333345224448 hlog.py:32] train/00119/eval_train/acc 1.0000
I1203 08:04:45.132125 140333345224448 hlog.py:32] train/00119/eval_val/acc 0.6554
I1203 08:04:45.162192 140333345224448 hlog.py:18] train/00119{15.34s}
I1203 08:04:56.570580 140333345224448 hlog.py:32] train/00120/loss 0.0037
I1203 08:05:00.115737 140333345224448 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 08:05:00.683773 140333345224448 hlog.py:32] train/00120/eval_val/acc 0.6622
I1203 08:05:00.684242 140333345224448 hlog.py:18] train/00120{15.52s}
I1203 08:05:12.373816 140333345224448 hlog.py:32] train/00121/loss 0.0038
I1203 08:05:16.285827 140333345224448 hlog.py:32] train/00121/eval_train/acc 1.0000
I1203 08:05:16.851510 140333345224448 hlog.py:32] train/00121/eval_val/acc 0.6622
I1203 08:05:16.851999 140333345224448 hlog.py:18] train/00121{16.17s}
I1203 08:05:27.674797 140333345224448 hlog.py:32] train/00122/loss 0.0037
I1203 08:05:31.417526 140333345224448 hlog.py:32] train/00122/eval_train/acc 1.0000
I1203 08:05:32.006027 140333345224448 hlog.py:32] train/00122/eval_val/acc 0.6622
I1203 08:05:32.006523 140333345224448 hlog.py:18] train/00122{15.15s}
I1203 08:05:43.683332 140333345224448 hlog.py:32] train/00123/loss 0.0030
I1203 08:05:47.342144 140333345224448 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 08:05:47.907564 140333345224448 hlog.py:32] train/00123/eval_val/acc 0.6622
I1203 08:05:47.908096 140333345224448 hlog.py:18] train/00123{15.90s}
I1203 08:05:59.477193 140333345224448 hlog.py:32] train/00124/loss 0.0034
I1203 08:06:03.186340 140333345224448 hlog.py:32] train/00124/eval_train/acc 1.0000
I1203 08:06:03.765256 140333345224448 hlog.py:32] train/00124/eval_val/acc 0.6622
I1203 08:06:03.765702 140333345224448 hlog.py:18] train/00124{15.86s}
I1203 08:06:15.211439 140333345224448 hlog.py:32] train/00125/loss 0.0031
I1203 08:06:18.932282 140333345224448 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 08:06:19.507367 140333345224448 hlog.py:32] train/00125/eval_val/acc 0.6622
I1203 08:06:19.507880 140333345224448 hlog.py:18] train/00125{15.74s}
I1203 08:06:31.516709 140333345224448 hlog.py:32] train/00126/loss 0.0036
I1203 08:06:35.373951 140333345224448 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 08:06:35.937742 140333345224448 hlog.py:32] train/00126/eval_val/acc 0.6622
I1203 08:06:35.938200 140333345224448 hlog.py:18] train/00126{16.43s}
I1203 08:06:47.130825 140333345224448 hlog.py:32] train/00127/loss 0.0032
I1203 08:06:51.367758 140333345224448 hlog.py:32] train/00127/eval_train/acc 1.0000
I1203 08:06:51.956302 140333345224448 hlog.py:32] train/00127/eval_val/acc 0.6622
I1203 08:06:51.956984 140333345224448 hlog.py:18] train/00127{16.02s}
I1203 08:07:03.574082 140333345224448 hlog.py:32] train/00128/loss 0.0033
I1203 08:07:07.497142 140333345224448 hlog.py:32] train/00128/eval_train/acc 1.0000
I1203 08:07:08.063828 140333345224448 hlog.py:32] train/00128/eval_val/acc 0.6622
I1203 08:07:08.064305 140333345224448 hlog.py:18] train/00128{16.11s}
I1203 08:07:20.269084 140333345224448 hlog.py:32] train/00129/loss 0.0034
I1203 08:07:23.910664 140333345224448 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 08:07:24.491298 140333345224448 hlog.py:32] train/00129/eval_val/acc 0.6554
I1203 08:07:24.524122 140333345224448 hlog.py:18] train/00129{16.46s}
I1203 08:07:36.916609 140333345224448 hlog.py:32] train/00130/loss 0.0037
I1203 08:07:40.654185 140333345224448 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 08:07:41.230093 140333345224448 hlog.py:32] train/00130/eval_val/acc 0.6622
I1203 08:07:41.230575 140333345224448 hlog.py:18] train/00130{16.71s}
I1203 08:07:54.349710 140333345224448 hlog.py:32] train/00131/loss 0.0041
I1203 08:07:58.273481 140333345224448 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 08:07:58.855958 140333345224448 hlog.py:32] train/00131/eval_val/acc 0.6554
I1203 08:07:58.856462 140333345224448 hlog.py:18] train/00131{17.63s}
I1203 08:08:11.023104 140333345224448 hlog.py:32] train/00132/loss 0.0038
I1203 08:08:14.645209 140333345224448 hlog.py:32] train/00132/eval_train/acc 1.0000
I1203 08:08:15.216715 140333345224448 hlog.py:32] train/00132/eval_val/acc 0.6622
I1203 08:08:15.217200 140333345224448 hlog.py:18] train/00132{16.36s}
I1203 08:08:27.008848 140333345224448 hlog.py:32] train/00133/loss 0.0053
I1203 08:08:30.806846 140333345224448 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 08:08:31.382045 140333345224448 hlog.py:32] train/00133/eval_val/acc 0.6622
I1203 08:08:31.382618 140333345224448 hlog.py:18] train/00133{16.17s}
I1203 08:08:42.999696 140333345224448 hlog.py:32] train/00134/loss 0.0031
I1203 08:08:46.763273 140333345224448 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 08:08:47.326450 140333345224448 hlog.py:32] train/00134/eval_val/acc 0.6622
I1203 08:08:47.327007 140333345224448 hlog.py:18] train/00134{15.94s}
I1203 08:08:58.587128 140333345224448 hlog.py:32] train/00135/loss 0.0031
I1203 08:09:02.178372 140333345224448 hlog.py:32] train/00135/eval_train/acc 1.0000
I1203 08:09:02.744531 140333345224448 hlog.py:32] train/00135/eval_val/acc 0.6622
I1203 08:09:02.745012 140333345224448 hlog.py:18] train/00135{15.42s}
I1203 08:09:14.422802 140333345224448 hlog.py:32] train/00136/loss 0.0034
I1203 08:09:18.066590 140333345224448 hlog.py:32] train/00136/eval_train/acc 1.0000
I1203 08:09:18.644045 140333345224448 hlog.py:32] train/00136/eval_val/acc 0.6622
I1203 08:09:18.644589 140333345224448 hlog.py:18] train/00136{15.90s}
I1203 08:09:30.454736 140333345224448 hlog.py:32] train/00137/loss 0.0034
I1203 08:09:34.529793 140333345224448 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 08:09:35.094431 140333345224448 hlog.py:32] train/00137/eval_val/acc 0.6622
I1203 08:09:35.094916 140333345224448 hlog.py:18] train/00137{16.45s}
I1203 08:09:46.873483 140333345224448 hlog.py:32] train/00138/loss 0.0033
I1203 08:09:50.637261 140333345224448 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 08:09:51.210639 140333345224448 hlog.py:32] train/00138/eval_val/acc 0.6622
I1203 08:09:51.211121 140333345224448 hlog.py:18] train/00138{16.12s}
I1203 08:10:03.103516 140333345224448 hlog.py:32] train/00139/loss 0.0029
I1203 08:10:06.882617 140333345224448 hlog.py:32] train/00139/eval_train/acc 1.0000
I1203 08:10:07.461524 140333345224448 hlog.py:32] train/00139/eval_val/acc 0.6622
I1203 08:10:07.493761 140333345224448 hlog.py:18] train/00139{16.28s}
I1203 08:10:20.196333 140333345224448 hlog.py:32] train/00140/loss 0.0031
I1203 08:10:24.233312 140333345224448 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 08:10:24.799860 140333345224448 hlog.py:32] train/00140/eval_val/acc 0.6622
I1203 08:10:24.800337 140333345224448 hlog.py:18] train/00140{17.31s}
I1203 08:10:36.808198 140333345224448 hlog.py:32] train/00141/loss 0.0034
I1203 08:10:40.922011 140333345224448 hlog.py:32] train/00141/eval_train/acc 1.0000
I1203 08:10:41.486591 140333345224448 hlog.py:32] train/00141/eval_val/acc 0.6622
I1203 08:10:41.487060 140333345224448 hlog.py:18] train/00141{16.69s}
I1203 08:10:53.398549 140333345224448 hlog.py:32] train/00142/loss 0.0034
I1203 08:10:57.432145 140333345224448 hlog.py:32] train/00142/eval_train/acc 1.0000
I1203 08:10:58.006144 140333345224448 hlog.py:32] train/00142/eval_val/acc 0.6622
I1203 08:10:58.006631 140333345224448 hlog.py:18] train/00142{16.52s}
I1203 08:11:09.189416 140333345224448 hlog.py:32] train/00143/loss 0.0032
I1203 08:11:13.048382 140333345224448 hlog.py:32] train/00143/eval_train/acc 1.0000
I1203 08:11:13.615839 140333345224448 hlog.py:32] train/00143/eval_val/acc 0.6622
I1203 08:11:13.616233 140333345224448 hlog.py:18] train/00143{15.61s}
I1203 08:11:25.229988 140333345224448 hlog.py:32] train/00144/loss 0.0033
I1203 08:11:28.994692 140333345224448 hlog.py:32] train/00144/eval_train/acc 1.0000
I1203 08:11:29.578343 140333345224448 hlog.py:32] train/00144/eval_val/acc 0.6622
I1203 08:11:29.578836 140333345224448 hlog.py:18] train/00144{15.96s}
I1203 08:11:41.057207 140333345224448 hlog.py:32] train/00145/loss 0.0031
I1203 08:11:45.236850 140333345224448 hlog.py:32] train/00145/eval_train/acc 1.0000
I1203 08:11:45.805839 140333345224448 hlog.py:32] train/00145/eval_val/acc 0.6622
I1203 08:11:45.806313 140333345224448 hlog.py:18] train/00145{16.23s}
I1203 08:11:58.014581 140333345224448 hlog.py:32] train/00146/loss 0.0033
I1203 08:12:02.231867 140333345224448 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 08:12:02.821571 140333345224448 hlog.py:32] train/00146/eval_val/acc 0.6622
I1203 08:12:02.822266 140333345224448 hlog.py:18] train/00146{17.02s}
I1203 08:12:14.904133 140333345224448 hlog.py:32] train/00147/loss 0.0035
I1203 08:12:18.628139 140333345224448 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 08:12:19.230130 140333345224448 hlog.py:32] train/00147/eval_val/acc 0.6622
I1203 08:12:19.230606 140333345224448 hlog.py:18] train/00147{16.41s}
I1203 08:12:32.114912 140333345224448 hlog.py:32] train/00148/loss 0.0032
I1203 08:12:36.023970 140333345224448 hlog.py:32] train/00148/eval_train/acc 1.0000
I1203 08:12:36.619347 140333345224448 hlog.py:32] train/00148/eval_val/acc 0.6622
I1203 08:12:36.620053 140333345224448 hlog.py:18] train/00148{17.39s}
I1203 08:12:47.924784 140333345224448 hlog.py:32] train/00149/loss 0.0032
I1203 08:12:51.931412 140333345224448 hlog.py:32] train/00149/eval_train/acc 1.0000
I1203 08:12:52.154078 140333345224448 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 08:12:52.154308 140333345224448 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:12:52.154417 140333345224448 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:12:52.154505 140333345224448 hlog.py:32] train/00149/eval_val/0/corr True
I1203 08:12:52.154586 140333345224448 hlog.py:32] train/00149/eval_val/0 
I1203 08:12:52.154669 140333345224448 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 08:12:52.154770 140333345224448 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 08:12:52.154873 140333345224448 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.154971 140333345224448 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.155052 140333345224448 hlog.py:32] train/00149/eval_val/1/corr True
I1203 08:12:52.155128 140333345224448 hlog.py:32] train/00149/eval_val/1 
I1203 08:12:52.155203 140333345224448 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 08:12:52.155299 140333345224448 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 08:12:52.155399 140333345224448 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 08:12:52.155504 140333345224448 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 08:12:52.155586 140333345224448 hlog.py:32] train/00149/eval_val/2/corr True
I1203 08:12:52.155661 140333345224448 hlog.py:32] train/00149/eval_val/2 
I1203 08:12:52.155735 140333345224448 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 08:12:52.155830 140333345224448 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 08:12:52.155931 140333345224448 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.156023 140333345224448 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.156103 140333345224448 hlog.py:32] train/00149/eval_val/3/corr True
I1203 08:12:52.156178 140333345224448 hlog.py:32] train/00149/eval_val/3 
I1203 08:12:52.156251 140333345224448 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 08:12:52.156346 140333345224448 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 08:12:52.156446 140333345224448 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 08:12:52.156538 140333345224448 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 08:12:52.156618 140333345224448 hlog.py:32] train/00149/eval_val/4/corr True
I1203 08:12:52.156693 140333345224448 hlog.py:32] train/00149/eval_val/4 
I1203 08:12:52.156767 140333345224448 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 08:12:52.156861 140333345224448 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 08:12:52.156960 140333345224448 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.157050 140333345224448 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.157131 140333345224448 hlog.py:32] train/00149/eval_val/5/corr True
I1203 08:12:52.157206 140333345224448 hlog.py:32] train/00149/eval_val/5 
I1203 08:12:52.157279 140333345224448 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 08:12:52.157373 140333345224448 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 08:12:52.157485 140333345224448 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.157577 140333345224448 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.157656 140333345224448 hlog.py:32] train/00149/eval_val/6/corr True
I1203 08:12:52.157731 140333345224448 hlog.py:32] train/00149/eval_val/6 
I1203 08:12:52.157804 140333345224448 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 08:12:52.157896 140333345224448 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 08:12:52.157996 140333345224448 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.158086 140333345224448 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.158165 140333345224448 hlog.py:32] train/00149/eval_val/7/corr True
I1203 08:12:52.158240 140333345224448 hlog.py:32] train/00149/eval_val/7 
I1203 08:12:52.158312 140333345224448 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 08:12:52.158406 140333345224448 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 08:12:52.158505 140333345224448 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:12:52.158596 140333345224448 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:12:52.158675 140333345224448 hlog.py:32] train/00149/eval_val/8/corr True
I1203 08:12:52.158750 140333345224448 hlog.py:32] train/00149/eval_val/8 
I1203 08:12:52.158823 140333345224448 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 08:12:52.158917 140333345224448 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 08:12:52.159015 140333345224448 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:12:52.159106 140333345224448 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:12:52.159185 140333345224448 hlog.py:32] train/00149/eval_val/9/corr True
I1203 08:12:52.159259 140333345224448 hlog.py:32] train/00149/eval_val/9 
I1203 08:12:52.159331 140333345224448 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 08:12:52.159434 140333345224448 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 08:12:52.159535 140333345224448 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.159625 140333345224448 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.159705 140333345224448 hlog.py:32] train/00149/eval_val/10/corr True
I1203 08:12:52.159779 140333345224448 hlog.py:32] train/00149/eval_val/10 
I1203 08:12:52.159852 140333345224448 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 08:12:52.159949 140333345224448 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 08:12:52.160061 140333345224448 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:12:52.160157 140333345224448 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:12:52.160237 140333345224448 hlog.py:32] train/00149/eval_val/11/corr True
I1203 08:12:52.160311 140333345224448 hlog.py:32] train/00149/eval_val/11 
I1203 08:12:52.160383 140333345224448 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 08:12:52.160480 140333345224448 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 08:12:52.160590 140333345224448 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 08:12:52.160692 140333345224448 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 08:12:52.160772 140333345224448 hlog.py:32] train/00149/eval_val/12/corr True
I1203 08:12:52.160847 140333345224448 hlog.py:32] train/00149/eval_val/12 
I1203 08:12:52.160920 140333345224448 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 08:12:52.161017 140333345224448 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 08:12:52.161128 140333345224448 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 08:12:52.161223 140333345224448 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 08:12:52.161303 140333345224448 hlog.py:32] train/00149/eval_val/13/corr True
I1203 08:12:52.161377 140333345224448 hlog.py:32] train/00149/eval_val/13 
I1203 08:12:52.161449 140333345224448 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 08:12:52.161547 140333345224448 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 08:12:52.161657 140333345224448 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 08:12:52.161752 140333345224448 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 08:12:52.161832 140333345224448 hlog.py:32] train/00149/eval_val/14/corr True
I1203 08:12:52.161906 140333345224448 hlog.py:32] train/00149/eval_val/14 
I1203 08:12:52.161979 140333345224448 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 08:12:52.162076 140333345224448 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 08:12:52.162186 140333345224448 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 08:12:52.162281 140333345224448 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 08:12:52.162361 140333345224448 hlog.py:32] train/00149/eval_val/15/corr True
I1203 08:12:52.162435 140333345224448 hlog.py:32] train/00149/eval_val/15 
I1203 08:12:52.162507 140333345224448 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 08:12:52.162604 140333345224448 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 08:12:52.162714 140333345224448 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:12:52.162810 140333345224448 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 08:12:52.162889 140333345224448 hlog.py:32] train/00149/eval_val/16/corr True
I1203 08:12:52.162963 140333345224448 hlog.py:32] train/00149/eval_val/16 
I1203 08:12:52.163035 140333345224448 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 08:12:52.163125 140333345224448 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 08:12:52.163230 140333345224448 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 08:12:52.163327 140333345224448 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 08:12:52.163426 140333345224448 hlog.py:32] train/00149/eval_val/17/corr False
I1203 08:12:52.163504 140333345224448 hlog.py:32] train/00149/eval_val/17 
I1203 08:12:52.163577 140333345224448 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 08:12:52.163675 140333345224448 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 08:12:52.163785 140333345224448 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 08:12:52.163882 140333345224448 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 08:12:52.163963 140333345224448 hlog.py:32] train/00149/eval_val/18/corr True
I1203 08:12:52.164037 140333345224448 hlog.py:32] train/00149/eval_val/18 
I1203 08:12:52.164109 140333345224448 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 08:12:52.164199 140333345224448 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 08:12:52.164303 140333345224448 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:12:52.164399 140333345224448 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 08:12:52.164479 140333345224448 hlog.py:32] train/00149/eval_val/19/corr False
I1203 08:12:52.164554 140333345224448 hlog.py:32] train/00149/eval_val/19 
I1203 08:12:52.164626 140333345224448 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 08:12:52.164717 140333345224448 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 08:12:52.164822 140333345224448 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 08:12:52.164918 140333345224448 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 08:12:52.164998 140333345224448 hlog.py:32] train/00149/eval_val/20/corr False
I1203 08:12:52.165072 140333345224448 hlog.py:32] train/00149/eval_val/20 
I1203 08:12:52.165145 140333345224448 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 08:12:52.165243 140333345224448 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 08:12:52.165352 140333345224448 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 08:12:52.165449 140333345224448 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 08:12:52.165529 140333345224448 hlog.py:32] train/00149/eval_val/21/corr True
I1203 08:12:52.165603 140333345224448 hlog.py:32] train/00149/eval_val/21 
I1203 08:12:52.165676 140333345224448 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 08:12:52.165768 140333345224448 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 08:12:52.165868 140333345224448 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1203 08:12:52.165959 140333345224448 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 08:12:52.166038 140333345224448 hlog.py:32] train/00149/eval_val/22/corr False
I1203 08:12:52.166113 140333345224448 hlog.py:32] train/00149/eval_val/22 
I1203 08:12:52.166186 140333345224448 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 08:12:52.166277 140333345224448 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 08:12:52.166377 140333345224448 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( mississippi ) ) ) )
I1203 08:12:52.166473 140333345224448 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 08:12:52.166553 140333345224448 hlog.py:32] train/00149/eval_val/23/corr False
I1203 08:12:52.166627 140333345224448 hlog.py:32] train/00149/eval_val/23 
I1203 08:12:52.166700 140333345224448 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 08:12:52.166788 140333345224448 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 08:12:52.166882 140333345224448 hlog.py:32] train/00149/eval_val/24/pred ( A , _largest ( A , _state ( A ) ) )
I1203 08:12:52.166971 140333345224448 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 08:12:52.167051 140333345224448 hlog.py:32] train/00149/eval_val/24/corr False
I1203 08:12:52.167125 140333345224448 hlog.py:32] train/00149/eval_val/24 
I1203 08:12:52.167198 140333345224448 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 08:12:52.167293 140333345224448 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 08:12:52.167395 140333345224448 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:12:52.167496 140333345224448 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:12:52.167576 140333345224448 hlog.py:32] train/00149/eval_val/25/corr True
I1203 08:12:52.167651 140333345224448 hlog.py:32] train/00149/eval_val/25 
I1203 08:12:52.167729 140333345224448 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 08:12:52.167819 140333345224448 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 08:12:52.167926 140333345224448 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _longest ( B , ( _state ( B ) , _const ( C , _riverid ( delaware ) ) , _river ( C ) ) ) )
I1203 08:12:52.168019 140333345224448 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 08:12:52.168098 140333345224448 hlog.py:32] train/00149/eval_val/26/corr False
I1203 08:12:52.168172 140333345224448 hlog.py:32] train/00149/eval_val/26 
I1203 08:12:52.168245 140333345224448 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 08:12:52.168335 140333345224448 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 08:12:52.168444 140333345224448 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) ) )
I1203 08:12:52.168537 140333345224448 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:12:52.168617 140333345224448 hlog.py:32] train/00149/eval_val/27/corr False
I1203 08:12:52.168691 140333345224448 hlog.py:32] train/00149/eval_val/27 
I1203 08:12:52.168764 140333345224448 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 08:12:52.168859 140333345224448 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 08:12:52.168960 140333345224448 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:12:52.169052 140333345224448 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:12:52.169132 140333345224448 hlog.py:32] train/00149/eval_val/28/corr True
I1203 08:12:52.169207 140333345224448 hlog.py:32] train/00149/eval_val/28 
I1203 08:12:52.169279 140333345224448 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 08:12:52.169373 140333345224448 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 08:12:52.169476 140333345224448 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 08:12:52.169573 140333345224448 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 08:12:52.169654 140333345224448 hlog.py:32] train/00149/eval_val/29/corr True
I1203 08:12:52.169728 140333345224448 hlog.py:32] train/00149/eval_val/29 
I1203 08:12:52.169801 140333345224448 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 08:12:52.169891 140333345224448 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 08:12:52.170000 140333345224448 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _size ( B , A ) , _longest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _stateid ( river ) ) ) ) ) )
I1203 08:12:52.170093 140333345224448 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 08:12:52.170173 140333345224448 hlog.py:32] train/00149/eval_val/30/corr False
I1203 08:12:52.170248 140333345224448 hlog.py:32] train/00149/eval_val/30 
I1203 08:12:52.170320 140333345224448 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 08:12:52.170415 140333345224448 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 08:12:52.170516 140333345224448 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 08:12:52.170608 140333345224448 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 08:12:52.170687 140333345224448 hlog.py:32] train/00149/eval_val/31/corr True
I1203 08:12:52.170762 140333345224448 hlog.py:32] train/00149/eval_val/31 
I1203 08:12:52.170835 140333345224448 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 08:12:52.170924 140333345224448 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 08:12:52.171035 140333345224448 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _shortest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( rio grande ) ) ) ) ) )
I1203 08:12:52.171128 140333345224448 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 08:12:52.171209 140333345224448 hlog.py:32] train/00149/eval_val/32/corr False
I1203 08:12:52.171283 140333345224448 hlog.py:32] train/00149/eval_val/32 
I1203 08:12:52.171356 140333345224448 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 08:12:52.171454 140333345224448 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 08:12:52.171561 140333345224448 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _loc ( B , C ) ) )
I1203 08:12:52.171654 140333345224448 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 08:12:52.171734 140333345224448 hlog.py:32] train/00149/eval_val/33/corr False
I1203 08:12:52.171808 140333345224448 hlog.py:32] train/00149/eval_val/33 
I1203 08:12:52.171881 140333345224448 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 08:12:52.171977 140333345224448 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 08:12:52.172078 140333345224448 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:12:52.172171 140333345224448 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 08:12:52.172250 140333345224448 hlog.py:32] train/00149/eval_val/34/corr True
I1203 08:12:52.172325 140333345224448 hlog.py:32] train/00149/eval_val/34 
I1203 08:12:52.172398 140333345224448 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 08:12:52.172489 140333345224448 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 08:12:52.172597 140333345224448 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.172698 140333345224448 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.172778 140333345224448 hlog.py:32] train/00149/eval_val/35/corr False
I1203 08:12:52.172853 140333345224448 hlog.py:32] train/00149/eval_val/35 
I1203 08:12:52.172925 140333345224448 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 08:12:52.173016 140333345224448 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 08:12:52.173124 140333345224448 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.173218 140333345224448 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.173298 140333345224448 hlog.py:32] train/00149/eval_val/36/corr False
I1203 08:12:52.173373 140333345224448 hlog.py:32] train/00149/eval_val/36 
I1203 08:12:52.173445 140333345224448 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 08:12:52.173541 140333345224448 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 08:12:52.173647 140333345224448 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.173741 140333345224448 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.173821 140333345224448 hlog.py:32] train/00149/eval_val/37/corr True
I1203 08:12:52.173895 140333345224448 hlog.py:32] train/00149/eval_val/37 
I1203 08:12:52.173968 140333345224448 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 08:12:52.174064 140333345224448 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 08:12:52.174170 140333345224448 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.174263 140333345224448 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.174344 140333345224448 hlog.py:32] train/00149/eval_val/38/corr True
I1203 08:12:52.174418 140333345224448 hlog.py:32] train/00149/eval_val/38 
I1203 08:12:52.174490 140333345224448 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 08:12:52.174586 140333345224448 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 08:12:52.174692 140333345224448 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.174786 140333345224448 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.174865 140333345224448 hlog.py:32] train/00149/eval_val/39/corr True
I1203 08:12:52.174940 140333345224448 hlog.py:32] train/00149/eval_val/39 
I1203 08:12:52.175012 140333345224448 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 08:12:52.175102 140333345224448 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 08:12:52.175208 140333345224448 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 08:12:52.175300 140333345224448 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 08:12:52.175379 140333345224448 hlog.py:32] train/00149/eval_val/40/corr False
I1203 08:12:52.175461 140333345224448 hlog.py:32] train/00149/eval_val/40 
I1203 08:12:52.175535 140333345224448 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 08:12:52.175630 140333345224448 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 08:12:52.175736 140333345224448 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 08:12:52.175828 140333345224448 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 08:12:52.175908 140333345224448 hlog.py:32] train/00149/eval_val/41/corr False
I1203 08:12:52.175983 140333345224448 hlog.py:32] train/00149/eval_val/41 
I1203 08:12:52.176056 140333345224448 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 08:12:52.176145 140333345224448 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 08:12:52.176253 140333345224448 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 08:12:52.176344 140333345224448 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 08:12:52.176423 140333345224448 hlog.py:32] train/00149/eval_val/42/corr False
I1203 08:12:52.176497 140333345224448 hlog.py:32] train/00149/eval_val/42 
I1203 08:12:52.176570 140333345224448 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 08:12:52.176668 140333345224448 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 08:12:52.176781 140333345224448 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 08:12:52.176879 140333345224448 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 08:12:52.176958 140333345224448 hlog.py:32] train/00149/eval_val/43/corr True
I1203 08:12:52.177033 140333345224448 hlog.py:32] train/00149/eval_val/43 
I1203 08:12:52.177105 140333345224448 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 08:12:52.177204 140333345224448 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 08:12:52.177317 140333345224448 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 08:12:52.177414 140333345224448 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 08:12:52.177495 140333345224448 hlog.py:32] train/00149/eval_val/44/corr True
I1203 08:12:52.177568 140333345224448 hlog.py:32] train/00149/eval_val/44 
I1203 08:12:52.177641 140333345224448 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 08:12:52.177736 140333345224448 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 08:12:52.177841 140333345224448 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 08:12:52.177936 140333345224448 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 08:12:52.178016 140333345224448 hlog.py:32] train/00149/eval_val/45/corr False
I1203 08:12:52.178090 140333345224448 hlog.py:32] train/00149/eval_val/45 
I1203 08:12:52.178163 140333345224448 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 08:12:52.178259 140333345224448 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 08:12:52.178365 140333345224448 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 08:12:52.178459 140333345224448 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 08:12:52.178544 140333345224448 hlog.py:32] train/00149/eval_val/46/corr True
I1203 08:12:52.178620 140333345224448 hlog.py:32] train/00149/eval_val/46 
I1203 08:12:52.178692 140333345224448 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 08:12:52.178786 140333345224448 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 08:12:52.178894 140333345224448 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) , A ) )
I1203 08:12:52.178989 140333345224448 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 08:12:52.179069 140333345224448 hlog.py:32] train/00149/eval_val/47/corr False
I1203 08:12:52.179143 140333345224448 hlog.py:32] train/00149/eval_val/47 
I1203 08:12:52.179215 140333345224448 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 08:12:52.179310 140333345224448 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 08:12:52.179431 140333345224448 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _cityid ( called , _ ) ) ) , A ) )
I1203 08:12:52.179529 140333345224448 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 08:12:52.179609 140333345224448 hlog.py:32] train/00149/eval_val/48/corr False
I1203 08:12:52.179684 140333345224448 hlog.py:32] train/00149/eval_val/48 
I1203 08:12:52.179757 140333345224448 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 08:12:52.179854 140333345224448 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 08:12:52.179964 140333345224448 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:12:52.180059 140333345224448 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:12:52.180139 140333345224448 hlog.py:32] train/00149/eval_val/49/corr True
I1203 08:12:52.180213 140333345224448 hlog.py:32] train/00149/eval_val/49 
I1203 08:12:52.180286 140333345224448 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 08:12:52.180376 140333345224448 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 08:12:52.180492 140333345224448 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _const ( C , _cityid ( austin , _ ) ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 08:12:52.180588 140333345224448 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 08:12:52.180668 140333345224448 hlog.py:32] train/00149/eval_val/50/corr False
I1203 08:12:52.180742 140333345224448 hlog.py:32] train/00149/eval_val/50 
I1203 08:12:52.180815 140333345224448 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 08:12:52.180913 140333345224448 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 08:12:52.181022 140333345224448 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:12:52.181118 140333345224448 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 08:12:52.181198 140333345224448 hlog.py:32] train/00149/eval_val/51/corr True
I1203 08:12:52.181272 140333345224448 hlog.py:32] train/00149/eval_val/51 
I1203 08:12:52.181345 140333345224448 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 08:12:52.181440 140333345224448 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 08:12:52.181544 140333345224448 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 08:12:52.181636 140333345224448 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 08:12:52.181716 140333345224448 hlog.py:32] train/00149/eval_val/52/corr False
I1203 08:12:52.181791 140333345224448 hlog.py:32] train/00149/eval_val/52 
I1203 08:12:52.181863 140333345224448 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 08:12:52.181952 140333345224448 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 08:12:52.182055 140333345224448 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 08:12:52.182147 140333345224448 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 08:12:52.182227 140333345224448 hlog.py:32] train/00149/eval_val/53/corr False
I1203 08:12:52.182301 140333345224448 hlog.py:32] train/00149/eval_val/53 
I1203 08:12:52.182374 140333345224448 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 08:12:52.182468 140333345224448 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 08:12:52.182570 140333345224448 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.182662 140333345224448 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.182741 140333345224448 hlog.py:32] train/00149/eval_val/54/corr True
I1203 08:12:52.182816 140333345224448 hlog.py:32] train/00149/eval_val/54 
I1203 08:12:52.182888 140333345224448 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 08:12:52.182981 140333345224448 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 08:12:52.183083 140333345224448 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 08:12:52.183175 140333345224448 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 08:12:52.183254 140333345224448 hlog.py:32] train/00149/eval_val/55/corr True
I1203 08:12:52.183329 140333345224448 hlog.py:32] train/00149/eval_val/55 
I1203 08:12:52.183402 140333345224448 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 08:12:52.183507 140333345224448 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 08:12:52.183610 140333345224448 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:12:52.183702 140333345224448 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:12:52.183781 140333345224448 hlog.py:32] train/00149/eval_val/56/corr True
I1203 08:12:52.183856 140333345224448 hlog.py:32] train/00149/eval_val/56 
I1203 08:12:52.183929 140333345224448 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 08:12:52.184024 140333345224448 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 08:12:52.184127 140333345224448 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.184218 140333345224448 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.184298 140333345224448 hlog.py:32] train/00149/eval_val/57/corr True
I1203 08:12:52.184372 140333345224448 hlog.py:32] train/00149/eval_val/57 
I1203 08:12:52.184445 140333345224448 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 08:12:52.184548 140333345224448 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 08:12:52.184650 140333345224448 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.184742 140333345224448 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.184822 140333345224448 hlog.py:32] train/00149/eval_val/58/corr True
I1203 08:12:52.184896 140333345224448 hlog.py:32] train/00149/eval_val/58 
I1203 08:12:52.184968 140333345224448 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 08:12:52.185063 140333345224448 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 08:12:52.185164 140333345224448 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 08:12:52.185256 140333345224448 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 08:12:52.185335 140333345224448 hlog.py:32] train/00149/eval_val/59/corr True
I1203 08:12:52.185410 140333345224448 hlog.py:32] train/00149/eval_val/59 
I1203 08:12:52.185482 140333345224448 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 08:12:52.185576 140333345224448 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 08:12:52.185678 140333345224448 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 08:12:52.185770 140333345224448 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 08:12:52.185850 140333345224448 hlog.py:32] train/00149/eval_val/60/corr True
I1203 08:12:52.185924 140333345224448 hlog.py:32] train/00149/eval_val/60 
I1203 08:12:52.185997 140333345224448 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 08:12:52.186092 140333345224448 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 08:12:52.186194 140333345224448 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.186287 140333345224448 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.186367 140333345224448 hlog.py:32] train/00149/eval_val/61/corr True
I1203 08:12:52.186441 140333345224448 hlog.py:32] train/00149/eval_val/61 
I1203 08:12:52.186513 140333345224448 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 08:12:52.186608 140333345224448 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 08:12:52.186710 140333345224448 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 08:12:52.186802 140333345224448 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 08:12:52.186881 140333345224448 hlog.py:32] train/00149/eval_val/62/corr True
I1203 08:12:52.186955 140333345224448 hlog.py:32] train/00149/eval_val/62 
I1203 08:12:52.187028 140333345224448 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 08:12:52.187122 140333345224448 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 08:12:52.187223 140333345224448 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.187315 140333345224448 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.187394 140333345224448 hlog.py:32] train/00149/eval_val/63/corr True
I1203 08:12:52.187478 140333345224448 hlog.py:32] train/00149/eval_val/63 
I1203 08:12:52.187550 140333345224448 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 08:12:52.421000 140333345224448 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 08:12:52.421212 140333345224448 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 08:12:52.421315 140333345224448 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 08:12:52.421399 140333345224448 hlog.py:32] train/00149/eval_val/64/corr True
I1203 08:12:52.421476 140333345224448 hlog.py:32] train/00149/eval_val/64 
I1203 08:12:52.421553 140333345224448 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 08:12:52.421649 140333345224448 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 08:12:52.421751 140333345224448 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.421843 140333345224448 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.421921 140333345224448 hlog.py:32] train/00149/eval_val/65/corr True
I1203 08:12:52.421995 140333345224448 hlog.py:32] train/00149/eval_val/65 
I1203 08:12:52.422066 140333345224448 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 08:12:52.422159 140333345224448 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 08:12:52.422259 140333345224448 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.422348 140333345224448 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.422425 140333345224448 hlog.py:32] train/00149/eval_val/66/corr True
I1203 08:12:52.422498 140333345224448 hlog.py:32] train/00149/eval_val/66 
I1203 08:12:52.422569 140333345224448 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 08:12:52.422663 140333345224448 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 08:12:52.422762 140333345224448 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.422851 140333345224448 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.422928 140333345224448 hlog.py:32] train/00149/eval_val/67/corr True
I1203 08:12:52.423000 140333345224448 hlog.py:32] train/00149/eval_val/67 
I1203 08:12:52.423070 140333345224448 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 08:12:52.423164 140333345224448 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 08:12:52.423266 140333345224448 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 08:12:52.423357 140333345224448 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 08:12:52.423457 140333345224448 hlog.py:32] train/00149/eval_val/68/corr True
I1203 08:12:52.423533 140333345224448 hlog.py:32] train/00149/eval_val/68 
I1203 08:12:52.423607 140333345224448 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 08:12:52.423703 140333345224448 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 08:12:52.423818 140333345224448 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.423909 140333345224448 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.423986 140333345224448 hlog.py:32] train/00149/eval_val/69/corr True
I1203 08:12:52.424058 140333345224448 hlog.py:32] train/00149/eval_val/69 
I1203 08:12:52.424128 140333345224448 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 08:12:52.424220 140333345224448 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 08:12:52.424316 140333345224448 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.424409 140333345224448 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.424486 140333345224448 hlog.py:32] train/00149/eval_val/70/corr True
I1203 08:12:52.424558 140333345224448 hlog.py:32] train/00149/eval_val/70 
I1203 08:12:52.424629 140333345224448 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 08:12:52.424720 140333345224448 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 08:12:52.424816 140333345224448 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:12:52.424903 140333345224448 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 08:12:52.424981 140333345224448 hlog.py:32] train/00149/eval_val/71/corr True
I1203 08:12:52.425053 140333345224448 hlog.py:32] train/00149/eval_val/71 
I1203 08:12:52.425124 140333345224448 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 08:12:52.425215 140333345224448 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 08:12:52.425311 140333345224448 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:12:52.425398 140333345224448 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 08:12:52.425476 140333345224448 hlog.py:32] train/00149/eval_val/72/corr True
I1203 08:12:52.425548 140333345224448 hlog.py:32] train/00149/eval_val/72 
I1203 08:12:52.425618 140333345224448 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 08:12:52.425709 140333345224448 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 08:12:52.425805 140333345224448 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 08:12:52.425893 140333345224448 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 08:12:52.425969 140333345224448 hlog.py:32] train/00149/eval_val/73/corr True
I1203 08:12:52.426041 140333345224448 hlog.py:32] train/00149/eval_val/73 
I1203 08:12:52.426111 140333345224448 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 08:12:52.426202 140333345224448 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 08:12:52.426297 140333345224448 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:12:52.426385 140333345224448 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:12:52.426462 140333345224448 hlog.py:32] train/00149/eval_val/74/corr True
I1203 08:12:52.426534 140333345224448 hlog.py:32] train/00149/eval_val/74 
I1203 08:12:52.426604 140333345224448 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 08:12:52.426697 140333345224448 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 08:12:52.426793 140333345224448 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 08:12:52.426880 140333345224448 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 08:12:52.426957 140333345224448 hlog.py:32] train/00149/eval_val/75/corr True
I1203 08:12:52.427029 140333345224448 hlog.py:32] train/00149/eval_val/75 
I1203 08:12:52.427099 140333345224448 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 08:12:52.427191 140333345224448 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 08:12:52.427288 140333345224448 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.427376 140333345224448 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 08:12:52.427482 140333345224448 hlog.py:32] train/00149/eval_val/76/corr True
I1203 08:12:52.427558 140333345224448 hlog.py:32] train/00149/eval_val/76 
I1203 08:12:52.427631 140333345224448 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 08:12:52.427745 140333345224448 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 08:12:52.427842 140333345224448 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:12:52.427929 140333345224448 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:12:52.428006 140333345224448 hlog.py:32] train/00149/eval_val/77/corr True
I1203 08:12:52.428079 140333345224448 hlog.py:32] train/00149/eval_val/77 
I1203 08:12:52.428149 140333345224448 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 08:12:52.428240 140333345224448 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 08:12:52.428335 140333345224448 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 08:12:52.428423 140333345224448 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 08:12:52.428501 140333345224448 hlog.py:32] train/00149/eval_val/78/corr True
I1203 08:12:52.428573 140333345224448 hlog.py:32] train/00149/eval_val/78 
I1203 08:12:52.428643 140333345224448 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 08:12:52.428735 140333345224448 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 08:12:52.428832 140333345224448 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 08:12:52.428920 140333345224448 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 08:12:52.428997 140333345224448 hlog.py:32] train/00149/eval_val/79/corr True
I1203 08:12:52.429069 140333345224448 hlog.py:32] train/00149/eval_val/79 
I1203 08:12:52.429139 140333345224448 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 08:12:52.429230 140333345224448 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 08:12:52.429326 140333345224448 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.429413 140333345224448 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.429491 140333345224448 hlog.py:32] train/00149/eval_val/80/corr True
I1203 08:12:52.429563 140333345224448 hlog.py:32] train/00149/eval_val/80 
I1203 08:12:52.429633 140333345224448 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 08:12:52.429720 140333345224448 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 08:12:52.429818 140333345224448 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) , _state ( B ) ) )
I1203 08:12:52.429906 140333345224448 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.429983 140333345224448 hlog.py:32] train/00149/eval_val/81/corr False
I1203 08:12:52.430055 140333345224448 hlog.py:32] train/00149/eval_val/81 
I1203 08:12:52.430126 140333345224448 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 08:12:52.430217 140333345224448 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 08:12:52.430313 140333345224448 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 08:12:52.430401 140333345224448 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 08:12:52.430477 140333345224448 hlog.py:32] train/00149/eval_val/82/corr True
I1203 08:12:52.430550 140333345224448 hlog.py:32] train/00149/eval_val/82 
I1203 08:12:52.430620 140333345224448 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 08:12:52.430715 140333345224448 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 08:12:52.430812 140333345224448 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( B , A ) , _state ( B ) ) ) )
I1203 08:12:52.430899 140333345224448 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 08:12:52.430976 140333345224448 hlog.py:32] train/00149/eval_val/83/corr False
I1203 08:12:52.431048 140333345224448 hlog.py:32] train/00149/eval_val/83 
I1203 08:12:52.431119 140333345224448 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 08:12:52.431210 140333345224448 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 08:12:52.431307 140333345224448 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 08:12:52.431394 140333345224448 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:12:52.431496 140333345224448 hlog.py:32] train/00149/eval_val/84/corr False
I1203 08:12:52.431571 140333345224448 hlog.py:32] train/00149/eval_val/84 
I1203 08:12:52.431644 140333345224448 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 08:12:52.431752 140333345224448 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 08:12:52.431848 140333345224448 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:12:52.431936 140333345224448 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 08:12:52.432012 140333345224448 hlog.py:32] train/00149/eval_val/85/corr True
I1203 08:12:52.432084 140333345224448 hlog.py:32] train/00149/eval_val/85 
I1203 08:12:52.432155 140333345224448 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 08:12:52.432243 140333345224448 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 08:12:52.432356 140333345224448 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( river , _ ) ) ) ) )
I1203 08:12:52.432449 140333345224448 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 08:12:52.432526 140333345224448 hlog.py:32] train/00149/eval_val/86/corr False
I1203 08:12:52.432598 140333345224448 hlog.py:32] train/00149/eval_val/86 
I1203 08:12:52.432668 140333345224448 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 08:12:52.432765 140333345224448 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 08:12:52.432876 140333345224448 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:12:52.432972 140333345224448 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:12:52.433050 140333345224448 hlog.py:32] train/00149/eval_val/87/corr True
I1203 08:12:52.433122 140333345224448 hlog.py:32] train/00149/eval_val/87 
I1203 08:12:52.433193 140333345224448 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 08:12:52.433285 140333345224448 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 08:12:52.433384 140333345224448 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 08:12:52.433473 140333345224448 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 08:12:52.433550 140333345224448 hlog.py:32] train/00149/eval_val/88/corr True
I1203 08:12:52.433627 140333345224448 hlog.py:32] train/00149/eval_val/88 
I1203 08:12:52.433699 140333345224448 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 08:12:52.433794 140333345224448 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 08:12:52.433901 140333345224448 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:12:52.433995 140333345224448 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:12:52.434072 140333345224448 hlog.py:32] train/00149/eval_val/89/corr True
I1203 08:12:52.434144 140333345224448 hlog.py:32] train/00149/eval_val/89 
I1203 08:12:52.434214 140333345224448 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 08:12:52.434311 140333345224448 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 08:12:52.434423 140333345224448 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 08:12:52.434518 140333345224448 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 08:12:52.434595 140333345224448 hlog.py:32] train/00149/eval_val/90/corr True
I1203 08:12:52.434668 140333345224448 hlog.py:32] train/00149/eval_val/90 
I1203 08:12:52.434738 140333345224448 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 08:12:52.434831 140333345224448 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 08:12:52.434933 140333345224448 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.435023 140333345224448 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.435100 140333345224448 hlog.py:32] train/00149/eval_val/91/corr True
I1203 08:12:52.435172 140333345224448 hlog.py:32] train/00149/eval_val/91 
I1203 08:12:52.435242 140333345224448 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 08:12:52.435334 140333345224448 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 08:12:52.435461 140333345224448 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.435556 140333345224448 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.435636 140333345224448 hlog.py:32] train/00149/eval_val/92/corr True
I1203 08:12:52.435723 140333345224448 hlog.py:32] train/00149/eval_val/92 
I1203 08:12:52.435794 140333345224448 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 08:12:52.435887 140333345224448 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 08:12:52.435988 140333345224448 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.436078 140333345224448 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.436155 140333345224448 hlog.py:32] train/00149/eval_val/93/corr True
I1203 08:12:52.436226 140333345224448 hlog.py:32] train/00149/eval_val/93 
I1203 08:12:52.436296 140333345224448 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 08:12:52.436389 140333345224448 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 08:12:52.436498 140333345224448 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.436589 140333345224448 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.436666 140333345224448 hlog.py:32] train/00149/eval_val/94/corr True
I1203 08:12:52.436738 140333345224448 hlog.py:32] train/00149/eval_val/94 
I1203 08:12:52.436809 140333345224448 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 08:12:52.436902 140333345224448 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 08:12:52.437004 140333345224448 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.437094 140333345224448 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.437171 140333345224448 hlog.py:32] train/00149/eval_val/95/corr True
I1203 08:12:52.437242 140333345224448 hlog.py:32] train/00149/eval_val/95 
I1203 08:12:52.437313 140333345224448 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 08:12:52.437408 140333345224448 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 08:12:52.437515 140333345224448 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 08:12:52.437608 140333345224448 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 08:12:52.437685 140333345224448 hlog.py:32] train/00149/eval_val/96/corr True
I1203 08:12:52.437757 140333345224448 hlog.py:32] train/00149/eval_val/96 
I1203 08:12:52.437827 140333345224448 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 08:12:52.437927 140333345224448 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 08:12:52.438065 140333345224448 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 08:12:52.438182 140333345224448 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 08:12:52.438261 140333345224448 hlog.py:32] train/00149/eval_val/97/corr True
I1203 08:12:52.438334 140333345224448 hlog.py:32] train/00149/eval_val/97 
I1203 08:12:52.438404 140333345224448 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 08:12:52.438498 140333345224448 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 08:12:52.438602 140333345224448 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 08:12:52.438694 140333345224448 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 08:12:52.438771 140333345224448 hlog.py:32] train/00149/eval_val/98/corr True
I1203 08:12:52.438843 140333345224448 hlog.py:32] train/00149/eval_val/98 
I1203 08:12:52.438914 140333345224448 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 08:12:52.439007 140333345224448 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 08:12:52.439111 140333345224448 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:12:52.439208 140333345224448 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 08:12:52.439285 140333345224448 hlog.py:32] train/00149/eval_val/99/corr True
I1203 08:12:52.439358 140333345224448 hlog.py:32] train/00149/eval_val/99 
I1203 08:12:52.439449 140333345224448 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 08:12:52.439545 140333345224448 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 08:12:52.439655 140333345224448 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1203 08:12:52.439762 140333345224448 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 08:12:52.439840 140333345224448 hlog.py:32] train/00149/eval_val/100/corr False
I1203 08:12:52.439912 140333345224448 hlog.py:32] train/00149/eval_val/100 
I1203 08:12:52.439983 140333345224448 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 08:12:52.440070 140333345224448 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 08:12:52.440179 140333345224448 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _lowest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 08:12:52.440272 140333345224448 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 08:12:52.440349 140333345224448 hlog.py:32] train/00149/eval_val/101/corr False
I1203 08:12:52.440421 140333345224448 hlog.py:32] train/00149/eval_val/101 
I1203 08:12:52.440492 140333345224448 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 08:12:52.440579 140333345224448 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 08:12:52.440681 140333345224448 hlog.py:32] train/00149/eval_val/102/pred ( A , _shortest ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( over ) ) ) ) )
I1203 08:12:52.440770 140333345224448 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 08:12:52.440847 140333345224448 hlog.py:32] train/00149/eval_val/102/corr False
I1203 08:12:52.440920 140333345224448 hlog.py:32] train/00149/eval_val/102 
I1203 08:12:52.440990 140333345224448 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 08:12:52.441081 140333345224448 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 08:12:52.441180 140333345224448 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 08:12:52.441268 140333345224448 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 08:12:52.441345 140333345224448 hlog.py:32] train/00149/eval_val/103/corr True
I1203 08:12:52.441418 140333345224448 hlog.py:32] train/00149/eval_val/103 
I1203 08:12:52.441488 140333345224448 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 08:12:52.441579 140333345224448 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 08:12:52.441677 140333345224448 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.441765 140333345224448 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.441842 140333345224448 hlog.py:32] train/00149/eval_val/104/corr True
I1203 08:12:52.441914 140333345224448 hlog.py:32] train/00149/eval_val/104 
I1203 08:12:52.441983 140333345224448 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 08:12:52.442075 140333345224448 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 08:12:52.442180 140333345224448 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 08:12:52.442269 140333345224448 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 08:12:52.442346 140333345224448 hlog.py:32] train/00149/eval_val/105/corr True
I1203 08:12:52.442418 140333345224448 hlog.py:32] train/00149/eval_val/105 
I1203 08:12:52.442489 140333345224448 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 08:12:52.442580 140333345224448 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 08:12:52.442678 140333345224448 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 08:12:52.442767 140333345224448 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 08:12:52.442844 140333345224448 hlog.py:32] train/00149/eval_val/106/corr True
I1203 08:12:52.442915 140333345224448 hlog.py:32] train/00149/eval_val/106 
I1203 08:12:52.442986 140333345224448 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 08:12:52.443077 140333345224448 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 08:12:52.443175 140333345224448 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.443264 140333345224448 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.443341 140333345224448 hlog.py:32] train/00149/eval_val/107/corr True
I1203 08:12:52.443439 140333345224448 hlog.py:32] train/00149/eval_val/107 
I1203 08:12:52.443524 140333345224448 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 08:12:52.443620 140333345224448 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 08:12:52.443736 140333345224448 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 08:12:52.443825 140333345224448 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 08:12:52.443902 140333345224448 hlog.py:32] train/00149/eval_val/108/corr True
I1203 08:12:52.443974 140333345224448 hlog.py:32] train/00149/eval_val/108 
I1203 08:12:52.444044 140333345224448 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 08:12:52.444136 140333345224448 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 08:12:52.444235 140333345224448 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 08:12:52.444324 140333345224448 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 08:12:52.444401 140333345224448 hlog.py:32] train/00149/eval_val/109/corr True
I1203 08:12:52.444472 140333345224448 hlog.py:32] train/00149/eval_val/109 
I1203 08:12:52.444543 140333345224448 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 08:12:52.444634 140333345224448 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 08:12:52.444733 140333345224448 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.444822 140333345224448 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 08:12:52.444899 140333345224448 hlog.py:32] train/00149/eval_val/110/corr True
I1203 08:12:52.444971 140333345224448 hlog.py:32] train/00149/eval_val/110 
I1203 08:12:52.445041 140333345224448 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 08:12:52.445138 140333345224448 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 08:12:52.445237 140333345224448 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 08:12:52.445326 140333345224448 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 08:12:52.445403 140333345224448 hlog.py:32] train/00149/eval_val/111/corr True
I1203 08:12:52.445475 140333345224448 hlog.py:32] train/00149/eval_val/111 
I1203 08:12:52.445545 140333345224448 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 08:12:52.445637 140333345224448 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 08:12:52.445735 140333345224448 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:12:52.445824 140333345224448 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 08:12:52.445901 140333345224448 hlog.py:32] train/00149/eval_val/112/corr True
I1203 08:12:52.445973 140333345224448 hlog.py:32] train/00149/eval_val/112 
I1203 08:12:52.446043 140333345224448 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 08:12:52.446135 140333345224448 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 08:12:52.446235 140333345224448 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:12:52.446323 140333345224448 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 08:12:52.446401 140333345224448 hlog.py:32] train/00149/eval_val/113/corr True
I1203 08:12:52.446472 140333345224448 hlog.py:32] train/00149/eval_val/113 
I1203 08:12:52.446543 140333345224448 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 08:12:52.446634 140333345224448 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 08:12:52.446733 140333345224448 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.446821 140333345224448 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 08:12:52.446898 140333345224448 hlog.py:32] train/00149/eval_val/114/corr True
I1203 08:12:52.446970 140333345224448 hlog.py:32] train/00149/eval_val/114 
I1203 08:12:52.447041 140333345224448 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 08:12:52.447133 140333345224448 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 08:12:52.447232 140333345224448 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 08:12:52.447322 140333345224448 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 08:12:52.447399 140333345224448 hlog.py:32] train/00149/eval_val/115/corr True
I1203 08:12:52.447498 140333345224448 hlog.py:32] train/00149/eval_val/115 
I1203 08:12:52.447571 140333345224448 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 08:12:52.447665 140333345224448 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 08:12:52.447779 140333345224448 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.447869 140333345224448 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 08:12:52.447946 140333345224448 hlog.py:32] train/00149/eval_val/116/corr True
I1203 08:12:52.448017 140333345224448 hlog.py:32] train/00149/eval_val/116 
I1203 08:12:52.448088 140333345224448 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 08:12:52.448187 140333345224448 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 08:12:52.448288 140333345224448 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.448379 140333345224448 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.448457 140333345224448 hlog.py:32] train/00149/eval_val/117/corr True
I1203 08:12:52.448528 140333345224448 hlog.py:32] train/00149/eval_val/117 
I1203 08:12:52.448598 140333345224448 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 08:12:52.448691 140333345224448 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 08:12:52.448792 140333345224448 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.448882 140333345224448 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.448959 140333345224448 hlog.py:32] train/00149/eval_val/118/corr True
I1203 08:12:52.449031 140333345224448 hlog.py:32] train/00149/eval_val/118 
I1203 08:12:52.449101 140333345224448 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 08:12:52.449194 140333345224448 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 08:12:52.449295 140333345224448 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.449386 140333345224448 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 08:12:52.449463 140333345224448 hlog.py:32] train/00149/eval_val/119/corr True
I1203 08:12:52.449535 140333345224448 hlog.py:32] train/00149/eval_val/119 
I1203 08:12:52.449605 140333345224448 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 08:12:52.449695 140333345224448 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 08:12:52.449785 140333345224448 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 08:12:52.449870 140333345224448 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 08:12:52.449947 140333345224448 hlog.py:32] train/00149/eval_val/120/corr True
I1203 08:12:52.450018 140333345224448 hlog.py:32] train/00149/eval_val/120 
I1203 08:12:52.450088 140333345224448 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 08:12:52.450178 140333345224448 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 08:12:52.450268 140333345224448 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 08:12:52.450353 140333345224448 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 08:12:52.450430 140333345224448 hlog.py:32] train/00149/eval_val/121/corr True
I1203 08:12:52.450502 140333345224448 hlog.py:32] train/00149/eval_val/121 
I1203 08:12:52.450572 140333345224448 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 08:12:52.450665 140333345224448 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 08:12:52.450766 140333345224448 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 08:12:52.450856 140333345224448 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 08:12:52.450934 140333345224448 hlog.py:32] train/00149/eval_val/122/corr True
I1203 08:12:52.451005 140333345224448 hlog.py:32] train/00149/eval_val/122 
I1203 08:12:52.451076 140333345224448 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 08:12:52.451168 140333345224448 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 08:12:52.451278 140333345224448 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 08:12:52.451369 140333345224448 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 08:12:52.451470 140333345224448 hlog.py:32] train/00149/eval_val/123/corr True
I1203 08:12:52.451545 140333345224448 hlog.py:32] train/00149/eval_val/123 
I1203 08:12:52.451617 140333345224448 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 08:12:52.451727 140333345224448 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 08:12:52.451829 140333345224448 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 08:12:52.451919 140333345224448 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 08:12:52.451997 140333345224448 hlog.py:32] train/00149/eval_val/124/corr True
I1203 08:12:52.452069 140333345224448 hlog.py:32] train/00149/eval_val/124 
I1203 08:12:52.452139 140333345224448 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 08:12:52.452231 140333345224448 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 08:12:52.452333 140333345224448 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 08:12:52.452423 140333345224448 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 08:12:52.452500 140333345224448 hlog.py:32] train/00149/eval_val/125/corr True
I1203 08:12:52.452571 140333345224448 hlog.py:32] train/00149/eval_val/125 
I1203 08:12:52.452641 140333345224448 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 08:12:52.452731 140333345224448 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 08:12:52.452826 140333345224448 hlog.py:32] train/00149/eval_val/126/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.452913 140333345224448 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.452990 140333345224448 hlog.py:32] train/00149/eval_val/126/corr False
I1203 08:12:52.453061 140333345224448 hlog.py:32] train/00149/eval_val/126 
I1203 08:12:52.453131 140333345224448 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 08:12:52.453220 140333345224448 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 08:12:52.453315 140333345224448 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.453403 140333345224448 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.453480 140333345224448 hlog.py:32] train/00149/eval_val/127/corr False
I1203 08:12:52.453551 140333345224448 hlog.py:32] train/00149/eval_val/127 
I1203 08:12:52.453622 140333345224448 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 08:12:52.577764 140333345224448 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 08:12:52.577901 140333345224448 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.577999 140333345224448 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.578084 140333345224448 hlog.py:32] train/00149/eval_val/128/corr False
I1203 08:12:52.578161 140333345224448 hlog.py:32] train/00149/eval_val/128 
I1203 08:12:52.578235 140333345224448 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 08:12:52.578336 140333345224448 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 08:12:52.578436 140333345224448 hlog.py:32] train/00149/eval_val/129/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.578526 140333345224448 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.578604 140333345224448 hlog.py:32] train/00149/eval_val/129/corr False
I1203 08:12:52.578677 140333345224448 hlog.py:32] train/00149/eval_val/129 
I1203 08:12:52.578748 140333345224448 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 08:12:52.578836 140333345224448 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 08:12:52.578936 140333345224448 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _loc ( B , A ) , _mountain ( B ) ) ) )
I1203 08:12:52.579023 140333345224448 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.579101 140333345224448 hlog.py:32] train/00149/eval_val/130/corr False
I1203 08:12:52.579173 140333345224448 hlog.py:32] train/00149/eval_val/130 
I1203 08:12:52.579243 140333345224448 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 08:12:52.579333 140333345224448 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 08:12:52.579453 140333345224448 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.579546 140333345224448 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.579626 140333345224448 hlog.py:32] train/00149/eval_val/131/corr False
I1203 08:12:52.579700 140333345224448 hlog.py:32] train/00149/eval_val/131 
I1203 08:12:52.579785 140333345224448 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 08:12:52.579872 140333345224448 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 08:12:52.579971 140333345224448 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _mountain ( B ) ) ) )
I1203 08:12:52.580058 140333345224448 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 08:12:52.580134 140333345224448 hlog.py:32] train/00149/eval_val/132/corr False
I1203 08:12:52.580206 140333345224448 hlog.py:32] train/00149/eval_val/132 
I1203 08:12:52.580276 140333345224448 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 08:12:52.580364 140333345224448 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 08:12:52.580467 140333345224448 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _state ( A ) , _loc ( C , A ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 08:12:52.580554 140333345224448 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 08:12:52.580631 140333345224448 hlog.py:32] train/00149/eval_val/133/corr False
I1203 08:12:52.580703 140333345224448 hlog.py:32] train/00149/eval_val/133 
I1203 08:12:52.580774 140333345224448 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 08:12:52.580861 140333345224448 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 08:12:52.580967 140333345224448 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) )
I1203 08:12:52.581061 140333345224448 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:12:52.581138 140333345224448 hlog.py:32] train/00149/eval_val/134/corr False
I1203 08:12:52.581211 140333345224448 hlog.py:32] train/00149/eval_val/134 
I1203 08:12:52.581281 140333345224448 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 08:12:52.581375 140333345224448 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 08:12:52.581482 140333345224448 hlog.py:32] train/00149/eval_val/135/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) )
I1203 08:12:52.581576 140333345224448 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 08:12:52.581654 140333345224448 hlog.py:32] train/00149/eval_val/135/corr False
I1203 08:12:52.581725 140333345224448 hlog.py:32] train/00149/eval_val/135 
I1203 08:12:52.581795 140333345224448 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 08:12:52.581884 140333345224448 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 08:12:52.581984 140333345224448 hlog.py:32] train/00149/eval_val/136/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.582073 140333345224448 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.582150 140333345224448 hlog.py:32] train/00149/eval_val/136/corr False
I1203 08:12:52.582221 140333345224448 hlog.py:32] train/00149/eval_val/136 
I1203 08:12:52.582291 140333345224448 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 08:12:52.582379 140333345224448 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 08:12:52.582479 140333345224448 hlog.py:32] train/00149/eval_val/137/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.582568 140333345224448 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.582645 140333345224448 hlog.py:32] train/00149/eval_val/137/corr False
I1203 08:12:52.582717 140333345224448 hlog.py:32] train/00149/eval_val/137 
I1203 08:12:52.582787 140333345224448 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 08:12:52.582875 140333345224448 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 08:12:52.582974 140333345224448 hlog.py:32] train/00149/eval_val/138/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.583063 140333345224448 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.583140 140333345224448 hlog.py:32] train/00149/eval_val/138/corr False
I1203 08:12:52.583212 140333345224448 hlog.py:32] train/00149/eval_val/138 
I1203 08:12:52.583283 140333345224448 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 08:12:52.583371 140333345224448 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 08:12:52.583494 140333345224448 hlog.py:32] train/00149/eval_val/139/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.583587 140333345224448 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 08:12:52.583666 140333345224448 hlog.py:32] train/00149/eval_val/139/corr False
I1203 08:12:52.583754 140333345224448 hlog.py:32] train/00149/eval_val/139 
I1203 08:12:52.583824 140333345224448 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 08:12:52.583912 140333345224448 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 08:12:52.584015 140333345224448 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:12:52.584108 140333345224448 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:12:52.584186 140333345224448 hlog.py:32] train/00149/eval_val/140/corr False
I1203 08:12:52.584263 140333345224448 hlog.py:32] train/00149/eval_val/140 
I1203 08:12:52.584334 140333345224448 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 08:12:52.584422 140333345224448 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 08:12:52.584525 140333345224448 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:12:52.584618 140333345224448 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 08:12:52.584695 140333345224448 hlog.py:32] train/00149/eval_val/141/corr False
I1203 08:12:52.584766 140333345224448 hlog.py:32] train/00149/eval_val/141 
I1203 08:12:52.584837 140333345224448 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 08:12:52.584936 140333345224448 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 08:12:52.585037 140333345224448 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 08:12:52.585129 140333345224448 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 08:12:52.585208 140333345224448 hlog.py:32] train/00149/eval_val/142/corr False
I1203 08:12:52.585293 140333345224448 hlog.py:32] train/00149/eval_val/142 
I1203 08:12:52.585363 140333345224448 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 08:12:52.585448 140333345224448 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 08:12:52.585546 140333345224448 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 08:12:52.585633 140333345224448 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 08:12:52.585710 140333345224448 hlog.py:32] train/00149/eval_val/143/corr False
I1203 08:12:52.585782 140333345224448 hlog.py:32] train/00149/eval_val/143 
I1203 08:12:52.585852 140333345224448 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 08:12:52.585937 140333345224448 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 08:12:52.586028 140333345224448 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 08:12:52.586115 140333345224448 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 08:12:52.586191 140333345224448 hlog.py:32] train/00149/eval_val/144/corr False
I1203 08:12:52.586263 140333345224448 hlog.py:32] train/00149/eval_val/144 
I1203 08:12:52.586333 140333345224448 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 08:12:52.586419 140333345224448 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 08:12:52.586517 140333345224448 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) )
I1203 08:12:52.586605 140333345224448 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 08:12:52.586681 140333345224448 hlog.py:32] train/00149/eval_val/145/corr False
I1203 08:12:52.586753 140333345224448 hlog.py:32] train/00149/eval_val/145 
I1203 08:12:52.586823 140333345224448 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 08:12:52.586912 140333345224448 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 08:12:52.587021 140333345224448 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _elevation ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1203 08:12:52.587117 140333345224448 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 08:12:52.587200 140333345224448 hlog.py:32] train/00149/eval_val/146/corr False
I1203 08:12:52.587272 140333345224448 hlog.py:32] train/00149/eval_val/146 
I1203 08:12:52.587342 140333345224448 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 08:12:52.587549 140333345224448 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 08:12:52.587791 140333345224448 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 08:12:52.587900 140333345224448 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 08:12:52.587987 140333345224448 hlog.py:32] train/00149/eval_val/147/corr True
I1203 08:12:52.588065 140333345224448 hlog.py:32] train/00149/eval_val/147 
I1203 08:12:52.588144 140333345224448 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 08:12:52.588229 140333345224448 hlog.py:32] train/00149/eval_val/acc 0.6622
I1203 08:12:52.618657 140333345224448 hlog.py:18] train/00149{16.00s}
I1203 08:12:52.620410 140333345224448 hlog.py:18] train{2454.31s}
