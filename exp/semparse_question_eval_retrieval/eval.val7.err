I1216 01:00:17.478699 140140099741440 hlog.py:24] # --noTEST
I1216 01:00:17.479063 140140099741440 hlog.py:24] # --seed=7
I1216 01:00:17.479149 140140099741440 hlog.py:24] # --dataset=semparse
I1216 01:00:17.479228 140140099741440 hlog.py:24] # --model_dir=model
I1216 01:00:17.479304 140140099741440 hlog.py:24] # --n_checkpoint=10
I1216 01:00:17.479379 140140099741440 hlog.py:24] # --nologtostderr
I1216 01:00:17.479466 140140099741440 hlog.py:24] # --noalsologtostderr
I1216 01:00:17.479540 140140099741440 hlog.py:24] # --log_dir=
I1216 01:00:17.479613 140140099741440 hlog.py:24] # --verbosity=0
I1216 01:00:17.479685 140140099741440 hlog.py:24] # --verbosity=0
I1216 01:00:17.479761 140140099741440 hlog.py:24] # --stderrthreshold=fatal
I1216 01:00:17.479832 140140099741440 hlog.py:24] # --showprefixforinfo
I1216 01:00:17.479904 140140099741440 hlog.py:24] # --nodedup
I1216 01:00:17.479975 140140099741440 hlog.py:24] # --nobuild_comp_table
I1216 01:00:17.480046 140140099741440 hlog.py:24] # --semparse_split=query
I1216 01:00:17.480118 140140099741440 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1216 01:00:17.480189 140140099741440 hlog.py:24] # --semparse_mrl=logic
I1216 01:00:17.480261 140140099741440 hlog.py:24] # --val_fold=8
I1216 01:00:17.480332 140140099741440 hlog.py:24] # --test_fold=9
I1216 01:00:17.480403 140140099741440 hlog.py:24] # --n_emb=64
I1216 01:00:17.480475 140140099741440 hlog.py:24] # --n_enc=512
I1216 01:00:17.480546 140140099741440 hlog.py:24] # --dropout=0.5
I1216 01:00:17.480617 140140099741440 hlog.py:24] # --copy_sup
I1216 01:00:17.480688 140140099741440 hlog.py:24] # --n_epochs=150
I1216 01:00:17.480759 140140099741440 hlog.py:24] # --n_epoch_batches=32
I1216 01:00:17.480831 140140099741440 hlog.py:24] # --n_batch=64
I1216 01:00:17.480902 140140099741440 hlog.py:24] # --lr=0.001
I1216 01:00:17.480973 140140099741440 hlog.py:24] # --clip=1.0
I1216 01:00:17.481045 140140099741440 hlog.py:24] # --sched_factor=0.5
I1216 01:00:17.481115 140140099741440 hlog.py:24] # --norun_with_pdb
I1216 01:00:17.481187 140140099741440 hlog.py:24] # --nopdb_post_mortem
I1216 01:00:17.481258 140140099741440 hlog.py:24] # --norun_with_profiling
I1216 01:00:17.481329 140140099741440 hlog.py:24] # --use_cprofile_for_profiling
I1216 01:00:17.481400 140140099741440 hlog.py:24] # --noonly_check_args
I1216 01:00:17.481471 140140099741440 hlog.py:24] # --augment=composed.val7.json
I1216 01:00:17.481542 140140099741440 hlog.py:24] # --aug_ratio=0.3
I1216 01:00:17.481614 140140099741440 hlog.py:24] # --noinvert
I1216 01:00:17.481685 140140099741440 hlog.py:24] # --nohelp
I1216 01:00:17.481756 140140099741440 hlog.py:24] # --nohelp
I1216 01:00:17.481828 140140099741440 hlog.py:24] # --nohelpshort
I1216 01:00:17.481899 140140099741440 hlog.py:24] # --nohelpfull
I1216 01:00:17.481970 140140099741440 hlog.py:24] # --nohelpxml
I1216 01:00:17.482041 140140099741440 hlog.py:24] # 
I1216 01:00:17.520206 140140099741440 hlog.py:32] train 543
I1216 01:00:17.520393 140140099741440 hlog.py:32] aug 836
I1216 01:00:33.410387 140140099741440 hlog.py:32] train/00000/loss 3.0824
I1216 01:00:40.709304 140140099741440 hlog.py:32] train/00000/eval_train/acc 0.0000
I1216 01:00:41.776275 140140099741440 hlog.py:32] train/00000/eval_val/acc 0.0000
I1216 01:00:41.777066 140140099741440 hlog.py:18] train/00000{20.46s}
I1216 01:00:53.404405 140140099741440 hlog.py:32] train/00001/loss 1.1166
I1216 01:00:56.209998 140140099741440 hlog.py:32] train/00001/eval_train/acc 0.0000
I1216 01:00:56.689480 140140099741440 hlog.py:32] train/00001/eval_val/acc 0.0000
I1216 01:00:56.689976 140140099741440 hlog.py:18] train/00001{14.91s}
I1216 01:01:09.340379 140140099741440 hlog.py:32] train/00002/loss 0.7798
I1216 01:01:16.222045 140140099741440 hlog.py:32] train/00002/eval_train/acc 0.0000
I1216 01:01:17.035986 140140099741440 hlog.py:32] train/00002/eval_val/acc 0.0000
I1216 01:01:17.036636 140140099741440 hlog.py:18] train/00002{20.35s}
I1216 01:01:29.881476 140140099741440 hlog.py:32] train/00003/loss 0.6362
I1216 01:01:33.070682 140140099741440 hlog.py:32] train/00003/eval_train/acc 0.0060
I1216 01:01:33.588053 140140099741440 hlog.py:32] train/00003/eval_val/acc 0.0000
I1216 01:01:33.588654 140140099741440 hlog.py:18] train/00003{16.55s}
I1216 01:01:44.730260 140140099741440 hlog.py:32] train/00004/loss 0.5312
I1216 01:01:48.410676 140140099741440 hlog.py:32] train/00004/eval_train/acc 0.0850
I1216 01:01:48.955450 140140099741440 hlog.py:32] train/00004/eval_val/acc 0.0000
I1216 01:01:48.955962 140140099741440 hlog.py:18] train/00004{15.37s}
I1216 01:02:01.509741 140140099741440 hlog.py:32] train/00005/loss 0.4411
I1216 01:02:05.328463 140140099741440 hlog.py:32] train/00005/eval_train/acc 0.1400
I1216 01:02:05.881523 140140099741440 hlog.py:32] train/00005/eval_val/acc 0.0000
I1216 01:02:05.882117 140140099741440 hlog.py:18] train/00005{16.93s}
I1216 01:02:17.546235 140140099741440 hlog.py:32] train/00006/loss 0.3942
I1216 01:02:21.397216 140140099741440 hlog.py:32] train/00006/eval_train/acc 0.0930
I1216 01:02:22.011114 140140099741440 hlog.py:32] train/00006/eval_val/acc 0.0000
I1216 01:02:22.011990 140140099741440 hlog.py:18] train/00006{16.13s}
I1216 01:02:33.822464 140140099741440 hlog.py:32] train/00007/loss 0.3391
I1216 01:02:37.067440 140140099741440 hlog.py:32] train/00007/eval_train/acc 0.2130
I1216 01:02:37.616883 140140099741440 hlog.py:32] train/00007/eval_val/acc 0.0000
I1216 01:02:37.617635 140140099741440 hlog.py:18] train/00007{15.61s}
I1216 01:02:49.991265 140140099741440 hlog.py:32] train/00008/loss 0.3020
I1216 01:02:53.539228 140140099741440 hlog.py:32] train/00008/eval_train/acc 0.2890
I1216 01:02:54.173707 140140099741440 hlog.py:32] train/00008/eval_val/acc 0.0000
I1216 01:02:54.174424 140140099741440 hlog.py:18] train/00008{16.56s}
I1216 01:03:05.325588 140140099741440 hlog.py:32] train/00009/loss 0.2752
I1216 01:03:09.047158 140140099741440 hlog.py:32] train/00009/eval_train/acc 0.3330
I1216 01:03:09.623843 140140099741440 hlog.py:32] train/00009/eval_val/acc 0.0203
I1216 01:03:09.739713 140140099741440 hlog.py:18] train/00009{15.57s}
I1216 01:03:20.811586 140140099741440 hlog.py:32] train/00010/loss 0.2381
I1216 01:03:25.103307 140140099741440 hlog.py:32] train/00010/eval_train/acc 0.4180
I1216 01:03:25.704802 140140099741440 hlog.py:32] train/00010/eval_val/acc 0.1014
I1216 01:03:25.705270 140140099741440 hlog.py:18] train/00010{15.97s}
I1216 01:03:37.626983 140140099741440 hlog.py:32] train/00011/loss 0.2434
I1216 01:03:42.239931 140140099741440 hlog.py:32] train/00011/eval_train/acc 0.4260
I1216 01:03:43.009897 140140099741440 hlog.py:32] train/00011/eval_val/acc 0.0878
I1216 01:03:43.010393 140140099741440 hlog.py:18] train/00011{17.31s}
I1216 01:03:54.996437 140140099741440 hlog.py:32] train/00012/loss 0.2039
I1216 01:03:58.811052 140140099741440 hlog.py:32] train/00012/eval_train/acc 0.4940
I1216 01:03:59.398471 140140099741440 hlog.py:32] train/00012/eval_val/acc 0.1486
I1216 01:03:59.398962 140140099741440 hlog.py:18] train/00012{16.39s}
I1216 01:04:10.513837 140140099741440 hlog.py:32] train/00013/loss 0.1777
I1216 01:04:14.444993 140140099741440 hlog.py:32] train/00013/eval_train/acc 0.5380
I1216 01:04:15.042623 140140099741440 hlog.py:32] train/00013/eval_val/acc 0.2568
I1216 01:04:15.043081 140140099741440 hlog.py:18] train/00013{15.64s}
I1216 01:04:27.396689 140140099741440 hlog.py:32] train/00014/loss 0.1687
I1216 01:04:31.608150 140140099741440 hlog.py:32] train/00014/eval_train/acc 0.5620
I1216 01:04:32.154304 140140099741440 hlog.py:32] train/00014/eval_val/acc 0.3986
I1216 01:04:32.154767 140140099741440 hlog.py:18] train/00014{17.11s}
I1216 01:04:43.823467 140140099741440 hlog.py:32] train/00015/loss 0.1704
I1216 01:04:47.588721 140140099741440 hlog.py:32] train/00015/eval_train/acc 0.5830
I1216 01:04:48.174113 140140099741440 hlog.py:32] train/00015/eval_val/acc 0.4257
I1216 01:04:48.174596 140140099741440 hlog.py:18] train/00015{16.02s}
I1216 01:05:00.291882 140140099741440 hlog.py:32] train/00016/loss 0.1483
I1216 01:05:04.223402 140140099741440 hlog.py:32] train/00016/eval_train/acc 0.6050
I1216 01:05:04.768240 140140099741440 hlog.py:32] train/00016/eval_val/acc 0.3378
I1216 01:05:04.768742 140140099741440 hlog.py:18] train/00016{16.59s}
I1216 01:05:16.572146 140140099741440 hlog.py:32] train/00017/loss 0.1248
I1216 01:05:20.372787 140140099741440 hlog.py:32] train/00017/eval_train/acc 0.6360
I1216 01:05:20.919365 140140099741440 hlog.py:32] train/00017/eval_val/acc 0.4662
I1216 01:05:20.919853 140140099741440 hlog.py:18] train/00017{16.15s}
I1216 01:05:32.424956 140140099741440 hlog.py:32] train/00018/loss 0.1221
I1216 01:05:36.264230 140140099741440 hlog.py:32] train/00018/eval_train/acc 0.6820
I1216 01:05:36.812436 140140099741440 hlog.py:32] train/00018/eval_val/acc 0.5473
I1216 01:05:36.812923 140140099741440 hlog.py:18] train/00018{15.89s}
I1216 01:05:48.189473 140140099741440 hlog.py:32] train/00019/loss 0.1019
I1216 01:05:52.189682 140140099741440 hlog.py:32] train/00019/eval_train/acc 0.7060
I1216 01:05:52.753542 140140099741440 hlog.py:32] train/00019/eval_val/acc 0.5135
I1216 01:05:52.784607 140140099741440 hlog.py:18] train/00019{15.97s}
I1216 01:06:04.938202 140140099741440 hlog.py:32] train/00020/loss 0.0974
I1216 01:06:08.875956 140140099741440 hlog.py:32] train/00020/eval_train/acc 0.7460
I1216 01:06:09.460670 140140099741440 hlog.py:32] train/00020/eval_val/acc 0.5135
I1216 01:06:09.461135 140140099741440 hlog.py:18] train/00020{16.68s}
I1216 01:06:21.242496 140140099741440 hlog.py:32] train/00021/loss 0.0902
I1216 01:06:25.163103 140140099741440 hlog.py:32] train/00021/eval_train/acc 0.7300
I1216 01:06:25.726714 140140099741440 hlog.py:32] train/00021/eval_val/acc 0.5405
I1216 01:06:25.727217 140140099741440 hlog.py:18] train/00021{16.27s}
I1216 01:06:37.908902 140140099741440 hlog.py:32] train/00022/loss 0.0914
I1216 01:06:42.072595 140140099741440 hlog.py:32] train/00022/eval_train/acc 0.7160
I1216 01:06:42.633312 140140099741440 hlog.py:32] train/00022/eval_val/acc 0.5811
I1216 01:06:42.633783 140140099741440 hlog.py:18] train/00022{16.91s}
I1216 01:06:54.376231 140140099741440 hlog.py:32] train/00023/loss 0.1060
I1216 01:06:58.427157 140140099741440 hlog.py:32] train/00023/eval_train/acc 0.7470
I1216 01:06:58.983787 140140099741440 hlog.py:32] train/00023/eval_val/acc 0.5000
I1216 01:06:58.984289 140140099741440 hlog.py:18] train/00023{16.35s}
I1216 01:07:11.247983 140140099741440 hlog.py:32] train/00024/loss 0.0858
I1216 01:07:15.040739 140140099741440 hlog.py:32] train/00024/eval_train/acc 0.7400
I1216 01:07:15.607649 140140099741440 hlog.py:32] train/00024/eval_val/acc 0.5541
I1216 01:07:15.608178 140140099741440 hlog.py:18] train/00024{16.62s}
I1216 01:07:27.658555 140140099741440 hlog.py:32] train/00025/loss 0.0797
I1216 01:07:31.385612 140140099741440 hlog.py:32] train/00025/eval_train/acc 0.8290
I1216 01:07:32.016803 140140099741440 hlog.py:32] train/00025/eval_val/acc 0.5203
I1216 01:07:32.017352 140140099741440 hlog.py:18] train/00025{16.41s}
I1216 01:07:44.076035 140140099741440 hlog.py:32] train/00026/loss 0.0795
I1216 01:07:47.941637 140140099741440 hlog.py:32] train/00026/eval_train/acc 0.8160
I1216 01:07:48.502393 140140099741440 hlog.py:32] train/00026/eval_val/acc 0.6081
I1216 01:07:48.502962 140140099741440 hlog.py:18] train/00026{16.49s}
I1216 01:08:01.096645 140140099741440 hlog.py:32] train/00027/loss 0.0832
I1216 01:08:04.796077 140140099741440 hlog.py:32] train/00027/eval_train/acc 0.8360
I1216 01:08:05.346827 140140099741440 hlog.py:32] train/00027/eval_val/acc 0.6081
I1216 01:08:05.347273 140140099741440 hlog.py:18] train/00027{16.84s}
I1216 01:08:16.471828 140140099741440 hlog.py:32] train/00028/loss 0.0781
I1216 01:08:20.469252 140140099741440 hlog.py:32] train/00028/eval_train/acc 0.8100
I1216 01:08:21.020356 140140099741440 hlog.py:32] train/00028/eval_val/acc 0.5068
I1216 01:08:21.020875 140140099741440 hlog.py:18] train/00028{15.67s}
I1216 01:08:32.796318 140140099741440 hlog.py:32] train/00029/loss 0.0717
I1216 01:08:36.867283 140140099741440 hlog.py:32] train/00029/eval_train/acc 0.8140
I1216 01:08:37.461874 140140099741440 hlog.py:32] train/00029/eval_val/acc 0.6554
I1216 01:08:37.492772 140140099741440 hlog.py:18] train/00029{16.47s}
I1216 01:08:49.876594 140140099741440 hlog.py:32] train/00030/loss 0.0603
I1216 01:08:53.733993 140140099741440 hlog.py:32] train/00030/eval_train/acc 0.8580
I1216 01:08:54.298678 140140099741440 hlog.py:32] train/00030/eval_val/acc 0.5811
I1216 01:08:54.299189 140140099741440 hlog.py:18] train/00030{16.81s}
I1216 01:09:06.028646 140140099741440 hlog.py:32] train/00031/loss 0.0637
I1216 01:09:10.162090 140140099741440 hlog.py:32] train/00031/eval_train/acc 0.8360
I1216 01:09:10.801293 140140099741440 hlog.py:32] train/00031/eval_val/acc 0.5270
I1216 01:09:10.801825 140140099741440 hlog.py:18] train/00031{16.50s}
I1216 01:09:22.393333 140140099741440 hlog.py:32] train/00032/loss 0.0541
I1216 01:09:26.103782 140140099741440 hlog.py:32] train/00032/eval_train/acc 0.8400
I1216 01:09:26.678594 140140099741440 hlog.py:32] train/00032/eval_val/acc 0.5946
I1216 01:09:26.679015 140140099741440 hlog.py:18] train/00032{15.88s}
I1216 01:09:38.892036 140140099741440 hlog.py:32] train/00033/loss 0.0616
I1216 01:09:42.819183 140140099741440 hlog.py:32] train/00033/eval_train/acc 0.8770
I1216 01:09:43.399295 140140099741440 hlog.py:32] train/00033/eval_val/acc 0.6081
I1216 01:09:43.399828 140140099741440 hlog.py:18] train/00033{16.72s}
I1216 01:09:55.360736 140140099741440 hlog.py:32] train/00034/loss 0.0528
I1216 01:09:59.115994 140140099741440 hlog.py:32] train/00034/eval_train/acc 0.8820
I1216 01:09:59.664518 140140099741440 hlog.py:32] train/00034/eval_val/acc 0.6284
I1216 01:09:59.664995 140140099741440 hlog.py:18] train/00034{16.27s}
I1216 01:10:11.158068 140140099741440 hlog.py:32] train/00035/loss 0.0466
I1216 01:10:15.056226 140140099741440 hlog.py:32] train/00035/eval_train/acc 0.9150
I1216 01:10:15.641742 140140099741440 hlog.py:32] train/00035/eval_val/acc 0.7027
I1216 01:10:15.642290 140140099741440 hlog.py:18] train/00035{15.98s}
I1216 01:10:27.351282 140140099741440 hlog.py:32] train/00036/loss 0.0419
I1216 01:10:31.232037 140140099741440 hlog.py:32] train/00036/eval_train/acc 0.9290
I1216 01:10:31.826577 140140099741440 hlog.py:32] train/00036/eval_val/acc 0.6824
I1216 01:10:31.826996 140140099741440 hlog.py:18] train/00036{16.18s}
I1216 01:10:43.876936 140140099741440 hlog.py:32] train/00037/loss 0.0430
I1216 01:10:48.053349 140140099741440 hlog.py:32] train/00037/eval_train/acc 0.9220
I1216 01:10:48.630420 140140099741440 hlog.py:32] train/00037/eval_val/acc 0.6419
I1216 01:10:48.630957 140140099741440 hlog.py:18] train/00037{16.80s}
I1216 01:11:00.409519 140140099741440 hlog.py:32] train/00038/loss 0.0522
I1216 01:11:04.350001 140140099741440 hlog.py:32] train/00038/eval_train/acc 0.9290
I1216 01:11:04.943397 140140099741440 hlog.py:32] train/00038/eval_val/acc 0.6554
I1216 01:11:04.943955 140140099741440 hlog.py:18] train/00038{16.31s}
I1216 01:11:16.324310 140140099741440 hlog.py:32] train/00039/loss 0.0764
I1216 01:11:20.238642 140140099741440 hlog.py:32] train/00039/eval_train/acc 0.8630
I1216 01:11:20.876360 140140099741440 hlog.py:32] train/00039/eval_val/acc 0.5541
I1216 01:11:20.906555 140140099741440 hlog.py:18] train/00039{15.96s}
I1216 01:11:32.527876 140140099741440 hlog.py:32] train/00040/loss 0.0585
I1216 01:11:37.253846 140140099741440 hlog.py:32] train/00040/eval_train/acc 0.9040
I1216 01:11:37.826253 140140099741440 hlog.py:32] train/00040/eval_val/acc 0.6486
I1216 01:11:37.826862 140140099741440 hlog.py:18] train/00040{16.92s}
I1216 01:11:48.912929 140140099741440 hlog.py:32] train/00041/loss 0.0550
I1216 01:11:52.700847 140140099741440 hlog.py:32] train/00041/eval_train/acc 0.9220
I1216 01:11:53.257379 140140099741440 hlog.py:32] train/00041/eval_val/acc 0.5811
I1216 01:11:53.257915 140140099741440 hlog.py:18] train/00041{15.43s}
I1216 01:12:05.471734 140140099741440 hlog.py:32] train/00042/loss 0.0664
I1216 01:12:10.238749 140140099741440 hlog.py:32] train/00042/eval_train/acc 0.8840
I1216 01:12:10.802093 140140099741440 hlog.py:32] train/00042/eval_val/acc 0.5608
I1216 01:12:10.802569 140140099741440 hlog.py:18] train/00042{17.54s}
I1216 01:12:22.778815 140140099741440 hlog.py:32] train/00043/loss 0.0537
I1216 01:12:26.508126 140140099741440 hlog.py:32] train/00043/eval_train/acc 0.9000
I1216 01:12:27.080266 140140099741440 hlog.py:32] train/00043/eval_val/acc 0.6622
I1216 01:12:27.080848 140140099741440 hlog.py:18] train/00043{16.28s}
I1216 01:12:39.261544 140140099741440 hlog.py:32] train/00044/loss 0.0415
I1216 01:12:43.105870 140140099741440 hlog.py:32] train/00044/eval_train/acc 0.9570
I1216 01:12:43.642850 140140099741440 hlog.py:32] train/00044/eval_val/acc 0.6284
I1216 01:12:43.643386 140140099741440 hlog.py:18] train/00044{16.56s}
I1216 01:12:55.465042 140140099741440 hlog.py:32] train/00045/loss 0.0366
I1216 01:12:59.795195 140140099741440 hlog.py:32] train/00045/eval_train/acc 0.9280
I1216 01:13:00.448474 140140099741440 hlog.py:32] train/00045/eval_val/acc 0.7095
I1216 01:13:00.449152 140140099741440 hlog.py:18] train/00045{16.81s}
I1216 01:13:11.977668 140140099741440 hlog.py:32] train/00046/loss 0.0464
I1216 01:13:15.973481 140140099741440 hlog.py:32] train/00046/eval_train/acc 0.9060
I1216 01:13:16.531290 140140099741440 hlog.py:32] train/00046/eval_val/acc 0.7095
I1216 01:13:16.531801 140140099741440 hlog.py:18] train/00046{16.08s}
I1216 01:13:28.674207 140140099741440 hlog.py:32] train/00047/loss 0.0407
I1216 01:13:32.822367 140140099741440 hlog.py:32] train/00047/eval_train/acc 0.9330
I1216 01:13:33.406635 140140099741440 hlog.py:32] train/00047/eval_val/acc 0.6554
I1216 01:13:33.407135 140140099741440 hlog.py:18] train/00047{16.88s}
I1216 01:13:45.860294 140140099741440 hlog.py:32] train/00048/loss 0.0331
I1216 01:13:49.890033 140140099741440 hlog.py:32] train/00048/eval_train/acc 0.9600
I1216 01:13:50.467241 140140099741440 hlog.py:32] train/00048/eval_val/acc 0.6757
I1216 01:13:50.467977 140140099741440 hlog.py:18] train/00048{17.06s}
I1216 01:14:03.060417 140140099741440 hlog.py:32] train/00049/loss 0.0409
I1216 01:14:06.882828 140140099741440 hlog.py:32] train/00049/eval_train/acc 0.9380
I1216 01:14:07.454143 140140099741440 hlog.py:32] train/00049/eval_val/acc 0.7027
I1216 01:14:07.482953 140140099741440 hlog.py:18] train/00049{17.01s}
I1216 01:14:19.222269 140140099741440 hlog.py:32] train/00050/loss 0.0293
I1216 01:14:23.315889 140140099741440 hlog.py:32] train/00050/eval_train/acc 0.9730
I1216 01:14:23.950289 140140099741440 hlog.py:32] train/00050/eval_val/acc 0.7365
I1216 01:14:23.950824 140140099741440 hlog.py:18] train/00050{16.47s}
I1216 01:14:35.436669 140140099741440 hlog.py:32] train/00051/loss 0.0261
I1216 01:14:39.376099 140140099741440 hlog.py:32] train/00051/eval_train/acc 0.9510
I1216 01:14:40.023082 140140099741440 hlog.py:32] train/00051/eval_val/acc 0.7162
I1216 01:14:40.023645 140140099741440 hlog.py:18] train/00051{16.07s}
I1216 01:14:51.948934 140140099741440 hlog.py:32] train/00052/loss 0.0286
I1216 01:14:55.561099 140140099741440 hlog.py:32] train/00052/eval_train/acc 0.9780
I1216 01:14:56.121894 140140099741440 hlog.py:32] train/00052/eval_val/acc 0.8041
I1216 01:14:56.122339 140140099741440 hlog.py:18] train/00052{16.10s}
I1216 01:15:08.763438 140140099741440 hlog.py:32] train/00053/loss 0.0255
I1216 01:15:12.922390 140140099741440 hlog.py:32] train/00053/eval_train/acc 0.9640
I1216 01:15:13.482133 140140099741440 hlog.py:32] train/00053/eval_val/acc 0.7500
I1216 01:15:13.482623 140140099741440 hlog.py:18] train/00053{17.36s}
I1216 01:15:25.502739 140140099741440 hlog.py:32] train/00054/loss 0.0250
I1216 01:15:29.213590 140140099741440 hlog.py:32] train/00054/eval_train/acc 0.9790
I1216 01:15:29.785457 140140099741440 hlog.py:32] train/00054/eval_val/acc 0.7432
I1216 01:15:29.786270 140140099741440 hlog.py:18] train/00054{16.30s}
I1216 01:15:41.711419 140140099741440 hlog.py:32] train/00055/loss 0.0259
I1216 01:15:46.022258 140140099741440 hlog.py:32] train/00055/eval_train/acc 0.9860
I1216 01:15:46.614287 140140099741440 hlog.py:32] train/00055/eval_val/acc 0.7432
I1216 01:15:46.614840 140140099741440 hlog.py:18] train/00055{16.83s}
I1216 01:15:58.590146 140140099741440 hlog.py:32] train/00056/loss 0.0328
I1216 01:16:02.284727 140140099741440 hlog.py:32] train/00056/eval_train/acc 0.9750
I1216 01:16:02.856751 140140099741440 hlog.py:32] train/00056/eval_val/acc 0.7500
I1216 01:16:02.857219 140140099741440 hlog.py:18] train/00056{16.24s}
I1216 01:16:15.744277 140140099741440 hlog.py:32] train/00057/loss 0.0357
I1216 01:16:19.384540 140140099741440 hlog.py:32] train/00057/eval_train/acc 0.9770
I1216 01:16:19.943440 140140099741440 hlog.py:32] train/00057/eval_val/acc 0.7432
I1216 01:16:19.943898 140140099741440 hlog.py:18] train/00057{17.09s}
I1216 01:16:32.154965 140140099741440 hlog.py:32] train/00058/loss 0.0374
I1216 01:16:35.855241 140140099741440 hlog.py:32] train/00058/eval_train/acc 0.9800
I1216 01:16:36.414295 140140099741440 hlog.py:32] train/00058/eval_val/acc 0.7365
I1216 01:16:36.414777 140140099741440 hlog.py:18] train/00058{16.47s}
I1216 01:16:47.697209 140140099741440 hlog.py:32] train/00059/loss 0.0347
I1216 01:16:51.382557 140140099741440 hlog.py:32] train/00059/eval_train/acc 0.9750
I1216 01:16:51.967732 140140099741440 hlog.py:32] train/00059/eval_val/acc 0.7703
I1216 01:16:51.999058 140140099741440 hlog.py:18] train/00059{15.58s}
I1216 01:17:04.268979 140140099741440 hlog.py:32] train/00060/loss 0.0299
I1216 01:17:08.003222 140140099741440 hlog.py:32] train/00060/eval_train/acc 0.9890
I1216 01:17:08.574532 140140099741440 hlog.py:32] train/00060/eval_val/acc 0.7770
I1216 01:17:08.575002 140140099741440 hlog.py:18] train/00060{16.58s}
I1216 01:17:20.636327 140140099741440 hlog.py:32] train/00061/loss 0.0253
I1216 01:17:25.105859 140140099741440 hlog.py:32] train/00061/eval_train/acc 0.9840
I1216 01:17:25.669734 140140099741440 hlog.py:32] train/00061/eval_val/acc 0.7905
I1216 01:17:25.670205 140140099741440 hlog.py:18] train/00061{17.10s}
I1216 01:17:37.716085 140140099741440 hlog.py:32] train/00062/loss 0.0279
I1216 01:17:41.681670 140140099741440 hlog.py:32] train/00062/eval_train/acc 0.9790
I1216 01:17:42.292919 140140099741440 hlog.py:32] train/00062/eval_val/acc 0.8176
I1216 01:17:42.293410 140140099741440 hlog.py:18] train/00062{16.62s}
I1216 01:17:54.461621 140140099741440 hlog.py:32] train/00063/loss 0.0315
I1216 01:17:58.403710 140140099741440 hlog.py:32] train/00063/eval_train/acc 0.9660
I1216 01:17:58.946813 140140099741440 hlog.py:32] train/00063/eval_val/acc 0.7838
I1216 01:17:58.947330 140140099741440 hlog.py:18] train/00063{16.65s}
I1216 01:18:11.501547 140140099741440 hlog.py:32] train/00064/loss 0.0273
I1216 01:18:15.412637 140140099741440 hlog.py:32] train/00064/eval_train/acc 0.9830
I1216 01:18:15.965760 140140099741440 hlog.py:32] train/00064/eval_val/acc 0.7770
I1216 01:18:15.966265 140140099741440 hlog.py:18] train/00064{17.02s}
I1216 01:18:28.384900 140140099741440 hlog.py:32] train/00065/loss 0.0338
I1216 01:18:32.444570 140140099741440 hlog.py:32] train/00065/eval_train/acc 0.9620
I1216 01:18:33.025969 140140099741440 hlog.py:32] train/00065/eval_val/acc 0.7500
I1216 01:18:33.026472 140140099741440 hlog.py:18] train/00065{17.06s}
I1216 01:18:45.265026 140140099741440 hlog.py:32] train/00066/loss 0.0275
I1216 01:18:49.062815 140140099741440 hlog.py:32] train/00066/eval_train/acc 0.9770
I1216 01:18:49.625253 140140099741440 hlog.py:32] train/00066/eval_val/acc 0.7838
I1216 01:18:49.625831 140140099741440 hlog.py:18] train/00066{16.60s}
I1216 01:19:01.249393 140140099741440 hlog.py:32] train/00067/loss 0.0222
I1216 01:19:04.859001 140140099741440 hlog.py:32] train/00067/eval_train/acc 0.9840
I1216 01:19:05.402102 140140099741440 hlog.py:32] train/00067/eval_val/acc 0.8311
I1216 01:19:05.402576 140140099741440 hlog.py:18] train/00067{15.78s}
I1216 01:19:17.070653 140140099741440 hlog.py:32] train/00068/loss 0.0346
I1216 01:19:21.570164 140140099741440 hlog.py:32] train/00068/eval_train/acc 0.9880
I1216 01:19:22.124451 140140099741440 hlog.py:32] train/00068/eval_val/acc 0.7432
I1216 01:19:22.124919 140140099741440 hlog.py:18] train/00068{16.72s}
I1216 01:19:34.150510 140140099741440 hlog.py:32] train/00069/loss 0.0240
I1216 01:19:38.521350 140140099741440 hlog.py:32] train/00069/eval_train/acc 0.9840
I1216 01:19:39.096837 140140099741440 hlog.py:32] train/00069/eval_val/acc 0.7838
I1216 01:19:39.129140 140140099741440 hlog.py:18] train/00069{17.00s}
I1216 01:19:50.164562 140140099741440 hlog.py:32] train/00070/loss 0.0315
I1216 01:19:53.912170 140140099741440 hlog.py:32] train/00070/eval_train/acc 0.9760
I1216 01:19:54.485435 140140099741440 hlog.py:32] train/00070/eval_val/acc 0.7905
I1216 01:19:54.486025 140140099741440 hlog.py:18] train/00070{15.36s}
I1216 01:20:06.513487 140140099741440 hlog.py:32] train/00071/loss 0.0326
I1216 01:20:10.358021 140140099741440 hlog.py:32] train/00071/eval_train/acc 0.9680
I1216 01:20:10.958508 140140099741440 hlog.py:32] train/00071/eval_val/acc 0.8041
I1216 01:20:10.959018 140140099741440 hlog.py:18] train/00071{16.47s}
I1216 01:20:23.023009 140140099741440 hlog.py:32] train/00072/loss 0.0269
I1216 01:20:26.952789 140140099741440 hlog.py:32] train/00072/eval_train/acc 0.9690
I1216 01:20:27.499371 140140099741440 hlog.py:32] train/00072/eval_val/acc 0.7365
I1216 01:20:27.499890 140140099741440 hlog.py:18] train/00072{16.54s}
I1216 01:20:39.454638 140140099741440 hlog.py:32] train/00073/loss 0.0253
I1216 01:20:43.526846 140140099741440 hlog.py:32] train/00073/eval_train/acc 0.9870
I1216 01:20:44.087774 140140099741440 hlog.py:32] train/00073/eval_val/acc 0.7838
I1216 01:20:44.088232 140140099741440 hlog.py:18] train/00073{16.59s}
I1216 01:20:55.665416 140140099741440 hlog.py:32] train/00074/loss 0.0204
I1216 01:20:59.711493 140140099741440 hlog.py:32] train/00074/eval_train/acc 0.9810
I1216 01:21:00.272486 140140099741440 hlog.py:32] train/00074/eval_val/acc 0.8108
I1216 01:21:00.273018 140140099741440 hlog.py:18] train/00074{16.18s}
I1216 01:21:12.581975 140140099741440 hlog.py:32] train/00075/loss 0.0259
I1216 01:21:16.379424 140140099741440 hlog.py:32] train/00075/eval_train/acc 0.9770
I1216 01:21:16.927854 140140099741440 hlog.py:32] train/00075/eval_val/acc 0.7905
I1216 01:21:16.928320 140140099741440 hlog.py:18] train/00075{16.66s}
I1216 01:21:28.950917 140140099741440 hlog.py:32] train/00076/loss 0.0270
I1216 01:21:32.891755 140140099741440 hlog.py:32] train/00076/eval_train/acc 0.9740
I1216 01:21:33.469527 140140099741440 hlog.py:32] train/00076/eval_val/acc 0.8041
I1216 01:21:33.470008 140140099741440 hlog.py:18] train/00076{16.54s}
I1216 01:21:44.927682 140140099741440 hlog.py:32] train/00077/loss 0.0278
I1216 01:21:48.700143 140140099741440 hlog.py:32] train/00077/eval_train/acc 0.9800
I1216 01:21:49.277179 140140099741440 hlog.py:32] train/00077/eval_val/acc 0.8176
I1216 01:21:49.277658 140140099741440 hlog.py:18] train/00077{15.81s}
I1216 01:22:01.032670 140140099741440 hlog.py:32] train/00078/loss 0.0206
I1216 01:22:04.746232 140140099741440 hlog.py:32] train/00078/eval_train/acc 0.9930
I1216 01:22:05.333381 140140099741440 hlog.py:32] train/00078/eval_val/acc 0.8041
I1216 01:22:05.333938 140140099741440 hlog.py:18] train/00078{16.06s}
I1216 01:22:16.687503 140140099741440 hlog.py:32] train/00079/loss 0.0196
I1216 01:22:20.444595 140140099741440 hlog.py:32] train/00079/eval_train/acc 0.9940
I1216 01:22:20.997111 140140099741440 hlog.py:32] train/00079/eval_val/acc 0.8176
I1216 01:22:21.026968 140140099741440 hlog.py:18] train/00079{15.69s}
I1216 01:22:33.165644 140140099741440 hlog.py:32] train/00080/loss 0.0176
I1216 01:22:37.022376 140140099741440 hlog.py:32] train/00080/eval_train/acc 0.9830
I1216 01:22:37.597240 140140099741440 hlog.py:32] train/00080/eval_val/acc 0.8311
I1216 01:22:37.597718 140140099741440 hlog.py:18] train/00080{16.57s}
I1216 01:22:49.206489 140140099741440 hlog.py:32] train/00081/loss 0.0158
I1216 01:22:53.175518 140140099741440 hlog.py:32] train/00081/eval_train/acc 0.9960
I1216 01:22:53.746564 140140099741440 hlog.py:32] train/00081/eval_val/acc 0.8243
I1216 01:22:53.747048 140140099741440 hlog.py:18] train/00081{16.15s}
I1216 01:23:05.494042 140140099741440 hlog.py:32] train/00082/loss 0.0121
I1216 01:23:09.330223 140140099741440 hlog.py:32] train/00082/eval_train/acc 0.9970
I1216 01:23:09.886015 140140099741440 hlog.py:32] train/00082/eval_val/acc 0.8243
I1216 01:23:09.886492 140140099741440 hlog.py:18] train/00082{16.14s}
I1216 01:23:21.628893 140140099741440 hlog.py:32] train/00083/loss 0.0114
I1216 01:23:25.586778 140140099741440 hlog.py:32] train/00083/eval_train/acc 0.9990
I1216 01:23:26.170530 140140099741440 hlog.py:32] train/00083/eval_val/acc 0.8176
I1216 01:23:26.170997 140140099741440 hlog.py:18] train/00083{16.28s}
I1216 01:23:37.658320 140140099741440 hlog.py:32] train/00084/loss 0.0101
I1216 01:23:41.476706 140140099741440 hlog.py:32] train/00084/eval_train/acc 0.9980
I1216 01:23:42.062002 140140099741440 hlog.py:32] train/00084/eval_val/acc 0.8514
I1216 01:23:42.062473 140140099741440 hlog.py:18] train/00084{15.89s}
I1216 01:23:53.804626 140140099741440 hlog.py:32] train/00085/loss 0.0142
I1216 01:23:57.624207 140140099741440 hlog.py:32] train/00085/eval_train/acc 0.9960
I1216 01:23:58.229427 140140099741440 hlog.py:32] train/00085/eval_val/acc 0.8446
I1216 01:23:58.229974 140140099741440 hlog.py:18] train/00085{16.17s}
I1216 01:24:09.499453 140140099741440 hlog.py:32] train/00086/loss 0.0146
I1216 01:24:13.345643 140140099741440 hlog.py:32] train/00086/eval_train/acc 0.9950
I1216 01:24:13.927153 140140099741440 hlog.py:32] train/00086/eval_val/acc 0.8108
I1216 01:24:13.927688 140140099741440 hlog.py:18] train/00086{15.70s}
I1216 01:24:25.822463 140140099741440 hlog.py:32] train/00087/loss 0.0096
I1216 01:24:29.714029 140140099741440 hlog.py:32] train/00087/eval_train/acc 0.9980
I1216 01:24:30.322098 140140099741440 hlog.py:32] train/00087/eval_val/acc 0.8378
I1216 01:24:30.322581 140140099741440 hlog.py:18] train/00087{16.39s}
I1216 01:24:42.081027 140140099741440 hlog.py:32] train/00088/loss 0.0096
I1216 01:24:45.923190 140140099741440 hlog.py:32] train/00088/eval_train/acc 1.0000
I1216 01:24:46.506014 140140099741440 hlog.py:32] train/00088/eval_val/acc 0.8378
I1216 01:24:46.506482 140140099741440 hlog.py:18] train/00088{16.18s}
I1216 01:24:58.015355 140140099741440 hlog.py:32] train/00089/loss 0.0090
I1216 01:25:02.039706 140140099741440 hlog.py:32] train/00089/eval_train/acc 0.9980
I1216 01:25:02.605542 140140099741440 hlog.py:32] train/00089/eval_val/acc 0.8311
I1216 01:25:02.636005 140140099741440 hlog.py:18] train/00089{16.13s}
I1216 01:25:14.123612 140140099741440 hlog.py:32] train/00090/loss 0.0076
I1216 01:25:18.258668 140140099741440 hlog.py:32] train/00090/eval_train/acc 0.9970
I1216 01:25:18.835125 140140099741440 hlog.py:32] train/00090/eval_val/acc 0.8311
I1216 01:25:18.835653 140140099741440 hlog.py:18] train/00090{16.20s}
I1216 01:25:30.960015 140140099741440 hlog.py:32] train/00091/loss 0.0075
I1216 01:25:35.035273 140140099741440 hlog.py:32] train/00091/eval_train/acc 0.9980
I1216 01:25:35.625056 140140099741440 hlog.py:32] train/00091/eval_val/acc 0.8243
I1216 01:25:35.625530 140140099741440 hlog.py:18] train/00091{16.79s}
I1216 01:25:46.863250 140140099741440 hlog.py:32] train/00092/loss 0.0082
I1216 01:25:50.936635 140140099741440 hlog.py:32] train/00092/eval_train/acc 0.9980
I1216 01:25:51.518968 140140099741440 hlog.py:32] train/00092/eval_val/acc 0.8311
I1216 01:25:51.519494 140140099741440 hlog.py:18] train/00092{15.89s}
I1216 01:26:02.839753 140140099741440 hlog.py:32] train/00093/loss 0.0100
I1216 01:26:06.648490 140140099741440 hlog.py:32] train/00093/eval_train/acc 0.9960
I1216 01:26:07.232847 140140099741440 hlog.py:32] train/00093/eval_val/acc 0.8446
I1216 01:26:07.233340 140140099741440 hlog.py:18] train/00093{15.71s}
I1216 01:26:19.931768 140140099741440 hlog.py:32] train/00094/loss 0.0075
I1216 01:26:23.850534 140140099741440 hlog.py:32] train/00094/eval_train/acc 1.0000
I1216 01:26:24.451450 140140099741440 hlog.py:32] train/00094/eval_val/acc 0.8108
I1216 01:26:24.451963 140140099741440 hlog.py:18] train/00094{17.22s}
I1216 01:26:36.917485 140140099741440 hlog.py:32] train/00095/loss 0.0089
I1216 01:26:41.107584 140140099741440 hlog.py:32] train/00095/eval_train/acc 0.9980
I1216 01:26:41.704399 140140099741440 hlog.py:32] train/00095/eval_val/acc 0.8514
I1216 01:26:41.704879 140140099741440 hlog.py:18] train/00095{17.25s}
I1216 01:26:53.542100 140140099741440 hlog.py:32] train/00096/loss 0.0114
I1216 01:26:57.540690 140140099741440 hlog.py:32] train/00096/eval_train/acc 1.0000
I1216 01:26:58.115507 140140099741440 hlog.py:32] train/00096/eval_val/acc 0.8378
I1216 01:26:58.116004 140140099741440 hlog.py:18] train/00096{16.41s}
I1216 01:27:09.312348 140140099741440 hlog.py:32] train/00097/loss 0.0071
I1216 01:27:13.296164 140140099741440 hlog.py:32] train/00097/eval_train/acc 0.9950
I1216 01:27:13.887327 140140099741440 hlog.py:32] train/00097/eval_val/acc 0.8446
I1216 01:27:13.888030 140140099741440 hlog.py:18] train/00097{15.77s}
I1216 01:27:25.769322 140140099741440 hlog.py:32] train/00098/loss 0.0120
I1216 01:27:29.502890 140140099741440 hlog.py:32] train/00098/eval_train/acc 1.0000
I1216 01:27:30.080565 140140099741440 hlog.py:32] train/00098/eval_val/acc 0.8311
I1216 01:27:30.081065 140140099741440 hlog.py:18] train/00098{16.19s}
I1216 01:27:42.833553 140140099741440 hlog.py:32] train/00099/loss 0.0102
I1216 01:27:46.467398 140140099741440 hlog.py:32] train/00099/eval_train/acc 0.9990
I1216 01:27:47.056239 140140099741440 hlog.py:32] train/00099/eval_val/acc 0.8176
I1216 01:27:47.089363 140140099741440 hlog.py:18] train/00099{17.01s}
I1216 01:27:58.938981 140140099741440 hlog.py:32] train/00100/loss 0.0067
I1216 01:28:02.855381 140140099741440 hlog.py:32] train/00100/eval_train/acc 0.9980
I1216 01:28:03.461632 140140099741440 hlog.py:32] train/00100/eval_val/acc 0.8311
I1216 01:28:03.462126 140140099741440 hlog.py:18] train/00100{16.37s}
I1216 01:28:14.688397 140140099741440 hlog.py:32] train/00101/loss 0.0076
I1216 01:28:18.412788 140140099741440 hlog.py:32] train/00101/eval_train/acc 0.9980
I1216 01:28:19.010217 140140099741440 hlog.py:32] train/00101/eval_val/acc 0.8311
I1216 01:28:19.010686 140140099741440 hlog.py:18] train/00101{15.55s}
I1216 01:28:30.084345 140140099741440 hlog.py:32] train/00102/loss 0.0053
I1216 01:28:33.987440 140140099741440 hlog.py:32] train/00102/eval_train/acc 0.9990
I1216 01:28:34.574933 140140099741440 hlog.py:32] train/00102/eval_val/acc 0.8446
I1216 01:28:34.575433 140140099741440 hlog.py:18] train/00102{15.56s}
I1216 01:28:46.489879 140140099741440 hlog.py:32] train/00103/loss 0.0067
I1216 01:28:50.453590 140140099741440 hlog.py:32] train/00103/eval_train/acc 0.9980
I1216 01:28:51.039833 140140099741440 hlog.py:32] train/00103/eval_val/acc 0.8243
I1216 01:28:51.040337 140140099741440 hlog.py:18] train/00103{16.46s}
I1216 01:29:03.378814 140140099741440 hlog.py:32] train/00104/loss 0.0058
I1216 01:29:07.411459 140140099741440 hlog.py:32] train/00104/eval_train/acc 0.9960
I1216 01:29:07.981534 140140099741440 hlog.py:32] train/00104/eval_val/acc 0.8176
I1216 01:29:07.981995 140140099741440 hlog.py:18] train/00104{16.94s}
I1216 01:29:19.655891 140140099741440 hlog.py:32] train/00105/loss 0.0052
I1216 01:29:23.444618 140140099741440 hlog.py:32] train/00105/eval_train/acc 0.9980
I1216 01:29:24.077486 140140099741440 hlog.py:32] train/00105/eval_val/acc 0.8311
I1216 01:29:24.077972 140140099741440 hlog.py:18] train/00105{16.10s}
I1216 01:29:36.042500 140140099741440 hlog.py:32] train/00106/loss 0.0050
I1216 01:29:39.781871 140140099741440 hlog.py:32] train/00106/eval_train/acc 0.9990
I1216 01:29:40.355541 140140099741440 hlog.py:32] train/00106/eval_val/acc 0.8378
I1216 01:29:40.356145 140140099741440 hlog.py:18] train/00106{16.28s}
I1216 01:29:52.904817 140140099741440 hlog.py:32] train/00107/loss 0.0056
I1216 01:29:56.743623 140140099741440 hlog.py:32] train/00107/eval_train/acc 1.0000
I1216 01:29:57.332129 140140099741440 hlog.py:32] train/00107/eval_val/acc 0.8311
I1216 01:29:57.332618 140140099741440 hlog.py:18] train/00107{16.98s}
I1216 01:30:09.597171 140140099741440 hlog.py:32] train/00108/loss 0.0054
I1216 01:30:13.410639 140140099741440 hlog.py:32] train/00108/eval_train/acc 1.0000
I1216 01:30:14.046497 140140099741440 hlog.py:32] train/00108/eval_val/acc 0.8378
I1216 01:30:14.046973 140140099741440 hlog.py:18] train/00108{16.71s}
I1216 01:30:26.182826 140140099741440 hlog.py:32] train/00109/loss 0.0057
I1216 01:30:30.342175 140140099741440 hlog.py:32] train/00109/eval_train/acc 0.9960
I1216 01:30:30.932631 140140099741440 hlog.py:32] train/00109/eval_val/acc 0.8311
I1216 01:30:30.962746 140140099741440 hlog.py:18] train/00109{16.92s}
I1216 01:30:42.640757 140140099741440 hlog.py:32] train/00110/loss 0.0042
I1216 01:30:46.575790 140140099741440 hlog.py:32] train/00110/eval_train/acc 1.0000
I1216 01:30:47.164469 140140099741440 hlog.py:32] train/00110/eval_val/acc 0.8311
I1216 01:30:47.164961 140140099741440 hlog.py:18] train/00110{16.20s}
I1216 01:30:59.310830 140140099741440 hlog.py:32] train/00111/loss 0.0043
I1216 01:31:03.171279 140140099741440 hlog.py:32] train/00111/eval_train/acc 0.9970
I1216 01:31:03.767844 140140099741440 hlog.py:32] train/00111/eval_val/acc 0.8311
I1216 01:31:03.768338 140140099741440 hlog.py:18] train/00111{16.60s}
I1216 01:31:15.990095 140140099741440 hlog.py:32] train/00112/loss 0.0045
I1216 01:31:20.034971 140140099741440 hlog.py:32] train/00112/eval_train/acc 0.9980
I1216 01:31:20.606677 140140099741440 hlog.py:32] train/00112/eval_val/acc 0.8243
I1216 01:31:20.607147 140140099741440 hlog.py:18] train/00112{16.84s}
I1216 01:31:32.402409 140140099741440 hlog.py:32] train/00113/loss 0.0040
I1216 01:31:36.076402 140140099741440 hlog.py:32] train/00113/eval_train/acc 0.9980
I1216 01:31:36.656756 140140099741440 hlog.py:32] train/00113/eval_val/acc 0.8176
I1216 01:31:36.657248 140140099741440 hlog.py:18] train/00113{16.05s}
I1216 01:31:48.078752 140140099741440 hlog.py:32] train/00114/loss 0.0050
I1216 01:31:52.061293 140140099741440 hlog.py:32] train/00114/eval_train/acc 0.9990
I1216 01:31:52.649142 140140099741440 hlog.py:32] train/00114/eval_val/acc 0.8176
I1216 01:31:52.649606 140140099741440 hlog.py:18] train/00114{15.99s}
I1216 01:32:04.153119 140140099741440 hlog.py:32] train/00115/loss 0.0052
I1216 01:32:07.982489 140140099741440 hlog.py:32] train/00115/eval_train/acc 0.9980
I1216 01:32:08.575135 140140099741440 hlog.py:32] train/00115/eval_val/acc 0.8243
I1216 01:32:08.575642 140140099741440 hlog.py:18] train/00115{15.93s}
I1216 01:32:20.366698 140140099741440 hlog.py:32] train/00116/loss 0.0079
I1216 01:32:24.251846 140140099741440 hlog.py:32] train/00116/eval_train/acc 0.9980
I1216 01:32:24.843983 140140099741440 hlog.py:32] train/00116/eval_val/acc 0.8378
I1216 01:32:24.844642 140140099741440 hlog.py:18] train/00116{16.27s}
I1216 01:32:36.594717 140140099741440 hlog.py:32] train/00117/loss 0.0046
I1216 01:32:40.602553 140140099741440 hlog.py:32] train/00117/eval_train/acc 0.9980
I1216 01:32:41.227709 140140099741440 hlog.py:32] train/00117/eval_val/acc 0.8311
I1216 01:32:41.228252 140140099741440 hlog.py:18] train/00117{16.38s}
I1216 01:32:53.314327 140140099741440 hlog.py:32] train/00118/loss 0.0044
I1216 01:32:57.171032 140140099741440 hlog.py:32] train/00118/eval_train/acc 0.9970
I1216 01:32:57.742970 140140099741440 hlog.py:32] train/00118/eval_val/acc 0.8311
I1216 01:32:57.743478 140140099741440 hlog.py:18] train/00118{16.52s}
I1216 01:33:09.768170 140140099741440 hlog.py:32] train/00119/loss 0.0044
I1216 01:33:14.024233 140140099741440 hlog.py:32] train/00119/eval_train/acc 0.9970
I1216 01:33:14.599825 140140099741440 hlog.py:32] train/00119/eval_val/acc 0.8378
I1216 01:33:14.691351 140140099741440 hlog.py:18] train/00119{16.95s}
I1216 01:33:26.904732 140140099741440 hlog.py:32] train/00120/loss 0.0035
I1216 01:33:30.882237 140140099741440 hlog.py:32] train/00120/eval_train/acc 0.9990
I1216 01:33:31.480912 140140099741440 hlog.py:32] train/00120/eval_val/acc 0.8378
I1216 01:33:31.481559 140140099741440 hlog.py:18] train/00120{16.79s}
I1216 01:33:43.500813 140140099741440 hlog.py:32] train/00121/loss 0.0039
I1216 01:33:47.520005 140140099741440 hlog.py:32] train/00121/eval_train/acc 0.9980
I1216 01:33:48.104280 140140099741440 hlog.py:32] train/00121/eval_val/acc 0.8378
I1216 01:33:48.104763 140140099741440 hlog.py:18] train/00121{16.62s}
I1216 01:33:59.769380 140140099741440 hlog.py:32] train/00122/loss 0.0036
I1216 01:34:03.644753 140140099741440 hlog.py:32] train/00122/eval_train/acc 0.9980
I1216 01:34:04.237145 140140099741440 hlog.py:32] train/00122/eval_val/acc 0.8446
I1216 01:34:04.237656 140140099741440 hlog.py:18] train/00122{16.13s}
I1216 01:34:15.847782 140140099741440 hlog.py:32] train/00123/loss 0.0042
I1216 01:34:19.657999 140140099741440 hlog.py:32] train/00123/eval_train/acc 0.9980
I1216 01:34:20.256447 140140099741440 hlog.py:32] train/00123/eval_val/acc 0.8311
I1216 01:34:20.256941 140140099741440 hlog.py:18] train/00123{16.02s}
I1216 01:34:32.621168 140140099741440 hlog.py:32] train/00124/loss 0.0039
I1216 01:34:36.784401 140140099741440 hlog.py:32] train/00124/eval_train/acc 1.0000
I1216 01:34:37.392359 140140099741440 hlog.py:32] train/00124/eval_val/acc 0.8311
I1216 01:34:37.392888 140140099741440 hlog.py:18] train/00124{17.14s}
I1216 01:34:49.141959 140140099741440 hlog.py:32] train/00125/loss 0.0040
I1216 01:34:52.964573 140140099741440 hlog.py:32] train/00125/eval_train/acc 0.9990
I1216 01:34:53.542148 140140099741440 hlog.py:32] train/00125/eval_val/acc 0.8378
I1216 01:34:53.542646 140140099741440 hlog.py:18] train/00125{16.15s}
I1216 01:35:05.253762 140140099741440 hlog.py:32] train/00126/loss 0.0041
I1216 01:35:08.897083 140140099741440 hlog.py:32] train/00126/eval_train/acc 0.9980
I1216 01:35:09.495200 140140099741440 hlog.py:32] train/00126/eval_val/acc 0.8378
I1216 01:35:09.495726 140140099741440 hlog.py:18] train/00126{15.95s}
I1216 01:35:21.760384 140140099741440 hlog.py:32] train/00127/loss 0.0046
I1216 01:35:25.499994 140140099741440 hlog.py:32] train/00127/eval_train/acc 0.9990
I1216 01:35:26.083291 140140099741440 hlog.py:32] train/00127/eval_val/acc 0.8378
I1216 01:35:26.083844 140140099741440 hlog.py:18] train/00127{16.59s}
I1216 01:35:38.261091 140140099741440 hlog.py:32] train/00128/loss 0.0039
I1216 01:35:42.411293 140140099741440 hlog.py:32] train/00128/eval_train/acc 0.9960
I1216 01:35:42.995983 140140099741440 hlog.py:32] train/00128/eval_val/acc 0.8378
I1216 01:35:42.996533 140140099741440 hlog.py:18] train/00128{16.91s}
I1216 01:35:55.862016 140140099741440 hlog.py:32] train/00129/loss 0.0038
I1216 01:36:00.333705 140140099741440 hlog.py:32] train/00129/eval_train/acc 0.9990
I1216 01:36:00.922032 140140099741440 hlog.py:32] train/00129/eval_val/acc 0.8378
I1216 01:36:01.164356 140140099741440 hlog.py:18] train/00129{18.17s}
I1216 01:36:12.465205 140140099741440 hlog.py:32] train/00130/loss 0.0040
I1216 01:36:16.199193 140140099741440 hlog.py:32] train/00130/eval_train/acc 0.9990
I1216 01:36:16.790284 140140099741440 hlog.py:32] train/00130/eval_val/acc 0.8378
I1216 01:36:16.790711 140140099741440 hlog.py:18] train/00130{15.63s}
I1216 01:36:28.618212 140140099741440 hlog.py:32] train/00131/loss 0.0042
I1216 01:36:32.631260 140140099741440 hlog.py:32] train/00131/eval_train/acc 0.9960
I1216 01:36:33.205430 140140099741440 hlog.py:32] train/00131/eval_val/acc 0.8378
I1216 01:36:33.205913 140140099741440 hlog.py:18] train/00131{16.42s}
I1216 01:36:44.890043 140140099741440 hlog.py:32] train/00132/loss 0.0040
I1216 01:36:48.822089 140140099741440 hlog.py:32] train/00132/eval_train/acc 0.9980
I1216 01:36:49.402195 140140099741440 hlog.py:32] train/00132/eval_val/acc 0.8378
I1216 01:36:49.402678 140140099741440 hlog.py:18] train/00132{16.20s}
I1216 01:37:00.942291 140140099741440 hlog.py:32] train/00133/loss 0.0051
I1216 01:37:04.752831 140140099741440 hlog.py:32] train/00133/eval_train/acc 0.9990
I1216 01:37:05.343444 140140099741440 hlog.py:32] train/00133/eval_val/acc 0.8378
I1216 01:37:05.343957 140140099741440 hlog.py:18] train/00133{15.94s}
I1216 01:37:17.636858 140140099741440 hlog.py:32] train/00134/loss 0.0036
I1216 01:37:21.641172 140140099741440 hlog.py:32] train/00134/eval_train/acc 0.9980
I1216 01:37:22.234529 140140099741440 hlog.py:32] train/00134/eval_val/acc 0.8378
I1216 01:37:22.235055 140140099741440 hlog.py:18] train/00134{16.89s}
I1216 01:37:34.627358 140140099741440 hlog.py:32] train/00135/loss 0.0038
I1216 01:37:38.500396 140140099741440 hlog.py:32] train/00135/eval_train/acc 0.9990
I1216 01:37:39.092447 140140099741440 hlog.py:32] train/00135/eval_val/acc 0.8378
I1216 01:37:39.092977 140140099741440 hlog.py:18] train/00135{16.86s}
I1216 01:37:50.593376 140140099741440 hlog.py:32] train/00136/loss 0.0044
I1216 01:37:54.550657 140140099741440 hlog.py:32] train/00136/eval_train/acc 0.9990
I1216 01:37:55.172243 140140099741440 hlog.py:32] train/00136/eval_val/acc 0.8378
I1216 01:37:55.172757 140140099741440 hlog.py:18] train/00136{16.08s}
I1216 01:38:06.848006 140140099741440 hlog.py:32] train/00137/loss 0.0039
I1216 01:38:10.782322 140140099741440 hlog.py:32] train/00137/eval_train/acc 0.9990
I1216 01:38:11.356542 140140099741440 hlog.py:32] train/00137/eval_val/acc 0.8378
I1216 01:38:11.357045 140140099741440 hlog.py:18] train/00137{16.18s}
I1216 01:38:23.066170 140140099741440 hlog.py:32] train/00138/loss 0.0033
I1216 01:38:26.804503 140140099741440 hlog.py:32] train/00138/eval_train/acc 0.9990
I1216 01:38:27.382677 140140099741440 hlog.py:32] train/00138/eval_val/acc 0.8378
I1216 01:38:27.383202 140140099741440 hlog.py:18] train/00138{16.03s}
I1216 01:38:39.468936 140140099741440 hlog.py:32] train/00139/loss 0.0037
I1216 01:38:43.439899 140140099741440 hlog.py:32] train/00139/eval_train/acc 0.9990
I1216 01:38:44.047280 140140099741440 hlog.py:32] train/00139/eval_val/acc 0.8378
I1216 01:38:44.238831 140140099741440 hlog.py:18] train/00139{16.86s}
I1216 01:38:56.367502 140140099741440 hlog.py:32] train/00140/loss 0.0036
I1216 01:39:00.094074 140140099741440 hlog.py:32] train/00140/eval_train/acc 1.0000
I1216 01:39:00.682584 140140099741440 hlog.py:32] train/00140/eval_val/acc 0.8378
I1216 01:39:00.683062 140140099741440 hlog.py:18] train/00140{16.44s}
I1216 01:39:12.178250 140140099741440 hlog.py:32] train/00141/loss 0.0036
I1216 01:39:15.770983 140140099741440 hlog.py:32] train/00141/eval_train/acc 0.9990
I1216 01:39:16.356681 140140099741440 hlog.py:32] train/00141/eval_val/acc 0.8378
I1216 01:39:16.357153 140140099741440 hlog.py:18] train/00141{15.67s}
I1216 01:39:28.406430 140140099741440 hlog.py:32] train/00142/loss 0.0036
I1216 01:39:32.364084 140140099741440 hlog.py:32] train/00142/eval_train/acc 0.9970
I1216 01:39:32.953808 140140099741440 hlog.py:32] train/00142/eval_val/acc 0.8378
I1216 01:39:32.954280 140140099741440 hlog.py:18] train/00142{16.60s}
I1216 01:39:45.606267 140140099741440 hlog.py:32] train/00143/loss 0.0039
I1216 01:39:49.327317 140140099741440 hlog.py:32] train/00143/eval_train/acc 0.9970
I1216 01:39:49.938990 140140099741440 hlog.py:32] train/00143/eval_val/acc 0.8378
I1216 01:39:49.939498 140140099741440 hlog.py:18] train/00143{16.99s}
I1216 01:40:01.432600 140140099741440 hlog.py:32] train/00144/loss 0.0037
I1216 01:40:05.193326 140140099741440 hlog.py:32] train/00144/eval_train/acc 0.9960
I1216 01:40:05.784873 140140099741440 hlog.py:32] train/00144/eval_val/acc 0.8378
I1216 01:40:05.785345 140140099741440 hlog.py:18] train/00144{15.85s}
I1216 01:40:17.305422 140140099741440 hlog.py:32] train/00145/loss 0.0032
I1216 01:40:21.086760 140140099741440 hlog.py:32] train/00145/eval_train/acc 0.9990
I1216 01:40:21.669722 140140099741440 hlog.py:32] train/00145/eval_val/acc 0.8378
I1216 01:40:21.670219 140140099741440 hlog.py:18] train/00145{15.88s}
I1216 01:40:32.981610 140140099741440 hlog.py:32] train/00146/loss 0.0037
I1216 01:40:36.936025 140140099741440 hlog.py:32] train/00146/eval_train/acc 0.9990
I1216 01:40:37.536195 140140099741440 hlog.py:32] train/00146/eval_val/acc 0.8378
I1216 01:40:37.536659 140140099741440 hlog.py:18] train/00146{15.87s}
I1216 01:40:49.821789 140140099741440 hlog.py:32] train/00147/loss 0.0032
I1216 01:40:53.934819 140140099741440 hlog.py:32] train/00147/eval_train/acc 0.9970
I1216 01:40:54.508917 140140099741440 hlog.py:32] train/00147/eval_val/acc 0.8378
I1216 01:40:54.509386 140140099741440 hlog.py:18] train/00147{16.97s}
I1216 01:41:06.386960 140140099741440 hlog.py:32] train/00148/loss 0.0035
I1216 01:41:10.075226 140140099741440 hlog.py:32] train/00148/eval_train/acc 1.0000
I1216 01:41:10.655744 140140099741440 hlog.py:32] train/00148/eval_val/acc 0.8378
I1216 01:41:10.656233 140140099741440 hlog.py:18] train/00148{16.15s}
I1216 01:41:23.069195 140140099741440 hlog.py:32] train/00149/loss 0.0038
I1216 01:41:26.945524 140140099741440 hlog.py:32] train/00149/eval_train/acc 0.9950
I1216 01:41:27.157627 140140099741440 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1216 01:41:27.157822 140140099741440 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1216 01:41:27.157919 140140099741440 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1216 01:41:27.158000 140140099741440 hlog.py:32] train/00149/eval_val/0/corr True
I1216 01:41:27.158073 140140099741440 hlog.py:32] train/00149/eval_val/0 
I1216 01:41:27.158154 140140099741440 hlog.py:18] train/00149/eval_val/0{0.00s}
I1216 01:41:27.158268 140140099741440 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1216 01:41:27.158364 140140099741440 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.158449 140140099741440 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.158524 140140099741440 hlog.py:32] train/00149/eval_val/1/corr True
I1216 01:41:27.158592 140140099741440 hlog.py:32] train/00149/eval_val/1 
I1216 01:41:27.158660 140140099741440 hlog.py:18] train/00149/eval_val/1{0.00s}
I1216 01:41:27.158743 140140099741440 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1216 01:41:27.158836 140140099741440 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1216 01:41:27.158921 140140099741440 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1216 01:41:27.159000 140140099741440 hlog.py:32] train/00149/eval_val/2/corr False
I1216 01:41:27.159069 140140099741440 hlog.py:32] train/00149/eval_val/2 
I1216 01:41:27.159136 140140099741440 hlog.py:18] train/00149/eval_val/2{0.00s}
I1216 01:41:27.159224 140140099741440 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1216 01:41:27.159315 140140099741440 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.159399 140140099741440 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.159497 140140099741440 hlog.py:32] train/00149/eval_val/3/corr True
I1216 01:41:27.159569 140140099741440 hlog.py:32] train/00149/eval_val/3 
I1216 01:41:27.159638 140140099741440 hlog.py:18] train/00149/eval_val/3{0.00s}
I1216 01:41:27.159742 140140099741440 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1216 01:41:27.159834 140140099741440 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1216 01:41:27.159918 140140099741440 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1216 01:41:27.159991 140140099741440 hlog.py:32] train/00149/eval_val/4/corr True
I1216 01:41:27.160059 140140099741440 hlog.py:32] train/00149/eval_val/4 
I1216 01:41:27.160126 140140099741440 hlog.py:18] train/00149/eval_val/4{0.00s}
I1216 01:41:27.160213 140140099741440 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1216 01:41:27.160304 140140099741440 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.160388 140140099741440 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.160462 140140099741440 hlog.py:32] train/00149/eval_val/5/corr True
I1216 01:41:27.160531 140140099741440 hlog.py:32] train/00149/eval_val/5 
I1216 01:41:27.160598 140140099741440 hlog.py:18] train/00149/eval_val/5{0.00s}
I1216 01:41:27.160685 140140099741440 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1216 01:41:27.160787 140140099741440 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.160872 140140099741440 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.160946 140140099741440 hlog.py:32] train/00149/eval_val/6/corr True
I1216 01:41:27.161015 140140099741440 hlog.py:32] train/00149/eval_val/6 
I1216 01:41:27.161082 140140099741440 hlog.py:18] train/00149/eval_val/6{0.00s}
I1216 01:41:27.161168 140140099741440 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1216 01:41:27.161259 140140099741440 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.161343 140140099741440 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.161417 140140099741440 hlog.py:32] train/00149/eval_val/7/corr True
I1216 01:41:27.161486 140140099741440 hlog.py:32] train/00149/eval_val/7 
I1216 01:41:27.161553 140140099741440 hlog.py:18] train/00149/eval_val/7{0.00s}
I1216 01:41:27.161640 140140099741440 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1216 01:41:27.161731 140140099741440 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 01:41:27.161814 140140099741440 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 01:41:27.161888 140140099741440 hlog.py:32] train/00149/eval_val/8/corr True
I1216 01:41:27.161956 140140099741440 hlog.py:32] train/00149/eval_val/8 
I1216 01:41:27.162024 140140099741440 hlog.py:18] train/00149/eval_val/8{0.00s}
I1216 01:41:27.162111 140140099741440 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1216 01:41:27.162201 140140099741440 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 01:41:27.162285 140140099741440 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 01:41:27.162358 140140099741440 hlog.py:32] train/00149/eval_val/9/corr True
I1216 01:41:27.162427 140140099741440 hlog.py:32] train/00149/eval_val/9 
I1216 01:41:27.162494 140140099741440 hlog.py:18] train/00149/eval_val/9{0.00s}
I1216 01:41:27.162581 140140099741440 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1216 01:41:27.162671 140140099741440 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.162755 140140099741440 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.162828 140140099741440 hlog.py:32] train/00149/eval_val/10/corr True
I1216 01:41:27.162897 140140099741440 hlog.py:32] train/00149/eval_val/10 
I1216 01:41:27.162965 140140099741440 hlog.py:18] train/00149/eval_val/10{0.00s}
I1216 01:41:27.163055 140140099741440 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1216 01:41:27.163156 140140099741440 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 01:41:27.163245 140140099741440 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 01:41:27.163319 140140099741440 hlog.py:32] train/00149/eval_val/11/corr True
I1216 01:41:27.163388 140140099741440 hlog.py:32] train/00149/eval_val/11 
I1216 01:41:27.163478 140140099741440 hlog.py:18] train/00149/eval_val/11{0.00s}
I1216 01:41:27.163572 140140099741440 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1216 01:41:27.163675 140140099741440 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1216 01:41:27.163785 140140099741440 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1216 01:41:27.163859 140140099741440 hlog.py:32] train/00149/eval_val/12/corr True
I1216 01:41:27.163928 140140099741440 hlog.py:32] train/00149/eval_val/12 
I1216 01:41:27.163995 140140099741440 hlog.py:18] train/00149/eval_val/12{0.00s}
I1216 01:41:27.164086 140140099741440 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1216 01:41:27.164186 140140099741440 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1216 01:41:27.164275 140140099741440 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1216 01:41:27.164350 140140099741440 hlog.py:32] train/00149/eval_val/13/corr True
I1216 01:41:27.164419 140140099741440 hlog.py:32] train/00149/eval_val/13 
I1216 01:41:27.164486 140140099741440 hlog.py:18] train/00149/eval_val/13{0.00s}
I1216 01:41:27.164576 140140099741440 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1216 01:41:27.164676 140140099741440 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1216 01:41:27.164765 140140099741440 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1216 01:41:27.164839 140140099741440 hlog.py:32] train/00149/eval_val/14/corr True
I1216 01:41:27.164907 140140099741440 hlog.py:32] train/00149/eval_val/14 
I1216 01:41:27.164974 140140099741440 hlog.py:18] train/00149/eval_val/14{0.00s}
I1216 01:41:27.165065 140140099741440 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1216 01:41:27.165165 140140099741440 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1216 01:41:27.165254 140140099741440 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1216 01:41:27.165328 140140099741440 hlog.py:32] train/00149/eval_val/15/corr True
I1216 01:41:27.165397 140140099741440 hlog.py:32] train/00149/eval_val/15 
I1216 01:41:27.165464 140140099741440 hlog.py:18] train/00149/eval_val/15{0.00s}
I1216 01:41:27.165555 140140099741440 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1216 01:41:27.165654 140140099741440 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 01:41:27.165744 140140099741440 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 01:41:27.165818 140140099741440 hlog.py:32] train/00149/eval_val/16/corr True
I1216 01:41:27.165887 140140099741440 hlog.py:32] train/00149/eval_val/16 
I1216 01:41:27.165954 140140099741440 hlog.py:18] train/00149/eval_val/16{0.00s}
I1216 01:41:27.166045 140140099741440 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1216 01:41:27.166145 140140099741440 hlog.py:32] train/00149/eval_val/17/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1216 01:41:27.166234 140140099741440 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1216 01:41:27.166314 140140099741440 hlog.py:32] train/00149/eval_val/17/corr True
I1216 01:41:27.166383 140140099741440 hlog.py:32] train/00149/eval_val/17 
I1216 01:41:27.166451 140140099741440 hlog.py:18] train/00149/eval_val/17{0.00s}
I1216 01:41:27.166542 140140099741440 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1216 01:41:27.166642 140140099741440 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1216 01:41:27.166732 140140099741440 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1216 01:41:27.166806 140140099741440 hlog.py:32] train/00149/eval_val/18/corr True
I1216 01:41:27.166874 140140099741440 hlog.py:32] train/00149/eval_val/18 
I1216 01:41:27.166941 140140099741440 hlog.py:18] train/00149/eval_val/18{0.00s}
I1216 01:41:27.167032 140140099741440 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1216 01:41:27.167132 140140099741440 hlog.py:32] train/00149/eval_val/19/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1216 01:41:27.167221 140140099741440 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1216 01:41:27.167294 140140099741440 hlog.py:32] train/00149/eval_val/19/corr True
I1216 01:41:27.167363 140140099741440 hlog.py:32] train/00149/eval_val/19 
I1216 01:41:27.167451 140140099741440 hlog.py:18] train/00149/eval_val/19{0.00s}
I1216 01:41:27.167539 140140099741440 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1216 01:41:27.167638 140140099741440 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1216 01:41:27.167743 140140099741440 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1216 01:41:27.167818 140140099741440 hlog.py:32] train/00149/eval_val/20/corr False
I1216 01:41:27.167886 140140099741440 hlog.py:32] train/00149/eval_val/20 
I1216 01:41:27.167953 140140099741440 hlog.py:18] train/00149/eval_val/20{0.00s}
I1216 01:41:27.168044 140140099741440 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1216 01:41:27.168144 140140099741440 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1216 01:41:27.168234 140140099741440 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1216 01:41:27.168308 140140099741440 hlog.py:32] train/00149/eval_val/21/corr True
I1216 01:41:27.168375 140140099741440 hlog.py:32] train/00149/eval_val/21 
I1216 01:41:27.168443 140140099741440 hlog.py:18] train/00149/eval_val/21{0.00s}
I1216 01:41:27.168530 140140099741440 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1216 01:41:27.168622 140140099741440 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1216 01:41:27.168706 140140099741440 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1216 01:41:27.168779 140140099741440 hlog.py:32] train/00149/eval_val/22/corr True
I1216 01:41:27.168847 140140099741440 hlog.py:32] train/00149/eval_val/22 
I1216 01:41:27.168915 140140099741440 hlog.py:18] train/00149/eval_val/22{0.00s}
I1216 01:41:27.168996 140140099741440 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1216 01:41:27.169089 140140099741440 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.169178 140140099741440 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1216 01:41:27.169252 140140099741440 hlog.py:32] train/00149/eval_val/23/corr False
I1216 01:41:27.169321 140140099741440 hlog.py:32] train/00149/eval_val/23 
I1216 01:41:27.169387 140140099741440 hlog.py:18] train/00149/eval_val/23{0.00s}
I1216 01:41:27.169469 140140099741440 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1216 01:41:27.169555 140140099741440 hlog.py:32] train/00149/eval_val/24/pred ( A , _smallest ( A , _state ( A ) ) )
I1216 01:41:27.169639 140140099741440 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1216 01:41:27.169712 140140099741440 hlog.py:32] train/00149/eval_val/24/corr False
I1216 01:41:27.169780 140140099741440 hlog.py:32] train/00149/eval_val/24 
I1216 01:41:27.169847 140140099741440 hlog.py:18] train/00149/eval_val/24{0.00s}
I1216 01:41:27.169936 140140099741440 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1216 01:41:27.170029 140140099741440 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 01:41:27.170114 140140099741440 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 01:41:27.170188 140140099741440 hlog.py:32] train/00149/eval_val/25/corr True
I1216 01:41:27.170256 140140099741440 hlog.py:32] train/00149/eval_val/25 
I1216 01:41:27.170323 140140099741440 hlog.py:18] train/00149/eval_val/25{0.00s}
I1216 01:41:27.170411 140140099741440 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1216 01:41:27.170504 140140099741440 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1216 01:41:27.170589 140140099741440 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1216 01:41:27.170663 140140099741440 hlog.py:32] train/00149/eval_val/26/corr True
I1216 01:41:27.170731 140140099741440 hlog.py:32] train/00149/eval_val/26 
I1216 01:41:27.170798 140140099741440 hlog.py:18] train/00149/eval_val/26{0.00s}
I1216 01:41:27.170881 140140099741440 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1216 01:41:27.170982 140140099741440 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1216 01:41:27.171068 140140099741440 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.171143 140140099741440 hlog.py:32] train/00149/eval_val/27/corr False
I1216 01:41:27.171211 140140099741440 hlog.py:32] train/00149/eval_val/27 
I1216 01:41:27.171278 140140099741440 hlog.py:18] train/00149/eval_val/27{0.00s}
I1216 01:41:27.171366 140140099741440 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1216 01:41:27.171480 140140099741440 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.171569 140140099741440 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.171645 140140099741440 hlog.py:32] train/00149/eval_val/28/corr True
I1216 01:41:27.171716 140140099741440 hlog.py:32] train/00149/eval_val/28 
I1216 01:41:27.171797 140140099741440 hlog.py:18] train/00149/eval_val/28{0.00s}
I1216 01:41:27.171885 140140099741440 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1216 01:41:27.171978 140140099741440 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1216 01:41:27.172070 140140099741440 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1216 01:41:27.172144 140140099741440 hlog.py:32] train/00149/eval_val/29/corr True
I1216 01:41:27.172213 140140099741440 hlog.py:32] train/00149/eval_val/29 
I1216 01:41:27.172280 140140099741440 hlog.py:18] train/00149/eval_val/29{0.00s}
I1216 01:41:27.172368 140140099741440 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1216 01:41:27.172462 140140099741440 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1216 01:41:27.172548 140140099741440 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1216 01:41:27.172621 140140099741440 hlog.py:32] train/00149/eval_val/30/corr True
I1216 01:41:27.172689 140140099741440 hlog.py:32] train/00149/eval_val/30 
I1216 01:41:27.172757 140140099741440 hlog.py:18] train/00149/eval_val/30{0.00s}
I1216 01:41:27.172844 140140099741440 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1216 01:41:27.172938 140140099741440 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1216 01:41:27.173023 140140099741440 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1216 01:41:27.173097 140140099741440 hlog.py:32] train/00149/eval_val/31/corr True
I1216 01:41:27.173166 140140099741440 hlog.py:32] train/00149/eval_val/31 
I1216 01:41:27.173233 140140099741440 hlog.py:18] train/00149/eval_val/31{0.00s}
I1216 01:41:27.173321 140140099741440 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1216 01:41:27.173415 140140099741440 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1216 01:41:27.173501 140140099741440 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1216 01:41:27.173574 140140099741440 hlog.py:32] train/00149/eval_val/32/corr True
I1216 01:41:27.173643 140140099741440 hlog.py:32] train/00149/eval_val/32 
I1216 01:41:27.173710 140140099741440 hlog.py:18] train/00149/eval_val/32{0.00s}
I1216 01:41:27.173799 140140099741440 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1216 01:41:27.173892 140140099741440 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 01:41:27.173977 140140099741440 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 01:41:27.174051 140140099741440 hlog.py:32] train/00149/eval_val/33/corr True
I1216 01:41:27.174119 140140099741440 hlog.py:32] train/00149/eval_val/33 
I1216 01:41:27.174186 140140099741440 hlog.py:18] train/00149/eval_val/33{0.00s}
I1216 01:41:27.174274 140140099741440 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1216 01:41:27.174367 140140099741440 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.174453 140140099741440 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 01:41:27.174527 140140099741440 hlog.py:32] train/00149/eval_val/34/corr True
I1216 01:41:27.174595 140140099741440 hlog.py:32] train/00149/eval_val/34 
I1216 01:41:27.174662 140140099741440 hlog.py:18] train/00149/eval_val/34{0.00s}
I1216 01:41:27.174752 140140099741440 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1216 01:41:27.174849 140140099741440 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.174942 140140099741440 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.175016 140140099741440 hlog.py:32] train/00149/eval_val/35/corr True
I1216 01:41:27.175085 140140099741440 hlog.py:32] train/00149/eval_val/35 
I1216 01:41:27.175152 140140099741440 hlog.py:18] train/00149/eval_val/35{0.00s}
I1216 01:41:27.175241 140140099741440 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1216 01:41:27.175338 140140099741440 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.175446 140140099741440 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.175525 140140099741440 hlog.py:32] train/00149/eval_val/36/corr True
I1216 01:41:27.175595 140140099741440 hlog.py:32] train/00149/eval_val/36 
I1216 01:41:27.175665 140140099741440 hlog.py:18] train/00149/eval_val/36{0.00s}
I1216 01:41:27.175769 140140099741440 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1216 01:41:27.175865 140140099741440 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.175953 140140099741440 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.176027 140140099741440 hlog.py:32] train/00149/eval_val/37/corr True
I1216 01:41:27.176095 140140099741440 hlog.py:32] train/00149/eval_val/37 
I1216 01:41:27.176162 140140099741440 hlog.py:18] train/00149/eval_val/37{0.00s}
I1216 01:41:27.176251 140140099741440 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1216 01:41:27.176347 140140099741440 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.176435 140140099741440 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.176508 140140099741440 hlog.py:32] train/00149/eval_val/38/corr True
I1216 01:41:27.176577 140140099741440 hlog.py:32] train/00149/eval_val/38 
I1216 01:41:27.176644 140140099741440 hlog.py:18] train/00149/eval_val/38{0.00s}
I1216 01:41:27.176733 140140099741440 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1216 01:41:27.176829 140140099741440 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.176916 140140099741440 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 01:41:27.176990 140140099741440 hlog.py:32] train/00149/eval_val/39/corr True
I1216 01:41:27.177059 140140099741440 hlog.py:32] train/00149/eval_val/39 
I1216 01:41:27.177125 140140099741440 hlog.py:18] train/00149/eval_val/39{0.00s}
I1216 01:41:27.177211 140140099741440 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1216 01:41:27.177304 140140099741440 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _const ( B , _riverid ( there ) ) , _river ( B ) ) , A ) )
I1216 01:41:27.177390 140140099741440 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1216 01:41:27.177463 140140099741440 hlog.py:32] train/00149/eval_val/40/corr False
I1216 01:41:27.177531 140140099741440 hlog.py:32] train/00149/eval_val/40 
I1216 01:41:27.177599 140140099741440 hlog.py:18] train/00149/eval_val/40{0.00s}
I1216 01:41:27.177687 140140099741440 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1216 01:41:27.177787 140140099741440 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1216 01:41:27.177874 140140099741440 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1216 01:41:27.177948 140140099741440 hlog.py:32] train/00149/eval_val/41/corr True
I1216 01:41:27.178016 140140099741440 hlog.py:32] train/00149/eval_val/41 
I1216 01:41:27.178083 140140099741440 hlog.py:18] train/00149/eval_val/41{0.00s}
I1216 01:41:27.178165 140140099741440 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1216 01:41:27.178265 140140099741440 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _major ( C ) , _city ( C ) ) , A ) )
I1216 01:41:27.178348 140140099741440 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1216 01:41:27.178422 140140099741440 hlog.py:32] train/00149/eval_val/42/corr False
I1216 01:41:27.178491 140140099741440 hlog.py:32] train/00149/eval_val/42 
I1216 01:41:27.178557 140140099741440 hlog.py:18] train/00149/eval_val/42{0.00s}
I1216 01:41:27.178650 140140099741440 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1216 01:41:27.178752 140140099741440 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1216 01:41:27.178843 140140099741440 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1216 01:41:27.178917 140140099741440 hlog.py:32] train/00149/eval_val/43/corr True
I1216 01:41:27.178986 140140099741440 hlog.py:32] train/00149/eval_val/43 
I1216 01:41:27.179053 140140099741440 hlog.py:18] train/00149/eval_val/43{0.00s}
I1216 01:41:27.179144 140140099741440 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1216 01:41:27.179260 140140099741440 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1216 01:41:27.179354 140140099741440 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1216 01:41:27.179452 140140099741440 hlog.py:32] train/00149/eval_val/44/corr True
I1216 01:41:27.179527 140140099741440 hlog.py:32] train/00149/eval_val/44 
I1216 01:41:27.179600 140140099741440 hlog.py:18] train/00149/eval_val/44{0.00s}
I1216 01:41:27.179705 140140099741440 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1216 01:41:27.179818 140140099741440 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1216 01:41:27.179905 140140099741440 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1216 01:41:27.179979 140140099741440 hlog.py:32] train/00149/eval_val/45/corr False
I1216 01:41:27.180047 140140099741440 hlog.py:32] train/00149/eval_val/45 
I1216 01:41:27.180114 140140099741440 hlog.py:18] train/00149/eval_val/45{0.00s}
I1216 01:41:27.180201 140140099741440 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1216 01:41:27.180298 140140099741440 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , _state ( C ) ) ) , A ) )
I1216 01:41:27.180385 140140099741440 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1216 01:41:27.180459 140140099741440 hlog.py:32] train/00149/eval_val/46/corr False
I1216 01:41:27.180533 140140099741440 hlog.py:32] train/00149/eval_val/46 
I1216 01:41:27.180601 140140099741440 hlog.py:18] train/00149/eval_val/46{0.00s}
I1216 01:41:27.180684 140140099741440 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1216 01:41:27.180789 140140099741440 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _next_to ( B , D ) , _const ( D , _stateid ( mississippi ) ) ) , A ) )
I1216 01:41:27.180878 140140099741440 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1216 01:41:27.180952 140140099741440 hlog.py:32] train/00149/eval_val/47/corr False
I1216 01:41:27.181020 140140099741440 hlog.py:32] train/00149/eval_val/47 
I1216 01:41:27.181087 140140099741440 hlog.py:18] train/00149/eval_val/47{0.00s}
I1216 01:41:27.181177 140140099741440 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1216 01:41:27.181277 140140099741440 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1216 01:41:27.181366 140140099741440 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1216 01:41:27.181440 140140099741440 hlog.py:32] train/00149/eval_val/48/corr True
I1216 01:41:27.181508 140140099741440 hlog.py:32] train/00149/eval_val/48 
I1216 01:41:27.181575 140140099741440 hlog.py:18] train/00149/eval_val/48{0.00s}
I1216 01:41:27.181666 140140099741440 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1216 01:41:27.181766 140140099741440 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 01:41:27.181855 140140099741440 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 01:41:27.181929 140140099741440 hlog.py:32] train/00149/eval_val/49/corr True
I1216 01:41:27.181998 140140099741440 hlog.py:32] train/00149/eval_val/49 
I1216 01:41:27.182065 140140099741440 hlog.py:18] train/00149/eval_val/49{0.00s}
I1216 01:41:27.182154 140140099741440 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1216 01:41:27.182254 140140099741440 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1216 01:41:27.182343 140140099741440 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1216 01:41:27.182416 140140099741440 hlog.py:32] train/00149/eval_val/50/corr True
I1216 01:41:27.182485 140140099741440 hlog.py:32] train/00149/eval_val/50 
I1216 01:41:27.182552 140140099741440 hlog.py:18] train/00149/eval_val/50{0.00s}
I1216 01:41:27.182643 140140099741440 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1216 01:41:27.182743 140140099741440 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 01:41:27.182832 140140099741440 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 01:41:27.182906 140140099741440 hlog.py:32] train/00149/eval_val/51/corr True
I1216 01:41:27.182974 140140099741440 hlog.py:32] train/00149/eval_val/51 
I1216 01:41:27.183041 140140099741440 hlog.py:18] train/00149/eval_val/51{0.00s}
I1216 01:41:27.183123 140140099741440 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1216 01:41:27.183230 140140099741440 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1216 01:41:27.183316 140140099741440 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1216 01:41:27.183403 140140099741440 hlog.py:32] train/00149/eval_val/52/corr False
I1216 01:41:27.183483 140140099741440 hlog.py:32] train/00149/eval_val/52 
I1216 01:41:27.183552 140140099741440 hlog.py:18] train/00149/eval_val/52{0.00s}
I1216 01:41:27.183637 140140099741440 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1216 01:41:27.183747 140140099741440 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1216 01:41:27.183833 140140099741440 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1216 01:41:27.183906 140140099741440 hlog.py:32] train/00149/eval_val/53/corr False
I1216 01:41:27.183974 140140099741440 hlog.py:32] train/00149/eval_val/53 
I1216 01:41:27.184041 140140099741440 hlog.py:18] train/00149/eval_val/53{0.00s}
I1216 01:41:27.184130 140140099741440 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1216 01:41:27.184223 140140099741440 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.184309 140140099741440 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.184382 140140099741440 hlog.py:32] train/00149/eval_val/54/corr True
I1216 01:41:27.184450 140140099741440 hlog.py:32] train/00149/eval_val/54 
I1216 01:41:27.184517 140140099741440 hlog.py:18] train/00149/eval_val/54{0.00s}
I1216 01:41:27.184604 140140099741440 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1216 01:41:27.184697 140140099741440 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1216 01:41:27.184783 140140099741440 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1216 01:41:27.184856 140140099741440 hlog.py:32] train/00149/eval_val/55/corr True
I1216 01:41:27.184924 140140099741440 hlog.py:32] train/00149/eval_val/55 
I1216 01:41:27.184991 140140099741440 hlog.py:18] train/00149/eval_val/55{0.00s}
I1216 01:41:27.185079 140140099741440 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1216 01:41:27.185172 140140099741440 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 01:41:27.185257 140140099741440 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 01:41:27.185331 140140099741440 hlog.py:32] train/00149/eval_val/56/corr True
I1216 01:41:27.185399 140140099741440 hlog.py:32] train/00149/eval_val/56 
I1216 01:41:27.185466 140140099741440 hlog.py:18] train/00149/eval_val/56{0.00s}
I1216 01:41:27.185554 140140099741440 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1216 01:41:27.185648 140140099741440 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.185733 140140099741440 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.185806 140140099741440 hlog.py:32] train/00149/eval_val/57/corr True
I1216 01:41:27.185874 140140099741440 hlog.py:32] train/00149/eval_val/57 
I1216 01:41:27.185941 140140099741440 hlog.py:18] train/00149/eval_val/57{0.00s}
I1216 01:41:27.186028 140140099741440 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1216 01:41:27.186127 140140099741440 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.186212 140140099741440 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.186285 140140099741440 hlog.py:32] train/00149/eval_val/58/corr True
I1216 01:41:27.186354 140140099741440 hlog.py:32] train/00149/eval_val/58 
I1216 01:41:27.186421 140140099741440 hlog.py:18] train/00149/eval_val/58{0.00s}
I1216 01:41:27.186509 140140099741440 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1216 01:41:27.186601 140140099741440 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1216 01:41:27.186686 140140099741440 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1216 01:41:27.186760 140140099741440 hlog.py:32] train/00149/eval_val/59/corr True
I1216 01:41:27.186828 140140099741440 hlog.py:32] train/00149/eval_val/59 
I1216 01:41:27.186894 140140099741440 hlog.py:18] train/00149/eval_val/59{0.00s}
I1216 01:41:27.186981 140140099741440 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1216 01:41:27.187074 140140099741440 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1216 01:41:27.187159 140140099741440 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1216 01:41:27.187232 140140099741440 hlog.py:32] train/00149/eval_val/60/corr True
I1216 01:41:27.187300 140140099741440 hlog.py:32] train/00149/eval_val/60 
I1216 01:41:27.187367 140140099741440 hlog.py:18] train/00149/eval_val/60{0.00s}
I1216 01:41:27.187478 140140099741440 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1216 01:41:27.187575 140140099741440 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.187664 140140099741440 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.187752 140140099741440 hlog.py:32] train/00149/eval_val/61/corr True
I1216 01:41:27.187821 140140099741440 hlog.py:32] train/00149/eval_val/61 
I1216 01:41:27.187888 140140099741440 hlog.py:18] train/00149/eval_val/61{0.00s}
I1216 01:41:27.187975 140140099741440 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1216 01:41:27.188068 140140099741440 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1216 01:41:27.188153 140140099741440 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1216 01:41:27.188227 140140099741440 hlog.py:32] train/00149/eval_val/62/corr True
I1216 01:41:27.188295 140140099741440 hlog.py:32] train/00149/eval_val/62 
I1216 01:41:27.188362 140140099741440 hlog.py:18] train/00149/eval_val/62{0.00s}
I1216 01:41:27.188450 140140099741440 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1216 01:41:27.188542 140140099741440 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.188627 140140099741440 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.188701 140140099741440 hlog.py:32] train/00149/eval_val/63/corr True
I1216 01:41:27.188769 140140099741440 hlog.py:32] train/00149/eval_val/63 
I1216 01:41:27.188836 140140099741440 hlog.py:18] train/00149/eval_val/63{0.00s}
I1216 01:41:27.430183 140140099741440 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1216 01:41:27.430378 140140099741440 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1216 01:41:27.430490 140140099741440 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1216 01:41:27.430572 140140099741440 hlog.py:32] train/00149/eval_val/64/corr True
I1216 01:41:27.430646 140140099741440 hlog.py:32] train/00149/eval_val/64 
I1216 01:41:27.430721 140140099741440 hlog.py:18] train/00149/eval_val/64{0.00s}
I1216 01:41:27.430815 140140099741440 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1216 01:41:27.430914 140140099741440 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.431003 140140099741440 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.431080 140140099741440 hlog.py:32] train/00149/eval_val/65/corr True
I1216 01:41:27.431152 140140099741440 hlog.py:32] train/00149/eval_val/65 
I1216 01:41:27.431222 140140099741440 hlog.py:18] train/00149/eval_val/65{0.00s}
I1216 01:41:27.431313 140140099741440 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1216 01:41:27.431430 140140099741440 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.431525 140140099741440 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.431604 140140099741440 hlog.py:32] train/00149/eval_val/66/corr True
I1216 01:41:27.431678 140140099741440 hlog.py:32] train/00149/eval_val/66 
I1216 01:41:27.431762 140140099741440 hlog.py:18] train/00149/eval_val/66{0.00s}
I1216 01:41:27.431856 140140099741440 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1216 01:41:27.431953 140140099741440 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.432041 140140099741440 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.432117 140140099741440 hlog.py:32] train/00149/eval_val/67/corr True
I1216 01:41:27.432188 140140099741440 hlog.py:32] train/00149/eval_val/67 
I1216 01:41:27.432258 140140099741440 hlog.py:18] train/00149/eval_val/67{0.00s}
I1216 01:41:27.432350 140140099741440 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1216 01:41:27.432449 140140099741440 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1216 01:41:27.432539 140140099741440 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1216 01:41:27.432615 140140099741440 hlog.py:32] train/00149/eval_val/68/corr True
I1216 01:41:27.432685 140140099741440 hlog.py:32] train/00149/eval_val/68 
I1216 01:41:27.432755 140140099741440 hlog.py:18] train/00149/eval_val/68{0.00s}
I1216 01:41:27.432848 140140099741440 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1216 01:41:27.432947 140140099741440 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.433036 140140099741440 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.433113 140140099741440 hlog.py:32] train/00149/eval_val/69/corr True
I1216 01:41:27.433183 140140099741440 hlog.py:32] train/00149/eval_val/69 
I1216 01:41:27.433253 140140099741440 hlog.py:18] train/00149/eval_val/69{0.00s}
I1216 01:41:27.433343 140140099741440 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1216 01:41:27.433437 140140099741440 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.433529 140140099741440 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.433606 140140099741440 hlog.py:32] train/00149/eval_val/70/corr True
I1216 01:41:27.433676 140140099741440 hlog.py:32] train/00149/eval_val/70 
I1216 01:41:27.433746 140140099741440 hlog.py:18] train/00149/eval_val/70{0.00s}
I1216 01:41:27.433836 140140099741440 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1216 01:41:27.433930 140140099741440 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 01:41:27.434016 140140099741440 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 01:41:27.434092 140140099741440 hlog.py:32] train/00149/eval_val/71/corr True
I1216 01:41:27.434163 140140099741440 hlog.py:32] train/00149/eval_val/71 
I1216 01:41:27.434233 140140099741440 hlog.py:18] train/00149/eval_val/71{0.00s}
I1216 01:41:27.434322 140140099741440 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1216 01:41:27.434416 140140099741440 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 01:41:27.434502 140140099741440 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 01:41:27.434577 140140099741440 hlog.py:32] train/00149/eval_val/72/corr True
I1216 01:41:27.434648 140140099741440 hlog.py:32] train/00149/eval_val/72 
I1216 01:41:27.434718 140140099741440 hlog.py:18] train/00149/eval_val/72{0.00s}
I1216 01:41:27.434808 140140099741440 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1216 01:41:27.434901 140140099741440 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1216 01:41:27.434988 140140099741440 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1216 01:41:27.435063 140140099741440 hlog.py:32] train/00149/eval_val/73/corr True
I1216 01:41:27.435134 140140099741440 hlog.py:32] train/00149/eval_val/73 
I1216 01:41:27.435203 140140099741440 hlog.py:18] train/00149/eval_val/73{0.00s}
I1216 01:41:27.435293 140140099741440 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1216 01:41:27.435387 140140099741440 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1216 01:41:27.435506 140140099741440 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1216 01:41:27.435585 140140099741440 hlog.py:32] train/00149/eval_val/74/corr True
I1216 01:41:27.435658 140140099741440 hlog.py:32] train/00149/eval_val/74 
I1216 01:41:27.435743 140140099741440 hlog.py:18] train/00149/eval_val/74{0.00s}
I1216 01:41:27.435836 140140099741440 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1216 01:41:27.435930 140140099741440 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1216 01:41:27.436016 140140099741440 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1216 01:41:27.436091 140140099741440 hlog.py:32] train/00149/eval_val/75/corr True
I1216 01:41:27.436162 140140099741440 hlog.py:32] train/00149/eval_val/75 
I1216 01:41:27.436232 140140099741440 hlog.py:18] train/00149/eval_val/75{0.00s}
I1216 01:41:27.436323 140140099741440 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1216 01:41:27.436417 140140099741440 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.436504 140140099741440 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 01:41:27.436579 140140099741440 hlog.py:32] train/00149/eval_val/76/corr True
I1216 01:41:27.436657 140140099741440 hlog.py:32] train/00149/eval_val/76 
I1216 01:41:27.436727 140140099741440 hlog.py:18] train/00149/eval_val/76{0.00s}
I1216 01:41:27.436817 140140099741440 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1216 01:41:27.436911 140140099741440 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 01:41:27.436998 140140099741440 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 01:41:27.437074 140140099741440 hlog.py:32] train/00149/eval_val/77/corr True
I1216 01:41:27.437145 140140099741440 hlog.py:32] train/00149/eval_val/77 
I1216 01:41:27.437215 140140099741440 hlog.py:18] train/00149/eval_val/77{0.00s}
I1216 01:41:27.437305 140140099741440 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1216 01:41:27.437398 140140099741440 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1216 01:41:27.437484 140140099741440 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1216 01:41:27.437560 140140099741440 hlog.py:32] train/00149/eval_val/78/corr True
I1216 01:41:27.437631 140140099741440 hlog.py:32] train/00149/eval_val/78 
I1216 01:41:27.437700 140140099741440 hlog.py:18] train/00149/eval_val/78{0.00s}
I1216 01:41:27.437791 140140099741440 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1216 01:41:27.437885 140140099741440 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1216 01:41:27.437971 140140099741440 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1216 01:41:27.438047 140140099741440 hlog.py:32] train/00149/eval_val/79/corr True
I1216 01:41:27.438118 140140099741440 hlog.py:32] train/00149/eval_val/79 
I1216 01:41:27.438188 140140099741440 hlog.py:18] train/00149/eval_val/79{0.00s}
I1216 01:41:27.438277 140140099741440 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1216 01:41:27.438370 140140099741440 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.438457 140140099741440 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.438532 140140099741440 hlog.py:32] train/00149/eval_val/80/corr True
I1216 01:41:27.438603 140140099741440 hlog.py:32] train/00149/eval_val/80 
I1216 01:41:27.438672 140140099741440 hlog.py:18] train/00149/eval_val/80{0.00s}
I1216 01:41:27.438758 140140099741440 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1216 01:41:27.438854 140140099741440 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) , _state ( B ) ) )
I1216 01:41:27.438941 140140099741440 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.439016 140140099741440 hlog.py:32] train/00149/eval_val/81/corr False
I1216 01:41:27.439087 140140099741440 hlog.py:32] train/00149/eval_val/81 
I1216 01:41:27.439156 140140099741440 hlog.py:18] train/00149/eval_val/81{0.00s}
I1216 01:41:27.439246 140140099741440 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1216 01:41:27.439339 140140099741440 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1216 01:41:27.439447 140140099741440 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1216 01:41:27.439528 140140099741440 hlog.py:32] train/00149/eval_val/82/corr True
I1216 01:41:27.439601 140140099741440 hlog.py:32] train/00149/eval_val/82 
I1216 01:41:27.439673 140140099741440 hlog.py:18] train/00149/eval_val/82{0.00s}
I1216 01:41:27.439779 140140099741440 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1216 01:41:27.439881 140140099741440 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1216 01:41:27.439968 140140099741440 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1216 01:41:27.440043 140140099741440 hlog.py:32] train/00149/eval_val/83/corr True
I1216 01:41:27.440114 140140099741440 hlog.py:32] train/00149/eval_val/83 
I1216 01:41:27.440183 140140099741440 hlog.py:18] train/00149/eval_val/83{0.00s}
I1216 01:41:27.440273 140140099741440 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1216 01:41:27.440367 140140099741440 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _population ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1216 01:41:27.440454 140140099741440 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 01:41:27.440529 140140099741440 hlog.py:32] train/00149/eval_val/84/corr False
I1216 01:41:27.440600 140140099741440 hlog.py:32] train/00149/eval_val/84 
I1216 01:41:27.440669 140140099741440 hlog.py:18] train/00149/eval_val/84{0.00s}
I1216 01:41:27.440761 140140099741440 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1216 01:41:27.440854 140140099741440 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 01:41:27.440941 140140099741440 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 01:41:27.441016 140140099741440 hlog.py:32] train/00149/eval_val/85/corr True
I1216 01:41:27.441087 140140099741440 hlog.py:32] train/00149/eval_val/85 
I1216 01:41:27.441156 140140099741440 hlog.py:18] train/00149/eval_val/85{0.00s}
I1216 01:41:27.441243 140140099741440 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1216 01:41:27.441346 140140099741440 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1216 01:41:27.441438 140140099741440 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1216 01:41:27.441514 140140099741440 hlog.py:32] train/00149/eval_val/86/corr False
I1216 01:41:27.441585 140140099741440 hlog.py:32] train/00149/eval_val/86 
I1216 01:41:27.441653 140140099741440 hlog.py:18] train/00149/eval_val/86{0.00s}
I1216 01:41:27.441749 140140099741440 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1216 01:41:27.441858 140140099741440 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 01:41:27.441953 140140099741440 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 01:41:27.442030 140140099741440 hlog.py:32] train/00149/eval_val/87/corr True
I1216 01:41:27.442101 140140099741440 hlog.py:32] train/00149/eval_val/87 
I1216 01:41:27.442170 140140099741440 hlog.py:18] train/00149/eval_val/87{0.00s}
I1216 01:41:27.442261 140140099741440 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1216 01:41:27.442358 140140099741440 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1216 01:41:27.442446 140140099741440 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1216 01:41:27.442522 140140099741440 hlog.py:32] train/00149/eval_val/88/corr True
I1216 01:41:27.442592 140140099741440 hlog.py:32] train/00149/eval_val/88 
I1216 01:41:27.442662 140140099741440 hlog.py:18] train/00149/eval_val/88{0.00s}
I1216 01:41:27.442763 140140099741440 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1216 01:41:27.442868 140140099741440 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.442961 140140099741440 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.443037 140140099741440 hlog.py:32] train/00149/eval_val/89/corr True
I1216 01:41:27.443108 140140099741440 hlog.py:32] train/00149/eval_val/89 
I1216 01:41:27.443177 140140099741440 hlog.py:18] train/00149/eval_val/89{0.00s}
I1216 01:41:27.443273 140140099741440 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1216 01:41:27.443382 140140099741440 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1216 01:41:27.443502 140140099741440 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1216 01:41:27.443581 140140099741440 hlog.py:32] train/00149/eval_val/90/corr True
I1216 01:41:27.443655 140140099741440 hlog.py:32] train/00149/eval_val/90 
I1216 01:41:27.443740 140140099741440 hlog.py:18] train/00149/eval_val/90{0.00s}
I1216 01:41:27.443832 140140099741440 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1216 01:41:27.443932 140140099741440 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.444023 140140099741440 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.444099 140140099741440 hlog.py:32] train/00149/eval_val/91/corr True
I1216 01:41:27.444170 140140099741440 hlog.py:32] train/00149/eval_val/91 
I1216 01:41:27.444239 140140099741440 hlog.py:18] train/00149/eval_val/91{0.00s}
I1216 01:41:27.444331 140140099741440 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1216 01:41:27.444430 140140099741440 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.444519 140140099741440 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.444595 140140099741440 hlog.py:32] train/00149/eval_val/92/corr True
I1216 01:41:27.444666 140140099741440 hlog.py:32] train/00149/eval_val/92 
I1216 01:41:27.444736 140140099741440 hlog.py:18] train/00149/eval_val/92{0.00s}
I1216 01:41:27.444828 140140099741440 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1216 01:41:27.444927 140140099741440 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.445017 140140099741440 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.445093 140140099741440 hlog.py:32] train/00149/eval_val/93/corr True
I1216 01:41:27.445164 140140099741440 hlog.py:32] train/00149/eval_val/93 
I1216 01:41:27.445234 140140099741440 hlog.py:18] train/00149/eval_val/93{0.00s}
I1216 01:41:27.445326 140140099741440 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1216 01:41:27.445426 140140099741440 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.445521 140140099741440 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.445598 140140099741440 hlog.py:32] train/00149/eval_val/94/corr True
I1216 01:41:27.445669 140140099741440 hlog.py:32] train/00149/eval_val/94 
I1216 01:41:27.445739 140140099741440 hlog.py:18] train/00149/eval_val/94{0.00s}
I1216 01:41:27.445832 140140099741440 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1216 01:41:27.445931 140140099741440 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.446020 140140099741440 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.446097 140140099741440 hlog.py:32] train/00149/eval_val/95/corr True
I1216 01:41:27.446167 140140099741440 hlog.py:32] train/00149/eval_val/95 
I1216 01:41:27.446237 140140099741440 hlog.py:18] train/00149/eval_val/95{0.00s}
I1216 01:41:27.446331 140140099741440 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1216 01:41:27.446435 140140099741440 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1216 01:41:27.446527 140140099741440 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1216 01:41:27.446603 140140099741440 hlog.py:32] train/00149/eval_val/96/corr True
I1216 01:41:27.446674 140140099741440 hlog.py:32] train/00149/eval_val/96 
I1216 01:41:27.446744 140140099741440 hlog.py:18] train/00149/eval_val/96{0.00s}
I1216 01:41:27.446843 140140099741440 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1216 01:41:27.446996 140140099741440 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1216 01:41:27.447104 140140099741440 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1216 01:41:27.447182 140140099741440 hlog.py:32] train/00149/eval_val/97/corr True
I1216 01:41:27.447253 140140099741440 hlog.py:32] train/00149/eval_val/97 
I1216 01:41:27.447322 140140099741440 hlog.py:18] train/00149/eval_val/97{0.00s}
I1216 01:41:27.447436 140140099741440 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1216 01:41:27.447544 140140099741440 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1216 01:41:27.447638 140140099741440 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1216 01:41:27.447731 140140099741440 hlog.py:32] train/00149/eval_val/98/corr True
I1216 01:41:27.447802 140140099741440 hlog.py:32] train/00149/eval_val/98 
I1216 01:41:27.447872 140140099741440 hlog.py:18] train/00149/eval_val/98{0.00s}
I1216 01:41:27.447965 140140099741440 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1216 01:41:27.448067 140140099741440 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 01:41:27.448158 140140099741440 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 01:41:27.448240 140140099741440 hlog.py:32] train/00149/eval_val/99/corr True
I1216 01:41:27.448312 140140099741440 hlog.py:32] train/00149/eval_val/99 
I1216 01:41:27.448381 140140099741440 hlog.py:18] train/00149/eval_val/99{0.00s}
I1216 01:41:27.448467 140140099741440 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1216 01:41:27.448566 140140099741440 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 01:41:27.448658 140140099741440 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 01:41:27.448734 140140099741440 hlog.py:32] train/00149/eval_val/100/corr False
I1216 01:41:27.448805 140140099741440 hlog.py:32] train/00149/eval_val/100 
I1216 01:41:27.448874 140140099741440 hlog.py:18] train/00149/eval_val/100{0.00s}
I1216 01:41:27.448968 140140099741440 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1216 01:41:27.449070 140140099741440 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 01:41:27.449162 140140099741440 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 01:41:27.449239 140140099741440 hlog.py:32] train/00149/eval_val/101/corr True
I1216 01:41:27.449310 140140099741440 hlog.py:32] train/00149/eval_val/101 
I1216 01:41:27.449380 140140099741440 hlog.py:18] train/00149/eval_val/101{0.00s}
I1216 01:41:27.449471 140140099741440 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1216 01:41:27.449568 140140099741440 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 01:41:27.449657 140140099741440 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 01:41:27.449733 140140099741440 hlog.py:32] train/00149/eval_val/102/corr True
I1216 01:41:27.449804 140140099741440 hlog.py:32] train/00149/eval_val/102 
I1216 01:41:27.449873 140140099741440 hlog.py:18] train/00149/eval_val/102{0.00s}
I1216 01:41:27.449964 140140099741440 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1216 01:41:27.450060 140140099741440 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1216 01:41:27.450148 140140099741440 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1216 01:41:27.450225 140140099741440 hlog.py:32] train/00149/eval_val/103/corr True
I1216 01:41:27.450295 140140099741440 hlog.py:32] train/00149/eval_val/103 
I1216 01:41:27.450365 140140099741440 hlog.py:18] train/00149/eval_val/103{0.00s}
I1216 01:41:27.450455 140140099741440 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1216 01:41:27.450551 140140099741440 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.450640 140140099741440 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.450716 140140099741440 hlog.py:32] train/00149/eval_val/104/corr True
I1216 01:41:27.450787 140140099741440 hlog.py:32] train/00149/eval_val/104 
I1216 01:41:27.450856 140140099741440 hlog.py:18] train/00149/eval_val/104{0.00s}
I1216 01:41:27.450947 140140099741440 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1216 01:41:27.451043 140140099741440 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1216 01:41:27.451138 140140099741440 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1216 01:41:27.451215 140140099741440 hlog.py:32] train/00149/eval_val/105/corr True
I1216 01:41:27.451286 140140099741440 hlog.py:32] train/00149/eval_val/105 
I1216 01:41:27.451355 140140099741440 hlog.py:18] train/00149/eval_val/105{0.00s}
I1216 01:41:27.451467 140140099741440 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1216 01:41:27.451569 140140099741440 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1216 01:41:27.451660 140140099741440 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1216 01:41:27.451751 140140099741440 hlog.py:32] train/00149/eval_val/106/corr True
I1216 01:41:27.451822 140140099741440 hlog.py:32] train/00149/eval_val/106 
I1216 01:41:27.451891 140140099741440 hlog.py:18] train/00149/eval_val/106{0.00s}
I1216 01:41:27.451982 140140099741440 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1216 01:41:27.452078 140140099741440 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.452166 140140099741440 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.452242 140140099741440 hlog.py:32] train/00149/eval_val/107/corr True
I1216 01:41:27.452313 140140099741440 hlog.py:32] train/00149/eval_val/107 
I1216 01:41:27.452382 140140099741440 hlog.py:18] train/00149/eval_val/107{0.00s}
I1216 01:41:27.452472 140140099741440 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1216 01:41:27.452568 140140099741440 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1216 01:41:27.452656 140140099741440 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1216 01:41:27.452732 140140099741440 hlog.py:32] train/00149/eval_val/108/corr True
I1216 01:41:27.452802 140140099741440 hlog.py:32] train/00149/eval_val/108 
I1216 01:41:27.452872 140140099741440 hlog.py:18] train/00149/eval_val/108{0.00s}
I1216 01:41:27.452963 140140099741440 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1216 01:41:27.453058 140140099741440 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1216 01:41:27.453146 140140099741440 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1216 01:41:27.453222 140140099741440 hlog.py:32] train/00149/eval_val/109/corr True
I1216 01:41:27.453293 140140099741440 hlog.py:32] train/00149/eval_val/109 
I1216 01:41:27.453362 140140099741440 hlog.py:18] train/00149/eval_val/109{0.00s}
I1216 01:41:27.453452 140140099741440 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1216 01:41:27.453548 140140099741440 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.453636 140140099741440 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 01:41:27.453712 140140099741440 hlog.py:32] train/00149/eval_val/110/corr True
I1216 01:41:27.453783 140140099741440 hlog.py:32] train/00149/eval_val/110 
I1216 01:41:27.453853 140140099741440 hlog.py:18] train/00149/eval_val/110{0.00s}
I1216 01:41:27.453943 140140099741440 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1216 01:41:27.454039 140140099741440 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1216 01:41:27.454133 140140099741440 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1216 01:41:27.454210 140140099741440 hlog.py:32] train/00149/eval_val/111/corr True
I1216 01:41:27.454281 140140099741440 hlog.py:32] train/00149/eval_val/111 
I1216 01:41:27.454351 140140099741440 hlog.py:18] train/00149/eval_val/111{0.00s}
I1216 01:41:27.454442 140140099741440 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1216 01:41:27.454539 140140099741440 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1216 01:41:27.454627 140140099741440 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1216 01:41:27.454703 140140099741440 hlog.py:32] train/00149/eval_val/112/corr True
I1216 01:41:27.454774 140140099741440 hlog.py:32] train/00149/eval_val/112 
I1216 01:41:27.454843 140140099741440 hlog.py:18] train/00149/eval_val/112{0.00s}
I1216 01:41:27.454934 140140099741440 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1216 01:41:27.455031 140140099741440 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 01:41:27.455119 140140099741440 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 01:41:27.455195 140140099741440 hlog.py:32] train/00149/eval_val/113/corr True
I1216 01:41:27.455266 140140099741440 hlog.py:32] train/00149/eval_val/113 
I1216 01:41:27.455335 140140099741440 hlog.py:18] train/00149/eval_val/113{0.00s}
I1216 01:41:27.455450 140140099741440 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1216 01:41:27.455553 140140099741440 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.455644 140140099741440 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 01:41:27.455735 140140099741440 hlog.py:32] train/00149/eval_val/114/corr True
I1216 01:41:27.455806 140140099741440 hlog.py:32] train/00149/eval_val/114 
I1216 01:41:27.455876 140140099741440 hlog.py:18] train/00149/eval_val/114{0.00s}
I1216 01:41:27.455967 140140099741440 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1216 01:41:27.456064 140140099741440 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1216 01:41:27.456153 140140099741440 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1216 01:41:27.456229 140140099741440 hlog.py:32] train/00149/eval_val/115/corr True
I1216 01:41:27.456300 140140099741440 hlog.py:32] train/00149/eval_val/115 
I1216 01:41:27.456369 140140099741440 hlog.py:18] train/00149/eval_val/115{0.00s}
I1216 01:41:27.456459 140140099741440 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1216 01:41:27.456555 140140099741440 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.456644 140140099741440 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 01:41:27.456720 140140099741440 hlog.py:32] train/00149/eval_val/116/corr True
I1216 01:41:27.456791 140140099741440 hlog.py:32] train/00149/eval_val/116 
I1216 01:41:27.456861 140140099741440 hlog.py:18] train/00149/eval_val/116{0.00s}
I1216 01:41:27.456953 140140099741440 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1216 01:41:27.457052 140140099741440 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.457147 140140099741440 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.457224 140140099741440 hlog.py:32] train/00149/eval_val/117/corr True
I1216 01:41:27.457296 140140099741440 hlog.py:32] train/00149/eval_val/117 
I1216 01:41:27.457365 140140099741440 hlog.py:18] train/00149/eval_val/117{0.00s}
I1216 01:41:27.457457 140140099741440 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1216 01:41:27.457556 140140099741440 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.457646 140140099741440 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.457722 140140099741440 hlog.py:32] train/00149/eval_val/118/corr True
I1216 01:41:27.457793 140140099741440 hlog.py:32] train/00149/eval_val/118 
I1216 01:41:27.457863 140140099741440 hlog.py:18] train/00149/eval_val/118{0.00s}
I1216 01:41:27.457955 140140099741440 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1216 01:41:27.458053 140140099741440 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.458143 140140099741440 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 01:41:27.458219 140140099741440 hlog.py:32] train/00149/eval_val/119/corr True
I1216 01:41:27.458289 140140099741440 hlog.py:32] train/00149/eval_val/119 
I1216 01:41:27.458359 140140099741440 hlog.py:18] train/00149/eval_val/119{0.00s}
I1216 01:41:27.458448 140140099741440 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1216 01:41:27.458537 140140099741440 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1216 01:41:27.458620 140140099741440 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1216 01:41:27.458696 140140099741440 hlog.py:32] train/00149/eval_val/120/corr True
I1216 01:41:27.458767 140140099741440 hlog.py:32] train/00149/eval_val/120 
I1216 01:41:27.458837 140140099741440 hlog.py:18] train/00149/eval_val/120{0.00s}
I1216 01:41:27.458925 140140099741440 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1216 01:41:27.459014 140140099741440 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1216 01:41:27.459097 140140099741440 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1216 01:41:27.459173 140140099741440 hlog.py:32] train/00149/eval_val/121/corr True
I1216 01:41:27.459244 140140099741440 hlog.py:32] train/00149/eval_val/121 
I1216 01:41:27.459313 140140099741440 hlog.py:18] train/00149/eval_val/121{0.00s}
I1216 01:41:27.459424 140140099741440 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1216 01:41:27.459531 140140099741440 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1216 01:41:27.459624 140140099741440 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1216 01:41:27.459702 140140099741440 hlog.py:32] train/00149/eval_val/122/corr True
I1216 01:41:27.459787 140140099741440 hlog.py:32] train/00149/eval_val/122 
I1216 01:41:27.459857 140140099741440 hlog.py:18] train/00149/eval_val/122{0.00s}
I1216 01:41:27.459949 140140099741440 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1216 01:41:27.460048 140140099741440 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1216 01:41:27.460143 140140099741440 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1216 01:41:27.460219 140140099741440 hlog.py:32] train/00149/eval_val/123/corr True
I1216 01:41:27.460291 140140099741440 hlog.py:32] train/00149/eval_val/123 
I1216 01:41:27.460360 140140099741440 hlog.py:18] train/00149/eval_val/123{0.00s}
I1216 01:41:27.460452 140140099741440 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1216 01:41:27.460551 140140099741440 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1216 01:41:27.460640 140140099741440 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1216 01:41:27.460716 140140099741440 hlog.py:32] train/00149/eval_val/124/corr True
I1216 01:41:27.460788 140140099741440 hlog.py:32] train/00149/eval_val/124 
I1216 01:41:27.460857 140140099741440 hlog.py:18] train/00149/eval_val/124{0.00s}
I1216 01:41:27.460949 140140099741440 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1216 01:41:27.461048 140140099741440 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1216 01:41:27.461137 140140099741440 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1216 01:41:27.461213 140140099741440 hlog.py:32] train/00149/eval_val/125/corr True
I1216 01:41:27.461284 140140099741440 hlog.py:32] train/00149/eval_val/125 
I1216 01:41:27.461354 140140099741440 hlog.py:18] train/00149/eval_val/125{0.00s}
I1216 01:41:27.461444 140140099741440 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1216 01:41:27.461538 140140099741440 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.461624 140140099741440 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.461700 140140099741440 hlog.py:32] train/00149/eval_val/126/corr True
I1216 01:41:27.461771 140140099741440 hlog.py:32] train/00149/eval_val/126 
I1216 01:41:27.461840 140140099741440 hlog.py:18] train/00149/eval_val/126{0.00s}
I1216 01:41:27.461930 140140099741440 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1216 01:41:27.462023 140140099741440 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.462109 140140099741440 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.462185 140140099741440 hlog.py:32] train/00149/eval_val/127/corr True
I1216 01:41:27.462255 140140099741440 hlog.py:32] train/00149/eval_val/127 
I1216 01:41:27.462325 140140099741440 hlog.py:18] train/00149/eval_val/127{0.00s}
I1216 01:41:27.602292 140140099741440 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1216 01:41:27.602422 140140099741440 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.602517 140140099741440 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.602596 140140099741440 hlog.py:32] train/00149/eval_val/128/corr True
I1216 01:41:27.602668 140140099741440 hlog.py:32] train/00149/eval_val/128 
I1216 01:41:27.602739 140140099741440 hlog.py:18] train/00149/eval_val/128{0.00s}
I1216 01:41:27.602829 140140099741440 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1216 01:41:27.602922 140140099741440 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.603015 140140099741440 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.603090 140140099741440 hlog.py:32] train/00149/eval_val/129/corr True
I1216 01:41:27.603159 140140099741440 hlog.py:32] train/00149/eval_val/129 
I1216 01:41:27.603227 140140099741440 hlog.py:18] train/00149/eval_val/129{0.00s}
I1216 01:41:27.603316 140140099741440 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1216 01:41:27.603430 140140099741440 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.603521 140140099741440 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.603597 140140099741440 hlog.py:32] train/00149/eval_val/130/corr True
I1216 01:41:27.603668 140140099741440 hlog.py:32] train/00149/eval_val/130 
I1216 01:41:27.603750 140140099741440 hlog.py:18] train/00149/eval_val/130{0.00s}
I1216 01:41:27.603853 140140099741440 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1216 01:41:27.603947 140140099741440 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.604033 140140099741440 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.604120 140140099741440 hlog.py:32] train/00149/eval_val/131/corr True
I1216 01:41:27.604189 140140099741440 hlog.py:32] train/00149/eval_val/131 
I1216 01:41:27.604257 140140099741440 hlog.py:18] train/00149/eval_val/131{0.00s}
I1216 01:41:27.604344 140140099741440 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1216 01:41:27.604434 140140099741440 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.604517 140140099741440 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 01:41:27.604590 140140099741440 hlog.py:32] train/00149/eval_val/132/corr True
I1216 01:41:27.604659 140140099741440 hlog.py:32] train/00149/eval_val/132 
I1216 01:41:27.604726 140140099741440 hlog.py:18] train/00149/eval_val/132{0.00s}
I1216 01:41:27.604824 140140099741440 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1216 01:41:27.604928 140140099741440 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 01:41:27.605014 140140099741440 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1216 01:41:27.605090 140140099741440 hlog.py:32] train/00149/eval_val/133/corr False
I1216 01:41:27.605172 140140099741440 hlog.py:32] train/00149/eval_val/133 
I1216 01:41:27.605240 140140099741440 hlog.py:18] train/00149/eval_val/133{0.00s}
I1216 01:41:27.605331 140140099741440 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1216 01:41:27.605432 140140099741440 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.605522 140140099741440 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.605596 140140099741440 hlog.py:32] train/00149/eval_val/134/corr True
I1216 01:41:27.605664 140140099741440 hlog.py:32] train/00149/eval_val/134 
I1216 01:41:27.605732 140140099741440 hlog.py:18] train/00149/eval_val/134{0.00s}
I1216 01:41:27.605823 140140099741440 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1216 01:41:27.605925 140140099741440 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.606020 140140099741440 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 01:41:27.606094 140140099741440 hlog.py:32] train/00149/eval_val/135/corr True
I1216 01:41:27.606163 140140099741440 hlog.py:32] train/00149/eval_val/135 
I1216 01:41:27.606230 140140099741440 hlog.py:18] train/00149/eval_val/135{0.00s}
I1216 01:41:27.606318 140140099741440 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1216 01:41:27.606412 140140099741440 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.606498 140140099741440 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.606572 140140099741440 hlog.py:32] train/00149/eval_val/136/corr True
I1216 01:41:27.606640 140140099741440 hlog.py:32] train/00149/eval_val/136 
I1216 01:41:27.606708 140140099741440 hlog.py:18] train/00149/eval_val/136{0.00s}
I1216 01:41:27.606795 140140099741440 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1216 01:41:27.606889 140140099741440 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.606975 140140099741440 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.607048 140140099741440 hlog.py:32] train/00149/eval_val/137/corr True
I1216 01:41:27.607117 140140099741440 hlog.py:32] train/00149/eval_val/137 
I1216 01:41:27.607184 140140099741440 hlog.py:18] train/00149/eval_val/137{0.00s}
I1216 01:41:27.607272 140140099741440 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1216 01:41:27.607366 140140099741440 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.607474 140140099741440 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.607550 140140099741440 hlog.py:32] train/00149/eval_val/138/corr True
I1216 01:41:27.607621 140140099741440 hlog.py:32] train/00149/eval_val/138 
I1216 01:41:27.607691 140140099741440 hlog.py:18] train/00149/eval_val/138{0.00s}
I1216 01:41:27.607792 140140099741440 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1216 01:41:27.607886 140140099741440 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.607972 140140099741440 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 01:41:27.608045 140140099741440 hlog.py:32] train/00149/eval_val/139/corr True
I1216 01:41:27.608114 140140099741440 hlog.py:32] train/00149/eval_val/139 
I1216 01:41:27.608180 140140099741440 hlog.py:18] train/00149/eval_val/139{0.00s}
I1216 01:41:27.608264 140140099741440 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1216 01:41:27.608361 140140099741440 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 01:41:27.608451 140140099741440 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 01:41:27.608525 140140099741440 hlog.py:32] train/00149/eval_val/140/corr False
I1216 01:41:27.608593 140140099741440 hlog.py:32] train/00149/eval_val/140 
I1216 01:41:27.608661 140140099741440 hlog.py:18] train/00149/eval_val/140{0.00s}
I1216 01:41:27.608744 140140099741440 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1216 01:41:27.608847 140140099741440 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 01:41:27.608937 140140099741440 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 01:41:27.609010 140140099741440 hlog.py:32] train/00149/eval_val/141/corr False
I1216 01:41:27.609079 140140099741440 hlog.py:32] train/00149/eval_val/141 
I1216 01:41:27.609146 140140099741440 hlog.py:18] train/00149/eval_val/141{0.00s}
I1216 01:41:27.609228 140140099741440 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1216 01:41:27.609320 140140099741440 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1216 01:41:27.609405 140140099741440 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1216 01:41:27.609478 140140099741440 hlog.py:32] train/00149/eval_val/142/corr False
I1216 01:41:27.609546 140140099741440 hlog.py:32] train/00149/eval_val/142 
I1216 01:41:27.609614 140140099741440 hlog.py:18] train/00149/eval_val/142{0.00s}
I1216 01:41:27.609695 140140099741440 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1216 01:41:27.609787 140140099741440 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1216 01:41:27.609871 140140099741440 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1216 01:41:27.609944 140140099741440 hlog.py:32] train/00149/eval_val/143/corr False
I1216 01:41:27.610013 140140099741440 hlog.py:32] train/00149/eval_val/143 
I1216 01:41:27.610080 140140099741440 hlog.py:18] train/00149/eval_val/143{0.00s}
I1216 01:41:27.610162 140140099741440 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1216 01:41:27.610247 140140099741440 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1216 01:41:27.610330 140140099741440 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1216 01:41:27.610403 140140099741440 hlog.py:32] train/00149/eval_val/144/corr False
I1216 01:41:27.610471 140140099741440 hlog.py:32] train/00149/eval_val/144 
I1216 01:41:27.610539 140140099741440 hlog.py:18] train/00149/eval_val/144{0.00s}
I1216 01:41:27.610621 140140099741440 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1216 01:41:27.610714 140140099741440 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) )
I1216 01:41:27.610798 140140099741440 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1216 01:41:27.610871 140140099741440 hlog.py:32] train/00149/eval_val/145/corr False
I1216 01:41:27.610939 140140099741440 hlog.py:32] train/00149/eval_val/145 
I1216 01:41:27.611006 140140099741440 hlog.py:18] train/00149/eval_val/145{0.00s}
I1216 01:41:27.611096 140140099741440 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1216 01:41:27.611202 140140099741440 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _density ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _countryid ( largest ) ) , _traverse ( D , C ) ) ) ) )
I1216 01:41:27.611294 140140099741440 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1216 01:41:27.611368 140140099741440 hlog.py:32] train/00149/eval_val/146/corr False
I1216 01:41:27.611459 140140099741440 hlog.py:32] train/00149/eval_val/146 
I1216 01:41:27.611536 140140099741440 hlog.py:18] train/00149/eval_val/146{0.00s}
I1216 01:41:27.611629 140140099741440 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1216 01:41:27.611740 140140099741440 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1216 01:41:27.611827 140140099741440 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1216 01:41:27.611901 140140099741440 hlog.py:32] train/00149/eval_val/147/corr True
I1216 01:41:27.611970 140140099741440 hlog.py:32] train/00149/eval_val/147 
I1216 01:41:27.612037 140140099741440 hlog.py:18] train/00149/eval_val/147{0.00s}
I1216 01:41:27.612113 140140099741440 hlog.py:32] train/00149/eval_val/acc 0.8378
I1216 01:41:27.663296 140140099741440 hlog.py:18] train/00149{17.01s}
I1216 01:41:27.667006 140140099741440 hlog.py:18] train{2466.35s}
