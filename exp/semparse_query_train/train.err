I1128 04:41:17.422766 139639960884992 hlog.py:24] # --noTEST
I1128 04:41:17.423198 139639960884992 hlog.py:24] # --seed=0
I1128 04:41:17.423290 139639960884992 hlog.py:24] # --dataset=semparse
I1128 04:41:17.423370 139639960884992 hlog.py:24] # --model_dir=model
I1128 04:41:17.423446 139639960884992 hlog.py:24] # --n_checkpoint=10
I1128 04:41:17.423521 139639960884992 hlog.py:24] # --nologtostderr
I1128 04:41:17.423596 139639960884992 hlog.py:24] # --noalsologtostderr
I1128 04:41:17.423669 139639960884992 hlog.py:24] # --log_dir=
I1128 04:41:17.423743 139639960884992 hlog.py:24] # --verbosity=0
I1128 04:41:17.423816 139639960884992 hlog.py:24] # --verbosity=0
I1128 04:41:17.423890 139639960884992 hlog.py:24] # --stderrthreshold=fatal
I1128 04:41:17.423963 139639960884992 hlog.py:24] # --showprefixforinfo
I1128 04:41:17.424036 139639960884992 hlog.py:24] # --compute_adjacencies
I1128 04:41:17.424108 139639960884992 hlog.py:24] # --nodedup
I1128 04:41:17.424180 139639960884992 hlog.py:24] # --wug_limit=50
I1128 04:41:17.424253 139639960884992 hlog.py:24] # --semparse_split=query
I1128 04:41:17.424325 139639960884992 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1128 04:41:17.424397 139639960884992 hlog.py:24] # --semparse_mrl=logic
I1128 04:41:17.424469 139639960884992 hlog.py:24] # --val_fold=8
I1128 04:41:17.424554 139639960884992 hlog.py:24] # --test_fold=9
I1128 04:41:17.424626 139639960884992 hlog.py:24] # --n_emb=64
I1128 04:41:17.424698 139639960884992 hlog.py:24] # --n_enc=512
I1128 04:41:17.424770 139639960884992 hlog.py:24] # --dropout=0.2
I1128 04:41:17.424842 139639960884992 hlog.py:24] # --nocopy_sup
I1128 04:41:17.424914 139639960884992 hlog.py:24] # --n_epochs=300
I1128 04:41:17.424986 139639960884992 hlog.py:24] # --n_epoch_batches=32
I1128 04:41:17.425057 139639960884992 hlog.py:24] # --n_batch=64
I1128 04:41:17.425129 139639960884992 hlog.py:24] # --lr=0.0003
I1128 04:41:17.425201 139639960884992 hlog.py:24] # --clip=1.0
I1128 04:41:17.425273 139639960884992 hlog.py:24] # --sched_factor=1.0
I1128 04:41:17.425345 139639960884992 hlog.py:24] # --norun_with_pdb
I1128 04:41:17.425417 139639960884992 hlog.py:24] # --nopdb_post_mortem
I1128 04:41:17.425489 139639960884992 hlog.py:24] # --norun_with_profiling
I1128 04:41:17.425560 139639960884992 hlog.py:24] # --use_cprofile_for_profiling
I1128 04:41:17.425632 139639960884992 hlog.py:24] # --noonly_check_args
I1128 04:41:17.425704 139639960884992 hlog.py:24] # --nohelp
I1128 04:41:17.425776 139639960884992 hlog.py:24] # --nohelp
I1128 04:41:17.425848 139639960884992 hlog.py:24] # --nohelpshort
I1128 04:41:17.425919 139639960884992 hlog.py:24] # --nohelpfull
I1128 04:41:17.425991 139639960884992 hlog.py:24] # --nohelpxml
I1128 04:41:17.426062 139639960884992 hlog.py:24] # 
I1128 04:41:17.458244 139639960884992 hlog.py:32] train 543
I1128 04:41:17.458359 139639960884992 hlog.py:32] aug 0
I1128 04:42:05.595173 139639960884992 hlog.py:32] train/00000/loss 7.4489
I1128 04:42:05.596210 139639960884992 hlog.py:32] train/00000/eval/train/inp what are the populations of the states through which the WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 04:42:05.596360 139639960884992 hlog.py:32] train/00000/eval/train/out which is the lowest point of the states that the WUG0 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 04:42:05.831017 139639960884992 hlog.py:32] train/00000/eval/train/??? which what is how the cities rivers states most largest ( B B WUG1 B _state B ) ) ) ) _river ) _state ) ( ) , A , A ) ) , ( ( ) ,
I1128 04:42:05.831303 139639960884992 hlog.py:18] train/00000{30.32s}
I1128 04:42:37.506168 139639960884992 hlog.py:32] train/00001/loss 4.4488
I1128 04:42:37.507119 139639960884992 hlog.py:32] train/00001/eval/train/inp how long is the WUG0 in the usa ( A , ( _len ( B , A ) , WUG1 B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 04:42:37.507251 139639960884992 hlog.py:32] train/00001/eval/train/out what is the WUG0 in the united states ( A , WUG1 A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 04:42:37.651689 139639960884992 hlog.py:32] train/00001/eval/train/??? what rivers states the WUG0 of highest me usa ( A , B ( B , _next_to ( B , _const ( A ) , _const ( C ) , _traverse ( C ) , _traverse ( D , _state ( _traverse , B ) , _const ( C ) ) ) )
I1128 04:42:37.651947 139639960884992 hlog.py:18] train/00001{31.82s}
I1128 04:43:10.853641 139639960884992 hlog.py:32] train/00002/loss 3.3878
I1128 04:43:10.854589 139639960884992 hlog.py:32] train/00002/eval/train/inp what is the WUG0 WUG1 texas ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1128 04:43:10.854715 139639960884992 hlog.py:32] train/00002/eval/train/out what is the WUG0 WUG1 arkansas ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1128 04:43:10.946697 139639960884992 hlog.py:32] train/00002/eval/train/??? what is the WUG0 WUG1 carolina ( A ) , _const ( A , _const ( carolina ( C ) , _traverse ( B , \+ ) ) ) ) )
I1128 04:43:10.946953 139639960884992 hlog.py:18] train/00002{33.29s}
I1128 04:43:42.868447 139639960884992 hlog.py:32] train/00003/loss 2.7788
I1128 04:43:42.869872 139639960884992 hlog.py:32] train/00003/eval/train/inp what state has WUG0 population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:43:42.870107 139639960884992 hlog.py:32] train/00003/eval/train/out what state has WUG0 capital ( A , ( _state ( A ) , _loc ( B , A ) , WUG1 ( B , _capital ( B ) ) ) )
I1128 04:43:42.978151 139639960884992 hlog.py:32] train/00003/eval/train/??? what is WUG0 population in texas united ( A , _lowest ( B , A ) , _const ( B , ( texas , C ) ) ) ) )
I1128 04:43:42.978440 139639960884992 hlog.py:18] train/00003{32.03s}
I1128 04:44:13.903997 139639960884992 hlog.py:32] train/00004/loss 2.4268
I1128 04:44:13.904971 139639960884992 hlog.py:32] train/00004/eval/train/inp what state has the WUG0 population ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 04:44:13.905110 139639960884992 hlog.py:32] train/00004/eval/train/out what state has the WUG0 capital ( A , ( _state ( A ) , _loc ( B , A ) , WUG1 ( B , _capital ( B ) ) ) )
I1128 04:44:14.056856 139639960884992 hlog.py:32] train/00004/eval/train/??? how many people a in the state with the WUG0 average in ( A , ( _population ( A , B ) , _city ( B ) , _loc ( C , B ) , _city ( B ) , _loc ( C , C WUG1 , _loc ( D ) ) ) ) ) ) )
I1128 04:44:14.057082 139639960884992 hlog.py:18] train/00004{31.08s}
I1128 04:44:42.762514 139639960884992 hlog.py:32] train/00005/loss 2.1309
I1128 04:44:42.763467 139639960884992 hlog.py:32] train/00005/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 04:44:42.763601 139639960884992 hlog.py:32] train/00005/eval/train/out what is the longest river that does not WUG0 through texas ( A , _longest ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) ) )
I1128 04:44:42.893502 139639960884992 hlog.py:32] train/00005/eval/train/??? what are the populations of states through which the mississippi river WUG0 through ( A , ( _state ( B ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) , _traverse ( B , A ) ) )
I1128 04:44:42.893714 139639960884992 hlog.py:18] train/00005{28.84s}
I1128 04:45:12.622614 139639960884992 hlog.py:32] train/00006/loss 1.9488
I1128 04:45:12.623602 139639960884992 hlog.py:32] train/00006/eval/train/inp WUG0 WUG1 the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 04:45:12.623742 139639960884992 hlog.py:32] train/00006/eval/train/out WUG0 WUG1 the smallest population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 04:45:12.685134 139639960884992 hlog.py:32] train/00006/eval/train/??? WUG0 WUG1 most states ( A , _most ( B , WUG0 , WUG1 ) ) ) )
I1128 04:45:12.685335 139639960884992 hlog.py:18] train/00006{29.79s}
I1128 04:45:42.712275 139639960884992 hlog.py:32] train/00007/loss 1.7648
I1128 04:45:42.713402 139639960884992 hlog.py:32] train/00007/eval/train/inp what are the populations of the states through WUG0 mississippi WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 04:45:42.713544 139639960884992 hlog.py:32] train/00007/eval/train/out what is the most populous state through WUG0 mississippi WUG1 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 04:45:42.858168 139639960884992 hlog.py:32] train/00007/eval/train/??? what is the largest city in the state of WUG0 mississippi WUG1 ( A , WUG1 river ( B , A ) , _river ( B ) , _loc ( D , C ) , _const ( D , _stateid ( mississippi ) ) , _traverse ( C , B ) ) ) )
I1128 04:45:42.858334 139639960884992 hlog.py:18] train/00007{30.17s}
I1128 04:46:12.346311 139639960884992 hlog.py:32] train/00008/loss 1.6321
I1128 04:46:12.347285 139639960884992 hlog.py:32] train/00008/eval/train/inp how many major cities are in states bordering WUG0 ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( WUG0 ) ) ) , A ) )
I1128 04:46:12.347418 139639960884992 hlog.py:32] train/00008/eval/train/out give me the states that border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 04:46:12.431825 139639960884992 hlog.py:32] train/00008/eval/train/??? how many rivers are in WUG0 ( A , _count ( B ) , _const ( C , _stateid ( WUG0 ) ) ) ) )
I1128 04:46:12.432071 139639960884992 hlog.py:18] train/00008{29.57s}
I1128 04:46:41.584183 139639960884992 hlog.py:32] train/00009/loss 1.5448
I1128 04:46:41.587825 139639960884992 hlog.py:32] train/00009/eval/train/inp what are the major WUG0 texas ( A , WUG1 ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 04:46:41.588037 139639960884992 hlog.py:32] train/00009/eval/train/out what are the major WUG0 states through which the mississippi runs ( A , WUG1 ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _traverse ( C , B ) , _const ( C , _riverid ( mississippi ) ) ) )
I1128 04:46:41.683606 139639960884992 hlog.py:32] train/00009/eval/train/??? what states does the WUG0 runs through ( A , ( _place ( B ) , _loc ( B , A ) , _river ( B ) ) )
I1128 04:46:42.358422 139639960884992 hlog.py:18] train/00009{29.93s}
I1128 04:47:13.510759 139639960884992 hlog.py:32] train/00010/loss 1.4029
I1128 04:47:13.511713 139639960884992 hlog.py:32] train/00010/eval/train/inp what is the WUG0 in texas ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1128 04:47:13.511843 139639960884992 hlog.py:32] train/00010/eval/train/out what is the WUG0 in wyoming ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( wyoming ) ) ) ) )
I1128 04:47:13.599782 139639960884992 hlog.py:32] train/00010/eval/train/??? what is the WUG0 city in country ( A , _longest ( A , B ) , _const ( B , _stateid ( country _ ) ) ) )
I1128 04:47:13.600406 139639960884992 hlog.py:18] train/00010{31.24s}
I1128 04:47:45.448839 139639960884992 hlog.py:32] train/00011/loss 1.3471
I1128 04:47:45.449837 139639960884992 hlog.py:32] train/00011/eval/train/inp what states border WUG0 with the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 04:47:45.449971 139639960884992 hlog.py:32] train/00011/eval/train/out could you tell me what is the highest point in WUG0 of oregon ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( oregon ) ) ) ) )
I1128 04:47:45.576680 139639960884992 hlog.py:32] train/00011/eval/train/??? what are the populations of the WUG0 with the largest population ( A , ( _river ( A ) , _loc ( A , B ) , _largest ( C , _smallest _state ( C ) , _density ( C , B ) ) ) )
I1128 04:47:45.576913 139639960884992 hlog.py:18] train/00011{31.98s}
I1128 04:48:14.766682 139639960884992 hlog.py:32] train/00012/loss 1.2722
I1128 04:48:14.767610 139639960884992 hlog.py:32] train/00012/eval/train/inp what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 04:48:14.767744 139639960884992 hlog.py:32] train/00012/eval/train/out which states does the colorado WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( colorado ) ) , _traverse ( B , A ) ) )
I1128 04:48:14.908883 139639960884992 hlog.py:32] train/00012/eval/train/??? what is the lowest point of the states that the colorado WUG0 through ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( colorado ) ) , _traverse ( C , B ) ) ) )
I1128 04:48:14.909128 139639960884992 hlog.py:18] train/00012{29.33s}
I1128 04:48:45.331542 139639960884992 hlog.py:32] train/00013/loss 1.2121
I1128 04:48:45.332575 139639960884992 hlog.py:32] train/00013/eval/train/inp what is the biggest state in WUG0 ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 04:48:45.332751 139639960884992 hlog.py:32] train/00013/eval/train/out what rivers run through the state with the lowest point in WUG0 ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 04:48:45.456977 139639960884992 hlog.py:32] train/00013/eval/train/??? which is the antonio of the state runs WUG0 through ( A , _most ( A , B ) , _capital ( B ) , _loc ( B , C ) , _const ( C , _stateid ( through ) ) ) ) )
I1128 04:48:45.457193 139639960884992 hlog.py:18] train/00013{30.55s}
I1128 04:49:15.195835 139639960884992 hlog.py:32] train/00014/loss 1.1760
I1128 04:49:15.196855 139639960884992 hlog.py:32] train/00014/eval/train/inp what river WUG0 the most states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 04:49:15.196985 139639960884992 hlog.py:32] train/00014/eval/train/out which river WUG0 most states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 04:49:15.268136 139639960884992 hlog.py:32] train/00014/eval/train/??? what are WUG0 the most rivers ( A ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:49:15.268344 139639960884992 hlog.py:18] train/00014{29.81s}
I1128 04:49:46.678255 139639960884992 hlog.py:32] train/00015/loss 1.1378
I1128 04:49:46.679192 139639960884992 hlog.py:32] train/00015/eval/train/inp what states WUG0 the ohio WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:49:46.679321 139639960884992 hlog.py:32] train/00015/eval/train/out which states WUG0 the colorado WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( colorado ) ) , _traverse ( B , A ) ) )
I1128 04:49:46.775806 139639960884992 hlog.py:32] train/00015/eval/train/??? what states WUG0 the mississippi WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( C , A ) ) )
I1128 04:49:46.776031 139639960884992 hlog.py:18] train/00015{31.51s}
I1128 04:50:18.997698 139639960884992 hlog.py:32] train/00016/loss 1.0783
I1128 04:50:18.998691 139639960884992 hlog.py:32] train/00016/eval/train/inp which state WUG0 WUG1 major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 04:50:18.998816 139639960884992 hlog.py:32] train/00016/eval/train/out what state WUG0 WUG1 cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 04:50:19.104191 139639960884992 hlog.py:32] train/00016/eval/train/??? what state WUG0 WUG1 rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( C , A ) , _river ( B ) ) ) ) )
I1128 04:50:19.104398 139639960884992 hlog.py:18] train/00016{32.33s}
I1128 04:50:48.539763 139639960884992 hlog.py:32] train/00017/loss 1.0529
I1128 04:50:48.540706 139639960884992 hlog.py:32] train/00017/eval/train/inp WUG0 has the smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:50:48.540836 139639960884992 hlog.py:32] train/00017/eval/train/out WUG0 is miami in ( A , ( _state ( A ) , _const ( B , _cityid ( miami , _ ) ) , _loc ( B , A ) ) )
I1128 04:50:48.622103 139639960884992 hlog.py:32] train/00017/eval/train/??? WUG0 has the smallest urban population A , _largest ( B , ( _state ( B ) , _population ( A , B ) ) ) )
I1128 04:50:48.622293 139639960884992 hlog.py:18] train/00017{29.52s}
I1128 04:51:20.172860 139639960884992 hlog.py:32] train/00018/loss 1.0055
I1128 04:51:20.173950 139639960884992 hlog.py:32] train/00018/eval/train/inp which river runs through WUG0 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 04:51:20.174090 139639960884992 hlog.py:32] train/00018/eval/train/out what is the population of the state that borders the WUG0 states ( A , ( _population ( B , A ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1128 04:51:20.338830 139639960884992 hlog.py:32] train/00018/eval/train/??? what is the highest point in the state with WUG0 rivers ( A , _highest ( B , ( _place ( A ) , _loc ( A , B ) , _largest ( C , ( _place ( C ) , _loc ( C , C ) , _const ( D , _countryid ( usa ) ) ) ) ) ) ) )
I1128 04:51:20.339074 139639960884992 hlog.py:18] train/00018{31.72s}
I1128 04:51:51.724277 139639960884992 hlog.py:32] train/00019/loss 0.9795
I1128 04:51:51.725317 139639960884992 hlog.py:32] train/00019/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 04:51:51.725472 139639960884992 hlog.py:32] train/00019/eval/train/out what states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:51:51.897565 139639960884992 hlog.py:32] train/00019/eval/train/??? what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _const ( C , _riverid ( mississippi ) ) )
I1128 04:51:51.966746 139639960884992 hlog.py:18] train/00019{31.63s}
I1128 04:52:23.406262 139639960884992 hlog.py:32] train/00020/loss 0.9313
I1128 04:52:23.407213 139639960884992 hlog.py:32] train/00020/eval/train/inp what states border WUG0 with the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 04:52:23.407358 139639960884992 hlog.py:32] train/00020/eval/train/out how many rivers do not traverse WUG0 with the capital albany ( A , _count ( B , ( _river ( B ) , \+ ( _traverse ( B , C ) , _state ( C ) , _loc ( D , C ) , _capital ( D ) , _const ( D , _cityid ( albany , _ ) ) ) ) , A ) )
I1128 04:52:23.526185 139639960884992 hlog.py:32] train/00020/eval/train/??? what is the longest river in WUG0 with the highest elevation ( A , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _highest ( C , _place ( C ) ) ) ) )
I1128 04:52:23.526377 139639960884992 hlog.py:18] train/00020{31.56s}
I1128 04:52:54.163012 139639960884992 hlog.py:32] train/00021/loss 0.9250
I1128 04:52:54.164277 139639960884992 hlog.py:32] train/00021/eval/train/inp what states does the ohio river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:52:54.164417 139639960884992 hlog.py:32] train/00021/eval/train/out what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 04:52:54.293442 139639960884992 hlog.py:32] train/00021/eval/train/??? what states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:52:54.293683 139639960884992 hlog.py:18] train/00021{30.77s}
I1128 04:53:26.538905 139639960884992 hlog.py:32] train/00022/loss 0.8856
I1128 04:53:26.539889 139639960884992 hlog.py:32] train/00022/eval/train/inp what state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:53:26.540024 139639960884992 hlog.py:32] train/00022/eval/train/out what state borders WUG0 states ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1128 04:53:26.659536 139639960884992 hlog.py:32] train/00022/eval/train/??? what is the population of the state with the WUG0 population density ( A , ( _population ( B , A ) , _smallest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 04:53:26.684987 139639960884992 hlog.py:18] train/00022{32.39s}
I1128 04:54:00.657039 139639960884992 hlog.py:32] train/00023/loss 0.8534
I1128 04:54:00.657998 139639960884992 hlog.py:32] train/00023/eval/train/inp what city WUG0 WUG1 ( A , _largest ( B , ( _city ( A ) , _population ( A , B ) ) ) )
I1128 04:54:00.658136 139639960884992 hlog.py:32] train/00023/eval/train/out what state which the mississippi runs through WUG0 WUG1 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 04:54:00.742238 139639960884992 hlog.py:32] train/00023/eval/train/??? what state WUG0 WUG1 ( A , _state ( A ) , _loc ( B , A ) , _state ( B ) ) ) )
I1128 04:54:00.742516 139639960884992 hlog.py:18] train/00023{34.06s}
I1128 04:54:31.004259 139639960884992 hlog.py:32] train/00024/loss 0.8441
I1128 04:54:31.005225 139639960884992 hlog.py:32] train/00024/eval/train/inp what are the populations of the states through which the WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 04:54:31.005356 139639960884992 hlog.py:32] train/00024/eval/train/out what states does the WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 04:54:31.161441 139639960884992 hlog.py:32] train/00024/eval/train/??? what is the largest city in smallest state through which the WUG0 ( A , ( _population ( B , A ) , _smallest ( B , ( _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) ) ) )
I1128 04:54:31.161689 139639960884992 hlog.py:18] train/00024{30.42s}
I1128 04:55:01.290414 139639960884992 hlog.py:32] train/00025/loss 0.8249
I1128 04:55:01.291386 139639960884992 hlog.py:32] train/00025/eval/train/inp what state has the smallest WUG0 ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 04:55:01.291514 139639960884992 hlog.py:32] train/00025/eval/train/out what is the WUG0 of all the states combined ( A , _sum ( C , _state ( C ) , WUG1 ( C ) , A ) )
I1128 04:55:01.378935 139639960884992 hlog.py:32] train/00025/eval/train/??? what is the lowest point of all WUG0 ( A , ( _population ( B , A ) , _const ( B , _placeid ( WUG0 ) ) ) ) )
I1128 04:55:01.379141 139639960884992 hlog.py:18] train/00025{30.22s}
I1128 04:55:32.128790 139639960884992 hlog.py:32] train/00026/loss 0.8021
I1128 04:55:32.129722 139639960884992 hlog.py:32] train/00026/eval/train/inp what state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:55:32.129856 139639960884992 hlog.py:32] train/00026/eval/train/out what is the population density of the state with the WUG0 area ( A , ( _density ( B , A ) , _smallest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 04:55:32.215492 139639960884992 hlog.py:32] train/00026/eval/train/??? which state has the WUG0 urban population ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:55:32.215700 139639960884992 hlog.py:18] train/00026{30.84s}
I1128 04:56:03.684649 139639960884992 hlog.py:32] train/00027/loss 0.7799
I1128 04:56:03.685582 139639960884992 hlog.py:32] train/00027/eval/train/inp what states does the ohio river WUG0 ( A , ( _state ( A ) , _const ( B , WUG1 ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:56:03.685722 139639960884992 hlog.py:32] train/00027/eval/train/out what states does the colorado river WUG0 ( A , ( _state ( A ) , _const ( B , WUG1 ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:56:03.793330 139639960884992 hlog.py:32] train/00027/eval/train/??? which states does the mississippi river WUG0 ( A , ( _state ( A ) , _const ( B , WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 04:56:03.793513 139639960884992 hlog.py:18] train/00027{31.58s}
I1128 04:56:33.651603 139639960884992 hlog.py:32] train/00028/loss 0.7761
I1128 04:56:33.652542 139639960884992 hlog.py:32] train/00028/eval/train/inp WUG0 has the smallest population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:56:33.652671 139639960884992 hlog.py:32] train/00028/eval/train/out WUG0 has the smallest population ( A , WUG1 B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 04:56:33.713267 139639960884992 hlog.py:32] train/00028/eval/train/??? WUG0 has the smallest capital ( A , WUG1 B , C ( B ) ) ) )
I1128 04:56:33.713487 139639960884992 hlog.py:18] train/00028{29.92s}
I1128 04:57:06.092517 139639960884992 hlog.py:32] train/00029/loss 0.7467
I1128 04:57:06.093602 139639960884992 hlog.py:32] train/00029/eval/train/inp WUG0 has the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 04:57:06.093825 139639960884992 hlog.py:32] train/00029/eval/train/out WUG0 contains the highest point of those the colorado river traverses ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _riverid ( colorado ) ) , _river ( D ) , _traverse ( D , C ) ) ) ) )
I1128 04:57:06.187930 139639960884992 hlog.py:32] train/00029/eval/train/??? WUG0 is the state with the most rivers ( A , ( _state ( A ) , _most ( C , A ) , _river ( B ) ) ) )
I1128 04:57:06.246863 139639960884992 hlog.py:18] train/00029{32.53s}
I1128 04:57:37.420580 139639960884992 hlog.py:32] train/00030/loss 0.7474
I1128 04:57:37.421586 139639960884992 hlog.py:32] train/00030/eval/train/inp WUG0 has the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 04:57:37.421736 139639960884992 hlog.py:32] train/00030/eval/train/out WUG0 borders the least states excluding alaska and excluding hawaii ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , \+ _const ( A , _stateid ( alaska ) ) , \+ _const ( A , _stateid ( hawaii ) ) ) ) )
I1128 04:57:37.516032 139639960884992 hlog.py:32] train/00030/eval/train/??? WUG0 border kentucky ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( C , _stateid ( kentucky ) ) ) ) )
I1128 04:57:37.516265 139639960884992 hlog.py:18] train/00030{31.27s}
I1128 04:58:07.355137 139639960884992 hlog.py:32] train/00031/loss 0.7246
I1128 04:58:07.356132 139639960884992 hlog.py:32] train/00031/eval/train/inp how long is the WUG0 in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 04:58:07.356272 139639960884992 hlog.py:32] train/00031/eval/train/out which states border the WUG0 in the usa ( A , ( _state ( A ) , _next_to ( A , B ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 04:58:07.470660 139639960884992 hlog.py:32] train/00031/eval/train/??? what is the WUG0 in hawaii ( A , WUG1 ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( hawaii ) ) ) ) ) )
I1128 04:58:07.470885 139639960884992 hlog.py:18] train/00031{29.95s}
I1128 04:58:38.521295 139639960884992 hlog.py:32] train/00032/loss 0.6815
I1128 04:58:38.522259 139639960884992 hlog.py:32] train/00032/eval/train/inp which state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 04:58:38.522377 139639960884992 hlog.py:32] train/00032/eval/train/out which state is WUG0 ( A , _smallest ( A , _state ( A ) ) )
I1128 04:58:38.644572 139639960884992 hlog.py:32] train/00032/eval/train/??? what is the population density of the state with WUG0 population density ( A , ( _density ( B , A ) , _smallest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 04:58:38.644765 139639960884992 hlog.py:18] train/00032{31.17s}
I1128 04:59:08.547823 139639960884992 hlog.py:32] train/00033/loss 0.7226
I1128 04:59:08.548813 139639960884992 hlog.py:32] train/00033/eval/train/inp which state capital WUG0 WUG1 population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 04:59:08.548939 139639960884992 hlog.py:32] train/00033/eval/train/out what state WUG0 WUG1 population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 04:59:08.705786 139639960884992 hlog.py:32] train/00033/eval/train/??? how many cities in the state that borders the state WUG0 WUG1 population density ( A , ( _population ( B , A ) , _next_to ( C , C , D _state ( C ) , _density ( C , D ) , _ ( D , ( _state ( D ) ) ) ) ) , A ) )
I1128 04:59:08.706021 139639960884992 hlog.py:18] train/00033{30.06s}
I1128 04:59:40.847536 139639960884992 hlog.py:32] train/00034/loss 0.7086
I1128 04:59:40.848501 139639960884992 hlog.py:32] train/00034/eval/train/inp what are the major cities WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 04:59:40.848641 139639960884992 hlog.py:32] train/00034/eval/train/out what is the length of the colorado river WUG0 ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 04:59:40.945666 139639960884992 hlog.py:32] train/00034/eval/train/??? what is the capital of all WUG0 ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 04:59:40.945886 139639960884992 hlog.py:18] train/00034{32.24s}
I1128 05:00:13.859655 139639960884992 hlog.py:32] train/00035/loss 0.6817
I1128 05:00:13.860637 139639960884992 hlog.py:32] train/00035/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) WUG1 ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:00:13.860775 139639960884992 hlog.py:32] train/00035/eval/train/out what is the population density in the state WUG0 capital austin ( A , ( _density ( B , A ) , _state ( B ) , _loc ( C , B ) WUG1 ( C ) , _const ( C , _cityid ( austin , _ ) ) ) )
I1128 05:00:14.013881 139639960884992 hlog.py:32] train/00035/eval/train/??? how many states border the us other the state WUG0 highest elevation ( A , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , ( _state ( C ) , _loc ( D , C ) , WUG1 ( D ) ) ) ) , A ) )
I1128 05:00:14.014101 139639960884992 hlog.py:18] train/00035{33.07s}
I1128 05:00:44.088203 139639960884992 hlog.py:32] train/00036/loss 0.6607
I1128 05:00:44.089132 139639960884992 hlog.py:32] train/00036/eval/train/inp WUG0 WUG1 the highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:00:44.089262 139639960884992 hlog.py:32] train/00036/eval/train/out WUG0 WUG1 no rivers ( A , ( _state ( A ) , \+ ( _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:00:44.178271 139639960884992 hlog.py:32] train/00036/eval/train/??? WUG0 WUG1 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:00:44.178489 139639960884992 hlog.py:18] train/00036{30.16s}
I1128 05:01:16.209242 139639960884992 hlog.py:32] train/00037/loss 0.6814
I1128 05:01:16.210284 139639960884992 hlog.py:32] train/00037/eval/train/inp WUG0 has the smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:01:16.210420 139639960884992 hlog.py:32] train/00037/eval/train/out WUG0 has the smallest capital ( A , ( _state ( A ) , _loc ( B , A ) , _smallest ( B , _capital ( B ) ) ) )
I1128 05:01:16.312290 139639960884992 hlog.py:32] train/00037/eval/train/??? WUG0 has the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:01:16.312523 139639960884992 hlog.py:18] train/00037{32.13s}
I1128 05:01:45.634033 139639960884992 hlog.py:32] train/00038/loss 0.6598
I1128 05:01:45.634944 139639960884992 hlog.py:32] train/00038/eval/train/inp what states does the WUG0 river WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:01:45.635071 139639960884992 hlog.py:32] train/00038/eval/train/out which states does the WUG0 river WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _traverse ( B , A ) ) )
I1128 05:01:45.731929 139639960884992 hlog.py:32] train/00038/eval/train/??? what states does the WUG0 WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _traverse ( B , A ) ) )
I1128 05:01:45.732177 139639960884992 hlog.py:18] train/00038{29.42s}
I1128 05:02:15.042883 139639960884992 hlog.py:32] train/00039/loss 0.6493
I1128 05:02:15.043805 139639960884992 hlog.py:32] train/00039/eval/train/inp WUG0 WUG1 the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:02:15.043931 139639960884992 hlog.py:32] train/00039/eval/train/out WUG0 WUG1 the highest point ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:02:15.152503 139639960884992 hlog.py:32] train/00039/eval/train/??? WUG0 WUG1 the city flint ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( flint , _ ) ) ) )
I1128 05:02:15.211722 139639960884992 hlog.py:18] train/00039{29.48s}
I1128 05:02:47.161095 139639960884992 hlog.py:32] train/00040/loss 0.6427
I1128 05:02:47.162169 139639960884992 hlog.py:32] train/00040/eval/train/inp what are the populations of the states WUG0 the WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:02:47.162315 139639960884992 hlog.py:32] train/00040/eval/train/out what are the populations of states WUG0 the WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:02:47.293020 139639960884992 hlog.py:32] train/00040/eval/train/??? WUG0 the longest in states that border WUG1 ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) )
I1128 05:02:47.293494 139639960884992 hlog.py:18] train/00040{32.08s}
I1128 05:03:16.627974 139639960884992 hlog.py:32] train/00041/loss 0.6480
I1128 05:03:16.629073 139639960884992 hlog.py:32] train/00041/eval/train/inp what are the major cities WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 05:03:16.629200 139639960884992 hlog.py:32] train/00041/eval/train/out give me the cities WUG0 ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 05:03:16.737922 139639960884992 hlog.py:32] train/00041/eval/train/??? what is the highest point WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) ) )
I1128 05:03:16.738139 139639960884992 hlog.py:18] train/00041{29.44s}
I1128 05:03:44.970704 139639960884992 hlog.py:32] train/00042/loss 0.6274
I1128 05:03:44.971742 139639960884992 hlog.py:32] train/00042/eval/train/inp how long is WUG0 river in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:03:44.971883 139639960884992 hlog.py:32] train/00042/eval/train/out what is WUG0 river in the states that border nebraska ( A WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( nebraska ) ) ) ) )
I1128 05:03:45.107611 139639960884992 hlog.py:32] train/00042/eval/train/??? what states have is higher than WUG0 river in indiana ( A , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( indiana ) ) ) ) )
I1128 05:03:45.107851 139639960884992 hlog.py:18] train/00042{28.37s}
I1128 05:04:16.461307 139639960884992 hlog.py:32] train/00043/loss 0.6072
I1128 05:04:16.481764 139639960884992 hlog.py:32] train/00043/eval/train/inp what state has WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:04:16.481981 139639960884992 hlog.py:32] train/00043/eval/train/out what are the major cities in WUG0 state in the us ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , WUG1 B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:04:16.576411 139639960884992 hlog.py:32] train/00043/eval/train/??? which state has WUG0 population density A , WUG1 B , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 05:04:16.576662 139639960884992 hlog.py:18] train/00043{31.47s}
I1128 05:04:47.675265 139639960884992 hlog.py:32] train/00044/loss 0.6121
I1128 05:04:47.676189 139639960884992 hlog.py:32] train/00044/eval/train/inp WUG0 has the sparsest population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:04:47.676315 139639960884992 hlog.py:32] train/00044/eval/train/out WUG0 has the smallest average urban population ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:04:47.733022 139639960884992 hlog.py:32] train/00044/eval/train/??? WUG0 is kalamazoo in ( A , ( _const ( B , _cityid ) ) ) )
I1128 05:04:47.733243 139639960884992 hlog.py:18] train/00044{31.16s}
I1128 05:05:18.104638 139639960884992 hlog.py:32] train/00045/loss 0.5990
I1128 05:05:18.105751 139639960884992 hlog.py:32] train/00045/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:05:18.105894 139639960884992 hlog.py:32] train/00045/eval/train/out what state which the mississippi WUG0 through has the largest population ( A , _largest ( B , ( _state ( A ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 05:05:18.220299 139639960884992 hlog.py:32] train/00045/eval/train/??? which states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:05:18.220729 139639960884992 hlog.py:18] train/00045{30.49s}
I1128 05:05:49.185009 139639960884992 hlog.py:32] train/00046/loss 0.5910
I1128 05:05:49.185971 139639960884992 hlog.py:32] train/00046/eval/train/inp how long is the WUG0 river in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:05:49.186101 139639960884992 hlog.py:32] train/00046/eval/train/out name the WUG0 river in us ( A WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:05:49.337108 139639960884992 hlog.py:32] train/00046/eval/train/??? what is the WUG0 river that runs through a state that borders tennessee ( A , WUG1 ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C WUG1 _stateid ( tennessee ) ) ) ) )
I1128 05:05:49.337354 139639960884992 hlog.py:18] train/00046{31.12s}
I1128 05:06:22.293256 139639960884992 hlog.py:32] train/00047/loss 0.5931
I1128 05:06:22.294232 139639960884992 hlog.py:32] train/00047/eval/train/inp which state WUG0 WUG1 rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:06:22.294367 139639960884992 hlog.py:32] train/00047/eval/train/out how many rivers are in the state that WUG0 WUG1 rivers ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _most ( C , D , ( _state ( C ) , _loc ( D , C ) , _river ( D ) ) ) ) , A ) )
I1128 05:06:22.413110 139639960884992 hlog.py:32] train/00047/eval/train/??? what state WUG0 city with the WUG1 population ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( C , ( _city ( B ) , _population ( B , C ) ) ) ) )
I1128 05:06:22.413341 139639960884992 hlog.py:18] train/00047{33.08s}
I1128 05:06:52.585860 139639960884992 hlog.py:32] train/00048/loss 0.5796
I1128 05:06:52.586981 139639960884992 hlog.py:32] train/00048/eval/train/inp what are the populations of the states through which WUG0 WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:06:52.587178 139639960884992 hlog.py:32] train/00048/eval/train/out what states does WUG0 WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:06:52.700902 139639960884992 hlog.py:32] train/00048/eval/train/??? which states does WUG0 WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 05:06:52.701176 139639960884992 hlog.py:18] train/00048{30.29s}
I1128 05:07:21.659880 139639960884992 hlog.py:32] train/00049/loss 0.5745
I1128 05:07:21.660977 139639960884992 hlog.py:32] train/00049/eval/train/inp what state is WUG0 in ( A , ( _state ( A ) , _const ( B , _cityid ( WUG0 , _ ) ) , _loc ( B , A ) ) )
I1128 05:07:21.661156 139639960884992 hlog.py:32] train/00049/eval/train/out what is the population of WUG0 massachusetts ( A , ( _population ( B , A ) , _const ( B , _cityid ( WUG0 , massachusetts ) ) ) )
I1128 05:07:21.891093 139639960884992 hlog.py:32] train/00049/eval/train/??? what is the largest state that borders the state with the lowest point in WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _stateid ( WUG0 ) ) ) ) ) )
I1128 05:07:21.977139 139639960884992 hlog.py:18] train/00049{29.28s}
I1128 05:07:52.760003 139639960884992 hlog.py:32] train/00050/loss 0.5859
I1128 05:07:52.761010 139639960884992 hlog.py:32] train/00050/eval/train/inp WUG0 WUG1 the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:07:52.761152 139639960884992 hlog.py:32] train/00050/eval/train/out WUG0 WUG1 the longest river ( A , _longest ( B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:07:52.831802 139639960884992 hlog.py:32] train/00050/eval/train/??? WUG0 WUG1 the most cities ( A , _most ( A , B ) , _city ( B ) ) ) )
I1128 05:07:52.832005 139639960884992 hlog.py:18] train/00050{30.85s}
I1128 05:08:23.062189 139639960884992 hlog.py:32] train/00051/loss 0.5729
I1128 05:08:23.063145 139639960884992 hlog.py:32] train/00051/eval/train/inp WUG0 has the largest city ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:08:23.063275 139639960884992 hlog.py:32] train/00051/eval/train/out WUG0 has the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:08:23.146958 139639960884992 hlog.py:32] train/00051/eval/train/??? WUG0 is miami in ( A , ( _state ( A ) , _const ( B , _cityid ( miami , _ ) ) ) )
I1128 05:08:23.147325 139639960884992 hlog.py:18] train/00051{30.32s}
I1128 05:08:52.391134 139639960884992 hlog.py:32] train/00052/loss 0.5634
I1128 05:08:52.392242 139639960884992 hlog.py:32] train/00052/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:08:52.392393 139639960884992 hlog.py:32] train/00052/eval/train/out what states does the ohio river WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:08:52.493431 139639960884992 hlog.py:32] train/00052/eval/train/??? what are the states that the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 05:08:52.493667 139639960884992 hlog.py:18] train/00052{29.35s}
I1128 05:09:23.817297 139639960884992 hlog.py:32] train/00053/loss 0.5765
I1128 05:09:23.818270 139639960884992 hlog.py:32] train/00053/eval/train/inp what state WUG0 WUG1 area ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1128 05:09:23.818408 139639960884992 hlog.py:32] train/00053/eval/train/out what state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:09:23.902523 139639960884992 hlog.py:32] train/00053/eval/train/??? which state capital WUG0 WUG1 population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 05:09:23.902733 139639960884992 hlog.py:18] train/00053{31.41s}
I1128 05:09:55.722075 139639960884992 hlog.py:32] train/00054/loss 0.5623
I1128 05:09:55.723040 139639960884992 hlog.py:32] train/00054/eval/train/inp what state has the smallest WUG0 ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 05:09:55.723177 139639960884992 hlog.py:32] train/00054/eval/train/out what state has the least WUG0 ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 05:09:55.873505 139639960884992 hlog.py:32] train/00054/eval/train/??? what is the largest city that WUG0 a state that borders indiana ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( indiana ) ) ) ) )
I1128 05:09:55.873756 139639960884992 hlog.py:18] train/00054{31.97s}
I1128 05:10:25.285100 139639960884992 hlog.py:32] train/00055/loss 0.5460
I1128 05:10:25.286079 139639960884992 hlog.py:32] train/00055/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:10:25.286202 139639960884992 hlog.py:32] train/00055/eval/train/out what is largest WUG0 ( A , _largest ( A , _capital ( A ) ) )
I1128 05:10:25.384705 139639960884992 hlog.py:32] train/00055/eval/train/??? how many people live in WUG0 of texas ( A , ( _population ( B , A ) , _const ( B , _cityid ( WUG0 , texas ) ) ) )
I1128 05:10:25.384961 139639960884992 hlog.py:18] train/00055{29.51s}
I1128 05:10:57.293845 139639960884992 hlog.py:32] train/00056/loss 0.5660
I1128 05:10:57.294774 139639960884992 hlog.py:32] train/00056/eval/train/inp WUG0 border kentucky ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( kentucky ) ) ) )
I1128 05:10:57.294910 139639960884992 hlog.py:32] train/00056/eval/train/out WUG0 does the chattahoochee river run through ( A , ( _state ( A ) , _const ( B , _riverid ( chattahoochee ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:10:57.404431 139639960884992 hlog.py:32] train/00056/eval/train/??? WUG0 has the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:10:57.404667 139639960884992 hlog.py:18] train/00056{32.02s}
I1128 05:11:29.617971 139639960884992 hlog.py:32] train/00057/loss 0.5560
I1128 05:11:29.618922 139639960884992 hlog.py:32] train/00057/eval/train/inp WUG0 the major WUG1 texas ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 05:11:29.619052 139639960884992 hlog.py:32] train/00057/eval/train/out WUG0 the major WUG1 vermont ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( vermont ) ) ) )
I1128 05:11:29.730621 139639960884992 hlog.py:32] train/00057/eval/train/??? WUG0 the major WUG1 the largest state ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1128 05:11:29.730850 139639960884992 hlog.py:18] train/00057{32.33s}
I1128 05:12:00.290484 139639960884992 hlog.py:32] train/00058/loss 0.5533
I1128 05:12:00.291553 139639960884992 hlog.py:32] train/00058/eval/train/inp WUG0 has the WUG1 rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 05:12:00.291687 139639960884992 hlog.py:32] train/00058/eval/train/out WUG0 has the WUG1 major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:12:00.433837 139639960884992 hlog.py:32] train/00058/eval/train/??? WUG0 has the city with the WUG1 population ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( C , ( _city ( B ) , _population ( B , C ) ) ) ) )
I1128 05:12:00.434083 139639960884992 hlog.py:18] train/00058{30.70s}
I1128 05:12:29.148171 139639960884992 hlog.py:32] train/00059/loss 0.5370
I1128 05:12:29.149155 139639960884992 hlog.py:32] train/00059/eval/train/inp which state has the WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:12:29.149279 139639960884992 hlog.py:32] train/00059/eval/train/out what is the state with the WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:12:29.262683 139639960884992 hlog.py:32] train/00059/eval/train/??? what is the WUG0 point in louisiana ( A , WUG1 A , B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1128 05:12:29.328045 139639960884992 hlog.py:18] train/00059{28.89s}
I1128 05:12:59.717512 139639960884992 hlog.py:32] train/00060/loss 0.5343
I1128 05:12:59.718492 139639960884992 hlog.py:32] train/00060/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) WUG1 ( C ) , _traverse ( C , B ) ) )
I1128 05:12:59.718625 139639960884992 hlog.py:32] train/00060/eval/train/out what states does the shortest river WUG0 through ( A , ( _state ( A ) , _shortest ( B WUG1 ( B ) ) , _traverse ( B , A ) ) )
I1128 05:12:59.815508 139639960884992 hlog.py:32] train/00060/eval/train/??? what states does the missouri WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) WUG1 ( B ) ) )
I1128 05:12:59.815849 139639960884992 hlog.py:18] train/00060{30.49s}
I1128 05:13:27.958379 139639960884992 hlog.py:32] train/00061/loss 0.5315
I1128 05:13:27.959360 139639960884992 hlog.py:32] train/00061/eval/train/inp what are the major cities in WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:13:27.959500 139639960884992 hlog.py:32] train/00061/eval/train/out what are the major cities in the state of WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:13:28.053659 139639960884992 hlog.py:32] train/00061/eval/train/??? what is the highest point in WUG0 ( A , ( _place ( B , A ) , _const ( B , _cityid ( WUG0 , _ ) ) ) ) )
I1128 05:13:28.053887 139639960884992 hlog.py:18] train/00061{28.24s}
I1128 05:13:57.904360 139639960884992 hlog.py:32] train/00062/loss 0.5392
I1128 05:13:57.905306 139639960884992 hlog.py:32] train/00062/eval/train/inp which river runs through WUG0 states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:13:57.905435 139639960884992 hlog.py:32] train/00062/eval/train/out which river runs through the WUG0 states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:13:58.014890 139639960884992 hlog.py:32] train/00062/eval/train/??? what state has the WUG0 major cities ( A WUG1 ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:13:58.015122 139639960884992 hlog.py:18] train/00062{29.96s}
I1128 05:14:30.052742 139639960884992 hlog.py:32] train/00063/loss 0.5280
I1128 05:14:30.054086 139639960884992 hlog.py:32] train/00063/eval/train/inp what is the capital of the state with the WUG0 ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 05:14:30.054265 139639960884992 hlog.py:32] train/00063/eval/train/out what is the WUG0 in the smallest state ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( B , _state ( B ) ) ) ) )
I1128 05:14:30.222754 139639960884992 hlog.py:32] train/00063/eval/train/??? what is the WUG0 in the state with capital austin ( A , ( _place ( B , A ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( austin , _ ) ) ) )
I1128 05:14:30.223026 139639960884992 hlog.py:18] train/00063{32.21s}
I1128 05:14:59.289498 139639960884992 hlog.py:32] train/00064/loss 0.5371
I1128 05:14:59.290436 139639960884992 hlog.py:32] train/00064/eval/train/inp what is the WUG0 the highest point in the usa ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:14:59.290602 139639960884992 hlog.py:32] train/00064/eval/train/out what is the WUG0 death valley ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( death valley ) ) ) )
I1128 05:14:59.588590 139639960884992 hlog.py:32] train/00064/eval/train/??? how many states have a higher point than the WUG0 the highest point of the state with the largest capital city in the us ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _higher ( C , D ) , _place ( C ) , _highest ( D , ( _place ( D ) , _loc ( D , E ) , _largest ( F , ( _capital ( F ) , _city ( F ) , _loc ( F , G ) , _const ( G , _countryid ( usa ) ) ) ) ) ) ) , A ) )
I1128 05:14:59.588857 139639960884992 hlog.py:18] train/00064{29.37s}
I1128 05:15:28.864711 139639960884992 hlog.py:32] train/00065/loss 0.5344
I1128 05:15:28.865657 139639960884992 hlog.py:32] train/00065/eval/train/inp WUG0 WUG1 largest city ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:15:28.865781 139639960884992 hlog.py:32] train/00065/eval/train/out WUG0 WUG1 highest point ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:15:28.960302 139639960884992 hlog.py:32] train/00065/eval/train/??? WUG0 WUG1 red river ( A , ( _state ( A ) , _loc ( B , A ) , _const ( B , _cityid ( red , _ ) ) ) )
I1128 05:15:28.960527 139639960884992 hlog.py:18] train/00065{29.37s}
I1128 05:15:59.256631 139639960884992 hlog.py:32] train/00066/loss 0.5177
I1128 05:15:59.257591 139639960884992 hlog.py:32] train/00066/eval/train/inp what state has the WUG0 ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 05:15:59.257712 139639960884992 hlog.py:32] train/00066/eval/train/out what is the state with the WUG0 ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 05:15:59.382908 139639960884992 hlog.py:32] train/00066/eval/train/??? what is the capital of the state with the WUG0 density ( A , ( _capital ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) WUG1 ( B , C ) ) ) ) )
I1128 05:15:59.383137 139639960884992 hlog.py:18] train/00066{30.42s}
I1128 05:16:29.455885 139639960884992 hlog.py:32] train/00067/loss 0.5191
I1128 05:16:29.456813 139639960884992 hlog.py:32] train/00067/eval/train/inp what is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:16:29.456954 139639960884992 hlog.py:32] train/00067/eval/train/out what states border states that border states that border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( WUG0 ) ) ) )
I1128 05:16:29.589679 139639960884992 hlog.py:32] train/00067/eval/train/??? could me the capitals of those the point river WUG0 ( A , ( _size ( B ) , _loc ( A , C ) , _const ( C , _stateid ( point ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 05:16:29.589902 139639960884992 hlog.py:18] train/00067{30.21s}
I1128 05:17:00.961990 139639960884992 hlog.py:32] train/00068/loss 0.5121
I1128 05:17:00.962954 139639960884992 hlog.py:32] train/00068/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:17:00.963090 139639960884992 hlog.py:32] train/00068/eval/train/out what is the most populous state through which the mississippi WUG0 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 05:17:01.072178 139639960884992 hlog.py:32] train/00068/eval/train/??? what states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid WUG1 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:17:01.072423 139639960884992 hlog.py:18] train/00068{31.48s}
I1128 05:17:33.744955 139639960884992 hlog.py:32] train/00069/loss 0.5183
I1128 05:17:33.745733 139639960884992 hlog.py:32] train/00069/eval/train/inp what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:17:33.745873 139639960884992 hlog.py:32] train/00069/eval/train/out which states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:17:33.866722 139639960884992 hlog.py:32] train/00069/eval/train/??? what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:17:33.922960 139639960884992 hlog.py:18] train/00069{32.85s}
I1128 05:18:02.710810 139639960884992 hlog.py:32] train/00070/loss 0.5279
I1128 05:18:02.711874 139639960884992 hlog.py:32] train/00070/eval/train/inp what are the populations of the states through WUG0 WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:18:02.712011 139639960884992 hlog.py:32] train/00070/eval/train/out what is the most populous state through WUG0 WUG1 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 05:18:02.844393 139639960884992 hlog.py:32] train/00070/eval/train/??? which states does WUG0 river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:18:02.844664 139639960884992 hlog.py:18] train/00070{28.92s}
I1128 05:18:35.665000 139639960884992 hlog.py:32] train/00071/loss 0.5192
I1128 05:18:35.665961 139639960884992 hlog.py:32] train/00071/eval/train/inp WUG0 has the WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:18:35.666110 139639960884992 hlog.py:32] train/00071/eval/train/out WUG0 borders the WUG1 states excluding alaska and excluding hawaii ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , \+ _const ( A , _stateid ( alaska ) ) , \+ _const ( A , _stateid ( hawaii ) ) ) ) )
I1128 05:18:35.789818 139639960884992 hlog.py:32] train/00071/eval/train/??? WUG0 borders the state with the WUG1 population ( A , ( _state ( A ) , _next_to ( A , B ) , _largest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) )
I1128 05:18:35.790073 139639960884992 hlog.py:18] train/00071{32.95s}
I1128 05:19:04.349073 139639960884992 hlog.py:32] train/00072/loss 0.5145
I1128 05:19:04.350270 139639960884992 hlog.py:32] train/00072/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:19:04.350432 139639960884992 hlog.py:32] train/00072/eval/train/out how many people live in the WUG0 of texas ( A , ( _population ( B , A ) , WUG1 B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 05:19:04.480656 139639960884992 hlog.py:32] train/00072/eval/train/??? what is the largest state WUG0 in population ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _stateid ( population ) ) ) ) )
I1128 05:19:04.480909 139639960884992 hlog.py:18] train/00072{28.69s}
I1128 05:19:33.702822 139639960884992 hlog.py:32] train/00073/loss 0.5112
I1128 05:19:33.703799 139639960884992 hlog.py:32] train/00073/eval/train/inp what are the populations of states through which WUG0 river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:19:33.703938 139639960884992 hlog.py:32] train/00073/eval/train/out what states does WUG0 river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:19:33.860674 139639960884992 hlog.py:32] train/00073/eval/train/??? which is the lowest point of the states that WUG0 WUG1 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 05:19:33.860957 139639960884992 hlog.py:18] train/00073{29.38s}
I1128 05:20:03.807573 139639960884992 hlog.py:32] train/00074/loss 0.5131
I1128 05:20:03.808527 139639960884992 hlog.py:32] train/00074/eval/train/inp what state WUG0 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:20:03.808662 139639960884992 hlog.py:32] train/00074/eval/train/out which state WUG0 most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:20:03.936898 139639960884992 hlog.py:32] train/00074/eval/train/??? which of the states bordering pennsylvania WUG0 the largest population ( A , ( _state ( A ) , _next_to ( A , B ) , _largest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) )
I1128 05:20:03.937140 139639960884992 hlog.py:18] train/00074{30.08s}
I1128 05:20:33.785668 139639960884992 hlog.py:32] train/00075/loss 0.5070
I1128 05:20:33.787045 139639960884992 hlog.py:32] train/00075/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:20:33.787190 139639960884992 hlog.py:32] train/00075/eval/train/out what is WUG0 of states that have cities named durham ( A , ( WUG1 A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( durham , _ ) ) ) )
I1128 05:20:33.906651 139639960884992 hlog.py:32] train/00075/eval/train/??? how many people live in the WUG0 of texas ( A , ( _population ( B , A ) , WUG1 B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 05:20:33.907024 139639960884992 hlog.py:18] train/00075{29.97s}
I1128 05:21:03.023459 139639960884992 hlog.py:32] train/00076/loss 0.5069
I1128 05:21:03.024385 139639960884992 hlog.py:32] train/00076/eval/train/inp which states does the longest river WUG0 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 05:21:03.024528 139639960884992 hlog.py:32] train/00076/eval/train/out which rivers do not WUG0 usa ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:21:03.134116 139639960884992 hlog.py:32] train/00076/eval/train/??? what states does the colorado river WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:21:03.134378 139639960884992 hlog.py:18] train/00076{29.23s}
I1128 05:21:34.924021 139639960884992 hlog.py:32] train/00077/loss 0.5007
I1128 05:21:34.924951 139639960884992 hlog.py:32] train/00077/eval/train/inp what state has the WUG0 population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 05:21:34.925074 139639960884992 hlog.py:32] train/00077/eval/train/out which is the WUG0 state ( A , _smallest ( A , _state ( A ) ) )
I1128 05:21:35.059573 139639960884992 hlog.py:32] train/00077/eval/train/??? how many people live in the WUG0 state bordering wyoming ( A , ( _population ( B , A ) , _smallest ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( wyoming ) ) ) ) ) )
I1128 05:21:35.059819 139639960884992 hlog.py:18] train/00077{31.93s}
I1128 05:22:04.342329 139639960884992 hlog.py:32] train/00078/loss 0.5045
I1128 05:22:04.343358 139639960884992 hlog.py:32] train/00078/eval/train/inp number of WUG0 in boulder ( A , ( _population ( B , A ) , _const ( B , _cityid ( boulder , _ ) ) ) )
I1128 05:22:04.343490 139639960884992 hlog.py:32] train/00078/eval/train/out how many WUG0 live in riverside ( A , ( _population ( B , A ) , _const ( B , _cityid ( riverside , _ ) ) ) )
I1128 05:22:04.480509 139639960884992 hlog.py:32] train/00078/eval/train/??? how many WUG0 live in the smallest state bordering wyoming ( A , ( _population ( B , A ) , _smallest ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( wyoming ) ) ) ) ) )
I1128 05:22:04.480748 139639960884992 hlog.py:18] train/00078{29.42s}
I1128 05:22:34.856051 139639960884992 hlog.py:32] train/00079/loss 0.5066
I1128 05:22:34.857015 139639960884992 hlog.py:32] train/00079/eval/train/inp what states border WUG0 the mississippi runs through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 05:22:34.857164 139639960884992 hlog.py:32] train/00079/eval/train/out which is the lowest point of the WUG0 the mississippi runs through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , A ) ) ) )
I1128 05:22:34.964330 139639960884992 hlog.py:32] train/00079/eval/train/??? what are the populations of WUG0 border missouri run ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _cityid WUG1 run , _ ) ) ) )
I1128 05:22:35.036266 139639960884992 hlog.py:18] train/00079{30.56s}
I1128 05:23:04.252896 139639960884992 hlog.py:32] train/00080/loss 0.4878
I1128 05:23:04.253825 139639960884992 hlog.py:32] train/00080/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 05:23:04.253953 139639960884992 hlog.py:32] train/00080/eval/train/out which states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid WUG1 ) ) , _traverse ( B , A ) ) )
I1128 05:23:04.440338 139639960884992 hlog.py:32] train/00080/eval/train/??? what state which the mississippi WUG0 through has the largest population ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid WUG1 WUG1 ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 05:23:04.440597 139639960884992 hlog.py:18] train/00080{29.40s}
I1128 05:23:35.108765 139639960884992 hlog.py:32] train/00081/loss 0.4915
I1128 05:23:35.109923 139639960884992 hlog.py:32] train/00081/eval/train/inp what are the populations of the states through WUG0 mississippi WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:23:35.110145 139639960884992 hlog.py:32] train/00081/eval/train/out what is the population of the capital of the largest state through WUG0 mississippi WUG1 ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid ( mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 05:23:35.318939 139639960884992 hlog.py:32] train/00081/eval/train/??? what is the population of the capital of the largest state through WUG0 mississippi WUG1 ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid ( mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 05:23:35.319169 139639960884992 hlog.py:18] train/00081{30.88s}
I1128 05:24:07.650850 139639960884992 hlog.py:32] train/00082/loss 0.4857
I1128 05:24:07.651803 139639960884992 hlog.py:32] train/00082/eval/train/inp WUG0 border kentucky ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( kentucky ) ) ) )
I1128 05:24:07.651936 139639960884992 hlog.py:32] train/00082/eval/train/out WUG0 has the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:24:07.733446 139639960884992 hlog.py:32] train/00082/eval/train/??? WUG0 has the least population density A , _smallest ( B , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 05:24:07.733657 139639960884992 hlog.py:18] train/00082{32.41s}
I1128 05:24:38.090828 139639960884992 hlog.py:32] train/00083/loss 0.4839
I1128 05:24:38.091764 139639960884992 hlog.py:32] train/00083/eval/train/inp which state has the WUG0 ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B WUG1 ( B ) ) ) )
I1128 05:24:38.091911 139639960884992 hlog.py:32] train/00083/eval/train/out which states have points that are higher than the WUG0 in texas ( A , ( _state ( A ) WUG1 ( B ) , _loc ( B , A ) , _higher ( B , C ) , _highest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _stateid ( texas ) ) ) ) ) )
I1128 05:24:38.178175 139639960884992 hlog.py:32] train/00083/eval/train/??? what is the state with the WUG0 density ( A , _smallest ( B , ( _state ( B ) WUG1 ( B , C ) ) ) ) )
I1128 05:24:38.178426 139639960884992 hlog.py:18] train/00083{30.44s}
I1128 05:25:09.092913 139639960884992 hlog.py:32] train/00084/loss 0.4849
I1128 05:25:09.093932 139639960884992 hlog.py:32] train/00084/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:25:09.094066 139639960884992 hlog.py:32] train/00084/eval/train/out what states does the missouri WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) , _traverse ( B , A ) ) )
I1128 05:25:09.222884 139639960884992 hlog.py:32] train/00084/eval/train/??? what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:25:09.223186 139639960884992 hlog.py:18] train/00084{31.04s}
I1128 05:25:38.719774 139639960884992 hlog.py:32] train/00085/loss 0.4924
I1128 05:25:38.720785 139639960884992 hlog.py:32] train/00085/eval/train/inp what are the populations of states through which the WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:25:38.720916 139639960884992 hlog.py:32] train/00085/eval/train/out what are the cities in states through which the WUG0 ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _traverse ( C , B ) , _const ( C , WUG1 ( mississippi ) ) ) )
I1128 05:25:38.849936 139639960884992 hlog.py:32] train/00085/eval/train/??? what states border states that the WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:25:38.850177 139639960884992 hlog.py:18] train/00085{29.63s}
I1128 05:26:09.890239 139639960884992 hlog.py:32] train/00086/loss 0.4847
I1128 05:26:09.891250 139639960884992 hlog.py:32] train/00086/eval/train/inp what states border WUG0 with the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 05:26:09.891388 139639960884992 hlog.py:32] train/00086/eval/train/out what states border WUG0 with the smallest area ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 05:26:10.026529 139639960884992 hlog.py:32] train/00086/eval/train/??? what is the capital of WUG0 that border texas ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 05:26:10.026740 139639960884992 hlog.py:18] train/00086{31.18s}
I1128 05:26:39.957980 139639960884992 hlog.py:32] train/00087/loss 0.4803
I1128 05:26:39.958895 139639960884992 hlog.py:32] train/00087/eval/train/inp what states does the ohio WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:26:39.959031 139639960884992 hlog.py:32] train/00087/eval/train/out what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:26:40.091612 139639960884992 hlog.py:32] train/00087/eval/train/??? what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:26:40.091853 139639960884992 hlog.py:18] train/00087{30.07s}
I1128 05:27:10.397983 139639960884992 hlog.py:32] train/00088/loss 0.4849
I1128 05:27:10.398926 139639960884992 hlog.py:32] train/00088/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:27:10.399058 139639960884992 hlog.py:32] train/00088/eval/train/out what states border states that the mississippi WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:27:10.561516 139639960884992 hlog.py:32] train/00088/eval/train/??? how many states in the us does the shortest WUG0 through ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) , _shortest ( D , _river ( D ) ) , _traverse ( D , B ) ) , A ) )
I1128 05:27:10.561751 139639960884992 hlog.py:18] train/00088{30.47s}
I1128 05:27:39.300647 139639960884992 hlog.py:32] train/00089/loss 0.4708
I1128 05:27:39.301588 139639960884992 hlog.py:32] train/00089/eval/train/inp how long is the WUG0 in the usa ( A , ( _len ( B , A ) , WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:27:39.301717 139639960884992 hlog.py:32] train/00089/eval/train/out what is the WUG0 in america ( A , WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:27:39.412539 139639960884992 hlog.py:32] train/00089/eval/train/??? what is the WUG0 in america ( A , WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:27:39.468416 139639960884992 hlog.py:18] train/00089{28.91s}
I1128 05:28:10.325933 139639960884992 hlog.py:32] train/00090/loss 0.4799
I1128 05:28:10.326841 139639960884992 hlog.py:32] train/00090/eval/train/inp what states border states WUG0 mississippi runs through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:28:10.326979 139639960884992 hlog.py:32] train/00090/eval/train/out which is the lowest point of the states WUG0 mississippi runs through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 05:28:10.464723 139639960884992 hlog.py:32] train/00090/eval/train/??? what are the populations of the states through WUG0 mississippi river run ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:28:10.464980 139639960884992 hlog.py:18] train/00090{31.00s}
I1128 05:28:38.956733 139639960884992 hlog.py:32] train/00091/loss 0.4678
I1128 05:28:38.957736 139639960884992 hlog.py:32] train/00091/eval/train/inp what river WUG0 through the WUG1 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:28:38.957865 139639960884992 hlog.py:32] train/00091/eval/train/out which river WUG0 through WUG1 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:28:39.057367 139639960884992 hlog.py:32] train/00091/eval/train/??? which river WUG0 through WUG1 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:28:39.057578 139639960884992 hlog.py:18] train/00091{28.59s}
I1128 05:29:08.641187 139639960884992 hlog.py:32] train/00092/loss 0.4724
I1128 05:29:08.642215 139639960884992 hlog.py:32] train/00092/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:29:08.642360 139639960884992 hlog.py:32] train/00092/eval/train/out what states does the shortest river WUG0 through ( A , ( _state ( A ) , _shortest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 05:29:08.791886 139639960884992 hlog.py:32] train/00092/eval/train/??? what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:29:08.792253 139639960884992 hlog.py:18] train/00092{29.73s}
I1128 05:29:37.352732 139639960884992 hlog.py:32] train/00093/loss 0.4766
I1128 05:29:37.353683 139639960884992 hlog.py:32] train/00093/eval/train/inp what are the major cities in WUG1 WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG1 WUG0 ) ) ) )
I1128 05:29:37.353835 139639960884992 hlog.py:32] train/00093/eval/train/out how many people live in the biggest city in WUG1 WUG0 state ( A , ( _population ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 WUG0 ) ) , _state ( C ) ) ) ) )
I1128 05:29:37.467345 139639960884992 hlog.py:32] train/00093/eval/train/??? what is the highest point in WUG1 WUG0 _highest A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG1 WUG0 ) ) ) ) )
I1128 05:29:37.467577 139639960884992 hlog.py:18] train/00093{28.68s}
I1128 05:30:08.156389 139639960884992 hlog.py:32] train/00094/loss 0.4755
I1128 05:30:08.157367 139639960884992 hlog.py:32] train/00094/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:30:08.157500 139639960884992 hlog.py:32] train/00094/eval/train/out what states border states that the mississippi WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 05:30:08.335586 139639960884992 hlog.py:32] train/00094/eval/train/??? what is the population of the capital of the largest state through which the mississippi WUG0 ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid WUG1 ) ) , _traverse ( D , C ) ) ) ) )
I1128 05:30:08.335826 139639960884992 hlog.py:18] train/00094{30.87s}
I1128 05:30:39.624535 139639960884992 hlog.py:32] train/00095/loss 0.4711
I1128 05:30:39.625514 139639960884992 hlog.py:32] train/00095/eval/train/inp how long is the WUG0 in the usa ( A , ( _len ( B , A ) , WUG1 B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:30:39.625643 139639960884992 hlog.py:32] train/00095/eval/train/out how long is the WUG0 in california ( A , ( _len ( B , A ) , WUG1 B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( california ) ) ) ) ) )
I1128 05:30:39.792597 139639960884992 hlog.py:32] train/00095/eval/train/??? what is the WUG0 in the smallest state in the usa ( A , WUG1 A , ( _capital ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 05:30:39.792835 139639960884992 hlog.py:18] train/00095{31.46s}
I1128 05:31:11.356163 139639960884992 hlog.py:32] train/00096/loss 0.4738
I1128 05:31:11.357112 139639960884992 hlog.py:32] train/00096/eval/train/inp what is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:31:11.357255 139639960884992 hlog.py:32] train/00096/eval/train/out how many cities are in WUG0 ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) , A ) )
I1128 05:31:11.471250 139639960884992 hlog.py:32] train/00096/eval/train/??? what is the highest point in states bordering WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:31:11.471497 139639960884992 hlog.py:18] train/00096{31.68s}
I1128 05:31:40.379775 139639960884992 hlog.py:32] train/00097/loss 0.4852
I1128 05:31:40.380707 139639960884992 hlog.py:32] train/00097/eval/train/inp what is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:31:40.380876 139639960884992 hlog.py:32] train/00097/eval/train/out what state contains the highest point of those the WUG0 river traverses ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _riverid ( WUG0 ) ) , _river ( D ) , _traverse ( D , C ) ) ) ) )
I1128 05:31:40.513347 139639960884992 hlog.py:32] train/00097/eval/train/??? how many states are there in WUG0 ( A , _count ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) , A ) )
I1128 05:31:40.513619 139639960884992 hlog.py:18] train/00097{29.04s}
I1128 05:32:10.068838 139639960884992 hlog.py:32] train/00098/loss 0.4766
I1128 05:32:10.070048 139639960884992 hlog.py:32] train/00098/eval/train/inp what states does the WUG0 WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:32:10.070183 139639960884992 hlog.py:32] train/00098/eval/train/out which states does the WUG0 WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:32:10.168151 139639960884992 hlog.py:32] train/00098/eval/train/??? what states does the WUG0 WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _traverse ( B , A ) ) )
I1128 05:32:10.168379 139639960884992 hlog.py:18] train/00098{29.65s}
I1128 05:32:40.103129 139639960884992 hlog.py:32] train/00099/loss 0.4714
I1128 05:32:40.104056 139639960884992 hlog.py:32] train/00099/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:32:40.104197 139639960884992 hlog.py:32] train/00099/eval/train/out what is the largest city in smallest state through which the mississippi WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _const ( C , WUG1 mississippi ) ) , _traverse ( C , B ) ) ) ) ) )
I1128 05:32:40.214805 139639960884992 hlog.py:32] train/00099/eval/train/??? what states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:32:40.305991 139639960884992 hlog.py:18] train/00099{30.14s}
I1128 05:33:11.700065 139639960884992 hlog.py:32] train/00100/loss 0.4667
I1128 05:33:11.701054 139639960884992 hlog.py:32] train/00100/eval/train/inp WUG0 WUG1 the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:33:11.701186 139639960884992 hlog.py:32] train/00100/eval/train/out WUG0 WUG1 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:33:11.827774 139639960884992 hlog.py:32] train/00100/eval/train/??? WUG0 WUG1 the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 05:33:11.828117 139639960884992 hlog.py:18] train/00100{31.52s}
I1128 05:33:43.285922 139639960884992 hlog.py:32] train/00101/loss 0.4620
I1128 05:33:43.286870 139639960884992 hlog.py:32] train/00101/eval/train/inp WUG0 WUG1 the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:33:43.287005 139639960884992 hlog.py:32] train/00101/eval/train/out WUG0 WUG1 the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 05:33:43.384944 139639960884992 hlog.py:32] train/00101/eval/train/??? WUG0 WUG1 the most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:33:43.385187 139639960884992 hlog.py:18] train/00101{31.56s}
I1128 05:34:14.631945 139639960884992 hlog.py:32] train/00102/loss 0.4713
I1128 05:34:14.632974 139639960884992 hlog.py:32] train/00102/eval/train/inp what state WUG0 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:34:14.633109 139639960884992 hlog.py:32] train/00102/eval/train/out what state WUG0 the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 05:34:14.757858 139639960884992 hlog.py:32] train/00102/eval/train/??? of the states washed by the mississippi river which WUG0 lowest point ( A , ( _state ( A ) , _loc ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1128 05:34:14.758162 139639960884992 hlog.py:18] train/00102{31.37s}
I1128 05:34:45.073745 139639960884992 hlog.py:32] train/00103/loss 0.4664
I1128 05:34:45.074713 139639960884992 hlog.py:32] train/00103/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:34:45.074861 139639960884992 hlog.py:32] train/00103/eval/train/out what is the area of the state WUG0 the capital albany ( A , ( _area ( B , A ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( albany , _ ) ) ) )
I1128 05:34:45.210966 139639960884992 hlog.py:32] train/00103/eval/train/??? what is the capital of the state WUG0 the highest point ( A , ( WUG1 A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 05:34:45.211208 139639960884992 hlog.py:18] train/00103{30.45s}
I1128 05:35:15.986147 139639960884992 hlog.py:32] train/00104/loss 0.4717
I1128 05:35:15.987096 139639960884992 hlog.py:32] train/00104/eval/train/inp how many rivers are in WUG0 ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) , A ) )
I1128 05:35:15.987223 139639960884992 hlog.py:32] train/00104/eval/train/out what state borders WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:35:16.101528 139639960884992 hlog.py:32] train/00104/eval/train/??? what are the major cities of WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:35:16.101772 139639960884992 hlog.py:18] train/00104{30.89s}
I1128 05:35:48.858016 139639960884992 hlog.py:32] train/00105/loss 0.4669
I1128 05:35:48.858925 139639960884992 hlog.py:32] train/00105/eval/train/inp what state has the WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:35:48.859052 139639960884992 hlog.py:32] train/00105/eval/train/out what is the population of the WUG0 state ( A , WUG1 B , ( _population ( B , A ) , _state ( B ) ) ) )
I1128 05:35:48.978173 139639960884992 hlog.py:32] train/00105/eval/train/??? what states border the state with the WUG0 area ( A , ( _state ( A ) , _next_to ( A , B ) , WUG1 C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 05:35:48.978421 139639960884992 hlog.py:18] train/00105{32.88s}
I1128 05:36:16.869297 139639960884992 hlog.py:32] train/00106/loss 0.4646
I1128 05:36:16.870563 139639960884992 hlog.py:32] train/00106/eval/train/inp what states border the WUG0 the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 05:36:16.870720 139639960884992 hlog.py:32] train/00106/eval/train/out what states border the WUG0 the smallest area ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 05:36:17.100071 139639960884992 hlog.py:32] train/00106/eval/train/??? which rivers run through the state with the lowest elevation in the WUG0 ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 05:36:17.100340 139639960884992 hlog.py:18] train/00106{28.12s}
I1128 05:36:50.106636 139639960884992 hlog.py:32] train/00107/loss 0.4680
I1128 05:36:50.107545 139639960884992 hlog.py:32] train/00107/eval/train/inp WUG0 has the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:36:50.107678 139639960884992 hlog.py:32] train/00107/eval/train/out WUG0 is the city denver located in ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( denver , _ ) ) ) )
I1128 05:36:50.186167 139639960884992 hlog.py:32] train/00107/eval/train/??? WUG0 has the smallest population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 05:36:50.186376 139639960884992 hlog.py:18] train/00107{33.09s}
I1128 05:37:21.373657 139639960884992 hlog.py:32] train/00108/loss 0.4577
I1128 05:37:21.374633 139639960884992 hlog.py:32] train/00108/eval/train/inp what states border states WUG0 mississippi runs through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:37:21.374788 139639960884992 hlog.py:32] train/00108/eval/train/out what state WUG0 mississippi runs through has the largest population ( A , _largest ( B , ( _state ( A ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 05:37:21.478606 139639960884992 hlog.py:32] train/00108/eval/train/??? what are the states through WUG0 longest river runs ( A , ( _state ( A ) , _longest ( B WUG1 ( B ) ) , _traverse ( B , A ) ) )
I1128 05:37:21.478835 139639960884992 hlog.py:18] train/00108{31.29s}
I1128 05:37:52.434030 139639960884992 hlog.py:32] train/00109/loss 0.4658
I1128 05:37:52.434979 139639960884992 hlog.py:32] train/00109/eval/train/inp WUG0 border kentucky ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( kentucky ) ) ) )
I1128 05:37:52.435128 139639960884992 hlog.py:32] train/00109/eval/train/out WUG0 have points that are higher than the highest point in texas ( A , ( _state ( A ) , _place ( B ) , _loc ( B , A ) , _higher ( B , C ) , _highest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _stateid ( texas ) ) ) ) ) )
I1128 05:37:52.524779 139639960884992 hlog.py:32] train/00109/eval/train/??? WUG0 arkansas colorado ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1128 05:37:52.580973 139639960884992 hlog.py:18] train/00109{31.10s}
I1128 05:38:25.866604 139639960884992 hlog.py:32] train/00110/loss 0.4535
I1128 05:38:25.867527 139639960884992 hlog.py:32] train/00110/eval/train/inp what is the largest city in WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:38:25.867663 139639960884992 hlog.py:32] train/00110/eval/train/out what are the capitals of states that border WUG0 ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) )
I1128 05:38:25.954573 139639960884992 hlog.py:32] train/00110/eval/train/??? what is the highest point in WUG0 ( A , _highest ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:38:25.954807 139639960884992 hlog.py:18] train/00110{33.37s}
I1128 05:38:57.762541 139639960884992 hlog.py:32] train/00111/loss 0.4597
I1128 05:38:57.763495 139639960884992 hlog.py:32] train/00111/eval/train/inp WUG0 WUG1 most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 05:38:57.763624 139639960884992 hlog.py:32] train/00111/eval/train/out WUG0 WUG1 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:38:57.843825 139639960884992 hlog.py:32] train/00111/eval/train/??? WUG0 WUG1 city river ( A , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) )
I1128 05:38:57.844032 139639960884992 hlog.py:18] train/00111{31.89s}
I1128 05:39:29.334284 139639960884992 hlog.py:32] train/00112/loss 0.4554
I1128 05:39:29.335368 139639960884992 hlog.py:32] train/00112/eval/train/inp how long is WUG0 river in the usa ( A , ( _len ( B , A ) , WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:39:29.335518 139639960884992 hlog.py:32] train/00112/eval/train/out what is WUG0 river in iowa ( A , WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( iowa ) ) ) ) )
I1128 05:39:29.434626 139639960884992 hlog.py:32] train/00112/eval/train/??? how long is WUG0 river in california ( A , ( _len ( B , A ) , _const ( B , _countryid ( california ) ) ) ) )
I1128 05:39:29.434856 139639960884992 hlog.py:18] train/00112{31.59s}
I1128 05:40:00.709659 139639960884992 hlog.py:32] train/00113/loss 0.4577
I1128 05:40:00.710669 139639960884992 hlog.py:32] train/00113/eval/train/inp which river runs through WUG0 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:40:00.710809 139639960884992 hlog.py:32] train/00113/eval/train/out what is WUG0 populous city in wyoming ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _stateid ( wyoming ) ) , _population ( A , B ) ) ) )
I1128 05:40:00.868028 139639960884992 hlog.py:32] train/00113/eval/train/??? what states border the state with WUG0 major cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) ) ) ) )
I1128 05:40:00.868280 139639960884992 hlog.py:18] train/00113{31.43s}
I1128 05:40:32.648681 139639960884992 hlog.py:32] train/00114/loss 0.4519
I1128 05:40:32.649605 139639960884992 hlog.py:32] train/00114/eval/train/inp what are the major WUG0 texas ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 05:40:32.649738 139639960884992 hlog.py:32] train/00114/eval/train/out show major WUG0 colorado ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1128 05:40:32.760159 139639960884992 hlog.py:32] train/00114/eval/train/??? what is the major WUG0 montana ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1128 05:40:32.760380 139639960884992 hlog.py:18] train/00114{31.89s}
I1128 05:41:03.649358 139639960884992 hlog.py:32] train/00115/loss 0.4538
I1128 05:41:03.650410 139639960884992 hlog.py:32] train/00115/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:41:03.650551 139639960884992 hlog.py:32] train/00115/eval/train/out what is the WUG0 of the state with the highest point ( A , ( WUG1 A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 05:41:03.772886 139639960884992 hlog.py:32] train/00115/eval/train/??? what is the size of WUG0 of texas ( A , ( _size ( B , A ) , WUG1 B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 05:41:03.773130 139639960884992 hlog.py:18] train/00115{31.01s}
I1128 05:41:34.846791 139639960884992 hlog.py:32] train/00116/loss 0.4533
I1128 05:41:34.847836 139639960884992 hlog.py:32] train/00116/eval/train/inp which river WUG0 WUG1 ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:41:34.847968 139639960884992 hlog.py:32] train/00116/eval/train/out which river WUG0 the WUG1 ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:41:34.933540 139639960884992 hlog.py:32] train/00116/eval/train/??? what river WUG0 the WUG1 ( A , _most ( A , B , ( _river ( A ) , _population ( A , B ) ) ) )
I1128 05:41:34.933748 139639960884992 hlog.py:18] train/00116{31.16s}
I1128 05:42:05.053011 139639960884992 hlog.py:32] train/00117/loss 0.4575
I1128 05:42:05.053989 139639960884992 hlog.py:32] train/00117/eval/train/inp what states does the ohio river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:42:05.054116 139639960884992 hlog.py:32] train/00117/eval/train/out what states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:42:05.167867 139639960884992 hlog.py:32] train/00117/eval/train/??? what states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:42:05.168143 139639960884992 hlog.py:18] train/00117{30.23s}
I1128 05:42:36.272189 139639960884992 hlog.py:32] train/00118/loss 0.4583
I1128 05:42:36.273258 139639960884992 hlog.py:32] train/00118/eval/train/inp what is the shortest river in WUG0 ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:42:36.273398 139639960884992 hlog.py:32] train/00118/eval/train/out what is the longest river in the states that border WUG0 ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) ) )
I1128 05:42:36.443518 139639960884992 hlog.py:32] train/00118/eval/train/??? how many states border the WUG0 does the shortest river run through ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG0 ) ) , _shortest ( D , _river ( D ) ) , _traverse ( D , B ) ) , A ) )
I1128 05:42:36.443801 139639960884992 hlog.py:18] train/00118{31.28s}
I1128 05:43:07.275397 139639960884992 hlog.py:32] train/00119/loss 0.4541
I1128 05:43:07.276323 139639960884992 hlog.py:32] train/00119/eval/train/inp what state has the WUG0 population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 05:43:07.276451 139639960884992 hlog.py:32] train/00119/eval/train/out what state has the WUG0 urban population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 05:43:07.364260 139639960884992 hlog.py:32] train/00119/eval/train/??? what is the state with the WUG0 area ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) ) )
I1128 05:43:07.420387 139639960884992 hlog.py:18] train/00119{30.98s}
I1128 05:43:41.040009 139639960884992 hlog.py:32] train/00120/loss 0.4460
I1128 05:43:41.040940 139639960884992 hlog.py:32] train/00120/eval/train/inp which WUG0 the longest river WUG1 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 05:43:41.041074 139639960884992 hlog.py:32] train/00120/eval/train/out which WUG0 the mississippi river WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:43:41.147888 139639960884992 hlog.py:32] train/00120/eval/train/??? which WUG0 the mississippi river WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:43:41.148104 139639960884992 hlog.py:18] train/00120{33.73s}
I1128 05:44:08.954325 139639960884992 hlog.py:32] train/00121/loss 0.4560
I1128 05:44:08.955272 139639960884992 hlog.py:32] train/00121/eval/train/inp what is the longest river in WUG0 ( A , WUG1 A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:44:08.955402 139639960884992 hlog.py:32] train/00121/eval/train/out give me the longest river that passes through WUG0 ( A , WUG1 A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:44:09.065649 139639960884992 hlog.py:32] train/00121/eval/train/??? what is the biggest city in WUG0 ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:44:09.065872 139639960884992 hlog.py:18] train/00121{27.92s}
I1128 05:44:38.763914 139639960884992 hlog.py:32] train/00122/loss 0.4439
I1128 05:44:38.764937 139639960884992 hlog.py:32] train/00122/eval/train/inp WUG0 has the largest city ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:44:38.765070 139639960884992 hlog.py:32] train/00122/eval/train/out WUG0 has the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:44:38.847549 139639960884992 hlog.py:32] train/00122/eval/train/??? WUG0 has the red river ( A , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:44:38.847725 139639960884992 hlog.py:18] train/00122{29.78s}
I1128 05:45:10.023421 139639960884992 hlog.py:32] train/00123/loss 0.4481
I1128 05:45:10.024269 139639960884992 hlog.py:32] train/00123/eval/train/inp which state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:45:10.024403 139639960884992 hlog.py:32] train/00123/eval/train/out which states border the state with WUG0 area ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 05:45:10.184048 139639960884992 hlog.py:32] train/00123/eval/train/??? what is the longest river in WUG0 state in the usa ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 05:45:10.184212 139639960884992 hlog.py:18] train/00123{31.34s}
I1128 05:45:41.615948 139639960884992 hlog.py:32] train/00124/loss 0.4457
I1128 05:45:41.616926 139639960884992 hlog.py:32] train/00124/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:45:41.617071 139639960884992 hlog.py:32] train/00124/eval/train/out what is the population of the capital of the largest state through which the mississippi WUG0 ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , WUG1 mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 05:45:41.731675 139639960884992 hlog.py:32] train/00124/eval/train/??? what states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:45:41.731984 139639960884992 hlog.py:18] train/00124{31.55s}
I1128 05:46:12.059472 139639960884992 hlog.py:32] train/00125/loss 0.4463
I1128 05:46:12.060539 139639960884992 hlog.py:32] train/00125/eval/train/inp WUG0 has WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:46:12.060671 139639960884992 hlog.py:32] train/00125/eval/train/out WUG0 has WUG1 area ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1128 05:46:12.138399 139639960884992 hlog.py:32] train/00125/eval/train/??? WUG0 is WUG1 ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 05:46:12.138608 139639960884992 hlog.py:18] train/00125{30.41s}
I1128 05:46:41.449647 139639960884992 hlog.py:32] train/00126/loss 0.4520
I1128 05:46:41.450672 139639960884992 hlog.py:32] train/00126/eval/train/inp what city has the WUG0 ( A , _largest ( B , ( _city ( A ) WUG1 ( A , B ) ) ) )
I1128 05:46:41.450812 139639960884992 hlog.py:32] train/00126/eval/train/out what state has the city with the WUG0 ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( C , ( _city ( B ) WUG1 ( B , C ) ) ) ) )
I1128 05:46:41.576385 139639960884992 hlog.py:32] train/00126/eval/train/??? how many states border the state with the WUG0 ( A , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , ( _state ( C ) WUG1 ( C , D ) ) ) ) , A ) )
I1128 05:46:41.576638 139639960884992 hlog.py:18] train/00126{29.44s}
I1128 05:47:12.938990 139639960884992 hlog.py:32] train/00127/loss 0.4347
I1128 05:47:12.939911 139639960884992 hlog.py:32] train/00127/eval/train/inp which state borders WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:47:12.940037 139639960884992 hlog.py:32] train/00127/eval/train/out which states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:47:13.059666 139639960884992 hlog.py:32] train/00127/eval/train/??? what are the populations of all the major cities in WUG0 ( A , ( _population ( B , A ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) )
I1128 05:47:13.059861 139639960884992 hlog.py:18] train/00127{31.48s}
I1128 05:47:43.351333 139639960884992 hlog.py:32] train/00128/loss 0.4478
I1128 05:47:43.352327 139639960884992 hlog.py:32] train/00128/eval/train/inp what are the major cities in WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:47:43.352506 139639960884992 hlog.py:32] train/00128/eval/train/out what state borders the least states excluding WUG0 and excluding hawaii ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , \+ _const ( A , _stateid ( WUG0 ) ) , \+ _const ( A , _stateid ( hawaii ) ) ) ) )
I1128 05:47:43.478685 139639960884992 hlog.py:32] train/00128/eval/train/??? what is the most populous city in WUG0 ( A , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) ) ) )
I1128 05:47:43.478959 139639960884992 hlog.py:18] train/00128{30.42s}
I1128 05:48:15.153267 139639960884992 hlog.py:32] train/00129/loss 0.4366
I1128 05:48:15.154349 139639960884992 hlog.py:32] train/00129/eval/train/inp WUG0 has the most major cities ( A , WUG1 A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:48:15.154495 139639960884992 hlog.py:32] train/00129/eval/train/out WUG0 has the most cities ( A , WUG1 A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:48:15.248113 139639960884992 hlog.py:32] train/00129/eval/train/??? WUG0 has the highest elevation ( A , WUG1 B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:48:15.319497 139639960884992 hlog.py:18] train/00129{31.84s}
I1128 05:48:44.568420 139639960884992 hlog.py:32] train/00130/loss 0.4434
I1128 05:48:44.569393 139639960884992 hlog.py:32] train/00130/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:48:44.569526 139639960884992 hlog.py:32] train/00130/eval/train/out what states border states that the mississippi WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 05:48:44.680320 139639960884992 hlog.py:32] train/00130/eval/train/??? which states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:48:44.680558 139639960884992 hlog.py:18] train/00130{29.36s}
I1128 05:49:16.639403 139639960884992 hlog.py:32] train/00131/loss 0.4397
I1128 05:49:16.640365 139639960884992 hlog.py:32] train/00131/eval/train/inp what states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:49:16.640498 139639960884992 hlog.py:32] train/00131/eval/train/out which states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:49:16.734269 139639960884992 hlog.py:32] train/00131/eval/train/??? what mountains are in WUG0 ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 05:49:16.734477 139639960884992 hlog.py:18] train/00131{32.05s}
I1128 05:49:48.198607 139639960884992 hlog.py:32] train/00132/loss 0.4529
I1128 05:49:48.199534 139639960884992 hlog.py:32] train/00132/eval/train/inp what is the highest WUG0 WUG1 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:49:48.199669 139639960884992 hlog.py:32] train/00132/eval/train/out what state contains the highest WUG0 WUG1 ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:49:48.380075 139639960884992 hlog.py:32] train/00132/eval/train/??? which states have points higher than the highest WUG0 WUG1 ( A , ( _state ( A ) , _place ( B ) , _loc ( B , A ) , _higher ( B , C ) , _highest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 05:49:48.380322 139639960884992 hlog.py:18] train/00132{31.65s}
I1128 05:50:18.174110 139639960884992 hlog.py:32] train/00133/loss 0.4421
I1128 05:50:18.175217 139639960884992 hlog.py:32] train/00133/eval/train/inp what state WUG0 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:50:18.175353 139639960884992 hlog.py:32] train/00133/eval/train/out which state WUG0 sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:50:18.317644 139639960884992 hlog.py:32] train/00133/eval/train/??? which state WUG0 the lowest point that borders idaho ( A , _lowest ( B , ( _state ( A ) , _loc ( B , A ) , _place ( B ) , _next_to ( A , C ) , _const ( C , _stateid ( idaho ) ) ) ) )
I1128 05:50:18.317814 139639960884992 hlog.py:18] train/00133{29.94s}
I1128 05:50:48.978326 139639960884992 hlog.py:32] train/00134/loss 0.4401
I1128 05:50:48.979253 139639960884992 hlog.py:32] train/00134/eval/train/inp how many rivers are in WUG0 ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) , A ) )
I1128 05:50:48.979383 139639960884992 hlog.py:32] train/00134/eval/train/out what states does the WUG0 river run through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG0 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:50:49.072835 139639960884992 hlog.py:32] train/00134/eval/train/??? what states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 05:50:49.073106 139639960884992 hlog.py:18] train/00134{30.76s}
I1128 05:51:20.946114 139639960884992 hlog.py:32] train/00135/loss 0.4430
I1128 05:51:20.947041 139639960884992 hlog.py:32] train/00135/eval/train/inp WUG0 has the smallest population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:51:20.947168 139639960884992 hlog.py:32] train/00135/eval/train/out WUG0 has the smallest capital ( A , ( _state ( A ) , _loc ( B , A ) , WUG1 ( B , _capital ( B ) ) ) )
I1128 05:51:21.027494 139639960884992 hlog.py:32] train/00135/eval/train/??? WUG0 capital has the smallest population ( A , WUG1 ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 05:51:21.027681 139639960884992 hlog.py:18] train/00135{31.95s}
I1128 05:51:53.111415 139639960884992 hlog.py:32] train/00136/loss 0.4381
I1128 05:51:53.112195 139639960884992 hlog.py:32] train/00136/eval/train/inp what is the WUG0 of the highest point in the usa ( A , WUG1 ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:51:53.112324 139639960884992 hlog.py:32] train/00136/eval/train/out what is the WUG0 of death valley ( A , WUG1 ( B , A ) , _const ( B , _placeid ( death valley ) ) ) )
I1128 05:51:53.205184 139639960884992 hlog.py:32] train/00136/eval/train/??? what is the maximum WUG0 of 50 francisco ( A , WUG1 ( B , A ) , _const ( B , _cityid ( 50 , francisco ) ) ) )
I1128 05:51:53.205393 139639960884992 hlog.py:18] train/00136{32.18s}
I1128 05:52:23.731582 139639960884992 hlog.py:32] train/00137/loss 0.4423
I1128 05:52:23.732511 139639960884992 hlog.py:32] train/00137/eval/train/inp what state has the smallest WUG0 ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 05:52:23.732639 139639960884992 hlog.py:32] train/00137/eval/train/out what is the WUG0 of all the states combined ( A , _sum ( C , _state ( C ) WUG1 ( C ) , A ) )
I1128 05:52:23.867916 139639960884992 hlog.py:32] train/00137/eval/train/??? what is the highest point of the state with the largest WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _largest ( C , ( _state ( B ) WUG1 ( B , C ) ) ) ) ) )
I1128 05:52:23.868150 139639960884992 hlog.py:18] train/00137{30.66s}
I1128 05:52:56.943316 139639960884992 hlog.py:32] train/00138/loss 0.4400
I1128 05:52:56.944253 139639960884992 hlog.py:32] train/00138/eval/train/inp what states does the ohio river WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:52:56.944379 139639960884992 hlog.py:32] train/00138/eval/train/out what states does the missouri WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) , _traverse ( B , A ) ) )
I1128 05:52:57.038856 139639960884992 hlog.py:32] train/00138/eval/train/??? what states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 05:52:57.039040 139639960884992 hlog.py:18] train/00138{33.17s}
I1128 05:53:27.917184 139639960884992 hlog.py:32] train/00139/loss 0.4481
I1128 05:53:27.918125 139639960884992 hlog.py:32] train/00139/eval/train/inp which river WUG0 through the most states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 05:53:27.918263 139639960884992 hlog.py:32] train/00139/eval/train/out which is the lowest point of the states that the mississippi WUG0 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 05:53:28.056663 139639960884992 hlog.py:32] train/00139/eval/train/??? what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 05:53:28.113622 139639960884992 hlog.py:18] train/00139{31.07s}
I1128 05:54:00.878293 139639960884992 hlog.py:32] train/00140/loss 0.4365
I1128 05:54:00.879287 139639960884992 hlog.py:32] train/00140/eval/train/inp what states does the ohio river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:54:00.879423 139639960884992 hlog.py:32] train/00140/eval/train/out which rivers do not WUG0 through usa ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:54:00.978920 139639960884992 hlog.py:32] train/00140/eval/train/??? which states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( colorado ) ) , _traverse ( B , A ) ) )
I1128 05:54:00.979106 139639960884992 hlog.py:18] train/00140{32.87s}
I1128 05:54:32.262577 139639960884992 hlog.py:32] train/00141/loss 0.4442
I1128 05:54:32.263508 139639960884992 hlog.py:32] train/00141/eval/train/inp through which states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B , _riverid WUG1 ) ) , _traverse ( B , A ) ) )
I1128 05:54:32.263641 139639960884992 hlog.py:32] train/00141/eval/train/out what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 05:54:32.378440 139639960884992 hlog.py:32] train/00141/eval/train/??? what populous WUG0 through states that border rhode state ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _const ( B , _stateid WUG1 state ) ) ) )
I1128 05:54:32.378654 139639960884992 hlog.py:18] train/00141{31.40s}
I1128 05:55:03.121379 139639960884992 hlog.py:32] train/00142/loss 0.4387
I1128 05:55:03.122324 139639960884992 hlog.py:32] train/00142/eval/train/inp how many people WUG0 austin ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 05:55:03.122445 139639960884992 hlog.py:32] train/00142/eval/train/out how many people WUG0 kalamazoo ( A , ( _population ( B , A ) , _const ( B , _cityid ( kalamazoo , _ ) ) ) )
I1128 05:55:03.210308 139639960884992 hlog.py:32] train/00142/eval/train/??? how many people WUG0 austin texas ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , texas ) ) ) )
I1128 05:55:03.210484 139639960884992 hlog.py:18] train/00142{30.83s}
I1128 05:55:32.116710 139639960884992 hlog.py:32] train/00143/loss 0.4461
I1128 05:55:32.117666 139639960884992 hlog.py:32] train/00143/eval/train/inp what WUG0 the ohio river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:55:32.117791 139639960884992 hlog.py:32] train/00143/eval/train/out what WUG0 the shortest river WUG1 through ( A , ( _state ( A ) , _shortest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 05:55:32.243716 139639960884992 hlog.py:32] train/00143/eval/train/??? what WUG0 the mississippi river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 05:55:32.243971 139639960884992 hlog.py:18] train/00143{29.03s}
I1128 05:56:02.954008 139639960884992 hlog.py:32] train/00144/loss 0.4412
I1128 05:56:02.954926 139639960884992 hlog.py:32] train/00144/eval/train/inp what state WUG0 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 05:56:02.955062 139639960884992 hlog.py:32] train/00144/eval/train/out which city in california WUG0 largest population ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _stateid ( california ) ) , _population ( A , B ) ) ) )
I1128 05:56:03.055033 139639960884992 hlog.py:32] train/00144/eval/train/??? what state WUG0 the longest river ( A , _longest ( B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) ) )
I1128 05:56:03.055363 139639960884992 hlog.py:18] train/00144{30.81s}
I1128 05:56:33.402806 139639960884992 hlog.py:32] train/00145/loss 0.4396
I1128 05:56:33.403729 139639960884992 hlog.py:32] train/00145/eval/train/inp WUG0 has the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:56:33.403862 139639960884992 hlog.py:32] train/00145/eval/train/out WUG0 has the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 05:56:33.495971 139639960884992 hlog.py:32] train/00145/eval/train/??? WUG0 has the smallest capital ( A , ( _state ( A ) , _loc ( B , A ) , _smallest ( B , _capital ( B ) ) ) )
I1128 05:56:33.496188 139639960884992 hlog.py:18] train/00145{30.44s}
I1128 05:57:04.756329 139639960884992 hlog.py:32] train/00146/loss 0.4358
I1128 05:57:04.757311 139639960884992 hlog.py:32] train/00146/eval/train/inp how many rivers are in the state that WUG0 WUG1 rivers ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _most ( C , D , ( _state ( C ) , _loc ( D , C ) , _river ( D ) ) ) ) , A ) )
I1128 05:57:04.757443 139639960884992 hlog.py:32] train/00146/eval/train/out what state WUG0 WUG1 major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 05:57:04.858026 139639960884992 hlog.py:32] train/00146/eval/train/??? what state WUG0 WUG1 cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:57:04.858235 139639960884992 hlog.py:18] train/00146{31.36s}
I1128 05:57:38.353728 139639960884992 hlog.py:32] train/00147/loss 0.4305
I1128 05:57:38.354657 139639960884992 hlog.py:32] train/00147/eval/train/inp what is the longest river in the WUG0 ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:57:38.354786 139639960884992 hlog.py:32] train/00147/eval/train/out name all the lakes of WUG0 ( A , ( _lake ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1128 05:57:38.494525 139639960884992 hlog.py:32] train/00147/eval/train/??? what is the elevation of the highest point in WUG0 ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 05:57:38.494783 139639960884992 hlog.py:18] train/00147{33.64s}
I1128 05:58:07.809231 139639960884992 hlog.py:32] train/00148/loss 0.4423
I1128 05:58:07.810134 139639960884992 hlog.py:32] train/00148/eval/train/inp WUG0 has the most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 05:58:07.810272 139639960884992 hlog.py:32] train/00148/eval/train/out WUG0 is boston in ( A , ( _state ( A ) , _const ( B , _cityid ( boston , _ ) ) , _loc ( B , A ) ) )
I1128 05:58:07.911033 139639960884992 hlog.py:32] train/00148/eval/train/??? WUG0 has the most cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 05:58:07.911307 139639960884992 hlog.py:18] train/00148{29.42s}
I1128 05:58:37.212431 139639960884992 hlog.py:32] train/00149/loss 0.4407
I1128 05:58:37.213448 139639960884992 hlog.py:32] train/00149/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 05:58:37.213592 139639960884992 hlog.py:32] train/00149/eval/train/out what states border the state WUG0 most major cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) ) ) ) )
I1128 05:58:37.403256 139639960884992 hlog.py:32] train/00149/eval/train/??? what rivers run through the state WUG0 the lowest point in the usa ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 05:58:37.458936 139639960884992 hlog.py:18] train/00149{29.55s}
I1128 05:59:08.098054 139639960884992 hlog.py:32] train/00150/loss 0.4357
I1128 05:59:08.099004 139639960884992 hlog.py:32] train/00150/eval/train/inp what is the biggest city in WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:59:08.099153 139639960884992 hlog.py:32] train/00150/eval/train/out what is the biggest state in WUG0 ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 05:59:08.193365 139639960884992 hlog.py:32] train/00150/eval/train/??? which states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1128 05:59:08.193595 139639960884992 hlog.py:18] train/00150{30.73s}
I1128 05:59:37.113131 139639960884992 hlog.py:32] train/00151/loss 0.4290
I1128 05:59:37.114066 139639960884992 hlog.py:32] train/00151/eval/train/inp what is the WUG0 in texas ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1128 05:59:37.114203 139639960884992 hlog.py:32] train/00151/eval/train/out what is the WUG0 in states that border california ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( california ) ) ) ) )
I1128 05:59:37.237594 139639960884992 hlog.py:32] train/00151/eval/train/??? what is the WUG0 in alabama ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _stateid ( alabama ) ) , _population ( A , B ) ) ) )
I1128 05:59:37.237790 139639960884992 hlog.py:18] train/00151{29.04s}
I1128 06:00:07.033996 139639960884992 hlog.py:32] train/00152/loss 0.4314
I1128 06:00:07.035096 139639960884992 hlog.py:32] train/00152/eval/train/inp WUG0 WUG1 largest city ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:00:07.035220 139639960884992 hlog.py:32] train/00152/eval/train/out WUG0 WUG1 highest point ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 06:00:07.153994 139639960884992 hlog.py:32] train/00152/eval/train/??? WUG0 WUG1 city with the most population ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( C , ( _city ( B ) , _population ( B , C ) ) ) ) )
I1128 06:00:07.154201 139639960884992 hlog.py:18] train/00152{29.92s}
I1128 06:00:37.123496 139639960884992 hlog.py:32] train/00153/loss 0.4347
I1128 06:00:37.124530 139639960884992 hlog.py:32] train/00153/eval/train/inp what states border the WUG0 the WUG1 cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 06:00:37.124670 139639960884992 hlog.py:32] train/00153/eval/train/out what state is the WUG0 the WUG1 rivers ( A , ( _state ( A ) , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) ) )
I1128 06:00:37.281704 139639960884992 hlog.py:32] train/00153/eval/train/??? what is the highest point in the WUG0 the WUG1 rivers ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _traverse ( C , B ) , _river ( C ) ) ) ) ) )
I1128 06:00:37.281944 139639960884992 hlog.py:18] train/00153{30.13s}
I1128 06:01:06.932281 139639960884992 hlog.py:32] train/00154/loss 0.4268
I1128 06:01:06.933230 139639960884992 hlog.py:32] train/00154/eval/train/inp WUG0 has the smallest population WUG1 ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:01:06.933357 139639960884992 hlog.py:32] train/00154/eval/train/out WUG0 has the lowest population WUG1 ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:01:07.026091 139639960884992 hlog.py:32] train/00154/eval/train/??? WUG0 has the largest boston WUG1 ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:01:07.026316 139639960884992 hlog.py:18] train/00154{29.74s}
I1128 06:01:38.045203 139639960884992 hlog.py:32] train/00155/loss 0.4277
I1128 06:01:38.046251 139639960884992 hlog.py:32] train/00155/eval/train/inp WUG0 has the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:01:38.046387 139639960884992 hlog.py:32] train/00155/eval/train/out WUG0 has the largest capital ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , _capital ( B ) ) ) )
I1128 06:01:38.126365 139639960884992 hlog.py:32] train/00155/eval/train/??? WUG0 has the smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:01:38.126545 139639960884992 hlog.py:18] train/00155{31.10s}
I1128 06:02:08.770614 139639960884992 hlog.py:32] train/00156/loss 0.4318
I1128 06:02:08.771723 139639960884992 hlog.py:32] train/00156/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:02:08.771888 139639960884992 hlog.py:32] train/00156/eval/train/out how many states border the state WUG0 largest population ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , ( _state ( C ) , _population ( C , D ) ) ) ) , A ) )
I1128 06:02:09.126800 139639960884992 hlog.py:32] train/00156/eval/train/??? how many states have a higher point than the highest point of the state WUG0 the largest capital city in the us ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _higher ( C , D ) , _place ( C ) , _highest ( D , ( _place ( D ) , _loc ( D , E ) , _state ( E ) , _loc ( F , E ) , _largest ( F , ( _capital ( F ) , _city ( F ) , _loc ( F , G ) , _const ( G , _countryid ( usa ) ) ) ) ) ) ) , A ) )
I1128 06:02:09.127061 139639960884992 hlog.py:18] train/00156{31.00s}
I1128 06:02:40.298771 139639960884992 hlog.py:32] train/00157/loss 0.4366
I1128 06:02:40.299707 139639960884992 hlog.py:32] train/00157/eval/train/inp what state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:02:40.299836 139639960884992 hlog.py:32] train/00157/eval/train/out which state capital WUG0 WUG1 population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:02:40.383622 139639960884992 hlog.py:32] train/00157/eval/train/??? which state capital WUG0 WUG1 population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:02:40.383907 139639960884992 hlog.py:18] train/00157{31.26s}
I1128 06:03:11.706305 139639960884992 hlog.py:32] train/00158/loss 0.4335
I1128 06:03:11.707262 139639960884992 hlog.py:32] train/00158/eval/train/inp how many rivers are in the state that WUG0 WUG1 rivers ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _most ( C , D , ( _state ( C ) , _loc ( D , C ) , _river ( D ) ) ) ) , A ) )
I1128 06:03:11.707391 139639960884992 hlog.py:32] train/00158/eval/train/out what state WUG0 WUG1 rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:03:11.874541 139639960884992 hlog.py:32] train/00158/eval/train/??? how many rivers are found in the state WUG0 WUG1 rivers ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _most ( C , D , ( _state ( C ) , _loc ( D , C ) , _river ( D ) ) ) ) , A ) )
I1128 06:03:11.874903 139639960884992 hlog.py:18] train/00158{31.49s}
I1128 06:03:43.948342 139639960884992 hlog.py:32] train/00159/loss 0.4306
I1128 06:03:43.949331 139639960884992 hlog.py:32] train/00159/eval/train/inp what is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:03:43.949476 139639960884992 hlog.py:32] train/00159/eval/train/out where is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:03:44.181213 139639960884992 hlog.py:32] train/00159/eval/train/??? what is the largest state that borders the state with the lowest point in WUG0 ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _stateid ( WUG0 ) ) ) ) ) ) )
I1128 06:03:44.243259 139639960884992 hlog.py:18] train/00159{32.37s}
I1128 06:04:16.991987 139639960884992 hlog.py:32] train/00160/loss 0.4452
I1128 06:04:16.992924 139639960884992 hlog.py:32] train/00160/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:04:16.993079 139639960884992 hlog.py:32] train/00160/eval/train/out how many rivers do not traverse the state WUG0 capital albany ( A , _count ( B , ( _river ( B ) , \+ ( _traverse ( B , C ) , _state ( C ) , _loc ( D , C ) , WUG1 D ) , _const ( D , _cityid ( albany , _ ) ) ) ) , A ) )
I1128 06:04:17.111627 139639960884992 hlog.py:32] train/00160/eval/train/??? what is the area of the state WUG0 lowest population density ( A , ( _area ( B , A ) , _smallest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 06:04:17.111839 139639960884992 hlog.py:18] train/00160{32.87s}
I1128 06:04:46.836800 139639960884992 hlog.py:32] train/00161/loss 0.4353
I1128 06:04:46.838005 139639960884992 hlog.py:32] train/00161/eval/train/inp which river WUG0 the most states ( A , WUG1 A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:04:46.838137 139639960884992 hlog.py:32] train/00161/eval/train/out what river WUG0 the most states ( A , WUG1 A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:04:47.013720 139639960884992 hlog.py:32] train/00161/eval/train/??? what is the length of the smallest state in the usa ( A , ( _len ( B , A ) , WUG1 B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:04:47.014091 139639960884992 hlog.py:18] train/00161{29.90s}
I1128 06:05:18.723139 139639960884992 hlog.py:32] train/00162/loss 0.4313
I1128 06:05:18.724270 139639960884992 hlog.py:32] train/00162/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:05:18.724407 139639960884992 hlog.py:32] train/00162/eval/train/out what is WUG0 of the state with the lowest point ( A , ( WUG1 ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , _place ( C ) ) ) )
I1128 06:05:18.793217 139639960884992 hlog.py:32] train/00162/eval/train/??? what is the largest WUG0 ( A , _largest ( A , WUG1 ( A ) ) )
I1128 06:05:18.793401 139639960884992 hlog.py:18] train/00162{31.78s}
I1128 06:05:48.859794 139639960884992 hlog.py:32] train/00163/loss 0.4354
I1128 06:05:48.860762 139639960884992 hlog.py:32] train/00163/eval/train/inp what are the major cities in WUG1 ( A , ( WUG0 ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG1 ) ) ) )
I1128 06:05:48.860891 139639960884992 hlog.py:32] train/00163/eval/train/out what are the major cities in the state of WUG1 ( A , ( WUG0 ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( WUG1 ) ) ) )
I1128 06:05:48.987109 139639960884992 hlog.py:32] train/00163/eval/train/??? what are the major cities in the state of WUG1 ( A , ( WUG1 ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( WUG1 ) ) ) )
I1128 06:05:48.987325 139639960884992 hlog.py:18] train/00163{30.19s}
I1128 06:06:18.812604 139639960884992 hlog.py:32] train/00164/loss 0.4339
I1128 06:06:18.813556 139639960884992 hlog.py:32] train/00164/eval/train/inp WUG0 WUG1 the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:06:18.813680 139639960884992 hlog.py:32] train/00164/eval/train/out WUG0 WUG1 the most cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:06:18.895165 139639960884992 hlog.py:32] train/00164/eval/train/??? WUG0 WUG1 the largest area ( A , _largest ( B , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 06:06:18.895347 139639960884992 hlog.py:18] train/00164{29.91s}
I1128 06:06:51.618825 139639960884992 hlog.py:32] train/00165/loss 0.4320
I1128 06:06:51.619757 139639960884992 hlog.py:32] train/00165/eval/train/inp how many WUG0 WUG1 in austin ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 06:06:51.619889 139639960884992 hlog.py:32] train/00165/eval/train/out how many WUG0 WUG1 in the state with the largest population density ( A , ( _population ( B , A ) , _largest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 06:06:51.740159 139639960884992 hlog.py:32] train/00165/eval/train/??? how many WUG0 WUG1 in the capital of texas ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 06:06:51.740399 139639960884992 hlog.py:18] train/00165{32.84s}
I1128 06:07:21.650779 139639960884992 hlog.py:32] train/00166/loss 0.4283
I1128 06:07:21.651716 139639960884992 hlog.py:32] train/00166/eval/train/inp what states border WUG0 with the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 06:07:21.651858 139639960884992 hlog.py:32] train/00166/eval/train/out what states border states that border WUG0 with the largest population ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _next_to ( B , C ) , _largest ( D , ( _state ( C ) , _population ( C , D ) ) ) ) )
I1128 06:07:21.796874 139639960884992 hlog.py:32] train/00166/eval/train/??? how many states border WUG0 that borders the most states ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1128 06:07:21.797110 139639960884992 hlog.py:18] train/00166{30.06s}
I1128 06:07:53.507686 139639960884992 hlog.py:32] train/00167/loss 0.4232
I1128 06:07:53.508769 139639960884992 hlog.py:32] train/00167/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( WUG1 ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:07:53.508914 139639960884992 hlog.py:32] train/00167/eval/train/out what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( WUG1 ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:07:53.610030 139639960884992 hlog.py:32] train/00167/eval/train/??? which states does the longest river WUG0 through ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 06:07:53.610212 139639960884992 hlog.py:18] train/00167{31.81s}
I1128 06:08:24.698337 139639960884992 hlog.py:32] train/00168/loss 0.4267
I1128 06:08:24.699275 139639960884992 hlog.py:32] train/00168/eval/train/inp what are the major cities in WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 06:08:24.699466 139639960884992 hlog.py:32] train/00168/eval/train/out how many rivers are in WUG0 ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) , A ) )
I1128 06:08:24.795549 139639960884992 hlog.py:32] train/00168/eval/train/??? what states border WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:08:24.795853 139639960884992 hlog.py:18] train/00168{31.19s}
I1128 06:08:57.618666 139639960884992 hlog.py:32] train/00169/loss 0.4312
I1128 06:08:57.619603 139639960884992 hlog.py:32] train/00169/eval/train/inp what is the highest point in WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:08:57.619731 139639960884992 hlog.py:32] train/00169/eval/train/out how many states are in WUG0 ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1128 06:08:57.729513 139639960884992 hlog.py:32] train/00169/eval/train/??? what are the major cities in WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1128 06:08:57.786250 139639960884992 hlog.py:18] train/00169{32.99s}
I1128 06:09:28.271899 139639960884992 hlog.py:32] train/00170/loss 0.4308
I1128 06:09:28.272959 139639960884992 hlog.py:32] train/00170/eval/train/inp what is the largest city in WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:09:28.273122 139639960884992 hlog.py:32] train/00170/eval/train/out what is the largest state that borders WUG0 ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:09:28.384239 139639960884992 hlog.py:32] train/00170/eval/train/??? what are the major states in WUG0 ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 06:09:28.384455 139639960884992 hlog.py:18] train/00170{30.60s}
I1128 06:09:58.754472 139639960884992 hlog.py:32] train/00171/loss 0.4362
I1128 06:09:58.755486 139639960884992 hlog.py:32] train/00171/eval/train/inp WUG0 has the sparsest population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:09:58.755617 139639960884992 hlog.py:32] train/00171/eval/train/out WUG0 has the smallest urban population ( A WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:09:58.834566 139639960884992 hlog.py:32] train/00171/eval/train/??? WUG0 has the least population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:09:58.834823 139639960884992 hlog.py:18] train/00171{30.45s}
I1128 06:10:28.713354 139639960884992 hlog.py:32] train/00172/loss 0.4340
I1128 06:10:28.714341 139639960884992 hlog.py:32] train/00172/eval/train/inp what are the populations of the WUG0 which the mississippi river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:10:28.714482 139639960884992 hlog.py:32] train/00172/eval/train/out what are the populations of the WUG0 which the mississippi WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:10:28.899915 139639960884992 hlog.py:32] train/00172/eval/train/??? what are the major cities in the WUG0 which the major river in virginia WUG1 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _river ( C ) , _loc ( C , D ) , _const ( D , _stateid ( virginia ) ) , _traverse ( C , B ) ) )
I1128 06:10:28.900151 139639960884992 hlog.py:18] train/00172{30.07s}
I1128 06:11:02.325256 139639960884992 hlog.py:32] train/00173/loss 0.4168
I1128 06:11:02.326188 139639960884992 hlog.py:32] train/00173/eval/train/inp through which states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B , WUG1 mississippi ) ) , _traverse ( B , A ) ) )
I1128 06:11:02.326324 139639960884992 hlog.py:32] train/00173/eval/train/out which states does the chattahoochee river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 chattahoochee ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:11:02.464282 139639960884992 hlog.py:32] train/00173/eval/train/??? what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:11:02.464758 139639960884992 hlog.py:18] train/00173{33.56s}
I1128 06:11:31.397526 139639960884992 hlog.py:32] train/00174/loss 0.4311
I1128 06:11:31.398677 139639960884992 hlog.py:32] train/00174/eval/train/inp what is the capital of states that WUG0 WUG1 durham ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( durham , _ ) ) ) )
I1128 06:11:31.398895 139639960884992 hlog.py:32] train/00174/eval/train/out what states WUG0 WUG1 rochester ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( rochester , _ ) ) ) )
I1128 06:11:31.545455 139639960884992 hlog.py:32] train/00174/eval/train/??? what states WUG0 WUG1 salt lake city ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( salt lake city , _ ) ) ) )
I1128 06:11:31.545691 139639960884992 hlog.py:18] train/00174{29.08s}
I1128 06:12:01.232498 139639960884992 hlog.py:32] train/00175/loss 0.4305
I1128 06:12:01.233799 139639960884992 hlog.py:32] train/00175/eval/train/inp what states WUG0 WUG1 salt lake city ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( salt lake city , _ ) ) ) )
I1128 06:12:01.234016 139639960884992 hlog.py:32] train/00175/eval/train/out what states WUG0 WUG1 portland ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( portland , _ ) ) ) )
I1128 06:12:01.363282 139639960884992 hlog.py:32] train/00175/eval/train/??? which states WUG0 WUG1 austin ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 06:12:01.363566 139639960884992 hlog.py:18] train/00175{29.82s}
I1128 06:12:33.004858 139639960884992 hlog.py:32] train/00176/loss 0.4292
I1128 06:12:33.005786 139639960884992 hlog.py:32] train/00176/eval/train/inp what state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:12:33.005921 139639960884992 hlog.py:32] train/00176/eval/train/out what state borders the state with WUG0 population ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) )
I1128 06:12:33.090983 139639960884992 hlog.py:32] train/00176/eval/train/??? which state capital has WUG0 population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) ) )
I1128 06:12:33.091183 139639960884992 hlog.py:18] train/00176{31.73s}
I1128 06:13:03.897679 139639960884992 hlog.py:32] train/00177/loss 0.4311
I1128 06:13:03.898778 139639960884992 hlog.py:32] train/00177/eval/train/inp what states WUG0 ohio WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:13:03.898910 139639960884992 hlog.py:32] train/00177/eval/train/out which states WUG0 missouri WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:13:04.062995 139639960884992 hlog.py:32] train/00177/eval/train/??? how many states in the us WUG0 shortest WUG1 through ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) , _shortest ( D , _river ( D ) ) , _traverse ( D , B ) ) , A ) )
I1128 06:13:04.063262 139639960884992 hlog.py:18] train/00177{30.97s}
I1128 06:13:38.883471 139639960884992 hlog.py:32] train/00178/loss 0.4270
I1128 06:13:38.884555 139639960884992 hlog.py:32] train/00178/eval/train/inp how long is WUG0 river in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:13:38.884732 139639960884992 hlog.py:32] train/00178/eval/train/out what is WUG0 river in the smallest state in the usa ( A WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 06:13:39.048905 139639960884992 hlog.py:32] train/00178/eval/train/??? what is the length of WUG0 river in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:13:39.049186 139639960884992 hlog.py:18] train/00178{34.99s}
I1128 06:14:10.439709 139639960884992 hlog.py:32] train/00179/loss 0.4243
I1128 06:14:10.440626 139639960884992 hlog.py:32] train/00179/eval/train/inp WUG0 has the largest city ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:14:10.440750 139639960884992 hlog.py:32] train/00179/eval/train/out WUG0 is the smallest ( A , _smallest ( A , _state ( A ) ) )
I1128 06:14:10.523227 139639960884992 hlog.py:32] train/00179/eval/train/??? WUG0 capital has the smallest population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:14:10.605660 139639960884992 hlog.py:18] train/00179{31.56s}
I1128 06:14:40.163513 139639960884992 hlog.py:32] train/00180/loss 0.4231
I1128 06:14:40.164525 139639960884992 hlog.py:32] train/00180/eval/train/inp what states does the WUG1 river run through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:14:40.164655 139639960884992 hlog.py:32] train/00180/eval/train/out which states does the WUG1 river pass through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _traverse ( B , A ) ) )
I1128 06:14:40.258554 139639960884992 hlog.py:32] train/00180/eval/train/??? what states does the WUG1 run through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _traverse ( B , A ) ) )
I1128 06:14:40.258766 139639960884992 hlog.py:18] train/00180{29.65s}
I1128 06:15:14.410330 139639960884992 hlog.py:32] train/00181/loss 0.4124
I1128 06:15:14.411498 139639960884992 hlog.py:32] train/00181/eval/train/inp how WUG0 WUG1 austin ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 06:15:14.411653 139639960884992 hlog.py:32] train/00181/eval/train/out how WUG0 WUG1 the state with the largest population density ( A , ( _population ( B , A ) , _largest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 06:15:14.497952 139639960884992 hlog.py:32] train/00181/eval/train/??? how WUG0 WUG1 minneapolis minnesota ( A , ( _population ( B , A ) , _const ( B , _cityid ( minneapolis , minnesota ) ) ) )
I1128 06:15:14.498154 139639960884992 hlog.py:18] train/00181{34.24s}
I1128 06:15:42.008980 139639960884992 hlog.py:32] train/00182/loss 0.4220
I1128 06:15:42.009875 139639960884992 hlog.py:32] train/00182/eval/train/inp WUG0 WUG1 the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:15:42.010001 139639960884992 hlog.py:32] train/00182/eval/train/out WUG0 WUG1 the smallest area ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1128 06:15:42.093985 139639960884992 hlog.py:32] train/00182/eval/train/??? WUG0 WUG1 the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:15:42.094211 139639960884992 hlog.py:18] train/00182{27.60s}
I1128 06:16:13.906029 139639960884992 hlog.py:32] train/00183/loss 0.4257
I1128 06:16:13.907029 139639960884992 hlog.py:32] train/00183/eval/train/inp what is the highest point in the state with capital WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( WUG0 , _ ) ) ) ) )
I1128 06:16:13.907159 139639960884992 hlog.py:32] train/00183/eval/train/out what state is WUG0 located in ( A , ( _state ( A ) , _const ( B , _cityid ( WUG0 , _ ) ) , _loc ( B , A ) ) )
I1128 06:16:14.029661 139639960884992 hlog.py:32] train/00183/eval/train/??? what states have a city named WUG0 ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( WUG0 , _ ) ) ) )
I1128 06:16:14.029895 139639960884992 hlog.py:18] train/00183{31.94s}
I1128 06:16:47.021903 139639960884992 hlog.py:32] train/00184/loss 0.4268
I1128 06:16:47.022877 139639960884992 hlog.py:32] train/00184/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:16:47.023007 139639960884992 hlog.py:32] train/00184/eval/train/out what are the states through which the longest WUG0 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 06:16:47.136828 139639960884992 hlog.py:32] train/00184/eval/train/??? which states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:16:47.137074 139639960884992 hlog.py:18] train/00184{33.11s}
I1128 06:17:20.313587 139639960884992 hlog.py:32] train/00185/loss 0.4232
I1128 06:17:20.314724 139639960884992 hlog.py:32] train/00185/eval/train/inp WUG0 has the most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:17:20.314851 139639960884992 hlog.py:32] train/00185/eval/train/out WUG0 is the smallest ( A , _smallest ( A , _state ( A ) ) )
I1128 06:17:20.401533 139639960884992 hlog.py:32] train/00185/eval/train/??? WUG0 has the smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:17:20.401785 139639960884992 hlog.py:18] train/00185{33.26s}
I1128 06:17:50.364710 139639960884992 hlog.py:32] train/00186/loss 0.4250
I1128 06:17:50.365737 139639960884992 hlog.py:32] train/00186/eval/train/inp which river runs through WUG0 states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:17:50.365886 139639960884992 hlog.py:32] train/00186/eval/train/out which river goes through the WUG0 states ( A WUG1 ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:17:50.465247 139639960884992 hlog.py:32] train/00186/eval/train/??? which state has WUG0 rivers ( A WUG1 ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) ) )
I1128 06:17:50.465458 139639960884992 hlog.py:18] train/00186{30.06s}
I1128 06:18:18.842148 139639960884992 hlog.py:32] train/00187/loss 0.4218
I1128 06:18:18.843122 139639960884992 hlog.py:32] train/00187/eval/train/inp which states does the longest river WUG0 ( A , ( _state ( A ) , _longest ( B WUG1 ( B ) ) , _traverse ( B , A ) ) )
I1128 06:18:18.843254 139639960884992 hlog.py:32] train/00187/eval/train/out what states does the shortest river WUG0 ( A , ( _state ( A ) , _shortest ( B WUG1 ( B ) ) , _traverse ( B , A ) ) )
I1128 06:18:18.964960 139639960884992 hlog.py:32] train/00187/eval/train/??? which states does the chattahoochee river WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( chattahoochee ) ) WUG1 ( B ) , _traverse ( B , A ) ) )
I1128 06:18:18.965197 139639960884992 hlog.py:18] train/00187{28.50s}
I1128 06:18:51.963365 139639960884992 hlog.py:32] train/00188/loss 0.4239
I1128 06:18:51.964309 139639960884992 hlog.py:32] train/00188/eval/train/inp WUG0 WUG1 the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 06:18:51.964439 139639960884992 hlog.py:32] train/00188/eval/train/out WUG0 WUG1 the smallest population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:18:52.047312 139639960884992 hlog.py:32] train/00188/eval/train/??? WUG0 WUG1 the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:18:52.047501 139639960884992 hlog.py:18] train/00188{33.08s}
I1128 06:19:22.276817 139639960884992 hlog.py:32] train/00189/loss 0.4217
I1128 06:19:22.277932 139639960884992 hlog.py:32] train/00189/eval/train/inp WUG0 the states ( A , _state ( A ) )
I1128 06:19:22.278070 139639960884992 hlog.py:32] train/00189/eval/train/out WUG0 the states through which the longest river runs ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 06:19:22.439006 139639960884992 hlog.py:32] train/00189/eval/train/??? WUG0 the major cities in the smallest state in the us ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:19:22.497792 139639960884992 hlog.py:18] train/00189{30.45s}
I1128 06:19:54.203298 139639960884992 hlog.py:32] train/00190/loss 0.4148
I1128 06:19:54.204285 139639960884992 hlog.py:32] train/00190/eval/train/inp what is the biggest city in WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:19:54.204417 139639960884992 hlog.py:32] train/00190/eval/train/out what is the longest river in WUG0 ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:19:54.336604 139639960884992 hlog.py:32] train/00190/eval/train/??? what is the lowest point in WUG0 ( A , ( _lake ( A ) , _lake ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1128 06:19:54.336828 139639960884992 hlog.py:18] train/00190{31.84s}
I1128 06:20:24.626892 139639960884992 hlog.py:32] train/00191/loss 0.4228
I1128 06:20:24.628088 139639960884992 hlog.py:32] train/00191/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:20:24.628231 139639960884992 hlog.py:32] train/00191/eval/train/out which is the lowest point of the states that the mississippi WUG0 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 06:20:24.769801 139639960884992 hlog.py:32] train/00191/eval/train/??? what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:20:24.770109 139639960884992 hlog.py:18] train/00191{30.43s}
I1128 06:20:56.515268 139639960884992 hlog.py:32] train/00192/loss 0.4189
I1128 06:20:56.516278 139639960884992 hlog.py:32] train/00192/eval/train/inp what is the largest state WUG0 texas ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1128 06:20:56.516416 139639960884992 hlog.py:32] train/00192/eval/train/out what state WUG0 texas has the highest population ( A , _largest ( B , ( _state ( A ) , _next_to ( A , C ) , _const ( C , _stateid ( texas ) ) , _population ( A , B ) ) ) )
I1128 06:20:56.662935 139639960884992 hlog.py:32] train/00192/eval/train/??? what is the highest point in states WUG0 georgia ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( georgia ) ) ) ) )
I1128 06:20:56.663191 139639960884992 hlog.py:18] train/00192{31.89s}
I1128 06:21:25.668324 139639960884992 hlog.py:32] train/00193/loss 0.4239
I1128 06:21:25.669536 139639960884992 hlog.py:32] train/00193/eval/train/inp which state has WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:21:25.669720 139639960884992 hlog.py:32] train/00193/eval/train/out how many people live in WUG0 state bordering wyoming ( A , ( _population ( B , A ) , WUG1 B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( wyoming ) ) ) ) ) )
I1128 06:21:25.756579 139639960884992 hlog.py:32] train/00193/eval/train/??? what is WUG0 populous state ( A , WUG1 B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:21:25.756788 139639960884992 hlog.py:18] train/00193{29.09s}
I1128 06:21:56.655327 139639960884992 hlog.py:32] train/00194/loss 0.4143
I1128 06:21:56.656280 139639960884992 hlog.py:32] train/00194/eval/train/inp what are the major cities in new WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new WUG0 ) ) ) )
I1128 06:21:56.656423 139639960884992 hlog.py:32] train/00194/eval/train/out how many people live in the biggest city in new WUG0 state ( A , ( _population ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new WUG0 ) ) , _state ( C ) ) ) ) )
I1128 06:21:56.768635 139639960884992 hlog.py:32] train/00194/eval/train/??? what state borders new WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( new WUG0 ) ) ) )
I1128 06:21:56.768932 139639960884992 hlog.py:18] train/00194{31.01s}
I1128 06:22:29.010690 139639960884992 hlog.py:32] train/00195/loss 0.4198
I1128 06:22:29.011622 139639960884992 hlog.py:32] train/00195/eval/train/inp how many rivers are in WUG1 ( A WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 06:22:29.011752 139639960884992 hlog.py:32] train/00195/eval/train/out how many rivers does WUG1 have ( A WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 06:22:29.122564 139639960884992 hlog.py:32] train/00195/eval/train/??? how many rivers are found in WUG1 ( A WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 06:22:29.122793 139639960884992 hlog.py:18] train/00195{32.35s}
I1128 06:22:58.686307 139639960884992 hlog.py:32] train/00196/loss 0.4179
I1128 06:22:58.687254 139639960884992 hlog.py:32] train/00196/eval/train/inp which river WUG0 through the most states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:22:58.687388 139639960884992 hlog.py:32] train/00196/eval/train/out what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:22:58.862186 139639960884992 hlog.py:32] train/00196/eval/train/??? what is the lowest point of all states through which the colorado river WUG0 through ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , _riverid ( colorado ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 06:22:58.862495 139639960884992 hlog.py:18] train/00196{29.74s}
I1128 06:23:32.068447 139639960884992 hlog.py:32] train/00197/loss 0.4148
I1128 06:23:32.069449 139639960884992 hlog.py:32] train/00197/eval/train/inp which state has the WUG0 population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:23:32.069597 139639960884992 hlog.py:32] train/00197/eval/train/out what is the longest river in the WUG0 state in the usa ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) WUG1 ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 06:23:32.226270 139639960884992 hlog.py:32] train/00197/eval/train/??? what state contains the WUG0 point in the us ( A WUG1 ( B , ( _state ( A ) , _loc ( C , A ) , _highest ( C , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 06:23:32.226547 139639960884992 hlog.py:18] train/00197{33.36s}
I1128 06:24:02.034800 139639960884992 hlog.py:32] train/00198/loss 0.4149
I1128 06:24:02.035872 139639960884992 hlog.py:32] train/00198/eval/train/inp what states WUG0 ohio river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:24:02.036014 139639960884992 hlog.py:32] train/00198/eval/train/out what states WUG0 colorado river WUG1 through ( A , ( _state ( A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:24:02.133253 139639960884992 hlog.py:32] train/00198/eval/train/??? which states WUG0 longest river WUG1 through ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 06:24:02.133460 139639960884992 hlog.py:18] train/00198{29.91s}
I1128 06:24:32.131664 139639960884992 hlog.py:32] train/00199/loss 0.4144
I1128 06:24:32.133002 139639960884992 hlog.py:32] train/00199/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:24:32.133188 139639960884992 hlog.py:32] train/00199/eval/train/out what states border states that the mississippi WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:24:32.267988 139639960884992 hlog.py:32] train/00199/eval/train/??? what states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:24:32.328081 139639960884992 hlog.py:18] train/00199{30.19s}
I1128 06:25:04.404034 139639960884992 hlog.py:32] train/00200/loss 0.4111
I1128 06:25:04.405559 139639960884992 hlog.py:32] train/00200/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:25:04.405777 139639960884992 hlog.py:32] train/00200/eval/train/out what is the WUG0 of the state with the highest point ( A , ( WUG1 A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 06:25:04.587604 139639960884992 hlog.py:32] train/00200/eval/train/??? what is the WUG0 of the state with the highest elevation ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 C ) , _const ( C , _cityid ( elevation , _ ) ) ) )
I1128 06:25:04.587847 139639960884992 hlog.py:18] train/00200{32.26s}
I1128 06:25:34.755903 139639960884992 hlog.py:32] train/00201/loss 0.4248
I1128 06:25:34.756935 139639960884992 hlog.py:32] train/00201/eval/train/inp which river runs through WUG0 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:25:34.757074 139639960884992 hlog.py:32] train/00201/eval/train/out what is the WUG0 populated state bordering oklahoma ( A , _largest ( B , ( _state ( A ) , _next_to ( A , C ) , _const ( C , _stateid ( oklahoma ) ) , _population ( A , B ) ) ) )
I1128 06:25:34.869779 139639960884992 hlog.py:32] train/00201/eval/train/??? what state has the WUG0 rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:25:34.870014 139639960884992 hlog.py:18] train/00201{30.28s}
I1128 06:26:05.585417 139639960884992 hlog.py:32] train/00202/loss 0.4177
I1128 06:26:05.600811 139639960884992 hlog.py:32] train/00202/eval/train/inp WUG0 has the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 06:26:05.600938 139639960884992 hlog.py:32] train/00202/eval/train/out WUG0 is the biggest ( A , _largest ( A , _state ( A ) ) )
I1128 06:26:05.705449 139639960884992 hlog.py:32] train/00202/eval/train/??? WUG0 has the most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:26:05.705684 139639960884992 hlog.py:18] train/00202{30.84s}
I1128 06:26:35.844328 139639960884992 hlog.py:32] train/00203/loss 0.4307
I1128 06:26:35.845137 139639960884992 hlog.py:32] train/00203/eval/train/inp what is the biggest city in WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:26:35.845270 139639960884992 hlog.py:32] train/00203/eval/train/out what is the biggest capital city in WUG0 ( A , _largest ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:26:35.978366 139639960884992 hlog.py:32] train/00203/eval/train/??? what is the highest point of WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:26:35.978632 139639960884992 hlog.py:18] train/00203{30.27s}
I1128 06:27:04.727269 139639960884992 hlog.py:32] train/00204/loss 0.4185
I1128 06:27:04.728195 139639960884992 hlog.py:32] train/00204/eval/train/inp WUG0 has the sparsest population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:27:04.728322 139639960884992 hlog.py:32] train/00204/eval/train/out WUG0 has the smallest capital ( A , ( _state ( A ) , _loc ( B , A ) , WUG1 B , _capital ( B ) ) ) )
I1128 06:27:04.801999 139639960884992 hlog.py:32] train/00204/eval/train/??? WUG0 capital has the smallest population ( WUG1 B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:27:04.802179 139639960884992 hlog.py:18] train/00204{28.82s}
I1128 06:27:36.971144 139639960884992 hlog.py:32] train/00205/loss 0.4216
I1128 06:27:36.972193 139639960884992 hlog.py:32] train/00205/eval/train/inp what is the WUG0 ( A , _largest ( A , _state ( A ) ) )
I1128 06:27:36.972325 139639960884992 hlog.py:32] train/00205/eval/train/out what is the population of the WUG0 ( A , ( _population ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1128 06:27:37.134759 139639960884992 hlog.py:32] train/00205/eval/train/??? what is the lowest point of all states through which the WUG0 river runs through ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , _riverid ( WUG0 ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 06:27:37.134927 139639960884992 hlog.py:18] train/00205{32.33s}
I1128 06:28:07.815280 139639960884992 hlog.py:32] train/00206/loss 0.4152
I1128 06:28:07.816237 139639960884992 hlog.py:32] train/00206/eval/train/inp WUG0 has the most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 06:28:07.816368 139639960884992 hlog.py:32] train/00206/eval/train/out WUG0 is des moines located in ( A , ( _state ( A ) , _const ( B , _cityid ( des moines , _ ) ) , _loc ( B , A ) ) )
I1128 06:28:07.928146 139639960884992 hlog.py:32] train/00206/eval/train/??? WUG0 has the most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 06:28:07.928357 139639960884992 hlog.py:18] train/00206{30.79s}
I1128 06:28:38.740180 139639960884992 hlog.py:32] train/00207/loss 0.4208
I1128 06:28:38.741231 139639960884992 hlog.py:32] train/00207/eval/train/inp through which states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 06:28:38.741406 139639960884992 hlog.py:32] train/00207/eval/train/out which states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:28:38.868589 139639960884992 hlog.py:32] train/00207/eval/train/??? what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:28:38.868833 139639960884992 hlog.py:18] train/00207{30.94s}
I1128 06:29:09.813236 139639960884992 hlog.py:32] train/00208/loss 0.4137
I1128 06:29:09.814202 139639960884992 hlog.py:32] train/00208/eval/train/inp what state WUG0 WUG1 urban population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:29:09.814327 139639960884992 hlog.py:32] train/00208/eval/train/out which state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:29:09.897968 139639960884992 hlog.py:32] train/00208/eval/train/??? which state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:29:09.898153 139639960884992 hlog.py:18] train/00208{31.03s}
I1128 06:29:40.768882 139639960884992 hlog.py:32] train/00209/loss 0.4162
I1128 06:29:40.770085 139639960884992 hlog.py:32] train/00209/eval/train/inp what state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:29:40.770226 139639960884992 hlog.py:32] train/00209/eval/train/out what is the WUG0 point in mississippi ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( mississippi ) ) ) ) )
I1128 06:29:40.885328 139639960884992 hlog.py:32] train/00209/eval/train/??? what is the population density of the state with the WUG0 area ( A , ( _density ( B , A ) , _smallest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 06:29:41.005709 139639960884992 hlog.py:18] train/00209{31.11s}
I1128 06:30:12.486151 139639960884992 hlog.py:32] train/00210/loss 0.4097
I1128 06:30:12.487228 139639960884992 hlog.py:32] train/00210/eval/train/inp which rivers run through the state WUG0 WUG1 elevation in the usa ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 06:30:12.487373 139639960884992 hlog.py:32] train/00210/eval/train/out what is the state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:30:12.644630 139639960884992 hlog.py:32] train/00210/eval/train/??? what is capital of the state WUG0 WUG1 point ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , _place ( C ) ) ) )
I1128 06:30:12.645021 139639960884992 hlog.py:18] train/00210{31.64s}
I1128 06:30:42.626451 139639960884992 hlog.py:32] train/00211/loss 0.4227
I1128 06:30:42.627399 139639960884992 hlog.py:32] train/00211/eval/train/inp WUG0 has the most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:30:42.627537 139639960884992 hlog.py:32] train/00211/eval/train/out WUG0 has the lowest point that borders idaho ( A , _lowest ( B , ( _state ( A ) , _loc ( B , A ) , _place ( B ) , _next_to ( A , C ) , _const ( C , _stateid ( idaho ) ) ) ) )
I1128 06:30:42.719913 139639960884992 hlog.py:32] train/00211/eval/train/??? WUG0 has the highest point ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 06:30:42.720139 139639960884992 hlog.py:18] train/00211{30.07s}
I1128 06:31:15.197812 139639960884992 hlog.py:32] train/00212/loss 0.4255
I1128 06:31:15.198828 139639960884992 hlog.py:32] train/00212/eval/train/inp what is the largest state WUG0 texas ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG1 ) ) ) )
I1128 06:31:15.198970 139639960884992 hlog.py:32] train/00212/eval/train/out what state WUG0 texas is the largest ( A , _largest ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( WUG1 ) ) ) )
I1128 06:31:15.340713 139639960884992 hlog.py:32] train/00212/eval/train/??? what is the largest city in a state WUG0 texas ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) )
I1128 06:31:15.341013 139639960884992 hlog.py:18] train/00212{32.62s}
I1128 06:31:45.621320 139639960884992 hlog.py:32] train/00213/loss 0.4178
I1128 06:31:45.622261 139639960884992 hlog.py:32] train/00213/eval/train/inp WUG0 WUG1 most rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 06:31:45.622400 139639960884992 hlog.py:32] train/00213/eval/train/out WUG0 which the mississippi runs through WUG1 largest population ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 06:31:45.747823 139639960884992 hlog.py:32] train/00213/eval/train/??? WUG0 capital WUG1 smallest population ( A , _smallest ( B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:31:45.748065 139639960884992 hlog.py:18] train/00213{30.41s}
I1128 06:32:18.256261 139639960884992 hlog.py:32] train/00214/loss 0.4027
I1128 06:32:18.257210 139639960884992 hlog.py:32] train/00214/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) WUG1 ( C ) , _traverse ( C , B ) ) )
I1128 06:32:18.257340 139639960884992 hlog.py:32] train/00214/eval/train/out which states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) WUG1 ( B ) , _traverse ( B , A ) ) )
I1128 06:32:18.400782 139639960884992 hlog.py:32] train/00214/eval/train/??? what states border states that the ohio WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , _riverid ( ohio ) ) WUG1 ( C ) , _traverse ( C , B ) ) )
I1128 06:32:18.400976 139639960884992 hlog.py:18] train/00214{32.65s}
I1128 06:32:50.982942 139639960884992 hlog.py:32] train/00215/loss 0.4115
I1128 06:32:50.983874 139639960884992 hlog.py:32] train/00215/eval/train/inp what states border WUG0 WUG1 the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 06:32:50.984003 139639960884992 hlog.py:32] train/00215/eval/train/out what is the population of WUG0 WUG1 the largest area ( A , ( _population ( B , A ) , _largest ( C , ( _state ( B ) , _area ( B , C ) ) ) ) )
I1128 06:32:51.147755 139639960884992 hlog.py:32] train/00215/eval/train/??? what is the highest point in WUG0 WUG1 the most rivers ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _traverse ( C , B ) , _river ( C ) ) ) ) ) )
I1128 06:32:51.147996 139639960884992 hlog.py:18] train/00215{32.75s}
I1128 06:33:21.812391 139639960884992 hlog.py:32] train/00216/loss 0.4171
I1128 06:33:21.813480 139639960884992 hlog.py:32] train/00216/eval/train/inp what states border the WUG0 the most cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _city ( C ) ) ) ) )
I1128 06:33:21.813620 139639960884992 hlog.py:32] train/00216/eval/train/out what is the capital of the WUG0 the highest elevation ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 06:33:21.974049 139639960884992 hlog.py:32] train/00216/eval/train/??? what is the highest point in the WUG0 the most rivers ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _traverse ( C , B ) , _river ( C ) ) ) ) ) )
I1128 06:33:21.974284 139639960884992 hlog.py:18] train/00216{30.83s}
I1128 06:33:53.803305 139639960884992 hlog.py:32] train/00217/loss 0.4210
I1128 06:33:53.804263 139639960884992 hlog.py:32] train/00217/eval/train/inp how many people WUG0 in austin ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 06:33:53.804391 139639960884992 hlog.py:32] train/00217/eval/train/out how many people WUG0 in spokane washington ( A , ( _population ( B , A ) , _const ( B , _cityid ( spokane , washington ) ) ) )
I1128 06:33:53.891416 139639960884992 hlog.py:32] train/00217/eval/train/??? how many people WUG0 in riverside ( A , ( _population ( B , A ) , _const ( B , _cityid ( riverside , _ ) ) ) )
I1128 06:33:53.891599 139639960884992 hlog.py:18] train/00217{31.92s}
I1128 06:34:24.347243 139639960884992 hlog.py:32] train/00218/loss 0.4130
I1128 06:34:24.348178 139639960884992 hlog.py:32] train/00218/eval/train/inp what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:34:24.348324 139639960884992 hlog.py:32] train/00218/eval/train/out what is the lowest point of all states through which the colorado WUG0 through ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , WUG1 ( colorado ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 06:34:24.488737 139639960884992 hlog.py:32] train/00218/eval/train/??? what is the most populous state through which the mississippi WUG0 ( A , _largest ( B , ( _state ( A ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 06:34:24.488981 139639960884992 hlog.py:18] train/00218{30.60s}
I1128 06:34:54.475473 139639960884992 hlog.py:32] train/00219/loss 0.4178
I1128 06:34:54.476424 139639960884992 hlog.py:32] train/00219/eval/train/inp which WUG0 through the most states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:34:54.476570 139639960884992 hlog.py:32] train/00219/eval/train/out what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:34:54.626916 139639960884992 hlog.py:32] train/00219/eval/train/??? what are the major cities in states through which the runs WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _traverse ( C , B ) , _const ( C , _riverid ( runs ) ) ) )
I1128 06:34:54.732193 139639960884992 hlog.py:18] train/00219{30.24s}
I1128 06:35:26.109723 139639960884992 hlog.py:32] train/00220/loss 0.4132
I1128 06:35:26.110619 139639960884992 hlog.py:32] train/00220/eval/train/inp what state has WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:35:26.110742 139639960884992 hlog.py:32] train/00220/eval/train/out what is the state with WUG0 population density ( A , WUG1 B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:35:26.272430 139639960884992 hlog.py:32] train/00220/eval/train/??? what is the longest river in WUG0 state in the usa ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , WUG1 B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 06:35:26.272712 139639960884992 hlog.py:18] train/00220{31.54s}
I1128 06:35:57.472497 139639960884992 hlog.py:32] train/00221/loss 0.4132
I1128 06:35:57.473445 139639960884992 hlog.py:32] train/00221/eval/train/inp what are the populations of states through which WUG0 river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:35:57.473584 139639960884992 hlog.py:32] train/00221/eval/train/out what are the major cities in states through which WUG0 WUG1 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _traverse ( C , B ) , _const ( C , _riverid ( mississippi ) ) ) )
I1128 06:35:57.651628 139639960884992 hlog.py:32] train/00221/eval/train/??? what is the population of the capital of the largest state through which WUG0 WUG1 ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid ( mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 06:35:57.651888 139639960884992 hlog.py:18] train/00221{31.38s}
I1128 06:36:29.961394 139639960884992 hlog.py:32] train/00222/loss 0.4115
I1128 06:36:29.962395 139639960884992 hlog.py:32] train/00222/eval/train/inp where is WUG0 ( A , ( _loc ( B , A ) , _const ( B , _cityid ( WUG0 , _ ) ) ) )
I1128 06:36:29.962527 139639960884992 hlog.py:32] train/00222/eval/train/out what states have a city named WUG0 ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( WUG0 , _ ) ) ) )
I1128 06:36:30.061410 139639960884992 hlog.py:32] train/00222/eval/train/??? what states the shortest river in WUG0 ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) )
I1128 06:36:30.061597 139639960884992 hlog.py:18] train/00222{32.41s}
I1128 06:37:01.891668 139639960884992 hlog.py:32] train/00223/loss 0.4172
I1128 06:37:01.892731 139639960884992 hlog.py:32] train/00223/eval/train/inp WUG0 has WUG1 major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 06:37:01.892857 139639960884992 hlog.py:32] train/00223/eval/train/out WUG0 has WUG1 cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:37:02.010802 139639960884992 hlog.py:32] train/00223/eval/train/??? WUG0 has WUG1 rivers running through it ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 06:37:02.010968 139639960884992 hlog.py:18] train/00223{31.95s}
I1128 06:37:33.083535 139639960884992 hlog.py:32] train/00224/loss 0.4140
I1128 06:37:33.084471 139639960884992 hlog.py:32] train/00224/eval/train/inp WUG0 does the longest river WUG1 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 06:37:33.084623 139639960884992 hlog.py:32] train/00224/eval/train/out WUG0 does the mississippi WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 06:37:33.189305 139639960884992 hlog.py:32] train/00224/eval/train/??? WUG0 does the chattahoochee river WUG1 ( A , ( _state ( A ) , _const ( B , _riverid ( chattahoochee ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:37:33.189513 139639960884992 hlog.py:18] train/00224{31.18s}
I1128 06:38:04.490168 139639960884992 hlog.py:32] train/00225/loss 0.4158
I1128 06:38:04.491081 139639960884992 hlog.py:32] train/00225/eval/train/inp WUG0 WUG1 the smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:38:04.491211 139639960884992 hlog.py:32] train/00225/eval/train/out WUG0 WUG1 the red river ( A , ( _state ( A ) , _loc ( B , A ) , _const ( B , _riverid ( red ) ) , _river ( B ) ) )
I1128 06:38:04.572143 139639960884992 hlog.py:32] train/00225/eval/train/??? WUG0 WUG1 the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:38:04.572337 139639960884992 hlog.py:18] train/00225{31.38s}
I1128 06:38:36.938575 139639960884992 hlog.py:32] train/00226/loss 0.4131
I1128 06:38:36.939521 139639960884992 hlog.py:32] train/00226/eval/train/inp which state has the WUG0 density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:38:36.939656 139639960884992 hlog.py:32] train/00226/eval/train/out what state borders the state with the WUG0 ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) )
I1128 06:38:37.054673 139639960884992 hlog.py:32] train/00226/eval/train/??? what is the area of the state with the WUG0 density ( A , ( _area ( B , A ) , _smallest ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 06:38:37.054886 139639960884992 hlog.py:18] train/00226{32.48s}
I1128 06:39:09.134070 139639960884992 hlog.py:32] train/00227/loss 0.4180
I1128 06:39:09.135037 139639960884992 hlog.py:32] train/00227/eval/train/inp what are WUG0 WUG1 texas ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 06:39:09.135175 139639960884992 hlog.py:32] train/00227/eval/train/out what are WUG0 WUG1 delaware ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( delaware ) ) ) )
I1128 06:39:09.238924 139639960884992 hlog.py:32] train/00227/eval/train/??? what are WUG0 WUG1 california ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( california ) ) ) )
I1128 06:39:09.239144 139639960884992 hlog.py:18] train/00227{32.18s}
I1128 06:39:39.652660 139639960884992 hlog.py:32] train/00228/loss 0.4089
I1128 06:39:39.653587 139639960884992 hlog.py:32] train/00228/eval/train/inp what state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:39:39.653712 139639960884992 hlog.py:32] train/00228/eval/train/out which state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:39:39.735927 139639960884992 hlog.py:32] train/00228/eval/train/??? which is the WUG0 state ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:39:39.736109 139639960884992 hlog.py:18] train/00228{30.50s}
I1128 06:40:10.867881 139639960884992 hlog.py:32] train/00229/loss 0.4163
I1128 06:40:10.868663 139639960884992 hlog.py:32] train/00229/eval/train/inp WUG0 has the sparsest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:40:10.868790 139639960884992 hlog.py:32] train/00229/eval/train/out WUG0 has the smallest urban population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:40:10.971652 139639960884992 hlog.py:32] train/00229/eval/train/??? WUG0 is dallas in ( A , ( _state ( A ) , _const ( B , _cityid ( dallas , _ ) ) , _loc ( B , A ) ) )
I1128 06:40:11.028346 139639960884992 hlog.py:18] train/00229{31.29s}
I1128 06:40:39.641736 139639960884992 hlog.py:32] train/00230/loss 0.4108
I1128 06:40:39.642802 139639960884992 hlog.py:32] train/00230/eval/train/inp how many major cities are in states bordering WUG0 ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( WUG0 ) ) ) , A ) )
I1128 06:40:39.642939 139639960884992 hlog.py:32] train/00230/eval/train/out what is the lowest point in WUG0 in meters ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( WUG0 ) ) ) ) )
I1128 06:40:39.797255 139639960884992 hlog.py:32] train/00230/eval/train/??? what is the longest river in the states that border WUG0 ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG0 ) ) ) ) )
I1128 06:40:39.797506 139639960884992 hlog.py:18] train/00230{28.77s}
I1128 06:41:10.995761 139639960884992 hlog.py:32] train/00231/loss 0.4096
I1128 06:41:10.996744 139639960884992 hlog.py:32] train/00231/eval/train/inp what states does the ohio river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:41:10.996911 139639960884992 hlog.py:32] train/00231/eval/train/out what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:41:11.096729 139639960884992 hlog.py:32] train/00231/eval/train/??? which states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 colorado ) ) , _traverse ( B , A ) ) )
I1128 06:41:11.096968 139639960884992 hlog.py:18] train/00231{31.30s}
I1128 06:41:42.517487 139639960884992 hlog.py:32] train/00232/loss 0.4120
I1128 06:41:42.518528 139639960884992 hlog.py:32] train/00232/eval/train/inp WUG0 WUG1 the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:41:42.518656 139639960884992 hlog.py:32] train/00232/eval/train/out WUG0 WUG1 the largest capital ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , _capital ( B ) ) ) )
I1128 06:41:42.599749 139639960884992 hlog.py:32] train/00232/eval/train/??? WUG0 WUG1 the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:41:42.599959 139639960884992 hlog.py:18] train/00232{31.50s}
I1128 06:42:17.976892 139639960884992 hlog.py:32] train/00233/loss 0.4015
I1128 06:42:17.977878 139639960884992 hlog.py:32] train/00233/eval/train/inp give me the WUG0 WUG1 passes through the us ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:42:17.978034 139639960884992 hlog.py:32] train/00233/eval/train/out what is the WUG0 WUG1 flows through a state WUG1 borders indiana ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( indiana ) ) ) ) )
I1128 06:42:18.130186 139639960884992 hlog.py:32] train/00233/eval/train/??? what is the WUG0 WUG1 runs through a state WUG1 borders tennessee ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( tennessee ) ) ) ) )
I1128 06:42:18.130426 139639960884992 hlog.py:18] train/00233{35.53s}
I1128 06:42:47.956574 139639960884992 hlog.py:32] train/00234/loss 0.4180
I1128 06:42:47.957521 139639960884992 hlog.py:32] train/00234/eval/train/inp what are the populations of states through which WUG0 WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:42:47.957657 139639960884992 hlog.py:32] train/00234/eval/train/out which is the lowest point of the states that WUG0 WUG1 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 06:42:48.122349 139639960884992 hlog.py:32] train/00234/eval/train/??? what is the largest city in smallest state through which WUG0 WUG1 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) ) ) ) )
I1128 06:42:48.122583 139639960884992 hlog.py:18] train/00234{29.99s}
I1128 06:43:18.984623 139639960884992 hlog.py:32] train/00235/loss 0.4136
I1128 06:43:18.985588 139639960884992 hlog.py:32] train/00235/eval/train/inp WUG0 has the WUG1 rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:43:18.985713 139639960884992 hlog.py:32] train/00235/eval/train/out WUG0 has the WUG1 cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:43:19.083963 139639960884992 hlog.py:32] train/00235/eval/train/??? WUG0 has the WUG1 cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:43:19.084190 139639960884992 hlog.py:18] train/00235{30.96s}
I1128 06:43:50.816089 139639960884992 hlog.py:32] train/00236/loss 0.4074
I1128 06:43:50.817107 139639960884992 hlog.py:32] train/00236/eval/train/inp what state WUG0 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 06:43:50.817255 139639960884992 hlog.py:32] train/00236/eval/train/out which city in california WUG0 largest population ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _stateid ( california ) ) , _population ( A , B ) ) ) )
I1128 06:43:50.903156 139639960884992 hlog.py:32] train/00236/eval/train/??? what state WUG0 lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:43:50.903363 139639960884992 hlog.py:18] train/00236{31.82s}
I1128 06:44:24.640126 139639960884992 hlog.py:32] train/00237/loss 0.3986
I1128 06:44:24.641079 139639960884992 hlog.py:32] train/00237/eval/train/inp WUG0 has the highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 06:44:24.641209 139639960884992 hlog.py:32] train/00237/eval/train/out WUG0 borders hawaii ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) )
I1128 06:44:24.724895 139639960884992 hlog.py:32] train/00237/eval/train/??? WUG0 has the lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:44:24.725088 139639960884992 hlog.py:18] train/00237{33.82s}
I1128 06:44:56.007532 139639960884992 hlog.py:32] train/00238/loss 0.4135
I1128 06:44:56.008595 139639960884992 hlog.py:32] train/00238/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:44:56.008740 139639960884992 hlog.py:32] train/00238/eval/train/out what state which the mississippi WUG0 through has the largest population ( A , _largest ( B , ( _state ( A ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 06:44:56.192897 139639960884992 hlog.py:32] train/00238/eval/train/??? what are the major cities in the states through which the major river in virginia WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _river ( C ) , _loc ( C , D ) , _const ( D WUG1 ( virginia ) ) , _traverse ( C , B ) ) )
I1128 06:44:56.193113 139639960884992 hlog.py:18] train/00238{31.47s}
I1128 06:45:27.173108 139639960884992 hlog.py:32] train/00239/loss 0.4061
I1128 06:45:27.174008 139639960884992 hlog.py:32] train/00239/eval/train/inp which state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:45:27.174140 139639960884992 hlog.py:32] train/00239/eval/train/out which state is WUG0 ( A , _smallest ( A , _state ( A ) ) )
I1128 06:45:27.257702 139639960884992 hlog.py:32] train/00239/eval/train/??? which state has WUG0 average urban population ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:45:27.312752 139639960884992 hlog.py:18] train/00239{31.12s}
I1128 06:45:58.611507 139639960884992 hlog.py:32] train/00240/loss 0.4013
I1128 06:45:58.612695 139639960884992 hlog.py:32] train/00240/eval/train/inp which state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:45:58.612973 139639960884992 hlog.py:32] train/00240/eval/train/out what rivers run through the state with the WUG0 point in the usa ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 06:45:58.800099 139639960884992 hlog.py:32] train/00240/eval/train/??? what are the major cities in the WUG0 state in the us ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:45:58.800350 139639960884992 hlog.py:18] train/00240{31.49s}
I1128 06:46:29.764178 139639960884992 hlog.py:32] train/00241/loss 0.4223
I1128 06:46:29.765117 139639960884992 hlog.py:32] train/00241/eval/train/inp how long is the WUG0 river in the usa ( A , ( _len ( B , A ) WUG1 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:46:29.765248 139639960884992 hlog.py:32] train/00241/eval/train/out what is the capital of the state with the WUG0 river ( A , ( _capital ( A ) , _loc ( A , B ) WUG1 ( C , ( _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) ) )
I1128 06:46:29.879734 139639960884992 hlog.py:32] train/00241/eval/train/??? what river is the WUG0 one in the united states ( A WUG1 ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:46:29.879963 139639960884992 hlog.py:18] train/00241{31.08s}
I1128 06:47:01.778738 139639960884992 hlog.py:32] train/00242/loss 0.4060
I1128 06:47:01.779690 139639960884992 hlog.py:32] train/00242/eval/train/inp which river runs through WUG0 states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:47:01.779841 139639960884992 hlog.py:32] train/00242/eval/train/out where is WUG0 populated area of new mexico ( A , _largest ( B , ( _city ( A ) , _loc ( A , C ) , _const ( C , _stateid ( new mexico ) ) , _population ( A , B ) ) ) )
I1128 06:47:01.938117 139639960884992 hlog.py:32] train/00242/eval/train/??? how many states border WUG0 states that borders new mexico ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( new mexico ) ) ) , A ) )
I1128 06:47:01.938377 139639960884992 hlog.py:18] train/00242{32.06s}
I1128 06:47:30.432394 139639960884992 hlog.py:32] train/00243/loss 0.4164
I1128 06:47:30.433370 139639960884992 hlog.py:32] train/00243/eval/train/inp what is the biggest state in WUG0 ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:47:30.433508 139639960884992 hlog.py:32] train/00243/eval/train/out what is the elevation of the highest point in WUG0 ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:47:30.569103 139639960884992 hlog.py:32] train/00243/eval/train/??? what is the length of the longest river in WUG0 ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 06:47:30.569302 139639960884992 hlog.py:18] train/00243{28.63s}
I1128 06:48:00.022803 139639960884992 hlog.py:32] train/00244/loss 0.4117
I1128 06:48:00.023745 139639960884992 hlog.py:32] train/00244/eval/train/inp what state has the smallest WUG0 ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 06:48:00.023886 139639960884992 hlog.py:32] train/00244/eval/train/out what is the population of the state with the highest WUG0 ( A , ( _population ( B , A ) , _largest ( C , ( _state ( B ) WUG1 ( B , C ) ) ) ) )
I1128 06:48:00.137358 139639960884992 hlog.py:32] train/00244/eval/train/??? what is the area of the state with the smallest WUG0 ( A , ( _area ( B , A ) , _smallest ( C , ( _state ( B ) WUG1 ( B , C ) ) ) ) )
I1128 06:48:00.137594 139639960884992 hlog.py:18] train/00244{29.57s}
I1128 06:48:31.209390 139639960884992 hlog.py:32] train/00245/loss 0.4078
I1128 06:48:31.210330 139639960884992 hlog.py:32] train/00245/eval/train/inp how many WUG0 in boulder ( A , ( _population ( B , A ) , _const ( B , _cityid ( boulder , _ ) ) ) )
I1128 06:48:31.210467 139639960884992 hlog.py:32] train/00245/eval/train/out how many WUG0 live in the capital of texas ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1128 06:48:31.366958 139639960884992 hlog.py:32] train/00245/eval/train/??? how many WUG0 live in the biggest city in new york state ( A , ( _population ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new york ) ) , _state ( C ) ) ) ) )
I1128 06:48:31.367198 139639960884992 hlog.py:18] train/00245{31.23s}
I1128 06:49:00.927951 139639960884992 hlog.py:32] train/00246/loss 0.4115
I1128 06:49:00.962959 139639960884992 hlog.py:32] train/00246/eval/train/inp what are the WUG0 the states through which the mississippi river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:49:00.963108 139639960884992 hlog.py:32] train/00246/eval/train/out what are the WUG0 states through which the mississippi river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:49:01.100572 139639960884992 hlog.py:32] train/00246/eval/train/??? what are the WUG0 the states through which the mississippi river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:49:01.100769 139639960884992 hlog.py:18] train/00246{29.73s}
I1128 06:49:32.404653 139639960884992 hlog.py:32] train/00247/loss 0.4144
I1128 06:49:32.405647 139639960884992 hlog.py:32] train/00247/eval/train/inp what states border states WUG0 mississippi runs through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 06:49:32.405781 139639960884992 hlog.py:32] train/00247/eval/train/out what are the populations of the states through WUG0 mississippi runs ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 06:49:32.533696 139639960884992 hlog.py:32] train/00247/eval/train/??? what are the populations of states through WUG0 mississippi run ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 06:49:32.533943 139639960884992 hlog.py:18] train/00247{31.43s}
I1128 06:50:03.853848 139639960884992 hlog.py:32] train/00248/loss 0.4167
I1128 06:50:03.854839 139639960884992 hlog.py:32] train/00248/eval/train/inp WUG0 WUG1 most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:50:03.854972 139639960884992 hlog.py:32] train/00248/eval/train/out WUG0 WUG1 smallest capital ( A , ( _state ( A ) , _loc ( B , A ) , _smallest ( B , _capital ( B ) ) ) )
I1128 06:50:03.933128 139639960884992 hlog.py:32] train/00248/eval/train/??? WUG0 WUG1 largest area ( A , _largest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1128 06:50:03.933307 139639960884992 hlog.py:18] train/00248{31.40s}
I1128 06:50:34.099510 139639960884992 hlog.py:32] train/00249/loss 0.4105
I1128 06:50:34.100629 139639960884992 hlog.py:32] train/00249/eval/train/inp what is the longest river in the WUG0 ( A , WUG1 A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:50:34.100764 139639960884992 hlog.py:32] train/00249/eval/train/out name the longest river in WUG0 ( A , WUG1 A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 06:50:34.224030 139639960884992 hlog.py:32] train/00249/eval/train/??? what is the biggest capital city in the WUG0 ( A , WUG1 A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) ) )
I1128 06:50:34.320690 139639960884992 hlog.py:18] train/00249{30.39s}
I1128 06:51:04.392729 139639960884992 hlog.py:32] train/00250/loss 0.4133
I1128 06:51:04.393628 139639960884992 hlog.py:32] train/00250/eval/train/inp how high is WUG0 ( A , WUG1 ( B , A ) , _const ( B , _placeid ( WUG0 ) ) ) )
I1128 06:51:04.393750 139639960884992 hlog.py:32] train/00250/eval/train/out how tall is WUG0 ( A , WUG1 ( B , A ) , _const ( B , _placeid ( WUG0 ) ) ) )
I1128 06:51:04.468465 139639960884992 hlog.py:32] train/00250/eval/train/??? how tall is WUG0 ( A , WUG1 ( B , A ) , _const ( B , _placeid ( WUG0 ) ) ) )
I1128 06:51:04.468865 139639960884992 hlog.py:18] train/00250{30.15s}
I1128 06:51:37.664586 139639960884992 hlog.py:32] train/00251/loss 0.4151
I1128 06:51:37.665681 139639960884992 hlog.py:32] train/00251/eval/train/inp what are the populations of states through which the WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:51:37.666073 139639960884992 hlog.py:32] train/00251/eval/train/out what is the largest city in smallest state through which the WUG0 ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) ) ) ) )
I1128 06:51:37.827510 139639960884992 hlog.py:32] train/00251/eval/train/??? how many states in the us does the WUG0 through ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) , _shortest ( D WUG1 ( D ) ) , _traverse ( D , B ) ) , A ) )
I1128 06:51:37.827736 139639960884992 hlog.py:18] train/00251{33.36s}
I1128 06:52:08.348404 139639960884992 hlog.py:32] train/00252/loss 0.4174
I1128 06:52:08.349327 139639960884992 hlog.py:32] train/00252/eval/train/inp which state has the WUG0 density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:52:08.349450 139639960884992 hlog.py:32] train/00252/eval/train/out what is the state with the WUG0 density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:52:08.428124 139639960884992 hlog.py:32] train/00252/eval/train/??? what state has the WUG0 ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:52:08.428333 139639960884992 hlog.py:18] train/00252{30.60s}
I1128 06:52:39.603768 139639960884992 hlog.py:32] train/00253/loss 0.4186
I1128 06:52:39.604730 139639960884992 hlog.py:32] train/00253/eval/train/inp how many WUG0 in austin ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , _ ) ) ) )
I1128 06:52:39.604867 139639960884992 hlog.py:32] train/00253/eval/train/out how many WUG0 in san francisco ( A , ( _population ( B , A ) , _const ( B , _cityid ( san francisco , _ ) ) ) )
I1128 06:52:39.690881 139639960884992 hlog.py:32] train/00253/eval/train/??? how many WUG0 in austin texas ( A , ( _population ( B , A ) , _const ( B , _cityid ( austin , texas ) ) ) )
I1128 06:52:39.691095 139639960884992 hlog.py:18] train/00253{31.26s}
I1128 06:53:08.547830 139639960884992 hlog.py:32] train/00254/loss 0.4158
I1128 06:53:08.548870 139639960884992 hlog.py:32] train/00254/eval/train/inp WUG0 WUG1 ( A , _state ( A ) )
I1128 06:53:08.549015 139639960884992 hlog.py:32] train/00254/eval/train/out WUG0 the populations of WUG1 through which the mississippi runs ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:53:08.643487 139639960884992 hlog.py:32] train/00254/eval/train/??? WUG0 WUG1 that the potomac run through ( A , ( _state ( A ) , _const ( B , _riverid ( potomac ) ) , _traverse ( B , A ) ) )
I1128 06:53:08.643721 139639960884992 hlog.py:18] train/00254{28.95s}
I1128 06:53:38.120236 139639960884992 hlog.py:32] train/00255/loss 0.4069
I1128 06:53:38.121224 139639960884992 hlog.py:32] train/00255/eval/train/inp what are the populations of the states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:53:38.121359 139639960884992 hlog.py:32] train/00255/eval/train/out which river WUG0 through most states ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1128 06:53:38.236826 139639960884992 hlog.py:32] train/00255/eval/train/??? what states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:53:38.237052 139639960884992 hlog.py:18] train/00255{29.59s}
I1128 06:54:11.856520 139639960884992 hlog.py:32] train/00256/loss 0.4066
I1128 06:54:11.857815 139639960884992 hlog.py:32] train/00256/eval/train/inp WUG0 has the most rivers running through it ( A WUG1 ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1128 06:54:11.857948 139639960884992 hlog.py:32] train/00256/eval/train/out WUG0 is the state with the most rivers ( A , ( _state ( A ) WUG1 ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) ) )
I1128 06:54:11.964004 139639960884992 hlog.py:32] train/00256/eval/train/??? WUG0 contains most rivers ( A WUG1 ( B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:54:11.964249 139639960884992 hlog.py:18] train/00256{33.73s}
I1128 06:54:40.460064 139639960884992 hlog.py:32] train/00257/loss 0.4121
I1128 06:54:40.461048 139639960884992 hlog.py:32] train/00257/eval/train/inp through which states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( WUG1 ) , _traverse ( B , A ) ) )
I1128 06:54:40.461175 139639960884992 hlog.py:32] train/00257/eval/train/out what states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG1 ) , _traverse ( B , A ) ) )
I1128 06:54:40.569154 139639960884992 hlog.py:32] train/00257/eval/train/??? what states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( WUG1 ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:54:40.569379 139639960884992 hlog.py:18] train/00257{28.60s}
I1128 06:55:10.724982 139639960884992 hlog.py:32] train/00258/loss 0.4101
I1128 06:55:10.725928 139639960884992 hlog.py:32] train/00258/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 06:55:10.726054 139639960884992 hlog.py:32] train/00258/eval/train/out what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:55:10.876738 139639960884992 hlog.py:32] train/00258/eval/train/??? which is the lowest point of the states that the mississippi WUG0 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C WUG1 ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 06:55:10.877009 139639960884992 hlog.py:18] train/00258{30.31s}
I1128 06:55:43.358334 139639960884992 hlog.py:32] train/00259/loss 0.4092
I1128 06:55:43.359279 139639960884992 hlog.py:32] train/00259/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 06:55:43.359406 139639960884992 hlog.py:32] train/00259/eval/train/out what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:55:43.484287 139639960884992 hlog.py:32] train/00259/eval/train/??? what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , B ) ) )
I1128 06:55:43.542223 139639960884992 hlog.py:18] train/00259{32.67s}
I1128 06:56:13.102331 139639960884992 hlog.py:32] train/00260/loss 0.4110
I1128 06:56:13.103313 139639960884992 hlog.py:32] train/00260/eval/train/inp WUG0 WUG1 most major cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) ) )
I1128 06:56:13.103441 139639960884992 hlog.py:32] train/00260/eval/train/out WUG0 WUG1 most rivers ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 06:56:13.200511 139639960884992 hlog.py:32] train/00260/eval/train/??? WUG0 WUG1 most cities ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1128 06:56:13.200753 139639960884992 hlog.py:18] train/00260{29.66s}
I1128 06:56:44.959983 139639960884992 hlog.py:32] train/00261/loss 0.4009
I1128 06:56:44.960973 139639960884992 hlog.py:32] train/00261/eval/train/inp which state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 06:56:44.961102 139639960884992 hlog.py:32] train/00261/eval/train/out what state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 06:56:45.044223 139639960884992 hlog.py:32] train/00261/eval/train/??? what is the state with WUG0 population ( A , _smallest ( B , ( _state ( A ) , WUG1 ( A , B ) ) ) )
I1128 06:56:45.044429 139639960884992 hlog.py:18] train/00261{31.84s}
I1128 06:57:14.509447 139639960884992 hlog.py:32] train/00262/loss 0.4143
I1128 06:57:14.510376 139639960884992 hlog.py:32] train/00262/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 06:57:14.510506 139639960884992 hlog.py:32] train/00262/eval/train/out which states does the mississippi WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:57:14.626135 139639960884992 hlog.py:32] train/00262/eval/train/??? what states does the delaware river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( delaware ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 06:57:14.626335 139639960884992 hlog.py:18] train/00262{29.58s}
I1128 06:57:45.535481 139639960884992 hlog.py:32] train/00263/loss 0.4143
I1128 06:57:45.536490 139639960884992 hlog.py:32] train/00263/eval/train/inp what is capital of the state WUG0 WUG1 point ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , _place ( C ) ) ) )
I1128 06:57:45.536617 139639960884992 hlog.py:32] train/00263/eval/train/out what is the state WUG0 WUG1 population ( A , _smallest ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:57:45.627331 139639960884992 hlog.py:32] train/00263/eval/train/??? what is the state WUG0 WUG1 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 06:57:45.627901 139639960884992 hlog.py:18] train/00263{31.00s}
I1128 06:58:15.826174 139639960884992 hlog.py:32] train/00264/loss 0.4118
I1128 06:58:15.827196 139639960884992 hlog.py:32] train/00264/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , WUG1 ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:58:15.827345 139639960884992 hlog.py:32] train/00264/eval/train/out what is the population of the WUG0 of the largest state through which the mississippi runs ( A , ( _population ( B , A ) , WUG1 ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid ( mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 06:58:15.893983 139639960884992 hlog.py:32] train/00264/eval/train/??? what is the largest WUG0 ( A , _largest ( A , WUG1 ( A ) ) )
I1128 06:58:15.894177 139639960884992 hlog.py:18] train/00264{30.27s}
I1128 06:58:44.896937 139639960884992 hlog.py:32] train/00265/loss 0.4051
I1128 06:58:44.897875 139639960884992 hlog.py:32] train/00265/eval/train/inp what is the highest point in the state WUG0 capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 06:58:44.898009 139639960884992 hlog.py:32] train/00265/eval/train/out what are the cities of the state WUG0 the highest point ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C , _place ( C ) ) ) )
I1128 06:58:45.085871 139639960884992 hlog.py:32] train/00265/eval/train/??? what rivers run through the state WUG0 the lowest point in the usa ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 06:58:45.086340 139639960884992 hlog.py:18] train/00265{29.19s}
I1128 06:59:16.671609 139639960884992 hlog.py:32] train/00266/loss 0.4121
I1128 06:59:16.672730 139639960884992 hlog.py:32] train/00266/eval/train/inp what state has the WUG0 population ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:59:16.672896 139639960884992 hlog.py:32] train/00266/eval/train/out what is the largest city in WUG0 state through which the mississippi runs ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , WUG1 ( B , ( _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) ) ) ) )
I1128 06:59:16.763029 139639960884992 hlog.py:32] train/00266/eval/train/??? what state borders the state with the WUG0 population ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:59:16.763226 139639960884992 hlog.py:18] train/00266{31.68s}
I1128 06:59:46.449950 139639960884992 hlog.py:32] train/00267/loss 0.4105
I1128 06:59:46.450885 139639960884992 hlog.py:32] train/00267/eval/train/inp what state has the WUG0 population ( A , WUG1 B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 06:59:46.451025 139639960884992 hlog.py:32] train/00267/eval/train/out what is the longest river in the WUG0 state in the usa ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , WUG1 B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 06:59:46.531551 139639960884992 hlog.py:32] train/00267/eval/train/??? which state capital has the WUG0 population ( A , WUG1 B , ( _capital ( A ) , _population ( A , B ) ) ) )
I1128 06:59:46.531760 139639960884992 hlog.py:18] train/00267{29.77s}
I1128 07:00:16.180685 139639960884992 hlog.py:32] train/00268/loss 0.4042
I1128 07:00:16.181657 139639960884992 hlog.py:32] train/00268/eval/train/inp what state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:00:16.181817 139639960884992 hlog.py:32] train/00268/eval/train/out which rivers run through the state with WUG0 elevation in the usa ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) )
I1128 07:00:16.268965 139639960884992 hlog.py:32] train/00268/eval/train/??? what is the state with WUG0 area ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1128 07:00:16.269220 139639960884992 hlog.py:18] train/00268{29.74s}
I1128 07:00:46.582111 139639960884992 hlog.py:32] train/00269/loss 0.4081
I1128 07:00:46.583043 139639960884992 hlog.py:32] train/00269/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:00:46.583174 139639960884992 hlog.py:32] train/00269/eval/train/out what states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:00:46.720100 139639960884992 hlog.py:32] train/00269/eval/train/??? what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 07:00:46.774991 139639960884992 hlog.py:18] train/00269{30.51s}
I1128 07:01:17.928003 139639960884992 hlog.py:32] train/00270/loss 0.4080
I1128 07:01:17.929054 139639960884992 hlog.py:32] train/00270/eval/train/inp number of WUG0 in boulder ( A , ( _population ( B , A ) , _const ( B , _cityid ( boulder , _ ) ) ) )
I1128 07:01:17.929186 139639960884992 hlog.py:32] train/00270/eval/train/out how many WUG0 live in houston ( A , ( _population ( B , A ) , _const ( B , _cityid ( houston , _ ) ) ) )
I1128 07:01:18.019901 139639960884992 hlog.py:32] train/00270/eval/train/??? how many WUG0 live in minneapolis minnesota ( A , ( _population ( B , A ) , _const ( B , _cityid ( minneapolis , minnesota ) ) ) )
I1128 07:01:18.020114 139639960884992 hlog.py:18] train/00270{31.24s}
I1128 07:01:50.601622 139639960884992 hlog.py:32] train/00271/loss 0.4026
I1128 07:01:50.602549 139639960884992 hlog.py:32] train/00271/eval/train/inp what is the capital of the state with the WUG0 ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _highest ( C WUG1 ( C ) ) ) )
I1128 07:01:50.602697 139639960884992 hlog.py:32] train/00271/eval/train/out which states have points higher than the WUG0 in colorado ( A , ( _state ( A ) WUG1 ( B ) , _loc ( B , A ) , _higher ( B , C ) , _highest ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _stateid ( colorado ) ) ) ) ) )
I1128 07:01:50.770554 139639960884992 hlog.py:32] train/00271/eval/train/??? what is the WUG0 in the state with the capital des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) WUG1 ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 07:01:50.770916 139639960884992 hlog.py:18] train/00271{32.75s}
I1128 07:02:23.687191 139639960884992 hlog.py:32] train/00272/loss 0.4084
I1128 07:02:23.688221 139639960884992 hlog.py:32] train/00272/eval/train/inp what are the major WUG0 texas ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1128 07:02:23.688360 139639960884992 hlog.py:32] train/00272/eval/train/out what are the major WUG0 the state of california ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) )
I1128 07:02:23.785385 139639960884992 hlog.py:32] train/00272/eval/train/??? give me the WUG0 virginia ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1128 07:02:23.785689 139639960884992 hlog.py:18] train/00272{33.01s}
I1128 07:02:53.727812 139639960884992 hlog.py:32] train/00273/loss 0.4014
I1128 07:02:53.728849 139639960884992 hlog.py:32] train/00273/eval/train/inp what are the populations of the states WUG0 the mississippi WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:02:53.729001 139639960884992 hlog.py:32] train/00273/eval/train/out what is the lowest point of all states WUG0 the colorado river WUG1 through ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , _riverid ( colorado ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 07:02:53.845314 139639960884992 hlog.py:32] train/00273/eval/train/??? what is the most states WUG0 the mississippi WUG1 through ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) ) ) )
I1128 07:02:53.845560 139639960884992 hlog.py:18] train/00273{30.06s}
I1128 07:03:25.710224 139639960884992 hlog.py:32] train/00274/loss 0.4135
I1128 07:03:25.711138 139639960884992 hlog.py:32] train/00274/eval/train/inp which state has the WUG0 population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:03:25.711283 139639960884992 hlog.py:32] train/00274/eval/train/out what is the WUG0 city of the WUG0 state in the us ( A , WUG1 ( A , ( _city ( A ) , _loc ( A , B ) , WUG1 ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 07:03:25.797708 139639960884992 hlog.py:32] train/00274/eval/train/??? what is the population of the WUG0 state ( A , WUG1 ( B , ( _population ( B , A ) , _state ( B ) ) ) )
I1128 07:03:25.797921 139639960884992 hlog.py:18] train/00274{31.95s}
I1128 07:03:55.519562 139639960884992 hlog.py:32] train/00275/loss 0.4037
I1128 07:03:55.520528 139639960884992 hlog.py:32] train/00275/eval/train/inp what is the highest point in the state with WUG0 des moines ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( des moines , _ ) ) ) ) )
I1128 07:03:55.520668 139639960884992 hlog.py:32] train/00275/eval/train/out what is the WUG0 of states that have cities named durham ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( durham , _ ) ) ) )
I1128 07:03:55.702157 139639960884992 hlog.py:32] train/00275/eval/train/??? what is the population of the WUG0 of the largest state through which the mississippi runs ( A , ( _population ( B , A ) , _capital ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _const ( D , _riverid ( mississippi ) ) , _traverse ( D , C ) ) ) ) )
I1128 07:03:55.702397 139639960884992 hlog.py:18] train/00275{29.90s}
I1128 07:04:26.465442 139639960884992 hlog.py:32] train/00276/loss 0.4107
I1128 07:04:26.466532 139639960884992 hlog.py:32] train/00276/eval/train/inp how many states are there in WUG0 ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1128 07:04:26.466683 139639960884992 hlog.py:32] train/00276/eval/train/out what river is the longest one in the WUG0 ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 07:04:26.654901 139639960884992 hlog.py:32] train/00276/eval/train/??? what are the major cities in the smallest state in WUG0 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1128 07:04:26.655154 139639960884992 hlog.py:18] train/00276{30.95s}
I1128 07:04:58.351823 139639960884992 hlog.py:32] train/00277/loss 0.4055
I1128 07:04:58.352806 139639960884992 hlog.py:32] train/00277/eval/train/inp what state has WUG0 population density ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 07:04:58.352930 139639960884992 hlog.py:32] train/00277/eval/train/out what is the state with WUG0 population density ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 07:04:58.450673 139639960884992 hlog.py:32] train/00277/eval/train/??? what is the capital of WUG0 state ( A , ( _capital ( A ) , _loc ( A , B ) , _smallest ( B , _state ( B ) ) ) )
I1128 07:04:58.450902 139639960884992 hlog.py:18] train/00277{31.80s}
I1128 07:05:30.543290 139639960884992 hlog.py:32] train/00278/loss 0.4032
I1128 07:05:30.544219 139639960884992 hlog.py:32] train/00278/eval/train/inp WUG0 WUG1 smallest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:05:30.544342 139639960884992 hlog.py:32] train/00278/eval/train/out WUG0 WUG1 least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:05:30.631911 139639960884992 hlog.py:32] train/00278/eval/train/??? WUG0 WUG1 longest river ( A , _longest ( B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) ) ) )
I1128 07:05:30.632313 139639960884992 hlog.py:18] train/00278{32.18s}
I1128 07:06:03.178369 139639960884992 hlog.py:32] train/00279/loss 0.4027
I1128 07:06:03.179307 139639960884992 hlog.py:32] train/00279/eval/train/inp WUG0 the populations of states through which the mississippi WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 07:06:03.179434 139639960884992 hlog.py:32] train/00279/eval/train/out WUG0 the states through which the longest WUG1 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 07:06:03.279885 139639960884992 hlog.py:32] train/00279/eval/train/??? WUG0 the states through which the longest WUG1 ( A , ( _state ( A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1128 07:06:03.366889 139639960884992 hlog.py:18] train/00279{32.73s}
I1128 07:06:35.439487 139639960884992 hlog.py:32] train/00280/loss 0.4039
I1128 07:06:35.440418 139639960884992 hlog.py:32] train/00280/eval/train/inp what state has the WUG0 population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:06:35.440551 139639960884992 hlog.py:32] train/00280/eval/train/out what is the state with the WUG0 population density ( A WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:06:35.506839 139639960884992 hlog.py:32] train/00280/eval/train/??? which is the WUG0 state ( A WUG1 ( B , _state ( B ) ) ) )
I1128 07:06:35.507046 139639960884992 hlog.py:18] train/00280{32.14s}
I1128 07:07:04.824945 139639960884992 hlog.py:32] train/00281/loss 0.4163
I1128 07:07:04.825928 139639960884992 hlog.py:32] train/00281/eval/train/inp what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:07:04.826064 139639960884992 hlog.py:32] train/00281/eval/train/out what is the largest of the state that the rio grande WUG0 through ( A , _largest ( A , ( _state ( A ) , _traverse ( B , A ) , _const ( B , WUG1 ( rio grande ) ) ) ) )
I1128 07:07:04.955530 139639960884992 hlog.py:32] train/00281/eval/train/??? what are the populations of the states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:07:04.955753 139639960884992 hlog.py:18] train/00281{29.45s}
I1128 07:07:35.090481 139639960884992 hlog.py:32] train/00282/loss 0.4055
I1128 07:07:35.091513 139639960884992 hlog.py:32] train/00282/eval/train/inp how many rivers are in WUG1 ( A , WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:07:35.091662 139639960884992 hlog.py:32] train/00282/eval/train/out how many states border WUG1 and border new mexico ( A , WUG0 ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG1 ) ) , _next_to ( B , D ) , _const ( D , _stateid ( new mexico ) ) ) , A ) )
I1128 07:07:35.207100 139639960884992 hlog.py:32] train/00282/eval/train/??? how many rivers does WUG1 have ( A , WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:07:35.207340 139639960884992 hlog.py:18] train/00282{30.25s}
I1128 07:08:06.588514 139639960884992 hlog.py:32] train/00283/loss 0.4006
I1128 07:08:06.589442 139639960884992 hlog.py:32] train/00283/eval/train/inp what are the populations of states through which the mississippi river WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid WUG1 ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 07:08:06.589579 139639960884992 hlog.py:32] train/00283/eval/train/out what states does the mississippi river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid WUG1 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:08:06.740471 139639960884992 hlog.py:32] train/00283/eval/train/??? which is the lowest point of the states that the mississippi WUG0 through ( B , _lowest ( B , ( _place ( B ) , _loc ( B , A ) , _state ( A ) , _const ( C , _riverid WUG1 ) ) , _traverse ( C , A ) ) ) ) )
I1128 07:08:06.740714 139639960884992 hlog.py:18] train/00283{31.53s}
I1128 07:08:37.177375 139639960884992 hlog.py:32] train/00284/loss 0.4066
I1128 07:08:37.178333 139639960884992 hlog.py:32] train/00284/eval/train/inp WUG0 has the sparsest population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:08:37.178465 139639960884992 hlog.py:32] train/00284/eval/train/out WUG0 has the smallest population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:08:37.261914 139639960884992 hlog.py:32] train/00284/eval/train/??? WUG0 has the smallest urban population ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 07:08:37.262126 139639960884992 hlog.py:18] train/00284{30.52s}
I1128 07:09:07.744422 139639960884992 hlog.py:32] train/00285/loss 0.4042
I1128 07:09:07.745365 139639960884992 hlog.py:32] train/00285/eval/train/inp WUG0 WUG1 highest elevation ( A , ( _state ( A ) , _loc ( B , A ) , _highest ( B , _place ( B ) ) ) )
I1128 07:09:07.745492 139639960884992 hlog.py:32] train/00285/eval/train/out WUG0 WUG1 largest capital ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , _capital ( B ) ) ) )
I1128 07:09:07.825182 139639960884992 hlog.py:32] train/00285/eval/train/??? WUG0 WUG1 lowest population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:09:07.825356 139639960884992 hlog.py:18] train/00285{30.56s}
I1128 07:09:39.232071 139639960884992 hlog.py:32] train/00286/loss 0.4056
I1128 07:09:39.233327 139639960884992 hlog.py:32] train/00286/eval/train/inp how many rivers are in WUG1 ( A , WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:09:39.233464 139639960884992 hlog.py:32] train/00286/eval/train/out how many rivers are found in WUG1 ( A , WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:09:39.348749 139639960884992 hlog.py:32] train/00286/eval/train/??? how many rivers WUG0 found in WUG1 ( A , WUG0 ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:09:39.349131 139639960884992 hlog.py:18] train/00286{31.52s}
I1128 07:10:08.733712 139639960884992 hlog.py:32] train/00287/loss 0.4036
I1128 07:10:08.734681 139639960884992 hlog.py:32] train/00287/eval/train/inp what state has the WUG0 population density ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 07:10:08.734812 139639960884992 hlog.py:32] train/00287/eval/train/out which state has the WUG0 average urban population ( A , _smallest ( B , ( _state ( A ) WUG1 ( A , B ) ) ) )
I1128 07:10:08.871967 139639960884992 hlog.py:32] train/00287/eval/train/??? what states border the state with the WUG0 area ( A , ( _state ( A ) , _next_to ( A , B ) , _smallest ( C , ( _state ( B ) WUG1 ( B , C ) ) ) ) )
I1128 07:10:08.872163 139639960884992 hlog.py:18] train/00287{29.52s}
I1128 07:10:40.039665 139639960884992 hlog.py:32] train/00288/loss 0.3990
I1128 07:10:40.040630 139639960884992 hlog.py:32] train/00288/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:10:40.041362 139639960884992 hlog.py:32] train/00288/eval/train/out what is the most populous state through which the mississippi WUG0 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 07:10:40.151960 139639960884992 hlog.py:32] train/00288/eval/train/??? what states does the ohio WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:10:40.152294 139639960884992 hlog.py:18] train/00288{31.28s}
I1128 07:11:13.519107 139639960884992 hlog.py:32] train/00289/loss 0.4020
I1128 07:11:13.520276 139639960884992 hlog.py:32] train/00289/eval/train/inp what are the populations of the states through WUG0 mississippi river WUG1 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 07:11:13.520427 139639960884992 hlog.py:32] train/00289/eval/train/out what are the major cities in states through WUG0 mississippi WUG1 ( A , ( _major ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _traverse ( C , B ) , _const ( C , _riverid ( mississippi ) ) ) )
I1128 07:11:13.675091 139639960884992 hlog.py:32] train/00289/eval/train/??? what is the most populous state through WUG0 mississippi WUG1 ( A , _largest ( B , ( _state ( A ) , _const ( C , _riverid ( mississippi ) ) , _traverse ( C , A ) , _population ( A , B ) ) ) )
I1128 07:11:13.765815 139639960884992 hlog.py:18] train/00289{33.61s}
I1128 07:11:44.475399 139639960884992 hlog.py:32] train/00290/loss 0.4081
I1128 07:11:44.476357 139639960884992 hlog.py:32] train/00290/eval/train/inp WUG0 has the least population density ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:11:44.476499 139639960884992 hlog.py:32] train/00290/eval/train/out WUG0 has the city flint ( A , ( _state ( A ) , _loc ( B , A ) , _city ( B ) , _const ( B , _cityid ( flint , _ ) ) ) )
I1128 07:11:44.571926 139639960884992 hlog.py:32] train/00290/eval/train/??? WUG0 is austin in ( A , ( _state ( A ) , _const ( B , _cityid ( austin , _ ) ) , _loc ( B , A ) ) )
I1128 07:11:44.572148 139639960884992 hlog.py:18] train/00290{30.81s}
I1128 07:12:19.236644 139639960884992 hlog.py:32] train/00291/loss 0.4006
I1128 07:12:19.237602 139639960884992 hlog.py:32] train/00291/eval/train/inp what is the highest point in the state WUG0 WUG1 rivers ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _traverse ( C , B ) , _river ( C ) ) ) ) ) )
I1128 07:12:19.237746 139639960884992 hlog.py:32] train/00291/eval/train/out what is the longest river in the state WUG0 WUG1 major cities ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) ) ) ) ) )
I1128 07:12:19.391795 139639960884992 hlog.py:32] train/00291/eval/train/??? what states border the state WUG0 WUG1 major cities ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) ) ) ) )
I1128 07:12:19.392009 139639960884992 hlog.py:18] train/00291{34.82s}
I1128 07:12:47.926037 139639960884992 hlog.py:32] train/00292/loss 0.3979
I1128 07:12:47.927134 139639960884992 hlog.py:32] train/00292/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) )
I1128 07:12:47.927278 139639960884992 hlog.py:32] train/00292/eval/train/out what is the lowest point of all states through which the colorado WUG0 through ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( C , WUG1 ( colorado ) ) , _river ( C ) , _traverse ( C , B ) ) ) )
I1128 07:12:48.065773 139639960884992 hlog.py:32] train/00292/eval/train/??? what states border states which the mississippi WUG0 through ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) , _const ( C , WUG1 ( mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:12:48.066034 139639960884992 hlog.py:18] train/00292{28.67s}
I1128 07:13:19.374104 139639960884992 hlog.py:32] train/00293/loss 0.4015
I1128 07:13:19.375193 139639960884992 hlog.py:32] train/00293/eval/train/inp what are the populations of states through which the mississippi WUG0 ( A , ( _population ( B , A ) , _state ( B ) , _const ( C , WUG1 mississippi ) ) , _traverse ( C , B ) ) )
I1128 07:13:19.375352 139639960884992 hlog.py:32] train/00293/eval/train/out which states does the chattahoochee river WUG0 through ( A , ( _state ( A ) , _const ( B , WUG1 chattahoochee ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:13:19.526015 139639960884992 hlog.py:32] train/00293/eval/train/??? what is the longest river that WUG0 through a state that borders tennessee ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid WUG1 ) ) ) ) )
I1128 07:13:19.526259 139639960884992 hlog.py:18] train/00293{31.46s}
I1128 07:13:50.411327 139639960884992 hlog.py:32] train/00294/loss 0.3936
I1128 07:13:50.412347 139639960884992 hlog.py:32] train/00294/eval/train/inp what is the highest point in the state with capital WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( WUG0 , _ ) ) ) ) )
I1128 07:13:50.412497 139639960884992 hlog.py:32] train/00294/eval/train/out what is the highest point in the state with the capital WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( WUG0 , _ ) ) ) ) )
I1128 07:13:50.573079 139639960884992 hlog.py:32] train/00294/eval/train/??? what is the population density in the state with capital WUG0 ( A , ( _density ( B , A ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( WUG0 , _ ) ) ) )
I1128 07:13:50.573338 139639960884992 hlog.py:18] train/00294{31.05s}
I1128 07:14:20.914602 139639960884992 hlog.py:32] train/00295/loss 0.4016
I1128 07:14:20.915512 139639960884992 hlog.py:32] train/00295/eval/train/inp how many rivers are in WUG1 ( A , WUG0 B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:14:20.915653 139639960884992 hlog.py:32] train/00295/eval/train/out how many states border WUG1 and border new mexico ( A , WUG0 B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( WUG1 ) ) , _next_to ( B , D ) , _const ( D , _stateid ( new mexico ) ) ) , A ) )
I1128 07:14:21.024329 139639960884992 hlog.py:32] train/00295/eval/train/??? how many rivers does WUG1 have ( A , WUG0 B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( WUG1 ) ) ) , A ) )
I1128 07:14:21.024554 139639960884992 hlog.py:18] train/00295{30.45s}
I1128 07:14:51.078190 139639960884992 hlog.py:32] train/00296/loss 0.4144
I1128 07:14:51.079419 139639960884992 hlog.py:32] train/00296/eval/train/inp what states does the WUG1 river run through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:14:51.079590 139639960884992 hlog.py:32] train/00296/eval/train/out which states does the WUG1 river pass through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _traverse ( B , A ) ) )
I1128 07:14:51.192752 139639960884992 hlog.py:32] train/00296/eval/train/??? what states does the WUG1 run through ( A , ( _state ( A ) , _const ( B WUG0 ( WUG1 ) ) , _traverse ( B , A ) ) )
I1128 07:14:51.193017 139639960884992 hlog.py:18] train/00296{30.17s}
I1128 07:15:22.814181 139639960884992 hlog.py:32] train/00297/loss 0.4009
I1128 07:15:22.815094 139639960884992 hlog.py:32] train/00297/eval/train/inp what is the highest point in the WUG0 ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1128 07:15:22.815247 139639960884992 hlog.py:32] train/00297/eval/train/out what is the smallest city of the smallest state in the WUG0 ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1128 07:15:22.911678 139639960884992 hlog.py:32] train/00297/eval/train/??? how many states are in the WUG0 ( A , ( _state ( A ) , _loc ( A , B ) , _largest ( B , _countryid ( B ) ) ) )
I1128 07:15:22.911887 139639960884992 hlog.py:18] train/00297{31.72s}
I1128 07:15:51.842568 139639960884992 hlog.py:32] train/00298/loss 0.4023
I1128 07:15:51.843557 139639960884992 hlog.py:32] train/00298/eval/train/inp through which states does the mississippi WUG0 ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1128 07:15:51.843686 139639960884992 hlog.py:32] train/00298/eval/train/out what states does the missouri river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1128 07:15:51.960977 139639960884992 hlog.py:32] train/00298/eval/train/??? which states does the colorado river WUG0 through ( A , ( _state ( A ) , _const ( B , _riverid ( colorado ) ) , _traverse ( B , A ) ) )
I1128 07:15:51.961611 139639960884992 hlog.py:18] train/00298{29.05s}
I1128 07:16:23.080844 139639960884992 hlog.py:32] train/00299/loss 0.4020
I1128 07:16:23.081784 139639960884992 hlog.py:32] train/00299/eval/train/inp what state has WUG0 population density ( A , WUG1 ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1128 07:16:23.081910 139639960884992 hlog.py:32] train/00299/eval/train/out what is WUG0 populous state ( A , WUG1 ( B , ( _state ( A ) , _population ( A , B ) ) ) )
I1128 07:16:23.198048 139639960884992 hlog.py:32] train/00299/eval/train/??? what is the area of the state with WUG0 population density ( A , ( _area ( B , A ) , WUG1 ( C , ( _state ( B ) , _density ( B , C ) ) ) ) )
I1128 07:16:23.294775 139639960884992 hlog.py:18] train/00299{31.33s}
I1128 07:16:23.298365 139639960884992 hlog.py:18] train{9287.78s}
