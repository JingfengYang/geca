I1202 22:53:07.820213 140353657689856 hlog.py:24] # --noTEST
I1202 22:53:07.820569 140353657689856 hlog.py:24] # --seed=3
I1202 22:53:07.821506 140353657689856 hlog.py:24] # --dataset=semparse
I1202 22:53:07.821587 140353657689856 hlog.py:24] # --model_dir=model
I1202 22:53:07.821663 140353657689856 hlog.py:24] # --n_checkpoint=10
I1202 22:53:07.821736 140353657689856 hlog.py:24] # --nologtostderr
I1202 22:53:07.821809 140353657689856 hlog.py:24] # --noalsologtostderr
I1202 22:53:07.821881 140353657689856 hlog.py:24] # --log_dir=
I1202 22:53:07.821953 140353657689856 hlog.py:24] # --verbosity=0
I1202 22:53:07.822025 140353657689856 hlog.py:24] # --verbosity=0
I1202 22:53:07.822095 140353657689856 hlog.py:24] # --stderrthreshold=fatal
I1202 22:53:07.822165 140353657689856 hlog.py:24] # --showprefixforinfo
I1202 22:53:07.822235 140353657689856 hlog.py:24] # --nodedup
I1202 22:53:07.822304 140353657689856 hlog.py:24] # --nobuild_comp_table
I1202 22:53:07.822374 140353657689856 hlog.py:24] # --semparse_split=query
I1202 22:53:07.822444 140353657689856 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1202 22:53:07.822515 140353657689856 hlog.py:24] # --semparse_mrl=logic
I1202 22:53:07.822584 140353657689856 hlog.py:24] # --val_fold=8
I1202 22:53:07.822654 140353657689856 hlog.py:24] # --test_fold=9
I1202 22:53:07.822723 140353657689856 hlog.py:24] # --n_emb=64
I1202 22:53:07.822793 140353657689856 hlog.py:24] # --n_enc=512
I1202 22:53:07.822863 140353657689856 hlog.py:24] # --dropout=0.5
I1202 22:53:07.822932 140353657689856 hlog.py:24] # --copy_sup
I1202 22:53:07.823001 140353657689856 hlog.py:24] # --n_epochs=150
I1202 22:53:07.823071 140353657689856 hlog.py:24] # --n_epoch_batches=32
I1202 22:53:07.823141 140353657689856 hlog.py:24] # --n_batch=64
I1202 22:53:07.823210 140353657689856 hlog.py:24] # --lr=0.001
I1202 22:53:07.823280 140353657689856 hlog.py:24] # --clip=1.0
I1202 22:53:07.823349 140353657689856 hlog.py:24] # --sched_factor=0.5
I1202 22:53:07.823449 140353657689856 hlog.py:24] # --norun_with_pdb
I1202 22:53:07.823523 140353657689856 hlog.py:24] # --nopdb_post_mortem
I1202 22:53:07.823596 140353657689856 hlog.py:24] # --norun_with_profiling
I1202 22:53:07.823667 140353657689856 hlog.py:24] # --use_cprofile_for_profiling
I1202 22:53:07.823751 140353657689856 hlog.py:24] # --noonly_check_args
I1202 22:53:07.823821 140353657689856 hlog.py:24] # --aug_ratio=0.0
I1202 22:53:07.823890 140353657689856 hlog.py:24] # --noinvert
I1202 22:53:07.823960 140353657689856 hlog.py:24] # --nohelp
I1202 22:53:07.824030 140353657689856 hlog.py:24] # --nohelp
I1202 22:53:07.824099 140353657689856 hlog.py:24] # --nohelpshort
I1202 22:53:07.824168 140353657689856 hlog.py:24] # --nohelpfull
I1202 22:53:07.824238 140353657689856 hlog.py:24] # --nohelpxml
I1202 22:53:07.824307 140353657689856 hlog.py:24] # 
I1202 22:53:07.847486 140353657689856 hlog.py:32] train 543
I1202 22:53:07.847594 140353657689856 hlog.py:32] aug 0
I1202 22:53:23.847456 140353657689856 hlog.py:32] train/00000/loss 3.4540
I1202 22:53:31.949008 140353657689856 hlog.py:32] train/00000/eval_train/acc 0.0000
I1202 22:53:33.244469 140353657689856 hlog.py:32] train/00000/eval_val/acc 0.0000
I1202 22:53:33.245085 140353657689856 hlog.py:18] train/00000{21.63s}
I1202 22:53:46.270841 140353657689856 hlog.py:32] train/00001/loss 1.2226
I1202 22:53:55.882315 140353657689856 hlog.py:32] train/00001/eval_train/acc 0.0000
I1202 22:53:57.490979 140353657689856 hlog.py:32] train/00001/eval_val/acc 0.0000
I1202 22:53:57.491504 140353657689856 hlog.py:18] train/00001{24.25s}
I1202 22:54:10.093023 140353657689856 hlog.py:32] train/00002/loss 0.7483
I1202 22:54:16.705510 140353657689856 hlog.py:32] train/00002/eval_train/acc 0.0010
I1202 22:54:17.642358 140353657689856 hlog.py:32] train/00002/eval_val/acc 0.0000
I1202 22:54:17.642847 140353657689856 hlog.py:18] train/00002{20.15s}
I1202 22:54:29.472789 140353657689856 hlog.py:32] train/00003/loss 0.5667
I1202 22:54:34.317602 140353657689856 hlog.py:32] train/00003/eval_train/acc 0.0490
I1202 22:54:35.380525 140353657689856 hlog.py:32] train/00003/eval_val/acc 0.0000
I1202 22:54:35.381133 140353657689856 hlog.py:18] train/00003{17.74s}
I1202 22:54:48.310590 140353657689856 hlog.py:32] train/00004/loss 0.4727
I1202 22:54:55.884913 140353657689856 hlog.py:32] train/00004/eval_train/acc 0.1440
I1202 22:54:56.911568 140353657689856 hlog.py:32] train/00004/eval_val/acc 0.0000
I1202 22:54:56.912332 140353657689856 hlog.py:18] train/00004{21.53s}
I1202 22:55:09.864062 140353657689856 hlog.py:32] train/00005/loss 0.4162
I1202 22:55:16.169055 140353657689856 hlog.py:32] train/00005/eval_train/acc 0.2250
I1202 22:55:17.252932 140353657689856 hlog.py:32] train/00005/eval_val/acc 0.0000
I1202 22:55:17.253439 140353657689856 hlog.py:18] train/00005{20.34s}
I1202 22:55:29.766328 140353657689856 hlog.py:32] train/00006/loss 0.3139
I1202 22:55:35.244573 140353657689856 hlog.py:32] train/00006/eval_train/acc 0.2940
I1202 22:55:36.305202 140353657689856 hlog.py:32] train/00006/eval_val/acc 0.0135
I1202 22:55:36.305707 140353657689856 hlog.py:18] train/00006{19.05s}
I1202 22:55:47.784111 140353657689856 hlog.py:32] train/00007/loss 0.2895
I1202 22:55:51.395137 140353657689856 hlog.py:32] train/00007/eval_train/acc 0.3480
I1202 22:55:52.178343 140353657689856 hlog.py:32] train/00007/eval_val/acc 0.0203
I1202 22:55:52.178860 140353657689856 hlog.py:18] train/00007{15.87s}
I1202 22:56:03.179302 140353657689856 hlog.py:32] train/00008/loss 0.2376
I1202 22:56:07.271011 140353657689856 hlog.py:32] train/00008/eval_train/acc 0.4600
I1202 22:56:07.942801 140353657689856 hlog.py:32] train/00008/eval_val/acc 0.0405
I1202 22:56:07.943313 140353657689856 hlog.py:18] train/00008{15.76s}
I1202 22:56:19.547618 140353657689856 hlog.py:32] train/00009/loss 0.2292
I1202 22:56:24.456417 140353657689856 hlog.py:32] train/00009/eval_train/acc 0.4360
I1202 22:56:25.098447 140353657689856 hlog.py:32] train/00009/eval_val/acc 0.0405
I1202 22:56:25.216177 140353657689856 hlog.py:18] train/00009{17.27s}
I1202 22:56:37.106793 140353657689856 hlog.py:32] train/00010/loss 0.1835
I1202 22:56:41.413087 140353657689856 hlog.py:32] train/00010/eval_train/acc 0.5290
I1202 22:56:42.274410 140353657689856 hlog.py:32] train/00010/eval_val/acc 0.0878
I1202 22:56:42.275077 140353657689856 hlog.py:18] train/00010{17.06s}
I1202 22:56:54.225621 140353657689856 hlog.py:32] train/00011/loss 0.1623
I1202 22:56:58.655401 140353657689856 hlog.py:32] train/00011/eval_train/acc 0.6270
I1202 22:56:59.252609 140353657689856 hlog.py:32] train/00011/eval_val/acc 0.2568
I1202 22:56:59.253272 140353657689856 hlog.py:18] train/00011{16.98s}
I1202 22:57:12.052074 140353657689856 hlog.py:32] train/00012/loss 0.1498
I1202 22:57:16.277435 140353657689856 hlog.py:32] train/00012/eval_train/acc 0.6380
I1202 22:57:16.833650 140353657689856 hlog.py:32] train/00012/eval_val/acc 0.1959
I1202 22:57:16.834145 140353657689856 hlog.py:18] train/00012{17.58s}
I1202 22:57:27.939009 140353657689856 hlog.py:32] train/00013/loss 0.1325
I1202 22:57:32.760027 140353657689856 hlog.py:32] train/00013/eval_train/acc 0.6820
I1202 22:57:33.397476 140353657689856 hlog.py:32] train/00013/eval_val/acc 0.2432
I1202 22:57:33.398011 140353657689856 hlog.py:18] train/00013{16.56s}
I1202 22:57:45.206084 140353657689856 hlog.py:32] train/00014/loss 0.1337
I1202 22:57:48.979204 140353657689856 hlog.py:32] train/00014/eval_train/acc 0.7150
I1202 22:57:49.641916 140353657689856 hlog.py:32] train/00014/eval_val/acc 0.3176
I1202 22:57:49.642361 140353657689856 hlog.py:18] train/00014{16.24s}
I1202 22:58:00.917480 140353657689856 hlog.py:32] train/00015/loss 0.1126
I1202 22:58:04.745647 140353657689856 hlog.py:32] train/00015/eval_train/acc 0.7190
I1202 22:58:05.400354 140353657689856 hlog.py:32] train/00015/eval_val/acc 0.2905
I1202 22:58:05.400854 140353657689856 hlog.py:18] train/00015{15.76s}
I1202 22:58:17.176906 140353657689856 hlog.py:32] train/00016/loss 0.1168
I1202 22:58:21.382053 140353657689856 hlog.py:32] train/00016/eval_train/acc 0.7640
I1202 22:58:21.948200 140353657689856 hlog.py:32] train/00016/eval_val/acc 0.3243
I1202 22:58:21.948678 140353657689856 hlog.py:18] train/00016{16.55s}
I1202 22:58:34.153248 140353657689856 hlog.py:32] train/00017/loss 0.1100
I1202 22:58:39.380519 140353657689856 hlog.py:32] train/00017/eval_train/acc 0.7740
I1202 22:58:40.230650 140353657689856 hlog.py:32] train/00017/eval_val/acc 0.2770
I1202 22:58:40.231110 140353657689856 hlog.py:18] train/00017{18.28s}
I1202 22:58:52.056118 140353657689856 hlog.py:32] train/00018/loss 0.0989
I1202 22:58:55.912421 140353657689856 hlog.py:32] train/00018/eval_train/acc 0.8120
I1202 22:58:56.476170 140353657689856 hlog.py:32] train/00018/eval_val/acc 0.4324
I1202 22:58:56.476676 140353657689856 hlog.py:18] train/00018{16.25s}
I1202 22:59:08.812792 140353657689856 hlog.py:32] train/00019/loss 0.0790
I1202 22:59:13.178243 140353657689856 hlog.py:32] train/00019/eval_train/acc 0.8090
I1202 22:59:13.775335 140353657689856 hlog.py:32] train/00019/eval_val/acc 0.4324
I1202 22:59:13.806133 140353657689856 hlog.py:18] train/00019{17.33s}
I1202 22:59:25.560453 140353657689856 hlog.py:32] train/00020/loss 0.0773
I1202 22:59:29.295615 140353657689856 hlog.py:32] train/00020/eval_train/acc 0.8250
I1202 22:59:29.902030 140353657689856 hlog.py:32] train/00020/eval_val/acc 0.3311
I1202 22:59:29.902535 140353657689856 hlog.py:18] train/00020{16.10s}
I1202 22:59:42.430155 140353657689856 hlog.py:32] train/00021/loss 0.0824
I1202 22:59:48.045776 140353657689856 hlog.py:32] train/00021/eval_train/acc 0.7960
I1202 22:59:48.701672 140353657689856 hlog.py:32] train/00021/eval_val/acc 0.3986
I1202 22:59:48.702296 140353657689856 hlog.py:18] train/00021{18.80s}
I1202 23:00:00.590578 140353657689856 hlog.py:32] train/00022/loss 0.0719
I1202 23:00:04.407109 140353657689856 hlog.py:32] train/00022/eval_train/acc 0.8280
I1202 23:00:05.006595 140353657689856 hlog.py:32] train/00022/eval_val/acc 0.4257
I1202 23:00:05.007263 140353657689856 hlog.py:18] train/00022{16.30s}
I1202 23:00:16.316574 140353657689856 hlog.py:32] train/00023/loss 0.0626
I1202 23:00:20.417499 140353657689856 hlog.py:32] train/00023/eval_train/acc 0.8710
I1202 23:00:20.981390 140353657689856 hlog.py:32] train/00023/eval_val/acc 0.5068
I1202 23:00:20.982055 140353657689856 hlog.py:18] train/00023{15.97s}
I1202 23:00:33.083935 140353657689856 hlog.py:32] train/00024/loss 0.0510
I1202 23:00:36.998944 140353657689856 hlog.py:32] train/00024/eval_train/acc 0.9200
I1202 23:00:37.608747 140353657689856 hlog.py:32] train/00024/eval_val/acc 0.5068
I1202 23:00:37.609231 140353657689856 hlog.py:18] train/00024{16.63s}
I1202 23:00:48.988085 140353657689856 hlog.py:32] train/00025/loss 0.0659
I1202 23:00:52.777912 140353657689856 hlog.py:32] train/00025/eval_train/acc 0.8840
I1202 23:00:53.346617 140353657689856 hlog.py:32] train/00025/eval_val/acc 0.5000
I1202 23:00:53.347072 140353657689856 hlog.py:18] train/00025{15.74s}
I1202 23:01:05.409398 140353657689856 hlog.py:32] train/00026/loss 0.0703
I1202 23:01:09.428002 140353657689856 hlog.py:32] train/00026/eval_train/acc 0.8820
I1202 23:01:10.021317 140353657689856 hlog.py:32] train/00026/eval_val/acc 0.4392
I1202 23:01:10.021849 140353657689856 hlog.py:18] train/00026{16.67s}
I1202 23:01:21.912419 140353657689856 hlog.py:32] train/00027/loss 0.0576
I1202 23:01:25.591841 140353657689856 hlog.py:32] train/00027/eval_train/acc 0.8970
I1202 23:01:26.193243 140353657689856 hlog.py:32] train/00027/eval_val/acc 0.3986
I1202 23:01:26.193744 140353657689856 hlog.py:18] train/00027{16.17s}
I1202 23:01:37.760191 140353657689856 hlog.py:32] train/00028/loss 0.0632
I1202 23:01:41.691690 140353657689856 hlog.py:32] train/00028/eval_train/acc 0.9120
I1202 23:01:42.252083 140353657689856 hlog.py:32] train/00028/eval_val/acc 0.4527
I1202 23:01:42.252584 140353657689856 hlog.py:18] train/00028{16.06s}
I1202 23:01:54.533200 140353657689856 hlog.py:32] train/00029/loss 0.0458
I1202 23:01:58.406900 140353657689856 hlog.py:32] train/00029/eval_train/acc 0.9330
I1202 23:01:58.987650 140353657689856 hlog.py:32] train/00029/eval_val/acc 0.4662
I1202 23:01:59.020609 140353657689856 hlog.py:18] train/00029{16.77s}
I1202 23:02:11.212330 140353657689856 hlog.py:32] train/00030/loss 0.0565
I1202 23:02:15.057411 140353657689856 hlog.py:32] train/00030/eval_train/acc 0.9120
I1202 23:02:15.625902 140353657689856 hlog.py:32] train/00030/eval_val/acc 0.4865
I1202 23:02:15.626391 140353657689856 hlog.py:18] train/00030{16.61s}
I1202 23:02:27.428044 140353657689856 hlog.py:32] train/00031/loss 0.0500
I1202 23:02:31.296789 140353657689856 hlog.py:32] train/00031/eval_train/acc 0.9180
I1202 23:02:31.919316 140353657689856 hlog.py:32] train/00031/eval_val/acc 0.4595
I1202 23:02:31.919834 140353657689856 hlog.py:18] train/00031{16.29s}
I1202 23:02:43.618383 140353657689856 hlog.py:32] train/00032/loss 0.0529
I1202 23:02:47.454162 140353657689856 hlog.py:32] train/00032/eval_train/acc 0.9240
I1202 23:02:48.026135 140353657689856 hlog.py:32] train/00032/eval_val/acc 0.4932
I1202 23:02:48.026655 140353657689856 hlog.py:18] train/00032{16.11s}
I1202 23:03:00.105837 140353657689856 hlog.py:32] train/00033/loss 0.0378
I1202 23:03:03.982677 140353657689856 hlog.py:32] train/00033/eval_train/acc 0.9360
I1202 23:03:04.575119 140353657689856 hlog.py:32] train/00033/eval_val/acc 0.4662
I1202 23:03:04.575674 140353657689856 hlog.py:18] train/00033{16.55s}
I1202 23:03:16.196290 140353657689856 hlog.py:32] train/00034/loss 0.0316
I1202 23:03:20.050832 140353657689856 hlog.py:32] train/00034/eval_train/acc 0.9460
I1202 23:03:20.617629 140353657689856 hlog.py:32] train/00034/eval_val/acc 0.5270
I1202 23:03:20.618203 140353657689856 hlog.py:18] train/00034{16.04s}
I1202 23:03:32.402924 140353657689856 hlog.py:32] train/00035/loss 0.0332
I1202 23:03:36.248334 140353657689856 hlog.py:32] train/00035/eval_train/acc 0.9620
I1202 23:03:36.809511 140353657689856 hlog.py:32] train/00035/eval_val/acc 0.4797
I1202 23:03:36.810003 140353657689856 hlog.py:18] train/00035{16.19s}
I1202 23:03:48.038389 140353657689856 hlog.py:32] train/00036/loss 0.0310
I1202 23:03:51.803205 140353657689856 hlog.py:32] train/00036/eval_train/acc 0.9530
I1202 23:03:52.401483 140353657689856 hlog.py:32] train/00036/eval_val/acc 0.4932
I1202 23:03:52.401965 140353657689856 hlog.py:18] train/00036{15.59s}
I1202 23:04:04.434365 140353657689856 hlog.py:32] train/00037/loss 0.0374
I1202 23:04:08.471662 140353657689856 hlog.py:32] train/00037/eval_train/acc 0.9540
I1202 23:04:09.048096 140353657689856 hlog.py:32] train/00037/eval_val/acc 0.5473
I1202 23:04:09.048629 140353657689856 hlog.py:18] train/00037{16.65s}
I1202 23:04:21.375519 140353657689856 hlog.py:32] train/00038/loss 0.0293
I1202 23:04:25.992446 140353657689856 hlog.py:32] train/00038/eval_train/acc 0.9610
I1202 23:04:26.589794 140353657689856 hlog.py:32] train/00038/eval_val/acc 0.5135
I1202 23:04:26.590262 140353657689856 hlog.py:18] train/00038{17.54s}
I1202 23:04:38.627379 140353657689856 hlog.py:32] train/00039/loss 0.0316
I1202 23:04:42.548368 140353657689856 hlog.py:32] train/00039/eval_train/acc 0.9690
I1202 23:04:43.114038 140353657689856 hlog.py:32] train/00039/eval_val/acc 0.5405
I1202 23:04:43.148275 140353657689856 hlog.py:18] train/00039{16.56s}
I1202 23:04:55.283617 140353657689856 hlog.py:32] train/00040/loss 0.0385
I1202 23:04:59.976203 140353657689856 hlog.py:32] train/00040/eval_train/acc 0.9690
I1202 23:05:00.552870 140353657689856 hlog.py:32] train/00040/eval_val/acc 0.4932
I1202 23:05:00.553387 140353657689856 hlog.py:18] train/00040{17.40s}
I1202 23:05:11.945901 140353657689856 hlog.py:32] train/00041/loss 0.0372
I1202 23:05:15.801289 140353657689856 hlog.py:32] train/00041/eval_train/acc 0.9440
I1202 23:05:16.385226 140353657689856 hlog.py:32] train/00041/eval_val/acc 0.3919
I1202 23:05:16.385721 140353657689856 hlog.py:18] train/00041{15.83s}
I1202 23:05:28.585802 140353657689856 hlog.py:32] train/00042/loss 0.0454
I1202 23:05:32.446398 140353657689856 hlog.py:32] train/00042/eval_train/acc 0.9670
I1202 23:05:33.043607 140353657689856 hlog.py:32] train/00042/eval_val/acc 0.4932
I1202 23:05:33.044131 140353657689856 hlog.py:18] train/00042{16.66s}
I1202 23:05:45.070854 140353657689856 hlog.py:32] train/00043/loss 0.0350
I1202 23:05:49.671262 140353657689856 hlog.py:32] train/00043/eval_train/acc 0.9530
I1202 23:05:50.272262 140353657689856 hlog.py:32] train/00043/eval_val/acc 0.5270
I1202 23:05:50.272806 140353657689856 hlog.py:18] train/00043{17.23s}
I1202 23:06:02.561869 140353657689856 hlog.py:32] train/00044/loss 0.0401
I1202 23:06:06.241689 140353657689856 hlog.py:32] train/00044/eval_train/acc 0.9520
I1202 23:06:06.800124 140353657689856 hlog.py:32] train/00044/eval_val/acc 0.5135
I1202 23:06:06.800643 140353657689856 hlog.py:18] train/00044{16.53s}
I1202 23:06:18.271468 140353657689856 hlog.py:32] train/00045/loss 0.0300
I1202 23:06:22.285406 140353657689856 hlog.py:32] train/00045/eval_train/acc 0.9710
I1202 23:06:22.880190 140353657689856 hlog.py:32] train/00045/eval_val/acc 0.4865
I1202 23:06:22.881042 140353657689856 hlog.py:18] train/00045{16.08s}
I1202 23:06:35.248152 140353657689856 hlog.py:32] train/00046/loss 0.0371
I1202 23:06:38.978645 140353657689856 hlog.py:32] train/00046/eval_train/acc 0.9690
I1202 23:06:39.566018 140353657689856 hlog.py:32] train/00046/eval_val/acc 0.5405
I1202 23:06:39.566470 140353657689856 hlog.py:18] train/00046{16.69s}
I1202 23:06:51.855892 140353657689856 hlog.py:32] train/00047/loss 0.0253
I1202 23:06:55.839317 140353657689856 hlog.py:32] train/00047/eval_train/acc 0.9770
I1202 23:06:56.478642 140353657689856 hlog.py:32] train/00047/eval_val/acc 0.5068
I1202 23:06:56.479309 140353657689856 hlog.py:18] train/00047{16.91s}
I1202 23:07:08.059372 140353657689856 hlog.py:32] train/00048/loss 0.0207
I1202 23:07:12.241448 140353657689856 hlog.py:32] train/00048/eval_train/acc 0.9630
I1202 23:07:12.807177 140353657689856 hlog.py:32] train/00048/eval_val/acc 0.5473
I1202 23:07:12.807802 140353657689856 hlog.py:18] train/00048{16.33s}
I1202 23:07:24.240925 140353657689856 hlog.py:32] train/00049/loss 0.0192
I1202 23:07:28.063730 140353657689856 hlog.py:32] train/00049/eval_train/acc 0.9800
I1202 23:07:28.679848 140353657689856 hlog.py:32] train/00049/eval_val/acc 0.5068
I1202 23:07:28.710670 140353657689856 hlog.py:18] train/00049{15.90s}
I1202 23:07:41.357491 140353657689856 hlog.py:32] train/00050/loss 0.0167
I1202 23:07:45.558187 140353657689856 hlog.py:32] train/00050/eval_train/acc 0.9840
I1202 23:07:46.138164 140353657689856 hlog.py:32] train/00050/eval_val/acc 0.5203
I1202 23:07:46.138646 140353657689856 hlog.py:18] train/00050{17.43s}
I1202 23:07:57.992809 140353657689856 hlog.py:32] train/00051/loss 0.0150
I1202 23:08:02.264347 140353657689856 hlog.py:32] train/00051/eval_train/acc 0.9980
I1202 23:08:02.828402 140353657689856 hlog.py:32] train/00051/eval_val/acc 0.5473
I1202 23:08:02.828920 140353657689856 hlog.py:18] train/00051{16.69s}
I1202 23:08:14.369542 140353657689856 hlog.py:32] train/00052/loss 0.0134
I1202 23:08:18.302109 140353657689856 hlog.py:32] train/00052/eval_train/acc 0.9930
I1202 23:08:18.889887 140353657689856 hlog.py:32] train/00052/eval_val/acc 0.5405
I1202 23:08:18.890391 140353657689856 hlog.py:18] train/00052{16.06s}
I1202 23:08:30.072427 140353657689856 hlog.py:32] train/00053/loss 0.0192
I1202 23:08:34.206847 140353657689856 hlog.py:32] train/00053/eval_train/acc 0.9950
I1202 23:08:34.800496 140353657689856 hlog.py:32] train/00053/eval_val/acc 0.5338
I1202 23:08:34.800991 140353657689856 hlog.py:18] train/00053{15.91s}
I1202 23:08:46.590234 140353657689856 hlog.py:32] train/00054/loss 0.0165
I1202 23:08:50.263368 140353657689856 hlog.py:32] train/00054/eval_train/acc 1.0000
I1202 23:08:50.818806 140353657689856 hlog.py:32] train/00054/eval_val/acc 0.5405
I1202 23:08:50.819504 140353657689856 hlog.py:18] train/00054{16.02s}
I1202 23:09:02.264539 140353657689856 hlog.py:32] train/00055/loss 0.0116
I1202 23:09:06.043429 140353657689856 hlog.py:32] train/00055/eval_train/acc 0.9920
I1202 23:09:06.654613 140353657689856 hlog.py:32] train/00055/eval_val/acc 0.5473
I1202 23:09:06.655088 140353657689856 hlog.py:18] train/00055{15.84s}
I1202 23:09:18.353634 140353657689856 hlog.py:32] train/00056/loss 0.0099
I1202 23:09:22.209688 140353657689856 hlog.py:32] train/00056/eval_train/acc 0.9940
I1202 23:09:22.807200 140353657689856 hlog.py:32] train/00056/eval_val/acc 0.5608
I1202 23:09:22.807937 140353657689856 hlog.py:18] train/00056{16.15s}
I1202 23:09:35.017617 140353657689856 hlog.py:32] train/00057/loss 0.0102
I1202 23:09:39.033481 140353657689856 hlog.py:32] train/00057/eval_train/acc 1.0000
I1202 23:09:39.587431 140353657689856 hlog.py:32] train/00057/eval_val/acc 0.5203
I1202 23:09:39.587948 140353657689856 hlog.py:18] train/00057{16.78s}
I1202 23:09:51.617490 140353657689856 hlog.py:32] train/00058/loss 0.0092
I1202 23:09:55.442387 140353657689856 hlog.py:32] train/00058/eval_train/acc 0.9970
I1202 23:09:56.053976 140353657689856 hlog.py:32] train/00058/eval_val/acc 0.5338
I1202 23:09:56.054560 140353657689856 hlog.py:18] train/00058{16.47s}
I1202 23:10:08.736431 140353657689856 hlog.py:32] train/00059/loss 0.0094
I1202 23:10:12.704529 140353657689856 hlog.py:32] train/00059/eval_train/acc 0.9950
I1202 23:10:13.262843 140353657689856 hlog.py:32] train/00059/eval_val/acc 0.5473
I1202 23:10:13.293282 140353657689856 hlog.py:18] train/00059{17.24s}
I1202 23:10:25.826501 140353657689856 hlog.py:32] train/00060/loss 0.0112
I1202 23:10:29.898210 140353657689856 hlog.py:32] train/00060/eval_train/acc 0.9950
I1202 23:10:30.453622 140353657689856 hlog.py:32] train/00060/eval_val/acc 0.5608
I1202 23:10:30.454180 140353657689856 hlog.py:18] train/00060{17.16s}
I1202 23:10:42.396891 140353657689856 hlog.py:32] train/00061/loss 0.0084
I1202 23:10:46.364839 140353657689856 hlog.py:32] train/00061/eval_train/acc 0.9960
I1202 23:10:46.947715 140353657689856 hlog.py:32] train/00061/eval_val/acc 0.5473
I1202 23:10:46.948227 140353657689856 hlog.py:18] train/00061{16.49s}
I1202 23:10:58.404117 140353657689856 hlog.py:32] train/00062/loss 0.0072
I1202 23:11:02.253681 140353657689856 hlog.py:32] train/00062/eval_train/acc 0.9930
I1202 23:11:02.854349 140353657689856 hlog.py:32] train/00062/eval_val/acc 0.5405
I1202 23:11:02.855014 140353657689856 hlog.py:18] train/00062{15.91s}
I1202 23:11:14.839254 140353657689856 hlog.py:32] train/00063/loss 0.0081
I1202 23:11:18.864456 140353657689856 hlog.py:32] train/00063/eval_train/acc 0.9950
I1202 23:11:19.411421 140353657689856 hlog.py:32] train/00063/eval_val/acc 0.5541
I1202 23:11:19.411930 140353657689856 hlog.py:18] train/00063{16.56s}
I1202 23:11:31.109863 140353657689856 hlog.py:32] train/00064/loss 0.0083
I1202 23:11:35.185146 140353657689856 hlog.py:32] train/00064/eval_train/acc 0.9970
I1202 23:11:35.769808 140353657689856 hlog.py:32] train/00064/eval_val/acc 0.5541
I1202 23:11:35.770261 140353657689856 hlog.py:18] train/00064{16.36s}
I1202 23:11:46.718570 140353657689856 hlog.py:32] train/00065/loss 0.0071
I1202 23:11:50.550464 140353657689856 hlog.py:32] train/00065/eval_train/acc 0.9990
I1202 23:11:51.115685 140353657689856 hlog.py:32] train/00065/eval_val/acc 0.5068
I1202 23:11:51.116242 140353657689856 hlog.py:18] train/00065{15.35s}
I1202 23:12:03.881862 140353657689856 hlog.py:32] train/00066/loss 0.0076
I1202 23:12:07.858950 140353657689856 hlog.py:32] train/00066/eval_train/acc 0.9960
I1202 23:12:08.416240 140353657689856 hlog.py:32] train/00066/eval_val/acc 0.5473
I1202 23:12:08.416742 140353657689856 hlog.py:18] train/00066{17.30s}
I1202 23:12:21.552299 140353657689856 hlog.py:32] train/00067/loss 0.0099
I1202 23:12:25.548904 140353657689856 hlog.py:32] train/00067/eval_train/acc 0.9880
I1202 23:12:26.148066 140353657689856 hlog.py:32] train/00067/eval_val/acc 0.4459
I1202 23:12:26.148616 140353657689856 hlog.py:18] train/00067{17.73s}
I1202 23:12:38.790848 140353657689856 hlog.py:32] train/00068/loss 0.0084
I1202 23:12:42.899520 140353657689856 hlog.py:32] train/00068/eval_train/acc 0.9830
I1202 23:12:43.455657 140353657689856 hlog.py:32] train/00068/eval_val/acc 0.5000
I1202 23:12:43.456155 140353657689856 hlog.py:18] train/00068{17.31s}
I1202 23:12:56.232533 140353657689856 hlog.py:32] train/00069/loss 0.0083
I1202 23:13:00.160924 140353657689856 hlog.py:32] train/00069/eval_train/acc 0.9960
I1202 23:13:00.715644 140353657689856 hlog.py:32] train/00069/eval_val/acc 0.4865
I1202 23:13:00.745290 140353657689856 hlog.py:18] train/00069{17.29s}
I1202 23:13:13.485410 140353657689856 hlog.py:32] train/00070/loss 0.0068
I1202 23:13:17.400394 140353657689856 hlog.py:32] train/00070/eval_train/acc 1.0000
I1202 23:13:17.968661 140353657689856 hlog.py:32] train/00070/eval_val/acc 0.5000
I1202 23:13:17.969148 140353657689856 hlog.py:18] train/00070{17.22s}
I1202 23:13:30.080206 140353657689856 hlog.py:32] train/00071/loss 0.0070
I1202 23:13:33.931198 140353657689856 hlog.py:32] train/00071/eval_train/acc 0.9990
I1202 23:13:34.507986 140353657689856 hlog.py:32] train/00071/eval_val/acc 0.5203
I1202 23:13:34.508419 140353657689856 hlog.py:18] train/00071{16.54s}
I1202 23:13:46.427330 140353657689856 hlog.py:32] train/00072/loss 0.0057
I1202 23:13:50.541616 140353657689856 hlog.py:32] train/00072/eval_train/acc 0.9950
I1202 23:13:51.093801 140353657689856 hlog.py:32] train/00072/eval_val/acc 0.5405
I1202 23:13:51.094329 140353657689856 hlog.py:18] train/00072{16.59s}
I1202 23:14:03.350396 140353657689856 hlog.py:32] train/00073/loss 0.0052
I1202 23:14:07.275715 140353657689856 hlog.py:32] train/00073/eval_train/acc 0.9980
I1202 23:14:07.824033 140353657689856 hlog.py:32] train/00073/eval_val/acc 0.5608
I1202 23:14:07.824513 140353657689856 hlog.py:18] train/00073{16.73s}
I1202 23:14:20.883025 140353657689856 hlog.py:32] train/00074/loss 0.0052
I1202 23:14:25.059689 140353657689856 hlog.py:32] train/00074/eval_train/acc 0.9940
I1202 23:14:25.600697 140353657689856 hlog.py:32] train/00074/eval_val/acc 0.5473
I1202 23:14:25.601200 140353657689856 hlog.py:18] train/00074{17.78s}
I1202 23:14:37.035709 140353657689856 hlog.py:32] train/00075/loss 0.0048
I1202 23:14:41.039139 140353657689856 hlog.py:32] train/00075/eval_train/acc 0.9980
I1202 23:14:41.585533 140353657689856 hlog.py:32] train/00075/eval_val/acc 0.5473
I1202 23:14:41.586022 140353657689856 hlog.py:18] train/00075{15.98s}
I1202 23:14:53.108983 140353657689856 hlog.py:32] train/00076/loss 0.0051
I1202 23:14:57.299955 140353657689856 hlog.py:32] train/00076/eval_train/acc 0.9970
I1202 23:14:57.846705 140353657689856 hlog.py:32] train/00076/eval_val/acc 0.5608
I1202 23:14:57.847199 140353657689856 hlog.py:18] train/00076{16.26s}
I1202 23:15:10.573202 140353657689856 hlog.py:32] train/00077/loss 0.0046
I1202 23:15:14.422778 140353657689856 hlog.py:32] train/00077/eval_train/acc 0.9960
I1202 23:15:14.983039 140353657689856 hlog.py:32] train/00077/eval_val/acc 0.5541
I1202 23:15:14.983503 140353657689856 hlog.py:18] train/00077{17.14s}
I1202 23:15:27.650309 140353657689856 hlog.py:32] train/00078/loss 0.0044
I1202 23:15:31.702310 140353657689856 hlog.py:32] train/00078/eval_train/acc 0.9970
I1202 23:15:32.276615 140353657689856 hlog.py:32] train/00078/eval_val/acc 0.5405
I1202 23:15:32.277147 140353657689856 hlog.py:18] train/00078{17.29s}
I1202 23:15:44.430199 140353657689856 hlog.py:32] train/00079/loss 0.0048
I1202 23:15:48.406761 140353657689856 hlog.py:32] train/00079/eval_train/acc 1.0000
I1202 23:15:48.988722 140353657689856 hlog.py:32] train/00079/eval_val/acc 0.5203
I1202 23:15:49.021737 140353657689856 hlog.py:18] train/00079{16.74s}
I1202 23:16:01.780491 140353657689856 hlog.py:32] train/00080/loss 0.0049
I1202 23:16:05.681194 140353657689856 hlog.py:32] train/00080/eval_train/acc 0.9970
I1202 23:16:06.248634 140353657689856 hlog.py:32] train/00080/eval_val/acc 0.5473
I1202 23:16:06.249136 140353657689856 hlog.py:18] train/00080{17.23s}
I1202 23:16:17.599895 140353657689856 hlog.py:32] train/00081/loss 0.0046
I1202 23:16:21.754754 140353657689856 hlog.py:32] train/00081/eval_train/acc 0.9980
I1202 23:16:22.364770 140353657689856 hlog.py:32] train/00081/eval_val/acc 0.5405
I1202 23:16:22.365307 140353657689856 hlog.py:18] train/00081{16.12s}
I1202 23:16:33.947711 140353657689856 hlog.py:32] train/00082/loss 0.0042
I1202 23:16:37.913567 140353657689856 hlog.py:32] train/00082/eval_train/acc 0.9990
I1202 23:16:38.493834 140353657689856 hlog.py:32] train/00082/eval_val/acc 0.5473
I1202 23:16:38.494290 140353657689856 hlog.py:18] train/00082{16.13s}
I1202 23:16:51.026116 140353657689856 hlog.py:32] train/00083/loss 0.0039
I1202 23:16:54.843708 140353657689856 hlog.py:32] train/00083/eval_train/acc 0.9990
I1202 23:16:55.435546 140353657689856 hlog.py:32] train/00083/eval_val/acc 0.5473
I1202 23:16:55.436056 140353657689856 hlog.py:18] train/00083{16.94s}
I1202 23:17:07.550512 140353657689856 hlog.py:32] train/00084/loss 0.0041
I1202 23:17:11.699812 140353657689856 hlog.py:32] train/00084/eval_train/acc 0.9960
I1202 23:17:12.291127 140353657689856 hlog.py:32] train/00084/eval_val/acc 0.5676
I1202 23:17:12.291634 140353657689856 hlog.py:18] train/00084{16.86s}
I1202 23:17:24.795693 140353657689856 hlog.py:32] train/00085/loss 0.0039
I1202 23:17:28.953492 140353657689856 hlog.py:32] train/00085/eval_train/acc 0.9960
I1202 23:17:29.549037 140353657689856 hlog.py:32] train/00085/eval_val/acc 0.5541
I1202 23:17:29.549606 140353657689856 hlog.py:18] train/00085{17.26s}
I1202 23:17:41.193970 140353657689856 hlog.py:32] train/00086/loss 0.0037
I1202 23:17:44.946402 140353657689856 hlog.py:32] train/00086/eval_train/acc 1.0000
I1202 23:17:45.549994 140353657689856 hlog.py:32] train/00086/eval_val/acc 0.5541
I1202 23:17:45.550452 140353657689856 hlog.py:18] train/00086{16.00s}
I1202 23:17:57.886534 140353657689856 hlog.py:32] train/00087/loss 0.0038
I1202 23:18:01.608268 140353657689856 hlog.py:32] train/00087/eval_train/acc 0.9980
I1202 23:18:02.198306 140353657689856 hlog.py:32] train/00087/eval_val/acc 0.5473
I1202 23:18:02.198800 140353657689856 hlog.py:18] train/00087{16.65s}
I1202 23:18:14.235239 140353657689856 hlog.py:32] train/00088/loss 0.0044
I1202 23:18:18.149807 140353657689856 hlog.py:32] train/00088/eval_train/acc 1.0000
I1202 23:18:18.738877 140353657689856 hlog.py:32] train/00088/eval_val/acc 0.5541
I1202 23:18:18.739371 140353657689856 hlog.py:18] train/00088{16.54s}
I1202 23:18:30.683727 140353657689856 hlog.py:32] train/00089/loss 0.0038
I1202 23:18:34.594440 140353657689856 hlog.py:32] train/00089/eval_train/acc 0.9990
I1202 23:18:35.220709 140353657689856 hlog.py:32] train/00089/eval_val/acc 0.5203
I1202 23:18:35.380268 140353657689856 hlog.py:18] train/00089{16.64s}
I1202 23:18:47.471344 140353657689856 hlog.py:32] train/00090/loss 0.0039
I1202 23:18:51.406836 140353657689856 hlog.py:32] train/00090/eval_train/acc 0.9970
I1202 23:18:51.999535 140353657689856 hlog.py:32] train/00090/eval_val/acc 0.5338
I1202 23:18:52.000185 140353657689856 hlog.py:18] train/00090{16.62s}
I1202 23:19:03.404477 140353657689856 hlog.py:32] train/00091/loss 0.0033
I1202 23:19:07.381172 140353657689856 hlog.py:32] train/00091/eval_train/acc 0.9970
I1202 23:19:07.961987 140353657689856 hlog.py:32] train/00091/eval_val/acc 0.5676
I1202 23:19:07.962503 140353657689856 hlog.py:18] train/00091{15.96s}
I1202 23:19:19.752282 140353657689856 hlog.py:32] train/00092/loss 0.0040
I1202 23:19:23.565633 140353657689856 hlog.py:32] train/00092/eval_train/acc 0.9970
I1202 23:19:24.158237 140353657689856 hlog.py:32] train/00092/eval_val/acc 0.5541
I1202 23:19:24.158736 140353657689856 hlog.py:18] train/00092{16.20s}
I1202 23:19:36.540435 140353657689856 hlog.py:32] train/00093/loss 0.0033
I1202 23:19:40.444318 140353657689856 hlog.py:32] train/00093/eval_train/acc 1.0000
I1202 23:19:41.038039 140353657689856 hlog.py:32] train/00093/eval_val/acc 0.5541
I1202 23:19:41.038490 140353657689856 hlog.py:18] train/00093{16.88s}
I1202 23:19:53.324217 140353657689856 hlog.py:32] train/00094/loss 0.0036
I1202 23:19:57.245844 140353657689856 hlog.py:32] train/00094/eval_train/acc 1.0000
I1202 23:19:57.827471 140353657689856 hlog.py:32] train/00094/eval_val/acc 0.5203
I1202 23:19:57.827989 140353657689856 hlog.py:18] train/00094{16.79s}
I1202 23:20:09.485156 140353657689856 hlog.py:32] train/00095/loss 0.0036
I1202 23:20:13.352898 140353657689856 hlog.py:32] train/00095/eval_train/acc 1.0000
I1202 23:20:13.952106 140353657689856 hlog.py:32] train/00095/eval_val/acc 0.5405
I1202 23:20:13.952673 140353657689856 hlog.py:18] train/00095{16.12s}
I1202 23:20:26.027054 140353657689856 hlog.py:32] train/00096/loss 0.0029
I1202 23:20:29.898731 140353657689856 hlog.py:32] train/00096/eval_train/acc 1.0000
I1202 23:20:30.483423 140353657689856 hlog.py:32] train/00096/eval_val/acc 0.5608
I1202 23:20:30.483961 140353657689856 hlog.py:18] train/00096{16.53s}
I1202 23:20:42.883402 140353657689856 hlog.py:32] train/00097/loss 0.0033
I1202 23:20:46.685982 140353657689856 hlog.py:32] train/00097/eval_train/acc 1.0000
I1202 23:20:47.288285 140353657689856 hlog.py:32] train/00097/eval_val/acc 0.5473
I1202 23:20:47.288765 140353657689856 hlog.py:18] train/00097{16.80s}
I1202 23:20:59.338505 140353657689856 hlog.py:32] train/00098/loss 0.0030
I1202 23:21:03.245937 140353657689856 hlog.py:32] train/00098/eval_train/acc 1.0000
I1202 23:21:03.828711 140353657689856 hlog.py:32] train/00098/eval_val/acc 0.5608
I1202 23:21:03.829217 140353657689856 hlog.py:18] train/00098{16.54s}
I1202 23:21:16.481232 140353657689856 hlog.py:32] train/00099/loss 0.0047
I1202 23:21:20.503878 140353657689856 hlog.py:32] train/00099/eval_train/acc 0.9950
I1202 23:21:21.106549 140353657689856 hlog.py:32] train/00099/eval_val/acc 0.5338
I1202 23:21:21.139379 140353657689856 hlog.py:18] train/00099{17.31s}
I1202 23:21:32.830163 140353657689856 hlog.py:32] train/00100/loss 0.0030
I1202 23:21:36.589535 140353657689856 hlog.py:32] train/00100/eval_train/acc 0.9990
I1202 23:21:37.182949 140353657689856 hlog.py:32] train/00100/eval_val/acc 0.5608
I1202 23:21:37.183460 140353657689856 hlog.py:18] train/00100{16.04s}
I1202 23:21:50.584747 140353657689856 hlog.py:32] train/00101/loss 0.0034
I1202 23:21:54.146923 140353657689856 hlog.py:32] train/00101/eval_train/acc 1.0000
I1202 23:21:54.738309 140353657689856 hlog.py:32] train/00101/eval_val/acc 0.5541
I1202 23:21:54.738791 140353657689856 hlog.py:18] train/00101{17.56s}
I1202 23:22:06.175136 140353657689856 hlog.py:32] train/00102/loss 0.0032
I1202 23:22:10.198207 140353657689856 hlog.py:32] train/00102/eval_train/acc 0.9970
I1202 23:22:10.778027 140353657689856 hlog.py:32] train/00102/eval_val/acc 0.5473
I1202 23:22:10.778517 140353657689856 hlog.py:18] train/00102{16.04s}
I1202 23:22:22.246545 140353657689856 hlog.py:32] train/00103/loss 0.0022
I1202 23:22:26.343273 140353657689856 hlog.py:32] train/00103/eval_train/acc 1.0000
I1202 23:22:26.949884 140353657689856 hlog.py:32] train/00103/eval_val/acc 0.5473
I1202 23:22:26.950575 140353657689856 hlog.py:18] train/00103{16.17s}
I1202 23:22:40.025889 140353657689856 hlog.py:32] train/00104/loss 0.0030
I1202 23:22:43.866896 140353657689856 hlog.py:32] train/00104/eval_train/acc 1.0000
I1202 23:22:44.463839 140353657689856 hlog.py:32] train/00104/eval_val/acc 0.5676
I1202 23:22:44.464313 140353657689856 hlog.py:18] train/00104{17.51s}
I1202 23:22:55.553627 140353657689856 hlog.py:32] train/00105/loss 0.0027
I1202 23:22:59.387854 140353657689856 hlog.py:32] train/00105/eval_train/acc 1.0000
I1202 23:22:59.966266 140353657689856 hlog.py:32] train/00105/eval_val/acc 0.5676
I1202 23:22:59.966753 140353657689856 hlog.py:18] train/00105{15.50s}
I1202 23:23:12.382781 140353657689856 hlog.py:32] train/00106/loss 0.0031
I1202 23:23:16.160858 140353657689856 hlog.py:32] train/00106/eval_train/acc 1.0000
I1202 23:23:16.780281 140353657689856 hlog.py:32] train/00106/eval_val/acc 0.5676
I1202 23:23:16.781023 140353657689856 hlog.py:18] train/00106{16.81s}
I1202 23:23:29.057281 140353657689856 hlog.py:32] train/00107/loss 0.0032
I1202 23:23:32.990998 140353657689856 hlog.py:32] train/00107/eval_train/acc 0.9980
I1202 23:23:33.586663 140353657689856 hlog.py:32] train/00107/eval_val/acc 0.5541
I1202 23:23:33.587170 140353657689856 hlog.py:18] train/00107{16.81s}
I1202 23:23:45.334055 140353657689856 hlog.py:32] train/00108/loss 0.0027
I1202 23:23:49.377807 140353657689856 hlog.py:32] train/00108/eval_train/acc 1.0000
I1202 23:23:49.953222 140353657689856 hlog.py:32] train/00108/eval_val/acc 0.5608
I1202 23:23:49.953707 140353657689856 hlog.py:18] train/00108{16.37s}
I1202 23:24:01.195942 140353657689856 hlog.py:32] train/00109/loss 0.0028
I1202 23:24:05.075773 140353657689856 hlog.py:32] train/00109/eval_train/acc 1.0000
I1202 23:24:05.652560 140353657689856 hlog.py:32] train/00109/eval_val/acc 0.5676
I1202 23:24:05.683443 140353657689856 hlog.py:18] train/00109{15.73s}
I1202 23:24:19.238573 140353657689856 hlog.py:32] train/00110/loss 0.0030
I1202 23:24:23.043996 140353657689856 hlog.py:32] train/00110/eval_train/acc 0.9990
I1202 23:24:23.621234 140353657689856 hlog.py:32] train/00110/eval_val/acc 0.5608
I1202 23:24:23.621724 140353657689856 hlog.py:18] train/00110{17.94s}
I1202 23:24:35.842525 140353657689856 hlog.py:32] train/00111/loss 0.0029
I1202 23:24:39.899735 140353657689856 hlog.py:32] train/00111/eval_train/acc 1.0000
I1202 23:24:40.507140 140353657689856 hlog.py:32] train/00111/eval_val/acc 0.5541
I1202 23:24:40.507810 140353657689856 hlog.py:18] train/00111{16.89s}
I1202 23:24:52.076009 140353657689856 hlog.py:32] train/00112/loss 0.0029
I1202 23:24:55.972895 140353657689856 hlog.py:32] train/00112/eval_train/acc 1.0000
I1202 23:24:56.556973 140353657689856 hlog.py:32] train/00112/eval_val/acc 0.5608
I1202 23:24:56.557477 140353657689856 hlog.py:18] train/00112{16.05s}
I1202 23:25:07.842044 140353657689856 hlog.py:32] train/00113/loss 0.0028
I1202 23:25:11.830911 140353657689856 hlog.py:32] train/00113/eval_train/acc 1.0000
I1202 23:25:12.406145 140353657689856 hlog.py:32] train/00113/eval_val/acc 0.5541
I1202 23:25:12.406868 140353657689856 hlog.py:18] train/00113{15.85s}
I1202 23:25:23.591602 140353657689856 hlog.py:32] train/00114/loss 0.0026
I1202 23:25:27.390121 140353657689856 hlog.py:32] train/00114/eval_train/acc 1.0000
I1202 23:25:27.983057 140353657689856 hlog.py:32] train/00114/eval_val/acc 0.5473
I1202 23:25:27.983554 140353657689856 hlog.py:18] train/00114{15.58s}
I1202 23:25:40.200811 140353657689856 hlog.py:32] train/00115/loss 0.0030
I1202 23:25:44.104673 140353657689856 hlog.py:32] train/00115/eval_train/acc 1.0000
I1202 23:25:44.679867 140353657689856 hlog.py:32] train/00115/eval_val/acc 0.5473
I1202 23:25:44.680348 140353657689856 hlog.py:18] train/00115{16.70s}
I1202 23:25:56.973663 140353657689856 hlog.py:32] train/00116/loss 0.0030
I1202 23:26:01.029546 140353657689856 hlog.py:32] train/00116/eval_train/acc 1.0000
I1202 23:26:01.631621 140353657689856 hlog.py:32] train/00116/eval_val/acc 0.5473
I1202 23:26:01.632121 140353657689856 hlog.py:18] train/00116{16.95s}
I1202 23:26:14.069406 140353657689856 hlog.py:32] train/00117/loss 0.0025
I1202 23:26:17.915074 140353657689856 hlog.py:32] train/00117/eval_train/acc 1.0000
I1202 23:26:18.514312 140353657689856 hlog.py:32] train/00117/eval_val/acc 0.5541
I1202 23:26:18.514840 140353657689856 hlog.py:18] train/00117{16.88s}
I1202 23:26:30.203725 140353657689856 hlog.py:32] train/00118/loss 0.0030
I1202 23:26:33.932391 140353657689856 hlog.py:32] train/00118/eval_train/acc 1.0000
I1202 23:26:34.530857 140353657689856 hlog.py:32] train/00118/eval_val/acc 0.5608
I1202 23:26:34.531495 140353657689856 hlog.py:18] train/00118{16.02s}
I1202 23:26:47.359376 140353657689856 hlog.py:32] train/00119/loss 0.0031
I1202 23:26:51.186334 140353657689856 hlog.py:32] train/00119/eval_train/acc 1.0000
I1202 23:26:51.773854 140353657689856 hlog.py:32] train/00119/eval_val/acc 0.5608
I1202 23:26:51.805497 140353657689856 hlog.py:18] train/00119{17.27s}
I1202 23:27:03.951914 140353657689856 hlog.py:32] train/00120/loss 0.0028
I1202 23:27:07.976475 140353657689856 hlog.py:32] train/00120/eval_train/acc 1.0000
I1202 23:27:08.579077 140353657689856 hlog.py:32] train/00120/eval_val/acc 0.5541
I1202 23:27:08.579713 140353657689856 hlog.py:18] train/00120{16.77s}
I1202 23:27:20.806556 140353657689856 hlog.py:32] train/00121/loss 0.0025
I1202 23:27:24.516329 140353657689856 hlog.py:32] train/00121/eval_train/acc 1.0000
I1202 23:27:25.115654 140353657689856 hlog.py:32] train/00121/eval_val/acc 0.5541
I1202 23:27:25.116146 140353657689856 hlog.py:18] train/00121{16.54s}
I1202 23:27:36.553051 140353657689856 hlog.py:32] train/00122/loss 0.0024
I1202 23:27:40.545832 140353657689856 hlog.py:32] train/00122/eval_train/acc 1.0000
I1202 23:27:41.121131 140353657689856 hlog.py:32] train/00122/eval_val/acc 0.5473
I1202 23:27:41.121556 140353657689856 hlog.py:18] train/00122{16.01s}
I1202 23:27:53.188076 140353657689856 hlog.py:32] train/00123/loss 0.0026
I1202 23:27:56.949190 140353657689856 hlog.py:32] train/00123/eval_train/acc 0.9990
I1202 23:27:57.526909 140353657689856 hlog.py:32] train/00123/eval_val/acc 0.5473
I1202 23:27:57.527412 140353657689856 hlog.py:18] train/00123{16.41s}
I1202 23:28:09.310200 140353657689856 hlog.py:32] train/00124/loss 0.0025
I1202 23:28:13.171927 140353657689856 hlog.py:32] train/00124/eval_train/acc 1.0000
I1202 23:28:13.786455 140353657689856 hlog.py:32] train/00124/eval_val/acc 0.5473
I1202 23:28:13.786987 140353657689856 hlog.py:18] train/00124{16.26s}
I1202 23:28:26.088243 140353657689856 hlog.py:32] train/00125/loss 0.0026
I1202 23:28:29.871271 140353657689856 hlog.py:32] train/00125/eval_train/acc 1.0000
I1202 23:28:30.445896 140353657689856 hlog.py:32] train/00125/eval_val/acc 0.5473
I1202 23:28:30.446385 140353657689856 hlog.py:18] train/00125{16.66s}
I1202 23:28:41.968147 140353657689856 hlog.py:32] train/00126/loss 0.0027
I1202 23:28:45.664334 140353657689856 hlog.py:32] train/00126/eval_train/acc 1.0000
I1202 23:28:46.239115 140353657689856 hlog.py:32] train/00126/eval_val/acc 0.5473
I1202 23:28:46.239606 140353657689856 hlog.py:18] train/00126{15.79s}
I1202 23:28:58.489328 140353657689856 hlog.py:32] train/00127/loss 0.0029
I1202 23:29:02.482367 140353657689856 hlog.py:32] train/00127/eval_train/acc 1.0000
I1202 23:29:03.074661 140353657689856 hlog.py:32] train/00127/eval_val/acc 0.5541
I1202 23:29:03.075174 140353657689856 hlog.py:18] train/00127{16.84s}
I1202 23:29:15.133124 140353657689856 hlog.py:32] train/00128/loss 0.0031
I1202 23:29:19.072697 140353657689856 hlog.py:32] train/00128/eval_train/acc 1.0000
I1202 23:29:19.665509 140353657689856 hlog.py:32] train/00128/eval_val/acc 0.5541
I1202 23:29:19.666035 140353657689856 hlog.py:18] train/00128{16.59s}
I1202 23:29:31.036127 140353657689856 hlog.py:32] train/00129/loss 0.0027
I1202 23:29:34.824676 140353657689856 hlog.py:32] train/00129/eval_train/acc 1.0000
I1202 23:29:35.415777 140353657689856 hlog.py:32] train/00129/eval_val/acc 0.5541
I1202 23:29:35.446436 140353657689856 hlog.py:18] train/00129{15.78s}
I1202 23:29:47.716337 140353657689856 hlog.py:32] train/00130/loss 0.0027
I1202 23:29:51.443929 140353657689856 hlog.py:32] train/00130/eval_train/acc 1.0000
I1202 23:29:52.044446 140353657689856 hlog.py:32] train/00130/eval_val/acc 0.5541
I1202 23:29:52.044961 140353657689856 hlog.py:18] train/00130{16.60s}
I1202 23:30:03.274362 140353657689856 hlog.py:32] train/00131/loss 0.0027
I1202 23:30:07.362456 140353657689856 hlog.py:32] train/00131/eval_train/acc 1.0000
I1202 23:30:07.955084 140353657689856 hlog.py:32] train/00131/eval_val/acc 0.5473
I1202 23:30:07.955558 140353657689856 hlog.py:18] train/00131{15.91s}
I1202 23:30:21.107595 140353657689856 hlog.py:32] train/00132/loss 0.0030
I1202 23:30:25.179017 140353657689856 hlog.py:32] train/00132/eval_train/acc 1.0000
I1202 23:30:25.778362 140353657689856 hlog.py:32] train/00132/eval_val/acc 0.5473
I1202 23:30:25.778893 140353657689856 hlog.py:18] train/00132{17.82s}
I1202 23:30:37.201842 140353657689856 hlog.py:32] train/00133/loss 0.0024
I1202 23:30:40.913290 140353657689856 hlog.py:32] train/00133/eval_train/acc 1.0000
I1202 23:30:41.518308 140353657689856 hlog.py:32] train/00133/eval_val/acc 0.5541
I1202 23:30:41.518970 140353657689856 hlog.py:18] train/00133{15.74s}
I1202 23:30:53.344230 140353657689856 hlog.py:32] train/00134/loss 0.0025
I1202 23:30:57.407979 140353657689856 hlog.py:32] train/00134/eval_train/acc 1.0000
I1202 23:30:58.006877 140353657689856 hlog.py:32] train/00134/eval_val/acc 0.5608
I1202 23:30:58.007401 140353657689856 hlog.py:18] train/00134{16.49s}
I1202 23:31:09.945029 140353657689856 hlog.py:32] train/00135/loss 0.0029
I1202 23:31:13.733161 140353657689856 hlog.py:32] train/00135/eval_train/acc 1.0000
I1202 23:31:14.324359 140353657689856 hlog.py:32] train/00135/eval_val/acc 0.5608
I1202 23:31:14.324813 140353657689856 hlog.py:18] train/00135{16.32s}
I1202 23:31:26.139223 140353657689856 hlog.py:32] train/00136/loss 0.0023
I1202 23:31:30.052443 140353657689856 hlog.py:32] train/00136/eval_train/acc 1.0000
I1202 23:31:30.631423 140353657689856 hlog.py:32] train/00136/eval_val/acc 0.5608
I1202 23:31:30.631909 140353657689856 hlog.py:18] train/00136{16.31s}
I1202 23:31:42.968954 140353657689856 hlog.py:32] train/00137/loss 0.0027
I1202 23:31:47.014136 140353657689856 hlog.py:32] train/00137/eval_train/acc 1.0000
I1202 23:31:47.621433 140353657689856 hlog.py:32] train/00137/eval_val/acc 0.5608
I1202 23:31:47.622130 140353657689856 hlog.py:18] train/00137{16.99s}
I1202 23:31:59.819266 140353657689856 hlog.py:32] train/00138/loss 0.0027
I1202 23:32:03.857371 140353657689856 hlog.py:32] train/00138/eval_train/acc 1.0000
I1202 23:32:04.458420 140353657689856 hlog.py:32] train/00138/eval_val/acc 0.5676
I1202 23:32:04.458909 140353657689856 hlog.py:18] train/00138{16.84s}
I1202 23:32:16.595823 140353657689856 hlog.py:32] train/00139/loss 0.0025
I1202 23:32:20.765541 140353657689856 hlog.py:32] train/00139/eval_train/acc 1.0000
I1202 23:32:21.372400 140353657689856 hlog.py:32] train/00139/eval_val/acc 0.5608
I1202 23:32:21.406151 140353657689856 hlog.py:18] train/00139{16.95s}
I1202 23:32:33.950686 140353657689856 hlog.py:32] train/00140/loss 0.0027
I1202 23:32:38.016424 140353657689856 hlog.py:32] train/00140/eval_train/acc 1.0000
I1202 23:32:38.620925 140353657689856 hlog.py:32] train/00140/eval_val/acc 0.5608
I1202 23:32:38.621446 140353657689856 hlog.py:18] train/00140{17.22s}
I1202 23:32:52.144830 140353657689856 hlog.py:32] train/00141/loss 0.0027
I1202 23:32:56.082391 140353657689856 hlog.py:32] train/00141/eval_train/acc 1.0000
I1202 23:32:56.665955 140353657689856 hlog.py:32] train/00141/eval_val/acc 0.5541
I1202 23:32:56.666375 140353657689856 hlog.py:18] train/00141{18.04s}
I1202 23:33:09.448867 140353657689856 hlog.py:32] train/00142/loss 0.0029
I1202 23:33:13.405592 140353657689856 hlog.py:32] train/00142/eval_train/acc 1.0000
I1202 23:33:13.987987 140353657689856 hlog.py:32] train/00142/eval_val/acc 0.5676
I1202 23:33:13.988477 140353657689856 hlog.py:18] train/00142{17.32s}
I1202 23:33:26.246643 140353657689856 hlog.py:32] train/00143/loss 0.0025
I1202 23:33:30.137862 140353657689856 hlog.py:32] train/00143/eval_train/acc 1.0000
I1202 23:33:30.755334 140353657689856 hlog.py:32] train/00143/eval_val/acc 0.5676
I1202 23:33:30.755888 140353657689856 hlog.py:18] train/00143{16.77s}
I1202 23:33:41.885941 140353657689856 hlog.py:32] train/00144/loss 0.0026
I1202 23:33:45.951759 140353657689856 hlog.py:32] train/00144/eval_train/acc 1.0000
I1202 23:33:46.539674 140353657689856 hlog.py:32] train/00144/eval_val/acc 0.5608
I1202 23:33:46.540260 140353657689856 hlog.py:18] train/00144{15.78s}
I1202 23:33:58.167381 140353657689856 hlog.py:32] train/00145/loss 0.0025
I1202 23:34:01.877015 140353657689856 hlog.py:32] train/00145/eval_train/acc 1.0000
I1202 23:34:02.460888 140353657689856 hlog.py:32] train/00145/eval_val/acc 0.5676
I1202 23:34:02.461372 140353657689856 hlog.py:18] train/00145{15.92s}
I1202 23:34:14.870200 140353657689856 hlog.py:32] train/00146/loss 0.0026
I1202 23:34:18.788402 140353657689856 hlog.py:32] train/00146/eval_train/acc 1.0000
I1202 23:34:19.369198 140353657689856 hlog.py:32] train/00146/eval_val/acc 0.5608
I1202 23:34:19.369684 140353657689856 hlog.py:18] train/00146{16.91s}
I1202 23:34:31.284562 140353657689856 hlog.py:32] train/00147/loss 0.0024
I1202 23:34:35.169146 140353657689856 hlog.py:32] train/00147/eval_train/acc 1.0000
I1202 23:34:35.782135 140353657689856 hlog.py:32] train/00147/eval_val/acc 0.5541
I1202 23:34:35.782650 140353657689856 hlog.py:18] train/00147{16.41s}
I1202 23:34:47.782753 140353657689856 hlog.py:32] train/00148/loss 0.0028
I1202 23:34:51.729718 140353657689856 hlog.py:32] train/00148/eval_train/acc 1.0000
I1202 23:34:52.329229 140353657689856 hlog.py:32] train/00148/eval_val/acc 0.5608
I1202 23:34:52.329889 140353657689856 hlog.py:18] train/00148{16.55s}
I1202 23:35:04.630029 140353657689856 hlog.py:32] train/00149/loss 0.0027
I1202 23:35:08.843188 140353657689856 hlog.py:32] train/00149/eval_train/acc 1.0000
I1202 23:35:09.046754 140353657689856 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1202 23:35:09.046938 140353657689856 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.047048 140353657689856 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.047140 140353657689856 hlog.py:32] train/00149/eval_val/0/corr True
I1202 23:35:09.047223 140353657689856 hlog.py:32] train/00149/eval_val/0 
I1202 23:35:09.047366 140353657689856 hlog.py:18] train/00149/eval_val/0{0.00s}
I1202 23:35:09.047629 140353657689856 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1202 23:35:09.047753 140353657689856 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1202 23:35:09.047850 140353657689856 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.047938 140353657689856 hlog.py:32] train/00149/eval_val/1/corr False
I1202 23:35:09.048014 140353657689856 hlog.py:32] train/00149/eval_val/1 
I1202 23:35:09.048091 140353657689856 hlog.py:18] train/00149/eval_val/1{0.00s}
I1202 23:35:09.048183 140353657689856 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1202 23:35:09.048280 140353657689856 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( massachusetts ) ) ) )
I1202 23:35:09.048370 140353657689856 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1202 23:35:09.048449 140353657689856 hlog.py:32] train/00149/eval_val/2/corr False
I1202 23:35:09.048523 140353657689856 hlog.py:32] train/00149/eval_val/2 
I1202 23:35:09.048595 140353657689856 hlog.py:18] train/00149/eval_val/2{0.00s}
I1202 23:35:09.048684 140353657689856 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1202 23:35:09.048781 140353657689856 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1202 23:35:09.048871 140353657689856 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1202 23:35:09.048949 140353657689856 hlog.py:32] train/00149/eval_val/3/corr False
I1202 23:35:09.049022 140353657689856 hlog.py:32] train/00149/eval_val/3 
I1202 23:35:09.049094 140353657689856 hlog.py:18] train/00149/eval_val/3{0.00s}
I1202 23:35:09.049185 140353657689856 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1202 23:35:09.049281 140353657689856 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1202 23:35:09.049370 140353657689856 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1202 23:35:09.049449 140353657689856 hlog.py:32] train/00149/eval_val/4/corr False
I1202 23:35:09.049522 140353657689856 hlog.py:32] train/00149/eval_val/4 
I1202 23:35:09.049594 140353657689856 hlog.py:18] train/00149/eval_val/4{0.00s}
I1202 23:35:09.049684 140353657689856 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1202 23:35:09.049779 140353657689856 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1202 23:35:09.049868 140353657689856 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.049946 140353657689856 hlog.py:32] train/00149/eval_val/5/corr False
I1202 23:35:09.050019 140353657689856 hlog.py:32] train/00149/eval_val/5 
I1202 23:35:09.050090 140353657689856 hlog.py:18] train/00149/eval_val/5{0.00s}
I1202 23:35:09.050177 140353657689856 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1202 23:35:09.050274 140353657689856 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1202 23:35:09.050376 140353657689856 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.050455 140353657689856 hlog.py:32] train/00149/eval_val/6/corr False
I1202 23:35:09.050528 140353657689856 hlog.py:32] train/00149/eval_val/6 
I1202 23:35:09.050600 140353657689856 hlog.py:18] train/00149/eval_val/6{0.00s}
I1202 23:35:09.050688 140353657689856 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1202 23:35:09.050784 140353657689856 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1202 23:35:09.050872 140353657689856 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.050950 140353657689856 hlog.py:32] train/00149/eval_val/7/corr False
I1202 23:35:09.051023 140353657689856 hlog.py:32] train/00149/eval_val/7 
I1202 23:35:09.051094 140353657689856 hlog.py:18] train/00149/eval_val/7{0.00s}
I1202 23:35:09.051182 140353657689856 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1202 23:35:09.051277 140353657689856 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1202 23:35:09.051366 140353657689856 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1202 23:35:09.051452 140353657689856 hlog.py:32] train/00149/eval_val/8/corr False
I1202 23:35:09.051525 140353657689856 hlog.py:32] train/00149/eval_val/8 
I1202 23:35:09.051597 140353657689856 hlog.py:18] train/00149/eval_val/8{0.00s}
I1202 23:35:09.051684 140353657689856 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1202 23:35:09.051780 140353657689856 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1202 23:35:09.051868 140353657689856 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1202 23:35:09.051946 140353657689856 hlog.py:32] train/00149/eval_val/9/corr False
I1202 23:35:09.052019 140353657689856 hlog.py:32] train/00149/eval_val/9 
I1202 23:35:09.052090 140353657689856 hlog.py:18] train/00149/eval_val/9{0.00s}
I1202 23:35:09.052176 140353657689856 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1202 23:35:09.052272 140353657689856 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1202 23:35:09.052361 140353657689856 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.052439 140353657689856 hlog.py:32] train/00149/eval_val/10/corr False
I1202 23:35:09.052512 140353657689856 hlog.py:32] train/00149/eval_val/10 
I1202 23:35:09.052583 140353657689856 hlog.py:18] train/00149/eval_val/10{0.00s}
I1202 23:35:09.052672 140353657689856 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1202 23:35:09.052772 140353657689856 hlog.py:32] train/00149/eval_val/11/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) ) )
I1202 23:35:09.052868 140353657689856 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1202 23:35:09.052946 140353657689856 hlog.py:32] train/00149/eval_val/11/corr False
I1202 23:35:09.053019 140353657689856 hlog.py:32] train/00149/eval_val/11 
I1202 23:35:09.053090 140353657689856 hlog.py:18] train/00149/eval_val/11{0.00s}
I1202 23:35:09.053185 140353657689856 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1202 23:35:09.053290 140353657689856 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1202 23:35:09.053390 140353657689856 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1202 23:35:09.053470 140353657689856 hlog.py:32] train/00149/eval_val/12/corr True
I1202 23:35:09.053543 140353657689856 hlog.py:32] train/00149/eval_val/12 
I1202 23:35:09.053614 140353657689856 hlog.py:18] train/00149/eval_val/12{0.00s}
I1202 23:35:09.053708 140353657689856 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1202 23:35:09.053813 140353657689856 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1202 23:35:09.053907 140353657689856 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1202 23:35:09.053985 140353657689856 hlog.py:32] train/00149/eval_val/13/corr True
I1202 23:35:09.054057 140353657689856 hlog.py:32] train/00149/eval_val/13 
I1202 23:35:09.054128 140353657689856 hlog.py:18] train/00149/eval_val/13{0.00s}
I1202 23:35:09.054223 140353657689856 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1202 23:35:09.054327 140353657689856 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1202 23:35:09.054421 140353657689856 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1202 23:35:09.054499 140353657689856 hlog.py:32] train/00149/eval_val/14/corr True
I1202 23:35:09.054572 140353657689856 hlog.py:32] train/00149/eval_val/14 
I1202 23:35:09.054643 140353657689856 hlog.py:18] train/00149/eval_val/14{0.00s}
I1202 23:35:09.054738 140353657689856 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1202 23:35:09.054842 140353657689856 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1202 23:35:09.054936 140353657689856 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1202 23:35:09.055014 140353657689856 hlog.py:32] train/00149/eval_val/15/corr True
I1202 23:35:09.055087 140353657689856 hlog.py:32] train/00149/eval_val/15 
I1202 23:35:09.055158 140353657689856 hlog.py:18] train/00149/eval_val/15{0.00s}
I1202 23:35:09.055246 140353657689856 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1202 23:35:09.055345 140353657689856 hlog.py:32] train/00149/eval_val/16/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) ) )
I1202 23:35:09.055462 140353657689856 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1202 23:35:09.055544 140353657689856 hlog.py:32] train/00149/eval_val/16/corr False
I1202 23:35:09.055620 140353657689856 hlog.py:32] train/00149/eval_val/16 
I1202 23:35:09.055694 140353657689856 hlog.py:18] train/00149/eval_val/16{0.00s}
I1202 23:35:09.055785 140353657689856 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1202 23:35:09.055888 140353657689856 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1202 23:35:09.055987 140353657689856 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1202 23:35:09.056068 140353657689856 hlog.py:32] train/00149/eval_val/17/corr False
I1202 23:35:09.056149 140353657689856 hlog.py:32] train/00149/eval_val/17 
I1202 23:35:09.056236 140353657689856 hlog.py:18] train/00149/eval_val/17{0.00s}
I1202 23:35:09.056324 140353657689856 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1202 23:35:09.056424 140353657689856 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1202 23:35:09.056519 140353657689856 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1202 23:35:09.056597 140353657689856 hlog.py:32] train/00149/eval_val/18/corr False
I1202 23:35:09.056670 140353657689856 hlog.py:32] train/00149/eval_val/18 
I1202 23:35:09.056741 140353657689856 hlog.py:18] train/00149/eval_val/18{0.00s}
I1202 23:35:09.056828 140353657689856 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1202 23:35:09.056926 140353657689856 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1202 23:35:09.057021 140353657689856 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1202 23:35:09.057099 140353657689856 hlog.py:32] train/00149/eval_val/19/corr False
I1202 23:35:09.057171 140353657689856 hlog.py:32] train/00149/eval_val/19 
I1202 23:35:09.057242 140353657689856 hlog.py:18] train/00149/eval_val/19{0.00s}
I1202 23:35:09.057330 140353657689856 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1202 23:35:09.057429 140353657689856 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1202 23:35:09.057523 140353657689856 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1202 23:35:09.057602 140353657689856 hlog.py:32] train/00149/eval_val/20/corr False
I1202 23:35:09.057675 140353657689856 hlog.py:32] train/00149/eval_val/20 
I1202 23:35:09.057746 140353657689856 hlog.py:18] train/00149/eval_val/20{0.00s}
I1202 23:35:09.057842 140353657689856 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1202 23:35:09.057946 140353657689856 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1202 23:35:09.058041 140353657689856 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1202 23:35:09.058119 140353657689856 hlog.py:32] train/00149/eval_val/21/corr True
I1202 23:35:09.058191 140353657689856 hlog.py:32] train/00149/eval_val/21 
I1202 23:35:09.058262 140353657689856 hlog.py:18] train/00149/eval_val/21{0.00s}
I1202 23:35:09.058352 140353657689856 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1202 23:35:09.058448 140353657689856 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1202 23:35:09.058537 140353657689856 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1202 23:35:09.058615 140353657689856 hlog.py:32] train/00149/eval_val/22/corr False
I1202 23:35:09.058688 140353657689856 hlog.py:32] train/00149/eval_val/22 
I1202 23:35:09.058758 140353657689856 hlog.py:18] train/00149/eval_val/22{0.00s}
I1202 23:35:09.058847 140353657689856 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1202 23:35:09.058942 140353657689856 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1202 23:35:09.059036 140353657689856 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1202 23:35:09.059115 140353657689856 hlog.py:32] train/00149/eval_val/23/corr False
I1202 23:35:09.059188 140353657689856 hlog.py:32] train/00149/eval_val/23 
I1202 23:35:09.059258 140353657689856 hlog.py:18] train/00149/eval_val/23{0.00s}
I1202 23:35:09.059345 140353657689856 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1202 23:35:09.059451 140353657689856 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _loc ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1202 23:35:09.059543 140353657689856 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1202 23:35:09.059621 140353657689856 hlog.py:32] train/00149/eval_val/24/corr False
I1202 23:35:09.059693 140353657689856 hlog.py:32] train/00149/eval_val/24 
I1202 23:35:09.059764 140353657689856 hlog.py:18] train/00149/eval_val/24{0.00s}
I1202 23:35:09.059856 140353657689856 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1202 23:35:09.059954 140353657689856 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1202 23:35:09.060045 140353657689856 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1202 23:35:09.060123 140353657689856 hlog.py:32] train/00149/eval_val/25/corr True
I1202 23:35:09.060195 140353657689856 hlog.py:32] train/00149/eval_val/25 
I1202 23:35:09.060266 140353657689856 hlog.py:18] train/00149/eval_val/25{0.00s}
I1202 23:35:09.060355 140353657689856 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1202 23:35:09.060452 140353657689856 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1202 23:35:09.060543 140353657689856 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1202 23:35:09.060620 140353657689856 hlog.py:32] train/00149/eval_val/26/corr False
I1202 23:35:09.060692 140353657689856 hlog.py:32] train/00149/eval_val/26 
I1202 23:35:09.060762 140353657689856 hlog.py:18] train/00149/eval_val/26{0.00s}
I1202 23:35:09.060850 140353657689856 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1202 23:35:09.060955 140353657689856 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1202 23:35:09.061046 140353657689856 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1202 23:35:09.061124 140353657689856 hlog.py:32] train/00149/eval_val/27/corr False
I1202 23:35:09.061196 140353657689856 hlog.py:32] train/00149/eval_val/27 
I1202 23:35:09.061267 140353657689856 hlog.py:18] train/00149/eval_val/27{0.00s}
I1202 23:35:09.061359 140353657689856 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1202 23:35:09.061457 140353657689856 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1202 23:35:09.061547 140353657689856 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1202 23:35:09.061625 140353657689856 hlog.py:32] train/00149/eval_val/28/corr True
I1202 23:35:09.061697 140353657689856 hlog.py:32] train/00149/eval_val/28 
I1202 23:35:09.061768 140353657689856 hlog.py:18] train/00149/eval_val/28{0.00s}
I1202 23:35:09.061859 140353657689856 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1202 23:35:09.061956 140353657689856 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1202 23:35:09.062052 140353657689856 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1202 23:35:09.062130 140353657689856 hlog.py:32] train/00149/eval_val/29/corr True
I1202 23:35:09.062203 140353657689856 hlog.py:32] train/00149/eval_val/29 
I1202 23:35:09.062273 140353657689856 hlog.py:18] train/00149/eval_val/29{0.00s}
I1202 23:35:09.062361 140353657689856 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1202 23:35:09.062457 140353657689856 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north ) ) , _river ( B ) ) )
I1202 23:35:09.062548 140353657689856 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1202 23:35:09.062625 140353657689856 hlog.py:32] train/00149/eval_val/30/corr False
I1202 23:35:09.062697 140353657689856 hlog.py:32] train/00149/eval_val/30 
I1202 23:35:09.062768 140353657689856 hlog.py:18] train/00149/eval_val/30{0.00s}
I1202 23:35:09.062860 140353657689856 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1202 23:35:09.062957 140353657689856 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1202 23:35:09.063047 140353657689856 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1202 23:35:09.063124 140353657689856 hlog.py:32] train/00149/eval_val/31/corr True
I1202 23:35:09.063197 140353657689856 hlog.py:32] train/00149/eval_val/31 
I1202 23:35:09.063268 140353657689856 hlog.py:18] train/00149/eval_val/31{0.00s}
I1202 23:35:09.063355 140353657689856 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1202 23:35:09.063456 140353657689856 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1202 23:35:09.063548 140353657689856 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1202 23:35:09.063626 140353657689856 hlog.py:32] train/00149/eval_val/32/corr False
I1202 23:35:09.063699 140353657689856 hlog.py:32] train/00149/eval_val/32 
I1202 23:35:09.063769 140353657689856 hlog.py:18] train/00149/eval_val/32{0.00s}
I1202 23:35:09.063862 140353657689856 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1202 23:35:09.063959 140353657689856 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1202 23:35:09.064049 140353657689856 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1202 23:35:09.064127 140353657689856 hlog.py:32] train/00149/eval_val/33/corr True
I1202 23:35:09.064199 140353657689856 hlog.py:32] train/00149/eval_val/33 
I1202 23:35:09.064270 140353657689856 hlog.py:18] train/00149/eval_val/33{0.00s}
I1202 23:35:09.064359 140353657689856 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1202 23:35:09.064456 140353657689856 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1202 23:35:09.064547 140353657689856 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1202 23:35:09.064624 140353657689856 hlog.py:32] train/00149/eval_val/34/corr False
I1202 23:35:09.064697 140353657689856 hlog.py:32] train/00149/eval_val/34 
I1202 23:35:09.064768 140353657689856 hlog.py:18] train/00149/eval_val/34{0.00s}
I1202 23:35:09.064862 140353657689856 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1202 23:35:09.064962 140353657689856 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.065054 140353657689856 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.065138 140353657689856 hlog.py:32] train/00149/eval_val/35/corr True
I1202 23:35:09.065212 140353657689856 hlog.py:32] train/00149/eval_val/35 
I1202 23:35:09.065283 140353657689856 hlog.py:18] train/00149/eval_val/35{0.00s}
I1202 23:35:09.065377 140353657689856 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1202 23:35:09.065477 140353657689856 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.065568 140353657689856 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.065647 140353657689856 hlog.py:32] train/00149/eval_val/36/corr True
I1202 23:35:09.065719 140353657689856 hlog.py:32] train/00149/eval_val/36 
I1202 23:35:09.065789 140353657689856 hlog.py:18] train/00149/eval_val/36{0.00s}
I1202 23:35:09.065883 140353657689856 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1202 23:35:09.065983 140353657689856 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.066075 140353657689856 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.066153 140353657689856 hlog.py:32] train/00149/eval_val/37/corr True
I1202 23:35:09.066225 140353657689856 hlog.py:32] train/00149/eval_val/37 
I1202 23:35:09.066295 140353657689856 hlog.py:18] train/00149/eval_val/37{0.00s}
I1202 23:35:09.066389 140353657689856 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1202 23:35:09.066489 140353657689856 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.066581 140353657689856 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.066658 140353657689856 hlog.py:32] train/00149/eval_val/38/corr True
I1202 23:35:09.066730 140353657689856 hlog.py:32] train/00149/eval_val/38 
I1202 23:35:09.066802 140353657689856 hlog.py:18] train/00149/eval_val/38{0.00s}
I1202 23:35:09.066889 140353657689856 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1202 23:35:09.066983 140353657689856 hlog.py:32] train/00149/eval_val/39/pred ( A , ( _population ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.067075 140353657689856 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1202 23:35:09.067153 140353657689856 hlog.py:32] train/00149/eval_val/39/corr False
I1202 23:35:09.067225 140353657689856 hlog.py:32] train/00149/eval_val/39 
I1202 23:35:09.067296 140353657689856 hlog.py:18] train/00149/eval_val/39{0.00s}
I1202 23:35:09.067383 140353657689856 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1202 23:35:09.067491 140353657689856 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1202 23:35:09.067582 140353657689856 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1202 23:35:09.067660 140353657689856 hlog.py:32] train/00149/eval_val/40/corr False
I1202 23:35:09.067732 140353657689856 hlog.py:32] train/00149/eval_val/40 
I1202 23:35:09.067803 140353657689856 hlog.py:18] train/00149/eval_val/40{0.00s}
I1202 23:35:09.067889 140353657689856 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1202 23:35:09.067989 140353657689856 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1202 23:35:09.068084 140353657689856 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1202 23:35:09.068163 140353657689856 hlog.py:32] train/00149/eval_val/41/corr False
I1202 23:35:09.068236 140353657689856 hlog.py:32] train/00149/eval_val/41 
I1202 23:35:09.068306 140353657689856 hlog.py:18] train/00149/eval_val/41{0.00s}
I1202 23:35:09.068393 140353657689856 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1202 23:35:09.068487 140353657689856 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , A ) )
I1202 23:35:09.068575 140353657689856 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1202 23:35:09.068653 140353657689856 hlog.py:32] train/00149/eval_val/42/corr False
I1202 23:35:09.068725 140353657689856 hlog.py:32] train/00149/eval_val/42 
I1202 23:35:09.068796 140353657689856 hlog.py:18] train/00149/eval_val/42{0.00s}
I1202 23:35:09.068885 140353657689856 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1202 23:35:09.068991 140353657689856 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1202 23:35:09.069087 140353657689856 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1202 23:35:09.069164 140353657689856 hlog.py:32] train/00149/eval_val/43/corr False
I1202 23:35:09.069237 140353657689856 hlog.py:32] train/00149/eval_val/43 
I1202 23:35:09.069308 140353657689856 hlog.py:18] train/00149/eval_val/43{0.00s}
I1202 23:35:09.069403 140353657689856 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1202 23:35:09.069509 140353657689856 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1202 23:35:09.069604 140353657689856 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1202 23:35:09.069682 140353657689856 hlog.py:32] train/00149/eval_val/44/corr True
I1202 23:35:09.069754 140353657689856 hlog.py:32] train/00149/eval_val/44 
I1202 23:35:09.069824 140353657689856 hlog.py:18] train/00149/eval_val/44{0.00s}
I1202 23:35:09.069916 140353657689856 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1202 23:35:09.070016 140353657689856 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1202 23:35:09.070108 140353657689856 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1202 23:35:09.070186 140353657689856 hlog.py:32] train/00149/eval_val/45/corr False
I1202 23:35:09.070258 140353657689856 hlog.py:32] train/00149/eval_val/45 
I1202 23:35:09.070329 140353657689856 hlog.py:18] train/00149/eval_val/45{0.00s}
I1202 23:35:09.070416 140353657689856 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1202 23:35:09.070515 140353657689856 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) , A ) )
I1202 23:35:09.070607 140353657689856 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1202 23:35:09.070684 140353657689856 hlog.py:32] train/00149/eval_val/46/corr False
I1202 23:35:09.070756 140353657689856 hlog.py:32] train/00149/eval_val/46 
I1202 23:35:09.070827 140353657689856 hlog.py:18] train/00149/eval_val/46{0.00s}
I1202 23:35:09.070926 140353657689856 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1202 23:35:09.071029 140353657689856 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1202 23:35:09.071123 140353657689856 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1202 23:35:09.071201 140353657689856 hlog.py:32] train/00149/eval_val/47/corr True
I1202 23:35:09.071273 140353657689856 hlog.py:32] train/00149/eval_val/47 
I1202 23:35:09.071344 140353657689856 hlog.py:18] train/00149/eval_val/47{0.00s}
I1202 23:35:09.071445 140353657689856 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1202 23:35:09.071551 140353657689856 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1202 23:35:09.071645 140353657689856 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1202 23:35:09.071724 140353657689856 hlog.py:32] train/00149/eval_val/48/corr True
I1202 23:35:09.071796 140353657689856 hlog.py:32] train/00149/eval_val/48 
I1202 23:35:09.071866 140353657689856 hlog.py:18] train/00149/eval_val/48{0.00s}
I1202 23:35:09.071961 140353657689856 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1202 23:35:09.072064 140353657689856 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1202 23:35:09.072158 140353657689856 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1202 23:35:09.072236 140353657689856 hlog.py:32] train/00149/eval_val/49/corr True
I1202 23:35:09.072308 140353657689856 hlog.py:32] train/00149/eval_val/49 
I1202 23:35:09.072379 140353657689856 hlog.py:18] train/00149/eval_val/49{0.00s}
I1202 23:35:09.072474 140353657689856 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1202 23:35:09.072577 140353657689856 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1202 23:35:09.072671 140353657689856 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1202 23:35:09.072748 140353657689856 hlog.py:32] train/00149/eval_val/50/corr True
I1202 23:35:09.072820 140353657689856 hlog.py:32] train/00149/eval_val/50 
I1202 23:35:09.072891 140353657689856 hlog.py:18] train/00149/eval_val/50{0.00s}
I1202 23:35:09.072984 140353657689856 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1202 23:35:09.073087 140353657689856 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1202 23:35:09.073198 140353657689856 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1202 23:35:09.073279 140353657689856 hlog.py:32] train/00149/eval_val/51/corr False
I1202 23:35:09.073353 140353657689856 hlog.py:32] train/00149/eval_val/51 
I1202 23:35:09.073438 140353657689856 hlog.py:18] train/00149/eval_val/51{0.00s}
I1202 23:35:09.073526 140353657689856 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1202 23:35:09.073624 140353657689856 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1202 23:35:09.073720 140353657689856 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1202 23:35:09.073799 140353657689856 hlog.py:32] train/00149/eval_val/52/corr False
I1202 23:35:09.073872 140353657689856 hlog.py:32] train/00149/eval_val/52 
I1202 23:35:09.073942 140353657689856 hlog.py:18] train/00149/eval_val/52{0.00s}
I1202 23:35:09.074028 140353657689856 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1202 23:35:09.074127 140353657689856 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1202 23:35:09.074217 140353657689856 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1202 23:35:09.074295 140353657689856 hlog.py:32] train/00149/eval_val/53/corr False
I1202 23:35:09.074367 140353657689856 hlog.py:32] train/00149/eval_val/53 
I1202 23:35:09.074437 140353657689856 hlog.py:18] train/00149/eval_val/53{0.00s}
I1202 23:35:09.074530 140353657689856 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1202 23:35:09.074626 140353657689856 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.074717 140353657689856 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.074794 140353657689856 hlog.py:32] train/00149/eval_val/54/corr True
I1202 23:35:09.074867 140353657689856 hlog.py:32] train/00149/eval_val/54 
I1202 23:35:09.074937 140353657689856 hlog.py:18] train/00149/eval_val/54{0.00s}
I1202 23:35:09.075029 140353657689856 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1202 23:35:09.075126 140353657689856 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1202 23:35:09.075216 140353657689856 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1202 23:35:09.075294 140353657689856 hlog.py:32] train/00149/eval_val/55/corr True
I1202 23:35:09.075366 140353657689856 hlog.py:32] train/00149/eval_val/55 
I1202 23:35:09.075444 140353657689856 hlog.py:18] train/00149/eval_val/55{0.00s}
I1202 23:35:09.075537 140353657689856 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1202 23:35:09.075635 140353657689856 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1202 23:35:09.075725 140353657689856 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1202 23:35:09.075803 140353657689856 hlog.py:32] train/00149/eval_val/56/corr True
I1202 23:35:09.075875 140353657689856 hlog.py:32] train/00149/eval_val/56 
I1202 23:35:09.075946 140353657689856 hlog.py:18] train/00149/eval_val/56{0.00s}
I1202 23:35:09.076037 140353657689856 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1202 23:35:09.076134 140353657689856 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.076225 140353657689856 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.076302 140353657689856 hlog.py:32] train/00149/eval_val/57/corr True
I1202 23:35:09.076375 140353657689856 hlog.py:32] train/00149/eval_val/57 
I1202 23:35:09.076445 140353657689856 hlog.py:18] train/00149/eval_val/57{0.00s}
I1202 23:35:09.076536 140353657689856 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1202 23:35:09.076633 140353657689856 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.076723 140353657689856 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.076807 140353657689856 hlog.py:32] train/00149/eval_val/58/corr True
I1202 23:35:09.076879 140353657689856 hlog.py:32] train/00149/eval_val/58 
I1202 23:35:09.076950 140353657689856 hlog.py:18] train/00149/eval_val/58{0.00s}
I1202 23:35:09.077043 140353657689856 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1202 23:35:09.077139 140353657689856 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1202 23:35:09.077229 140353657689856 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1202 23:35:09.077307 140353657689856 hlog.py:32] train/00149/eval_val/59/corr True
I1202 23:35:09.077378 140353657689856 hlog.py:32] train/00149/eval_val/59 
I1202 23:35:09.077449 140353657689856 hlog.py:18] train/00149/eval_val/59{0.00s}
I1202 23:35:09.077540 140353657689856 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1202 23:35:09.077637 140353657689856 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1202 23:35:09.077727 140353657689856 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1202 23:35:09.077804 140353657689856 hlog.py:32] train/00149/eval_val/60/corr True
I1202 23:35:09.077877 140353657689856 hlog.py:32] train/00149/eval_val/60 
I1202 23:35:09.077947 140353657689856 hlog.py:18] train/00149/eval_val/60{0.00s}
I1202 23:35:09.078040 140353657689856 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1202 23:35:09.078137 140353657689856 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1202 23:35:09.078227 140353657689856 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1202 23:35:09.078305 140353657689856 hlog.py:32] train/00149/eval_val/61/corr True
I1202 23:35:09.078377 140353657689856 hlog.py:32] train/00149/eval_val/61 
I1202 23:35:09.078448 140353657689856 hlog.py:18] train/00149/eval_val/61{0.00s}
I1202 23:35:09.078539 140353657689856 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1202 23:35:09.078635 140353657689856 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1202 23:35:09.078725 140353657689856 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1202 23:35:09.078803 140353657689856 hlog.py:32] train/00149/eval_val/62/corr True
I1202 23:35:09.078875 140353657689856 hlog.py:32] train/00149/eval_val/62 
I1202 23:35:09.078946 140353657689856 hlog.py:18] train/00149/eval_val/62{0.00s}
I1202 23:35:09.079037 140353657689856 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1202 23:35:09.079134 140353657689856 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.079224 140353657689856 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.079302 140353657689856 hlog.py:32] train/00149/eval_val/63/corr True
I1202 23:35:09.079374 140353657689856 hlog.py:32] train/00149/eval_val/63 
I1202 23:35:09.079453 140353657689856 hlog.py:18] train/00149/eval_val/63{0.00s}
I1202 23:35:09.318983 140353657689856 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1202 23:35:09.319184 140353657689856 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1202 23:35:09.319294 140353657689856 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1202 23:35:09.319395 140353657689856 hlog.py:32] train/00149/eval_val/64/corr True
I1202 23:35:09.319490 140353657689856 hlog.py:32] train/00149/eval_val/64 
I1202 23:35:09.319572 140353657689856 hlog.py:18] train/00149/eval_val/64{0.00s}
I1202 23:35:09.319675 140353657689856 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1202 23:35:09.319780 140353657689856 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.319876 140353657689856 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.319958 140353657689856 hlog.py:32] train/00149/eval_val/65/corr True
I1202 23:35:09.320034 140353657689856 hlog.py:32] train/00149/eval_val/65 
I1202 23:35:09.320109 140353657689856 hlog.py:18] train/00149/eval_val/65{0.00s}
I1202 23:35:09.320207 140353657689856 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1202 23:35:09.320308 140353657689856 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.320403 140353657689856 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.320484 140353657689856 hlog.py:32] train/00149/eval_val/66/corr True
I1202 23:35:09.320559 140353657689856 hlog.py:32] train/00149/eval_val/66 
I1202 23:35:09.320634 140353657689856 hlog.py:18] train/00149/eval_val/66{0.00s}
I1202 23:35:09.320734 140353657689856 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1202 23:35:09.320836 140353657689856 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.320930 140353657689856 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.321011 140353657689856 hlog.py:32] train/00149/eval_val/67/corr True
I1202 23:35:09.321086 140353657689856 hlog.py:32] train/00149/eval_val/67 
I1202 23:35:09.321160 140353657689856 hlog.py:18] train/00149/eval_val/67{0.00s}
I1202 23:35:09.321259 140353657689856 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1202 23:35:09.321362 140353657689856 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1202 23:35:09.321459 140353657689856 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1202 23:35:09.321540 140353657689856 hlog.py:32] train/00149/eval_val/68/corr True
I1202 23:35:09.321614 140353657689856 hlog.py:32] train/00149/eval_val/68 
I1202 23:35:09.321688 140353657689856 hlog.py:18] train/00149/eval_val/68{0.00s}
I1202 23:35:09.321786 140353657689856 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1202 23:35:09.321889 140353657689856 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.321984 140353657689856 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.322065 140353657689856 hlog.py:32] train/00149/eval_val/69/corr True
I1202 23:35:09.322139 140353657689856 hlog.py:32] train/00149/eval_val/69 
I1202 23:35:09.322213 140353657689856 hlog.py:18] train/00149/eval_val/69{0.00s}
I1202 23:35:09.322303 140353657689856 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1202 23:35:09.322402 140353657689856 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1202 23:35:09.322495 140353657689856 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.322575 140353657689856 hlog.py:32] train/00149/eval_val/70/corr False
I1202 23:35:09.322657 140353657689856 hlog.py:32] train/00149/eval_val/70 
I1202 23:35:09.322732 140353657689856 hlog.py:18] train/00149/eval_val/70{0.00s}
I1202 23:35:09.322822 140353657689856 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1202 23:35:09.322921 140353657689856 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1202 23:35:09.323013 140353657689856 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1202 23:35:09.323094 140353657689856 hlog.py:32] train/00149/eval_val/71/corr False
I1202 23:35:09.323169 140353657689856 hlog.py:32] train/00149/eval_val/71 
I1202 23:35:09.323243 140353657689856 hlog.py:18] train/00149/eval_val/71{0.00s}
I1202 23:35:09.323333 140353657689856 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1202 23:35:09.323439 140353657689856 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1202 23:35:09.323533 140353657689856 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1202 23:35:09.323614 140353657689856 hlog.py:32] train/00149/eval_val/72/corr False
I1202 23:35:09.323688 140353657689856 hlog.py:32] train/00149/eval_val/72 
I1202 23:35:09.323762 140353657689856 hlog.py:18] train/00149/eval_val/72{0.00s}
I1202 23:35:09.323853 140353657689856 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1202 23:35:09.323951 140353657689856 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1202 23:35:09.324042 140353657689856 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1202 23:35:09.324122 140353657689856 hlog.py:32] train/00149/eval_val/73/corr False
I1202 23:35:09.324197 140353657689856 hlog.py:32] train/00149/eval_val/73 
I1202 23:35:09.324271 140353657689856 hlog.py:18] train/00149/eval_val/73{0.00s}
I1202 23:35:09.324361 140353657689856 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1202 23:35:09.324459 140353657689856 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1202 23:35:09.324551 140353657689856 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1202 23:35:09.324632 140353657689856 hlog.py:32] train/00149/eval_val/74/corr False
I1202 23:35:09.324707 140353657689856 hlog.py:32] train/00149/eval_val/74 
I1202 23:35:09.324780 140353657689856 hlog.py:18] train/00149/eval_val/74{0.00s}
I1202 23:35:09.324872 140353657689856 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1202 23:35:09.324970 140353657689856 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( square , kilometers ) ) ) )
I1202 23:35:09.325062 140353657689856 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1202 23:35:09.325142 140353657689856 hlog.py:32] train/00149/eval_val/75/corr False
I1202 23:35:09.325217 140353657689856 hlog.py:32] train/00149/eval_val/75 
I1202 23:35:09.325290 140353657689856 hlog.py:18] train/00149/eval_val/75{0.00s}
I1202 23:35:09.325381 140353657689856 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1202 23:35:09.325480 140353657689856 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1202 23:35:09.325572 140353657689856 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1202 23:35:09.325652 140353657689856 hlog.py:32] train/00149/eval_val/76/corr False
I1202 23:35:09.325727 140353657689856 hlog.py:32] train/00149/eval_val/76 
I1202 23:35:09.325800 140353657689856 hlog.py:18] train/00149/eval_val/76{0.00s}
I1202 23:35:09.325896 140353657689856 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1202 23:35:09.325996 140353657689856 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1202 23:35:09.326088 140353657689856 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1202 23:35:09.326168 140353657689856 hlog.py:32] train/00149/eval_val/77/corr False
I1202 23:35:09.326243 140353657689856 hlog.py:32] train/00149/eval_val/77 
I1202 23:35:09.326317 140353657689856 hlog.py:18] train/00149/eval_val/77{0.00s}
I1202 23:35:09.326406 140353657689856 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1202 23:35:09.326504 140353657689856 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1202 23:35:09.326597 140353657689856 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1202 23:35:09.326677 140353657689856 hlog.py:32] train/00149/eval_val/78/corr False
I1202 23:35:09.326751 140353657689856 hlog.py:32] train/00149/eval_val/78 
I1202 23:35:09.326824 140353657689856 hlog.py:18] train/00149/eval_val/78{0.00s}
I1202 23:35:09.326916 140353657689856 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1202 23:35:09.327015 140353657689856 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south , carolina ) ) ) )
I1202 23:35:09.327107 140353657689856 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1202 23:35:09.327188 140353657689856 hlog.py:32] train/00149/eval_val/79/corr False
I1202 23:35:09.327262 140353657689856 hlog.py:32] train/00149/eval_val/79 
I1202 23:35:09.327336 140353657689856 hlog.py:18] train/00149/eval_val/79{0.00s}
I1202 23:35:09.327433 140353657689856 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1202 23:35:09.327533 140353657689856 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1202 23:35:09.327625 140353657689856 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.327706 140353657689856 hlog.py:32] train/00149/eval_val/80/corr False
I1202 23:35:09.327781 140353657689856 hlog.py:32] train/00149/eval_val/80 
I1202 23:35:09.327854 140353657689856 hlog.py:18] train/00149/eval_val/80{0.00s}
I1202 23:35:09.327949 140353657689856 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1202 23:35:09.328046 140353657689856 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1202 23:35:09.328137 140353657689856 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.328217 140353657689856 hlog.py:32] train/00149/eval_val/81/corr False
I1202 23:35:09.328292 140353657689856 hlog.py:32] train/00149/eval_val/81 
I1202 23:35:09.328366 140353657689856 hlog.py:18] train/00149/eval_val/81{0.00s}
I1202 23:35:09.328456 140353657689856 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1202 23:35:09.328555 140353657689856 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1202 23:35:09.328646 140353657689856 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1202 23:35:09.328727 140353657689856 hlog.py:32] train/00149/eval_val/82/corr False
I1202 23:35:09.328802 140353657689856 hlog.py:32] train/00149/eval_val/82 
I1202 23:35:09.328876 140353657689856 hlog.py:18] train/00149/eval_val/82{0.00s}
I1202 23:35:09.328969 140353657689856 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1202 23:35:09.329067 140353657689856 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( B , A ) , _state ( B ) ) ) )
I1202 23:35:09.329165 140353657689856 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1202 23:35:09.329246 140353657689856 hlog.py:32] train/00149/eval_val/83/corr False
I1202 23:35:09.329321 140353657689856 hlog.py:32] train/00149/eval_val/83 
I1202 23:35:09.329395 140353657689856 hlog.py:18] train/00149/eval_val/83{0.00s}
I1202 23:35:09.329490 140353657689856 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1202 23:35:09.329587 140353657689856 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _population ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1202 23:35:09.329680 140353657689856 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.329760 140353657689856 hlog.py:32] train/00149/eval_val/84/corr False
I1202 23:35:09.329835 140353657689856 hlog.py:32] train/00149/eval_val/84 
I1202 23:35:09.329909 140353657689856 hlog.py:18] train/00149/eval_val/84{0.00s}
I1202 23:35:09.330006 140353657689856 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1202 23:35:09.330104 140353657689856 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.330196 140353657689856 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.330277 140353657689856 hlog.py:32] train/00149/eval_val/85/corr True
I1202 23:35:09.330351 140353657689856 hlog.py:32] train/00149/eval_val/85 
I1202 23:35:09.330425 140353657689856 hlog.py:18] train/00149/eval_val/85{0.00s}
I1202 23:35:09.330518 140353657689856 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1202 23:35:09.330624 140353657689856 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) ) )
I1202 23:35:09.330722 140353657689856 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1202 23:35:09.330803 140353657689856 hlog.py:32] train/00149/eval_val/86/corr False
I1202 23:35:09.330878 140353657689856 hlog.py:32] train/00149/eval_val/86 
I1202 23:35:09.330951 140353657689856 hlog.py:18] train/00149/eval_val/86{0.00s}
I1202 23:35:09.331052 140353657689856 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1202 23:35:09.331165 140353657689856 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1202 23:35:09.331267 140353657689856 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1202 23:35:09.331347 140353657689856 hlog.py:32] train/00149/eval_val/87/corr True
I1202 23:35:09.331429 140353657689856 hlog.py:32] train/00149/eval_val/87 
I1202 23:35:09.331506 140353657689856 hlog.py:18] train/00149/eval_val/87{0.00s}
I1202 23:35:09.331603 140353657689856 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1202 23:35:09.331703 140353657689856 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1202 23:35:09.331797 140353657689856 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1202 23:35:09.331878 140353657689856 hlog.py:32] train/00149/eval_val/88/corr True
I1202 23:35:09.331953 140353657689856 hlog.py:32] train/00149/eval_val/88 
I1202 23:35:09.332026 140353657689856 hlog.py:18] train/00149/eval_val/88{0.00s}
I1202 23:35:09.332127 140353657689856 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1202 23:35:09.332241 140353657689856 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.332340 140353657689856 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.332421 140353657689856 hlog.py:32] train/00149/eval_val/89/corr True
I1202 23:35:09.332496 140353657689856 hlog.py:32] train/00149/eval_val/89 
I1202 23:35:09.332570 140353657689856 hlog.py:18] train/00149/eval_val/89{0.00s}
I1202 23:35:09.332672 140353657689856 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1202 23:35:09.332784 140353657689856 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1202 23:35:09.332885 140353657689856 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1202 23:35:09.332966 140353657689856 hlog.py:32] train/00149/eval_val/90/corr True
I1202 23:35:09.333041 140353657689856 hlog.py:32] train/00149/eval_val/90 
I1202 23:35:09.333115 140353657689856 hlog.py:18] train/00149/eval_val/90{0.00s}
I1202 23:35:09.333212 140353657689856 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1202 23:35:09.333315 140353657689856 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.333410 140353657689856 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.333491 140353657689856 hlog.py:32] train/00149/eval_val/91/corr True
I1202 23:35:09.333566 140353657689856 hlog.py:32] train/00149/eval_val/91 
I1202 23:35:09.333639 140353657689856 hlog.py:18] train/00149/eval_val/91{0.00s}
I1202 23:35:09.333736 140353657689856 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1202 23:35:09.333839 140353657689856 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.333933 140353657689856 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.334014 140353657689856 hlog.py:32] train/00149/eval_val/92/corr True
I1202 23:35:09.334089 140353657689856 hlog.py:32] train/00149/eval_val/92 
I1202 23:35:09.334162 140353657689856 hlog.py:18] train/00149/eval_val/92{0.00s}
I1202 23:35:09.334253 140353657689856 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1202 23:35:09.334350 140353657689856 hlog.py:32] train/00149/eval_val/93/pred ( A , ( _area ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1202 23:35:09.334445 140353657689856 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.334526 140353657689856 hlog.py:32] train/00149/eval_val/93/corr False
I1202 23:35:09.334601 140353657689856 hlog.py:32] train/00149/eval_val/93 
I1202 23:35:09.334674 140353657689856 hlog.py:18] train/00149/eval_val/93{0.00s}
I1202 23:35:09.334764 140353657689856 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1202 23:35:09.334872 140353657689856 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _area ( B , A ) , _highest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1202 23:35:09.334968 140353657689856 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.335054 140353657689856 hlog.py:32] train/00149/eval_val/94/corr False
I1202 23:35:09.335130 140353657689856 hlog.py:32] train/00149/eval_val/94 
I1202 23:35:09.335204 140353657689856 hlog.py:18] train/00149/eval_val/94{0.00s}
I1202 23:35:09.335295 140353657689856 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1202 23:35:09.335402 140353657689856 hlog.py:32] train/00149/eval_val/95/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1202 23:35:09.335507 140353657689856 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.335588 140353657689856 hlog.py:32] train/00149/eval_val/95/corr False
I1202 23:35:09.335664 140353657689856 hlog.py:32] train/00149/eval_val/95 
I1202 23:35:09.335737 140353657689856 hlog.py:18] train/00149/eval_val/95{0.00s}
I1202 23:35:09.335837 140353657689856 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1202 23:35:09.335944 140353657689856 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1202 23:35:09.336042 140353657689856 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1202 23:35:09.336122 140353657689856 hlog.py:32] train/00149/eval_val/96/corr True
I1202 23:35:09.336197 140353657689856 hlog.py:32] train/00149/eval_val/96 
I1202 23:35:09.336270 140353657689856 hlog.py:18] train/00149/eval_val/96{0.00s}
I1202 23:35:09.336374 140353657689856 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1202 23:35:09.336531 140353657689856 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1202 23:35:09.336651 140353657689856 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1202 23:35:09.336734 140353657689856 hlog.py:32] train/00149/eval_val/97/corr True
I1202 23:35:09.336809 140353657689856 hlog.py:32] train/00149/eval_val/97 
I1202 23:35:09.336883 140353657689856 hlog.py:18] train/00149/eval_val/97{0.00s}
I1202 23:35:09.336981 140353657689856 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1202 23:35:09.337087 140353657689856 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1202 23:35:09.337183 140353657689856 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1202 23:35:09.337265 140353657689856 hlog.py:32] train/00149/eval_val/98/corr True
I1202 23:35:09.337339 140353657689856 hlog.py:32] train/00149/eval_val/98 
I1202 23:35:09.337412 140353657689856 hlog.py:18] train/00149/eval_val/98{0.00s}
I1202 23:35:09.337510 140353657689856 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1202 23:35:09.337616 140353657689856 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1202 23:35:09.337713 140353657689856 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1202 23:35:09.337794 140353657689856 hlog.py:32] train/00149/eval_val/99/corr True
I1202 23:35:09.337877 140353657689856 hlog.py:32] train/00149/eval_val/99 
I1202 23:35:09.337953 140353657689856 hlog.py:18] train/00149/eval_val/99{0.00s}
I1202 23:35:09.338044 140353657689856 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1202 23:35:09.338148 140353657689856 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.338246 140353657689856 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1202 23:35:09.338327 140353657689856 hlog.py:32] train/00149/eval_val/100/corr False
I1202 23:35:09.338402 140353657689856 hlog.py:32] train/00149/eval_val/100 
I1202 23:35:09.338475 140353657689856 hlog.py:18] train/00149/eval_val/100{0.00s}
I1202 23:35:09.338566 140353657689856 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1202 23:35:09.338676 140353657689856 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1202 23:35:09.338774 140353657689856 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1202 23:35:09.338855 140353657689856 hlog.py:32] train/00149/eval_val/101/corr False
I1202 23:35:09.338930 140353657689856 hlog.py:32] train/00149/eval_val/101 
I1202 23:35:09.339004 140353657689856 hlog.py:18] train/00149/eval_val/101{0.00s}
I1202 23:35:09.339097 140353657689856 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1202 23:35:09.339198 140353657689856 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1202 23:35:09.339292 140353657689856 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1202 23:35:09.339372 140353657689856 hlog.py:32] train/00149/eval_val/102/corr False
I1202 23:35:09.339455 140353657689856 hlog.py:32] train/00149/eval_val/102 
I1202 23:35:09.339529 140353657689856 hlog.py:18] train/00149/eval_val/102{0.00s}
I1202 23:35:09.339625 140353657689856 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1202 23:35:09.339725 140353657689856 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1202 23:35:09.339818 140353657689856 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1202 23:35:09.339899 140353657689856 hlog.py:32] train/00149/eval_val/103/corr True
I1202 23:35:09.339974 140353657689856 hlog.py:32] train/00149/eval_val/103 
I1202 23:35:09.340047 140353657689856 hlog.py:18] train/00149/eval_val/103{0.00s}
I1202 23:35:09.340142 140353657689856 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1202 23:35:09.340242 140353657689856 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.340335 140353657689856 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.340416 140353657689856 hlog.py:32] train/00149/eval_val/104/corr True
I1202 23:35:09.340491 140353657689856 hlog.py:32] train/00149/eval_val/104 
I1202 23:35:09.340564 140353657689856 hlog.py:18] train/00149/eval_val/104{0.00s}
I1202 23:35:09.340659 140353657689856 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1202 23:35:09.340759 140353657689856 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1202 23:35:09.340852 140353657689856 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1202 23:35:09.340939 140353657689856 hlog.py:32] train/00149/eval_val/105/corr True
I1202 23:35:09.341015 140353657689856 hlog.py:32] train/00149/eval_val/105 
I1202 23:35:09.341088 140353657689856 hlog.py:18] train/00149/eval_val/105{0.00s}
I1202 23:35:09.341184 140353657689856 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1202 23:35:09.341284 140353657689856 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1202 23:35:09.341377 140353657689856 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1202 23:35:09.341458 140353657689856 hlog.py:32] train/00149/eval_val/106/corr True
I1202 23:35:09.341533 140353657689856 hlog.py:32] train/00149/eval_val/106 
I1202 23:35:09.341606 140353657689856 hlog.py:18] train/00149/eval_val/106{0.00s}
I1202 23:35:09.341701 140353657689856 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1202 23:35:09.341802 140353657689856 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.341895 140353657689856 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.341976 140353657689856 hlog.py:32] train/00149/eval_val/107/corr True
I1202 23:35:09.342050 140353657689856 hlog.py:32] train/00149/eval_val/107 
I1202 23:35:09.342123 140353657689856 hlog.py:18] train/00149/eval_val/107{0.00s}
I1202 23:35:09.342218 140353657689856 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1202 23:35:09.342318 140353657689856 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1202 23:35:09.342411 140353657689856 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1202 23:35:09.342492 140353657689856 hlog.py:32] train/00149/eval_val/108/corr True
I1202 23:35:09.342567 140353657689856 hlog.py:32] train/00149/eval_val/108 
I1202 23:35:09.342640 140353657689856 hlog.py:18] train/00149/eval_val/108{0.00s}
I1202 23:35:09.342736 140353657689856 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1202 23:35:09.342836 140353657689856 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1202 23:35:09.342929 140353657689856 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1202 23:35:09.343009 140353657689856 hlog.py:32] train/00149/eval_val/109/corr True
I1202 23:35:09.343084 140353657689856 hlog.py:32] train/00149/eval_val/109 
I1202 23:35:09.343157 140353657689856 hlog.py:18] train/00149/eval_val/109{0.00s}
I1202 23:35:09.343252 140353657689856 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1202 23:35:09.343352 140353657689856 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.343453 140353657689856 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1202 23:35:09.343535 140353657689856 hlog.py:32] train/00149/eval_val/110/corr True
I1202 23:35:09.343610 140353657689856 hlog.py:32] train/00149/eval_val/110 
I1202 23:35:09.343683 140353657689856 hlog.py:18] train/00149/eval_val/110{0.00s}
I1202 23:35:09.343779 140353657689856 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1202 23:35:09.343879 140353657689856 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1202 23:35:09.343971 140353657689856 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1202 23:35:09.344058 140353657689856 hlog.py:32] train/00149/eval_val/111/corr True
I1202 23:35:09.344133 140353657689856 hlog.py:32] train/00149/eval_val/111 
I1202 23:35:09.344206 140353657689856 hlog.py:18] train/00149/eval_val/111{0.00s}
I1202 23:35:09.344301 140353657689856 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1202 23:35:09.344401 140353657689856 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1202 23:35:09.344495 140353657689856 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1202 23:35:09.344574 140353657689856 hlog.py:32] train/00149/eval_val/112/corr True
I1202 23:35:09.344650 140353657689856 hlog.py:32] train/00149/eval_val/112 
I1202 23:35:09.344722 140353657689856 hlog.py:18] train/00149/eval_val/112{0.00s}
I1202 23:35:09.344817 140353657689856 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1202 23:35:09.344918 140353657689856 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1202 23:35:09.345012 140353657689856 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1202 23:35:09.345092 140353657689856 hlog.py:32] train/00149/eval_val/113/corr True
I1202 23:35:09.345167 140353657689856 hlog.py:32] train/00149/eval_val/113 
I1202 23:35:09.345240 140353657689856 hlog.py:18] train/00149/eval_val/113{0.00s}
I1202 23:35:09.345335 140353657689856 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1202 23:35:09.345435 140353657689856 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.345528 140353657689856 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1202 23:35:09.345608 140353657689856 hlog.py:32] train/00149/eval_val/114/corr True
I1202 23:35:09.345683 140353657689856 hlog.py:32] train/00149/eval_val/114 
I1202 23:35:09.345756 140353657689856 hlog.py:18] train/00149/eval_val/114{0.00s}
I1202 23:35:09.345846 140353657689856 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1202 23:35:09.345946 140353657689856 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1202 23:35:09.346039 140353657689856 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1202 23:35:09.346120 140353657689856 hlog.py:32] train/00149/eval_val/115/corr False
I1202 23:35:09.346195 140353657689856 hlog.py:32] train/00149/eval_val/115 
I1202 23:35:09.346268 140353657689856 hlog.py:18] train/00149/eval_val/115{0.00s}
I1202 23:35:09.346363 140353657689856 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1202 23:35:09.346612 140353657689856 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.346711 140353657689856 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1202 23:35:09.346793 140353657689856 hlog.py:32] train/00149/eval_val/116/corr True
I1202 23:35:09.346868 140353657689856 hlog.py:32] train/00149/eval_val/116 
I1202 23:35:09.346942 140353657689856 hlog.py:18] train/00149/eval_val/116{0.00s}
I1202 23:35:09.347040 140353657689856 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1202 23:35:09.347143 140353657689856 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.347245 140353657689856 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.347327 140353657689856 hlog.py:32] train/00149/eval_val/117/corr True
I1202 23:35:09.347402 140353657689856 hlog.py:32] train/00149/eval_val/117 
I1202 23:35:09.347488 140353657689856 hlog.py:18] train/00149/eval_val/117{0.00s}
I1202 23:35:09.347585 140353657689856 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1202 23:35:09.347688 140353657689856 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.347784 140353657689856 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.347864 140353657689856 hlog.py:32] train/00149/eval_val/118/corr True
I1202 23:35:09.347940 140353657689856 hlog.py:32] train/00149/eval_val/118 
I1202 23:35:09.348013 140353657689856 hlog.py:18] train/00149/eval_val/118{0.00s}
I1202 23:35:09.348110 140353657689856 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1202 23:35:09.348213 140353657689856 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.348308 140353657689856 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1202 23:35:09.348389 140353657689856 hlog.py:32] train/00149/eval_val/119/corr True
I1202 23:35:09.348464 140353657689856 hlog.py:32] train/00149/eval_val/119 
I1202 23:35:09.348537 140353657689856 hlog.py:18] train/00149/eval_val/119{0.00s}
I1202 23:35:09.348630 140353657689856 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1202 23:35:09.348724 140353657689856 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1202 23:35:09.348812 140353657689856 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1202 23:35:09.348893 140353657689856 hlog.py:32] train/00149/eval_val/120/corr True
I1202 23:35:09.348968 140353657689856 hlog.py:32] train/00149/eval_val/120 
I1202 23:35:09.349041 140353657689856 hlog.py:18] train/00149/eval_val/120{0.00s}
I1202 23:35:09.349134 140353657689856 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1202 23:35:09.349228 140353657689856 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1202 23:35:09.349316 140353657689856 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1202 23:35:09.349396 140353657689856 hlog.py:32] train/00149/eval_val/121/corr True
I1202 23:35:09.349471 140353657689856 hlog.py:32] train/00149/eval_val/121 
I1202 23:35:09.349544 140353657689856 hlog.py:18] train/00149/eval_val/121{0.00s}
I1202 23:35:09.349640 140353657689856 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1202 23:35:09.349743 140353657689856 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1202 23:35:09.349838 140353657689856 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1202 23:35:09.349918 140353657689856 hlog.py:32] train/00149/eval_val/122/corr True
I1202 23:35:09.349993 140353657689856 hlog.py:32] train/00149/eval_val/122 
I1202 23:35:09.350066 140353657689856 hlog.py:18] train/00149/eval_val/122{0.00s}
I1202 23:35:09.350163 140353657689856 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1202 23:35:09.350267 140353657689856 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1202 23:35:09.350362 140353657689856 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1202 23:35:09.350452 140353657689856 hlog.py:32] train/00149/eval_val/123/corr True
I1202 23:35:09.350528 140353657689856 hlog.py:32] train/00149/eval_val/123 
I1202 23:35:09.350602 140353657689856 hlog.py:18] train/00149/eval_val/123{0.00s}
I1202 23:35:09.350698 140353657689856 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1202 23:35:09.350801 140353657689856 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1202 23:35:09.350897 140353657689856 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1202 23:35:09.350978 140353657689856 hlog.py:32] train/00149/eval_val/124/corr True
I1202 23:35:09.351052 140353657689856 hlog.py:32] train/00149/eval_val/124 
I1202 23:35:09.351126 140353657689856 hlog.py:18] train/00149/eval_val/124{0.00s}
I1202 23:35:09.351222 140353657689856 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1202 23:35:09.351325 140353657689856 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1202 23:35:09.351428 140353657689856 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1202 23:35:09.351510 140353657689856 hlog.py:32] train/00149/eval_val/125/corr True
I1202 23:35:09.351585 140353657689856 hlog.py:32] train/00149/eval_val/125 
I1202 23:35:09.351659 140353657689856 hlog.py:18] train/00149/eval_val/125{0.00s}
I1202 23:35:09.351754 140353657689856 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1202 23:35:09.351852 140353657689856 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.351943 140353657689856 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.352024 140353657689856 hlog.py:32] train/00149/eval_val/126/corr True
I1202 23:35:09.352098 140353657689856 hlog.py:32] train/00149/eval_val/126 
I1202 23:35:09.352172 140353657689856 hlog.py:18] train/00149/eval_val/126{0.00s}
I1202 23:35:09.352267 140353657689856 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1202 23:35:09.352364 140353657689856 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.352455 140353657689856 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.352535 140353657689856 hlog.py:32] train/00149/eval_val/127/corr True
I1202 23:35:09.352610 140353657689856 hlog.py:32] train/00149/eval_val/127 
I1202 23:35:09.352683 140353657689856 hlog.py:18] train/00149/eval_val/127{0.00s}
I1202 23:35:09.510298 140353657689856 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1202 23:35:09.510498 140353657689856 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.510604 140353657689856 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.510693 140353657689856 hlog.py:32] train/00149/eval_val/128/corr True
I1202 23:35:09.510772 140353657689856 hlog.py:32] train/00149/eval_val/128 
I1202 23:35:09.510851 140353657689856 hlog.py:18] train/00149/eval_val/128{0.00s}
I1202 23:35:09.510950 140353657689856 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1202 23:35:09.511051 140353657689856 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.511144 140353657689856 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.511237 140353657689856 hlog.py:32] train/00149/eval_val/129/corr True
I1202 23:35:09.511313 140353657689856 hlog.py:32] train/00149/eval_val/129 
I1202 23:35:09.511388 140353657689856 hlog.py:18] train/00149/eval_val/129{0.00s}
I1202 23:35:09.511496 140353657689856 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1202 23:35:09.511596 140353657689856 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.511687 140353657689856 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.511768 140353657689856 hlog.py:32] train/00149/eval_val/130/corr True
I1202 23:35:09.511842 140353657689856 hlog.py:32] train/00149/eval_val/130 
I1202 23:35:09.511917 140353657689856 hlog.py:18] train/00149/eval_val/130{0.00s}
I1202 23:35:09.512013 140353657689856 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1202 23:35:09.512111 140353657689856 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.512202 140353657689856 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.512283 140353657689856 hlog.py:32] train/00149/eval_val/131/corr True
I1202 23:35:09.512358 140353657689856 hlog.py:32] train/00149/eval_val/131 
I1202 23:35:09.512432 140353657689856 hlog.py:18] train/00149/eval_val/131{0.00s}
I1202 23:35:09.512527 140353657689856 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1202 23:35:09.512625 140353657689856 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.512716 140353657689856 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1202 23:35:09.512797 140353657689856 hlog.py:32] train/00149/eval_val/132/corr True
I1202 23:35:09.512872 140353657689856 hlog.py:32] train/00149/eval_val/132 
I1202 23:35:09.512945 140353657689856 hlog.py:18] train/00149/eval_val/132{0.00s}
I1202 23:35:09.513038 140353657689856 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1202 23:35:09.513144 140353657689856 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _high_point ( B , A ) , _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1202 23:35:09.513237 140353657689856 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1202 23:35:09.513317 140353657689856 hlog.py:32] train/00149/eval_val/133/corr False
I1202 23:35:09.513392 140353657689856 hlog.py:32] train/00149/eval_val/133 
I1202 23:35:09.513466 140353657689856 hlog.py:18] train/00149/eval_val/133{0.00s}
I1202 23:35:09.513566 140353657689856 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1202 23:35:09.513674 140353657689856 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.513772 140353657689856 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.513854 140353657689856 hlog.py:32] train/00149/eval_val/134/corr True
I1202 23:35:09.513928 140353657689856 hlog.py:32] train/00149/eval_val/134 
I1202 23:35:09.514002 140353657689856 hlog.py:18] train/00149/eval_val/134{0.00s}
I1202 23:35:09.514101 140353657689856 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1202 23:35:09.514209 140353657689856 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.514313 140353657689856 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1202 23:35:09.514395 140353657689856 hlog.py:32] train/00149/eval_val/135/corr True
I1202 23:35:09.514470 140353657689856 hlog.py:32] train/00149/eval_val/135 
I1202 23:35:09.514544 140353657689856 hlog.py:18] train/00149/eval_val/135{0.00s}
I1202 23:35:09.514640 140353657689856 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1202 23:35:09.514741 140353657689856 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.514836 140353657689856 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.514915 140353657689856 hlog.py:32] train/00149/eval_val/136/corr True
I1202 23:35:09.514990 140353657689856 hlog.py:32] train/00149/eval_val/136 
I1202 23:35:09.515063 140353657689856 hlog.py:18] train/00149/eval_val/136{0.00s}
I1202 23:35:09.515160 140353657689856 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1202 23:35:09.515261 140353657689856 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.515355 140353657689856 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.515442 140353657689856 hlog.py:32] train/00149/eval_val/137/corr True
I1202 23:35:09.515518 140353657689856 hlog.py:32] train/00149/eval_val/137 
I1202 23:35:09.515593 140353657689856 hlog.py:18] train/00149/eval_val/137{0.00s}
I1202 23:35:09.515688 140353657689856 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1202 23:35:09.515790 140353657689856 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.515883 140353657689856 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.515963 140353657689856 hlog.py:32] train/00149/eval_val/138/corr True
I1202 23:35:09.516038 140353657689856 hlog.py:32] train/00149/eval_val/138 
I1202 23:35:09.516111 140353657689856 hlog.py:18] train/00149/eval_val/138{0.00s}
I1202 23:35:09.516207 140353657689856 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1202 23:35:09.516308 140353657689856 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.516401 140353657689856 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1202 23:35:09.516481 140353657689856 hlog.py:32] train/00149/eval_val/139/corr True
I1202 23:35:09.516556 140353657689856 hlog.py:32] train/00149/eval_val/139 
I1202 23:35:09.516630 140353657689856 hlog.py:18] train/00149/eval_val/139{0.00s}
I1202 23:35:09.516723 140353657689856 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1202 23:35:09.516828 140353657689856 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1202 23:35:09.516926 140353657689856 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1202 23:35:09.517008 140353657689856 hlog.py:32] train/00149/eval_val/140/corr False
I1202 23:35:09.517083 140353657689856 hlog.py:32] train/00149/eval_val/140 
I1202 23:35:09.517156 140353657689856 hlog.py:18] train/00149/eval_val/140{0.00s}
I1202 23:35:09.517247 140353657689856 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1202 23:35:09.517353 140353657689856 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1202 23:35:09.517457 140353657689856 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1202 23:35:09.517539 140353657689856 hlog.py:32] train/00149/eval_val/141/corr False
I1202 23:35:09.517614 140353657689856 hlog.py:32] train/00149/eval_val/141 
I1202 23:35:09.517688 140353657689856 hlog.py:18] train/00149/eval_val/141{0.00s}
I1202 23:35:09.517777 140353657689856 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1202 23:35:09.517877 140353657689856 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1202 23:35:09.517970 140353657689856 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1202 23:35:09.518050 140353657689856 hlog.py:32] train/00149/eval_val/142/corr False
I1202 23:35:09.518125 140353657689856 hlog.py:32] train/00149/eval_val/142 
I1202 23:35:09.518198 140353657689856 hlog.py:18] train/00149/eval_val/142{0.00s}
I1202 23:35:09.518288 140353657689856 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1202 23:35:09.518387 140353657689856 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1202 23:35:09.518479 140353657689856 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1202 23:35:09.518560 140353657689856 hlog.py:32] train/00149/eval_val/143/corr False
I1202 23:35:09.518635 140353657689856 hlog.py:32] train/00149/eval_val/143 
I1202 23:35:09.518708 140353657689856 hlog.py:18] train/00149/eval_val/143{0.00s}
I1202 23:35:09.518798 140353657689856 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1202 23:35:09.518892 140353657689856 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1202 23:35:09.518983 140353657689856 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1202 23:35:09.519063 140353657689856 hlog.py:32] train/00149/eval_val/144/corr False
I1202 23:35:09.519138 140353657689856 hlog.py:32] train/00149/eval_val/144 
I1202 23:35:09.519212 140353657689856 hlog.py:18] train/00149/eval_val/144{0.00s}
I1202 23:35:09.519302 140353657689856 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1202 23:35:09.519409 140353657689856 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _loc ( A , B ) , _major ( B ) , _city ( B ) ) ) )
I1202 23:35:09.519504 140353657689856 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1202 23:35:09.519585 140353657689856 hlog.py:32] train/00149/eval_val/145/corr False
I1202 23:35:09.519660 140353657689856 hlog.py:32] train/00149/eval_val/145 
I1202 23:35:09.519734 140353657689856 hlog.py:18] train/00149/eval_val/145{0.00s}
I1202 23:35:09.519829 140353657689856 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1202 23:35:09.519983 140353657689856 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _elevation ( B , A ) , _largest ( B , ( _state ( B ) , _traverse ( C , B ) , _largest ( C , ( _state ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) ) ) )
I1202 23:35:09.520088 140353657689856 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1202 23:35:09.520170 140353657689856 hlog.py:32] train/00149/eval_val/146/corr False
I1202 23:35:09.520245 140353657689856 hlog.py:32] train/00149/eval_val/146 
I1202 23:35:09.520318 140353657689856 hlog.py:18] train/00149/eval_val/146{0.00s}
I1202 23:35:09.520416 140353657689856 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1202 23:35:09.520526 140353657689856 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1202 23:35:09.520622 140353657689856 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1202 23:35:09.520703 140353657689856 hlog.py:32] train/00149/eval_val/147/corr True
I1202 23:35:09.520778 140353657689856 hlog.py:32] train/00149/eval_val/147 
I1202 23:35:09.520851 140353657689856 hlog.py:18] train/00149/eval_val/147{0.00s}
I1202 23:35:09.520934 140353657689856 hlog.py:32] train/00149/eval_val/acc 0.5608
I1202 23:35:09.553545 140353657689856 hlog.py:18] train/00149{17.22s}
I1202 23:35:09.555878 140353657689856 hlog.py:18] train{2517.94s}
