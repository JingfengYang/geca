I1203 03:04:53.643086 140521014179584 hlog.py:24] # --noTEST
I1203 03:04:53.643463 140521014179584 hlog.py:24] # --seed=9
I1203 03:04:53.643552 140521014179584 hlog.py:24] # --dataset=semparse
I1203 03:04:53.643633 140521014179584 hlog.py:24] # --model_dir=model
I1203 03:04:53.643722 140521014179584 hlog.py:24] # --n_checkpoint=10
I1203 03:04:53.643795 140521014179584 hlog.py:24] # --nologtostderr
I1203 03:04:53.643868 140521014179584 hlog.py:24] # --noalsologtostderr
I1203 03:04:53.643939 140521014179584 hlog.py:24] # --log_dir=
I1203 03:04:53.644011 140521014179584 hlog.py:24] # --verbosity=0
I1203 03:04:53.644081 140521014179584 hlog.py:24] # --verbosity=0
I1203 03:04:53.644151 140521014179584 hlog.py:24] # --stderrthreshold=fatal
I1203 03:04:53.644222 140521014179584 hlog.py:24] # --showprefixforinfo
I1203 03:04:53.644292 140521014179584 hlog.py:24] # --nodedup
I1203 03:04:53.644361 140521014179584 hlog.py:24] # --nobuild_comp_table
I1203 03:04:53.644431 140521014179584 hlog.py:24] # --semparse_split=query
I1203 03:04:53.644500 140521014179584 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 03:04:53.644570 140521014179584 hlog.py:24] # --semparse_mrl=logic
I1203 03:04:53.644640 140521014179584 hlog.py:24] # --val_fold=8
I1203 03:04:53.644710 140521014179584 hlog.py:24] # --test_fold=9
I1203 03:04:53.644779 140521014179584 hlog.py:24] # --n_emb=64
I1203 03:04:53.644850 140521014179584 hlog.py:24] # --n_enc=512
I1203 03:04:53.644919 140521014179584 hlog.py:24] # --dropout=0.5
I1203 03:04:53.644989 140521014179584 hlog.py:24] # --copy_sup
I1203 03:04:53.645058 140521014179584 hlog.py:24] # --n_epochs=150
I1203 03:04:53.645128 140521014179584 hlog.py:24] # --n_epoch_batches=32
I1203 03:04:53.645197 140521014179584 hlog.py:24] # --n_batch=64
I1203 03:04:53.645267 140521014179584 hlog.py:24] # --lr=0.001
I1203 03:04:53.645336 140521014179584 hlog.py:24] # --clip=1.0
I1203 03:04:53.645406 140521014179584 hlog.py:24] # --sched_factor=0.5
I1203 03:04:53.645475 140521014179584 hlog.py:24] # --norun_with_pdb
I1203 03:04:53.645545 140521014179584 hlog.py:24] # --nopdb_post_mortem
I1203 03:04:53.645613 140521014179584 hlog.py:24] # --norun_with_profiling
I1203 03:04:53.645683 140521014179584 hlog.py:24] # --use_cprofile_for_profiling
I1203 03:04:53.645752 140521014179584 hlog.py:24] # --noonly_check_args
I1203 03:04:53.645822 140521014179584 hlog.py:24] # --aug_ratio=0.0
I1203 03:04:53.645891 140521014179584 hlog.py:24] # --noinvert
I1203 03:04:53.645960 140521014179584 hlog.py:24] # --nohelp
I1203 03:04:53.646030 140521014179584 hlog.py:24] # --nohelp
I1203 03:04:53.646100 140521014179584 hlog.py:24] # --nohelpshort
I1203 03:04:53.646168 140521014179584 hlog.py:24] # --nohelpfull
I1203 03:04:53.646238 140521014179584 hlog.py:24] # --nohelpxml
I1203 03:04:53.646307 140521014179584 hlog.py:24] # 
I1203 03:04:53.668617 140521014179584 hlog.py:32] train 543
I1203 03:04:53.668724 140521014179584 hlog.py:32] aug 0
I1203 03:05:09.804772 140521014179584 hlog.py:32] train/00000/loss 3.2675
I1203 03:05:17.529363 140521014179584 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 03:05:18.558064 140521014179584 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 03:05:18.558785 140521014179584 hlog.py:18] train/00000{21.12s}
I1203 03:05:30.217367 140521014179584 hlog.py:32] train/00001/loss 1.1696
I1203 03:05:32.685607 140521014179584 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 03:05:33.105354 140521014179584 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 03:05:33.105959 140521014179584 hlog.py:18] train/00001{14.55s}
I1203 03:05:45.116884 140521014179584 hlog.py:32] train/00002/loss 0.6919
I1203 03:05:47.891686 140521014179584 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 03:05:48.397277 140521014179584 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 03:05:48.397771 140521014179584 hlog.py:18] train/00002{15.29s}
I1203 03:06:00.034392 140521014179584 hlog.py:32] train/00003/loss 0.5739
I1203 03:06:03.561491 140521014179584 hlog.py:32] train/00003/eval_train/acc 0.0350
I1203 03:06:04.295652 140521014179584 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 03:06:04.296165 140521014179584 hlog.py:18] train/00003{15.90s}
I1203 03:06:15.504700 140521014179584 hlog.py:32] train/00004/loss 0.4858
I1203 03:06:18.456016 140521014179584 hlog.py:32] train/00004/eval_train/acc 0.1150
I1203 03:06:19.168659 140521014179584 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 03:06:19.169270 140521014179584 hlog.py:18] train/00004{14.87s}
I1203 03:06:31.019161 140521014179584 hlog.py:32] train/00005/loss 0.4122
I1203 03:06:34.347995 140521014179584 hlog.py:32] train/00005/eval_train/acc 0.1110
I1203 03:06:35.160374 140521014179584 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 03:06:35.160857 140521014179584 hlog.py:18] train/00005{15.99s}
I1203 03:06:46.366914 140521014179584 hlog.py:32] train/00006/loss 0.3655
I1203 03:06:51.437844 140521014179584 hlog.py:32] train/00006/eval_train/acc 0.2220
I1203 03:06:52.534861 140521014179584 hlog.py:32] train/00006/eval_val/acc 0.0000
I1203 03:06:52.535658 140521014179584 hlog.py:18] train/00006{17.37s}
I1203 03:07:04.168798 140521014179584 hlog.py:32] train/00007/loss 0.2984
I1203 03:07:09.239937 140521014179584 hlog.py:32] train/00007/eval_train/acc 0.2530
I1203 03:07:10.008666 140521014179584 hlog.py:32] train/00007/eval_val/acc 0.0000
I1203 03:07:10.009207 140521014179584 hlog.py:18] train/00007{17.47s}
I1203 03:07:22.516280 140521014179584 hlog.py:32] train/00008/loss 0.2730
I1203 03:07:26.073811 140521014179584 hlog.py:32] train/00008/eval_train/acc 0.2910
I1203 03:07:26.900492 140521014179584 hlog.py:32] train/00008/eval_val/acc 0.0270
I1203 03:07:26.900957 140521014179584 hlog.py:18] train/00008{16.89s}
I1203 03:07:40.078100 140521014179584 hlog.py:32] train/00009/loss 0.2446
I1203 03:07:46.257703 140521014179584 hlog.py:32] train/00009/eval_train/acc 0.4020
I1203 03:07:47.023206 140521014179584 hlog.py:32] train/00009/eval_val/acc 0.0203
I1203 03:07:47.140492 140521014179584 hlog.py:18] train/00009{20.24s}
I1203 03:07:59.556200 140521014179584 hlog.py:32] train/00010/loss 0.2278
I1203 03:08:04.257663 140521014179584 hlog.py:32] train/00010/eval_train/acc 0.4730
I1203 03:08:05.154700 140521014179584 hlog.py:32] train/00010/eval_val/acc 0.0270
I1203 03:08:05.155306 140521014179584 hlog.py:18] train/00010{18.01s}
I1203 03:08:16.804719 140521014179584 hlog.py:32] train/00011/loss 0.1954
I1203 03:08:21.633062 140521014179584 hlog.py:32] train/00011/eval_train/acc 0.4790
I1203 03:08:22.597035 140521014179584 hlog.py:32] train/00011/eval_val/acc 0.1081
I1203 03:08:22.597529 140521014179584 hlog.py:18] train/00011{17.44s}
I1203 03:08:34.464698 140521014179584 hlog.py:32] train/00012/loss 0.2018
I1203 03:08:38.500708 140521014179584 hlog.py:32] train/00012/eval_train/acc 0.4980
I1203 03:08:39.107116 140521014179584 hlog.py:32] train/00012/eval_val/acc 0.1149
I1203 03:08:39.107632 140521014179584 hlog.py:18] train/00012{16.51s}
I1203 03:08:51.163816 140521014179584 hlog.py:32] train/00013/loss 0.1749
I1203 03:08:56.091136 140521014179584 hlog.py:32] train/00013/eval_train/acc 0.5370
I1203 03:08:56.730788 140521014179584 hlog.py:32] train/00013/eval_val/acc 0.1081
I1203 03:08:56.731283 140521014179584 hlog.py:18] train/00013{17.62s}
I1203 03:09:09.707748 140521014179584 hlog.py:32] train/00014/loss 0.1581
I1203 03:09:14.452905 140521014179584 hlog.py:32] train/00014/eval_train/acc 0.6550
I1203 03:09:15.259929 140521014179584 hlog.py:32] train/00014/eval_val/acc 0.1216
I1203 03:09:15.260465 140521014179584 hlog.py:18] train/00014{18.53s}
I1203 03:09:27.234546 140521014179584 hlog.py:32] train/00015/loss 0.1305
I1203 03:09:31.497865 140521014179584 hlog.py:32] train/00015/eval_train/acc 0.6570
I1203 03:09:32.100407 140521014179584 hlog.py:32] train/00015/eval_val/acc 0.1419
I1203 03:09:32.101080 140521014179584 hlog.py:18] train/00015{16.84s}
I1203 03:09:44.790330 140521014179584 hlog.py:32] train/00016/loss 0.1058
I1203 03:09:48.597354 140521014179584 hlog.py:32] train/00016/eval_train/acc 0.7560
I1203 03:09:49.173035 140521014179584 hlog.py:32] train/00016/eval_val/acc 0.2095
I1203 03:09:49.173550 140521014179584 hlog.py:18] train/00016{17.07s}
I1203 03:10:00.922816 140521014179584 hlog.py:32] train/00017/loss 0.0914
I1203 03:10:04.935663 140521014179584 hlog.py:32] train/00017/eval_train/acc 0.6960
I1203 03:10:05.553350 140521014179584 hlog.py:32] train/00017/eval_val/acc 0.1486
I1203 03:10:05.553942 140521014179584 hlog.py:18] train/00017{16.38s}
I1203 03:10:17.412773 140521014179584 hlog.py:32] train/00018/loss 0.0867
I1203 03:10:21.573544 140521014179584 hlog.py:32] train/00018/eval_train/acc 0.7760
I1203 03:10:22.137888 140521014179584 hlog.py:32] train/00018/eval_val/acc 0.2162
I1203 03:10:22.138388 140521014179584 hlog.py:18] train/00018{16.58s}
I1203 03:10:34.220005 140521014179584 hlog.py:32] train/00019/loss 0.0994
I1203 03:10:38.132213 140521014179584 hlog.py:32] train/00019/eval_train/acc 0.7450
I1203 03:10:38.758419 140521014179584 hlog.py:32] train/00019/eval_val/acc 0.2500
I1203 03:10:38.863950 140521014179584 hlog.py:18] train/00019{16.73s}
I1203 03:10:51.962790 140521014179584 hlog.py:32] train/00020/loss 0.0904
I1203 03:10:55.646612 140521014179584 hlog.py:32] train/00020/eval_train/acc 0.7770
I1203 03:10:56.190710 140521014179584 hlog.py:32] train/00020/eval_val/acc 0.3041
I1203 03:10:56.191210 140521014179584 hlog.py:18] train/00020{17.33s}
I1203 03:11:08.002823 140521014179584 hlog.py:32] train/00021/loss 0.0766
I1203 03:11:13.315761 140521014179584 hlog.py:32] train/00021/eval_train/acc 0.8140
I1203 03:11:13.887868 140521014179584 hlog.py:32] train/00021/eval_val/acc 0.2095
I1203 03:11:13.888326 140521014179584 hlog.py:18] train/00021{17.70s}
I1203 03:11:26.728886 140521014179584 hlog.py:32] train/00022/loss 0.0832
I1203 03:11:30.509224 140521014179584 hlog.py:32] train/00022/eval_train/acc 0.8060
I1203 03:11:31.040884 140521014179584 hlog.py:32] train/00022/eval_val/acc 0.2905
I1203 03:11:31.041360 140521014179584 hlog.py:18] train/00022{17.15s}
I1203 03:11:43.117023 140521014179584 hlog.py:32] train/00023/loss 0.0759
I1203 03:11:46.737255 140521014179584 hlog.py:32] train/00023/eval_train/acc 0.8090
I1203 03:11:47.266625 140521014179584 hlog.py:32] train/00023/eval_val/acc 0.3716
I1203 03:11:47.267149 140521014179584 hlog.py:18] train/00023{16.23s}
I1203 03:11:59.677758 140521014179584 hlog.py:32] train/00024/loss 0.0688
I1203 03:12:03.333368 140521014179584 hlog.py:32] train/00024/eval_train/acc 0.8560
I1203 03:12:03.889337 140521014179584 hlog.py:32] train/00024/eval_val/acc 0.2838
I1203 03:12:03.889860 140521014179584 hlog.py:18] train/00024{16.62s}
I1203 03:12:15.564639 140521014179584 hlog.py:32] train/00025/loss 0.0565
I1203 03:12:19.328319 140521014179584 hlog.py:32] train/00025/eval_train/acc 0.8510
I1203 03:12:19.916506 140521014179584 hlog.py:32] train/00025/eval_val/acc 0.2635
I1203 03:12:19.917014 140521014179584 hlog.py:18] train/00025{16.03s}
I1203 03:12:32.690200 140521014179584 hlog.py:32] train/00026/loss 0.0504
I1203 03:12:36.904842 140521014179584 hlog.py:32] train/00026/eval_train/acc 0.8900
I1203 03:12:37.430425 140521014179584 hlog.py:32] train/00026/eval_val/acc 0.2365
I1203 03:12:37.430924 140521014179584 hlog.py:18] train/00026{17.51s}
I1203 03:12:49.436301 140521014179584 hlog.py:32] train/00027/loss 0.0466
I1203 03:12:53.018984 140521014179584 hlog.py:32] train/00027/eval_train/acc 0.8970
I1203 03:12:53.545338 140521014179584 hlog.py:32] train/00027/eval_val/acc 0.2432
I1203 03:12:53.546041 140521014179584 hlog.py:18] train/00027{16.11s}
I1203 03:13:04.916374 140521014179584 hlog.py:32] train/00028/loss 0.0388
I1203 03:13:08.677876 140521014179584 hlog.py:32] train/00028/eval_train/acc 0.9170
I1203 03:13:09.219636 140521014179584 hlog.py:32] train/00028/eval_val/acc 0.3176
I1203 03:13:09.220148 140521014179584 hlog.py:18] train/00028{15.67s}
I1203 03:13:21.658869 140521014179584 hlog.py:32] train/00029/loss 0.0363
I1203 03:13:25.294045 140521014179584 hlog.py:32] train/00029/eval_train/acc 0.9310
I1203 03:13:25.849892 140521014179584 hlog.py:32] train/00029/eval_val/acc 0.2770
I1203 03:13:25.881155 140521014179584 hlog.py:18] train/00029{16.66s}
I1203 03:13:37.262202 140521014179584 hlog.py:32] train/00030/loss 0.0332
I1203 03:13:40.968247 140521014179584 hlog.py:32] train/00030/eval_train/acc 0.9410
I1203 03:13:41.509289 140521014179584 hlog.py:32] train/00030/eval_val/acc 0.3243
I1203 03:13:41.509743 140521014179584 hlog.py:18] train/00030{15.63s}
I1203 03:13:52.924305 140521014179584 hlog.py:32] train/00031/loss 0.0492
I1203 03:13:56.721642 140521014179584 hlog.py:32] train/00031/eval_train/acc 0.8880
I1203 03:13:57.253499 140521014179584 hlog.py:32] train/00031/eval_val/acc 0.3108
I1203 03:13:57.253975 140521014179584 hlog.py:18] train/00031{15.74s}
I1203 03:14:10.164489 140521014179584 hlog.py:32] train/00032/loss 0.0698
I1203 03:14:13.946101 140521014179584 hlog.py:32] train/00032/eval_train/acc 0.8840
I1203 03:14:14.522114 140521014179584 hlog.py:32] train/00032/eval_val/acc 0.3243
I1203 03:14:14.522519 140521014179584 hlog.py:18] train/00032{17.27s}
I1203 03:14:26.853582 140521014179584 hlog.py:32] train/00033/loss 0.0514
I1203 03:14:30.551615 140521014179584 hlog.py:32] train/00033/eval_train/acc 0.9110
I1203 03:14:31.128078 140521014179584 hlog.py:32] train/00033/eval_val/acc 0.3514
I1203 03:14:31.128583 140521014179584 hlog.py:18] train/00033{16.61s}
I1203 03:14:42.800082 140521014179584 hlog.py:32] train/00034/loss 0.0374
I1203 03:14:47.642137 140521014179584 hlog.py:32] train/00034/eval_train/acc 0.9400
I1203 03:14:48.178843 140521014179584 hlog.py:32] train/00034/eval_val/acc 0.3581
I1203 03:14:48.179501 140521014179584 hlog.py:18] train/00034{17.05s}
I1203 03:15:00.653009 140521014179584 hlog.py:32] train/00035/loss 0.0339
I1203 03:15:04.394788 140521014179584 hlog.py:32] train/00035/eval_train/acc 0.9710
I1203 03:15:05.002143 140521014179584 hlog.py:32] train/00035/eval_val/acc 0.3514
I1203 03:15:05.002593 140521014179584 hlog.py:18] train/00035{16.82s}
I1203 03:15:16.919828 140521014179584 hlog.py:32] train/00036/loss 0.0231
I1203 03:15:20.719125 140521014179584 hlog.py:32] train/00036/eval_train/acc 0.9800
I1203 03:15:21.300179 140521014179584 hlog.py:32] train/00036/eval_val/acc 0.3716
I1203 03:15:21.300677 140521014179584 hlog.py:18] train/00036{16.30s}
I1203 03:15:33.948338 140521014179584 hlog.py:32] train/00037/loss 0.0225
I1203 03:15:37.895726 140521014179584 hlog.py:32] train/00037/eval_train/acc 0.9740
I1203 03:15:38.449953 140521014179584 hlog.py:32] train/00037/eval_val/acc 0.3919
I1203 03:15:38.450442 140521014179584 hlog.py:18] train/00037{17.15s}
I1203 03:15:50.049839 140521014179584 hlog.py:32] train/00038/loss 0.0224
I1203 03:15:54.000247 140521014179584 hlog.py:32] train/00038/eval_train/acc 0.9760
I1203 03:15:54.567580 140521014179584 hlog.py:32] train/00038/eval_val/acc 0.3716
I1203 03:15:54.568114 140521014179584 hlog.py:18] train/00038{16.12s}
I1203 03:16:05.714514 140521014179584 hlog.py:32] train/00039/loss 0.0194
I1203 03:16:09.596975 140521014179584 hlog.py:32] train/00039/eval_train/acc 0.9820
I1203 03:16:10.200193 140521014179584 hlog.py:32] train/00039/eval_val/acc 0.3851
I1203 03:16:10.256185 140521014179584 hlog.py:18] train/00039{15.69s}
I1203 03:16:22.462143 140521014179584 hlog.py:32] train/00040/loss 0.0180
I1203 03:16:26.178866 140521014179584 hlog.py:32] train/00040/eval_train/acc 0.9790
I1203 03:16:26.730481 140521014179584 hlog.py:32] train/00040/eval_val/acc 0.3108
I1203 03:16:26.730985 140521014179584 hlog.py:18] train/00040{16.47s}
I1203 03:16:38.075646 140521014179584 hlog.py:32] train/00041/loss 0.0148
I1203 03:16:41.826527 140521014179584 hlog.py:32] train/00041/eval_train/acc 0.9850
I1203 03:16:42.427015 140521014179584 hlog.py:32] train/00041/eval_val/acc 0.3176
I1203 03:16:42.427575 140521014179584 hlog.py:18] train/00041{15.70s}
I1203 03:16:54.111010 140521014179584 hlog.py:32] train/00042/loss 0.0145
I1203 03:16:58.509126 140521014179584 hlog.py:32] train/00042/eval_train/acc 0.9890
I1203 03:16:59.066643 140521014179584 hlog.py:32] train/00042/eval_val/acc 0.3649
I1203 03:16:59.067137 140521014179584 hlog.py:18] train/00042{16.64s}
I1203 03:17:10.142172 140521014179584 hlog.py:32] train/00043/loss 0.0127
I1203 03:17:14.298483 140521014179584 hlog.py:32] train/00043/eval_train/acc 0.9810
I1203 03:17:14.884810 140521014179584 hlog.py:32] train/00043/eval_val/acc 0.4122
I1203 03:17:14.885301 140521014179584 hlog.py:18] train/00043{15.82s}
I1203 03:17:26.949348 140521014179584 hlog.py:32] train/00044/loss 0.0140
I1203 03:17:31.200754 140521014179584 hlog.py:32] train/00044/eval_train/acc 0.9980
I1203 03:17:31.753265 140521014179584 hlog.py:32] train/00044/eval_val/acc 0.3176
I1203 03:17:31.753723 140521014179584 hlog.py:18] train/00044{16.87s}
I1203 03:17:44.542595 140521014179584 hlog.py:32] train/00045/loss 0.0133
I1203 03:17:48.448561 140521014179584 hlog.py:32] train/00045/eval_train/acc 0.9780
I1203 03:17:49.043020 140521014179584 hlog.py:32] train/00045/eval_val/acc 0.3581
I1203 03:17:49.043525 140521014179584 hlog.py:18] train/00045{17.29s}
I1203 03:18:00.406357 140521014179584 hlog.py:32] train/00046/loss 0.0125
I1203 03:18:04.278714 140521014179584 hlog.py:32] train/00046/eval_train/acc 0.9930
I1203 03:18:04.897108 140521014179584 hlog.py:32] train/00046/eval_val/acc 0.3851
I1203 03:18:04.897798 140521014179584 hlog.py:18] train/00046{15.85s}
I1203 03:18:16.769708 140521014179584 hlog.py:32] train/00047/loss 0.0124
I1203 03:18:20.523519 140521014179584 hlog.py:32] train/00047/eval_train/acc 0.9900
I1203 03:18:21.056247 140521014179584 hlog.py:32] train/00047/eval_val/acc 0.3649
I1203 03:18:21.056754 140521014179584 hlog.py:18] train/00047{16.16s}
I1203 03:18:33.253500 140521014179584 hlog.py:32] train/00048/loss 0.0121
I1203 03:18:37.312369 140521014179584 hlog.py:32] train/00048/eval_train/acc 0.9920
I1203 03:18:37.919012 140521014179584 hlog.py:32] train/00048/eval_val/acc 0.3919
I1203 03:18:37.919767 140521014179584 hlog.py:18] train/00048{16.86s}
I1203 03:18:50.351254 140521014179584 hlog.py:32] train/00049/loss 0.0299
I1203 03:18:54.196953 140521014179584 hlog.py:32] train/00049/eval_train/acc 0.9860
I1203 03:18:54.777773 140521014179584 hlog.py:32] train/00049/eval_val/acc 0.3514
I1203 03:18:54.808646 140521014179584 hlog.py:18] train/00049{16.89s}
I1203 03:19:06.977581 140521014179584 hlog.py:32] train/00050/loss 0.0110
I1203 03:19:10.907806 140521014179584 hlog.py:32] train/00050/eval_train/acc 0.9960
I1203 03:19:11.495788 140521014179584 hlog.py:32] train/00050/eval_val/acc 0.3919
I1203 03:19:11.496280 140521014179584 hlog.py:18] train/00050{16.69s}
I1203 03:19:24.701131 140521014179584 hlog.py:32] train/00051/loss 0.0137
I1203 03:19:28.595655 140521014179584 hlog.py:32] train/00051/eval_train/acc 0.9940
I1203 03:19:29.194818 140521014179584 hlog.py:32] train/00051/eval_val/acc 0.3581
I1203 03:19:29.195341 140521014179584 hlog.py:18] train/00051{17.70s}
I1203 03:19:42.019489 140521014179584 hlog.py:32] train/00052/loss 0.0120
I1203 03:19:46.363081 140521014179584 hlog.py:32] train/00052/eval_train/acc 0.9860
I1203 03:19:46.902588 140521014179584 hlog.py:32] train/00052/eval_val/acc 0.3514
I1203 03:19:46.903084 140521014179584 hlog.py:18] train/00052{17.71s}
I1203 03:19:59.780358 140521014179584 hlog.py:32] train/00053/loss 0.0104
I1203 03:20:03.661301 140521014179584 hlog.py:32] train/00053/eval_train/acc 0.9920
I1203 03:20:04.300815 140521014179584 hlog.py:32] train/00053/eval_val/acc 0.3851
I1203 03:20:04.301356 140521014179584 hlog.py:18] train/00053{17.40s}
I1203 03:20:16.862334 140521014179584 hlog.py:32] train/00054/loss 0.0087
I1203 03:20:20.580474 140521014179584 hlog.py:32] train/00054/eval_train/acc 0.9950
I1203 03:20:21.129772 140521014179584 hlog.py:32] train/00054/eval_val/acc 0.3986
I1203 03:20:21.130325 140521014179584 hlog.py:18] train/00054{16.83s}
I1203 03:20:32.910321 140521014179584 hlog.py:32] train/00055/loss 0.0085
I1203 03:20:36.849515 140521014179584 hlog.py:32] train/00055/eval_train/acc 0.9950
I1203 03:20:37.446638 140521014179584 hlog.py:32] train/00055/eval_val/acc 0.3919
I1203 03:20:37.447261 140521014179584 hlog.py:18] train/00055{16.32s}
I1203 03:20:49.893801 140521014179584 hlog.py:32] train/00056/loss 0.0071
I1203 03:20:53.775421 140521014179584 hlog.py:32] train/00056/eval_train/acc 0.9990
I1203 03:20:54.349533 140521014179584 hlog.py:32] train/00056/eval_val/acc 0.3919
I1203 03:20:54.350010 140521014179584 hlog.py:18] train/00056{16.90s}
I1203 03:21:06.897456 140521014179584 hlog.py:32] train/00057/loss 0.0075
I1203 03:21:10.784775 140521014179584 hlog.py:32] train/00057/eval_train/acc 0.9980
I1203 03:21:11.345817 140521014179584 hlog.py:32] train/00057/eval_val/acc 0.3716
I1203 03:21:11.346350 140521014179584 hlog.py:18] train/00057{17.00s}
I1203 03:21:22.870710 140521014179584 hlog.py:32] train/00058/loss 0.0073
I1203 03:21:26.620779 140521014179584 hlog.py:32] train/00058/eval_train/acc 0.9980
I1203 03:21:27.253994 140521014179584 hlog.py:32] train/00058/eval_val/acc 0.3514
I1203 03:21:27.254528 140521014179584 hlog.py:18] train/00058{15.91s}
I1203 03:21:39.144154 140521014179584 hlog.py:32] train/00059/loss 0.0061
I1203 03:21:43.094760 140521014179584 hlog.py:32] train/00059/eval_train/acc 0.9970
I1203 03:21:43.690605 140521014179584 hlog.py:32] train/00059/eval_val/acc 0.3784
I1203 03:21:43.720989 140521014179584 hlog.py:18] train/00059{16.47s}
I1203 03:21:55.922338 140521014179584 hlog.py:32] train/00060/loss 0.0110
I1203 03:21:59.856218 140521014179584 hlog.py:32] train/00060/eval_train/acc 0.9890
I1203 03:22:00.423804 140521014179584 hlog.py:32] train/00060/eval_val/acc 0.3919
I1203 03:22:00.424353 140521014179584 hlog.py:18] train/00060{16.70s}
I1203 03:22:12.885801 140521014179584 hlog.py:32] train/00061/loss 0.0074
I1203 03:22:16.982179 140521014179584 hlog.py:32] train/00061/eval_train/acc 0.9940
I1203 03:22:17.587336 140521014179584 hlog.py:32] train/00061/eval_val/acc 0.3716
I1203 03:22:17.587903 140521014179584 hlog.py:18] train/00061{17.16s}
I1203 03:22:30.027585 140521014179584 hlog.py:32] train/00062/loss 0.0067
I1203 03:22:33.952435 140521014179584 hlog.py:32] train/00062/eval_train/acc 0.9940
I1203 03:22:34.499501 140521014179584 hlog.py:32] train/00062/eval_val/acc 0.3581
I1203 03:22:34.500075 140521014179584 hlog.py:18] train/00062{16.91s}
I1203 03:22:45.776566 140521014179584 hlog.py:32] train/00063/loss 0.0065
I1203 03:22:49.705274 140521014179584 hlog.py:32] train/00063/eval_train/acc 0.9940
I1203 03:22:50.284648 140521014179584 hlog.py:32] train/00063/eval_val/acc 0.3581
I1203 03:22:50.285223 140521014179584 hlog.py:18] train/00063{15.79s}
I1203 03:23:02.122141 140521014179584 hlog.py:32] train/00064/loss 0.0060
I1203 03:23:06.283245 140521014179584 hlog.py:32] train/00064/eval_train/acc 0.9930
I1203 03:23:06.856814 140521014179584 hlog.py:32] train/00064/eval_val/acc 0.3716
I1203 03:23:06.857315 140521014179584 hlog.py:18] train/00064{16.57s}
I1203 03:23:19.381583 140521014179584 hlog.py:32] train/00065/loss 0.0060
I1203 03:23:23.170967 140521014179584 hlog.py:32] train/00065/eval_train/acc 0.9960
I1203 03:23:23.715219 140521014179584 hlog.py:32] train/00065/eval_val/acc 0.3716
I1203 03:23:23.715796 140521014179584 hlog.py:18] train/00065{16.86s}
I1203 03:23:34.863676 140521014179584 hlog.py:32] train/00066/loss 0.0060
I1203 03:23:38.957855 140521014179584 hlog.py:32] train/00066/eval_train/acc 0.9980
I1203 03:23:39.523550 140521014179584 hlog.py:32] train/00066/eval_val/acc 0.3649
I1203 03:23:39.524174 140521014179584 hlog.py:18] train/00066{15.81s}
I1203 03:23:52.609233 140521014179584 hlog.py:32] train/00067/loss 0.0064
I1203 03:23:56.464887 140521014179584 hlog.py:32] train/00067/eval_train/acc 0.9970
I1203 03:23:57.030101 140521014179584 hlog.py:32] train/00067/eval_val/acc 0.3514
I1203 03:23:57.030580 140521014179584 hlog.py:18] train/00067{17.51s}
I1203 03:24:08.778129 140521014179584 hlog.py:32] train/00068/loss 0.0051
I1203 03:24:12.597806 140521014179584 hlog.py:32] train/00068/eval_train/acc 0.9980
I1203 03:24:13.138741 140521014179584 hlog.py:32] train/00068/eval_val/acc 0.3581
I1203 03:24:13.139219 140521014179584 hlog.py:18] train/00068{16.11s}
I1203 03:24:26.156508 140521014179584 hlog.py:32] train/00069/loss 0.0056
I1203 03:24:29.784895 140521014179584 hlog.py:32] train/00069/eval_train/acc 1.0000
I1203 03:24:30.327320 140521014179584 hlog.py:32] train/00069/eval_val/acc 0.3649
I1203 03:24:30.358582 140521014179584 hlog.py:18] train/00069{17.22s}
I1203 03:24:42.699864 140521014179584 hlog.py:32] train/00070/loss 0.0052
I1203 03:24:46.590659 140521014179584 hlog.py:32] train/00070/eval_train/acc 0.9970
I1203 03:24:47.147273 140521014179584 hlog.py:32] train/00070/eval_val/acc 0.3649
I1203 03:24:47.147800 140521014179584 hlog.py:18] train/00070{16.79s}
I1203 03:24:59.373044 140521014179584 hlog.py:32] train/00071/loss 0.0045
I1203 03:25:03.106363 140521014179584 hlog.py:32] train/00071/eval_train/acc 0.9980
I1203 03:25:03.669066 140521014179584 hlog.py:32] train/00071/eval_val/acc 0.3851
I1203 03:25:03.669560 140521014179584 hlog.py:18] train/00071{16.52s}
I1203 03:25:15.365432 140521014179584 hlog.py:32] train/00072/loss 0.0048
I1203 03:25:19.344051 140521014179584 hlog.py:32] train/00072/eval_train/acc 0.9940
I1203 03:25:19.902191 140521014179584 hlog.py:32] train/00072/eval_val/acc 0.3851
I1203 03:25:19.902602 140521014179584 hlog.py:18] train/00072{16.23s}
I1203 03:25:33.328837 140521014179584 hlog.py:32] train/00073/loss 0.0050
I1203 03:25:37.233150 140521014179584 hlog.py:32] train/00073/eval_train/acc 0.9970
I1203 03:25:37.833697 140521014179584 hlog.py:32] train/00073/eval_val/acc 0.3581
I1203 03:25:37.834361 140521014179584 hlog.py:18] train/00073{17.93s}
I1203 03:25:49.944379 140521014179584 hlog.py:32] train/00074/loss 0.0043
I1203 03:25:53.776570 140521014179584 hlog.py:32] train/00074/eval_train/acc 0.9980
I1203 03:25:54.355880 140521014179584 hlog.py:32] train/00074/eval_val/acc 0.3649
I1203 03:25:54.356580 140521014179584 hlog.py:18] train/00074{16.52s}
I1203 03:26:06.736000 140521014179584 hlog.py:32] train/00075/loss 0.0044
I1203 03:26:10.503272 140521014179584 hlog.py:32] train/00075/eval_train/acc 0.9980
I1203 03:26:11.061318 140521014179584 hlog.py:32] train/00075/eval_val/acc 0.3716
I1203 03:26:11.061851 140521014179584 hlog.py:18] train/00075{16.71s}
I1203 03:26:24.775288 140521014179584 hlog.py:32] train/00076/loss 0.0090
I1203 03:26:28.723567 140521014179584 hlog.py:32] train/00076/eval_train/acc 0.9980
I1203 03:26:29.279562 140521014179584 hlog.py:32] train/00076/eval_val/acc 0.4054
I1203 03:26:29.280222 140521014179584 hlog.py:18] train/00076{18.22s}
I1203 03:26:41.638091 140521014179584 hlog.py:32] train/00077/loss 0.0039
I1203 03:26:45.587949 140521014179584 hlog.py:32] train/00077/eval_train/acc 0.9990
I1203 03:26:46.141215 140521014179584 hlog.py:32] train/00077/eval_val/acc 0.4054
I1203 03:26:46.141753 140521014179584 hlog.py:18] train/00077{16.86s}
I1203 03:26:58.188547 140521014179584 hlog.py:32] train/00078/loss 0.0048
I1203 03:27:02.247155 140521014179584 hlog.py:32] train/00078/eval_train/acc 0.9980
I1203 03:27:02.827091 140521014179584 hlog.py:32] train/00078/eval_val/acc 0.3986
I1203 03:27:02.827768 140521014179584 hlog.py:18] train/00078{16.69s}
I1203 03:27:15.275888 140521014179584 hlog.py:32] train/00079/loss 0.0048
I1203 03:27:19.663098 140521014179584 hlog.py:32] train/00079/eval_train/acc 0.9990
I1203 03:27:20.244239 140521014179584 hlog.py:32] train/00079/eval_val/acc 0.3919
I1203 03:27:20.275008 140521014179584 hlog.py:18] train/00079{17.45s}
I1203 03:27:33.048812 140521014179584 hlog.py:32] train/00080/loss 0.0044
I1203 03:27:37.050462 140521014179584 hlog.py:32] train/00080/eval_train/acc 0.9960
I1203 03:27:37.623348 140521014179584 hlog.py:32] train/00080/eval_val/acc 0.3919
I1203 03:27:37.624033 140521014179584 hlog.py:18] train/00080{17.35s}
I1203 03:27:49.754398 140521014179584 hlog.py:32] train/00081/loss 0.0041
I1203 03:27:53.313504 140521014179584 hlog.py:32] train/00081/eval_train/acc 1.0000
I1203 03:27:53.869618 140521014179584 hlog.py:32] train/00081/eval_val/acc 0.4054
I1203 03:27:53.870114 140521014179584 hlog.py:18] train/00081{16.25s}
I1203 03:28:06.142470 140521014179584 hlog.py:32] train/00082/loss 0.0042
I1203 03:28:10.225098 140521014179584 hlog.py:32] train/00082/eval_train/acc 0.9980
I1203 03:28:10.800010 140521014179584 hlog.py:32] train/00082/eval_val/acc 0.3986
I1203 03:28:10.800610 140521014179584 hlog.py:18] train/00082{16.93s}
I1203 03:28:23.839565 140521014179584 hlog.py:32] train/00083/loss 0.0040
I1203 03:28:27.727343 140521014179584 hlog.py:32] train/00083/eval_train/acc 1.0000
I1203 03:28:28.286619 140521014179584 hlog.py:32] train/00083/eval_val/acc 0.4054
I1203 03:28:28.287070 140521014179584 hlog.py:18] train/00083{17.49s}
I1203 03:28:40.734424 140521014179584 hlog.py:32] train/00084/loss 0.0037
I1203 03:28:45.013045 140521014179584 hlog.py:32] train/00084/eval_train/acc 0.9980
I1203 03:28:45.567659 140521014179584 hlog.py:32] train/00084/eval_val/acc 0.3851
I1203 03:28:45.568158 140521014179584 hlog.py:18] train/00084{17.28s}
I1203 03:28:58.660605 140521014179584 hlog.py:32] train/00085/loss 0.0041
I1203 03:29:02.227627 140521014179584 hlog.py:32] train/00085/eval_train/acc 0.9980
I1203 03:29:02.784296 140521014179584 hlog.py:32] train/00085/eval_val/acc 0.3784
I1203 03:29:02.784785 140521014179584 hlog.py:18] train/00085{17.22s}
I1203 03:29:15.012881 140521014179584 hlog.py:32] train/00086/loss 0.0042
I1203 03:29:19.218978 140521014179584 hlog.py:32] train/00086/eval_train/acc 0.9980
I1203 03:29:19.788882 140521014179584 hlog.py:32] train/00086/eval_val/acc 0.3784
I1203 03:29:19.789369 140521014179584 hlog.py:18] train/00086{17.00s}
I1203 03:29:31.869146 140521014179584 hlog.py:32] train/00087/loss 0.0039
I1203 03:29:36.040825 140521014179584 hlog.py:32] train/00087/eval_train/acc 0.9970
I1203 03:29:36.638827 140521014179584 hlog.py:32] train/00087/eval_val/acc 0.3784
I1203 03:29:36.639371 140521014179584 hlog.py:18] train/00087{16.85s}
I1203 03:29:48.918465 140521014179584 hlog.py:32] train/00088/loss 0.0038
I1203 03:29:52.481226 140521014179584 hlog.py:32] train/00088/eval_train/acc 0.9970
I1203 03:29:53.068427 140521014179584 hlog.py:32] train/00088/eval_val/acc 0.3919
I1203 03:29:53.068939 140521014179584 hlog.py:18] train/00088{16.43s}
I1203 03:30:05.648762 140521014179584 hlog.py:32] train/00089/loss 0.0034
I1203 03:30:09.426259 140521014179584 hlog.py:32] train/00089/eval_train/acc 0.9980
I1203 03:30:09.993972 140521014179584 hlog.py:32] train/00089/eval_val/acc 0.3851
I1203 03:30:10.024001 140521014179584 hlog.py:18] train/00089{16.95s}
I1203 03:30:23.397771 140521014179584 hlog.py:32] train/00090/loss 0.0041
I1203 03:30:27.348637 140521014179584 hlog.py:32] train/00090/eval_train/acc 0.9970
I1203 03:30:27.919308 140521014179584 hlog.py:32] train/00090/eval_val/acc 0.3716
I1203 03:30:27.919808 140521014179584 hlog.py:18] train/00090{17.90s}
I1203 03:30:39.048709 140521014179584 hlog.py:32] train/00091/loss 0.0039
I1203 03:30:42.974117 140521014179584 hlog.py:32] train/00091/eval_train/acc 0.9990
I1203 03:30:43.529752 140521014179584 hlog.py:32] train/00091/eval_val/acc 0.3851
I1203 03:30:43.530254 140521014179584 hlog.py:18] train/00091{15.61s}
I1203 03:30:55.257604 140521014179584 hlog.py:32] train/00092/loss 0.0038
I1203 03:30:59.328685 140521014179584 hlog.py:32] train/00092/eval_train/acc 0.9950
I1203 03:30:59.898040 140521014179584 hlog.py:32] train/00092/eval_val/acc 0.3784
I1203 03:30:59.898550 140521014179584 hlog.py:18] train/00092{16.37s}
I1203 03:31:12.586891 140521014179584 hlog.py:32] train/00093/loss 0.0038
I1203 03:31:16.476340 140521014179584 hlog.py:32] train/00093/eval_train/acc 0.9980
I1203 03:31:17.036291 140521014179584 hlog.py:32] train/00093/eval_val/acc 0.3716
I1203 03:31:17.036770 140521014179584 hlog.py:18] train/00093{17.14s}
I1203 03:31:31.135109 140521014179584 hlog.py:32] train/00094/loss 0.0043
I1203 03:31:35.135851 140521014179584 hlog.py:32] train/00094/eval_train/acc 0.9980
I1203 03:31:35.715257 140521014179584 hlog.py:32] train/00094/eval_val/acc 0.3919
I1203 03:31:35.715829 140521014179584 hlog.py:18] train/00094{18.68s}
I1203 03:31:48.651012 140521014179584 hlog.py:32] train/00095/loss 0.0038
I1203 03:31:52.343252 140521014179584 hlog.py:32] train/00095/eval_train/acc 0.9980
I1203 03:31:52.909074 140521014179584 hlog.py:32] train/00095/eval_val/acc 0.4122
I1203 03:31:52.909566 140521014179584 hlog.py:18] train/00095{17.19s}
I1203 03:32:04.682697 140521014179584 hlog.py:32] train/00096/loss 0.0034
I1203 03:32:08.372318 140521014179584 hlog.py:32] train/00096/eval_train/acc 0.9980
I1203 03:32:08.954459 140521014179584 hlog.py:32] train/00096/eval_val/acc 0.3919
I1203 03:32:08.955018 140521014179584 hlog.py:18] train/00096{16.05s}
I1203 03:32:20.403677 140521014179584 hlog.py:32] train/00097/loss 0.0036
I1203 03:32:24.828432 140521014179584 hlog.py:32] train/00097/eval_train/acc 0.9990
I1203 03:32:25.397832 140521014179584 hlog.py:32] train/00097/eval_val/acc 0.3986
I1203 03:32:25.398337 140521014179584 hlog.py:18] train/00097{16.44s}
I1203 03:32:37.081077 140521014179584 hlog.py:32] train/00098/loss 0.0035
I1203 03:32:40.821780 140521014179584 hlog.py:32] train/00098/eval_train/acc 0.9970
I1203 03:32:41.374157 140521014179584 hlog.py:32] train/00098/eval_val/acc 0.3986
I1203 03:32:41.374690 140521014179584 hlog.py:18] train/00098{15.98s}
I1203 03:32:53.363195 140521014179584 hlog.py:32] train/00099/loss 0.0034
I1203 03:32:57.135541 140521014179584 hlog.py:32] train/00099/eval_train/acc 0.9980
I1203 03:32:57.694675 140521014179584 hlog.py:32] train/00099/eval_val/acc 0.3986
I1203 03:32:57.726073 140521014179584 hlog.py:18] train/00099{16.35s}
I1203 03:33:09.497102 140521014179584 hlog.py:32] train/00100/loss 0.0036
I1203 03:33:13.385050 140521014179584 hlog.py:32] train/00100/eval_train/acc 0.9960
I1203 03:33:13.943231 140521014179584 hlog.py:32] train/00100/eval_val/acc 0.3919
I1203 03:33:13.943788 140521014179584 hlog.py:18] train/00100{16.22s}
I1203 03:33:27.172654 140521014179584 hlog.py:32] train/00101/loss 0.0038
I1203 03:33:30.872225 140521014179584 hlog.py:32] train/00101/eval_train/acc 0.9990
I1203 03:33:31.425227 140521014179584 hlog.py:32] train/00101/eval_val/acc 0.3919
I1203 03:33:31.425721 140521014179584 hlog.py:18] train/00101{17.48s}
I1203 03:33:44.376798 140521014179584 hlog.py:32] train/00102/loss 0.0040
I1203 03:33:48.129251 140521014179584 hlog.py:32] train/00102/eval_train/acc 0.9980
I1203 03:33:48.693398 140521014179584 hlog.py:32] train/00102/eval_val/acc 0.3919
I1203 03:33:48.693887 140521014179584 hlog.py:18] train/00102{17.27s}
I1203 03:34:00.768161 140521014179584 hlog.py:32] train/00103/loss 0.0035
I1203 03:34:04.618972 140521014179584 hlog.py:32] train/00103/eval_train/acc 0.9940
I1203 03:34:05.198657 140521014179584 hlog.py:32] train/00103/eval_val/acc 0.3919
I1203 03:34:05.199334 140521014179584 hlog.py:18] train/00103{16.51s}
I1203 03:34:16.628190 140521014179584 hlog.py:32] train/00104/loss 0.0033
I1203 03:34:20.474351 140521014179584 hlog.py:32] train/00104/eval_train/acc 0.9990
I1203 03:34:21.042467 140521014179584 hlog.py:32] train/00104/eval_val/acc 0.3919
I1203 03:34:21.043119 140521014179584 hlog.py:18] train/00104{15.84s}
I1203 03:34:32.828321 140521014179584 hlog.py:32] train/00105/loss 0.0039
I1203 03:34:36.776712 140521014179584 hlog.py:32] train/00105/eval_train/acc 0.9970
I1203 03:34:37.370233 140521014179584 hlog.py:32] train/00105/eval_val/acc 0.3919
I1203 03:34:37.370706 140521014179584 hlog.py:18] train/00105{16.33s}
I1203 03:34:49.357282 140521014179584 hlog.py:32] train/00106/loss 0.0035
I1203 03:34:53.178226 140521014179584 hlog.py:32] train/00106/eval_train/acc 0.9990
I1203 03:34:53.731606 140521014179584 hlog.py:32] train/00106/eval_val/acc 0.3919
I1203 03:34:53.732089 140521014179584 hlog.py:18] train/00106{16.36s}
I1203 03:35:05.845170 140521014179584 hlog.py:32] train/00107/loss 0.0035
I1203 03:35:09.932450 140521014179584 hlog.py:32] train/00107/eval_train/acc 0.9980
I1203 03:35:10.509271 140521014179584 hlog.py:32] train/00107/eval_val/acc 0.3986
I1203 03:35:10.510053 140521014179584 hlog.py:18] train/00107{16.78s}
I1203 03:35:22.582176 140521014179584 hlog.py:32] train/00108/loss 0.0032
I1203 03:35:26.360845 140521014179584 hlog.py:32] train/00108/eval_train/acc 0.9980
I1203 03:35:26.927254 140521014179584 hlog.py:32] train/00108/eval_val/acc 0.3919
I1203 03:35:26.927749 140521014179584 hlog.py:18] train/00108{16.42s}
I1203 03:35:38.757285 140521014179584 hlog.py:32] train/00109/loss 0.0034
I1203 03:35:43.017010 140521014179584 hlog.py:32] train/00109/eval_train/acc 0.9980
I1203 03:35:43.609331 140521014179584 hlog.py:32] train/00109/eval_val/acc 0.3986
I1203 03:35:43.665946 140521014179584 hlog.py:18] train/00109{16.74s}
I1203 03:35:56.607500 140521014179584 hlog.py:32] train/00110/loss 0.0037
I1203 03:36:00.494667 140521014179584 hlog.py:32] train/00110/eval_train/acc 0.9950
I1203 03:36:01.064963 140521014179584 hlog.py:32] train/00110/eval_val/acc 0.3919
I1203 03:36:01.065408 140521014179584 hlog.py:18] train/00110{17.40s}
I1203 03:36:12.558158 140521014179584 hlog.py:32] train/00111/loss 0.0031
I1203 03:36:16.550740 140521014179584 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 03:36:17.162051 140521014179584 hlog.py:32] train/00111/eval_val/acc 0.3919
I1203 03:36:17.162755 140521014179584 hlog.py:18] train/00111{16.10s}
I1203 03:36:28.901483 140521014179584 hlog.py:32] train/00112/loss 0.0032
I1203 03:36:32.888163 140521014179584 hlog.py:32] train/00112/eval_train/acc 0.9980
I1203 03:36:33.455338 140521014179584 hlog.py:32] train/00112/eval_val/acc 0.3919
I1203 03:36:33.456053 140521014179584 hlog.py:18] train/00112{16.29s}
I1203 03:36:46.396683 140521014179584 hlog.py:32] train/00113/loss 0.0036
I1203 03:36:50.732415 140521014179584 hlog.py:32] train/00113/eval_train/acc 0.9980
I1203 03:36:51.301861 140521014179584 hlog.py:32] train/00113/eval_val/acc 0.3919
I1203 03:36:51.302441 140521014179584 hlog.py:18] train/00113{17.85s}
I1203 03:37:03.134651 140521014179584 hlog.py:32] train/00114/loss 0.0035
I1203 03:37:07.129759 140521014179584 hlog.py:32] train/00114/eval_train/acc 0.9980
I1203 03:37:07.727896 140521014179584 hlog.py:32] train/00114/eval_val/acc 0.3919
I1203 03:37:07.728570 140521014179584 hlog.py:18] train/00114{16.43s}
I1203 03:37:18.890965 140521014179584 hlog.py:32] train/00115/loss 0.0033
I1203 03:37:22.681682 140521014179584 hlog.py:32] train/00115/eval_train/acc 0.9950
I1203 03:37:23.246406 140521014179584 hlog.py:32] train/00115/eval_val/acc 0.3919
I1203 03:37:23.246890 140521014179584 hlog.py:18] train/00115{15.52s}
I1203 03:37:35.667121 140521014179584 hlog.py:32] train/00116/loss 0.0035
I1203 03:37:40.003026 140521014179584 hlog.py:32] train/00116/eval_train/acc 0.9970
I1203 03:37:40.579958 140521014179584 hlog.py:32] train/00116/eval_val/acc 0.3851
I1203 03:37:40.580471 140521014179584 hlog.py:18] train/00116{17.33s}
I1203 03:37:52.473934 140521014179584 hlog.py:32] train/00117/loss 0.0034
I1203 03:37:56.471932 140521014179584 hlog.py:32] train/00117/eval_train/acc 0.9980
I1203 03:37:57.038011 140521014179584 hlog.py:32] train/00117/eval_val/acc 0.3851
I1203 03:37:57.038495 140521014179584 hlog.py:18] train/00117{16.46s}
I1203 03:38:08.412082 140521014179584 hlog.py:32] train/00118/loss 0.0034
I1203 03:38:12.177524 140521014179584 hlog.py:32] train/00118/eval_train/acc 0.9990
I1203 03:38:12.761770 140521014179584 hlog.py:32] train/00118/eval_val/acc 0.3919
I1203 03:38:12.762476 140521014179584 hlog.py:18] train/00118{15.72s}
I1203 03:38:25.098972 140521014179584 hlog.py:32] train/00119/loss 0.0034
I1203 03:38:28.983361 140521014179584 hlog.py:32] train/00119/eval_train/acc 0.9990
I1203 03:38:29.548179 140521014179584 hlog.py:32] train/00119/eval_val/acc 0.3919
I1203 03:38:29.578917 140521014179584 hlog.py:18] train/00119{16.82s}
I1203 03:38:41.269890 140521014179584 hlog.py:32] train/00120/loss 0.0034
I1203 03:38:45.200456 140521014179584 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 03:38:45.783092 140521014179584 hlog.py:32] train/00120/eval_val/acc 0.3919
I1203 03:38:45.783694 140521014179584 hlog.py:18] train/00120{16.20s}
I1203 03:38:57.433544 140521014179584 hlog.py:32] train/00121/loss 0.0031
I1203 03:39:01.275094 140521014179584 hlog.py:32] train/00121/eval_train/acc 0.9990
I1203 03:39:01.872380 140521014179584 hlog.py:32] train/00121/eval_val/acc 0.3919
I1203 03:39:01.872866 140521014179584 hlog.py:18] train/00121{16.09s}
I1203 03:39:14.332112 140521014179584 hlog.py:32] train/00122/loss 0.0036
I1203 03:39:18.326720 140521014179584 hlog.py:32] train/00122/eval_train/acc 0.9990
I1203 03:39:18.889483 140521014179584 hlog.py:32] train/00122/eval_val/acc 0.3919
I1203 03:39:18.889960 140521014179584 hlog.py:18] train/00122{17.02s}
I1203 03:39:31.434568 140521014179584 hlog.py:32] train/00123/loss 0.0034
I1203 03:39:35.345493 140521014179584 hlog.py:32] train/00123/eval_train/acc 0.9970
I1203 03:39:35.939283 140521014179584 hlog.py:32] train/00123/eval_val/acc 0.3919
I1203 03:39:35.939995 140521014179584 hlog.py:18] train/00123{17.05s}
I1203 03:39:47.129079 140521014179584 hlog.py:32] train/00124/loss 0.0034
I1203 03:39:51.298087 140521014179584 hlog.py:32] train/00124/eval_train/acc 0.9990
I1203 03:39:51.891920 140521014179584 hlog.py:32] train/00124/eval_val/acc 0.3919
I1203 03:39:51.892583 140521014179584 hlog.py:18] train/00124{15.95s}
I1203 03:40:03.344830 140521014179584 hlog.py:32] train/00125/loss 0.0030
I1203 03:40:07.062200 140521014179584 hlog.py:32] train/00125/eval_train/acc 0.9980
I1203 03:40:07.648277 140521014179584 hlog.py:32] train/00125/eval_val/acc 0.3919
I1203 03:40:07.648774 140521014179584 hlog.py:18] train/00125{15.76s}
I1203 03:40:18.973268 140521014179584 hlog.py:32] train/00126/loss 0.0030
I1203 03:40:22.909859 140521014179584 hlog.py:32] train/00126/eval_train/acc 0.9960
I1203 03:40:23.484869 140521014179584 hlog.py:32] train/00126/eval_val/acc 0.3919
I1203 03:40:23.485405 140521014179584 hlog.py:18] train/00126{15.84s}
I1203 03:40:35.378777 140521014179584 hlog.py:32] train/00127/loss 0.0032
I1203 03:40:39.275939 140521014179584 hlog.py:32] train/00127/eval_train/acc 0.9970
I1203 03:40:39.863295 140521014179584 hlog.py:32] train/00127/eval_val/acc 0.3919
I1203 03:40:39.863861 140521014179584 hlog.py:18] train/00127{16.38s}
I1203 03:40:52.341082 140521014179584 hlog.py:32] train/00128/loss 0.0035
I1203 03:40:56.054963 140521014179584 hlog.py:32] train/00128/eval_train/acc 0.9980
I1203 03:40:56.653303 140521014179584 hlog.py:32] train/00128/eval_val/acc 0.3919
I1203 03:40:56.653810 140521014179584 hlog.py:18] train/00128{16.79s}
I1203 03:41:08.824799 140521014179584 hlog.py:32] train/00129/loss 0.0033
I1203 03:41:12.607298 140521014179584 hlog.py:32] train/00129/eval_train/acc 0.9990
I1203 03:41:13.189903 140521014179584 hlog.py:32] train/00129/eval_val/acc 0.3919
I1203 03:41:13.221562 140521014179584 hlog.py:18] train/00129{16.57s}
I1203 03:41:25.149015 140521014179584 hlog.py:32] train/00130/loss 0.0033
I1203 03:41:28.971044 140521014179584 hlog.py:32] train/00130/eval_train/acc 0.9990
I1203 03:41:29.538535 140521014179584 hlog.py:32] train/00130/eval_val/acc 0.3919
I1203 03:41:29.539026 140521014179584 hlog.py:18] train/00130{16.32s}
I1203 03:41:41.530119 140521014179584 hlog.py:32] train/00131/loss 0.0033
I1203 03:41:45.247081 140521014179584 hlog.py:32] train/00131/eval_train/acc 0.9950
I1203 03:41:45.822712 140521014179584 hlog.py:32] train/00131/eval_val/acc 0.3919
I1203 03:41:45.823220 140521014179584 hlog.py:18] train/00131{16.28s}
I1203 03:41:57.816829 140521014179584 hlog.py:32] train/00132/loss 0.0036
I1203 03:42:01.884866 140521014179584 hlog.py:32] train/00132/eval_train/acc 0.9970
I1203 03:42:02.461330 140521014179584 hlog.py:32] train/00132/eval_val/acc 0.3919
I1203 03:42:02.461924 140521014179584 hlog.py:18] train/00132{16.64s}
I1203 03:42:14.752727 140521014179584 hlog.py:32] train/00133/loss 0.0034
I1203 03:42:18.874181 140521014179584 hlog.py:32] train/00133/eval_train/acc 0.9990
I1203 03:42:19.439885 140521014179584 hlog.py:32] train/00133/eval_val/acc 0.3919
I1203 03:42:19.440368 140521014179584 hlog.py:18] train/00133{16.98s}
I1203 03:42:31.827063 140521014179584 hlog.py:32] train/00134/loss 0.0033
I1203 03:42:35.742761 140521014179584 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 03:42:36.341810 140521014179584 hlog.py:32] train/00134/eval_val/acc 0.3919
I1203 03:42:36.342322 140521014179584 hlog.py:18] train/00134{16.90s}
I1203 03:42:48.342700 140521014179584 hlog.py:32] train/00135/loss 0.0034
I1203 03:42:52.486261 140521014179584 hlog.py:32] train/00135/eval_train/acc 0.9990
I1203 03:42:53.061607 140521014179584 hlog.py:32] train/00135/eval_val/acc 0.3919
I1203 03:42:53.062102 140521014179584 hlog.py:18] train/00135{16.72s}
I1203 03:43:04.293334 140521014179584 hlog.py:32] train/00136/loss 0.0030
I1203 03:43:08.172485 140521014179584 hlog.py:32] train/00136/eval_train/acc 0.9980
I1203 03:43:08.760659 140521014179584 hlog.py:32] train/00136/eval_val/acc 0.3919
I1203 03:43:08.761233 140521014179584 hlog.py:18] train/00136{15.70s}
I1203 03:43:20.475980 140521014179584 hlog.py:32] train/00137/loss 0.0033
I1203 03:43:24.333465 140521014179584 hlog.py:32] train/00137/eval_train/acc 0.9980
I1203 03:43:24.950425 140521014179584 hlog.py:32] train/00137/eval_val/acc 0.3986
I1203 03:43:24.951099 140521014179584 hlog.py:18] train/00137{16.19s}
I1203 03:43:36.415203 140521014179584 hlog.py:32] train/00138/loss 0.0032
I1203 03:43:40.063095 140521014179584 hlog.py:32] train/00138/eval_train/acc 0.9980
I1203 03:43:40.663164 140521014179584 hlog.py:32] train/00138/eval_val/acc 0.3986
I1203 03:43:40.663679 140521014179584 hlog.py:18] train/00138{15.71s}
I1203 03:43:52.168669 140521014179584 hlog.py:32] train/00139/loss 0.0032
I1203 03:43:56.098921 140521014179584 hlog.py:32] train/00139/eval_train/acc 0.9960
I1203 03:43:56.694562 140521014179584 hlog.py:32] train/00139/eval_val/acc 0.3986
I1203 03:43:56.726502 140521014179584 hlog.py:18] train/00139{16.06s}
I1203 03:44:09.072052 140521014179584 hlog.py:32] train/00140/loss 0.0035
I1203 03:44:12.917766 140521014179584 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 03:44:13.513990 140521014179584 hlog.py:32] train/00140/eval_val/acc 0.3986
I1203 03:44:13.514614 140521014179584 hlog.py:18] train/00140{16.79s}
I1203 03:44:24.577920 140521014179584 hlog.py:32] train/00141/loss 0.0030
I1203 03:44:28.439753 140521014179584 hlog.py:32] train/00141/eval_train/acc 0.9990
I1203 03:44:29.002365 140521014179584 hlog.py:32] train/00141/eval_val/acc 0.3986
I1203 03:44:29.002869 140521014179584 hlog.py:18] train/00141{15.49s}
I1203 03:44:40.703484 140521014179584 hlog.py:32] train/00142/loss 0.0034
I1203 03:44:44.686899 140521014179584 hlog.py:32] train/00142/eval_train/acc 0.9990
I1203 03:44:45.248758 140521014179584 hlog.py:32] train/00142/eval_val/acc 0.3919
I1203 03:44:45.249288 140521014179584 hlog.py:18] train/00142{16.25s}
I1203 03:44:56.916482 140521014179584 hlog.py:32] train/00143/loss 0.0032
I1203 03:45:00.815428 140521014179584 hlog.py:32] train/00143/eval_train/acc 0.9980
I1203 03:45:01.377593 140521014179584 hlog.py:32] train/00143/eval_val/acc 0.3919
I1203 03:45:01.378064 140521014179584 hlog.py:18] train/00143{16.13s}
I1203 03:45:12.919118 140521014179584 hlog.py:32] train/00144/loss 0.0036
I1203 03:45:16.895507 140521014179584 hlog.py:32] train/00144/eval_train/acc 0.9980
I1203 03:45:17.466760 140521014179584 hlog.py:32] train/00144/eval_val/acc 0.3919
I1203 03:45:17.467272 140521014179584 hlog.py:18] train/00144{16.09s}
I1203 03:45:30.278921 140521014179584 hlog.py:32] train/00145/loss 0.0035
I1203 03:45:34.418234 140521014179584 hlog.py:32] train/00145/eval_train/acc 0.9970
I1203 03:45:34.980174 140521014179584 hlog.py:32] train/00145/eval_val/acc 0.3919
I1203 03:45:34.980676 140521014179584 hlog.py:18] train/00145{17.51s}
I1203 03:45:47.412523 140521014179584 hlog.py:32] train/00146/loss 0.0036
I1203 03:45:51.226300 140521014179584 hlog.py:32] train/00146/eval_train/acc 0.9960
I1203 03:45:51.801343 140521014179584 hlog.py:32] train/00146/eval_val/acc 0.3919
I1203 03:45:51.801902 140521014179584 hlog.py:18] train/00146{16.82s}
I1203 03:46:03.848775 140521014179584 hlog.py:32] train/00147/loss 0.0032
I1203 03:46:07.813466 140521014179584 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 03:46:08.374680 140521014179584 hlog.py:32] train/00147/eval_val/acc 0.3919
I1203 03:46:08.375213 140521014179584 hlog.py:18] train/00147{16.57s}
I1203 03:46:20.318369 140521014179584 hlog.py:32] train/00148/loss 0.0036
I1203 03:46:24.203175 140521014179584 hlog.py:32] train/00148/eval_train/acc 0.9980
I1203 03:46:24.785501 140521014179584 hlog.py:32] train/00148/eval_val/acc 0.3919
I1203 03:46:24.786182 140521014179584 hlog.py:18] train/00148{16.41s}
I1203 03:46:36.389094 140521014179584 hlog.py:32] train/00149/loss 0.0033
I1203 03:46:40.346452 140521014179584 hlog.py:32] train/00149/eval_train/acc 0.9970
I1203 03:46:40.550940 140521014179584 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 03:46:40.551156 140521014179584 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:46:40.551258 140521014179584 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:46:40.551343 140521014179584 hlog.py:32] train/00149/eval_val/0/corr True
I1203 03:46:40.551434 140521014179584 hlog.py:32] train/00149/eval_val/0 
I1203 03:46:40.551518 140521014179584 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 03:46:40.551617 140521014179584 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 03:46:40.551715 140521014179584 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 03:46:40.551808 140521014179584 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.551892 140521014179584 hlog.py:32] train/00149/eval_val/1/corr False
I1203 03:46:40.551967 140521014179584 hlog.py:32] train/00149/eval_val/1 
I1203 03:46:40.552039 140521014179584 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 03:46:40.552126 140521014179584 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 03:46:40.552221 140521014179584 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1203 03:46:40.552309 140521014179584 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 03:46:40.552387 140521014179584 hlog.py:32] train/00149/eval_val/2/corr False
I1203 03:46:40.552459 140521014179584 hlog.py:32] train/00149/eval_val/2 
I1203 03:46:40.552531 140521014179584 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 03:46:40.552617 140521014179584 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 03:46:40.552711 140521014179584 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 03:46:40.552799 140521014179584 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:46:40.552878 140521014179584 hlog.py:32] train/00149/eval_val/3/corr False
I1203 03:46:40.552949 140521014179584 hlog.py:32] train/00149/eval_val/3 
I1203 03:46:40.553020 140521014179584 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 03:46:40.553109 140521014179584 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 03:46:40.553202 140521014179584 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1203 03:46:40.553290 140521014179584 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 03:46:40.553367 140521014179584 hlog.py:32] train/00149/eval_val/4/corr False
I1203 03:46:40.553439 140521014179584 hlog.py:32] train/00149/eval_val/4 
I1203 03:46:40.553509 140521014179584 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 03:46:40.553597 140521014179584 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 03:46:40.553690 140521014179584 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 03:46:40.553778 140521014179584 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.553855 140521014179584 hlog.py:32] train/00149/eval_val/5/corr False
I1203 03:46:40.553927 140521014179584 hlog.py:32] train/00149/eval_val/5 
I1203 03:46:40.553998 140521014179584 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 03:46:40.554085 140521014179584 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 03:46:40.554177 140521014179584 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 03:46:40.554282 140521014179584 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.554361 140521014179584 hlog.py:32] train/00149/eval_val/6/corr False
I1203 03:46:40.554433 140521014179584 hlog.py:32] train/00149/eval_val/6 
I1203 03:46:40.554504 140521014179584 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 03:46:40.554591 140521014179584 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 03:46:40.554684 140521014179584 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 03:46:40.554772 140521014179584 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.554849 140521014179584 hlog.py:32] train/00149/eval_val/7/corr False
I1203 03:46:40.554921 140521014179584 hlog.py:32] train/00149/eval_val/7 
I1203 03:46:40.554992 140521014179584 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 03:46:40.555077 140521014179584 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 03:46:40.555171 140521014179584 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 03:46:40.555258 140521014179584 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 03:46:40.555335 140521014179584 hlog.py:32] train/00149/eval_val/8/corr False
I1203 03:46:40.555416 140521014179584 hlog.py:32] train/00149/eval_val/8 
I1203 03:46:40.555490 140521014179584 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 03:46:40.555575 140521014179584 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 03:46:40.555669 140521014179584 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 03:46:40.555762 140521014179584 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 03:46:40.555839 140521014179584 hlog.py:32] train/00149/eval_val/9/corr False
I1203 03:46:40.555911 140521014179584 hlog.py:32] train/00149/eval_val/9 
I1203 03:46:40.555981 140521014179584 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 03:46:40.556066 140521014179584 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 03:46:40.556159 140521014179584 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 03:46:40.556247 140521014179584 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.556324 140521014179584 hlog.py:32] train/00149/eval_val/10/corr False
I1203 03:46:40.556396 140521014179584 hlog.py:32] train/00149/eval_val/10 
I1203 03:46:40.556466 140521014179584 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 03:46:40.556559 140521014179584 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 03:46:40.556661 140521014179584 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:46:40.556754 140521014179584 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:46:40.556832 140521014179584 hlog.py:32] train/00149/eval_val/11/corr True
I1203 03:46:40.556904 140521014179584 hlog.py:32] train/00149/eval_val/11 
I1203 03:46:40.556975 140521014179584 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 03:46:40.557068 140521014179584 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 03:46:40.557169 140521014179584 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 03:46:40.557269 140521014179584 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 03:46:40.557347 140521014179584 hlog.py:32] train/00149/eval_val/12/corr True
I1203 03:46:40.557420 140521014179584 hlog.py:32] train/00149/eval_val/12 
I1203 03:46:40.557490 140521014179584 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 03:46:40.557584 140521014179584 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 03:46:40.557685 140521014179584 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 03:46:40.557778 140521014179584 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 03:46:40.557856 140521014179584 hlog.py:32] train/00149/eval_val/13/corr True
I1203 03:46:40.557928 140521014179584 hlog.py:32] train/00149/eval_val/13 
I1203 03:46:40.557999 140521014179584 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 03:46:40.558092 140521014179584 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 03:46:40.558193 140521014179584 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 03:46:40.558286 140521014179584 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 03:46:40.558364 140521014179584 hlog.py:32] train/00149/eval_val/14/corr True
I1203 03:46:40.558436 140521014179584 hlog.py:32] train/00149/eval_val/14 
I1203 03:46:40.558506 140521014179584 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 03:46:40.558599 140521014179584 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 03:46:40.558701 140521014179584 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 03:46:40.558794 140521014179584 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 03:46:40.558871 140521014179584 hlog.py:32] train/00149/eval_val/15/corr True
I1203 03:46:40.558943 140521014179584 hlog.py:32] train/00149/eval_val/15 
I1203 03:46:40.559014 140521014179584 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 03:46:40.559107 140521014179584 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 03:46:40.559208 140521014179584 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:46:40.559301 140521014179584 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:46:40.559379 140521014179584 hlog.py:32] train/00149/eval_val/16/corr True
I1203 03:46:40.559460 140521014179584 hlog.py:32] train/00149/eval_val/16 
I1203 03:46:40.559530 140521014179584 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 03:46:40.559616 140521014179584 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 03:46:40.559713 140521014179584 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 03:46:40.559807 140521014179584 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 03:46:40.559884 140521014179584 hlog.py:32] train/00149/eval_val/17/corr False
I1203 03:46:40.559965 140521014179584 hlog.py:32] train/00149/eval_val/17 
I1203 03:46:40.560037 140521014179584 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 03:46:40.560124 140521014179584 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 03:46:40.560222 140521014179584 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1203 03:46:40.560315 140521014179584 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 03:46:40.560393 140521014179584 hlog.py:32] train/00149/eval_val/18/corr False
I1203 03:46:40.560465 140521014179584 hlog.py:32] train/00149/eval_val/18 
I1203 03:46:40.560536 140521014179584 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 03:46:40.560622 140521014179584 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 03:46:40.560719 140521014179584 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:46:40.560812 140521014179584 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 03:46:40.560890 140521014179584 hlog.py:32] train/00149/eval_val/19/corr False
I1203 03:46:40.560961 140521014179584 hlog.py:32] train/00149/eval_val/19 
I1203 03:46:40.561032 140521014179584 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 03:46:40.561119 140521014179584 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 03:46:40.561215 140521014179584 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 03:46:40.561308 140521014179584 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 03:46:40.561386 140521014179584 hlog.py:32] train/00149/eval_val/20/corr False
I1203 03:46:40.561458 140521014179584 hlog.py:32] train/00149/eval_val/20 
I1203 03:46:40.561528 140521014179584 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 03:46:40.561622 140521014179584 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 03:46:40.561723 140521014179584 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 03:46:40.561815 140521014179584 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 03:46:40.561892 140521014179584 hlog.py:32] train/00149/eval_val/21/corr True
I1203 03:46:40.561964 140521014179584 hlog.py:32] train/00149/eval_val/21 
I1203 03:46:40.562034 140521014179584 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 03:46:40.562119 140521014179584 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 03:46:40.562213 140521014179584 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( rio grande , _ ) ) ) )
I1203 03:46:40.562301 140521014179584 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 03:46:40.562378 140521014179584 hlog.py:32] train/00149/eval_val/22/corr False
I1203 03:46:40.562450 140521014179584 hlog.py:32] train/00149/eval_val/22 
I1203 03:46:40.562521 140521014179584 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 03:46:40.562609 140521014179584 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 03:46:40.562701 140521014179584 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 03:46:40.562796 140521014179584 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 03:46:40.562874 140521014179584 hlog.py:32] train/00149/eval_val/23/corr False
I1203 03:46:40.562946 140521014179584 hlog.py:32] train/00149/eval_val/23 
I1203 03:46:40.563016 140521014179584 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 03:46:40.563102 140521014179584 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 03:46:40.563190 140521014179584 hlog.py:32] train/00149/eval_val/24/pred ( A , _smallest ( A , _state ( A ) ) )
I1203 03:46:40.563278 140521014179584 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 03:46:40.563355 140521014179584 hlog.py:32] train/00149/eval_val/24/corr False
I1203 03:46:40.563434 140521014179584 hlog.py:32] train/00149/eval_val/24 
I1203 03:46:40.563506 140521014179584 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 03:46:40.563598 140521014179584 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 03:46:40.563693 140521014179584 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:46:40.563782 140521014179584 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:46:40.563859 140521014179584 hlog.py:32] train/00149/eval_val/25/corr True
I1203 03:46:40.563931 140521014179584 hlog.py:32] train/00149/eval_val/25 
I1203 03:46:40.564002 140521014179584 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 03:46:40.564093 140521014179584 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 03:46:40.564188 140521014179584 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 03:46:40.564278 140521014179584 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 03:46:40.564355 140521014179584 hlog.py:32] train/00149/eval_val/26/corr True
I1203 03:46:40.564426 140521014179584 hlog.py:32] train/00149/eval_val/26 
I1203 03:46:40.564497 140521014179584 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 03:46:40.564583 140521014179584 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 03:46:40.564685 140521014179584 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1203 03:46:40.564774 140521014179584 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:46:40.564852 140521014179584 hlog.py:32] train/00149/eval_val/27/corr False
I1203 03:46:40.564924 140521014179584 hlog.py:32] train/00149/eval_val/27 
I1203 03:46:40.564994 140521014179584 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 03:46:40.565085 140521014179584 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 03:46:40.565180 140521014179584 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:46:40.565269 140521014179584 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:46:40.565346 140521014179584 hlog.py:32] train/00149/eval_val/28/corr True
I1203 03:46:40.565418 140521014179584 hlog.py:32] train/00149/eval_val/28 
I1203 03:46:40.565489 140521014179584 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 03:46:40.565579 140521014179584 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 03:46:40.565675 140521014179584 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 03:46:40.565764 140521014179584 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 03:46:40.565848 140521014179584 hlog.py:32] train/00149/eval_val/29/corr True
I1203 03:46:40.565921 140521014179584 hlog.py:32] train/00149/eval_val/29 
I1203 03:46:40.565991 140521014179584 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 03:46:40.566078 140521014179584 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 03:46:40.566174 140521014179584 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _longest ( B , _river ( B ) ) , _traverse ( B , A ) ) )
I1203 03:46:40.566264 140521014179584 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 03:46:40.566340 140521014179584 hlog.py:32] train/00149/eval_val/30/corr False
I1203 03:46:40.566412 140521014179584 hlog.py:32] train/00149/eval_val/30 
I1203 03:46:40.566483 140521014179584 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 03:46:40.566574 140521014179584 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 03:46:40.566669 140521014179584 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 03:46:40.566758 140521014179584 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 03:46:40.566835 140521014179584 hlog.py:32] train/00149/eval_val/31/corr True
I1203 03:46:40.566907 140521014179584 hlog.py:32] train/00149/eval_val/31 
I1203 03:46:40.566977 140521014179584 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 03:46:40.567070 140521014179584 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 03:46:40.567165 140521014179584 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 03:46:40.567255 140521014179584 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 03:46:40.567331 140521014179584 hlog.py:32] train/00149/eval_val/32/corr True
I1203 03:46:40.567411 140521014179584 hlog.py:32] train/00149/eval_val/32 
I1203 03:46:40.567485 140521014179584 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 03:46:40.567576 140521014179584 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 03:46:40.567672 140521014179584 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:46:40.567768 140521014179584 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:46:40.567845 140521014179584 hlog.py:32] train/00149/eval_val/33/corr True
I1203 03:46:40.567917 140521014179584 hlog.py:32] train/00149/eval_val/33 
I1203 03:46:40.567987 140521014179584 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 03:46:40.568078 140521014179584 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 03:46:40.568173 140521014179584 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:46:40.568262 140521014179584 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:46:40.568339 140521014179584 hlog.py:32] train/00149/eval_val/34/corr True
I1203 03:46:40.568411 140521014179584 hlog.py:32] train/00149/eval_val/34 
I1203 03:46:40.568481 140521014179584 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 03:46:40.568573 140521014179584 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 03:46:40.568671 140521014179584 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.568762 140521014179584 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.568846 140521014179584 hlog.py:32] train/00149/eval_val/35/corr True
I1203 03:46:40.568919 140521014179584 hlog.py:32] train/00149/eval_val/35 
I1203 03:46:40.568990 140521014179584 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 03:46:40.569083 140521014179584 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 03:46:40.569181 140521014179584 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.569272 140521014179584 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.569349 140521014179584 hlog.py:32] train/00149/eval_val/36/corr True
I1203 03:46:40.569421 140521014179584 hlog.py:32] train/00149/eval_val/36 
I1203 03:46:40.569491 140521014179584 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 03:46:40.569583 140521014179584 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 03:46:40.569681 140521014179584 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1203 03:46:40.569772 140521014179584 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.569850 140521014179584 hlog.py:32] train/00149/eval_val/37/corr False
I1203 03:46:40.569922 140521014179584 hlog.py:32] train/00149/eval_val/37 
I1203 03:46:40.569992 140521014179584 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 03:46:40.570084 140521014179584 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 03:46:40.570182 140521014179584 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.570273 140521014179584 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.570350 140521014179584 hlog.py:32] train/00149/eval_val/38/corr True
I1203 03:46:40.570422 140521014179584 hlog.py:32] train/00149/eval_val/38 
I1203 03:46:40.570492 140521014179584 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 03:46:40.570584 140521014179584 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 03:46:40.570682 140521014179584 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.570773 140521014179584 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:46:40.570851 140521014179584 hlog.py:32] train/00149/eval_val/39/corr True
I1203 03:46:40.570923 140521014179584 hlog.py:32] train/00149/eval_val/39 
I1203 03:46:40.570993 140521014179584 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 03:46:40.571079 140521014179584 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 03:46:40.571176 140521014179584 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 03:46:40.571265 140521014179584 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 03:46:40.571342 140521014179584 hlog.py:32] train/00149/eval_val/40/corr False
I1203 03:46:40.571423 140521014179584 hlog.py:32] train/00149/eval_val/40 
I1203 03:46:40.571496 140521014179584 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 03:46:40.571581 140521014179584 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 03:46:40.571679 140521014179584 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 03:46:40.571775 140521014179584 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 03:46:40.571853 140521014179584 hlog.py:32] train/00149/eval_val/41/corr False
I1203 03:46:40.571925 140521014179584 hlog.py:32] train/00149/eval_val/41 
I1203 03:46:40.571995 140521014179584 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 03:46:40.572081 140521014179584 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 03:46:40.572181 140521014179584 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 03:46:40.572269 140521014179584 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 03:46:40.572346 140521014179584 hlog.py:32] train/00149/eval_val/42/corr False
I1203 03:46:40.572418 140521014179584 hlog.py:32] train/00149/eval_val/42 
I1203 03:46:40.572489 140521014179584 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 03:46:40.572576 140521014179584 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 03:46:40.572679 140521014179584 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1203 03:46:40.572774 140521014179584 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 03:46:40.572851 140521014179584 hlog.py:32] train/00149/eval_val/43/corr False
I1203 03:46:40.572923 140521014179584 hlog.py:32] train/00149/eval_val/43 
I1203 03:46:40.572993 140521014179584 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 03:46:40.573088 140521014179584 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 03:46:40.573191 140521014179584 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 03:46:40.573286 140521014179584 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 03:46:40.573363 140521014179584 hlog.py:32] train/00149/eval_val/44/corr True
I1203 03:46:40.573435 140521014179584 hlog.py:32] train/00149/eval_val/44 
I1203 03:46:40.573505 140521014179584 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 03:46:40.573595 140521014179584 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 03:46:40.573693 140521014179584 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 03:46:40.573784 140521014179584 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 03:46:40.573861 140521014179584 hlog.py:32] train/00149/eval_val/45/corr False
I1203 03:46:40.573933 140521014179584 hlog.py:32] train/00149/eval_val/45 
I1203 03:46:40.574003 140521014179584 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 03:46:40.574089 140521014179584 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 03:46:40.574186 140521014179584 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) , A ) )
I1203 03:46:40.574277 140521014179584 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 03:46:40.574354 140521014179584 hlog.py:32] train/00149/eval_val/46/corr False
I1203 03:46:40.574426 140521014179584 hlog.py:32] train/00149/eval_val/46 
I1203 03:46:40.574502 140521014179584 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 03:46:40.574596 140521014179584 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 03:46:40.574697 140521014179584 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 03:46:40.574789 140521014179584 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 03:46:40.574866 140521014179584 hlog.py:32] train/00149/eval_val/47/corr True
I1203 03:46:40.574938 140521014179584 hlog.py:32] train/00149/eval_val/47 
I1203 03:46:40.575008 140521014179584 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 03:46:40.575094 140521014179584 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 03:46:40.575194 140521014179584 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _stateid ( rochester ) ) ) , A ) )
I1203 03:46:40.575287 140521014179584 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 03:46:40.575364 140521014179584 hlog.py:32] train/00149/eval_val/48/corr False
I1203 03:46:40.575449 140521014179584 hlog.py:32] train/00149/eval_val/48 
I1203 03:46:40.575520 140521014179584 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 03:46:40.575606 140521014179584 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 03:46:40.575709 140521014179584 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:46:40.575802 140521014179584 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:46:40.575879 140521014179584 hlog.py:32] train/00149/eval_val/49/corr False
I1203 03:46:40.575951 140521014179584 hlog.py:32] train/00149/eval_val/49 
I1203 03:46:40.576020 140521014179584 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 03:46:40.576110 140521014179584 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 03:46:40.576211 140521014179584 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _city ( C ) , _const ( D , _cityid ( austin , _ ) ) ) , A ) )
I1203 03:46:40.576304 140521014179584 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 03:46:40.576380 140521014179584 hlog.py:32] train/00149/eval_val/50/corr False
I1203 03:46:40.576452 140521014179584 hlog.py:32] train/00149/eval_val/50 
I1203 03:46:40.576522 140521014179584 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 03:46:40.576613 140521014179584 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 03:46:40.576714 140521014179584 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:46:40.576807 140521014179584 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:46:40.576883 140521014179584 hlog.py:32] train/00149/eval_val/51/corr False
I1203 03:46:40.576955 140521014179584 hlog.py:32] train/00149/eval_val/51 
I1203 03:46:40.577025 140521014179584 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 03:46:40.577111 140521014179584 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 03:46:40.577207 140521014179584 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 03:46:40.577303 140521014179584 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 03:46:40.577381 140521014179584 hlog.py:32] train/00149/eval_val/52/corr False
I1203 03:46:40.577453 140521014179584 hlog.py:32] train/00149/eval_val/52 
I1203 03:46:40.577524 140521014179584 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 03:46:40.577610 140521014179584 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 03:46:40.577706 140521014179584 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 03:46:40.577795 140521014179584 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 03:46:40.577872 140521014179584 hlog.py:32] train/00149/eval_val/53/corr False
I1203 03:46:40.577944 140521014179584 hlog.py:32] train/00149/eval_val/53 
I1203 03:46:40.578014 140521014179584 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 03:46:40.578104 140521014179584 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 03:46:40.578199 140521014179584 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:46:40.578288 140521014179584 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:46:40.578366 140521014179584 hlog.py:32] train/00149/eval_val/54/corr True
I1203 03:46:40.578437 140521014179584 hlog.py:32] train/00149/eval_val/54 
I1203 03:46:40.578508 140521014179584 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 03:46:40.578598 140521014179584 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 03:46:40.578693 140521014179584 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 03:46:40.578783 140521014179584 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 03:46:40.578859 140521014179584 hlog.py:32] train/00149/eval_val/55/corr True
I1203 03:46:40.578931 140521014179584 hlog.py:32] train/00149/eval_val/55 
I1203 03:46:40.579002 140521014179584 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 03:46:40.579092 140521014179584 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 03:46:40.579187 140521014179584 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:46:40.579277 140521014179584 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:46:40.579354 140521014179584 hlog.py:32] train/00149/eval_val/56/corr True
I1203 03:46:40.579433 140521014179584 hlog.py:32] train/00149/eval_val/56 
I1203 03:46:40.579505 140521014179584 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 03:46:40.579596 140521014179584 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 03:46:40.579691 140521014179584 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.579780 140521014179584 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.579857 140521014179584 hlog.py:32] train/00149/eval_val/57/corr True
I1203 03:46:40.579929 140521014179584 hlog.py:32] train/00149/eval_val/57 
I1203 03:46:40.579999 140521014179584 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 03:46:40.580089 140521014179584 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 03:46:40.580184 140521014179584 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.580279 140521014179584 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.580357 140521014179584 hlog.py:32] train/00149/eval_val/58/corr True
I1203 03:46:40.580429 140521014179584 hlog.py:32] train/00149/eval_val/58 
I1203 03:46:40.580499 140521014179584 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 03:46:40.580585 140521014179584 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 03:46:40.580678 140521014179584 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _population ( B , A ) , _const ( B , _cityid ( montana , _ ) ) ) )
I1203 03:46:40.580767 140521014179584 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 03:46:40.580844 140521014179584 hlog.py:32] train/00149/eval_val/59/corr False
I1203 03:46:40.580916 140521014179584 hlog.py:32] train/00149/eval_val/59 
I1203 03:46:40.580987 140521014179584 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 03:46:40.581074 140521014179584 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 03:46:40.581169 140521014179584 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 03:46:40.581258 140521014179584 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 03:46:40.581335 140521014179584 hlog.py:32] train/00149/eval_val/60/corr False
I1203 03:46:40.581407 140521014179584 hlog.py:32] train/00149/eval_val/60 
I1203 03:46:40.581477 140521014179584 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 03:46:40.581568 140521014179584 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 03:46:40.581664 140521014179584 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:46:40.581753 140521014179584 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:46:40.581830 140521014179584 hlog.py:32] train/00149/eval_val/61/corr True
I1203 03:46:40.581902 140521014179584 hlog.py:32] train/00149/eval_val/61 
I1203 03:46:40.581972 140521014179584 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 03:46:40.582060 140521014179584 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 03:46:40.582155 140521014179584 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 03:46:40.582244 140521014179584 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 03:46:40.582321 140521014179584 hlog.py:32] train/00149/eval_val/62/corr False
I1203 03:46:40.582393 140521014179584 hlog.py:32] train/00149/eval_val/62 
I1203 03:46:40.582463 140521014179584 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 03:46:40.582553 140521014179584 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 03:46:40.582648 140521014179584 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.582751 140521014179584 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.582832 140521014179584 hlog.py:32] train/00149/eval_val/63/corr True
I1203 03:46:40.582906 140521014179584 hlog.py:32] train/00149/eval_val/63 
I1203 03:46:40.582978 140521014179584 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 03:46:40.832295 140521014179584 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 03:46:40.832505 140521014179584 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 03:46:40.832610 140521014179584 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 03:46:40.832715 140521014179584 hlog.py:32] train/00149/eval_val/64/corr True
I1203 03:46:40.832794 140521014179584 hlog.py:32] train/00149/eval_val/64 
I1203 03:46:40.832874 140521014179584 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 03:46:40.832971 140521014179584 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 03:46:40.833070 140521014179584 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.833162 140521014179584 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.833240 140521014179584 hlog.py:32] train/00149/eval_val/65/corr True
I1203 03:46:40.833312 140521014179584 hlog.py:32] train/00149/eval_val/65 
I1203 03:46:40.833384 140521014179584 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 03:46:40.833477 140521014179584 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 03:46:40.833574 140521014179584 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.833664 140521014179584 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.833742 140521014179584 hlog.py:32] train/00149/eval_val/66/corr True
I1203 03:46:40.833815 140521014179584 hlog.py:32] train/00149/eval_val/66 
I1203 03:46:40.833886 140521014179584 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 03:46:40.833974 140521014179584 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 03:46:40.834075 140521014179584 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) )
I1203 03:46:40.834165 140521014179584 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 03:46:40.834242 140521014179584 hlog.py:32] train/00149/eval_val/67/corr False
I1203 03:46:40.834315 140521014179584 hlog.py:32] train/00149/eval_val/67 
I1203 03:46:40.834385 140521014179584 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 03:46:40.834475 140521014179584 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 03:46:40.834573 140521014179584 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 03:46:40.834664 140521014179584 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 03:46:40.834741 140521014179584 hlog.py:32] train/00149/eval_val/68/corr False
I1203 03:46:40.834813 140521014179584 hlog.py:32] train/00149/eval_val/68 
I1203 03:46:40.834884 140521014179584 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 03:46:40.834971 140521014179584 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 03:46:40.835071 140521014179584 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1203 03:46:40.835163 140521014179584 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.835240 140521014179584 hlog.py:32] train/00149/eval_val/69/corr False
I1203 03:46:40.835312 140521014179584 hlog.py:32] train/00149/eval_val/69 
I1203 03:46:40.835383 140521014179584 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 03:46:40.835481 140521014179584 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 03:46:40.835575 140521014179584 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1203 03:46:40.835664 140521014179584 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.835748 140521014179584 hlog.py:32] train/00149/eval_val/70/corr False
I1203 03:46:40.835821 140521014179584 hlog.py:32] train/00149/eval_val/70 
I1203 03:46:40.835892 140521014179584 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 03:46:40.835980 140521014179584 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 03:46:40.836074 140521014179584 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 03:46:40.836162 140521014179584 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 03:46:40.836239 140521014179584 hlog.py:32] train/00149/eval_val/71/corr False
I1203 03:46:40.836311 140521014179584 hlog.py:32] train/00149/eval_val/71 
I1203 03:46:40.836382 140521014179584 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 03:46:40.836468 140521014179584 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 03:46:40.836562 140521014179584 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 03:46:40.836650 140521014179584 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 03:46:40.836727 140521014179584 hlog.py:32] train/00149/eval_val/72/corr False
I1203 03:46:40.836799 140521014179584 hlog.py:32] train/00149/eval_val/72 
I1203 03:46:40.836870 140521014179584 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 03:46:40.836956 140521014179584 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 03:46:40.837049 140521014179584 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1203 03:46:40.837137 140521014179584 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 03:46:40.837214 140521014179584 hlog.py:32] train/00149/eval_val/73/corr False
I1203 03:46:40.837286 140521014179584 hlog.py:32] train/00149/eval_val/73 
I1203 03:46:40.837357 140521014179584 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 03:46:40.837443 140521014179584 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 03:46:40.837537 140521014179584 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1203 03:46:40.837624 140521014179584 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 03:46:40.837701 140521014179584 hlog.py:32] train/00149/eval_val/74/corr False
I1203 03:46:40.837773 140521014179584 hlog.py:32] train/00149/eval_val/74 
I1203 03:46:40.837843 140521014179584 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 03:46:40.837930 140521014179584 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 03:46:40.838024 140521014179584 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , kilometers ) ) ) )
I1203 03:46:40.838113 140521014179584 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 03:46:40.838189 140521014179584 hlog.py:32] train/00149/eval_val/75/corr False
I1203 03:46:40.838261 140521014179584 hlog.py:32] train/00149/eval_val/75 
I1203 03:46:40.838332 140521014179584 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 03:46:40.838418 140521014179584 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 03:46:40.838512 140521014179584 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 03:46:40.838601 140521014179584 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:46:40.838679 140521014179584 hlog.py:32] train/00149/eval_val/76/corr False
I1203 03:46:40.838757 140521014179584 hlog.py:32] train/00149/eval_val/76 
I1203 03:46:40.838829 140521014179584 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 03:46:40.838915 140521014179584 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 03:46:40.839008 140521014179584 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1203 03:46:40.839096 140521014179584 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 03:46:40.839173 140521014179584 hlog.py:32] train/00149/eval_val/77/corr False
I1203 03:46:40.839245 140521014179584 hlog.py:32] train/00149/eval_val/77 
I1203 03:46:40.839316 140521014179584 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 03:46:40.839402 140521014179584 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 03:46:40.839505 140521014179584 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1203 03:46:40.839592 140521014179584 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 03:46:40.839669 140521014179584 hlog.py:32] train/00149/eval_val/78/corr False
I1203 03:46:40.839742 140521014179584 hlog.py:32] train/00149/eval_val/78 
I1203 03:46:40.839812 140521014179584 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 03:46:40.839899 140521014179584 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 03:46:40.839993 140521014179584 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1203 03:46:40.840081 140521014179584 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 03:46:40.840157 140521014179584 hlog.py:32] train/00149/eval_val/79/corr False
I1203 03:46:40.840229 140521014179584 hlog.py:32] train/00149/eval_val/79 
I1203 03:46:40.840300 140521014179584 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 03:46:40.840386 140521014179584 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 03:46:40.840478 140521014179584 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 03:46:40.840566 140521014179584 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.840643 140521014179584 hlog.py:32] train/00149/eval_val/80/corr False
I1203 03:46:40.840715 140521014179584 hlog.py:32] train/00149/eval_val/80 
I1203 03:46:40.840786 140521014179584 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 03:46:40.840873 140521014179584 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 03:46:40.840965 140521014179584 hlog.py:32] train/00149/eval_val/81/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:46:40.841053 140521014179584 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.841129 140521014179584 hlog.py:32] train/00149/eval_val/81/corr False
I1203 03:46:40.841201 140521014179584 hlog.py:32] train/00149/eval_val/81 
I1203 03:46:40.841272 140521014179584 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 03:46:40.841358 140521014179584 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 03:46:40.841451 140521014179584 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1203 03:46:40.841539 140521014179584 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 03:46:40.841616 140521014179584 hlog.py:32] train/00149/eval_val/82/corr False
I1203 03:46:40.841688 140521014179584 hlog.py:32] train/00149/eval_val/82 
I1203 03:46:40.841759 140521014179584 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 03:46:40.841845 140521014179584 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 03:46:40.841943 140521014179584 hlog.py:32] train/00149/eval_val/83/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:46:40.842032 140521014179584 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 03:46:40.842109 140521014179584 hlog.py:32] train/00149/eval_val/83/corr False
I1203 03:46:40.842181 140521014179584 hlog.py:32] train/00149/eval_val/83 
I1203 03:46:40.842252 140521014179584 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 03:46:40.842339 140521014179584 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 03:46:40.842434 140521014179584 hlog.py:32] train/00149/eval_val/84/pred ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) , _state ( B ) ) ) )
I1203 03:46:40.842522 140521014179584 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:46:40.842599 140521014179584 hlog.py:32] train/00149/eval_val/84/corr False
I1203 03:46:40.842671 140521014179584 hlog.py:32] train/00149/eval_val/84 
I1203 03:46:40.842741 140521014179584 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 03:46:40.842829 140521014179584 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 03:46:40.842931 140521014179584 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _population ( B , A ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:46:40.843019 140521014179584 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:46:40.843096 140521014179584 hlog.py:32] train/00149/eval_val/85/corr False
I1203 03:46:40.843168 140521014179584 hlog.py:32] train/00149/eval_val/85 
I1203 03:46:40.843239 140521014179584 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 03:46:40.843327 140521014179584 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 03:46:40.843441 140521014179584 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _state ( C ) , _const ( C , _stateid ( a ) ) , _river ( C ) ) ) )
I1203 03:46:40.843536 140521014179584 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 03:46:40.843614 140521014179584 hlog.py:32] train/00149/eval_val/86/corr False
I1203 03:46:40.843686 140521014179584 hlog.py:32] train/00149/eval_val/86 
I1203 03:46:40.843756 140521014179584 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 03:46:40.843847 140521014179584 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 03:46:40.843952 140521014179584 hlog.py:32] train/00149/eval_val/87/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1203 03:46:40.844048 140521014179584 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:46:40.844125 140521014179584 hlog.py:32] train/00149/eval_val/87/corr False
I1203 03:46:40.844197 140521014179584 hlog.py:32] train/00149/eval_val/87 
I1203 03:46:40.844268 140521014179584 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 03:46:40.844359 140521014179584 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 03:46:40.844454 140521014179584 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 03:46:40.844542 140521014179584 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 03:46:40.844619 140521014179584 hlog.py:32] train/00149/eval_val/88/corr True
I1203 03:46:40.844691 140521014179584 hlog.py:32] train/00149/eval_val/88 
I1203 03:46:40.844768 140521014179584 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 03:46:40.844865 140521014179584 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 03:46:40.844966 140521014179584 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:46:40.845060 140521014179584 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:46:40.845138 140521014179584 hlog.py:32] train/00149/eval_val/89/corr True
I1203 03:46:40.845210 140521014179584 hlog.py:32] train/00149/eval_val/89 
I1203 03:46:40.845281 140521014179584 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 03:46:40.845369 140521014179584 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 03:46:40.845469 140521014179584 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1203 03:46:40.845565 140521014179584 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 03:46:40.845643 140521014179584 hlog.py:32] train/00149/eval_val/90/corr False
I1203 03:46:40.845714 140521014179584 hlog.py:32] train/00149/eval_val/90 
I1203 03:46:40.845785 140521014179584 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 03:46:40.845877 140521014179584 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 03:46:40.845974 140521014179584 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.846065 140521014179584 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.846142 140521014179584 hlog.py:32] train/00149/eval_val/91/corr True
I1203 03:46:40.846214 140521014179584 hlog.py:32] train/00149/eval_val/91 
I1203 03:46:40.846284 140521014179584 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 03:46:40.846376 140521014179584 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 03:46:40.846474 140521014179584 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.846565 140521014179584 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.846643 140521014179584 hlog.py:32] train/00149/eval_val/92/corr True
I1203 03:46:40.846715 140521014179584 hlog.py:32] train/00149/eval_val/92 
I1203 03:46:40.846785 140521014179584 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 03:46:40.846874 140521014179584 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 03:46:40.846971 140521014179584 hlog.py:32] train/00149/eval_val/93/pred ( A , _largest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.847062 140521014179584 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.847140 140521014179584 hlog.py:32] train/00149/eval_val/93/corr False
I1203 03:46:40.847212 140521014179584 hlog.py:32] train/00149/eval_val/93 
I1203 03:46:40.847282 140521014179584 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 03:46:40.847372 140521014179584 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 03:46:40.847479 140521014179584 hlog.py:32] train/00149/eval_val/94/pred ( A , _largest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.847576 140521014179584 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.847655 140521014179584 hlog.py:32] train/00149/eval_val/94/corr False
I1203 03:46:40.847727 140521014179584 hlog.py:32] train/00149/eval_val/94 
I1203 03:46:40.847798 140521014179584 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 03:46:40.847891 140521014179584 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 03:46:40.847988 140521014179584 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.848079 140521014179584 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.848157 140521014179584 hlog.py:32] train/00149/eval_val/95/corr True
I1203 03:46:40.848229 140521014179584 hlog.py:32] train/00149/eval_val/95 
I1203 03:46:40.848300 140521014179584 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 03:46:40.848395 140521014179584 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 03:46:40.848497 140521014179584 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 03:46:40.848590 140521014179584 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 03:46:40.848667 140521014179584 hlog.py:32] train/00149/eval_val/96/corr True
I1203 03:46:40.848739 140521014179584 hlog.py:32] train/00149/eval_val/96 
I1203 03:46:40.848810 140521014179584 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 03:46:40.848910 140521014179584 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 03:46:40.849102 140521014179584 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 03:46:40.849203 140521014179584 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 03:46:40.849281 140521014179584 hlog.py:32] train/00149/eval_val/97/corr True
I1203 03:46:40.849354 140521014179584 hlog.py:32] train/00149/eval_val/97 
I1203 03:46:40.849424 140521014179584 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 03:46:40.849518 140521014179584 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 03:46:40.849617 140521014179584 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 03:46:40.849709 140521014179584 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 03:46:40.849786 140521014179584 hlog.py:32] train/00149/eval_val/98/corr True
I1203 03:46:40.849858 140521014179584 hlog.py:32] train/00149/eval_val/98 
I1203 03:46:40.849929 140521014179584 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 03:46:40.850022 140521014179584 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 03:46:40.850122 140521014179584 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:46:40.850214 140521014179584 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:46:40.850299 140521014179584 hlog.py:32] train/00149/eval_val/99/corr True
I1203 03:46:40.850372 140521014179584 hlog.py:32] train/00149/eval_val/99 
I1203 03:46:40.850443 140521014179584 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 03:46:40.850530 140521014179584 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 03:46:40.850627 140521014179584 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:46:40.850720 140521014179584 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:46:40.850798 140521014179584 hlog.py:32] train/00149/eval_val/100/corr False
I1203 03:46:40.850869 140521014179584 hlog.py:32] train/00149/eval_val/100 
I1203 03:46:40.850940 140521014179584 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 03:46:40.851028 140521014179584 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 03:46:40.851131 140521014179584 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:46:40.851223 140521014179584 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:46:40.851301 140521014179584 hlog.py:32] train/00149/eval_val/101/corr False
I1203 03:46:40.851372 140521014179584 hlog.py:32] train/00149/eval_val/101 
I1203 03:46:40.851451 140521014179584 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 03:46:40.851539 140521014179584 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 03:46:40.851632 140521014179584 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( over ) ) ) )
I1203 03:46:40.851721 140521014179584 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 03:46:40.851798 140521014179584 hlog.py:32] train/00149/eval_val/102/corr False
I1203 03:46:40.851870 140521014179584 hlog.py:32] train/00149/eval_val/102 
I1203 03:46:40.851941 140521014179584 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 03:46:40.852032 140521014179584 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 03:46:40.852127 140521014179584 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 03:46:40.852216 140521014179584 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 03:46:40.852293 140521014179584 hlog.py:32] train/00149/eval_val/103/corr True
I1203 03:46:40.852365 140521014179584 hlog.py:32] train/00149/eval_val/103 
I1203 03:46:40.852435 140521014179584 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 03:46:40.852520 140521014179584 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 03:46:40.852617 140521014179584 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:46:40.852705 140521014179584 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.852782 140521014179584 hlog.py:32] train/00149/eval_val/104/corr False
I1203 03:46:40.852854 140521014179584 hlog.py:32] train/00149/eval_val/104 
I1203 03:46:40.852925 140521014179584 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 03:46:40.853016 140521014179584 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 03:46:40.853111 140521014179584 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 03:46:40.853207 140521014179584 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 03:46:40.853285 140521014179584 hlog.py:32] train/00149/eval_val/105/corr True
I1203 03:46:40.853357 140521014179584 hlog.py:32] train/00149/eval_val/105 
I1203 03:46:40.853428 140521014179584 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 03:46:40.853518 140521014179584 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 03:46:40.853613 140521014179584 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 03:46:40.853702 140521014179584 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 03:46:40.853779 140521014179584 hlog.py:32] train/00149/eval_val/106/corr True
I1203 03:46:40.853851 140521014179584 hlog.py:32] train/00149/eval_val/106 
I1203 03:46:40.853921 140521014179584 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 03:46:40.854012 140521014179584 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 03:46:40.854107 140521014179584 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:46:40.854196 140521014179584 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:46:40.854274 140521014179584 hlog.py:32] train/00149/eval_val/107/corr True
I1203 03:46:40.854346 140521014179584 hlog.py:32] train/00149/eval_val/107 
I1203 03:46:40.854416 140521014179584 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 03:46:40.854507 140521014179584 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 03:46:40.854602 140521014179584 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 03:46:40.854691 140521014179584 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 03:46:40.854768 140521014179584 hlog.py:32] train/00149/eval_val/108/corr True
I1203 03:46:40.854839 140521014179584 hlog.py:32] train/00149/eval_val/108 
I1203 03:46:40.854910 140521014179584 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 03:46:40.854995 140521014179584 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 03:46:40.855091 140521014179584 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) ) )
I1203 03:46:40.855180 140521014179584 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 03:46:40.855257 140521014179584 hlog.py:32] train/00149/eval_val/109/corr False
I1203 03:46:40.855329 140521014179584 hlog.py:32] train/00149/eval_val/109 
I1203 03:46:40.855400 140521014179584 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 03:46:40.855493 140521014179584 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 03:46:40.855589 140521014179584 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) ) )
I1203 03:46:40.855678 140521014179584 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:46:40.855755 140521014179584 hlog.py:32] train/00149/eval_val/110/corr False
I1203 03:46:40.855827 140521014179584 hlog.py:32] train/00149/eval_val/110 
I1203 03:46:40.855897 140521014179584 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 03:46:40.855983 140521014179584 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 03:46:40.856078 140521014179584 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) ) )
I1203 03:46:40.856174 140521014179584 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 03:46:40.856252 140521014179584 hlog.py:32] train/00149/eval_val/111/corr False
I1203 03:46:40.856324 140521014179584 hlog.py:32] train/00149/eval_val/111 
I1203 03:46:40.856395 140521014179584 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 03:46:40.856480 140521014179584 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 03:46:40.856576 140521014179584 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) ) )
I1203 03:46:40.856665 140521014179584 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 03:46:40.856743 140521014179584 hlog.py:32] train/00149/eval_val/112/corr False
I1203 03:46:40.856814 140521014179584 hlog.py:32] train/00149/eval_val/112 
I1203 03:46:40.856884 140521014179584 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 03:46:40.856971 140521014179584 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 03:46:40.857067 140521014179584 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) ) )
I1203 03:46:40.857157 140521014179584 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:46:40.857234 140521014179584 hlog.py:32] train/00149/eval_val/113/corr False
I1203 03:46:40.857306 140521014179584 hlog.py:32] train/00149/eval_val/113 
I1203 03:46:40.857377 140521014179584 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 03:46:40.857463 140521014179584 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 03:46:40.857559 140521014179584 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:46:40.857649 140521014179584 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:46:40.857726 140521014179584 hlog.py:32] train/00149/eval_val/114/corr False
I1203 03:46:40.857798 140521014179584 hlog.py:32] train/00149/eval_val/114 
I1203 03:46:40.857869 140521014179584 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 03:46:40.857954 140521014179584 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 03:46:40.858050 140521014179584 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) ) )
I1203 03:46:40.858140 140521014179584 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 03:46:40.858218 140521014179584 hlog.py:32] train/00149/eval_val/115/corr False
I1203 03:46:40.858290 140521014179584 hlog.py:32] train/00149/eval_val/115 
I1203 03:46:40.858360 140521014179584 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 03:46:40.858446 140521014179584 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 03:46:40.858542 140521014179584 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 03:46:40.858631 140521014179584 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:46:40.858709 140521014179584 hlog.py:32] train/00149/eval_val/116/corr False
I1203 03:46:40.858780 140521014179584 hlog.py:32] train/00149/eval_val/116 
I1203 03:46:40.858851 140521014179584 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 03:46:40.858944 140521014179584 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 03:46:40.859048 140521014179584 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.859140 140521014179584 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.859218 140521014179584 hlog.py:32] train/00149/eval_val/117/corr True
I1203 03:46:40.859290 140521014179584 hlog.py:32] train/00149/eval_val/117 
I1203 03:46:40.859361 140521014179584 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 03:46:40.859461 140521014179584 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 03:46:40.859560 140521014179584 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.859651 140521014179584 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.859729 140521014179584 hlog.py:32] train/00149/eval_val/118/corr True
I1203 03:46:40.859801 140521014179584 hlog.py:32] train/00149/eval_val/118 
I1203 03:46:40.859872 140521014179584 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 03:46:40.859964 140521014179584 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 03:46:40.860061 140521014179584 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.860152 140521014179584 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:46:40.860229 140521014179584 hlog.py:32] train/00149/eval_val/119/corr True
I1203 03:46:40.860301 140521014179584 hlog.py:32] train/00149/eval_val/119 
I1203 03:46:40.860372 140521014179584 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 03:46:40.860461 140521014179584 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 03:46:40.860550 140521014179584 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 03:46:40.860635 140521014179584 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 03:46:40.860712 140521014179584 hlog.py:32] train/00149/eval_val/120/corr True
I1203 03:46:40.860783 140521014179584 hlog.py:32] train/00149/eval_val/120 
I1203 03:46:40.860854 140521014179584 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 03:46:40.860943 140521014179584 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 03:46:40.861032 140521014179584 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 03:46:40.861116 140521014179584 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 03:46:40.861193 140521014179584 hlog.py:32] train/00149/eval_val/121/corr True
I1203 03:46:40.861265 140521014179584 hlog.py:32] train/00149/eval_val/121 
I1203 03:46:40.861335 140521014179584 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 03:46:40.861427 140521014179584 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 03:46:40.861524 140521014179584 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 03:46:40.861615 140521014179584 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 03:46:40.861693 140521014179584 hlog.py:32] train/00149/eval_val/122/corr True
I1203 03:46:40.861764 140521014179584 hlog.py:32] train/00149/eval_val/122 
I1203 03:46:40.861835 140521014179584 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 03:46:40.861927 140521014179584 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 03:46:40.862031 140521014179584 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 03:46:40.862122 140521014179584 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 03:46:40.862199 140521014179584 hlog.py:32] train/00149/eval_val/123/corr True
I1203 03:46:40.862271 140521014179584 hlog.py:32] train/00149/eval_val/123 
I1203 03:46:40.862342 140521014179584 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 03:46:40.862434 140521014179584 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 03:46:40.862531 140521014179584 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 03:46:40.862622 140521014179584 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 03:46:40.862699 140521014179584 hlog.py:32] train/00149/eval_val/124/corr True
I1203 03:46:40.862771 140521014179584 hlog.py:32] train/00149/eval_val/124 
I1203 03:46:40.862842 140521014179584 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 03:46:40.862934 140521014179584 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 03:46:40.863031 140521014179584 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 03:46:40.863121 140521014179584 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 03:46:40.863198 140521014179584 hlog.py:32] train/00149/eval_val/125/corr True
I1203 03:46:40.863270 140521014179584 hlog.py:32] train/00149/eval_val/125 
I1203 03:46:40.863340 140521014179584 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 03:46:40.863438 140521014179584 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 03:46:40.863533 140521014179584 hlog.py:32] train/00149/eval_val/126/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:40.863620 140521014179584 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:40.863698 140521014179584 hlog.py:32] train/00149/eval_val/126/corr False
I1203 03:46:40.863770 140521014179584 hlog.py:32] train/00149/eval_val/126 
I1203 03:46:40.863840 140521014179584 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 03:46:40.863929 140521014179584 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 03:46:40.864022 140521014179584 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:40.864109 140521014179584 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:40.864187 140521014179584 hlog.py:32] train/00149/eval_val/127/corr False
I1203 03:46:40.864259 140521014179584 hlog.py:32] train/00149/eval_val/127 
I1203 03:46:40.864329 140521014179584 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 03:46:41.003050 140521014179584 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 03:46:41.003186 140521014179584 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.003287 140521014179584 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.003371 140521014179584 hlog.py:32] train/00149/eval_val/128/corr False
I1203 03:46:41.003458 140521014179584 hlog.py:32] train/00149/eval_val/128 
I1203 03:46:41.003533 140521014179584 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 03:46:41.003625 140521014179584 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 03:46:41.003731 140521014179584 hlog.py:32] train/00149/eval_val/129/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.003821 140521014179584 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.003898 140521014179584 hlog.py:32] train/00149/eval_val/129/corr False
I1203 03:46:41.003971 140521014179584 hlog.py:32] train/00149/eval_val/129 
I1203 03:46:41.004042 140521014179584 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 03:46:41.004129 140521014179584 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 03:46:41.004225 140521014179584 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 03:46:41.004312 140521014179584 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.004389 140521014179584 hlog.py:32] train/00149/eval_val/130/corr False
I1203 03:46:41.004461 140521014179584 hlog.py:32] train/00149/eval_val/130 
I1203 03:46:41.004531 140521014179584 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 03:46:41.004620 140521014179584 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 03:46:41.004712 140521014179584 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.004799 140521014179584 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.004876 140521014179584 hlog.py:32] train/00149/eval_val/131/corr False
I1203 03:46:41.004948 140521014179584 hlog.py:32] train/00149/eval_val/131 
I1203 03:46:41.005019 140521014179584 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 03:46:41.005105 140521014179584 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 03:46:41.005199 140521014179584 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 03:46:41.005287 140521014179584 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:46:41.005364 140521014179584 hlog.py:32] train/00149/eval_val/132/corr False
I1203 03:46:41.005436 140521014179584 hlog.py:32] train/00149/eval_val/132 
I1203 03:46:41.005506 140521014179584 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 03:46:41.005594 140521014179584 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 03:46:41.005687 140521014179584 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( all , usa ) ) ) )
I1203 03:46:41.005774 140521014179584 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 03:46:41.005850 140521014179584 hlog.py:32] train/00149/eval_val/133/corr False
I1203 03:46:41.005923 140521014179584 hlog.py:32] train/00149/eval_val/133 
I1203 03:46:41.005993 140521014179584 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 03:46:41.006080 140521014179584 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 03:46:41.006175 140521014179584 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.006269 140521014179584 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:46:41.006347 140521014179584 hlog.py:32] train/00149/eval_val/134/corr False
I1203 03:46:41.006419 140521014179584 hlog.py:32] train/00149/eval_val/134 
I1203 03:46:41.006490 140521014179584 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 03:46:41.006584 140521014179584 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 03:46:41.006692 140521014179584 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:46:41.006787 140521014179584 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:46:41.006864 140521014179584 hlog.py:32] train/00149/eval_val/135/corr True
I1203 03:46:41.006936 140521014179584 hlog.py:32] train/00149/eval_val/135 
I1203 03:46:41.007006 140521014179584 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 03:46:41.007095 140521014179584 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 03:46:41.007190 140521014179584 hlog.py:32] train/00149/eval_val/136/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.007280 140521014179584 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.007357 140521014179584 hlog.py:32] train/00149/eval_val/136/corr False
I1203 03:46:41.007437 140521014179584 hlog.py:32] train/00149/eval_val/136 
I1203 03:46:41.007509 140521014179584 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 03:46:41.007597 140521014179584 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 03:46:41.007693 140521014179584 hlog.py:32] train/00149/eval_val/137/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.007782 140521014179584 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.007859 140521014179584 hlog.py:32] train/00149/eval_val/137/corr False
I1203 03:46:41.007931 140521014179584 hlog.py:32] train/00149/eval_val/137 
I1203 03:46:41.008001 140521014179584 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 03:46:41.008088 140521014179584 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 03:46:41.008183 140521014179584 hlog.py:32] train/00149/eval_val/138/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.008272 140521014179584 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.008349 140521014179584 hlog.py:32] train/00149/eval_val/138/corr False
I1203 03:46:41.008420 140521014179584 hlog.py:32] train/00149/eval_val/138 
I1203 03:46:41.008491 140521014179584 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 03:46:41.008581 140521014179584 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 03:46:41.008677 140521014179584 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.008765 140521014179584 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:46:41.008842 140521014179584 hlog.py:32] train/00149/eval_val/139/corr True
I1203 03:46:41.008914 140521014179584 hlog.py:32] train/00149/eval_val/139 
I1203 03:46:41.008985 140521014179584 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 03:46:41.009071 140521014179584 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 03:46:41.009170 140521014179584 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:46:41.009263 140521014179584 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:46:41.009341 140521014179584 hlog.py:32] train/00149/eval_val/140/corr False
I1203 03:46:41.009412 140521014179584 hlog.py:32] train/00149/eval_val/140 
I1203 03:46:41.009483 140521014179584 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 03:46:41.009576 140521014179584 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 03:46:41.009675 140521014179584 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:46:41.009768 140521014179584 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:46:41.009845 140521014179584 hlog.py:32] train/00149/eval_val/141/corr False
I1203 03:46:41.009917 140521014179584 hlog.py:32] train/00149/eval_val/141 
I1203 03:46:41.009988 140521014179584 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 03:46:41.010074 140521014179584 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 03:46:41.010168 140521014179584 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 03:46:41.010255 140521014179584 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 03:46:41.010332 140521014179584 hlog.py:32] train/00149/eval_val/142/corr False
I1203 03:46:41.010404 140521014179584 hlog.py:32] train/00149/eval_val/142 
I1203 03:46:41.010475 140521014179584 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 03:46:41.010559 140521014179584 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 03:46:41.010653 140521014179584 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 03:46:41.010741 140521014179584 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 03:46:41.010818 140521014179584 hlog.py:32] train/00149/eval_val/143/corr False
I1203 03:46:41.010889 140521014179584 hlog.py:32] train/00149/eval_val/143 
I1203 03:46:41.010960 140521014179584 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 03:46:41.011045 140521014179584 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 03:46:41.011133 140521014179584 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 03:46:41.011221 140521014179584 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 03:46:41.011298 140521014179584 hlog.py:32] train/00149/eval_val/144/corr False
I1203 03:46:41.011369 140521014179584 hlog.py:32] train/00149/eval_val/144 
I1203 03:46:41.011447 140521014179584 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 03:46:41.011533 140521014179584 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 03:46:41.011628 140521014179584 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _major ( B ) , _city ( B ) ) )
I1203 03:46:41.011715 140521014179584 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 03:46:41.011792 140521014179584 hlog.py:32] train/00149/eval_val/145/corr False
I1203 03:46:41.011864 140521014179584 hlog.py:32] train/00149/eval_val/145 
I1203 03:46:41.011934 140521014179584 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 03:46:41.012025 140521014179584 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 03:46:41.012131 140521014179584 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _riverid ( united ) ) , _traverse ( D , C ) ) ) ) )
I1203 03:46:41.012228 140521014179584 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 03:46:41.012305 140521014179584 hlog.py:32] train/00149/eval_val/146/corr False
I1203 03:46:41.012376 140521014179584 hlog.py:32] train/00149/eval_val/146 
I1203 03:46:41.012453 140521014179584 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 03:46:41.012546 140521014179584 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 03:46:41.012644 140521014179584 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 03:46:41.012735 140521014179584 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 03:46:41.012812 140521014179584 hlog.py:32] train/00149/eval_val/147/corr True
I1203 03:46:41.012883 140521014179584 hlog.py:32] train/00149/eval_val/147 
I1203 03:46:41.012953 140521014179584 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 03:46:41.013033 140521014179584 hlog.py:32] train/00149/eval_val/acc 0.3919
I1203 03:46:41.062411 140521014179584 hlog.py:18] train/00149{16.28s}
I1203 03:46:41.064755 140521014179584 hlog.py:18] train{2503.63s}
