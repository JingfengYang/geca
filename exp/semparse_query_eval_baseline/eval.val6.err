I1203 00:59:20.295220 140293909243648 hlog.py:24] # --noTEST
I1203 00:59:20.295597 140293909243648 hlog.py:24] # --seed=6
I1203 00:59:20.295686 140293909243648 hlog.py:24] # --dataset=semparse
I1203 00:59:20.295768 140293909243648 hlog.py:24] # --model_dir=model
I1203 00:59:20.295844 140293909243648 hlog.py:24] # --n_checkpoint=10
I1203 00:59:20.295918 140293909243648 hlog.py:24] # --nologtostderr
I1203 00:59:20.295991 140293909243648 hlog.py:24] # --noalsologtostderr
I1203 00:59:20.296064 140293909243648 hlog.py:24] # --log_dir=
I1203 00:59:20.296137 140293909243648 hlog.py:24] # --verbosity=0
I1203 00:59:20.296210 140293909243648 hlog.py:24] # --verbosity=0
I1203 00:59:20.296282 140293909243648 hlog.py:24] # --stderrthreshold=fatal
I1203 00:59:20.296355 140293909243648 hlog.py:24] # --showprefixforinfo
I1203 00:59:20.296427 140293909243648 hlog.py:24] # --nodedup
I1203 00:59:20.296499 140293909243648 hlog.py:24] # --nobuild_comp_table
I1203 00:59:20.296572 140293909243648 hlog.py:24] # --semparse_split=query
I1203 00:59:20.296644 140293909243648 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 00:59:20.296717 140293909243648 hlog.py:24] # --semparse_mrl=logic
I1203 00:59:20.296789 140293909243648 hlog.py:24] # --val_fold=8
I1203 00:59:20.296861 140293909243648 hlog.py:24] # --test_fold=9
I1203 00:59:20.296933 140293909243648 hlog.py:24] # --n_emb=64
I1203 00:59:20.297006 140293909243648 hlog.py:24] # --n_enc=512
I1203 00:59:20.297078 140293909243648 hlog.py:24] # --dropout=0.5
I1203 00:59:20.297150 140293909243648 hlog.py:24] # --copy_sup
I1203 00:59:20.297222 140293909243648 hlog.py:24] # --n_epochs=150
I1203 00:59:20.297294 140293909243648 hlog.py:24] # --n_epoch_batches=32
I1203 00:59:20.297366 140293909243648 hlog.py:24] # --n_batch=64
I1203 00:59:20.297438 140293909243648 hlog.py:24] # --lr=0.001
I1203 00:59:20.297510 140293909243648 hlog.py:24] # --clip=1.0
I1203 00:59:20.297582 140293909243648 hlog.py:24] # --sched_factor=0.5
I1203 00:59:20.297654 140293909243648 hlog.py:24] # --norun_with_pdb
I1203 00:59:20.297726 140293909243648 hlog.py:24] # --nopdb_post_mortem
I1203 00:59:20.297798 140293909243648 hlog.py:24] # --norun_with_profiling
I1203 00:59:20.297871 140293909243648 hlog.py:24] # --use_cprofile_for_profiling
I1203 00:59:20.297943 140293909243648 hlog.py:24] # --noonly_check_args
I1203 00:59:20.298016 140293909243648 hlog.py:24] # --aug_ratio=0.0
I1203 00:59:20.298088 140293909243648 hlog.py:24] # --noinvert
I1203 00:59:20.298160 140293909243648 hlog.py:24] # --nohelp
I1203 00:59:20.298232 140293909243648 hlog.py:24] # --nohelp
I1203 00:59:20.298304 140293909243648 hlog.py:24] # --nohelpshort
I1203 00:59:20.298377 140293909243648 hlog.py:24] # --nohelpfull
I1203 00:59:20.298449 140293909243648 hlog.py:24] # --nohelpxml
I1203 00:59:20.298521 140293909243648 hlog.py:24] # 
I1203 00:59:20.320709 140293909243648 hlog.py:32] train 543
I1203 00:59:20.320816 140293909243648 hlog.py:32] aug 0
I1203 00:59:35.995723 140293909243648 hlog.py:32] train/00000/loss 3.1791
I1203 00:59:47.758979 140293909243648 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 00:59:49.641932 140293909243648 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 00:59:49.642541 140293909243648 hlog.py:18] train/00000{25.49s}
I1203 01:00:02.604755 140293909243648 hlog.py:32] train/00001/loss 1.1269
I1203 01:00:05.354427 140293909243648 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 01:00:05.817149 140293909243648 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 01:00:05.817729 140293909243648 hlog.py:18] train/00001{16.18s}
I1203 01:00:18.212427 140293909243648 hlog.py:32] train/00002/loss 0.7319
I1203 01:00:21.233313 140293909243648 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 01:00:21.703773 140293909243648 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 01:00:21.704268 140293909243648 hlog.py:18] train/00002{15.89s}
I1203 01:00:34.161633 140293909243648 hlog.py:32] train/00003/loss 0.5927
I1203 01:00:37.267894 140293909243648 hlog.py:32] train/00003/eval_train/acc 0.0270
I1203 01:00:37.752185 140293909243648 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 01:00:37.752683 140293909243648 hlog.py:18] train/00003{16.05s}
I1203 01:00:50.541831 140293909243648 hlog.py:32] train/00004/loss 0.4616
I1203 01:00:53.544221 140293909243648 hlog.py:32] train/00004/eval_train/acc 0.0610
I1203 01:00:54.070501 140293909243648 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 01:00:54.070982 140293909243648 hlog.py:18] train/00004{16.32s}
I1203 01:01:05.970215 140293909243648 hlog.py:32] train/00005/loss 0.3994
I1203 01:01:13.111348 140293909243648 hlog.py:32] train/00005/eval_train/acc 0.1600
I1203 01:01:14.344979 140293909243648 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 01:01:14.345712 140293909243648 hlog.py:18] train/00005{20.27s}
I1203 01:01:26.218930 140293909243648 hlog.py:32] train/00006/loss 0.3655
I1203 01:01:32.929761 140293909243648 hlog.py:32] train/00006/eval_train/acc 0.2320
I1203 01:01:34.129653 140293909243648 hlog.py:32] train/00006/eval_val/acc 0.0000
I1203 01:01:34.130103 140293909243648 hlog.py:18] train/00006{19.78s}
I1203 01:01:46.319459 140293909243648 hlog.py:32] train/00007/loss 0.2996
I1203 01:01:49.758889 140293909243648 hlog.py:32] train/00007/eval_train/acc 0.2890
I1203 01:01:50.341266 140293909243648 hlog.py:32] train/00007/eval_val/acc 0.0000
I1203 01:01:50.341846 140293909243648 hlog.py:18] train/00007{16.21s}
I1203 01:02:02.442584 140293909243648 hlog.py:32] train/00008/loss 0.2676
I1203 01:02:05.990342 140293909243648 hlog.py:32] train/00008/eval_train/acc 0.3380
I1203 01:02:06.588667 140293909243648 hlog.py:32] train/00008/eval_val/acc 0.0676
I1203 01:02:06.589119 140293909243648 hlog.py:18] train/00008{16.25s}
I1203 01:02:18.128453 140293909243648 hlog.py:32] train/00009/loss 0.2457
I1203 01:02:21.727544 140293909243648 hlog.py:32] train/00009/eval_train/acc 0.3950
I1203 01:02:22.284992 140293909243648 hlog.py:32] train/00009/eval_val/acc 0.0946
I1203 01:02:22.430777 140293909243648 hlog.py:18] train/00009{15.84s}
I1203 01:02:35.052135 140293909243648 hlog.py:32] train/00010/loss 0.2016
I1203 01:02:39.121618 140293909243648 hlog.py:32] train/00010/eval_train/acc 0.5390
I1203 01:02:39.729787 140293909243648 hlog.py:32] train/00010/eval_val/acc 0.1486
I1203 01:02:39.730386 140293909243648 hlog.py:18] train/00010{17.30s}
I1203 01:02:53.202390 140293909243648 hlog.py:32] train/00011/loss 0.1944
I1203 01:02:56.717518 140293909243648 hlog.py:32] train/00011/eval_train/acc 0.5340
I1203 01:02:57.254282 140293909243648 hlog.py:32] train/00011/eval_val/acc 0.1081
I1203 01:02:57.254769 140293909243648 hlog.py:18] train/00011{17.52s}
I1203 01:03:09.725469 140293909243648 hlog.py:32] train/00012/loss 0.1734
I1203 01:03:13.443036 140293909243648 hlog.py:32] train/00012/eval_train/acc 0.4750
I1203 01:03:14.027091 140293909243648 hlog.py:32] train/00012/eval_val/acc 0.1081
I1203 01:03:14.027602 140293909243648 hlog.py:18] train/00012{16.77s}
I1203 01:03:26.992766 140293909243648 hlog.py:32] train/00013/loss 0.1449
I1203 01:03:31.062563 140293909243648 hlog.py:32] train/00013/eval_train/acc 0.6770
I1203 01:03:31.664321 140293909243648 hlog.py:32] train/00013/eval_val/acc 0.1149
I1203 01:03:31.664822 140293909243648 hlog.py:18] train/00013{17.64s}
I1203 01:03:43.593242 140293909243648 hlog.py:32] train/00014/loss 0.1326
I1203 01:03:47.803697 140293909243648 hlog.py:32] train/00014/eval_train/acc 0.6270
I1203 01:03:48.406154 140293909243648 hlog.py:32] train/00014/eval_val/acc 0.1824
I1203 01:03:48.406603 140293909243648 hlog.py:18] train/00014{16.74s}
I1203 01:03:59.812347 140293909243648 hlog.py:32] train/00015/loss 0.1163
I1203 01:04:04.338972 140293909243648 hlog.py:32] train/00015/eval_train/acc 0.6630
I1203 01:04:04.954216 140293909243648 hlog.py:32] train/00015/eval_val/acc 0.1689
I1203 01:04:04.954917 140293909243648 hlog.py:18] train/00015{16.55s}
I1203 01:04:17.148608 140293909243648 hlog.py:32] train/00016/loss 0.1192
I1203 01:04:21.573121 140293909243648 hlog.py:32] train/00016/eval_train/acc 0.7000
I1203 01:04:22.187966 140293909243648 hlog.py:32] train/00016/eval_val/acc 0.2365
I1203 01:04:22.188466 140293909243648 hlog.py:18] train/00016{17.23s}
I1203 01:04:33.225979 140293909243648 hlog.py:32] train/00017/loss 0.1193
I1203 01:04:37.076689 140293909243648 hlog.py:32] train/00017/eval_train/acc 0.6950
I1203 01:04:37.679497 140293909243648 hlog.py:32] train/00017/eval_val/acc 0.1284
I1203 01:04:37.680035 140293909243648 hlog.py:18] train/00017{15.49s}
I1203 01:04:49.580644 140293909243648 hlog.py:32] train/00018/loss 0.1006
I1203 01:04:54.211274 140293909243648 hlog.py:32] train/00018/eval_train/acc 0.7390
I1203 01:04:54.799760 140293909243648 hlog.py:32] train/00018/eval_val/acc 0.1351
I1203 01:04:54.800256 140293909243648 hlog.py:18] train/00018{17.12s}
I1203 01:05:07.045706 140293909243648 hlog.py:32] train/00019/loss 0.1058
I1203 01:05:10.824496 140293909243648 hlog.py:32] train/00019/eval_train/acc 0.7690
I1203 01:05:11.434992 140293909243648 hlog.py:32] train/00019/eval_val/acc 0.2162
I1203 01:05:11.465248 140293909243648 hlog.py:18] train/00019{16.66s}
I1203 01:05:22.964044 140293909243648 hlog.py:32] train/00020/loss 0.0897
I1203 01:05:26.739173 140293909243648 hlog.py:32] train/00020/eval_train/acc 0.7680
I1203 01:05:27.314382 140293909243648 hlog.py:32] train/00020/eval_val/acc 0.3041
I1203 01:05:27.314894 140293909243648 hlog.py:18] train/00020{15.85s}
I1203 01:05:38.824554 140293909243648 hlog.py:32] train/00021/loss 0.0779
I1203 01:05:42.743610 140293909243648 hlog.py:32] train/00021/eval_train/acc 0.7760
I1203 01:05:43.379223 140293909243648 hlog.py:32] train/00021/eval_val/acc 0.2703
I1203 01:05:43.379942 140293909243648 hlog.py:18] train/00021{16.06s}
I1203 01:05:54.516324 140293909243648 hlog.py:32] train/00022/loss 0.0636
I1203 01:05:58.741986 140293909243648 hlog.py:32] train/00022/eval_train/acc 0.8670
I1203 01:05:59.368973 140293909243648 hlog.py:32] train/00022/eval_val/acc 0.2635
I1203 01:05:59.369659 140293909243648 hlog.py:18] train/00022{15.99s}
I1203 01:06:11.058066 140293909243648 hlog.py:32] train/00023/loss 0.0657
I1203 01:06:14.891205 140293909243648 hlog.py:32] train/00023/eval_train/acc 0.8440
I1203 01:06:15.513273 140293909243648 hlog.py:32] train/00023/eval_val/acc 0.3041
I1203 01:06:15.513881 140293909243648 hlog.py:18] train/00023{16.14s}
I1203 01:06:27.318454 140293909243648 hlog.py:32] train/00024/loss 0.0553
I1203 01:06:31.259967 140293909243648 hlog.py:32] train/00024/eval_train/acc 0.8770
I1203 01:06:31.839079 140293909243648 hlog.py:32] train/00024/eval_val/acc 0.3581
I1203 01:06:31.839619 140293909243648 hlog.py:18] train/00024{16.33s}
I1203 01:06:44.072667 140293909243648 hlog.py:32] train/00025/loss 0.0562
I1203 01:06:48.481114 140293909243648 hlog.py:32] train/00025/eval_train/acc 0.8990
I1203 01:06:49.111075 140293909243648 hlog.py:32] train/00025/eval_val/acc 0.3176
I1203 01:06:49.111668 140293909243648 hlog.py:18] train/00025{17.27s}
I1203 01:07:00.605781 140293909243648 hlog.py:32] train/00026/loss 0.0569
I1203 01:07:04.349659 140293909243648 hlog.py:32] train/00026/eval_train/acc 0.8890
I1203 01:07:04.943313 140293909243648 hlog.py:32] train/00026/eval_val/acc 0.2838
I1203 01:07:04.943854 140293909243648 hlog.py:18] train/00026{15.83s}
I1203 01:07:17.647719 140293909243648 hlog.py:32] train/00027/loss 0.0544
I1203 01:07:21.250755 140293909243648 hlog.py:32] train/00027/eval_train/acc 0.9270
I1203 01:07:21.904830 140293909243648 hlog.py:32] train/00027/eval_val/acc 0.3378
I1203 01:07:21.905383 140293909243648 hlog.py:18] train/00027{16.96s}
I1203 01:07:34.082780 140293909243648 hlog.py:32] train/00028/loss 0.0563
I1203 01:07:38.852751 140293909243648 hlog.py:32] train/00028/eval_train/acc 0.9000
I1203 01:07:39.393597 140293909243648 hlog.py:32] train/00028/eval_val/acc 0.2703
I1203 01:07:39.394090 140293909243648 hlog.py:18] train/00028{17.49s}
I1203 01:07:50.734196 140293909243648 hlog.py:32] train/00029/loss 0.0521
I1203 01:07:54.667490 140293909243648 hlog.py:32] train/00029/eval_train/acc 0.9070
I1203 01:07:55.227321 140293909243648 hlog.py:32] train/00029/eval_val/acc 0.3378
I1203 01:07:55.329534 140293909243648 hlog.py:18] train/00029{15.94s}
I1203 01:08:07.292302 140293909243648 hlog.py:32] train/00030/loss 0.0502
I1203 01:08:11.235871 140293909243648 hlog.py:32] train/00030/eval_train/acc 0.9130
I1203 01:08:11.845187 140293909243648 hlog.py:32] train/00030/eval_val/acc 0.3378
I1203 01:08:11.845713 140293909243648 hlog.py:18] train/00030{16.52s}
I1203 01:08:23.231046 140293909243648 hlog.py:32] train/00031/loss 0.0470
I1203 01:08:26.928838 140293909243648 hlog.py:32] train/00031/eval_train/acc 0.9270
I1203 01:08:27.460461 140293909243648 hlog.py:32] train/00031/eval_val/acc 0.3986
I1203 01:08:27.460956 140293909243648 hlog.py:18] train/00031{15.62s}
I1203 01:08:38.186499 140293909243648 hlog.py:32] train/00032/loss 0.0375
I1203 01:08:41.889166 140293909243648 hlog.py:32] train/00032/eval_train/acc 0.9270
I1203 01:08:42.470480 140293909243648 hlog.py:32] train/00032/eval_val/acc 0.3514
I1203 01:08:42.471001 140293909243648 hlog.py:18] train/00032{15.01s}
I1203 01:08:54.584345 140293909243648 hlog.py:32] train/00033/loss 0.0390
I1203 01:08:58.288336 140293909243648 hlog.py:32] train/00033/eval_train/acc 0.9490
I1203 01:08:58.881679 140293909243648 hlog.py:32] train/00033/eval_val/acc 0.2973
I1203 01:08:58.882164 140293909243648 hlog.py:18] train/00033{16.41s}
I1203 01:09:12.386044 140293909243648 hlog.py:32] train/00034/loss 0.0429
I1203 01:09:16.208186 140293909243648 hlog.py:32] train/00034/eval_train/acc 0.8900
I1203 01:09:16.808112 140293909243648 hlog.py:32] train/00034/eval_val/acc 0.4122
I1203 01:09:16.808595 140293909243648 hlog.py:18] train/00034{17.93s}
I1203 01:09:28.657380 140293909243648 hlog.py:32] train/00035/loss 0.0337
I1203 01:09:32.473975 140293909243648 hlog.py:32] train/00035/eval_train/acc 0.9400
I1203 01:09:33.030615 140293909243648 hlog.py:32] train/00035/eval_val/acc 0.3784
I1203 01:09:33.031118 140293909243648 hlog.py:18] train/00035{16.22s}
I1203 01:09:44.584535 140293909243648 hlog.py:32] train/00036/loss 0.0346
I1203 01:09:48.552699 140293909243648 hlog.py:32] train/00036/eval_train/acc 0.9650
I1203 01:09:49.117486 140293909243648 hlog.py:32] train/00036/eval_val/acc 0.3784
I1203 01:09:49.118155 140293909243648 hlog.py:18] train/00036{16.09s}
I1203 01:10:01.589061 140293909243648 hlog.py:32] train/00037/loss 0.0299
I1203 01:10:05.424721 140293909243648 hlog.py:32] train/00037/eval_train/acc 0.9560
I1203 01:10:06.035609 140293909243648 hlog.py:32] train/00037/eval_val/acc 0.3919
I1203 01:10:06.036092 140293909243648 hlog.py:18] train/00037{16.92s}
I1203 01:10:17.452819 140293909243648 hlog.py:32] train/00038/loss 0.0250
I1203 01:10:21.293979 140293909243648 hlog.py:32] train/00038/eval_train/acc 0.9630
I1203 01:10:21.870045 140293909243648 hlog.py:32] train/00038/eval_val/acc 0.4257
I1203 01:10:21.870578 140293909243648 hlog.py:18] train/00038{15.83s}
I1203 01:10:34.502995 140293909243648 hlog.py:32] train/00039/loss 0.0227
I1203 01:10:38.236599 140293909243648 hlog.py:32] train/00039/eval_train/acc 0.9870
I1203 01:10:38.832917 140293909243648 hlog.py:32] train/00039/eval_val/acc 0.4662
I1203 01:10:38.862542 140293909243648 hlog.py:18] train/00039{16.99s}
I1203 01:10:50.989393 140293909243648 hlog.py:32] train/00040/loss 0.0242
I1203 01:10:55.091741 140293909243648 hlog.py:32] train/00040/eval_train/acc 0.9270
I1203 01:10:55.647606 140293909243648 hlog.py:32] train/00040/eval_val/acc 0.4189
I1203 01:10:55.648136 140293909243648 hlog.py:18] train/00040{16.79s}
I1203 01:11:07.746181 140293909243648 hlog.py:32] train/00041/loss 0.0258
I1203 01:11:11.518666 140293909243648 hlog.py:32] train/00041/eval_train/acc 0.9720
I1203 01:11:12.083667 140293909243648 hlog.py:32] train/00041/eval_val/acc 0.4392
I1203 01:11:12.084146 140293909243648 hlog.py:18] train/00041{16.44s}
I1203 01:11:23.639567 140293909243648 hlog.py:32] train/00042/loss 0.0270
I1203 01:11:27.906473 140293909243648 hlog.py:32] train/00042/eval_train/acc 0.9600
I1203 01:11:28.450642 140293909243648 hlog.py:32] train/00042/eval_val/acc 0.3986
I1203 01:11:28.451133 140293909243648 hlog.py:18] train/00042{16.37s}
I1203 01:11:39.846400 140293909243648 hlog.py:32] train/00043/loss 0.0234
I1203 01:11:43.723835 140293909243648 hlog.py:32] train/00043/eval_train/acc 0.9600
I1203 01:11:44.311493 140293909243648 hlog.py:32] train/00043/eval_val/acc 0.4662
I1203 01:11:44.312017 140293909243648 hlog.py:18] train/00043{15.86s}
I1203 01:11:55.990209 140293909243648 hlog.py:32] train/00044/loss 0.0266
I1203 01:11:59.951068 140293909243648 hlog.py:32] train/00044/eval_train/acc 0.9780
I1203 01:12:00.510605 140293909243648 hlog.py:32] train/00044/eval_val/acc 0.4662
I1203 01:12:00.511039 140293909243648 hlog.py:18] train/00044{16.20s}
I1203 01:12:13.042362 140293909243648 hlog.py:32] train/00045/loss 0.0220
I1203 01:12:16.819472 140293909243648 hlog.py:32] train/00045/eval_train/acc 0.9790
I1203 01:12:17.405598 140293909243648 hlog.py:32] train/00045/eval_val/acc 0.3986
I1203 01:12:17.406098 140293909243648 hlog.py:18] train/00045{16.89s}
I1203 01:12:28.568865 140293909243648 hlog.py:32] train/00046/loss 0.0170
I1203 01:12:33.313218 140293909243648 hlog.py:32] train/00046/eval_train/acc 0.9350
I1203 01:12:33.948814 140293909243648 hlog.py:32] train/00046/eval_val/acc 0.4662
I1203 01:12:33.949484 140293909243648 hlog.py:18] train/00046{16.54s}
I1203 01:12:46.550355 140293909243648 hlog.py:32] train/00047/loss 0.0192
I1203 01:12:50.269332 140293909243648 hlog.py:32] train/00047/eval_train/acc 0.9900
I1203 01:12:50.878647 140293909243648 hlog.py:32] train/00047/eval_val/acc 0.4797
I1203 01:12:50.879160 140293909243648 hlog.py:18] train/00047{16.93s}
I1203 01:13:03.366959 140293909243648 hlog.py:32] train/00048/loss 0.0277
I1203 01:13:06.909162 140293909243648 hlog.py:32] train/00048/eval_train/acc 0.9760
I1203 01:13:07.496750 140293909243648 hlog.py:32] train/00048/eval_val/acc 0.4797
I1203 01:13:07.497416 140293909243648 hlog.py:18] train/00048{16.62s}
I1203 01:13:19.329151 140293909243648 hlog.py:32] train/00049/loss 0.0378
I1203 01:13:23.117356 140293909243648 hlog.py:32] train/00049/eval_train/acc 0.9420
I1203 01:13:23.708017 140293909243648 hlog.py:32] train/00049/eval_val/acc 0.4257
I1203 01:13:23.885327 140293909243648 hlog.py:18] train/00049{16.39s}
I1203 01:13:35.937914 140293909243648 hlog.py:32] train/00050/loss 0.0284
I1203 01:13:40.113184 140293909243648 hlog.py:32] train/00050/eval_train/acc 0.9570
I1203 01:13:40.692928 140293909243648 hlog.py:32] train/00050/eval_val/acc 0.4595
I1203 01:13:40.693398 140293909243648 hlog.py:18] train/00050{16.81s}
I1203 01:13:52.622481 140293909243648 hlog.py:32] train/00051/loss 0.0278
I1203 01:13:56.340686 140293909243648 hlog.py:32] train/00051/eval_train/acc 0.9830
I1203 01:13:56.909009 140293909243648 hlog.py:32] train/00051/eval_val/acc 0.5068
I1203 01:13:56.909526 140293909243648 hlog.py:18] train/00051{16.22s}
I1203 01:14:09.934222 140293909243648 hlog.py:32] train/00052/loss 0.0281
I1203 01:14:13.693147 140293909243648 hlog.py:32] train/00052/eval_train/acc 0.9760
I1203 01:14:14.285988 140293909243648 hlog.py:32] train/00052/eval_val/acc 0.5000
I1203 01:14:14.286469 140293909243648 hlog.py:18] train/00052{17.38s}
I1203 01:14:27.498677 140293909243648 hlog.py:32] train/00053/loss 0.0191
I1203 01:14:31.338224 140293909243648 hlog.py:32] train/00053/eval_train/acc 0.9780
I1203 01:14:31.952397 140293909243648 hlog.py:32] train/00053/eval_val/acc 0.4527
I1203 01:14:31.952894 140293909243648 hlog.py:18] train/00053{17.67s}
I1203 01:14:43.964012 140293909243648 hlog.py:32] train/00054/loss 0.0245
I1203 01:14:47.981143 140293909243648 hlog.py:32] train/00054/eval_train/acc 0.9760
I1203 01:14:48.526180 140293909243648 hlog.py:32] train/00054/eval_val/acc 0.4122
I1203 01:14:48.527044 140293909243648 hlog.py:18] train/00054{16.57s}
I1203 01:15:01.083099 140293909243648 hlog.py:32] train/00055/loss 0.0448
I1203 01:15:04.983898 140293909243648 hlog.py:32] train/00055/eval_train/acc 0.9590
I1203 01:15:05.562655 140293909243648 hlog.py:32] train/00055/eval_val/acc 0.4189
I1203 01:15:05.563144 140293909243648 hlog.py:18] train/00055{17.04s}
I1203 01:15:17.822903 140293909243648 hlog.py:32] train/00056/loss 0.0473
I1203 01:15:21.559828 140293909243648 hlog.py:32] train/00056/eval_train/acc 0.9530
I1203 01:15:22.142452 140293909243648 hlog.py:32] train/00056/eval_val/acc 0.4459
I1203 01:15:22.143057 140293909243648 hlog.py:18] train/00056{16.58s}
I1203 01:15:34.206851 140293909243648 hlog.py:32] train/00057/loss 0.0589
I1203 01:15:38.157336 140293909243648 hlog.py:32] train/00057/eval_train/acc 0.9500
I1203 01:15:38.763893 140293909243648 hlog.py:32] train/00057/eval_val/acc 0.4527
I1203 01:15:38.764361 140293909243648 hlog.py:18] train/00057{16.62s}
I1203 01:15:50.776893 140293909243648 hlog.py:32] train/00058/loss 0.0511
I1203 01:15:54.705462 140293909243648 hlog.py:32] train/00058/eval_train/acc 0.9620
I1203 01:15:55.324853 140293909243648 hlog.py:32] train/00058/eval_val/acc 0.4527
I1203 01:15:55.325525 140293909243648 hlog.py:18] train/00058{16.56s}
I1203 01:16:07.399797 140293909243648 hlog.py:32] train/00059/loss 0.0395
I1203 01:16:11.474441 140293909243648 hlog.py:32] train/00059/eval_train/acc 0.9540
I1203 01:16:12.025919 140293909243648 hlog.py:32] train/00059/eval_val/acc 0.5270
I1203 01:16:12.058469 140293909243648 hlog.py:18] train/00059{16.73s}
I1203 01:16:23.552680 140293909243648 hlog.py:32] train/00060/loss 0.0359
I1203 01:16:27.269719 140293909243648 hlog.py:32] train/00060/eval_train/acc 0.9810
I1203 01:16:27.840045 140293909243648 hlog.py:32] train/00060/eval_val/acc 0.4865
I1203 01:16:27.840527 140293909243648 hlog.py:18] train/00060{15.78s}
I1203 01:16:40.936706 140293909243648 hlog.py:32] train/00061/loss 0.0480
I1203 01:16:44.856275 140293909243648 hlog.py:32] train/00061/eval_train/acc 0.9640
I1203 01:16:45.396223 140293909243648 hlog.py:32] train/00061/eval_val/acc 0.4527
I1203 01:16:45.396709 140293909243648 hlog.py:18] train/00061{17.56s}
I1203 01:16:57.046172 140293909243648 hlog.py:32] train/00062/loss 0.0418
I1203 01:17:00.902703 140293909243648 hlog.py:32] train/00062/eval_train/acc 0.9440
I1203 01:17:01.463799 140293909243648 hlog.py:32] train/00062/eval_val/acc 0.4595
I1203 01:17:01.464269 140293909243648 hlog.py:18] train/00062{16.07s}
I1203 01:17:13.591202 140293909243648 hlog.py:32] train/00063/loss 0.0400
I1203 01:17:17.301944 140293909243648 hlog.py:32] train/00063/eval_train/acc 0.9810
I1203 01:17:17.845041 140293909243648 hlog.py:32] train/00063/eval_val/acc 0.4662
I1203 01:17:17.845529 140293909243648 hlog.py:18] train/00063{16.38s}
I1203 01:17:29.586963 140293909243648 hlog.py:32] train/00064/loss 0.0266
I1203 01:17:33.286479 140293909243648 hlog.py:32] train/00064/eval_train/acc 0.9780
I1203 01:17:33.860799 140293909243648 hlog.py:32] train/00064/eval_val/acc 0.4797
I1203 01:17:33.861386 140293909243648 hlog.py:18] train/00064{16.02s}
I1203 01:17:45.814371 140293909243648 hlog.py:32] train/00065/loss 0.0227
I1203 01:17:49.547989 140293909243648 hlog.py:32] train/00065/eval_train/acc 0.9960
I1203 01:17:50.119379 140293909243648 hlog.py:32] train/00065/eval_val/acc 0.5338
I1203 01:17:50.119933 140293909243648 hlog.py:18] train/00065{16.26s}
I1203 01:18:01.685985 140293909243648 hlog.py:32] train/00066/loss 0.0199
I1203 01:18:05.394827 140293909243648 hlog.py:32] train/00066/eval_train/acc 0.9770
I1203 01:18:05.952379 140293909243648 hlog.py:32] train/00066/eval_val/acc 0.4662
I1203 01:18:05.952873 140293909243648 hlog.py:18] train/00066{15.83s}
I1203 01:18:18.192698 140293909243648 hlog.py:32] train/00067/loss 0.0255
I1203 01:18:21.987153 140293909243648 hlog.py:32] train/00067/eval_train/acc 0.9650
I1203 01:18:22.522262 140293909243648 hlog.py:32] train/00067/eval_val/acc 0.4122
I1203 01:18:22.522769 140293909243648 hlog.py:18] train/00067{16.57s}
I1203 01:18:34.412678 140293909243648 hlog.py:32] train/00068/loss 0.0296
I1203 01:18:38.164031 140293909243648 hlog.py:32] train/00068/eval_train/acc 0.9840
I1203 01:18:38.777803 140293909243648 hlog.py:32] train/00068/eval_val/acc 0.5135
I1203 01:18:38.778313 140293909243648 hlog.py:18] train/00068{16.26s}
I1203 01:18:51.585653 140293909243648 hlog.py:32] train/00069/loss 0.0282
I1203 01:18:55.453260 140293909243648 hlog.py:32] train/00069/eval_train/acc 0.9850
I1203 01:18:56.027346 140293909243648 hlog.py:32] train/00069/eval_val/acc 0.4730
I1203 01:18:56.185332 140293909243648 hlog.py:18] train/00069{17.41s}
I1203 01:19:08.885367 140293909243648 hlog.py:32] train/00070/loss 0.0436
I1203 01:19:12.789753 140293909243648 hlog.py:32] train/00070/eval_train/acc 0.9820
I1203 01:19:13.368419 140293909243648 hlog.py:32] train/00070/eval_val/acc 0.4324
I1203 01:19:13.368930 140293909243648 hlog.py:18] train/00070{17.18s}
I1203 01:19:25.800775 140293909243648 hlog.py:32] train/00071/loss 0.0306
I1203 01:19:29.838430 140293909243648 hlog.py:32] train/00071/eval_train/acc 0.9930
I1203 01:19:30.415868 140293909243648 hlog.py:32] train/00071/eval_val/acc 0.5068
I1203 01:19:30.416347 140293909243648 hlog.py:18] train/00071{17.05s}
I1203 01:19:41.686422 140293909243648 hlog.py:32] train/00072/loss 0.0252
I1203 01:19:45.719128 140293909243648 hlog.py:32] train/00072/eval_train/acc 0.9890
I1203 01:19:46.307093 140293909243648 hlog.py:32] train/00072/eval_val/acc 0.5068
I1203 01:19:46.307588 140293909243648 hlog.py:18] train/00072{15.89s}
I1203 01:19:58.663966 140293909243648 hlog.py:32] train/00073/loss 0.0235
I1203 01:20:02.440432 140293909243648 hlog.py:32] train/00073/eval_train/acc 0.9850
I1203 01:20:03.010490 140293909243648 hlog.py:32] train/00073/eval_val/acc 0.5135
I1203 01:20:03.011002 140293909243648 hlog.py:18] train/00073{16.70s}
I1203 01:20:15.341095 140293909243648 hlog.py:32] train/00074/loss 0.0237
I1203 01:20:19.198358 140293909243648 hlog.py:32] train/00074/eval_train/acc 0.9790
I1203 01:20:19.812636 140293909243648 hlog.py:32] train/00074/eval_val/acc 0.5270
I1203 01:20:19.813192 140293909243648 hlog.py:18] train/00074{16.80s}
I1203 01:20:32.211689 140293909243648 hlog.py:32] train/00075/loss 0.0198
I1203 01:20:36.396717 140293909243648 hlog.py:32] train/00075/eval_train/acc 0.9890
I1203 01:20:37.006886 140293909243648 hlog.py:32] train/00075/eval_val/acc 0.5135
I1203 01:20:37.007420 140293909243648 hlog.py:18] train/00075{17.19s}
I1203 01:20:49.139374 140293909243648 hlog.py:32] train/00076/loss 0.0187
I1203 01:20:52.957870 140293909243648 hlog.py:32] train/00076/eval_train/acc 0.9920
I1203 01:20:53.569805 140293909243648 hlog.py:32] train/00076/eval_val/acc 0.5203
I1203 01:20:53.570390 140293909243648 hlog.py:18] train/00076{16.56s}
I1203 01:21:05.336687 140293909243648 hlog.py:32] train/00077/loss 0.0140
I1203 01:21:09.554512 140293909243648 hlog.py:32] train/00077/eval_train/acc 0.9990
I1203 01:21:10.226231 140293909243648 hlog.py:32] train/00077/eval_val/acc 0.5203
I1203 01:21:10.226871 140293909243648 hlog.py:18] train/00077{16.66s}
I1203 01:21:22.738952 140293909243648 hlog.py:32] train/00078/loss 0.0110
I1203 01:21:26.517979 140293909243648 hlog.py:32] train/00078/eval_train/acc 0.9890
I1203 01:21:27.142842 140293909243648 hlog.py:32] train/00078/eval_val/acc 0.5203
I1203 01:21:27.143316 140293909243648 hlog.py:18] train/00078{16.92s}
I1203 01:21:39.117797 140293909243648 hlog.py:32] train/00079/loss 0.0116
I1203 01:21:43.422056 140293909243648 hlog.py:32] train/00079/eval_train/acc 0.9990
I1203 01:21:44.022736 140293909243648 hlog.py:32] train/00079/eval_val/acc 0.5270
I1203 01:21:44.052988 140293909243648 hlog.py:18] train/00079{16.91s}
I1203 01:21:55.940918 140293909243648 hlog.py:32] train/00080/loss 0.0100
I1203 01:22:00.078192 140293909243648 hlog.py:32] train/00080/eval_train/acc 0.9980
I1203 01:22:00.649006 140293909243648 hlog.py:32] train/00080/eval_val/acc 0.5473
I1203 01:22:00.649519 140293909243648 hlog.py:18] train/00080{16.60s}
I1203 01:22:12.064491 140293909243648 hlog.py:32] train/00081/loss 0.0082
I1203 01:22:16.026168 140293909243648 hlog.py:32] train/00081/eval_train/acc 1.0000
I1203 01:22:16.595020 140293909243648 hlog.py:32] train/00081/eval_val/acc 0.5338
I1203 01:22:16.595538 140293909243648 hlog.py:18] train/00081{15.95s}
I1203 01:22:28.558840 140293909243648 hlog.py:32] train/00082/loss 0.0079
I1203 01:22:32.644963 140293909243648 hlog.py:32] train/00082/eval_train/acc 0.9960
I1203 01:22:33.223777 140293909243648 hlog.py:32] train/00082/eval_val/acc 0.5608
I1203 01:22:33.224270 140293909243648 hlog.py:18] train/00082{16.63s}
I1203 01:22:44.861435 140293909243648 hlog.py:32] train/00083/loss 0.0069
I1203 01:22:48.982225 140293909243648 hlog.py:32] train/00083/eval_train/acc 0.9980
I1203 01:22:49.589025 140293909243648 hlog.py:32] train/00083/eval_val/acc 0.5608
I1203 01:22:49.589560 140293909243648 hlog.py:18] train/00083{16.37s}
I1203 01:23:01.508239 140293909243648 hlog.py:32] train/00084/loss 0.0060
I1203 01:23:05.331253 140293909243648 hlog.py:32] train/00084/eval_train/acc 0.9970
I1203 01:23:05.881210 140293909243648 hlog.py:32] train/00084/eval_val/acc 0.5608
I1203 01:23:05.881740 140293909243648 hlog.py:18] train/00084{16.29s}
I1203 01:23:18.153462 140293909243648 hlog.py:32] train/00085/loss 0.0068
I1203 01:23:22.094656 140293909243648 hlog.py:32] train/00085/eval_train/acc 0.9970
I1203 01:23:22.645833 140293909243648 hlog.py:32] train/00085/eval_val/acc 0.5811
I1203 01:23:22.646320 140293909243648 hlog.py:18] train/00085{16.76s}
I1203 01:23:35.282955 140293909243648 hlog.py:32] train/00086/loss 0.0059
I1203 01:23:39.608683 140293909243648 hlog.py:32] train/00086/eval_train/acc 0.9960
I1203 01:23:40.179208 140293909243648 hlog.py:32] train/00086/eval_val/acc 0.5541
I1203 01:23:40.179789 140293909243648 hlog.py:18] train/00086{17.53s}
I1203 01:23:51.098932 140293909243648 hlog.py:32] train/00087/loss 0.0052
I1203 01:23:55.141097 140293909243648 hlog.py:32] train/00087/eval_train/acc 0.9980
I1203 01:23:55.696326 140293909243648 hlog.py:32] train/00087/eval_val/acc 0.5473
I1203 01:23:55.696796 140293909243648 hlog.py:18] train/00087{15.52s}
I1203 01:24:07.904529 140293909243648 hlog.py:32] train/00088/loss 0.0051
I1203 01:24:11.763616 140293909243648 hlog.py:32] train/00088/eval_train/acc 1.0000
I1203 01:24:12.323194 140293909243648 hlog.py:32] train/00088/eval_val/acc 0.5608
I1203 01:24:12.323773 140293909243648 hlog.py:18] train/00088{16.63s}
I1203 01:24:23.981313 140293909243648 hlog.py:32] train/00089/loss 0.0051
I1203 01:24:27.825736 140293909243648 hlog.py:32] train/00089/eval_train/acc 0.9970
I1203 01:24:28.383956 140293909243648 hlog.py:32] train/00089/eval_val/acc 0.5608
I1203 01:24:28.542382 140293909243648 hlog.py:18] train/00089{16.22s}
I1203 01:24:41.404005 140293909243648 hlog.py:32] train/00090/loss 0.0058
I1203 01:24:45.437463 140293909243648 hlog.py:32] train/00090/eval_train/acc 0.9980
I1203 01:24:46.007605 140293909243648 hlog.py:32] train/00090/eval_val/acc 0.5405
I1203 01:24:46.008196 140293909243648 hlog.py:18] train/00090{17.47s}
I1203 01:24:58.503992 140293909243648 hlog.py:32] train/00091/loss 0.0059
I1203 01:25:02.367880 140293909243648 hlog.py:32] train/00091/eval_train/acc 0.9990
I1203 01:25:02.912237 140293909243648 hlog.py:32] train/00091/eval_val/acc 0.5541
I1203 01:25:02.912819 140293909243648 hlog.py:18] train/00091{16.90s}
I1203 01:25:15.475669 140293909243648 hlog.py:32] train/00092/loss 0.0065
I1203 01:25:19.346014 140293909243648 hlog.py:32] train/00092/eval_train/acc 1.0000
I1203 01:25:19.892237 140293909243648 hlog.py:32] train/00092/eval_val/acc 0.5676
I1203 01:25:19.892715 140293909243648 hlog.py:18] train/00092{16.98s}
I1203 01:25:32.947423 140293909243648 hlog.py:32] train/00093/loss 0.0059
I1203 01:25:36.561516 140293909243648 hlog.py:32] train/00093/eval_train/acc 0.9970
I1203 01:25:37.121030 140293909243648 hlog.py:32] train/00093/eval_val/acc 0.5405
I1203 01:25:37.121563 140293909243648 hlog.py:18] train/00093{17.23s}
I1203 01:25:48.519254 140293909243648 hlog.py:32] train/00094/loss 0.0059
I1203 01:25:52.438561 140293909243648 hlog.py:32] train/00094/eval_train/acc 1.0000
I1203 01:25:52.984941 140293909243648 hlog.py:32] train/00094/eval_val/acc 0.5338
I1203 01:25:52.985428 140293909243648 hlog.py:18] train/00094{15.86s}
I1203 01:26:05.490191 140293909243648 hlog.py:32] train/00095/loss 0.0066
I1203 01:26:09.475672 140293909243648 hlog.py:32] train/00095/eval_train/acc 0.9990
I1203 01:26:10.068365 140293909243648 hlog.py:32] train/00095/eval_val/acc 0.5405
I1203 01:26:10.069046 140293909243648 hlog.py:18] train/00095{17.08s}
I1203 01:26:22.799360 140293909243648 hlog.py:32] train/00096/loss 0.0051
I1203 01:26:26.622311 140293909243648 hlog.py:32] train/00096/eval_train/acc 1.0000
I1203 01:26:27.197680 140293909243648 hlog.py:32] train/00096/eval_val/acc 0.5338
I1203 01:26:27.198427 140293909243648 hlog.py:18] train/00096{17.13s}
I1203 01:26:39.361512 140293909243648 hlog.py:32] train/00097/loss 0.0047
I1203 01:26:43.152335 140293909243648 hlog.py:32] train/00097/eval_train/acc 0.9980
I1203 01:26:43.717098 140293909243648 hlog.py:32] train/00097/eval_val/acc 0.5473
I1203 01:26:43.717616 140293909243648 hlog.py:18] train/00097{16.52s}
I1203 01:26:56.104528 140293909243648 hlog.py:32] train/00098/loss 0.0038
I1203 01:26:59.748380 140293909243648 hlog.py:32] train/00098/eval_train/acc 0.9970
I1203 01:27:00.310694 140293909243648 hlog.py:32] train/00098/eval_val/acc 0.5473
I1203 01:27:00.311207 140293909243648 hlog.py:18] train/00098{16.59s}
I1203 01:27:12.608021 140293909243648 hlog.py:32] train/00099/loss 0.0037
I1203 01:27:16.268948 140293909243648 hlog.py:32] train/00099/eval_train/acc 1.0000
I1203 01:27:16.858938 140293909243648 hlog.py:32] train/00099/eval_val/acc 0.5541
I1203 01:27:16.890319 140293909243648 hlog.py:18] train/00099{16.58s}
I1203 01:27:29.384064 140293909243648 hlog.py:32] train/00100/loss 0.0042
I1203 01:27:33.405613 140293909243648 hlog.py:32] train/00100/eval_train/acc 1.0000
I1203 01:27:33.977032 140293909243648 hlog.py:32] train/00100/eval_val/acc 0.5338
I1203 01:27:33.977668 140293909243648 hlog.py:18] train/00100{17.09s}
I1203 01:27:46.679194 140293909243648 hlog.py:32] train/00101/loss 0.0041
I1203 01:27:50.606713 140293909243648 hlog.py:32] train/00101/eval_train/acc 0.9980
I1203 01:27:51.170408 140293909243648 hlog.py:32] train/00101/eval_val/acc 0.5608
I1203 01:27:51.170960 140293909243648 hlog.py:18] train/00101{17.19s}
I1203 01:28:02.832820 140293909243648 hlog.py:32] train/00102/loss 0.0038
I1203 01:28:06.703007 140293909243648 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 01:28:07.274313 140293909243648 hlog.py:32] train/00102/eval_val/acc 0.5541
I1203 01:28:07.274999 140293909243648 hlog.py:18] train/00102{16.10s}
I1203 01:28:18.853191 140293909243648 hlog.py:32] train/00103/loss 0.0028
I1203 01:28:22.588179 140293909243648 hlog.py:32] train/00103/eval_train/acc 1.0000
I1203 01:28:23.154441 140293909243648 hlog.py:32] train/00103/eval_val/acc 0.5405
I1203 01:28:23.154973 140293909243648 hlog.py:18] train/00103{15.88s}
I1203 01:28:36.349997 140293909243648 hlog.py:32] train/00104/loss 0.0036
I1203 01:28:40.168315 140293909243648 hlog.py:32] train/00104/eval_train/acc 1.0000
I1203 01:28:40.722028 140293909243648 hlog.py:32] train/00104/eval_val/acc 0.5541
I1203 01:28:40.722514 140293909243648 hlog.py:18] train/00104{17.57s}
I1203 01:28:53.339745 140293909243648 hlog.py:32] train/00105/loss 0.0033
I1203 01:28:57.022513 140293909243648 hlog.py:32] train/00105/eval_train/acc 0.9990
I1203 01:28:57.572555 140293909243648 hlog.py:32] train/00105/eval_val/acc 0.5473
I1203 01:28:57.573056 140293909243648 hlog.py:18] train/00105{16.85s}
I1203 01:29:11.096857 140293909243648 hlog.py:32] train/00106/loss 0.0034
I1203 01:29:15.038324 140293909243648 hlog.py:32] train/00106/eval_train/acc 1.0000
I1203 01:29:15.614325 140293909243648 hlog.py:32] train/00106/eval_val/acc 0.5405
I1203 01:29:15.615039 140293909243648 hlog.py:18] train/00106{18.04s}
I1203 01:29:27.702610 140293909243648 hlog.py:32] train/00107/loss 0.0030
I1203 01:29:31.470084 140293909243648 hlog.py:32] train/00107/eval_train/acc 0.9990
I1203 01:29:32.027732 140293909243648 hlog.py:32] train/00107/eval_val/acc 0.5405
I1203 01:29:32.028287 140293909243648 hlog.py:18] train/00107{16.41s}
I1203 01:29:43.370391 140293909243648 hlog.py:32] train/00108/loss 0.0031
I1203 01:29:47.373796 140293909243648 hlog.py:32] train/00108/eval_train/acc 0.9970
I1203 01:29:47.922433 140293909243648 hlog.py:32] train/00108/eval_val/acc 0.5405
I1203 01:29:47.922914 140293909243648 hlog.py:18] train/00108{15.89s}
I1203 01:30:00.615517 140293909243648 hlog.py:32] train/00109/loss 0.0026
I1203 01:30:04.398175 140293909243648 hlog.py:32] train/00109/eval_train/acc 1.0000
I1203 01:30:04.959740 140293909243648 hlog.py:32] train/00109/eval_val/acc 0.5541
I1203 01:30:05.117834 140293909243648 hlog.py:18] train/00109{17.19s}
I1203 01:30:17.410051 140293909243648 hlog.py:32] train/00110/loss 0.0034
I1203 01:30:21.185801 140293909243648 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 01:30:21.730787 140293909243648 hlog.py:32] train/00110/eval_val/acc 0.5608
I1203 01:30:21.731264 140293909243648 hlog.py:18] train/00110{16.61s}
I1203 01:30:33.521455 140293909243648 hlog.py:32] train/00111/loss 0.0027
I1203 01:30:37.346366 140293909243648 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 01:30:37.896976 140293909243648 hlog.py:32] train/00111/eval_val/acc 0.5473
I1203 01:30:37.897463 140293909243648 hlog.py:18] train/00111{16.17s}
I1203 01:30:50.270894 140293909243648 hlog.py:32] train/00112/loss 0.0029
I1203 01:30:54.141289 140293909243648 hlog.py:32] train/00112/eval_train/acc 1.0000
I1203 01:30:54.721179 140293909243648 hlog.py:32] train/00112/eval_val/acc 0.5473
I1203 01:30:54.721686 140293909243648 hlog.py:18] train/00112{16.82s}
I1203 01:31:06.392661 140293909243648 hlog.py:32] train/00113/loss 0.0029
I1203 01:31:10.429614 140293909243648 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 01:31:11.001734 140293909243648 hlog.py:32] train/00113/eval_val/acc 0.5473
I1203 01:31:11.002376 140293909243648 hlog.py:18] train/00113{16.28s}
I1203 01:31:22.928352 140293909243648 hlog.py:32] train/00114/loss 0.0028
I1203 01:31:26.686648 140293909243648 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 01:31:27.231285 140293909243648 hlog.py:32] train/00114/eval_val/acc 0.5541
I1203 01:31:27.231780 140293909243648 hlog.py:18] train/00114{16.23s}
I1203 01:31:39.331345 140293909243648 hlog.py:32] train/00115/loss 0.0025
I1203 01:31:43.064666 140293909243648 hlog.py:32] train/00115/eval_train/acc 1.0000
I1203 01:31:43.654763 140293909243648 hlog.py:32] train/00115/eval_val/acc 0.5541
I1203 01:31:43.655243 140293909243648 hlog.py:18] train/00115{16.42s}
I1203 01:31:55.593763 140293909243648 hlog.py:32] train/00116/loss 0.0025
I1203 01:31:59.703927 140293909243648 hlog.py:32] train/00116/eval_train/acc 1.0000
I1203 01:32:00.279425 140293909243648 hlog.py:32] train/00116/eval_val/acc 0.5608
I1203 01:32:00.279951 140293909243648 hlog.py:18] train/00116{16.62s}
I1203 01:32:12.727703 140293909243648 hlog.py:32] train/00117/loss 0.0024
I1203 01:32:16.551072 140293909243648 hlog.py:32] train/00117/eval_train/acc 1.0000
I1203 01:32:17.120381 140293909243648 hlog.py:32] train/00117/eval_val/acc 0.5608
I1203 01:32:17.120852 140293909243648 hlog.py:18] train/00117{16.84s}
I1203 01:32:28.188525 140293909243648 hlog.py:32] train/00118/loss 0.0025
I1203 01:32:32.157190 140293909243648 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 01:32:32.744356 140293909243648 hlog.py:32] train/00118/eval_val/acc 0.5541
I1203 01:32:32.745097 140293909243648 hlog.py:18] train/00118{15.62s}
I1203 01:32:44.448736 140293909243648 hlog.py:32] train/00119/loss 0.0025
I1203 01:32:48.420638 140293909243648 hlog.py:32] train/00119/eval_train/acc 1.0000
I1203 01:32:48.974883 140293909243648 hlog.py:32] train/00119/eval_val/acc 0.5608
I1203 01:32:49.007159 140293909243648 hlog.py:18] train/00119{16.26s}
I1203 01:33:01.365224 140293909243648 hlog.py:32] train/00120/loss 0.0026
I1203 01:33:05.721712 140293909243648 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 01:33:06.268960 140293909243648 hlog.py:32] train/00120/eval_val/acc 0.5541
I1203 01:33:06.269438 140293909243648 hlog.py:18] train/00120{17.26s}
I1203 01:33:18.776760 140293909243648 hlog.py:32] train/00121/loss 0.0023
I1203 01:33:22.957853 140293909243648 hlog.py:32] train/00121/eval_train/acc 1.0000
I1203 01:33:23.525000 140293909243648 hlog.py:32] train/00121/eval_val/acc 0.5608
I1203 01:33:23.525599 140293909243648 hlog.py:18] train/00121{17.26s}
I1203 01:33:35.148754 140293909243648 hlog.py:32] train/00122/loss 0.0024
I1203 01:33:39.043915 140293909243648 hlog.py:32] train/00122/eval_train/acc 1.0000
I1203 01:33:39.590470 140293909243648 hlog.py:32] train/00122/eval_val/acc 0.5541
I1203 01:33:39.591014 140293909243648 hlog.py:18] train/00122{16.07s}
I1203 01:33:52.812886 140293909243648 hlog.py:32] train/00123/loss 0.0025
I1203 01:33:56.822881 140293909243648 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 01:33:57.373343 140293909243648 hlog.py:32] train/00123/eval_val/acc 0.5676
I1203 01:33:57.373949 140293909243648 hlog.py:18] train/00123{17.78s}
I1203 01:34:09.847930 140293909243648 hlog.py:32] train/00124/loss 0.0021
I1203 01:34:13.865740 140293909243648 hlog.py:32] train/00124/eval_train/acc 1.0000
I1203 01:34:14.413507 140293909243648 hlog.py:32] train/00124/eval_val/acc 0.5676
I1203 01:34:14.414027 140293909243648 hlog.py:18] train/00124{17.04s}
I1203 01:34:26.899595 140293909243648 hlog.py:32] train/00125/loss 0.0024
I1203 01:34:30.614679 140293909243648 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 01:34:31.158856 140293909243648 hlog.py:32] train/00125/eval_val/acc 0.5608
I1203 01:34:31.159341 140293909243648 hlog.py:18] train/00125{16.75s}
I1203 01:34:43.356793 140293909243648 hlog.py:32] train/00126/loss 0.0023
I1203 01:34:47.566601 140293909243648 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 01:34:48.128757 140293909243648 hlog.py:32] train/00126/eval_val/acc 0.5676
I1203 01:34:48.129305 140293909243648 hlog.py:18] train/00126{16.97s}
I1203 01:34:59.893091 140293909243648 hlog.py:32] train/00127/loss 0.0021
I1203 01:35:03.989139 140293909243648 hlog.py:32] train/00127/eval_train/acc 1.0000
I1203 01:35:04.579307 140293909243648 hlog.py:32] train/00127/eval_val/acc 0.5541
I1203 01:35:04.579881 140293909243648 hlog.py:18] train/00127{16.45s}
I1203 01:35:16.915442 140293909243648 hlog.py:32] train/00128/loss 0.0021
I1203 01:35:20.863047 140293909243648 hlog.py:32] train/00128/eval_train/acc 1.0000
I1203 01:35:21.408155 140293909243648 hlog.py:32] train/00128/eval_val/acc 0.5541
I1203 01:35:21.408628 140293909243648 hlog.py:18] train/00128{16.83s}
I1203 01:35:33.104623 140293909243648 hlog.py:32] train/00129/loss 0.0019
I1203 01:35:37.059140 140293909243648 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 01:35:37.608321 140293909243648 hlog.py:32] train/00129/eval_val/acc 0.5473
I1203 01:35:37.639643 140293909243648 hlog.py:18] train/00129{16.23s}
I1203 01:35:49.428489 140293909243648 hlog.py:32] train/00130/loss 0.0022
I1203 01:35:53.447562 140293909243648 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 01:35:54.031852 140293909243648 hlog.py:32] train/00130/eval_val/acc 0.5541
I1203 01:35:54.032527 140293909243648 hlog.py:18] train/00130{16.39s}
I1203 01:36:07.389320 140293909243648 hlog.py:32] train/00131/loss 0.0022
I1203 01:36:11.334995 140293909243648 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 01:36:11.897765 140293909243648 hlog.py:32] train/00131/eval_val/acc 0.5541
I1203 01:36:11.898264 140293909243648 hlog.py:18] train/00131{17.87s}
I1203 01:36:23.766659 140293909243648 hlog.py:32] train/00132/loss 0.0027
I1203 01:36:27.297231 140293909243648 hlog.py:32] train/00132/eval_train/acc 1.0000
I1203 01:36:27.842999 140293909243648 hlog.py:32] train/00132/eval_val/acc 0.5473
I1203 01:36:27.843491 140293909243648 hlog.py:18] train/00132{15.95s}
I1203 01:36:39.664732 140293909243648 hlog.py:32] train/00133/loss 0.0024
I1203 01:36:43.396530 140293909243648 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 01:36:43.958591 140293909243648 hlog.py:32] train/00133/eval_val/acc 0.5473
I1203 01:36:43.959073 140293909243648 hlog.py:18] train/00133{16.12s}
I1203 01:36:56.648096 140293909243648 hlog.py:32] train/00134/loss 0.0023
I1203 01:37:00.442330 140293909243648 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 01:37:00.999263 140293909243648 hlog.py:32] train/00134/eval_val/acc 0.5473
I1203 01:37:00.999770 140293909243648 hlog.py:18] train/00134{17.04s}
I1203 01:37:12.417209 140293909243648 hlog.py:32] train/00135/loss 0.0020
I1203 01:37:16.105722 140293909243648 hlog.py:32] train/00135/eval_train/acc 1.0000
I1203 01:37:16.665715 140293909243648 hlog.py:32] train/00135/eval_val/acc 0.5473
I1203 01:37:16.666225 140293909243648 hlog.py:18] train/00135{15.67s}
I1203 01:37:27.970370 140293909243648 hlog.py:32] train/00136/loss 0.0024
I1203 01:37:31.677017 140293909243648 hlog.py:32] train/00136/eval_train/acc 1.0000
I1203 01:37:32.266945 140293909243648 hlog.py:32] train/00136/eval_val/acc 0.5608
I1203 01:37:32.267475 140293909243648 hlog.py:18] train/00136{15.60s}
I1203 01:37:44.273326 140293909243648 hlog.py:32] train/00137/loss 0.0021
I1203 01:37:48.016418 140293909243648 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 01:37:48.600767 140293909243648 hlog.py:32] train/00137/eval_val/acc 0.5541
I1203 01:37:48.601278 140293909243648 hlog.py:18] train/00137{16.33s}
I1203 01:38:00.330645 140293909243648 hlog.py:32] train/00138/loss 0.0024
I1203 01:38:04.078332 140293909243648 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 01:38:04.652263 140293909243648 hlog.py:32] train/00138/eval_val/acc 0.5608
I1203 01:38:04.652947 140293909243648 hlog.py:18] train/00138{16.05s}
I1203 01:38:16.458928 140293909243648 hlog.py:32] train/00139/loss 0.0020
I1203 01:38:20.256718 140293909243648 hlog.py:32] train/00139/eval_train/acc 1.0000
I1203 01:38:20.825014 140293909243648 hlog.py:32] train/00139/eval_val/acc 0.5608
I1203 01:38:20.855938 140293909243648 hlog.py:18] train/00139{16.20s}
I1203 01:38:32.855870 140293909243648 hlog.py:32] train/00140/loss 0.0022
I1203 01:38:37.022533 140293909243648 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 01:38:37.597731 140293909243648 hlog.py:32] train/00140/eval_val/acc 0.5608
I1203 01:38:37.598468 140293909243648 hlog.py:18] train/00140{16.74s}
I1203 01:38:49.063653 140293909243648 hlog.py:32] train/00141/loss 0.0022
I1203 01:38:52.933409 140293909243648 hlog.py:32] train/00141/eval_train/acc 1.0000
I1203 01:38:53.482721 140293909243648 hlog.py:32] train/00141/eval_val/acc 0.5608
I1203 01:38:53.483197 140293909243648 hlog.py:18] train/00141{15.88s}
I1203 01:39:05.568409 140293909243648 hlog.py:32] train/00142/loss 0.0020
I1203 01:39:09.392698 140293909243648 hlog.py:32] train/00142/eval_train/acc 1.0000
I1203 01:39:09.955350 140293909243648 hlog.py:32] train/00142/eval_val/acc 0.5608
I1203 01:39:09.955919 140293909243648 hlog.py:18] train/00142{16.47s}
I1203 01:39:21.425387 140293909243648 hlog.py:32] train/00143/loss 0.0020
I1203 01:39:25.436861 140293909243648 hlog.py:32] train/00143/eval_train/acc 1.0000
I1203 01:39:25.985024 140293909243648 hlog.py:32] train/00143/eval_val/acc 0.5608
I1203 01:39:25.985490 140293909243648 hlog.py:18] train/00143{16.03s}
I1203 01:39:37.979070 140293909243648 hlog.py:32] train/00144/loss 0.0021
I1203 01:39:42.043566 140293909243648 hlog.py:32] train/00144/eval_train/acc 1.0000
I1203 01:39:42.592478 140293909243648 hlog.py:32] train/00144/eval_val/acc 0.5608
I1203 01:39:42.592964 140293909243648 hlog.py:18] train/00144{16.61s}
I1203 01:39:54.088088 140293909243648 hlog.py:32] train/00145/loss 0.0026
I1203 01:39:58.072874 140293909243648 hlog.py:32] train/00145/eval_train/acc 1.0000
I1203 01:39:58.642553 140293909243648 hlog.py:32] train/00145/eval_val/acc 0.5608
I1203 01:39:58.643049 140293909243648 hlog.py:18] train/00145{16.05s}
I1203 01:40:10.996371 140293909243648 hlog.py:32] train/00146/loss 0.0019
I1203 01:40:14.947104 140293909243648 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 01:40:15.596717 140293909243648 hlog.py:32] train/00146/eval_val/acc 0.5608
I1203 01:40:15.597220 140293909243648 hlog.py:18] train/00146{16.95s}
I1203 01:40:27.303101 140293909243648 hlog.py:32] train/00147/loss 0.0018
I1203 01:40:31.190217 140293909243648 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 01:40:31.751400 140293909243648 hlog.py:32] train/00147/eval_val/acc 0.5541
I1203 01:40:31.751914 140293909243648 hlog.py:18] train/00147{16.15s}
I1203 01:40:44.047027 140293909243648 hlog.py:32] train/00148/loss 0.0024
I1203 01:40:47.763105 140293909243648 hlog.py:32] train/00148/eval_train/acc 1.0000
I1203 01:40:48.320308 140293909243648 hlog.py:32] train/00148/eval_val/acc 0.5608
I1203 01:40:48.320807 140293909243648 hlog.py:18] train/00148{16.57s}
I1203 01:41:00.549607 140293909243648 hlog.py:32] train/00149/loss 0.0020
I1203 01:41:04.411199 140293909243648 hlog.py:32] train/00149/eval_train/acc 1.0000
I1203 01:41:04.614281 140293909243648 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 01:41:04.614492 140293909243648 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 01:41:04.614595 140293909243648 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 01:41:04.614679 140293909243648 hlog.py:32] train/00149/eval_val/0/corr True
I1203 01:41:04.614755 140293909243648 hlog.py:32] train/00149/eval_val/0 
I1203 01:41:04.614841 140293909243648 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 01:41:04.614935 140293909243648 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 01:41:04.615032 140293909243648 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1203 01:41:04.615122 140293909243648 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.615206 140293909243648 hlog.py:32] train/00149/eval_val/1/corr False
I1203 01:41:04.615280 140293909243648 hlog.py:32] train/00149/eval_val/1 
I1203 01:41:04.615351 140293909243648 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 01:41:04.615446 140293909243648 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 01:41:04.615542 140293909243648 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1203 01:41:04.615631 140293909243648 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 01:41:04.615709 140293909243648 hlog.py:32] train/00149/eval_val/2/corr False
I1203 01:41:04.615782 140293909243648 hlog.py:32] train/00149/eval_val/2 
I1203 01:41:04.615853 140293909243648 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 01:41:04.615939 140293909243648 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 01:41:04.616034 140293909243648 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 01:41:04.616123 140293909243648 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 01:41:04.616201 140293909243648 hlog.py:32] train/00149/eval_val/3/corr False
I1203 01:41:04.616274 140293909243648 hlog.py:32] train/00149/eval_val/3 
I1203 01:41:04.616344 140293909243648 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 01:41:04.616430 140293909243648 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 01:41:04.616524 140293909243648 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1203 01:41:04.616613 140293909243648 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 01:41:04.616690 140293909243648 hlog.py:32] train/00149/eval_val/4/corr False
I1203 01:41:04.616763 140293909243648 hlog.py:32] train/00149/eval_val/4 
I1203 01:41:04.616833 140293909243648 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 01:41:04.616919 140293909243648 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 01:41:04.617012 140293909243648 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 01:41:04.617100 140293909243648 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.617177 140293909243648 hlog.py:32] train/00149/eval_val/5/corr False
I1203 01:41:04.617249 140293909243648 hlog.py:32] train/00149/eval_val/5 
I1203 01:41:04.617319 140293909243648 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 01:41:04.617405 140293909243648 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 01:41:04.617498 140293909243648 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( alaska , _ ) ) ) )
I1203 01:41:04.617605 140293909243648 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.617683 140293909243648 hlog.py:32] train/00149/eval_val/6/corr False
I1203 01:41:04.617756 140293909243648 hlog.py:32] train/00149/eval_val/6 
I1203 01:41:04.617826 140293909243648 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 01:41:04.617911 140293909243648 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 01:41:04.618005 140293909243648 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 01:41:04.618093 140293909243648 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.618170 140293909243648 hlog.py:32] train/00149/eval_val/7/corr False
I1203 01:41:04.618242 140293909243648 hlog.py:32] train/00149/eval_val/7 
I1203 01:41:04.618312 140293909243648 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 01:41:04.618399 140293909243648 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 01:41:04.618493 140293909243648 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 01:41:04.618580 140293909243648 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 01:41:04.618657 140293909243648 hlog.py:32] train/00149/eval_val/8/corr False
I1203 01:41:04.618729 140293909243648 hlog.py:32] train/00149/eval_val/8 
I1203 01:41:04.618799 140293909243648 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 01:41:04.618885 140293909243648 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 01:41:04.618978 140293909243648 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _population ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 01:41:04.619067 140293909243648 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 01:41:04.619144 140293909243648 hlog.py:32] train/00149/eval_val/9/corr False
I1203 01:41:04.619216 140293909243648 hlog.py:32] train/00149/eval_val/9 
I1203 01:41:04.619286 140293909243648 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 01:41:04.619372 140293909243648 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 01:41:04.619473 140293909243648 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 01:41:04.619562 140293909243648 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.619640 140293909243648 hlog.py:32] train/00149/eval_val/10/corr False
I1203 01:41:04.619711 140293909243648 hlog.py:32] train/00149/eval_val/10 
I1203 01:41:04.619781 140293909243648 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 01:41:04.619875 140293909243648 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 01:41:04.619977 140293909243648 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 01:41:04.620070 140293909243648 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 01:41:04.620147 140293909243648 hlog.py:32] train/00149/eval_val/11/corr True
I1203 01:41:04.620219 140293909243648 hlog.py:32] train/00149/eval_val/11 
I1203 01:41:04.620290 140293909243648 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 01:41:04.620383 140293909243648 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 01:41:04.620484 140293909243648 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 01:41:04.620584 140293909243648 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 01:41:04.620662 140293909243648 hlog.py:32] train/00149/eval_val/12/corr True
I1203 01:41:04.620734 140293909243648 hlog.py:32] train/00149/eval_val/12 
I1203 01:41:04.620805 140293909243648 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 01:41:04.620898 140293909243648 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 01:41:04.621003 140293909243648 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 01:41:04.621096 140293909243648 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 01:41:04.621173 140293909243648 hlog.py:32] train/00149/eval_val/13/corr True
I1203 01:41:04.621245 140293909243648 hlog.py:32] train/00149/eval_val/13 
I1203 01:41:04.621315 140293909243648 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 01:41:04.621408 140293909243648 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 01:41:04.621510 140293909243648 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 01:41:04.621603 140293909243648 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 01:41:04.621680 140293909243648 hlog.py:32] train/00149/eval_val/14/corr True
I1203 01:41:04.621752 140293909243648 hlog.py:32] train/00149/eval_val/14 
I1203 01:41:04.621822 140293909243648 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 01:41:04.621916 140293909243648 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 01:41:04.622017 140293909243648 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 01:41:04.622111 140293909243648 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 01:41:04.622188 140293909243648 hlog.py:32] train/00149/eval_val/15/corr True
I1203 01:41:04.622260 140293909243648 hlog.py:32] train/00149/eval_val/15 
I1203 01:41:04.622330 140293909243648 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 01:41:04.622423 140293909243648 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 01:41:04.622524 140293909243648 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 01:41:04.622617 140293909243648 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 01:41:04.622695 140293909243648 hlog.py:32] train/00149/eval_val/16/corr True
I1203 01:41:04.622766 140293909243648 hlog.py:32] train/00149/eval_val/16 
I1203 01:41:04.622837 140293909243648 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 01:41:04.622923 140293909243648 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 01:41:04.623019 140293909243648 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 01:41:04.623113 140293909243648 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 01:41:04.623191 140293909243648 hlog.py:32] train/00149/eval_val/17/corr False
I1203 01:41:04.623268 140293909243648 hlog.py:32] train/00149/eval_val/17 
I1203 01:41:04.623340 140293909243648 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 01:41:04.623440 140293909243648 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 01:41:04.623540 140293909243648 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1203 01:41:04.623634 140293909243648 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 01:41:04.623711 140293909243648 hlog.py:32] train/00149/eval_val/18/corr False
I1203 01:41:04.623783 140293909243648 hlog.py:32] train/00149/eval_val/18 
I1203 01:41:04.623852 140293909243648 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 01:41:04.623939 140293909243648 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 01:41:04.624036 140293909243648 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 01:41:04.624129 140293909243648 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 01:41:04.624207 140293909243648 hlog.py:32] train/00149/eval_val/19/corr False
I1203 01:41:04.624278 140293909243648 hlog.py:32] train/00149/eval_val/19 
I1203 01:41:04.624348 140293909243648 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 01:41:04.624436 140293909243648 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 01:41:04.624532 140293909243648 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 01:41:04.624626 140293909243648 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 01:41:04.624703 140293909243648 hlog.py:32] train/00149/eval_val/20/corr False
I1203 01:41:04.624775 140293909243648 hlog.py:32] train/00149/eval_val/20 
I1203 01:41:04.624845 140293909243648 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 01:41:04.624939 140293909243648 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 01:41:04.625055 140293909243648 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 01:41:04.625151 140293909243648 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 01:41:04.625231 140293909243648 hlog.py:32] train/00149/eval_val/21/corr True
I1203 01:41:04.625306 140293909243648 hlog.py:32] train/00149/eval_val/21 
I1203 01:41:04.625379 140293909243648 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 01:41:04.625482 140293909243648 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 01:41:04.625576 140293909243648 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1203 01:41:04.625665 140293909243648 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 01:41:04.625742 140293909243648 hlog.py:32] train/00149/eval_val/22/corr False
I1203 01:41:04.625813 140293909243648 hlog.py:32] train/00149/eval_val/22 
I1203 01:41:04.625883 140293909243648 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 01:41:04.625972 140293909243648 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 01:41:04.626065 140293909243648 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 01:41:04.626159 140293909243648 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 01:41:04.626237 140293909243648 hlog.py:32] train/00149/eval_val/23/corr False
I1203 01:41:04.626308 140293909243648 hlog.py:32] train/00149/eval_val/23 
I1203 01:41:04.626378 140293909243648 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 01:41:04.626465 140293909243648 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 01:41:04.626559 140293909243648 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1203 01:41:04.626647 140293909243648 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 01:41:04.626724 140293909243648 hlog.py:32] train/00149/eval_val/24/corr False
I1203 01:41:04.626796 140293909243648 hlog.py:32] train/00149/eval_val/24 
I1203 01:41:04.626865 140293909243648 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 01:41:04.626956 140293909243648 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 01:41:04.627052 140293909243648 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 01:41:04.627141 140293909243648 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 01:41:04.627218 140293909243648 hlog.py:32] train/00149/eval_val/25/corr True
I1203 01:41:04.627290 140293909243648 hlog.py:32] train/00149/eval_val/25 
I1203 01:41:04.627361 140293909243648 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 01:41:04.627459 140293909243648 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 01:41:04.627556 140293909243648 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 01:41:04.627646 140293909243648 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 01:41:04.627723 140293909243648 hlog.py:32] train/00149/eval_val/26/corr True
I1203 01:41:04.627795 140293909243648 hlog.py:32] train/00149/eval_val/26 
I1203 01:41:04.627866 140293909243648 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 01:41:04.627954 140293909243648 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 01:41:04.628056 140293909243648 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1203 01:41:04.628145 140293909243648 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 01:41:04.628222 140293909243648 hlog.py:32] train/00149/eval_val/27/corr False
I1203 01:41:04.628295 140293909243648 hlog.py:32] train/00149/eval_val/27 
I1203 01:41:04.628365 140293909243648 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 01:41:04.628457 140293909243648 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 01:41:04.628551 140293909243648 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 01:41:04.628641 140293909243648 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 01:41:04.628718 140293909243648 hlog.py:32] train/00149/eval_val/28/corr True
I1203 01:41:04.628790 140293909243648 hlog.py:32] train/00149/eval_val/28 
I1203 01:41:04.628860 140293909243648 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 01:41:04.628951 140293909243648 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 01:41:04.629046 140293909243648 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 01:41:04.629141 140293909243648 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 01:41:04.629219 140293909243648 hlog.py:32] train/00149/eval_val/29/corr True
I1203 01:41:04.629291 140293909243648 hlog.py:32] train/00149/eval_val/29 
I1203 01:41:04.629361 140293909243648 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 01:41:04.629452 140293909243648 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 01:41:04.629548 140293909243648 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 01:41:04.629638 140293909243648 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 01:41:04.629715 140293909243648 hlog.py:32] train/00149/eval_val/30/corr True
I1203 01:41:04.629787 140293909243648 hlog.py:32] train/00149/eval_val/30 
I1203 01:41:04.629857 140293909243648 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 01:41:04.629948 140293909243648 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 01:41:04.630043 140293909243648 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 01:41:04.630132 140293909243648 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 01:41:04.630210 140293909243648 hlog.py:32] train/00149/eval_val/31/corr True
I1203 01:41:04.630282 140293909243648 hlog.py:32] train/00149/eval_val/31 
I1203 01:41:04.630352 140293909243648 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 01:41:04.630438 140293909243648 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 01:41:04.630534 140293909243648 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio ) ) , _traverse ( B , A ) ) )
I1203 01:41:04.630623 140293909243648 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 01:41:04.630701 140293909243648 hlog.py:32] train/00149/eval_val/32/corr False
I1203 01:41:04.630772 140293909243648 hlog.py:32] train/00149/eval_val/32 
I1203 01:41:04.630842 140293909243648 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 01:41:04.630934 140293909243648 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 01:41:04.631029 140293909243648 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 01:41:04.631118 140293909243648 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 01:41:04.631196 140293909243648 hlog.py:32] train/00149/eval_val/33/corr True
I1203 01:41:04.631267 140293909243648 hlog.py:32] train/00149/eval_val/33 
I1203 01:41:04.631337 140293909243648 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 01:41:04.631451 140293909243648 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 01:41:04.631551 140293909243648 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 01:41:04.631644 140293909243648 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 01:41:04.631737 140293909243648 hlog.py:32] train/00149/eval_val/34/corr True
I1203 01:41:04.631809 140293909243648 hlog.py:32] train/00149/eval_val/34 
I1203 01:41:04.631879 140293909243648 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 01:41:04.631973 140293909243648 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 01:41:04.632071 140293909243648 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.632169 140293909243648 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.632247 140293909243648 hlog.py:32] train/00149/eval_val/35/corr True
I1203 01:41:04.632318 140293909243648 hlog.py:32] train/00149/eval_val/35 
I1203 01:41:04.632389 140293909243648 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 01:41:04.632482 140293909243648 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 01:41:04.632579 140293909243648 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.632670 140293909243648 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.632747 140293909243648 hlog.py:32] train/00149/eval_val/36/corr True
I1203 01:41:04.632819 140293909243648 hlog.py:32] train/00149/eval_val/36 
I1203 01:41:04.632889 140293909243648 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 01:41:04.632981 140293909243648 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 01:41:04.633079 140293909243648 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.633170 140293909243648 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.633248 140293909243648 hlog.py:32] train/00149/eval_val/37/corr True
I1203 01:41:04.633319 140293909243648 hlog.py:32] train/00149/eval_val/37 
I1203 01:41:04.633389 140293909243648 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 01:41:04.633482 140293909243648 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 01:41:04.633579 140293909243648 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.633671 140293909243648 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.633748 140293909243648 hlog.py:32] train/00149/eval_val/38/corr True
I1203 01:41:04.633819 140293909243648 hlog.py:32] train/00149/eval_val/38 
I1203 01:41:04.633889 140293909243648 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 01:41:04.633982 140293909243648 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 01:41:04.634079 140293909243648 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.634171 140293909243648 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 01:41:04.634248 140293909243648 hlog.py:32] train/00149/eval_val/39/corr True
I1203 01:41:04.634320 140293909243648 hlog.py:32] train/00149/eval_val/39 
I1203 01:41:04.634390 140293909243648 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 01:41:04.634476 140293909243648 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 01:41:04.634571 140293909243648 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _river ( C ) ) , A ) )
I1203 01:41:04.634660 140293909243648 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 01:41:04.634737 140293909243648 hlog.py:32] train/00149/eval_val/40/corr False
I1203 01:41:04.634808 140293909243648 hlog.py:32] train/00149/eval_val/40 
I1203 01:41:04.634878 140293909243648 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 01:41:04.634964 140293909243648 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 01:41:04.635062 140293909243648 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 01:41:04.635158 140293909243648 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 01:41:04.635235 140293909243648 hlog.py:32] train/00149/eval_val/41/corr False
I1203 01:41:04.635308 140293909243648 hlog.py:32] train/00149/eval_val/41 
I1203 01:41:04.635378 140293909243648 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 01:41:04.635474 140293909243648 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 01:41:04.635574 140293909243648 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 01:41:04.635662 140293909243648 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 01:41:04.635739 140293909243648 hlog.py:32] train/00149/eval_val/42/corr False
I1203 01:41:04.635812 140293909243648 hlog.py:32] train/00149/eval_val/42 
I1203 01:41:04.635881 140293909243648 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 01:41:04.635969 140293909243648 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 01:41:04.636072 140293909243648 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( C ) ) ) ) , A ) )
I1203 01:41:04.636167 140293909243648 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 01:41:04.636245 140293909243648 hlog.py:32] train/00149/eval_val/43/corr False
I1203 01:41:04.636316 140293909243648 hlog.py:32] train/00149/eval_val/43 
I1203 01:41:04.636386 140293909243648 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 01:41:04.636480 140293909243648 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 01:41:04.636583 140293909243648 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 01:41:04.636677 140293909243648 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 01:41:04.636755 140293909243648 hlog.py:32] train/00149/eval_val/44/corr True
I1203 01:41:04.636827 140293909243648 hlog.py:32] train/00149/eval_val/44 
I1203 01:41:04.636897 140293909243648 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 01:41:04.636984 140293909243648 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 01:41:04.637079 140293909243648 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) , A ) )
I1203 01:41:04.637170 140293909243648 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 01:41:04.637248 140293909243648 hlog.py:32] train/00149/eval_val/45/corr False
I1203 01:41:04.637320 140293909243648 hlog.py:32] train/00149/eval_val/45 
I1203 01:41:04.637390 140293909243648 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 01:41:04.637481 140293909243648 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 01:41:04.637593 140293909243648 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , _state ( C ) ) ) , A ) )
I1203 01:41:04.637688 140293909243648 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 01:41:04.637769 140293909243648 hlog.py:32] train/00149/eval_val/46/corr False
I1203 01:41:04.637844 140293909243648 hlog.py:32] train/00149/eval_val/46 
I1203 01:41:04.637923 140293909243648 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 01:41:04.638020 140293909243648 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 01:41:04.638123 140293909243648 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 01:41:04.638220 140293909243648 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 01:41:04.638299 140293909243648 hlog.py:32] train/00149/eval_val/47/corr True
I1203 01:41:04.638374 140293909243648 hlog.py:32] train/00149/eval_val/47 
I1203 01:41:04.638447 140293909243648 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 01:41:04.638537 140293909243648 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 01:41:04.638640 140293909243648 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _stateid ( rochester ) ) ) , A ) )
I1203 01:41:04.638737 140293909243648 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 01:41:04.638817 140293909243648 hlog.py:32] train/00149/eval_val/48/corr False
I1203 01:41:04.638891 140293909243648 hlog.py:32] train/00149/eval_val/48 
I1203 01:41:04.638964 140293909243648 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 01:41:04.639061 140293909243648 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 01:41:04.639165 140293909243648 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 01:41:04.639261 140293909243648 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 01:41:04.639341 140293909243648 hlog.py:32] train/00149/eval_val/49/corr True
I1203 01:41:04.639423 140293909243648 hlog.py:32] train/00149/eval_val/49 
I1203 01:41:04.639499 140293909243648 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 01:41:04.639596 140293909243648 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 01:41:04.639700 140293909243648 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 01:41:04.639797 140293909243648 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 01:41:04.639877 140293909243648 hlog.py:32] train/00149/eval_val/50/corr True
I1203 01:41:04.639951 140293909243648 hlog.py:32] train/00149/eval_val/50 
I1203 01:41:04.640023 140293909243648 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 01:41:04.640114 140293909243648 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 01:41:04.640220 140293909243648 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1203 01:41:04.640317 140293909243648 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 01:41:04.640398 140293909243648 hlog.py:32] train/00149/eval_val/51/corr False
I1203 01:41:04.640473 140293909243648 hlog.py:32] train/00149/eval_val/51 
I1203 01:41:04.640545 140293909243648 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 01:41:04.640634 140293909243648 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 01:41:04.640733 140293909243648 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 01:41:04.640833 140293909243648 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 01:41:04.640914 140293909243648 hlog.py:32] train/00149/eval_val/52/corr False
I1203 01:41:04.640988 140293909243648 hlog.py:32] train/00149/eval_val/52 
I1203 01:41:04.641061 140293909243648 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 01:41:04.641149 140293909243648 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 01:41:04.641248 140293909243648 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 01:41:04.641342 140293909243648 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 01:41:04.641433 140293909243648 hlog.py:32] train/00149/eval_val/53/corr False
I1203 01:41:04.641505 140293909243648 hlog.py:32] train/00149/eval_val/53 
I1203 01:41:04.641576 140293909243648 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 01:41:04.641667 140293909243648 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 01:41:04.641762 140293909243648 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.641851 140293909243648 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.641929 140293909243648 hlog.py:32] train/00149/eval_val/54/corr True
I1203 01:41:04.642000 140293909243648 hlog.py:32] train/00149/eval_val/54 
I1203 01:41:04.642070 140293909243648 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 01:41:04.642161 140293909243648 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 01:41:04.642257 140293909243648 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 01:41:04.642345 140293909243648 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 01:41:04.642422 140293909243648 hlog.py:32] train/00149/eval_val/55/corr True
I1203 01:41:04.642494 140293909243648 hlog.py:32] train/00149/eval_val/55 
I1203 01:41:04.642564 140293909243648 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 01:41:04.642655 140293909243648 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 01:41:04.642750 140293909243648 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 01:41:04.642840 140293909243648 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 01:41:04.642917 140293909243648 hlog.py:32] train/00149/eval_val/56/corr True
I1203 01:41:04.642989 140293909243648 hlog.py:32] train/00149/eval_val/56 
I1203 01:41:04.643059 140293909243648 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 01:41:04.643150 140293909243648 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 01:41:04.643245 140293909243648 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.643334 140293909243648 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.643418 140293909243648 hlog.py:32] train/00149/eval_val/57/corr True
I1203 01:41:04.643493 140293909243648 hlog.py:32] train/00149/eval_val/57 
I1203 01:41:04.643563 140293909243648 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 01:41:04.643654 140293909243648 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 01:41:04.643749 140293909243648 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.643844 140293909243648 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.643921 140293909243648 hlog.py:32] train/00149/eval_val/58/corr True
I1203 01:41:04.643994 140293909243648 hlog.py:32] train/00149/eval_val/58 
I1203 01:41:04.644064 140293909243648 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 01:41:04.644155 140293909243648 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 01:41:04.644250 140293909243648 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 01:41:04.644338 140293909243648 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 01:41:04.644415 140293909243648 hlog.py:32] train/00149/eval_val/59/corr True
I1203 01:41:04.644487 140293909243648 hlog.py:32] train/00149/eval_val/59 
I1203 01:41:04.644557 140293909243648 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 01:41:04.644647 140293909243648 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 01:41:04.644742 140293909243648 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 01:41:04.644831 140293909243648 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 01:41:04.644909 140293909243648 hlog.py:32] train/00149/eval_val/60/corr True
I1203 01:41:04.644980 140293909243648 hlog.py:32] train/00149/eval_val/60 
I1203 01:41:04.645050 140293909243648 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 01:41:04.645142 140293909243648 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 01:41:04.645237 140293909243648 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 01:41:04.645326 140293909243648 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 01:41:04.645403 140293909243648 hlog.py:32] train/00149/eval_val/61/corr True
I1203 01:41:04.645476 140293909243648 hlog.py:32] train/00149/eval_val/61 
I1203 01:41:04.645545 140293909243648 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 01:41:04.645635 140293909243648 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 01:41:04.645730 140293909243648 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 01:41:04.645819 140293909243648 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 01:41:04.645895 140293909243648 hlog.py:32] train/00149/eval_val/62/corr True
I1203 01:41:04.645967 140293909243648 hlog.py:32] train/00149/eval_val/62 
I1203 01:41:04.646037 140293909243648 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 01:41:04.646127 140293909243648 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 01:41:04.646221 140293909243648 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.646310 140293909243648 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.646387 140293909243648 hlog.py:32] train/00149/eval_val/63/corr True
I1203 01:41:04.646459 140293909243648 hlog.py:32] train/00149/eval_val/63 
I1203 01:41:04.646528 140293909243648 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 01:41:04.862545 140293909243648 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 01:41:04.862750 140293909243648 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 01:41:04.862853 140293909243648 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 01:41:04.862954 140293909243648 hlog.py:32] train/00149/eval_val/64/corr True
I1203 01:41:04.863032 140293909243648 hlog.py:32] train/00149/eval_val/64 
I1203 01:41:04.863109 140293909243648 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 01:41:04.863205 140293909243648 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 01:41:04.863304 140293909243648 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.863395 140293909243648 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.863483 140293909243648 hlog.py:32] train/00149/eval_val/65/corr True
I1203 01:41:04.863557 140293909243648 hlog.py:32] train/00149/eval_val/65 
I1203 01:41:04.863628 140293909243648 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 01:41:04.863721 140293909243648 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 01:41:04.863816 140293909243648 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.863906 140293909243648 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.863983 140293909243648 hlog.py:32] train/00149/eval_val/66/corr True
I1203 01:41:04.864056 140293909243648 hlog.py:32] train/00149/eval_val/66 
I1203 01:41:04.864126 140293909243648 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 01:41:04.864220 140293909243648 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 01:41:04.864316 140293909243648 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 01:41:04.864406 140293909243648 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 01:41:04.864483 140293909243648 hlog.py:32] train/00149/eval_val/67/corr True
I1203 01:41:04.864555 140293909243648 hlog.py:32] train/00149/eval_val/67 
I1203 01:41:04.864625 140293909243648 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 01:41:04.864720 140293909243648 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 01:41:04.864818 140293909243648 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 01:41:04.864909 140293909243648 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 01:41:04.864986 140293909243648 hlog.py:32] train/00149/eval_val/68/corr True
I1203 01:41:04.865059 140293909243648 hlog.py:32] train/00149/eval_val/68 
I1203 01:41:04.865130 140293909243648 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 01:41:04.865217 140293909243648 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 01:41:04.865317 140293909243648 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1203 01:41:04.865410 140293909243648 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.865488 140293909243648 hlog.py:32] train/00149/eval_val/69/corr False
I1203 01:41:04.865561 140293909243648 hlog.py:32] train/00149/eval_val/69 
I1203 01:41:04.865631 140293909243648 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 01:41:04.865722 140293909243648 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 01:41:04.865815 140293909243648 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 01:41:04.865902 140293909243648 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.865986 140293909243648 hlog.py:32] train/00149/eval_val/70/corr False
I1203 01:41:04.866060 140293909243648 hlog.py:32] train/00149/eval_val/70 
I1203 01:41:04.866130 140293909243648 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 01:41:04.866221 140293909243648 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 01:41:04.866314 140293909243648 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( california ) ) ) )
I1203 01:41:04.866402 140293909243648 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 01:41:04.866480 140293909243648 hlog.py:32] train/00149/eval_val/71/corr False
I1203 01:41:04.866552 140293909243648 hlog.py:32] train/00149/eval_val/71 
I1203 01:41:04.866622 140293909243648 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 01:41:04.866712 140293909243648 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 01:41:04.866805 140293909243648 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( florida ) ) ) )
I1203 01:41:04.866892 140293909243648 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 01:41:04.866970 140293909243648 hlog.py:32] train/00149/eval_val/72/corr False
I1203 01:41:04.867042 140293909243648 hlog.py:32] train/00149/eval_val/72 
I1203 01:41:04.867112 140293909243648 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 01:41:04.867202 140293909243648 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 01:41:04.867294 140293909243648 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( idaho ) ) ) )
I1203 01:41:04.867382 140293909243648 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 01:41:04.867471 140293909243648 hlog.py:32] train/00149/eval_val/73/corr False
I1203 01:41:04.867544 140293909243648 hlog.py:32] train/00149/eval_val/73 
I1203 01:41:04.867615 140293909243648 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 01:41:04.867705 140293909243648 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 01:41:04.867798 140293909243648 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( maine ) ) ) )
I1203 01:41:04.867886 140293909243648 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 01:41:04.867963 140293909243648 hlog.py:32] train/00149/eval_val/74/corr False
I1203 01:41:04.868035 140293909243648 hlog.py:32] train/00149/eval_val/74 
I1203 01:41:04.868105 140293909243648 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 01:41:04.868192 140293909243648 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 01:41:04.868289 140293909243648 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( square ) ) , _traverse ( B , A ) ) )
I1203 01:41:04.868378 140293909243648 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 01:41:04.868455 140293909243648 hlog.py:32] train/00149/eval_val/75/corr False
I1203 01:41:04.868527 140293909243648 hlog.py:32] train/00149/eval_val/75 
I1203 01:41:04.868598 140293909243648 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 01:41:04.868684 140293909243648 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 01:41:04.868779 140293909243648 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 01:41:04.868867 140293909243648 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 01:41:04.868944 140293909243648 hlog.py:32] train/00149/eval_val/76/corr False
I1203 01:41:04.869016 140293909243648 hlog.py:32] train/00149/eval_val/76 
I1203 01:41:04.869093 140293909243648 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 01:41:04.869184 140293909243648 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 01:41:04.869276 140293909243648 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( ohio ) ) ) )
I1203 01:41:04.869364 140293909243648 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 01:41:04.869441 140293909243648 hlog.py:32] train/00149/eval_val/77/corr False
I1203 01:41:04.869514 140293909243648 hlog.py:32] train/00149/eval_val/77 
I1203 01:41:04.869584 140293909243648 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 01:41:04.869671 140293909243648 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 01:41:04.869765 140293909243648 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1203 01:41:04.869853 140293909243648 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 01:41:04.869930 140293909243648 hlog.py:32] train/00149/eval_val/78/corr False
I1203 01:41:04.870002 140293909243648 hlog.py:32] train/00149/eval_val/78 
I1203 01:41:04.870073 140293909243648 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 01:41:04.870162 140293909243648 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 01:41:04.870255 140293909243648 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( south carolina ) ) ) )
I1203 01:41:04.870343 140293909243648 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 01:41:04.870420 140293909243648 hlog.py:32] train/00149/eval_val/79/corr False
I1203 01:41:04.870493 140293909243648 hlog.py:32] train/00149/eval_val/79 
I1203 01:41:04.870563 140293909243648 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 01:41:04.870654 140293909243648 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 01:41:04.870747 140293909243648 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 01:41:04.870834 140293909243648 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.870911 140293909243648 hlog.py:32] train/00149/eval_val/80/corr False
I1203 01:41:04.870983 140293909243648 hlog.py:32] train/00149/eval_val/80 
I1203 01:41:04.871053 140293909243648 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 01:41:04.871139 140293909243648 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 01:41:04.871235 140293909243648 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( texas ) ) , _area ( B , A ) ) )
I1203 01:41:04.871323 140293909243648 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.871400 140293909243648 hlog.py:32] train/00149/eval_val/81/corr False
I1203 01:41:04.871485 140293909243648 hlog.py:32] train/00149/eval_val/81 
I1203 01:41:04.871556 140293909243648 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 01:41:04.871646 140293909243648 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 01:41:04.871740 140293909243648 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( wisconsin ) ) ) )
I1203 01:41:04.871828 140293909243648 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 01:41:04.871905 140293909243648 hlog.py:32] train/00149/eval_val/82/corr False
I1203 01:41:04.871978 140293909243648 hlog.py:32] train/00149/eval_val/82 
I1203 01:41:04.872048 140293909243648 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 01:41:04.872137 140293909243648 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 01:41:04.872236 140293909243648 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( B , A ) , _state ( B ) ) ) )
I1203 01:41:04.872325 140293909243648 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 01:41:04.872402 140293909243648 hlog.py:32] train/00149/eval_val/83/corr False
I1203 01:41:04.872475 140293909243648 hlog.py:32] train/00149/eval_val/83 
I1203 01:41:04.872545 140293909243648 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 01:41:04.872633 140293909243648 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 01:41:04.872731 140293909243648 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _area ( B , A ) , _const ( B , _countryid ( usa ) ) , _loc ( C , A ) , _population ( C ) ) )
I1203 01:41:04.872820 140293909243648 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 01:41:04.872898 140293909243648 hlog.py:32] train/00149/eval_val/84/corr False
I1203 01:41:04.872969 140293909243648 hlog.py:32] train/00149/eval_val/84 
I1203 01:41:04.873039 140293909243648 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 01:41:04.873130 140293909243648 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 01:41:04.873222 140293909243648 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _population ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 01:41:04.873310 140293909243648 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 01:41:04.873388 140293909243648 hlog.py:32] train/00149/eval_val/85/corr False
I1203 01:41:04.873460 140293909243648 hlog.py:32] train/00149/eval_val/85 
I1203 01:41:04.873529 140293909243648 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 01:41:04.873617 140293909243648 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 01:41:04.873723 140293909243648 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( a , _ ) ) ) ) )
I1203 01:41:04.873816 140293909243648 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 01:41:04.873894 140293909243648 hlog.py:32] train/00149/eval_val/86/corr False
I1203 01:41:04.873966 140293909243648 hlog.py:32] train/00149/eval_val/86 
I1203 01:41:04.874037 140293909243648 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 01:41:04.874133 140293909243648 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 01:41:04.874238 140293909243648 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 01:41:04.874335 140293909243648 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 01:41:04.874413 140293909243648 hlog.py:32] train/00149/eval_val/87/corr True
I1203 01:41:04.874486 140293909243648 hlog.py:32] train/00149/eval_val/87 
I1203 01:41:04.874556 140293909243648 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 01:41:04.874648 140293909243648 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 01:41:04.874743 140293909243648 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 01:41:04.874832 140293909243648 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 01:41:04.874909 140293909243648 hlog.py:32] train/00149/eval_val/88/corr True
I1203 01:41:04.874982 140293909243648 hlog.py:32] train/00149/eval_val/88 
I1203 01:41:04.875059 140293909243648 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 01:41:04.875155 140293909243648 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 01:41:04.875257 140293909243648 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:04.875351 140293909243648 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:04.875441 140293909243648 hlog.py:32] train/00149/eval_val/89/corr True
I1203 01:41:04.875515 140293909243648 hlog.py:32] train/00149/eval_val/89 
I1203 01:41:04.875585 140293909243648 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 01:41:04.875682 140293909243648 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 01:41:04.875788 140293909243648 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 01:41:04.875885 140293909243648 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 01:41:04.875962 140293909243648 hlog.py:32] train/00149/eval_val/90/corr True
I1203 01:41:04.876034 140293909243648 hlog.py:32] train/00149/eval_val/90 
I1203 01:41:04.876105 140293909243648 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 01:41:04.876198 140293909243648 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 01:41:04.876296 140293909243648 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.876387 140293909243648 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.876465 140293909243648 hlog.py:32] train/00149/eval_val/91/corr True
I1203 01:41:04.876537 140293909243648 hlog.py:32] train/00149/eval_val/91 
I1203 01:41:04.876607 140293909243648 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 01:41:04.876700 140293909243648 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 01:41:04.876797 140293909243648 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.876888 140293909243648 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.876966 140293909243648 hlog.py:32] train/00149/eval_val/92/corr True
I1203 01:41:04.877038 140293909243648 hlog.py:32] train/00149/eval_val/92 
I1203 01:41:04.877107 140293909243648 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 01:41:04.877197 140293909243648 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 01:41:04.877294 140293909243648 hlog.py:32] train/00149/eval_val/93/pred ( A , _largest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.877385 140293909243648 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.877462 140293909243648 hlog.py:32] train/00149/eval_val/93/corr False
I1203 01:41:04.877534 140293909243648 hlog.py:32] train/00149/eval_val/93 
I1203 01:41:04.877605 140293909243648 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 01:41:04.877692 140293909243648 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 01:41:04.877793 140293909243648 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 01:41:04.877890 140293909243648 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.877969 140293909243648 hlog.py:32] train/00149/eval_val/94/corr False
I1203 01:41:04.878041 140293909243648 hlog.py:32] train/00149/eval_val/94 
I1203 01:41:04.878112 140293909243648 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 01:41:04.878199 140293909243648 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 01:41:04.878300 140293909243648 hlog.py:32] train/00149/eval_val/95/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 01:41:04.878391 140293909243648 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.878469 140293909243648 hlog.py:32] train/00149/eval_val/95/corr False
I1203 01:41:04.878541 140293909243648 hlog.py:32] train/00149/eval_val/95 
I1203 01:41:04.878611 140293909243648 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 01:41:04.878705 140293909243648 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 01:41:04.878806 140293909243648 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 01:41:04.878900 140293909243648 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 01:41:04.878977 140293909243648 hlog.py:32] train/00149/eval_val/96/corr True
I1203 01:41:04.879049 140293909243648 hlog.py:32] train/00149/eval_val/96 
I1203 01:41:04.879119 140293909243648 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 01:41:04.879209 140293909243648 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 01:41:04.879314 140293909243648 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) ) )
I1203 01:41:04.879421 140293909243648 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 01:41:04.879502 140293909243648 hlog.py:32] train/00149/eval_val/97/corr False
I1203 01:41:04.879575 140293909243648 hlog.py:32] train/00149/eval_val/97 
I1203 01:41:04.879645 140293909243648 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 01:41:04.879739 140293909243648 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 01:41:04.879839 140293909243648 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 01:41:04.879931 140293909243648 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 01:41:04.880009 140293909243648 hlog.py:32] train/00149/eval_val/98/corr True
I1203 01:41:04.880081 140293909243648 hlog.py:32] train/00149/eval_val/98 
I1203 01:41:04.880151 140293909243648 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 01:41:04.880245 140293909243648 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 01:41:04.880344 140293909243648 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 01:41:04.880436 140293909243648 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 01:41:04.880521 140293909243648 hlog.py:32] train/00149/eval_val/99/corr True
I1203 01:41:04.880594 140293909243648 hlog.py:32] train/00149/eval_val/99 
I1203 01:41:04.880664 140293909243648 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 01:41:04.880751 140293909243648 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 01:41:04.880848 140293909243648 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 01:41:04.880942 140293909243648 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 01:41:04.881019 140293909243648 hlog.py:32] train/00149/eval_val/100/corr False
I1203 01:41:04.881091 140293909243648 hlog.py:32] train/00149/eval_val/100 
I1203 01:41:04.881161 140293909243648 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 01:41:04.881248 140293909243648 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 01:41:04.881350 140293909243648 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 01:41:04.881443 140293909243648 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 01:41:04.881522 140293909243648 hlog.py:32] train/00149/eval_val/101/corr False
I1203 01:41:04.881594 140293909243648 hlog.py:32] train/00149/eval_val/101 
I1203 01:41:04.881664 140293909243648 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 01:41:04.881751 140293909243648 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 01:41:04.881844 140293909243648 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) ) )
I1203 01:41:04.881933 140293909243648 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 01:41:04.882011 140293909243648 hlog.py:32] train/00149/eval_val/102/corr False
I1203 01:41:04.882083 140293909243648 hlog.py:32] train/00149/eval_val/102 
I1203 01:41:04.882153 140293909243648 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 01:41:04.882243 140293909243648 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 01:41:04.882339 140293909243648 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 01:41:04.882428 140293909243648 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 01:41:04.882505 140293909243648 hlog.py:32] train/00149/eval_val/103/corr True
I1203 01:41:04.882577 140293909243648 hlog.py:32] train/00149/eval_val/103 
I1203 01:41:04.882647 140293909243648 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 01:41:04.882746 140293909243648 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 01:41:04.882841 140293909243648 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.882930 140293909243648 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.883008 140293909243648 hlog.py:32] train/00149/eval_val/104/corr True
I1203 01:41:04.883080 140293909243648 hlog.py:32] train/00149/eval_val/104 
I1203 01:41:04.883150 140293909243648 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 01:41:04.883241 140293909243648 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 01:41:04.883336 140293909243648 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 01:41:04.883438 140293909243648 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 01:41:04.883518 140293909243648 hlog.py:32] train/00149/eval_val/105/corr True
I1203 01:41:04.883591 140293909243648 hlog.py:32] train/00149/eval_val/105 
I1203 01:41:04.883661 140293909243648 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 01:41:04.883753 140293909243648 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 01:41:04.883848 140293909243648 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 01:41:04.883937 140293909243648 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 01:41:04.884014 140293909243648 hlog.py:32] train/00149/eval_val/106/corr True
I1203 01:41:04.884086 140293909243648 hlog.py:32] train/00149/eval_val/106 
I1203 01:41:04.884156 140293909243648 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 01:41:04.884247 140293909243648 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 01:41:04.884341 140293909243648 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.884431 140293909243648 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.884509 140293909243648 hlog.py:32] train/00149/eval_val/107/corr True
I1203 01:41:04.884581 140293909243648 hlog.py:32] train/00149/eval_val/107 
I1203 01:41:04.884652 140293909243648 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 01:41:04.884743 140293909243648 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 01:41:04.884837 140293909243648 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 01:41:04.884941 140293909243648 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 01:41:04.885022 140293909243648 hlog.py:32] train/00149/eval_val/108/corr True
I1203 01:41:04.885097 140293909243648 hlog.py:32] train/00149/eval_val/108 
I1203 01:41:04.885169 140293909243648 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 01:41:04.885263 140293909243648 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 01:41:04.885374 140293909243648 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 01:41:04.885463 140293909243648 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 01:41:04.885540 140293909243648 hlog.py:32] train/00149/eval_val/109/corr True
I1203 01:41:04.885613 140293909243648 hlog.py:32] train/00149/eval_val/109 
I1203 01:41:04.885683 140293909243648 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 01:41:04.885774 140293909243648 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 01:41:04.885869 140293909243648 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.885958 140293909243648 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 01:41:04.886035 140293909243648 hlog.py:32] train/00149/eval_val/110/corr True
I1203 01:41:04.886107 140293909243648 hlog.py:32] train/00149/eval_val/110 
I1203 01:41:04.886178 140293909243648 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 01:41:04.886269 140293909243648 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 01:41:04.886364 140293909243648 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 01:41:04.886459 140293909243648 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 01:41:04.886537 140293909243648 hlog.py:32] train/00149/eval_val/111/corr True
I1203 01:41:04.886609 140293909243648 hlog.py:32] train/00149/eval_val/111 
I1203 01:41:04.886680 140293909243648 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 01:41:04.886770 140293909243648 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 01:41:04.886865 140293909243648 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 01:41:04.886955 140293909243648 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 01:41:04.887032 140293909243648 hlog.py:32] train/00149/eval_val/112/corr True
I1203 01:41:04.887104 140293909243648 hlog.py:32] train/00149/eval_val/112 
I1203 01:41:04.887174 140293909243648 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 01:41:04.887266 140293909243648 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 01:41:04.887362 140293909243648 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 01:41:04.887458 140293909243648 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 01:41:04.887537 140293909243648 hlog.py:32] train/00149/eval_val/113/corr True
I1203 01:41:04.887608 140293909243648 hlog.py:32] train/00149/eval_val/113 
I1203 01:41:04.887678 140293909243648 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 01:41:04.887770 140293909243648 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 01:41:04.887865 140293909243648 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.887954 140293909243648 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 01:41:04.888031 140293909243648 hlog.py:32] train/00149/eval_val/114/corr True
I1203 01:41:04.888104 140293909243648 hlog.py:32] train/00149/eval_val/114 
I1203 01:41:04.888174 140293909243648 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 01:41:04.888260 140293909243648 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 01:41:04.888355 140293909243648 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 01:41:04.888445 140293909243648 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 01:41:04.888523 140293909243648 hlog.py:32] train/00149/eval_val/115/corr False
I1203 01:41:04.888595 140293909243648 hlog.py:32] train/00149/eval_val/115 
I1203 01:41:04.888665 140293909243648 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 01:41:04.888756 140293909243648 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 01:41:04.888852 140293909243648 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.888941 140293909243648 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 01:41:04.889018 140293909243648 hlog.py:32] train/00149/eval_val/116/corr True
I1203 01:41:04.889090 140293909243648 hlog.py:32] train/00149/eval_val/116 
I1203 01:41:04.889160 140293909243648 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 01:41:04.889253 140293909243648 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 01:41:04.889356 140293909243648 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.889448 140293909243648 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.889525 140293909243648 hlog.py:32] train/00149/eval_val/117/corr True
I1203 01:41:04.889597 140293909243648 hlog.py:32] train/00149/eval_val/117 
I1203 01:41:04.889667 140293909243648 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 01:41:04.889760 140293909243648 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 01:41:04.889857 140293909243648 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.889948 140293909243648 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.890026 140293909243648 hlog.py:32] train/00149/eval_val/118/corr True
I1203 01:41:04.890097 140293909243648 hlog.py:32] train/00149/eval_val/118 
I1203 01:41:04.890167 140293909243648 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 01:41:04.890260 140293909243648 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 01:41:04.890357 140293909243648 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.890448 140293909243648 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 01:41:04.890525 140293909243648 hlog.py:32] train/00149/eval_val/119/corr True
I1203 01:41:04.890597 140293909243648 hlog.py:32] train/00149/eval_val/119 
I1203 01:41:04.890667 140293909243648 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 01:41:04.890756 140293909243648 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 01:41:04.890845 140293909243648 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 01:41:04.890930 140293909243648 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 01:41:04.891007 140293909243648 hlog.py:32] train/00149/eval_val/120/corr True
I1203 01:41:04.891079 140293909243648 hlog.py:32] train/00149/eval_val/120 
I1203 01:41:04.891150 140293909243648 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 01:41:04.891239 140293909243648 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 01:41:04.891327 140293909243648 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 01:41:04.891422 140293909243648 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 01:41:04.891501 140293909243648 hlog.py:32] train/00149/eval_val/121/corr True
I1203 01:41:04.891573 140293909243648 hlog.py:32] train/00149/eval_val/121 
I1203 01:41:04.891644 140293909243648 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 01:41:04.891738 140293909243648 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 01:41:04.891835 140293909243648 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 01:41:04.891925 140293909243648 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 01:41:04.892002 140293909243648 hlog.py:32] train/00149/eval_val/122/corr True
I1203 01:41:04.892073 140293909243648 hlog.py:32] train/00149/eval_val/122 
I1203 01:41:04.892143 140293909243648 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 01:41:04.892235 140293909243648 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 01:41:04.892332 140293909243648 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 01:41:04.892430 140293909243648 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 01:41:04.892507 140293909243648 hlog.py:32] train/00149/eval_val/123/corr True
I1203 01:41:04.892580 140293909243648 hlog.py:32] train/00149/eval_val/123 
I1203 01:41:04.892650 140293909243648 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 01:41:04.892743 140293909243648 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 01:41:04.892840 140293909243648 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 01:41:04.892930 140293909243648 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 01:41:04.893008 140293909243648 hlog.py:32] train/00149/eval_val/124/corr True
I1203 01:41:04.893080 140293909243648 hlog.py:32] train/00149/eval_val/124 
I1203 01:41:04.893150 140293909243648 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 01:41:04.893242 140293909243648 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 01:41:04.893339 140293909243648 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 01:41:04.893429 140293909243648 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 01:41:04.893507 140293909243648 hlog.py:32] train/00149/eval_val/125/corr True
I1203 01:41:04.893579 140293909243648 hlog.py:32] train/00149/eval_val/125 
I1203 01:41:04.893650 140293909243648 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 01:41:04.893741 140293909243648 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 01:41:04.893834 140293909243648 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:04.893921 140293909243648 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:04.893998 140293909243648 hlog.py:32] train/00149/eval_val/126/corr True
I1203 01:41:04.894070 140293909243648 hlog.py:32] train/00149/eval_val/126 
I1203 01:41:04.894140 140293909243648 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 01:41:04.894231 140293909243648 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 01:41:04.894323 140293909243648 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:04.894411 140293909243648 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:04.894488 140293909243648 hlog.py:32] train/00149/eval_val/127/corr True
I1203 01:41:04.894560 140293909243648 hlog.py:32] train/00149/eval_val/127 
I1203 01:41:04.894630 140293909243648 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 01:41:05.035854 140293909243648 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 01:41:05.036007 140293909243648 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.036107 140293909243648 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.036192 140293909243648 hlog.py:32] train/00149/eval_val/128/corr True
I1203 01:41:05.036268 140293909243648 hlog.py:32] train/00149/eval_val/128 
I1203 01:41:05.036343 140293909243648 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 01:41:05.036438 140293909243648 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 01:41:05.036542 140293909243648 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.036632 140293909243648 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.036710 140293909243648 hlog.py:32] train/00149/eval_val/129/corr True
I1203 01:41:05.036783 140293909243648 hlog.py:32] train/00149/eval_val/129 
I1203 01:41:05.036854 140293909243648 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 01:41:05.036942 140293909243648 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 01:41:05.037038 140293909243648 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 01:41:05.037127 140293909243648 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.037204 140293909243648 hlog.py:32] train/00149/eval_val/130/corr False
I1203 01:41:05.037277 140293909243648 hlog.py:32] train/00149/eval_val/130 
I1203 01:41:05.037347 140293909243648 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 01:41:05.037439 140293909243648 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 01:41:05.037531 140293909243648 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.037620 140293909243648 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.037697 140293909243648 hlog.py:32] train/00149/eval_val/131/corr True
I1203 01:41:05.037770 140293909243648 hlog.py:32] train/00149/eval_val/131 
I1203 01:41:05.037840 140293909243648 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 01:41:05.037927 140293909243648 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 01:41:05.038022 140293909243648 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 01:41:05.038110 140293909243648 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 01:41:05.038187 140293909243648 hlog.py:32] train/00149/eval_val/132/corr False
I1203 01:41:05.038259 140293909243648 hlog.py:32] train/00149/eval_val/132 
I1203 01:41:05.038330 140293909243648 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 01:41:05.038418 140293909243648 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 01:41:05.038520 140293909243648 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _state ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _population ( C ) , A ) )
I1203 01:41:05.038608 140293909243648 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 01:41:05.038686 140293909243648 hlog.py:32] train/00149/eval_val/133/corr False
I1203 01:41:05.038758 140293909243648 hlog.py:32] train/00149/eval_val/133 
I1203 01:41:05.038828 140293909243648 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 01:41:05.038924 140293909243648 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 01:41:05.039026 140293909243648 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:05.039120 140293909243648 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:05.039198 140293909243648 hlog.py:32] train/00149/eval_val/134/corr True
I1203 01:41:05.039270 140293909243648 hlog.py:32] train/00149/eval_val/134 
I1203 01:41:05.039340 140293909243648 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 01:41:05.039443 140293909243648 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 01:41:05.039558 140293909243648 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:05.039654 140293909243648 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 01:41:05.039732 140293909243648 hlog.py:32] train/00149/eval_val/135/corr True
I1203 01:41:05.039804 140293909243648 hlog.py:32] train/00149/eval_val/135 
I1203 01:41:05.039875 140293909243648 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 01:41:05.039968 140293909243648 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 01:41:05.040065 140293909243648 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.040154 140293909243648 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.040232 140293909243648 hlog.py:32] train/00149/eval_val/136/corr True
I1203 01:41:05.040305 140293909243648 hlog.py:32] train/00149/eval_val/136 
I1203 01:41:05.040375 140293909243648 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 01:41:05.040467 140293909243648 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 01:41:05.040564 140293909243648 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.040654 140293909243648 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.040732 140293909243648 hlog.py:32] train/00149/eval_val/137/corr True
I1203 01:41:05.040804 140293909243648 hlog.py:32] train/00149/eval_val/137 
I1203 01:41:05.040874 140293909243648 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 01:41:05.040965 140293909243648 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 01:41:05.041062 140293909243648 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.041152 140293909243648 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.041229 140293909243648 hlog.py:32] train/00149/eval_val/138/corr True
I1203 01:41:05.041301 140293909243648 hlog.py:32] train/00149/eval_val/138 
I1203 01:41:05.041372 140293909243648 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 01:41:05.041464 140293909243648 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 01:41:05.041559 140293909243648 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.041649 140293909243648 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 01:41:05.041727 140293909243648 hlog.py:32] train/00149/eval_val/139/corr True
I1203 01:41:05.041799 140293909243648 hlog.py:32] train/00149/eval_val/139 
I1203 01:41:05.041870 140293909243648 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 01:41:05.041958 140293909243648 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 01:41:05.042057 140293909243648 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 01:41:05.042150 140293909243648 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 01:41:05.042229 140293909243648 hlog.py:32] train/00149/eval_val/140/corr False
I1203 01:41:05.042301 140293909243648 hlog.py:32] train/00149/eval_val/140 
I1203 01:41:05.042372 140293909243648 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 01:41:05.042466 140293909243648 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 01:41:05.042566 140293909243648 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 01:41:05.042659 140293909243648 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 01:41:05.042737 140293909243648 hlog.py:32] train/00149/eval_val/141/corr False
I1203 01:41:05.042810 140293909243648 hlog.py:32] train/00149/eval_val/141 
I1203 01:41:05.042881 140293909243648 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 01:41:05.042967 140293909243648 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 01:41:05.043061 140293909243648 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 01:41:05.043149 140293909243648 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 01:41:05.043227 140293909243648 hlog.py:32] train/00149/eval_val/142/corr False
I1203 01:41:05.043298 140293909243648 hlog.py:32] train/00149/eval_val/142 
I1203 01:41:05.043369 140293909243648 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 01:41:05.043463 140293909243648 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 01:41:05.043558 140293909243648 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 01:41:05.043647 140293909243648 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 01:41:05.043724 140293909243648 hlog.py:32] train/00149/eval_val/143/corr False
I1203 01:41:05.043797 140293909243648 hlog.py:32] train/00149/eval_val/143 
I1203 01:41:05.043867 140293909243648 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 01:41:05.043953 140293909243648 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 01:41:05.044042 140293909243648 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 01:41:05.044130 140293909243648 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 01:41:05.044207 140293909243648 hlog.py:32] train/00149/eval_val/144/corr False
I1203 01:41:05.044280 140293909243648 hlog.py:32] train/00149/eval_val/144 
I1203 01:41:05.044350 140293909243648 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 01:41:05.044437 140293909243648 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 01:41:05.044536 140293909243648 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _mountain ( A ) , \+ ( _loc ( A , B ) , _major ( B ) , _const ( B , _stateid ( major ) ) ) )
I1203 01:41:05.044625 140293909243648 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 01:41:05.044703 140293909243648 hlog.py:32] train/00149/eval_val/145/corr False
I1203 01:41:05.044775 140293909243648 hlog.py:32] train/00149/eval_val/145 
I1203 01:41:05.044846 140293909243648 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 01:41:05.044936 140293909243648 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 01:41:05.045043 140293909243648 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _traverse ( D , C ) , _const ( D , _countryid ( usa ) ) ) ) ) ) )
I1203 01:41:05.045141 140293909243648 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 01:41:05.045219 140293909243648 hlog.py:32] train/00149/eval_val/146/corr False
I1203 01:41:05.045297 140293909243648 hlog.py:32] train/00149/eval_val/146 
I1203 01:41:05.045368 140293909243648 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 01:41:05.045461 140293909243648 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 01:41:05.045560 140293909243648 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 01:41:05.045651 140293909243648 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 01:41:05.045729 140293909243648 hlog.py:32] train/00149/eval_val/147/corr True
I1203 01:41:05.045802 140293909243648 hlog.py:32] train/00149/eval_val/147 
I1203 01:41:05.045872 140293909243648 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 01:41:05.045952 140293909243648 hlog.py:32] train/00149/eval_val/acc 0.5608
I1203 01:41:05.078552 140293909243648 hlog.py:18] train/00149{16.76s}
I1203 01:41:05.081198 140293909243648 hlog.py:18] train{2500.93s}
