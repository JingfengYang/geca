I1204 08:08:12.519880 140623296894720 hlog.py:24] # --noTEST
I1204 08:08:12.520245 140623296894720 hlog.py:24] # --seed=5
I1204 08:08:12.520331 140623296894720 hlog.py:24] # --dataset=semparse
I1204 08:08:12.520411 140623296894720 hlog.py:24] # --model_dir=model
I1204 08:08:12.520488 140623296894720 hlog.py:24] # --n_checkpoint=10
I1204 08:08:12.520564 140623296894720 hlog.py:24] # --nologtostderr
I1204 08:08:12.520651 140623296894720 hlog.py:24] # --noalsologtostderr
I1204 08:08:12.520722 140623296894720 hlog.py:24] # --log_dir=
I1204 08:08:12.520793 140623296894720 hlog.py:24] # --verbosity=0
I1204 08:08:12.520863 140623296894720 hlog.py:24] # --verbosity=0
I1204 08:08:12.520932 140623296894720 hlog.py:24] # --stderrthreshold=fatal
I1204 08:08:12.521002 140623296894720 hlog.py:24] # --showprefixforinfo
I1204 08:08:12.521071 140623296894720 hlog.py:24] # --nodedup
I1204 08:08:12.521141 140623296894720 hlog.py:24] # --nobuild_comp_table
I1204 08:08:12.521210 140623296894720 hlog.py:24] # --semparse_split=query
I1204 08:08:12.521280 140623296894720 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1204 08:08:12.521349 140623296894720 hlog.py:24] # --semparse_mrl=logic
I1204 08:08:12.521419 140623296894720 hlog.py:24] # --val_fold=8
I1204 08:08:12.521487 140623296894720 hlog.py:24] # --test_fold=9
I1204 08:08:12.521556 140623296894720 hlog.py:24] # --n_emb=64
I1204 08:08:12.521625 140623296894720 hlog.py:24] # --n_enc=512
I1204 08:08:12.521694 140623296894720 hlog.py:24] # --dropout=0.5
I1204 08:08:12.521762 140623296894720 hlog.py:24] # --copy_sup
I1204 08:08:12.521831 140623296894720 hlog.py:24] # --n_epochs=150
I1204 08:08:12.521900 140623296894720 hlog.py:24] # --n_epoch_batches=32
I1204 08:08:12.521969 140623296894720 hlog.py:24] # --n_batch=64
I1204 08:08:12.522037 140623296894720 hlog.py:24] # --lr=0.001
I1204 08:08:12.522106 140623296894720 hlog.py:24] # --clip=1.0
I1204 08:08:12.522175 140623296894720 hlog.py:24] # --sched_factor=0.5
I1204 08:08:12.522244 140623296894720 hlog.py:24] # --norun_with_pdb
I1204 08:08:12.522312 140623296894720 hlog.py:24] # --nopdb_post_mortem
I1204 08:08:12.522381 140623296894720 hlog.py:24] # --norun_with_profiling
I1204 08:08:12.522449 140623296894720 hlog.py:24] # --use_cprofile_for_profiling
I1204 08:08:12.522519 140623296894720 hlog.py:24] # --noonly_check_args
I1204 08:08:12.522587 140623296894720 hlog.py:24] # --augment=composed.val5.json
I1204 08:08:12.522656 140623296894720 hlog.py:24] # --aug_ratio=0.3
I1204 08:08:12.522725 140623296894720 hlog.py:24] # --noinvert
I1204 08:08:12.522794 140623296894720 hlog.py:24] # --nohelp
I1204 08:08:12.522862 140623296894720 hlog.py:24] # --nohelp
I1204 08:08:12.522930 140623296894720 hlog.py:24] # --nohelpshort
I1204 08:08:12.522999 140623296894720 hlog.py:24] # --nohelpfull
I1204 08:08:12.523068 140623296894720 hlog.py:24] # --nohelpxml
I1204 08:08:12.523137 140623296894720 hlog.py:24] # 
I1204 08:08:12.562317 140623296894720 hlog.py:32] train 543
I1204 08:08:12.562532 140623296894720 hlog.py:32] aug 1000
I1204 08:08:28.889004 140623296894720 hlog.py:32] train/00000/loss 3.5236
I1204 08:08:40.786610 140623296894720 hlog.py:32] train/00000/eval_train/acc 0.0000
I1204 08:08:42.684733 140623296894720 hlog.py:32] train/00000/eval_val/acc 0.0000
I1204 08:08:42.685369 140623296894720 hlog.py:18] train/00000{26.35s}
I1204 08:08:54.866754 140623296894720 hlog.py:32] train/00001/loss 1.2912
I1204 08:09:02.749665 140623296894720 hlog.py:32] train/00001/eval_train/acc 0.0000
I1204 08:09:04.070529 140623296894720 hlog.py:32] train/00001/eval_val/acc 0.0000
I1204 08:09:04.071032 140623296894720 hlog.py:18] train/00001{21.39s}
I1204 08:09:16.410590 140623296894720 hlog.py:32] train/00002/loss 0.8022
I1204 08:09:19.440443 140623296894720 hlog.py:32] train/00002/eval_train/acc 0.0000
I1204 08:09:20.221455 140623296894720 hlog.py:32] train/00002/eval_val/acc 0.0000
I1204 08:09:20.222100 140623296894720 hlog.py:18] train/00002{16.15s}
I1204 08:09:32.824280 140623296894720 hlog.py:32] train/00003/loss 0.5680
I1204 08:09:36.317474 140623296894720 hlog.py:32] train/00003/eval_train/acc 0.0790
I1204 08:09:36.926439 140623296894720 hlog.py:32] train/00003/eval_val/acc 0.0000
I1204 08:09:36.927022 140623296894720 hlog.py:18] train/00003{16.70s}
I1204 08:09:50.031415 140623296894720 hlog.py:32] train/00004/loss 0.4476
I1204 08:09:56.908097 140623296894720 hlog.py:32] train/00004/eval_train/acc 0.1070
I1204 08:09:57.705168 140623296894720 hlog.py:32] train/00004/eval_val/acc 0.0000
I1204 08:09:57.705765 140623296894720 hlog.py:18] train/00004{20.78s}
I1204 08:10:10.143337 140623296894720 hlog.py:32] train/00005/loss 0.3725
I1204 08:10:13.778835 140623296894720 hlog.py:32] train/00005/eval_train/acc 0.1460
I1204 08:10:14.381021 140623296894720 hlog.py:32] train/00005/eval_val/acc 0.0000
I1204 08:10:14.381502 140623296894720 hlog.py:18] train/00005{16.68s}
I1204 08:10:25.680789 140623296894720 hlog.py:32] train/00006/loss 0.3436
I1204 08:10:29.379127 140623296894720 hlog.py:32] train/00006/eval_train/acc 0.2360
I1204 08:10:29.986925 140623296894720 hlog.py:32] train/00006/eval_val/acc 0.0000
I1204 08:10:29.987447 140623296894720 hlog.py:18] train/00006{15.61s}
I1204 08:10:42.860723 140623296894720 hlog.py:32] train/00007/loss 0.2910
I1204 08:10:46.395222 140623296894720 hlog.py:32] train/00007/eval_train/acc 0.3090
I1204 08:10:46.952549 140623296894720 hlog.py:32] train/00007/eval_val/acc 0.0405
I1204 08:10:46.953044 140623296894720 hlog.py:18] train/00007{16.97s}
I1204 08:10:58.705665 140623296894720 hlog.py:32] train/00008/loss 0.2567
I1204 08:11:02.349811 140623296894720 hlog.py:32] train/00008/eval_train/acc 0.3450
I1204 08:11:02.952040 140623296894720 hlog.py:32] train/00008/eval_val/acc 0.0743
I1204 08:11:02.952578 140623296894720 hlog.py:18] train/00008{16.00s}
I1204 08:11:15.302196 140623296894720 hlog.py:32] train/00009/loss 0.2186
I1204 08:11:19.165221 140623296894720 hlog.py:32] train/00009/eval_train/acc 0.4650
I1204 08:11:19.772974 140623296894720 hlog.py:32] train/00009/eval_val/acc 0.1149
I1204 08:11:19.892307 140623296894720 hlog.py:18] train/00009{16.94s}
I1204 08:11:32.362555 140623296894720 hlog.py:32] train/00010/loss 0.1970
I1204 08:11:36.052803 140623296894720 hlog.py:32] train/00010/eval_train/acc 0.4730
I1204 08:11:36.642845 140623296894720 hlog.py:32] train/00010/eval_val/acc 0.1824
I1204 08:11:36.643316 140623296894720 hlog.py:18] train/00010{16.75s}
I1204 08:11:48.995208 140623296894720 hlog.py:32] train/00011/loss 0.1951
I1204 08:11:52.657697 140623296894720 hlog.py:32] train/00011/eval_train/acc 0.5040
I1204 08:11:53.248015 140623296894720 hlog.py:32] train/00011/eval_val/acc 0.0878
I1204 08:11:53.248494 140623296894720 hlog.py:18] train/00011{16.61s}
I1204 08:12:06.098494 140623296894720 hlog.py:32] train/00012/loss 0.1619
I1204 08:12:09.687030 140623296894720 hlog.py:32] train/00012/eval_train/acc 0.5330
I1204 08:12:10.257316 140623296894720 hlog.py:32] train/00012/eval_val/acc 0.2432
I1204 08:12:10.257816 140623296894720 hlog.py:18] train/00012{17.01s}
I1204 08:12:22.696432 140623296894720 hlog.py:32] train/00013/loss 0.1358
I1204 08:12:26.519114 140623296894720 hlog.py:32] train/00013/eval_train/acc 0.5500
I1204 08:12:27.177832 140623296894720 hlog.py:32] train/00013/eval_val/acc 0.2095
I1204 08:12:27.178328 140623296894720 hlog.py:18] train/00013{16.92s}
I1204 08:12:38.930202 140623296894720 hlog.py:32] train/00014/loss 0.1252
I1204 08:12:42.988888 140623296894720 hlog.py:32] train/00014/eval_train/acc 0.6450
I1204 08:12:43.600577 140623296894720 hlog.py:32] train/00014/eval_val/acc 0.2162
I1204 08:12:43.601070 140623296894720 hlog.py:18] train/00014{16.42s}
I1204 08:12:55.622068 140623296894720 hlog.py:32] train/00015/loss 0.1242
I1204 08:12:59.737317 140623296894720 hlog.py:32] train/00015/eval_train/acc 0.5690
I1204 08:13:00.313926 140623296894720 hlog.py:32] train/00015/eval_val/acc 0.1959
I1204 08:13:00.314516 140623296894720 hlog.py:18] train/00015{16.71s}
I1204 08:13:12.047609 140623296894720 hlog.py:32] train/00016/loss 0.1268
I1204 08:13:15.698151 140623296894720 hlog.py:32] train/00016/eval_train/acc 0.6310
I1204 08:13:16.265288 140623296894720 hlog.py:32] train/00016/eval_val/acc 0.2838
I1204 08:13:16.265972 140623296894720 hlog.py:18] train/00016{15.95s}
I1204 08:13:28.288836 140623296894720 hlog.py:32] train/00017/loss 0.1016
I1204 08:13:31.927438 140623296894720 hlog.py:32] train/00017/eval_train/acc 0.7010
I1204 08:13:32.514219 140623296894720 hlog.py:32] train/00017/eval_val/acc 0.3446
I1204 08:13:32.514692 140623296894720 hlog.py:18] train/00017{16.25s}
I1204 08:13:44.616883 140623296894720 hlog.py:32] train/00018/loss 0.0843
I1204 08:13:48.357589 140623296894720 hlog.py:32] train/00018/eval_train/acc 0.7470
I1204 08:13:48.897244 140623296894720 hlog.py:32] train/00018/eval_val/acc 0.3581
I1204 08:13:48.897709 140623296894720 hlog.py:18] train/00018{16.38s}
I1204 08:14:01.098740 140623296894720 hlog.py:32] train/00019/loss 0.0703
I1204 08:14:04.936875 140623296894720 hlog.py:32] train/00019/eval_train/acc 0.7750
I1204 08:14:05.453874 140623296894720 hlog.py:32] train/00019/eval_val/acc 0.3784
I1204 08:14:05.486753 140623296894720 hlog.py:18] train/00019{16.59s}
I1204 08:14:17.378293 140623296894720 hlog.py:32] train/00020/loss 0.0685
I1204 08:14:21.922810 140623296894720 hlog.py:32] train/00020/eval_train/acc 0.8060
I1204 08:14:22.500483 140623296894720 hlog.py:32] train/00020/eval_val/acc 0.3919
I1204 08:14:22.500954 140623296894720 hlog.py:18] train/00020{17.01s}
I1204 08:14:34.152615 140623296894720 hlog.py:32] train/00021/loss 0.0907
I1204 08:14:38.097841 140623296894720 hlog.py:32] train/00021/eval_train/acc 0.7590
I1204 08:14:38.707225 140623296894720 hlog.py:32] train/00021/eval_val/acc 0.3378
I1204 08:14:38.707697 140623296894720 hlog.py:18] train/00021{16.21s}
I1204 08:14:51.249769 140623296894720 hlog.py:32] train/00022/loss 0.0845
I1204 08:14:55.134832 140623296894720 hlog.py:32] train/00022/eval_train/acc 0.7930
I1204 08:14:55.730849 140623296894720 hlog.py:32] train/00022/eval_val/acc 0.3446
I1204 08:14:55.731328 140623296894720 hlog.py:18] train/00022{17.02s}
I1204 08:15:06.934587 140623296894720 hlog.py:32] train/00023/loss 0.0790
I1204 08:15:10.732724 140623296894720 hlog.py:32] train/00023/eval_train/acc 0.7750
I1204 08:15:11.284911 140623296894720 hlog.py:32] train/00023/eval_val/acc 0.3378
I1204 08:15:11.285595 140623296894720 hlog.py:18] train/00023{15.55s}
I1204 08:15:24.453608 140623296894720 hlog.py:32] train/00024/loss 0.0792
I1204 08:15:28.430531 140623296894720 hlog.py:32] train/00024/eval_train/acc 0.8440
I1204 08:15:28.976153 140623296894720 hlog.py:32] train/00024/eval_val/acc 0.4324
I1204 08:15:28.976825 140623296894720 hlog.py:18] train/00024{17.69s}
I1204 08:15:40.792910 140623296894720 hlog.py:32] train/00025/loss 0.0558
I1204 08:15:44.464756 140623296894720 hlog.py:32] train/00025/eval_train/acc 0.8150
I1204 08:15:45.054121 140623296894720 hlog.py:32] train/00025/eval_val/acc 0.4054
I1204 08:15:45.054787 140623296894720 hlog.py:18] train/00025{16.08s}
I1204 08:15:58.373898 140623296894720 hlog.py:32] train/00026/loss 0.0602
I1204 08:16:02.085769 140623296894720 hlog.py:32] train/00026/eval_train/acc 0.7750
I1204 08:16:02.621249 140623296894720 hlog.py:32] train/00026/eval_val/acc 0.4595
I1204 08:16:02.621738 140623296894720 hlog.py:18] train/00026{17.57s}
I1204 08:16:14.298444 140623296894720 hlog.py:32] train/00027/loss 0.0516
I1204 08:16:18.024529 140623296894720 hlog.py:32] train/00027/eval_train/acc 0.8590
I1204 08:16:18.591159 140623296894720 hlog.py:32] train/00027/eval_val/acc 0.4932
I1204 08:16:18.591710 140623296894720 hlog.py:18] train/00027{15.97s}
I1204 08:16:31.089851 140623296894720 hlog.py:32] train/00028/loss 0.0559
I1204 08:16:35.048276 140623296894720 hlog.py:32] train/00028/eval_train/acc 0.8450
I1204 08:16:35.623268 140623296894720 hlog.py:32] train/00028/eval_val/acc 0.3851
I1204 08:16:35.623783 140623296894720 hlog.py:18] train/00028{17.03s}
I1204 08:16:47.845359 140623296894720 hlog.py:32] train/00029/loss 0.0567
I1204 08:16:51.547976 140623296894720 hlog.py:32] train/00029/eval_train/acc 0.8680
I1204 08:16:52.115947 140623296894720 hlog.py:32] train/00029/eval_val/acc 0.4459
I1204 08:16:52.147023 140623296894720 hlog.py:18] train/00029{16.52s}
I1204 08:17:04.130784 140623296894720 hlog.py:32] train/00030/loss 0.0521
I1204 08:17:07.770937 140623296894720 hlog.py:32] train/00030/eval_train/acc 0.8880
I1204 08:17:08.319107 140623296894720 hlog.py:32] train/00030/eval_val/acc 0.4662
I1204 08:17:08.319552 140623296894720 hlog.py:18] train/00030{16.17s}
I1204 08:17:21.555020 140623296894720 hlog.py:32] train/00031/loss 0.0591
I1204 08:17:25.628471 140623296894720 hlog.py:32] train/00031/eval_train/acc 0.8710
I1204 08:17:26.228945 140623296894720 hlog.py:32] train/00031/eval_val/acc 0.4189
I1204 08:17:26.229635 140623296894720 hlog.py:18] train/00031{17.91s}
I1204 08:17:39.614007 140623296894720 hlog.py:32] train/00032/loss 0.0620
I1204 08:17:43.660715 140623296894720 hlog.py:32] train/00032/eval_train/acc 0.8780
I1204 08:17:44.365033 140623296894720 hlog.py:32] train/00032/eval_val/acc 0.4797
I1204 08:17:44.365548 140623296894720 hlog.py:18] train/00032{18.14s}
I1204 08:17:56.458208 140623296894720 hlog.py:32] train/00033/loss 0.0421
I1204 08:18:00.055106 140623296894720 hlog.py:32] train/00033/eval_train/acc 0.9060
I1204 08:18:00.624577 140623296894720 hlog.py:32] train/00033/eval_val/acc 0.5068
I1204 08:18:00.625086 140623296894720 hlog.py:18] train/00033{16.26s}
I1204 08:18:12.261016 140623296894720 hlog.py:32] train/00034/loss 0.0347
I1204 08:18:16.034950 140623296894720 hlog.py:32] train/00034/eval_train/acc 0.9010
I1204 08:18:16.612766 140623296894720 hlog.py:32] train/00034/eval_val/acc 0.4527
I1204 08:18:16.613241 140623296894720 hlog.py:18] train/00034{15.99s}
I1204 08:18:29.234655 140623296894720 hlog.py:32] train/00035/loss 0.0420
I1204 08:18:33.408416 140623296894720 hlog.py:32] train/00035/eval_train/acc 0.9250
I1204 08:18:33.975833 140623296894720 hlog.py:32] train/00035/eval_val/acc 0.4595
I1204 08:18:33.976330 140623296894720 hlog.py:18] train/00035{17.36s}
I1204 08:18:46.764621 140623296894720 hlog.py:32] train/00036/loss 0.0448
I1204 08:18:50.420022 140623296894720 hlog.py:32] train/00036/eval_train/acc 0.9180
I1204 08:18:51.009768 140623296894720 hlog.py:32] train/00036/eval_val/acc 0.5000
I1204 08:18:51.010257 140623296894720 hlog.py:18] train/00036{17.03s}
I1204 08:19:02.872585 140623296894720 hlog.py:32] train/00037/loss 0.0353
I1204 08:19:06.534271 140623296894720 hlog.py:32] train/00037/eval_train/acc 0.9170
I1204 08:19:07.074361 140623296894720 hlog.py:32] train/00037/eval_val/acc 0.4932
I1204 08:19:07.074847 140623296894720 hlog.py:18] train/00037{16.06s}
I1204 08:19:18.812678 140623296894720 hlog.py:32] train/00038/loss 0.0375
I1204 08:19:22.637551 140623296894720 hlog.py:32] train/00038/eval_train/acc 0.9330
I1204 08:19:23.238862 140623296894720 hlog.py:32] train/00038/eval_val/acc 0.4932
I1204 08:19:23.239323 140623296894720 hlog.py:18] train/00038{16.16s}
I1204 08:19:35.012178 140623296894720 hlog.py:32] train/00039/loss 0.0434
I1204 08:19:38.817857 140623296894720 hlog.py:32] train/00039/eval_train/acc 0.8770
I1204 08:19:39.386767 140623296894720 hlog.py:32] train/00039/eval_val/acc 0.5338
I1204 08:19:39.417834 140623296894720 hlog.py:18] train/00039{16.18s}
I1204 08:19:51.115098 140623296894720 hlog.py:32] train/00040/loss 0.0415
I1204 08:19:54.801679 140623296894720 hlog.py:32] train/00040/eval_train/acc 0.9310
I1204 08:19:55.357500 140623296894720 hlog.py:32] train/00040/eval_val/acc 0.4730
I1204 08:19:55.357993 140623296894720 hlog.py:18] train/00040{15.94s}
I1204 08:20:07.571474 140623296894720 hlog.py:32] train/00041/loss 0.0429
I1204 08:20:11.219542 140623296894720 hlog.py:32] train/00041/eval_train/acc 0.9260
I1204 08:20:11.842849 140623296894720 hlog.py:32] train/00041/eval_val/acc 0.4865
I1204 08:20:11.843557 140623296894720 hlog.py:18] train/00041{16.49s}
I1204 08:20:23.789659 140623296894720 hlog.py:32] train/00042/loss 0.0388
I1204 08:20:27.494904 140623296894720 hlog.py:32] train/00042/eval_train/acc 0.9340
I1204 08:20:28.061512 140623296894720 hlog.py:32] train/00042/eval_val/acc 0.4932
I1204 08:20:28.061973 140623296894720 hlog.py:18] train/00042{16.22s}
I1204 08:20:40.001268 140623296894720 hlog.py:32] train/00043/loss 0.0307
I1204 08:20:43.765913 140623296894720 hlog.py:32] train/00043/eval_train/acc 0.9630
I1204 08:20:44.354817 140623296894720 hlog.py:32] train/00043/eval_val/acc 0.5473
I1204 08:20:44.355346 140623296894720 hlog.py:18] train/00043{16.29s}
I1204 08:20:55.839530 140623296894720 hlog.py:32] train/00044/loss 0.0337
I1204 08:20:59.448420 140623296894720 hlog.py:32] train/00044/eval_train/acc 0.9580
I1204 08:21:00.014139 140623296894720 hlog.py:32] train/00044/eval_val/acc 0.5473
I1204 08:21:00.014672 140623296894720 hlog.py:18] train/00044{15.66s}
I1204 08:21:12.556257 140623296894720 hlog.py:32] train/00045/loss 0.0396
I1204 08:21:16.292753 140623296894720 hlog.py:32] train/00045/eval_train/acc 0.9270
I1204 08:21:16.892843 140623296894720 hlog.py:32] train/00045/eval_val/acc 0.4730
I1204 08:21:16.893413 140623296894720 hlog.py:18] train/00045{16.88s}
I1204 08:21:28.959570 140623296894720 hlog.py:32] train/00046/loss 0.0347
I1204 08:21:33.186087 140623296894720 hlog.py:32] train/00046/eval_train/acc 0.9370
I1204 08:21:33.733366 140623296894720 hlog.py:32] train/00046/eval_val/acc 0.4932
I1204 08:21:33.733831 140623296894720 hlog.py:18] train/00046{16.84s}
I1204 08:21:47.281682 140623296894720 hlog.py:32] train/00047/loss 0.0242
I1204 08:21:51.443845 140623296894720 hlog.py:32] train/00047/eval_train/acc 0.9450
I1204 08:21:52.036474 140623296894720 hlog.py:32] train/00047/eval_val/acc 0.5203
I1204 08:21:52.036974 140623296894720 hlog.py:18] train/00047{18.30s}
I1204 08:22:04.613639 140623296894720 hlog.py:32] train/00048/loss 0.0245
I1204 08:22:08.373581 140623296894720 hlog.py:32] train/00048/eval_train/acc 0.9530
I1204 08:22:08.896814 140623296894720 hlog.py:32] train/00048/eval_val/acc 0.5270
I1204 08:22:08.897310 140623296894720 hlog.py:18] train/00048{16.86s}
I1204 08:22:20.557712 140623296894720 hlog.py:32] train/00049/loss 0.0294
I1204 08:22:24.437726 140623296894720 hlog.py:32] train/00049/eval_train/acc 0.9530
I1204 08:22:25.043330 140623296894720 hlog.py:32] train/00049/eval_val/acc 0.5405
I1204 08:22:25.074940 140623296894720 hlog.py:18] train/00049{16.18s}
I1204 08:22:36.142966 140623296894720 hlog.py:32] train/00050/loss 0.0390
I1204 08:22:39.979582 140623296894720 hlog.py:32] train/00050/eval_train/acc 0.9510
I1204 08:22:40.541444 140623296894720 hlog.py:32] train/00050/eval_val/acc 0.5541
I1204 08:22:40.541938 140623296894720 hlog.py:18] train/00050{15.47s}
I1204 08:22:52.169774 140623296894720 hlog.py:32] train/00051/loss 0.0338
I1204 08:22:55.990279 140623296894720 hlog.py:32] train/00051/eval_train/acc 0.9690
I1204 08:22:56.570544 140623296894720 hlog.py:32] train/00051/eval_val/acc 0.5135
I1204 08:22:56.571031 140623296894720 hlog.py:18] train/00051{16.03s}
I1204 08:23:08.755021 140623296894720 hlog.py:32] train/00052/loss 0.0394
I1204 08:23:12.342596 140623296894720 hlog.py:32] train/00052/eval_train/acc 0.9410
I1204 08:23:12.929066 140623296894720 hlog.py:32] train/00052/eval_val/acc 0.5000
I1204 08:23:12.929548 140623296894720 hlog.py:18] train/00052{16.36s}
I1204 08:23:25.469440 140623296894720 hlog.py:32] train/00053/loss 0.0444
I1204 08:23:29.282407 140623296894720 hlog.py:32] train/00053/eval_train/acc 0.9730
I1204 08:23:29.846226 140623296894720 hlog.py:32] train/00053/eval_val/acc 0.5270
I1204 08:23:29.846759 140623296894720 hlog.py:18] train/00053{16.92s}
I1204 08:23:41.548174 140623296894720 hlog.py:32] train/00054/loss 0.0357
I1204 08:23:45.228650 140623296894720 hlog.py:32] train/00054/eval_train/acc 0.9570
I1204 08:23:45.888068 140623296894720 hlog.py:32] train/00054/eval_val/acc 0.5068
I1204 08:23:45.888607 140623296894720 hlog.py:18] train/00054{16.04s}
I1204 08:23:57.516297 140623296894720 hlog.py:32] train/00055/loss 0.0253
I1204 08:24:01.242196 140623296894720 hlog.py:32] train/00055/eval_train/acc 0.9660
I1204 08:24:01.808742 140623296894720 hlog.py:32] train/00055/eval_val/acc 0.4459
I1204 08:24:01.809224 140623296894720 hlog.py:18] train/00055{15.92s}
I1204 08:24:14.268363 140623296894720 hlog.py:32] train/00056/loss 0.0243
I1204 08:24:17.966281 140623296894720 hlog.py:32] train/00056/eval_train/acc 0.9370
I1204 08:24:18.546478 140623296894720 hlog.py:32] train/00056/eval_val/acc 0.5000
I1204 08:24:18.546958 140623296894720 hlog.py:18] train/00056{16.74s}
I1204 08:24:30.646076 140623296894720 hlog.py:32] train/00057/loss 0.0239
I1204 08:24:34.309493 140623296894720 hlog.py:32] train/00057/eval_train/acc 0.9660
I1204 08:24:34.911365 140623296894720 hlog.py:32] train/00057/eval_val/acc 0.4865
I1204 08:24:34.911884 140623296894720 hlog.py:18] train/00057{16.36s}
I1204 08:24:46.754718 140623296894720 hlog.py:32] train/00058/loss 0.0197
I1204 08:24:50.652062 140623296894720 hlog.py:32] train/00058/eval_train/acc 0.9740
I1204 08:24:51.228715 140623296894720 hlog.py:32] train/00058/eval_val/acc 0.5338
I1204 08:24:51.229115 140623296894720 hlog.py:18] train/00058{16.32s}
I1204 08:25:03.561158 140623296894720 hlog.py:32] train/00059/loss 0.0218
I1204 08:25:07.819961 140623296894720 hlog.py:32] train/00059/eval_train/acc 0.9750
I1204 08:25:08.473439 140623296894720 hlog.py:32] train/00059/eval_val/acc 0.5203
I1204 08:25:08.505187 140623296894720 hlog.py:18] train/00059{17.28s}
I1204 08:25:20.624539 140623296894720 hlog.py:32] train/00060/loss 0.0185
I1204 08:25:24.419058 140623296894720 hlog.py:32] train/00060/eval_train/acc 0.9900
I1204 08:25:24.998747 140623296894720 hlog.py:32] train/00060/eval_val/acc 0.4797
I1204 08:25:24.999182 140623296894720 hlog.py:18] train/00060{16.49s}
I1204 08:25:36.657747 140623296894720 hlog.py:32] train/00061/loss 0.0140
I1204 08:25:40.416591 140623296894720 hlog.py:32] train/00061/eval_train/acc 0.9860
I1204 08:25:40.976311 140623296894720 hlog.py:32] train/00061/eval_val/acc 0.4865
I1204 08:25:40.976825 140623296894720 hlog.py:18] train/00061{15.98s}
I1204 08:25:53.166163 140623296894720 hlog.py:32] train/00062/loss 0.0122
I1204 08:25:57.264442 140623296894720 hlog.py:32] train/00062/eval_train/acc 0.9870
I1204 08:25:57.819592 140623296894720 hlog.py:32] train/00062/eval_val/acc 0.5068
I1204 08:25:57.820102 140623296894720 hlog.py:18] train/00062{16.84s}
I1204 08:26:10.430956 140623296894720 hlog.py:32] train/00063/loss 0.0109
I1204 08:26:14.150794 140623296894720 hlog.py:32] train/00063/eval_train/acc 0.9920
I1204 08:26:14.738503 140623296894720 hlog.py:32] train/00063/eval_val/acc 0.5270
I1204 08:26:14.739014 140623296894720 hlog.py:18] train/00063{16.92s}
I1204 08:26:26.801586 140623296894720 hlog.py:32] train/00064/loss 0.0119
I1204 08:26:30.764162 140623296894720 hlog.py:32] train/00064/eval_train/acc 0.9930
I1204 08:26:31.331396 140623296894720 hlog.py:32] train/00064/eval_val/acc 0.5068
I1204 08:26:31.331860 140623296894720 hlog.py:18] train/00064{16.59s}
I1204 08:26:43.200073 140623296894720 hlog.py:32] train/00065/loss 0.0091
I1204 08:26:47.050071 140623296894720 hlog.py:32] train/00065/eval_train/acc 0.9970
I1204 08:26:47.610052 140623296894720 hlog.py:32] train/00065/eval_val/acc 0.5270
I1204 08:26:47.610610 140623296894720 hlog.py:18] train/00065{16.28s}
I1204 08:27:00.012335 140623296894720 hlog.py:32] train/00066/loss 0.0091
I1204 08:27:03.946204 140623296894720 hlog.py:32] train/00066/eval_train/acc 0.9920
I1204 08:27:04.520875 140623296894720 hlog.py:32] train/00066/eval_val/acc 0.5203
I1204 08:27:04.521368 140623296894720 hlog.py:18] train/00066{16.91s}
I1204 08:27:16.592548 140623296894720 hlog.py:32] train/00067/loss 0.0078
I1204 08:27:20.215739 140623296894720 hlog.py:32] train/00067/eval_train/acc 0.9950
I1204 08:27:20.775057 140623296894720 hlog.py:32] train/00067/eval_val/acc 0.5473
I1204 08:27:20.775546 140623296894720 hlog.py:18] train/00067{16.25s}
I1204 08:27:32.593582 140623296894720 hlog.py:32] train/00068/loss 0.0086
I1204 08:27:36.617120 140623296894720 hlog.py:32] train/00068/eval_train/acc 0.9930
I1204 08:27:37.173834 140623296894720 hlog.py:32] train/00068/eval_val/acc 0.5270
I1204 08:27:37.174367 140623296894720 hlog.py:18] train/00068{16.40s}
I1204 08:27:50.697254 140623296894720 hlog.py:32] train/00069/loss 0.0097
I1204 08:27:54.379476 140623296894720 hlog.py:32] train/00069/eval_train/acc 0.9970
I1204 08:27:54.941352 140623296894720 hlog.py:32] train/00069/eval_val/acc 0.5270
I1204 08:27:54.969910 140623296894720 hlog.py:18] train/00069{17.80s}
I1204 08:28:07.089165 140623296894720 hlog.py:32] train/00070/loss 0.0070
I1204 08:28:10.770967 140623296894720 hlog.py:32] train/00070/eval_train/acc 1.0000
I1204 08:28:11.360397 140623296894720 hlog.py:32] train/00070/eval_val/acc 0.5473
I1204 08:28:11.360869 140623296894720 hlog.py:18] train/00070{16.39s}
I1204 08:28:22.999005 140623296894720 hlog.py:32] train/00071/loss 0.0070
I1204 08:28:26.778606 140623296894720 hlog.py:32] train/00071/eval_train/acc 0.9980
I1204 08:28:27.339656 140623296894720 hlog.py:32] train/00071/eval_val/acc 0.5811
I1204 08:28:27.340167 140623296894720 hlog.py:18] train/00071{15.98s}
I1204 08:28:39.671706 140623296894720 hlog.py:32] train/00072/loss 0.0070
I1204 08:28:43.581668 140623296894720 hlog.py:32] train/00072/eval_train/acc 1.0000
I1204 08:28:44.159064 140623296894720 hlog.py:32] train/00072/eval_val/acc 0.5811
I1204 08:28:44.159833 140623296894720 hlog.py:18] train/00072{16.82s}
I1204 08:28:56.072920 140623296894720 hlog.py:32] train/00073/loss 0.0070
I1204 08:28:59.900404 140623296894720 hlog.py:32] train/00073/eval_train/acc 0.9990
I1204 08:29:00.464406 140623296894720 hlog.py:32] train/00073/eval_val/acc 0.5541
I1204 08:29:00.464906 140623296894720 hlog.py:18] train/00073{16.30s}
I1204 08:29:12.089126 140623296894720 hlog.py:32] train/00074/loss 0.0055
I1204 08:29:15.838303 140623296894720 hlog.py:32] train/00074/eval_train/acc 0.9910
I1204 08:29:16.421921 140623296894720 hlog.py:32] train/00074/eval_val/acc 0.5811
I1204 08:29:16.422442 140623296894720 hlog.py:18] train/00074{15.96s}
I1204 08:29:28.964159 140623296894720 hlog.py:32] train/00075/loss 0.0064
I1204 08:29:32.910399 140623296894720 hlog.py:32] train/00075/eval_train/acc 0.9950
I1204 08:29:33.506394 140623296894720 hlog.py:32] train/00075/eval_val/acc 0.5608
I1204 08:29:33.507054 140623296894720 hlog.py:18] train/00075{17.08s}
I1204 08:29:45.414062 140623296894720 hlog.py:32] train/00076/loss 0.0065
I1204 08:29:49.039582 140623296894720 hlog.py:32] train/00076/eval_train/acc 0.9980
I1204 08:29:49.613519 140623296894720 hlog.py:32] train/00076/eval_val/acc 0.5270
I1204 08:29:49.613937 140623296894720 hlog.py:18] train/00076{16.11s}
I1204 08:30:01.582880 140623296894720 hlog.py:32] train/00077/loss 0.0057
I1204 08:30:05.357445 140623296894720 hlog.py:32] train/00077/eval_train/acc 0.9990
I1204 08:30:05.926351 140623296894720 hlog.py:32] train/00077/eval_val/acc 0.5676
I1204 08:30:05.926849 140623296894720 hlog.py:18] train/00077{16.31s}
I1204 08:30:17.917095 140623296894720 hlog.py:32] train/00078/loss 0.0049
I1204 08:30:21.720675 140623296894720 hlog.py:32] train/00078/eval_train/acc 1.0000
I1204 08:30:22.286800 140623296894720 hlog.py:32] train/00078/eval_val/acc 0.5338
I1204 08:30:22.287318 140623296894720 hlog.py:18] train/00078{16.36s}
I1204 08:30:35.157293 140623296894720 hlog.py:32] train/00079/loss 0.0060
I1204 08:30:38.994252 140623296894720 hlog.py:32] train/00079/eval_train/acc 0.9950
I1204 08:30:39.581621 140623296894720 hlog.py:32] train/00079/eval_val/acc 0.5338
I1204 08:30:39.613629 140623296894720 hlog.py:18] train/00079{17.33s}
I1204 08:30:52.082346 140623296894720 hlog.py:32] train/00080/loss 0.0059
I1204 08:30:56.113763 140623296894720 hlog.py:32] train/00080/eval_train/acc 0.9960
I1204 08:30:56.689430 140623296894720 hlog.py:32] train/00080/eval_val/acc 0.5541
I1204 08:30:56.690004 140623296894720 hlog.py:18] train/00080{17.08s}
I1204 08:31:08.580457 140623296894720 hlog.py:32] train/00081/loss 0.0049
I1204 08:31:12.613131 140623296894720 hlog.py:32] train/00081/eval_train/acc 0.9970
I1204 08:31:13.216728 140623296894720 hlog.py:32] train/00081/eval_val/acc 0.5811
I1204 08:31:13.217273 140623296894720 hlog.py:18] train/00081{16.53s}
I1204 08:31:25.850295 140623296894720 hlog.py:32] train/00082/loss 0.0051
I1204 08:31:29.708553 140623296894720 hlog.py:32] train/00082/eval_train/acc 0.9930
I1204 08:31:30.264158 140623296894720 hlog.py:32] train/00082/eval_val/acc 0.5608
I1204 08:31:30.264751 140623296894720 hlog.py:18] train/00082{17.05s}
I1204 08:31:42.135235 140623296894720 hlog.py:32] train/00083/loss 0.0045
I1204 08:31:46.027170 140623296894720 hlog.py:32] train/00083/eval_train/acc 0.9980
I1204 08:31:46.603327 140623296894720 hlog.py:32] train/00083/eval_val/acc 0.5473
I1204 08:31:46.603861 140623296894720 hlog.py:18] train/00083{16.34s}
I1204 08:31:58.697628 140623296894720 hlog.py:32] train/00084/loss 0.0044
I1204 08:32:02.490932 140623296894720 hlog.py:32] train/00084/eval_train/acc 0.9990
I1204 08:32:03.065896 140623296894720 hlog.py:32] train/00084/eval_val/acc 0.5676
I1204 08:32:03.066620 140623296894720 hlog.py:18] train/00084{16.46s}
I1204 08:32:14.549930 140623296894720 hlog.py:32] train/00085/loss 0.0039
I1204 08:32:18.267045 140623296894720 hlog.py:32] train/00085/eval_train/acc 1.0000
I1204 08:32:18.823539 140623296894720 hlog.py:32] train/00085/eval_val/acc 0.5541
I1204 08:32:18.824240 140623296894720 hlog.py:18] train/00085{15.76s}
I1204 08:32:30.814064 140623296894720 hlog.py:32] train/00086/loss 0.0043
I1204 08:32:34.643965 140623296894720 hlog.py:32] train/00086/eval_train/acc 1.0000
I1204 08:32:35.205215 140623296894720 hlog.py:32] train/00086/eval_val/acc 0.5743
I1204 08:32:35.205713 140623296894720 hlog.py:18] train/00086{16.38s}
I1204 08:32:47.592767 140623296894720 hlog.py:32] train/00087/loss 0.0046
I1204 08:32:51.620322 140623296894720 hlog.py:32] train/00087/eval_train/acc 1.0000
I1204 08:32:52.176721 140623296894720 hlog.py:32] train/00087/eval_val/acc 0.5608
I1204 08:32:52.177225 140623296894720 hlog.py:18] train/00087{16.97s}
I1204 08:33:04.231368 140623296894720 hlog.py:32] train/00088/loss 0.0043
I1204 08:33:08.040465 140623296894720 hlog.py:32] train/00088/eval_train/acc 1.0000
I1204 08:33:08.596287 140623296894720 hlog.py:32] train/00088/eval_val/acc 0.5743
I1204 08:33:08.596894 140623296894720 hlog.py:18] train/00088{16.42s}
I1204 08:33:19.959128 140623296894720 hlog.py:32] train/00089/loss 0.0043
I1204 08:33:23.979002 140623296894720 hlog.py:32] train/00089/eval_train/acc 1.0000
I1204 08:33:24.564203 140623296894720 hlog.py:32] train/00089/eval_val/acc 0.5676
I1204 08:33:24.596097 140623296894720 hlog.py:18] train/00089{16.00s}
I1204 08:33:36.304748 140623296894720 hlog.py:32] train/00090/loss 0.0038
I1204 08:33:39.980528 140623296894720 hlog.py:32] train/00090/eval_train/acc 1.0000
I1204 08:33:40.554257 140623296894720 hlog.py:32] train/00090/eval_val/acc 0.5541
I1204 08:33:40.554815 140623296894720 hlog.py:18] train/00090{15.96s}
I1204 08:33:52.876088 140623296894720 hlog.py:32] train/00091/loss 0.0046
I1204 08:33:56.803681 140623296894720 hlog.py:32] train/00091/eval_train/acc 0.9970
I1204 08:33:57.383772 140623296894720 hlog.py:32] train/00091/eval_val/acc 0.5608
I1204 08:33:57.384321 140623296894720 hlog.py:18] train/00091{16.83s}
I1204 08:34:09.946695 140623296894720 hlog.py:32] train/00092/loss 0.0039
I1204 08:34:13.636227 140623296894720 hlog.py:32] train/00092/eval_train/acc 1.0000
I1204 08:34:14.223737 140623296894720 hlog.py:32] train/00092/eval_val/acc 0.5676
I1204 08:34:14.224292 140623296894720 hlog.py:18] train/00092{16.84s}
I1204 08:34:26.448292 140623296894720 hlog.py:32] train/00093/loss 0.0040
I1204 08:34:30.297307 140623296894720 hlog.py:32] train/00093/eval_train/acc 1.0000
I1204 08:34:30.892931 140623296894720 hlog.py:32] train/00093/eval_val/acc 0.5676
I1204 08:34:30.893482 140623296894720 hlog.py:18] train/00093{16.67s}
I1204 08:34:42.836820 140623296894720 hlog.py:32] train/00094/loss 0.0034
I1204 08:34:46.593987 140623296894720 hlog.py:32] train/00094/eval_train/acc 1.0000
I1204 08:34:47.170591 140623296894720 hlog.py:32] train/00094/eval_val/acc 0.5676
I1204 08:34:47.171039 140623296894720 hlog.py:18] train/00094{16.28s}
I1204 08:35:00.184782 140623296894720 hlog.py:32] train/00095/loss 0.0040
I1204 08:35:04.287531 140623296894720 hlog.py:32] train/00095/eval_train/acc 1.0000
I1204 08:35:04.853283 140623296894720 hlog.py:32] train/00095/eval_val/acc 0.5676
I1204 08:35:04.853771 140623296894720 hlog.py:18] train/00095{17.68s}
I1204 08:35:17.565809 140623296894720 hlog.py:32] train/00096/loss 0.0039
I1204 08:35:21.616615 140623296894720 hlog.py:32] train/00096/eval_train/acc 1.0000
I1204 08:35:22.178970 140623296894720 hlog.py:32] train/00096/eval_val/acc 0.5743
I1204 08:35:22.179538 140623296894720 hlog.py:18] train/00096{17.33s}
I1204 08:35:33.806903 140623296894720 hlog.py:32] train/00097/loss 0.0038
I1204 08:35:37.843167 140623296894720 hlog.py:32] train/00097/eval_train/acc 0.9970
I1204 08:35:38.424643 140623296894720 hlog.py:32] train/00097/eval_val/acc 0.5541
I1204 08:35:38.425117 140623296894720 hlog.py:18] train/00097{16.25s}
I1204 08:35:51.150606 140623296894720 hlog.py:32] train/00098/loss 0.0038
I1204 08:35:55.197036 140623296894720 hlog.py:32] train/00098/eval_train/acc 1.0000
I1204 08:35:55.764413 140623296894720 hlog.py:32] train/00098/eval_val/acc 0.5743
I1204 08:35:55.764863 140623296894720 hlog.py:18] train/00098{17.34s}
I1204 08:36:07.673617 140623296894720 hlog.py:32] train/00099/loss 0.0032
I1204 08:36:11.624402 140623296894720 hlog.py:32] train/00099/eval_train/acc 1.0000
I1204 08:36:12.229196 140623296894720 hlog.py:32] train/00099/eval_val/acc 0.5676
I1204 08:36:12.390527 140623296894720 hlog.py:18] train/00099{16.63s}
I1204 08:36:23.889223 140623296894720 hlog.py:32] train/00100/loss 0.0046
I1204 08:36:27.556921 140623296894720 hlog.py:32] train/00100/eval_train/acc 1.0000
I1204 08:36:28.118381 140623296894720 hlog.py:32] train/00100/eval_val/acc 0.5743
I1204 08:36:28.118856 140623296894720 hlog.py:18] train/00100{15.73s}
I1204 08:36:40.426893 140623296894720 hlog.py:32] train/00101/loss 0.0037
I1204 08:36:44.294588 140623296894720 hlog.py:32] train/00101/eval_train/acc 1.0000
I1204 08:36:44.883150 140623296894720 hlog.py:32] train/00101/eval_val/acc 0.5676
I1204 08:36:44.883867 140623296894720 hlog.py:18] train/00101{16.76s}
I1204 08:36:57.309494 140623296894720 hlog.py:32] train/00102/loss 0.0036
I1204 08:37:01.099642 140623296894720 hlog.py:32] train/00102/eval_train/acc 0.9980
I1204 08:37:01.666691 140623296894720 hlog.py:32] train/00102/eval_val/acc 0.5676
I1204 08:37:01.667143 140623296894720 hlog.py:18] train/00102{16.78s}
I1204 08:37:13.648605 140623296894720 hlog.py:32] train/00103/loss 0.0038
I1204 08:37:17.595922 140623296894720 hlog.py:32] train/00103/eval_train/acc 1.0000
I1204 08:37:18.139896 140623296894720 hlog.py:32] train/00103/eval_val/acc 0.5608
I1204 08:37:18.140376 140623296894720 hlog.py:18] train/00103{16.47s}
I1204 08:37:30.176679 140623296894720 hlog.py:32] train/00104/loss 0.0035
I1204 08:37:34.012603 140623296894720 hlog.py:32] train/00104/eval_train/acc 0.9990
I1204 08:37:34.565150 140623296894720 hlog.py:32] train/00104/eval_val/acc 0.5541
I1204 08:37:34.565708 140623296894720 hlog.py:18] train/00104{16.43s}
I1204 08:37:46.698393 140623296894720 hlog.py:32] train/00105/loss 0.0045
I1204 08:37:50.440218 140623296894720 hlog.py:32] train/00105/eval_train/acc 1.0000
I1204 08:37:51.019047 140623296894720 hlog.py:32] train/00105/eval_val/acc 0.5608
I1204 08:37:51.019492 140623296894720 hlog.py:18] train/00105{16.45s}
I1204 08:38:03.674989 140623296894720 hlog.py:32] train/00106/loss 0.0034
I1204 08:38:07.643561 140623296894720 hlog.py:32] train/00106/eval_train/acc 1.0000
I1204 08:38:08.188644 140623296894720 hlog.py:32] train/00106/eval_val/acc 0.5608
I1204 08:38:08.189115 140623296894720 hlog.py:18] train/00106{17.17s}
I1204 08:38:20.226982 140623296894720 hlog.py:32] train/00107/loss 0.0032
I1204 08:38:23.893155 140623296894720 hlog.py:32] train/00107/eval_train/acc 1.0000
I1204 08:38:24.436830 140623296894720 hlog.py:32] train/00107/eval_val/acc 0.5811
I1204 08:38:24.437309 140623296894720 hlog.py:18] train/00107{16.25s}
I1204 08:38:36.466113 140623296894720 hlog.py:32] train/00108/loss 0.0033
I1204 08:38:40.407125 140623296894720 hlog.py:32] train/00108/eval_train/acc 1.0000
I1204 08:38:40.969201 140623296894720 hlog.py:32] train/00108/eval_val/acc 0.5743
I1204 08:38:40.969713 140623296894720 hlog.py:18] train/00108{16.53s}
I1204 08:38:53.105457 140623296894720 hlog.py:32] train/00109/loss 0.0030
I1204 08:38:56.976215 140623296894720 hlog.py:32] train/00109/eval_train/acc 1.0000
I1204 08:38:57.539779 140623296894720 hlog.py:32] train/00109/eval_val/acc 0.5608
I1204 08:38:57.571857 140623296894720 hlog.py:18] train/00109{16.60s}
I1204 08:39:09.755427 140623296894720 hlog.py:32] train/00110/loss 0.0029
I1204 08:39:13.558526 140623296894720 hlog.py:32] train/00110/eval_train/acc 1.0000
I1204 08:39:14.102889 140623296894720 hlog.py:32] train/00110/eval_val/acc 0.5608
I1204 08:39:14.103349 140623296894720 hlog.py:18] train/00110{16.53s}
I1204 08:39:26.594115 140623296894720 hlog.py:32] train/00111/loss 0.0032
I1204 08:39:30.300312 140623296894720 hlog.py:32] train/00111/eval_train/acc 1.0000
I1204 08:39:30.844035 140623296894720 hlog.py:32] train/00111/eval_val/acc 0.5676
I1204 08:39:30.844509 140623296894720 hlog.py:18] train/00111{16.74s}
I1204 08:39:43.153586 140623296894720 hlog.py:32] train/00112/loss 0.0029
I1204 08:39:47.440840 140623296894720 hlog.py:32] train/00112/eval_train/acc 1.0000
I1204 08:39:47.995512 140623296894720 hlog.py:32] train/00112/eval_val/acc 0.5608
I1204 08:39:47.996001 140623296894720 hlog.py:18] train/00112{17.15s}
I1204 08:40:00.252802 140623296894720 hlog.py:32] train/00113/loss 0.0030
I1204 08:40:04.312930 140623296894720 hlog.py:32] train/00113/eval_train/acc 0.9980
I1204 08:40:04.926861 140623296894720 hlog.py:32] train/00113/eval_val/acc 0.5676
I1204 08:40:04.927467 140623296894720 hlog.py:18] train/00113{16.93s}
I1204 08:40:16.983899 140623296894720 hlog.py:32] train/00114/loss 0.0026
I1204 08:40:21.365213 140623296894720 hlog.py:32] train/00114/eval_train/acc 1.0000
I1204 08:40:21.940272 140623296894720 hlog.py:32] train/00114/eval_val/acc 0.5743
I1204 08:40:21.940730 140623296894720 hlog.py:18] train/00114{17.01s}
I1204 08:40:34.565464 140623296894720 hlog.py:32] train/00115/loss 0.0030
I1204 08:40:38.431290 140623296894720 hlog.py:32] train/00115/eval_train/acc 0.9980
I1204 08:40:38.998732 140623296894720 hlog.py:32] train/00115/eval_val/acc 0.5608
I1204 08:40:38.999224 140623296894720 hlog.py:18] train/00115{17.06s}
I1204 08:40:50.898111 140623296894720 hlog.py:32] train/00116/loss 0.0028
I1204 08:40:54.562971 140623296894720 hlog.py:32] train/00116/eval_train/acc 1.0000
I1204 08:40:55.137363 140623296894720 hlog.py:32] train/00116/eval_val/acc 0.5608
I1204 08:40:55.137963 140623296894720 hlog.py:18] train/00116{16.14s}
I1204 08:41:07.601948 140623296894720 hlog.py:32] train/00117/loss 0.0029
I1204 08:41:11.521427 140623296894720 hlog.py:32] train/00117/eval_train/acc 1.0000
I1204 08:41:12.093512 140623296894720 hlog.py:32] train/00117/eval_val/acc 0.5608
I1204 08:41:12.094031 140623296894720 hlog.py:18] train/00117{16.96s}
I1204 08:41:25.411741 140623296894720 hlog.py:32] train/00118/loss 0.0035
I1204 08:41:29.340473 140623296894720 hlog.py:32] train/00118/eval_train/acc 1.0000
I1204 08:41:29.914218 140623296894720 hlog.py:32] train/00118/eval_val/acc 0.5676
I1204 08:41:29.914729 140623296894720 hlog.py:18] train/00118{17.82s}
I1204 08:41:41.902409 140623296894720 hlog.py:32] train/00119/loss 0.0030
I1204 08:41:45.978699 140623296894720 hlog.py:32] train/00119/eval_train/acc 1.0000
I1204 08:41:46.561709 140623296894720 hlog.py:32] train/00119/eval_val/acc 0.5676
I1204 08:41:46.726349 140623296894720 hlog.py:18] train/00119{16.81s}
I1204 08:41:58.423241 140623296894720 hlog.py:32] train/00120/loss 0.0031
I1204 08:42:02.199744 140623296894720 hlog.py:32] train/00120/eval_train/acc 0.9980
I1204 08:42:02.761021 140623296894720 hlog.py:32] train/00120/eval_val/acc 0.5608
I1204 08:42:02.761529 140623296894720 hlog.py:18] train/00120{16.03s}
I1204 08:42:14.880183 140623296894720 hlog.py:32] train/00121/loss 0.0029
I1204 08:42:18.887632 140623296894720 hlog.py:32] train/00121/eval_train/acc 1.0000
I1204 08:42:19.462030 140623296894720 hlog.py:32] train/00121/eval_val/acc 0.5608
I1204 08:42:19.462524 140623296894720 hlog.py:18] train/00121{16.70s}
I1204 08:42:31.814899 140623296894720 hlog.py:32] train/00122/loss 0.0033
I1204 08:42:36.169309 140623296894720 hlog.py:32] train/00122/eval_train/acc 1.0000
I1204 08:42:36.771850 140623296894720 hlog.py:32] train/00122/eval_val/acc 0.5541
I1204 08:42:36.772479 140623296894720 hlog.py:18] train/00122{17.31s}
I1204 08:42:49.655733 140623296894720 hlog.py:32] train/00123/loss 0.0029
I1204 08:42:53.550895 140623296894720 hlog.py:32] train/00123/eval_train/acc 1.0000
I1204 08:42:54.168627 140623296894720 hlog.py:32] train/00123/eval_val/acc 0.5608
I1204 08:42:54.169303 140623296894720 hlog.py:18] train/00123{17.40s}
I1204 08:43:06.236337 140623296894720 hlog.py:32] train/00124/loss 0.0025
I1204 08:43:10.401719 140623296894720 hlog.py:32] train/00124/eval_train/acc 1.0000
I1204 08:43:11.001093 140623296894720 hlog.py:32] train/00124/eval_val/acc 0.5608
I1204 08:43:11.002031 140623296894720 hlog.py:18] train/00124{16.83s}
I1204 08:43:23.597189 140623296894720 hlog.py:32] train/00125/loss 0.0034
I1204 08:43:27.477648 140623296894720 hlog.py:32] train/00125/eval_train/acc 1.0000
I1204 08:43:28.060817 140623296894720 hlog.py:32] train/00125/eval_val/acc 0.5608
I1204 08:43:28.061374 140623296894720 hlog.py:18] train/00125{17.06s}
I1204 08:43:39.835592 140623296894720 hlog.py:32] train/00126/loss 0.0022
I1204 08:43:43.632868 140623296894720 hlog.py:32] train/00126/eval_train/acc 1.0000
I1204 08:43:44.230453 140623296894720 hlog.py:32] train/00126/eval_val/acc 0.5608
I1204 08:43:44.231026 140623296894720 hlog.py:18] train/00126{16.17s}
I1204 08:43:56.503089 140623296894720 hlog.py:32] train/00127/loss 0.0030
I1204 08:44:00.223910 140623296894720 hlog.py:32] train/00127/eval_train/acc 1.0000
I1204 08:44:00.802000 140623296894720 hlog.py:32] train/00127/eval_val/acc 0.5608
I1204 08:44:00.802505 140623296894720 hlog.py:18] train/00127{16.57s}
I1204 08:44:13.473937 140623296894720 hlog.py:32] train/00128/loss 0.0027
I1204 08:44:17.503535 140623296894720 hlog.py:32] train/00128/eval_train/acc 1.0000
I1204 08:44:18.082034 140623296894720 hlog.py:32] train/00128/eval_val/acc 0.5608
I1204 08:44:18.082565 140623296894720 hlog.py:18] train/00128{17.28s}
I1204 08:44:29.855851 140623296894720 hlog.py:32] train/00129/loss 0.0023
I1204 08:44:33.999032 140623296894720 hlog.py:32] train/00129/eval_train/acc 1.0000
I1204 08:44:34.565767 140623296894720 hlog.py:32] train/00129/eval_val/acc 0.5608
I1204 08:44:34.598002 140623296894720 hlog.py:18] train/00129{16.52s}
I1204 08:44:46.378192 140623296894720 hlog.py:32] train/00130/loss 0.0027
I1204 08:44:50.196771 140623296894720 hlog.py:32] train/00130/eval_train/acc 1.0000
I1204 08:44:50.764179 140623296894720 hlog.py:32] train/00130/eval_val/acc 0.5608
I1204 08:44:50.764669 140623296894720 hlog.py:18] train/00130{16.17s}
I1204 08:45:03.286226 140623296894720 hlog.py:32] train/00131/loss 0.0029
I1204 08:45:06.961076 140623296894720 hlog.py:32] train/00131/eval_train/acc 1.0000
I1204 08:45:07.528885 140623296894720 hlog.py:32] train/00131/eval_val/acc 0.5541
I1204 08:45:07.529453 140623296894720 hlog.py:18] train/00131{16.76s}
I1204 08:45:20.364578 140623296894720 hlog.py:32] train/00132/loss 0.0026
I1204 08:45:24.123811 140623296894720 hlog.py:32] train/00132/eval_train/acc 1.0000
I1204 08:45:24.687449 140623296894720 hlog.py:32] train/00132/eval_val/acc 0.5608
I1204 08:45:24.687946 140623296894720 hlog.py:18] train/00132{17.16s}
I1204 08:45:37.062449 140623296894720 hlog.py:32] train/00133/loss 0.0025
I1204 08:45:40.950324 140623296894720 hlog.py:32] train/00133/eval_train/acc 1.0000
I1204 08:45:41.515626 140623296894720 hlog.py:32] train/00133/eval_val/acc 0.5608
I1204 08:45:41.516123 140623296894720 hlog.py:18] train/00133{16.83s}
I1204 08:45:53.588511 140623296894720 hlog.py:32] train/00134/loss 0.0028
I1204 08:45:57.313650 140623296894720 hlog.py:32] train/00134/eval_train/acc 1.0000
I1204 08:45:57.884500 140623296894720 hlog.py:32] train/00134/eval_val/acc 0.5676
I1204 08:45:57.884984 140623296894720 hlog.py:18] train/00134{16.37s}
I1204 08:46:09.481501 140623296894720 hlog.py:32] train/00135/loss 0.0026
I1204 08:46:13.167185 140623296894720 hlog.py:32] train/00135/eval_train/acc 1.0000
I1204 08:46:13.734349 140623296894720 hlog.py:32] train/00135/eval_val/acc 0.5608
I1204 08:46:13.734825 140623296894720 hlog.py:18] train/00135{15.85s}
I1204 08:46:25.431245 140623296894720 hlog.py:32] train/00136/loss 0.0027
I1204 08:46:29.220104 140623296894720 hlog.py:32] train/00136/eval_train/acc 1.0000
I1204 08:46:29.804689 140623296894720 hlog.py:32] train/00136/eval_val/acc 0.5541
I1204 08:46:29.805179 140623296894720 hlog.py:18] train/00136{16.07s}
I1204 08:46:41.808905 140623296894720 hlog.py:32] train/00137/loss 0.0027
I1204 08:46:45.498099 140623296894720 hlog.py:32] train/00137/eval_train/acc 1.0000
I1204 08:46:46.066068 140623296894720 hlog.py:32] train/00137/eval_val/acc 0.5608
I1204 08:46:46.066601 140623296894720 hlog.py:18] train/00137{16.26s}
I1204 08:46:58.419897 140623296894720 hlog.py:32] train/00138/loss 0.0022
I1204 08:47:02.177722 140623296894720 hlog.py:32] train/00138/eval_train/acc 1.0000
I1204 08:47:02.741179 140623296894720 hlog.py:32] train/00138/eval_val/acc 0.5608
I1204 08:47:02.741660 140623296894720 hlog.py:18] train/00138{16.67s}
I1204 08:47:16.510473 140623296894720 hlog.py:32] train/00139/loss 0.0031
I1204 08:47:20.313281 140623296894720 hlog.py:32] train/00139/eval_train/acc 1.0000
I1204 08:47:20.965838 140623296894720 hlog.py:32] train/00139/eval_val/acc 0.5608
I1204 08:47:21.126194 140623296894720 hlog.py:18] train/00139{18.38s}
I1204 08:47:33.783826 140623296894720 hlog.py:32] train/00140/loss 0.0027
I1204 08:47:37.588803 140623296894720 hlog.py:32] train/00140/eval_train/acc 1.0000
I1204 08:47:38.166280 140623296894720 hlog.py:32] train/00140/eval_val/acc 0.5676
I1204 08:47:38.166973 140623296894720 hlog.py:18] train/00140{17.04s}
I1204 08:47:50.286870 140623296894720 hlog.py:32] train/00141/loss 0.0025
I1204 08:47:54.080612 140623296894720 hlog.py:32] train/00141/eval_train/acc 1.0000
I1204 08:47:54.645615 140623296894720 hlog.py:32] train/00141/eval_val/acc 0.5676
I1204 08:47:54.646104 140623296894720 hlog.py:18] train/00141{16.48s}
I1204 08:48:06.863678 140623296894720 hlog.py:32] train/00142/loss 0.0027
I1204 08:48:10.633564 140623296894720 hlog.py:32] train/00142/eval_train/acc 1.0000
I1204 08:48:11.201247 140623296894720 hlog.py:32] train/00142/eval_val/acc 0.5676
I1204 08:48:11.201753 140623296894720 hlog.py:18] train/00142{16.56s}
I1204 08:48:23.413604 140623296894720 hlog.py:32] train/00143/loss 0.0025
I1204 08:48:27.166328 140623296894720 hlog.py:32] train/00143/eval_train/acc 1.0000
I1204 08:48:27.735248 140623296894720 hlog.py:32] train/00143/eval_val/acc 0.5743
I1204 08:48:27.735862 140623296894720 hlog.py:18] train/00143{16.53s}
I1204 08:48:40.460724 140623296894720 hlog.py:32] train/00144/loss 0.0023
I1204 08:48:44.109018 140623296894720 hlog.py:32] train/00144/eval_train/acc 1.0000
I1204 08:48:44.669541 140623296894720 hlog.py:32] train/00144/eval_val/acc 0.5743
I1204 08:48:44.670038 140623296894720 hlog.py:18] train/00144{16.93s}
I1204 08:48:57.293937 140623296894720 hlog.py:32] train/00145/loss 0.0028
I1204 08:49:01.287231 140623296894720 hlog.py:32] train/00145/eval_train/acc 1.0000
I1204 08:49:01.848427 140623296894720 hlog.py:32] train/00145/eval_val/acc 0.5676
I1204 08:49:01.848919 140623296894720 hlog.py:18] train/00145{17.18s}
I1204 08:49:14.829499 140623296894720 hlog.py:32] train/00146/loss 0.0030
I1204 08:49:18.657511 140623296894720 hlog.py:32] train/00146/eval_train/acc 1.0000
I1204 08:49:19.238970 140623296894720 hlog.py:32] train/00146/eval_val/acc 0.5676
I1204 08:49:19.239427 140623296894720 hlog.py:18] train/00146{17.39s}
I1204 08:49:32.048782 140623296894720 hlog.py:32] train/00147/loss 0.0030
I1204 08:49:36.279531 140623296894720 hlog.py:32] train/00147/eval_train/acc 1.0000
I1204 08:49:36.827984 140623296894720 hlog.py:32] train/00147/eval_val/acc 0.5676
I1204 08:49:36.828430 140623296894720 hlog.py:18] train/00147{17.59s}
I1204 08:49:48.691205 140623296894720 hlog.py:32] train/00148/loss 0.0027
I1204 08:49:52.830093 140623296894720 hlog.py:32] train/00148/eval_train/acc 1.0000
I1204 08:49:53.378720 140623296894720 hlog.py:32] train/00148/eval_val/acc 0.5608
I1204 08:49:53.379257 140623296894720 hlog.py:18] train/00148{16.55s}
I1204 08:50:05.326942 140623296894720 hlog.py:32] train/00149/loss 0.0023
I1204 08:50:09.073885 140623296894720 hlog.py:32] train/00149/eval_train/acc 1.0000
I1204 08:50:09.280690 140623296894720 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1204 08:50:09.280893 140623296894720 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:50:09.280991 140623296894720 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:50:09.281073 140623296894720 hlog.py:32] train/00149/eval_val/0/corr True
I1204 08:50:09.281148 140623296894720 hlog.py:32] train/00149/eval_val/0 
I1204 08:50:09.281229 140623296894720 hlog.py:18] train/00149/eval_val/0{0.00s}
I1204 08:50:09.281322 140623296894720 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1204 08:50:09.281415 140623296894720 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1204 08:50:09.281502 140623296894720 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.281583 140623296894720 hlog.py:32] train/00149/eval_val/1/corr False
I1204 08:50:09.281654 140623296894720 hlog.py:32] train/00149/eval_val/1 
I1204 08:50:09.281722 140623296894720 hlog.py:18] train/00149/eval_val/1{0.00s}
I1204 08:50:09.281806 140623296894720 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1204 08:50:09.281898 140623296894720 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1204 08:50:09.281983 140623296894720 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1204 08:50:09.282058 140623296894720 hlog.py:32] train/00149/eval_val/2/corr False
I1204 08:50:09.282128 140623296894720 hlog.py:32] train/00149/eval_val/2 
I1204 08:50:09.282197 140623296894720 hlog.py:18] train/00149/eval_val/2{0.00s}
I1204 08:50:09.282280 140623296894720 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1204 08:50:09.282371 140623296894720 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( new mexico , _ ) ) ) )
I1204 08:50:09.282457 140623296894720 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:50:09.282532 140623296894720 hlog.py:32] train/00149/eval_val/3/corr False
I1204 08:50:09.282602 140623296894720 hlog.py:32] train/00149/eval_val/3 
I1204 08:50:09.282669 140623296894720 hlog.py:18] train/00149/eval_val/3{0.00s}
I1204 08:50:09.282752 140623296894720 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1204 08:50:09.282843 140623296894720 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1204 08:50:09.282928 140623296894720 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1204 08:50:09.283002 140623296894720 hlog.py:32] train/00149/eval_val/4/corr False
I1204 08:50:09.283072 140623296894720 hlog.py:32] train/00149/eval_val/4 
I1204 08:50:09.283140 140623296894720 hlog.py:18] train/00149/eval_val/4{0.00s}
I1204 08:50:09.283224 140623296894720 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1204 08:50:09.283314 140623296894720 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1204 08:50:09.283420 140623296894720 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.283499 140623296894720 hlog.py:32] train/00149/eval_val/5/corr False
I1204 08:50:09.283572 140623296894720 hlog.py:32] train/00149/eval_val/5 
I1204 08:50:09.283643 140623296894720 hlog.py:18] train/00149/eval_val/5{0.00s}
I1204 08:50:09.283743 140623296894720 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1204 08:50:09.283846 140623296894720 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1204 08:50:09.283931 140623296894720 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.284006 140623296894720 hlog.py:32] train/00149/eval_val/6/corr False
I1204 08:50:09.284076 140623296894720 hlog.py:32] train/00149/eval_val/6 
I1204 08:50:09.284143 140623296894720 hlog.py:18] train/00149/eval_val/6{0.00s}
I1204 08:50:09.284228 140623296894720 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1204 08:50:09.284317 140623296894720 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1204 08:50:09.284401 140623296894720 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.284475 140623296894720 hlog.py:32] train/00149/eval_val/7/corr False
I1204 08:50:09.284545 140623296894720 hlog.py:32] train/00149/eval_val/7 
I1204 08:50:09.284613 140623296894720 hlog.py:18] train/00149/eval_val/7{0.00s}
I1204 08:50:09.284699 140623296894720 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1204 08:50:09.284789 140623296894720 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 08:50:09.284873 140623296894720 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 08:50:09.284948 140623296894720 hlog.py:32] train/00149/eval_val/8/corr False
I1204 08:50:09.285017 140623296894720 hlog.py:32] train/00149/eval_val/8 
I1204 08:50:09.285084 140623296894720 hlog.py:18] train/00149/eval_val/8{0.00s}
I1204 08:50:09.285167 140623296894720 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1204 08:50:09.285257 140623296894720 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 08:50:09.285341 140623296894720 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 08:50:09.285415 140623296894720 hlog.py:32] train/00149/eval_val/9/corr False
I1204 08:50:09.285485 140623296894720 hlog.py:32] train/00149/eval_val/9 
I1204 08:50:09.285552 140623296894720 hlog.py:18] train/00149/eval_val/9{0.00s}
I1204 08:50:09.285635 140623296894720 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1204 08:50:09.285725 140623296894720 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 08:50:09.285808 140623296894720 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.285882 140623296894720 hlog.py:32] train/00149/eval_val/10/corr False
I1204 08:50:09.285952 140623296894720 hlog.py:32] train/00149/eval_val/10 
I1204 08:50:09.286019 140623296894720 hlog.py:18] train/00149/eval_val/10{0.00s}
I1204 08:50:09.286109 140623296894720 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1204 08:50:09.286206 140623296894720 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:50:09.286296 140623296894720 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:50:09.286370 140623296894720 hlog.py:32] train/00149/eval_val/11/corr True
I1204 08:50:09.286439 140623296894720 hlog.py:32] train/00149/eval_val/11 
I1204 08:50:09.286507 140623296894720 hlog.py:18] train/00149/eval_val/11{0.00s}
I1204 08:50:09.286597 140623296894720 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1204 08:50:09.286695 140623296894720 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 08:50:09.286790 140623296894720 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 08:50:09.286866 140623296894720 hlog.py:32] train/00149/eval_val/12/corr True
I1204 08:50:09.286935 140623296894720 hlog.py:32] train/00149/eval_val/12 
I1204 08:50:09.287003 140623296894720 hlog.py:18] train/00149/eval_val/12{0.00s}
I1204 08:50:09.287092 140623296894720 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1204 08:50:09.287189 140623296894720 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 08:50:09.287279 140623296894720 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 08:50:09.287353 140623296894720 hlog.py:32] train/00149/eval_val/13/corr True
I1204 08:50:09.287446 140623296894720 hlog.py:32] train/00149/eval_val/13 
I1204 08:50:09.287517 140623296894720 hlog.py:18] train/00149/eval_val/13{0.00s}
I1204 08:50:09.287610 140623296894720 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1204 08:50:09.287723 140623296894720 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 08:50:09.287813 140623296894720 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 08:50:09.287888 140623296894720 hlog.py:32] train/00149/eval_val/14/corr True
I1204 08:50:09.287957 140623296894720 hlog.py:32] train/00149/eval_val/14 
I1204 08:50:09.288025 140623296894720 hlog.py:18] train/00149/eval_val/14{0.00s}
I1204 08:50:09.288115 140623296894720 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1204 08:50:09.288213 140623296894720 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 08:50:09.288302 140623296894720 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 08:50:09.288376 140623296894720 hlog.py:32] train/00149/eval_val/15/corr True
I1204 08:50:09.288445 140623296894720 hlog.py:32] train/00149/eval_val/15 
I1204 08:50:09.288512 140623296894720 hlog.py:18] train/00149/eval_val/15{0.00s}
I1204 08:50:09.288602 140623296894720 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1204 08:50:09.288700 140623296894720 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:50:09.288789 140623296894720 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:50:09.288864 140623296894720 hlog.py:32] train/00149/eval_val/16/corr True
I1204 08:50:09.288934 140623296894720 hlog.py:32] train/00149/eval_val/16 
I1204 08:50:09.289001 140623296894720 hlog.py:18] train/00149/eval_val/16{0.00s}
I1204 08:50:09.289084 140623296894720 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1204 08:50:09.289178 140623296894720 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1204 08:50:09.289268 140623296894720 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1204 08:50:09.289348 140623296894720 hlog.py:32] train/00149/eval_val/17/corr False
I1204 08:50:09.289417 140623296894720 hlog.py:32] train/00149/eval_val/17 
I1204 08:50:09.289485 140623296894720 hlog.py:18] train/00149/eval_val/17{0.00s}
I1204 08:50:09.289567 140623296894720 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1204 08:50:09.289661 140623296894720 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1204 08:50:09.289751 140623296894720 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1204 08:50:09.289826 140623296894720 hlog.py:32] train/00149/eval_val/18/corr False
I1204 08:50:09.289896 140623296894720 hlog.py:32] train/00149/eval_val/18 
I1204 08:50:09.289963 140623296894720 hlog.py:18] train/00149/eval_val/18{0.00s}
I1204 08:50:09.290045 140623296894720 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1204 08:50:09.290139 140623296894720 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:50:09.290228 140623296894720 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1204 08:50:09.290303 140623296894720 hlog.py:32] train/00149/eval_val/19/corr False
I1204 08:50:09.290372 140623296894720 hlog.py:32] train/00149/eval_val/19 
I1204 08:50:09.290439 140623296894720 hlog.py:18] train/00149/eval_val/19{0.00s}
I1204 08:50:09.290523 140623296894720 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1204 08:50:09.290616 140623296894720 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1204 08:50:09.290705 140623296894720 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1204 08:50:09.290779 140623296894720 hlog.py:32] train/00149/eval_val/20/corr False
I1204 08:50:09.290848 140623296894720 hlog.py:32] train/00149/eval_val/20 
I1204 08:50:09.290916 140623296894720 hlog.py:18] train/00149/eval_val/20{0.00s}
I1204 08:50:09.291006 140623296894720 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1204 08:50:09.291104 140623296894720 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 08:50:09.291193 140623296894720 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 08:50:09.291268 140623296894720 hlog.py:32] train/00149/eval_val/21/corr True
I1204 08:50:09.291337 140623296894720 hlog.py:32] train/00149/eval_val/21 
I1204 08:50:09.291427 140623296894720 hlog.py:18] train/00149/eval_val/21{0.00s}
I1204 08:50:09.291534 140623296894720 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1204 08:50:09.291631 140623296894720 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1204 08:50:09.291722 140623296894720 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1204 08:50:09.291810 140623296894720 hlog.py:32] train/00149/eval_val/22/corr False
I1204 08:50:09.291880 140623296894720 hlog.py:32] train/00149/eval_val/22 
I1204 08:50:09.291948 140623296894720 hlog.py:18] train/00149/eval_val/22{0.00s}
I1204 08:50:09.292032 140623296894720 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1204 08:50:09.292121 140623296894720 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:50:09.292212 140623296894720 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:50:09.292287 140623296894720 hlog.py:32] train/00149/eval_val/23/corr False
I1204 08:50:09.292356 140623296894720 hlog.py:32] train/00149/eval_val/23 
I1204 08:50:09.292424 140623296894720 hlog.py:18] train/00149/eval_val/23{0.00s}
I1204 08:50:09.292507 140623296894720 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1204 08:50:09.292598 140623296894720 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:50:09.292682 140623296894720 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:50:09.292756 140623296894720 hlog.py:32] train/00149/eval_val/24/corr False
I1204 08:50:09.292825 140623296894720 hlog.py:32] train/00149/eval_val/24 
I1204 08:50:09.292892 140623296894720 hlog.py:18] train/00149/eval_val/24{0.00s}
I1204 08:50:09.292980 140623296894720 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1204 08:50:09.293072 140623296894720 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:50:09.293158 140623296894720 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:50:09.293232 140623296894720 hlog.py:32] train/00149/eval_val/25/corr True
I1204 08:50:09.293302 140623296894720 hlog.py:32] train/00149/eval_val/25 
I1204 08:50:09.293369 140623296894720 hlog.py:18] train/00149/eval_val/25{0.00s}
I1204 08:50:09.293457 140623296894720 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1204 08:50:09.293549 140623296894720 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 08:50:09.293635 140623296894720 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 08:50:09.293709 140623296894720 hlog.py:32] train/00149/eval_val/26/corr True
I1204 08:50:09.293779 140623296894720 hlog.py:32] train/00149/eval_val/26 
I1204 08:50:09.293846 140623296894720 hlog.py:18] train/00149/eval_val/26{0.00s}
I1204 08:50:09.293930 140623296894720 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1204 08:50:09.294028 140623296894720 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1204 08:50:09.294114 140623296894720 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:50:09.294189 140623296894720 hlog.py:32] train/00149/eval_val/27/corr False
I1204 08:50:09.294258 140623296894720 hlog.py:32] train/00149/eval_val/27 
I1204 08:50:09.294326 140623296894720 hlog.py:18] train/00149/eval_val/27{0.00s}
I1204 08:50:09.294413 140623296894720 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1204 08:50:09.294504 140623296894720 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:50:09.294591 140623296894720 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:50:09.294665 140623296894720 hlog.py:32] train/00149/eval_val/28/corr True
I1204 08:50:09.294734 140623296894720 hlog.py:32] train/00149/eval_val/28 
I1204 08:50:09.294802 140623296894720 hlog.py:18] train/00149/eval_val/28{0.00s}
I1204 08:50:09.294889 140623296894720 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1204 08:50:09.294980 140623296894720 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 08:50:09.295072 140623296894720 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 08:50:09.295147 140623296894720 hlog.py:32] train/00149/eval_val/29/corr True
I1204 08:50:09.295216 140623296894720 hlog.py:32] train/00149/eval_val/29 
I1204 08:50:09.295284 140623296894720 hlog.py:18] train/00149/eval_val/29{0.00s}
I1204 08:50:09.295371 140623296894720 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1204 08:50:09.295489 140623296894720 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 08:50:09.295578 140623296894720 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 08:50:09.295655 140623296894720 hlog.py:32] train/00149/eval_val/30/corr True
I1204 08:50:09.295738 140623296894720 hlog.py:32] train/00149/eval_val/30 
I1204 08:50:09.295805 140623296894720 hlog.py:18] train/00149/eval_val/30{0.00s}
I1204 08:50:09.295893 140623296894720 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1204 08:50:09.295984 140623296894720 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 08:50:09.296070 140623296894720 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 08:50:09.296144 140623296894720 hlog.py:32] train/00149/eval_val/31/corr True
I1204 08:50:09.296213 140623296894720 hlog.py:32] train/00149/eval_val/31 
I1204 08:50:09.296280 140623296894720 hlog.py:18] train/00149/eval_val/31{0.00s}
I1204 08:50:09.296368 140623296894720 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1204 08:50:09.296460 140623296894720 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 08:50:09.296674 140623296894720 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 08:50:09.296757 140623296894720 hlog.py:32] train/00149/eval_val/32/corr True
I1204 08:50:09.296827 140623296894720 hlog.py:32] train/00149/eval_val/32 
I1204 08:50:09.296896 140623296894720 hlog.py:18] train/00149/eval_val/32{0.00s}
I1204 08:50:09.296985 140623296894720 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1204 08:50:09.297076 140623296894720 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:50:09.297163 140623296894720 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:50:09.297237 140623296894720 hlog.py:32] train/00149/eval_val/33/corr True
I1204 08:50:09.297320 140623296894720 hlog.py:32] train/00149/eval_val/33 
I1204 08:50:09.297390 140623296894720 hlog.py:18] train/00149/eval_val/33{0.00s}
I1204 08:50:09.297482 140623296894720 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1204 08:50:09.297577 140623296894720 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:50:09.297678 140623296894720 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:50:09.297753 140623296894720 hlog.py:32] train/00149/eval_val/34/corr True
I1204 08:50:09.297822 140623296894720 hlog.py:32] train/00149/eval_val/34 
I1204 08:50:09.297890 140623296894720 hlog.py:18] train/00149/eval_val/34{0.00s}
I1204 08:50:09.297980 140623296894720 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1204 08:50:09.298074 140623296894720 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.298169 140623296894720 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.298244 140623296894720 hlog.py:32] train/00149/eval_val/35/corr True
I1204 08:50:09.298313 140623296894720 hlog.py:32] train/00149/eval_val/35 
I1204 08:50:09.298380 140623296894720 hlog.py:18] train/00149/eval_val/35{0.00s}
I1204 08:50:09.298469 140623296894720 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1204 08:50:09.298564 140623296894720 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.298651 140623296894720 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.298726 140623296894720 hlog.py:32] train/00149/eval_val/36/corr True
I1204 08:50:09.298795 140623296894720 hlog.py:32] train/00149/eval_val/36 
I1204 08:50:09.298863 140623296894720 hlog.py:18] train/00149/eval_val/36{0.00s}
I1204 08:50:09.298952 140623296894720 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1204 08:50:09.299046 140623296894720 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.299134 140623296894720 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.299208 140623296894720 hlog.py:32] train/00149/eval_val/37/corr True
I1204 08:50:09.299278 140623296894720 hlog.py:32] train/00149/eval_val/37 
I1204 08:50:09.299345 140623296894720 hlog.py:18] train/00149/eval_val/37{0.00s}
I1204 08:50:09.299457 140623296894720 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1204 08:50:09.299557 140623296894720 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.299648 140623296894720 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.299736 140623296894720 hlog.py:32] train/00149/eval_val/38/corr True
I1204 08:50:09.299806 140623296894720 hlog.py:32] train/00149/eval_val/38 
I1204 08:50:09.299874 140623296894720 hlog.py:18] train/00149/eval_val/38{0.00s}
I1204 08:50:09.299962 140623296894720 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1204 08:50:09.300056 140623296894720 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.300144 140623296894720 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:50:09.300218 140623296894720 hlog.py:32] train/00149/eval_val/39/corr True
I1204 08:50:09.300287 140623296894720 hlog.py:32] train/00149/eval_val/39 
I1204 08:50:09.300354 140623296894720 hlog.py:18] train/00149/eval_val/39{0.00s}
I1204 08:50:09.300437 140623296894720 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1204 08:50:09.300531 140623296894720 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 08:50:09.300617 140623296894720 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 08:50:09.300692 140623296894720 hlog.py:32] train/00149/eval_val/40/corr False
I1204 08:50:09.300761 140623296894720 hlog.py:32] train/00149/eval_val/40 
I1204 08:50:09.300829 140623296894720 hlog.py:18] train/00149/eval_val/40{0.00s}
I1204 08:50:09.300911 140623296894720 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1204 08:50:09.301010 140623296894720 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1204 08:50:09.301097 140623296894720 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 08:50:09.301171 140623296894720 hlog.py:32] train/00149/eval_val/41/corr False
I1204 08:50:09.301241 140623296894720 hlog.py:32] train/00149/eval_val/41 
I1204 08:50:09.301308 140623296894720 hlog.py:18] train/00149/eval_val/41{0.00s}
I1204 08:50:09.301392 140623296894720 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1204 08:50:09.301488 140623296894720 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 08:50:09.301573 140623296894720 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1204 08:50:09.301647 140623296894720 hlog.py:32] train/00149/eval_val/42/corr False
I1204 08:50:09.301717 140623296894720 hlog.py:32] train/00149/eval_val/42 
I1204 08:50:09.301784 140623296894720 hlog.py:18] train/00149/eval_val/42{0.00s}
I1204 08:50:09.301868 140623296894720 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1204 08:50:09.301968 140623296894720 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1204 08:50:09.302059 140623296894720 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1204 08:50:09.302134 140623296894720 hlog.py:32] train/00149/eval_val/43/corr False
I1204 08:50:09.302203 140623296894720 hlog.py:32] train/00149/eval_val/43 
I1204 08:50:09.302271 140623296894720 hlog.py:18] train/00149/eval_val/43{0.00s}
I1204 08:50:09.302362 140623296894720 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1204 08:50:09.302461 140623296894720 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 08:50:09.302552 140623296894720 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 08:50:09.302626 140623296894720 hlog.py:32] train/00149/eval_val/44/corr True
I1204 08:50:09.302696 140623296894720 hlog.py:32] train/00149/eval_val/44 
I1204 08:50:09.302763 140623296894720 hlog.py:18] train/00149/eval_val/44{0.00s}
I1204 08:50:09.302851 140623296894720 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1204 08:50:09.302945 140623296894720 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 08:50:09.303032 140623296894720 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 08:50:09.303106 140623296894720 hlog.py:32] train/00149/eval_val/45/corr False
I1204 08:50:09.303176 140623296894720 hlog.py:32] train/00149/eval_val/45 
I1204 08:50:09.303244 140623296894720 hlog.py:18] train/00149/eval_val/45{0.00s}
I1204 08:50:09.303332 140623296894720 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1204 08:50:09.303464 140623296894720 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 08:50:09.303560 140623296894720 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 08:50:09.303645 140623296894720 hlog.py:32] train/00149/eval_val/46/corr True
I1204 08:50:09.303732 140623296894720 hlog.py:32] train/00149/eval_val/46 
I1204 08:50:09.303815 140623296894720 hlog.py:18] train/00149/eval_val/46{0.00s}
I1204 08:50:09.303905 140623296894720 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1204 08:50:09.304002 140623296894720 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 08:50:09.304091 140623296894720 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 08:50:09.304165 140623296894720 hlog.py:32] train/00149/eval_val/47/corr True
I1204 08:50:09.304235 140623296894720 hlog.py:32] train/00149/eval_val/47 
I1204 08:50:09.304303 140623296894720 hlog.py:18] train/00149/eval_val/47{0.00s}
I1204 08:50:09.304390 140623296894720 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1204 08:50:09.304487 140623296894720 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _cityid ( called , _ ) ) ) , A ) )
I1204 08:50:09.304577 140623296894720 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 08:50:09.304652 140623296894720 hlog.py:32] train/00149/eval_val/48/corr False
I1204 08:50:09.304721 140623296894720 hlog.py:32] train/00149/eval_val/48 
I1204 08:50:09.304789 140623296894720 hlog.py:18] train/00149/eval_val/48{0.00s}
I1204 08:50:09.304879 140623296894720 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1204 08:50:09.304976 140623296894720 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:50:09.305065 140623296894720 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:50:09.305140 140623296894720 hlog.py:32] train/00149/eval_val/49/corr True
I1204 08:50:09.305210 140623296894720 hlog.py:32] train/00149/eval_val/49 
I1204 08:50:09.305277 140623296894720 hlog.py:18] train/00149/eval_val/49{0.00s}
I1204 08:50:09.305366 140623296894720 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1204 08:50:09.305464 140623296894720 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 08:50:09.305554 140623296894720 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 08:50:09.305628 140623296894720 hlog.py:32] train/00149/eval_val/50/corr True
I1204 08:50:09.305697 140623296894720 hlog.py:32] train/00149/eval_val/50 
I1204 08:50:09.305765 140623296894720 hlog.py:18] train/00149/eval_val/50{0.00s}
I1204 08:50:09.305848 140623296894720 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1204 08:50:09.305948 140623296894720 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _higher ( C , D ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:50:09.306038 140623296894720 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:50:09.306112 140623296894720 hlog.py:32] train/00149/eval_val/51/corr False
I1204 08:50:09.306182 140623296894720 hlog.py:32] train/00149/eval_val/51 
I1204 08:50:09.306249 140623296894720 hlog.py:18] train/00149/eval_val/51{0.00s}
I1204 08:50:09.306338 140623296894720 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1204 08:50:09.306431 140623296894720 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 08:50:09.306517 140623296894720 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 08:50:09.306592 140623296894720 hlog.py:32] train/00149/eval_val/52/corr False
I1204 08:50:09.306662 140623296894720 hlog.py:32] train/00149/eval_val/52 
I1204 08:50:09.306729 140623296894720 hlog.py:18] train/00149/eval_val/52{0.00s}
I1204 08:50:09.306812 140623296894720 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1204 08:50:09.306904 140623296894720 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 08:50:09.306990 140623296894720 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 08:50:09.307065 140623296894720 hlog.py:32] train/00149/eval_val/53/corr False
I1204 08:50:09.307134 140623296894720 hlog.py:32] train/00149/eval_val/53 
I1204 08:50:09.307202 140623296894720 hlog.py:18] train/00149/eval_val/53{0.00s}
I1204 08:50:09.307290 140623296894720 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1204 08:50:09.307381 140623296894720 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.307493 140623296894720 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.307570 140623296894720 hlog.py:32] train/00149/eval_val/54/corr True
I1204 08:50:09.307642 140623296894720 hlog.py:32] train/00149/eval_val/54 
I1204 08:50:09.307723 140623296894720 hlog.py:18] train/00149/eval_val/54{0.00s}
I1204 08:50:09.307812 140623296894720 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1204 08:50:09.307903 140623296894720 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 08:50:09.307988 140623296894720 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 08:50:09.308063 140623296894720 hlog.py:32] train/00149/eval_val/55/corr True
I1204 08:50:09.308132 140623296894720 hlog.py:32] train/00149/eval_val/55 
I1204 08:50:09.308200 140623296894720 hlog.py:18] train/00149/eval_val/55{0.00s}
I1204 08:50:09.308287 140623296894720 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1204 08:50:09.308379 140623296894720 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:50:09.308465 140623296894720 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:50:09.308540 140623296894720 hlog.py:32] train/00149/eval_val/56/corr True
I1204 08:50:09.308609 140623296894720 hlog.py:32] train/00149/eval_val/56 
I1204 08:50:09.308676 140623296894720 hlog.py:18] train/00149/eval_val/56{0.00s}
I1204 08:50:09.308759 140623296894720 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1204 08:50:09.308853 140623296894720 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _major ( A ) , _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.308938 140623296894720 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.309013 140623296894720 hlog.py:32] train/00149/eval_val/57/corr False
I1204 08:50:09.309082 140623296894720 hlog.py:32] train/00149/eval_val/57 
I1204 08:50:09.309149 140623296894720 hlog.py:18] train/00149/eval_val/57{0.00s}
I1204 08:50:09.309237 140623296894720 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1204 08:50:09.309335 140623296894720 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.309421 140623296894720 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.309496 140623296894720 hlog.py:32] train/00149/eval_val/58/corr True
I1204 08:50:09.309565 140623296894720 hlog.py:32] train/00149/eval_val/58 
I1204 08:50:09.309633 140623296894720 hlog.py:18] train/00149/eval_val/58{0.00s}
I1204 08:50:09.309720 140623296894720 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1204 08:50:09.309812 140623296894720 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 08:50:09.309897 140623296894720 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 08:50:09.309972 140623296894720 hlog.py:32] train/00149/eval_val/59/corr True
I1204 08:50:09.310041 140623296894720 hlog.py:32] train/00149/eval_val/59 
I1204 08:50:09.310108 140623296894720 hlog.py:18] train/00149/eval_val/59{0.00s}
I1204 08:50:09.310196 140623296894720 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1204 08:50:09.310287 140623296894720 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 08:50:09.310373 140623296894720 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 08:50:09.310447 140623296894720 hlog.py:32] train/00149/eval_val/60/corr True
I1204 08:50:09.310517 140623296894720 hlog.py:32] train/00149/eval_val/60 
I1204 08:50:09.310584 140623296894720 hlog.py:18] train/00149/eval_val/60{0.00s}
I1204 08:50:09.310672 140623296894720 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1204 08:50:09.310764 140623296894720 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:50:09.310850 140623296894720 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:50:09.310924 140623296894720 hlog.py:32] train/00149/eval_val/61/corr True
I1204 08:50:09.310993 140623296894720 hlog.py:32] train/00149/eval_val/61 
I1204 08:50:09.311061 140623296894720 hlog.py:18] train/00149/eval_val/61{0.00s}
I1204 08:50:09.311149 140623296894720 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1204 08:50:09.311240 140623296894720 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 08:50:09.311326 140623296894720 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 08:50:09.311420 140623296894720 hlog.py:32] train/00149/eval_val/62/corr True
I1204 08:50:09.311495 140623296894720 hlog.py:32] train/00149/eval_val/62 
I1204 08:50:09.311566 140623296894720 hlog.py:18] train/00149/eval_val/62{0.00s}
I1204 08:50:09.311656 140623296894720 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1204 08:50:09.311762 140623296894720 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.311847 140623296894720 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.311921 140623296894720 hlog.py:32] train/00149/eval_val/63/corr True
I1204 08:50:09.311990 140623296894720 hlog.py:32] train/00149/eval_val/63 
I1204 08:50:09.312057 140623296894720 hlog.py:18] train/00149/eval_val/63{0.00s}
I1204 08:50:09.552992 140623296894720 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1204 08:50:09.553189 140623296894720 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 08:50:09.553299 140623296894720 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 08:50:09.553381 140623296894720 hlog.py:32] train/00149/eval_val/64/corr True
I1204 08:50:09.553454 140623296894720 hlog.py:32] train/00149/eval_val/64 
I1204 08:50:09.553529 140623296894720 hlog.py:18] train/00149/eval_val/64{0.00s}
I1204 08:50:09.553622 140623296894720 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1204 08:50:09.553716 140623296894720 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.553803 140623296894720 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.553879 140623296894720 hlog.py:32] train/00149/eval_val/65/corr True
I1204 08:50:09.553950 140623296894720 hlog.py:32] train/00149/eval_val/65 
I1204 08:50:09.554018 140623296894720 hlog.py:18] train/00149/eval_val/65{0.00s}
I1204 08:50:09.554107 140623296894720 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1204 08:50:09.554200 140623296894720 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.554286 140623296894720 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.554360 140623296894720 hlog.py:32] train/00149/eval_val/66/corr True
I1204 08:50:09.554430 140623296894720 hlog.py:32] train/00149/eval_val/66 
I1204 08:50:09.554498 140623296894720 hlog.py:18] train/00149/eval_val/66{0.00s}
I1204 08:50:09.554583 140623296894720 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1204 08:50:09.554682 140623296894720 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 08:50:09.554768 140623296894720 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.554842 140623296894720 hlog.py:32] train/00149/eval_val/67/corr False
I1204 08:50:09.554912 140623296894720 hlog.py:32] train/00149/eval_val/67 
I1204 08:50:09.554979 140623296894720 hlog.py:18] train/00149/eval_val/67{0.00s}
I1204 08:50:09.555069 140623296894720 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1204 08:50:09.555163 140623296894720 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 08:50:09.555250 140623296894720 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 08:50:09.555325 140623296894720 hlog.py:32] train/00149/eval_val/68/corr True
I1204 08:50:09.555394 140623296894720 hlog.py:32] train/00149/eval_val/68 
I1204 08:50:09.555473 140623296894720 hlog.py:18] train/00149/eval_val/68{0.00s}
I1204 08:50:09.555563 140623296894720 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1204 08:50:09.555657 140623296894720 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.555744 140623296894720 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.555819 140623296894720 hlog.py:32] train/00149/eval_val/69/corr True
I1204 08:50:09.555888 140623296894720 hlog.py:32] train/00149/eval_val/69 
I1204 08:50:09.555956 140623296894720 hlog.py:18] train/00149/eval_val/69{0.00s}
I1204 08:50:09.556043 140623296894720 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1204 08:50:09.556139 140623296894720 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1204 08:50:09.556223 140623296894720 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.556298 140623296894720 hlog.py:32] train/00149/eval_val/70/corr False
I1204 08:50:09.556367 140623296894720 hlog.py:32] train/00149/eval_val/70 
I1204 08:50:09.556435 140623296894720 hlog.py:18] train/00149/eval_val/70{0.00s}
I1204 08:50:09.556517 140623296894720 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1204 08:50:09.556607 140623296894720 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 08:50:09.556692 140623296894720 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 08:50:09.556766 140623296894720 hlog.py:32] train/00149/eval_val/71/corr False
I1204 08:50:09.556836 140623296894720 hlog.py:32] train/00149/eval_val/71 
I1204 08:50:09.556903 140623296894720 hlog.py:18] train/00149/eval_val/71{0.00s}
I1204 08:50:09.556986 140623296894720 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1204 08:50:09.557075 140623296894720 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 08:50:09.557160 140623296894720 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 08:50:09.557234 140623296894720 hlog.py:32] train/00149/eval_val/72/corr False
I1204 08:50:09.557303 140623296894720 hlog.py:32] train/00149/eval_val/72 
I1204 08:50:09.557371 140623296894720 hlog.py:18] train/00149/eval_val/72{0.00s}
I1204 08:50:09.557454 140623296894720 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1204 08:50:09.557543 140623296894720 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1204 08:50:09.557627 140623296894720 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1204 08:50:09.557701 140623296894720 hlog.py:32] train/00149/eval_val/73/corr False
I1204 08:50:09.557771 140623296894720 hlog.py:32] train/00149/eval_val/73 
I1204 08:50:09.557838 140623296894720 hlog.py:18] train/00149/eval_val/73{0.00s}
I1204 08:50:09.557921 140623296894720 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1204 08:50:09.558011 140623296894720 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( maine , _ ) ) ) )
I1204 08:50:09.558094 140623296894720 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:50:09.558168 140623296894720 hlog.py:32] train/00149/eval_val/74/corr False
I1204 08:50:09.558237 140623296894720 hlog.py:32] train/00149/eval_val/74 
I1204 08:50:09.558305 140623296894720 hlog.py:18] train/00149/eval_val/74{0.00s}
I1204 08:50:09.558388 140623296894720 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1204 08:50:09.558479 140623296894720 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( maryland , _ ) ) ) )
I1204 08:50:09.558563 140623296894720 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1204 08:50:09.558637 140623296894720 hlog.py:32] train/00149/eval_val/75/corr False
I1204 08:50:09.558707 140623296894720 hlog.py:32] train/00149/eval_val/75 
I1204 08:50:09.558775 140623296894720 hlog.py:18] train/00149/eval_val/75{0.00s}
I1204 08:50:09.558861 140623296894720 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1204 08:50:09.558951 140623296894720 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1204 08:50:09.559035 140623296894720 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:50:09.559114 140623296894720 hlog.py:32] train/00149/eval_val/76/corr False
I1204 08:50:09.559184 140623296894720 hlog.py:32] train/00149/eval_val/76 
I1204 08:50:09.559252 140623296894720 hlog.py:18] train/00149/eval_val/76{0.00s}
I1204 08:50:09.559334 140623296894720 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1204 08:50:09.559431 140623296894720 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1204 08:50:09.559517 140623296894720 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 08:50:09.559591 140623296894720 hlog.py:32] train/00149/eval_val/77/corr False
I1204 08:50:09.559661 140623296894720 hlog.py:32] train/00149/eval_val/77 
I1204 08:50:09.559728 140623296894720 hlog.py:18] train/00149/eval_val/77{0.00s}
I1204 08:50:09.559811 140623296894720 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1204 08:50:09.559901 140623296894720 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1204 08:50:09.559985 140623296894720 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1204 08:50:09.560059 140623296894720 hlog.py:32] train/00149/eval_val/78/corr False
I1204 08:50:09.560128 140623296894720 hlog.py:32] train/00149/eval_val/78 
I1204 08:50:09.560195 140623296894720 hlog.py:18] train/00149/eval_val/78{0.00s}
I1204 08:50:09.560282 140623296894720 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1204 08:50:09.560371 140623296894720 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( south carolina ) ) ) )
I1204 08:50:09.560455 140623296894720 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1204 08:50:09.560529 140623296894720 hlog.py:32] train/00149/eval_val/79/corr False
I1204 08:50:09.560599 140623296894720 hlog.py:32] train/00149/eval_val/79 
I1204 08:50:09.560666 140623296894720 hlog.py:18] train/00149/eval_val/79{0.00s}
I1204 08:50:09.560752 140623296894720 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1204 08:50:09.560841 140623296894720 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1204 08:50:09.560924 140623296894720 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.560998 140623296894720 hlog.py:32] train/00149/eval_val/80/corr False
I1204 08:50:09.561067 140623296894720 hlog.py:32] train/00149/eval_val/80 
I1204 08:50:09.561135 140623296894720 hlog.py:18] train/00149/eval_val/80{0.00s}
I1204 08:50:09.561221 140623296894720 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1204 08:50:09.561310 140623296894720 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1204 08:50:09.561393 140623296894720 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.561467 140623296894720 hlog.py:32] train/00149/eval_val/81/corr False
I1204 08:50:09.561536 140623296894720 hlog.py:32] train/00149/eval_val/81 
I1204 08:50:09.561603 140623296894720 hlog.py:18] train/00149/eval_val/81{0.00s}
I1204 08:50:09.561686 140623296894720 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1204 08:50:09.561775 140623296894720 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1204 08:50:09.561859 140623296894720 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1204 08:50:09.561933 140623296894720 hlog.py:32] train/00149/eval_val/82/corr False
I1204 08:50:09.562002 140623296894720 hlog.py:32] train/00149/eval_val/82 
I1204 08:50:09.562078 140623296894720 hlog.py:18] train/00149/eval_val/82{0.00s}
I1204 08:50:09.562162 140623296894720 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1204 08:50:09.562251 140623296894720 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , _state ( B ) , _area ( A , B ) ) ) )
I1204 08:50:09.562335 140623296894720 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 08:50:09.562409 140623296894720 hlog.py:32] train/00149/eval_val/83/corr False
I1204 08:50:09.562478 140623296894720 hlog.py:32] train/00149/eval_val/83 
I1204 08:50:09.562546 140623296894720 hlog.py:18] train/00149/eval_val/83{0.00s}
I1204 08:50:09.562632 140623296894720 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1204 08:50:09.562721 140623296894720 hlog.py:32] train/00149/eval_val/84/pred ( A , _smallest ( B , ( _population ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.562805 140623296894720 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:50:09.562879 140623296894720 hlog.py:32] train/00149/eval_val/84/corr False
I1204 08:50:09.562948 140623296894720 hlog.py:32] train/00149/eval_val/84 
I1204 08:50:09.563016 140623296894720 hlog.py:18] train/00149/eval_val/84{0.00s}
I1204 08:50:09.563100 140623296894720 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1204 08:50:09.563197 140623296894720 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _population ( B , A ) , _largest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.563281 140623296894720 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:50:09.563355 140623296894720 hlog.py:32] train/00149/eval_val/85/corr False
I1204 08:50:09.563430 140623296894720 hlog.py:32] train/00149/eval_val/85 
I1204 08:50:09.563499 140623296894720 hlog.py:18] train/00149/eval_val/85{0.00s}
I1204 08:50:09.563585 140623296894720 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1204 08:50:09.563686 140623296894720 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( a , _ ) ) ) ) )
I1204 08:50:09.563776 140623296894720 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1204 08:50:09.563850 140623296894720 hlog.py:32] train/00149/eval_val/86/corr False
I1204 08:50:09.563919 140623296894720 hlog.py:32] train/00149/eval_val/86 
I1204 08:50:09.563987 140623296894720 hlog.py:18] train/00149/eval_val/86{0.00s}
I1204 08:50:09.564071 140623296894720 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1204 08:50:09.564172 140623296894720 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1204 08:50:09.564265 140623296894720 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.564340 140623296894720 hlog.py:32] train/00149/eval_val/87/corr False
I1204 08:50:09.564409 140623296894720 hlog.py:32] train/00149/eval_val/87 
I1204 08:50:09.564477 140623296894720 hlog.py:18] train/00149/eval_val/87{0.00s}
I1204 08:50:09.564565 140623296894720 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1204 08:50:09.564656 140623296894720 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 08:50:09.564742 140623296894720 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 08:50:09.564822 140623296894720 hlog.py:32] train/00149/eval_val/88/corr True
I1204 08:50:09.564892 140623296894720 hlog.py:32] train/00149/eval_val/88 
I1204 08:50:09.564960 140623296894720 hlog.py:18] train/00149/eval_val/88{0.00s}
I1204 08:50:09.565052 140623296894720 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1204 08:50:09.565150 140623296894720 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:50:09.565240 140623296894720 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:50:09.565314 140623296894720 hlog.py:32] train/00149/eval_val/89/corr True
I1204 08:50:09.565383 140623296894720 hlog.py:32] train/00149/eval_val/89 
I1204 08:50:09.565450 140623296894720 hlog.py:18] train/00149/eval_val/89{0.00s}
I1204 08:50:09.565535 140623296894720 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1204 08:50:09.565632 140623296894720 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1204 08:50:09.565724 140623296894720 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1204 08:50:09.565798 140623296894720 hlog.py:32] train/00149/eval_val/90/corr False
I1204 08:50:09.565868 140623296894720 hlog.py:32] train/00149/eval_val/90 
I1204 08:50:09.565935 140623296894720 hlog.py:18] train/00149/eval_val/90{0.00s}
I1204 08:50:09.566025 140623296894720 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1204 08:50:09.566118 140623296894720 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.566205 140623296894720 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.566279 140623296894720 hlog.py:32] train/00149/eval_val/91/corr True
I1204 08:50:09.566349 140623296894720 hlog.py:32] train/00149/eval_val/91 
I1204 08:50:09.566416 140623296894720 hlog.py:18] train/00149/eval_val/91{0.00s}
I1204 08:50:09.566504 140623296894720 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1204 08:50:09.566598 140623296894720 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.566685 140623296894720 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.566759 140623296894720 hlog.py:32] train/00149/eval_val/92/corr True
I1204 08:50:09.566828 140623296894720 hlog.py:32] train/00149/eval_val/92 
I1204 08:50:09.566896 140623296894720 hlog.py:18] train/00149/eval_val/92{0.00s}
I1204 08:50:09.566979 140623296894720 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1204 08:50:09.567067 140623296894720 hlog.py:32] train/00149/eval_val/93/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:50:09.567154 140623296894720 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.567228 140623296894720 hlog.py:32] train/00149/eval_val/93/corr False
I1204 08:50:09.567298 140623296894720 hlog.py:32] train/00149/eval_val/93 
I1204 08:50:09.567365 140623296894720 hlog.py:18] train/00149/eval_val/93{0.00s}
I1204 08:50:09.567457 140623296894720 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1204 08:50:09.567560 140623296894720 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.567649 140623296894720 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.567723 140623296894720 hlog.py:32] train/00149/eval_val/94/corr False
I1204 08:50:09.567792 140623296894720 hlog.py:32] train/00149/eval_val/94 
I1204 08:50:09.567861 140623296894720 hlog.py:18] train/00149/eval_val/94{0.00s}
I1204 08:50:09.567949 140623296894720 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1204 08:50:09.568043 140623296894720 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.568130 140623296894720 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.568204 140623296894720 hlog.py:32] train/00149/eval_val/95/corr True
I1204 08:50:09.568274 140623296894720 hlog.py:32] train/00149/eval_val/95 
I1204 08:50:09.568341 140623296894720 hlog.py:18] train/00149/eval_val/95{0.00s}
I1204 08:50:09.568432 140623296894720 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1204 08:50:09.568529 140623296894720 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 08:50:09.568619 140623296894720 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 08:50:09.568693 140623296894720 hlog.py:32] train/00149/eval_val/96/corr True
I1204 08:50:09.568762 140623296894720 hlog.py:32] train/00149/eval_val/96 
I1204 08:50:09.568830 140623296894720 hlog.py:18] train/00149/eval_val/96{0.00s}
I1204 08:50:09.568925 140623296894720 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1204 08:50:09.569067 140623296894720 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 08:50:09.569212 140623296894720 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 08:50:09.569289 140623296894720 hlog.py:32] train/00149/eval_val/97/corr True
I1204 08:50:09.569359 140623296894720 hlog.py:32] train/00149/eval_val/97 
I1204 08:50:09.569427 140623296894720 hlog.py:18] train/00149/eval_val/97{0.00s}
I1204 08:50:09.569516 140623296894720 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1204 08:50:09.569612 140623296894720 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 08:50:09.569701 140623296894720 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 08:50:09.569775 140623296894720 hlog.py:32] train/00149/eval_val/98/corr True
I1204 08:50:09.569844 140623296894720 hlog.py:32] train/00149/eval_val/98 
I1204 08:50:09.569912 140623296894720 hlog.py:18] train/00149/eval_val/98{0.00s}
I1204 08:50:09.570002 140623296894720 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1204 08:50:09.570097 140623296894720 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:50:09.570191 140623296894720 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:50:09.570265 140623296894720 hlog.py:32] train/00149/eval_val/99/corr True
I1204 08:50:09.570335 140623296894720 hlog.py:32] train/00149/eval_val/99 
I1204 08:50:09.570402 140623296894720 hlog.py:18] train/00149/eval_val/99{0.00s}
I1204 08:50:09.570490 140623296894720 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1204 08:50:09.570586 140623296894720 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1204 08:50:09.570675 140623296894720 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 08:50:09.570750 140623296894720 hlog.py:32] train/00149/eval_val/100/corr False
I1204 08:50:09.570819 140623296894720 hlog.py:32] train/00149/eval_val/100 
I1204 08:50:09.570887 140623296894720 hlog.py:18] train/00149/eval_val/100{0.00s}
I1204 08:50:09.570971 140623296894720 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1204 08:50:09.571069 140623296894720 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.571158 140623296894720 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 08:50:09.571233 140623296894720 hlog.py:32] train/00149/eval_val/101/corr False
I1204 08:50:09.571301 140623296894720 hlog.py:32] train/00149/eval_val/101 
I1204 08:50:09.571369 140623296894720 hlog.py:18] train/00149/eval_val/101{0.00s}
I1204 08:50:09.571463 140623296894720 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1204 08:50:09.571555 140623296894720 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 08:50:09.571641 140623296894720 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 08:50:09.571715 140623296894720 hlog.py:32] train/00149/eval_val/102/corr False
I1204 08:50:09.571784 140623296894720 hlog.py:32] train/00149/eval_val/102 
I1204 08:50:09.571851 140623296894720 hlog.py:18] train/00149/eval_val/102{0.00s}
I1204 08:50:09.571939 140623296894720 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1204 08:50:09.572031 140623296894720 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 08:50:09.572116 140623296894720 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 08:50:09.572190 140623296894720 hlog.py:32] train/00149/eval_val/103/corr True
I1204 08:50:09.572260 140623296894720 hlog.py:32] train/00149/eval_val/103 
I1204 08:50:09.572327 140623296894720 hlog.py:18] train/00149/eval_val/103{0.00s}
I1204 08:50:09.572414 140623296894720 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1204 08:50:09.572505 140623296894720 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.572591 140623296894720 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.572664 140623296894720 hlog.py:32] train/00149/eval_val/104/corr True
I1204 08:50:09.572734 140623296894720 hlog.py:32] train/00149/eval_val/104 
I1204 08:50:09.572802 140623296894720 hlog.py:18] train/00149/eval_val/104{0.00s}
I1204 08:50:09.572895 140623296894720 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1204 08:50:09.572986 140623296894720 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 08:50:09.573072 140623296894720 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 08:50:09.573146 140623296894720 hlog.py:32] train/00149/eval_val/105/corr True
I1204 08:50:09.573215 140623296894720 hlog.py:32] train/00149/eval_val/105 
I1204 08:50:09.573282 140623296894720 hlog.py:18] train/00149/eval_val/105{0.00s}
I1204 08:50:09.573370 140623296894720 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1204 08:50:09.573461 140623296894720 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 08:50:09.573546 140623296894720 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 08:50:09.573620 140623296894720 hlog.py:32] train/00149/eval_val/106/corr True
I1204 08:50:09.573689 140623296894720 hlog.py:32] train/00149/eval_val/106 
I1204 08:50:09.573756 140623296894720 hlog.py:18] train/00149/eval_val/106{0.00s}
I1204 08:50:09.573844 140623296894720 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1204 08:50:09.573935 140623296894720 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.574019 140623296894720 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.574093 140623296894720 hlog.py:32] train/00149/eval_val/107/corr True
I1204 08:50:09.574162 140623296894720 hlog.py:32] train/00149/eval_val/107 
I1204 08:50:09.574229 140623296894720 hlog.py:18] train/00149/eval_val/107{0.00s}
I1204 08:50:09.574316 140623296894720 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1204 08:50:09.574407 140623296894720 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 08:50:09.574492 140623296894720 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 08:50:09.574567 140623296894720 hlog.py:32] train/00149/eval_val/108/corr True
I1204 08:50:09.574635 140623296894720 hlog.py:32] train/00149/eval_val/108 
I1204 08:50:09.574703 140623296894720 hlog.py:18] train/00149/eval_val/108{0.00s}
I1204 08:50:09.574791 140623296894720 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1204 08:50:09.574882 140623296894720 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 08:50:09.574967 140623296894720 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 08:50:09.575041 140623296894720 hlog.py:32] train/00149/eval_val/109/corr True
I1204 08:50:09.575111 140623296894720 hlog.py:32] train/00149/eval_val/109 
I1204 08:50:09.575178 140623296894720 hlog.py:18] train/00149/eval_val/109{0.00s}
I1204 08:50:09.575265 140623296894720 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1204 08:50:09.575356 140623296894720 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.575448 140623296894720 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:50:09.575523 140623296894720 hlog.py:32] train/00149/eval_val/110/corr True
I1204 08:50:09.575593 140623296894720 hlog.py:32] train/00149/eval_val/110 
I1204 08:50:09.575660 140623296894720 hlog.py:18] train/00149/eval_val/110{0.00s}
I1204 08:50:09.575752 140623296894720 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1204 08:50:09.575844 140623296894720 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 08:50:09.575930 140623296894720 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 08:50:09.576004 140623296894720 hlog.py:32] train/00149/eval_val/111/corr True
I1204 08:50:09.576073 140623296894720 hlog.py:32] train/00149/eval_val/111 
I1204 08:50:09.576140 140623296894720 hlog.py:18] train/00149/eval_val/111{0.00s}
I1204 08:50:09.576228 140623296894720 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1204 08:50:09.576318 140623296894720 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:50:09.576404 140623296894720 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:50:09.576478 140623296894720 hlog.py:32] train/00149/eval_val/112/corr True
I1204 08:50:09.576547 140623296894720 hlog.py:32] train/00149/eval_val/112 
I1204 08:50:09.576615 140623296894720 hlog.py:18] train/00149/eval_val/112{0.00s}
I1204 08:50:09.576703 140623296894720 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1204 08:50:09.576794 140623296894720 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:50:09.576880 140623296894720 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:50:09.576954 140623296894720 hlog.py:32] train/00149/eval_val/113/corr True
I1204 08:50:09.577024 140623296894720 hlog.py:32] train/00149/eval_val/113 
I1204 08:50:09.577091 140623296894720 hlog.py:18] train/00149/eval_val/113{0.00s}
I1204 08:50:09.577178 140623296894720 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1204 08:50:09.577269 140623296894720 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.577354 140623296894720 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:50:09.577429 140623296894720 hlog.py:32] train/00149/eval_val/114/corr True
I1204 08:50:09.577498 140623296894720 hlog.py:32] train/00149/eval_val/114 
I1204 08:50:09.577566 140623296894720 hlog.py:18] train/00149/eval_val/114{0.00s}
I1204 08:50:09.577648 140623296894720 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1204 08:50:09.577739 140623296894720 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _riverid ( virginia ) ) ) )
I1204 08:50:09.577825 140623296894720 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1204 08:50:09.577900 140623296894720 hlog.py:32] train/00149/eval_val/115/corr False
I1204 08:50:09.577969 140623296894720 hlog.py:32] train/00149/eval_val/115 
I1204 08:50:09.578037 140623296894720 hlog.py:18] train/00149/eval_val/115{0.00s}
I1204 08:50:09.578124 140623296894720 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1204 08:50:09.578215 140623296894720 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.578300 140623296894720 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:50:09.578374 140623296894720 hlog.py:32] train/00149/eval_val/116/corr True
I1204 08:50:09.578444 140623296894720 hlog.py:32] train/00149/eval_val/116 
I1204 08:50:09.578511 140623296894720 hlog.py:18] train/00149/eval_val/116{0.00s}
I1204 08:50:09.578606 140623296894720 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1204 08:50:09.578700 140623296894720 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.578787 140623296894720 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.578861 140623296894720 hlog.py:32] train/00149/eval_val/117/corr True
I1204 08:50:09.578930 140623296894720 hlog.py:32] train/00149/eval_val/117 
I1204 08:50:09.578998 140623296894720 hlog.py:18] train/00149/eval_val/117{0.00s}
I1204 08:50:09.579086 140623296894720 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1204 08:50:09.579180 140623296894720 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.579267 140623296894720 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.579341 140623296894720 hlog.py:32] train/00149/eval_val/118/corr True
I1204 08:50:09.579418 140623296894720 hlog.py:32] train/00149/eval_val/118 
I1204 08:50:09.579488 140623296894720 hlog.py:18] train/00149/eval_val/118{0.00s}
I1204 08:50:09.579577 140623296894720 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1204 08:50:09.579671 140623296894720 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.579758 140623296894720 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:50:09.579832 140623296894720 hlog.py:32] train/00149/eval_val/119/corr True
I1204 08:50:09.579902 140623296894720 hlog.py:32] train/00149/eval_val/119 
I1204 08:50:09.579969 140623296894720 hlog.py:18] train/00149/eval_val/119{0.00s}
I1204 08:50:09.580055 140623296894720 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1204 08:50:09.580140 140623296894720 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 08:50:09.580221 140623296894720 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 08:50:09.580294 140623296894720 hlog.py:32] train/00149/eval_val/120/corr True
I1204 08:50:09.580363 140623296894720 hlog.py:32] train/00149/eval_val/120 
I1204 08:50:09.580431 140623296894720 hlog.py:18] train/00149/eval_val/120{0.00s}
I1204 08:50:09.580516 140623296894720 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1204 08:50:09.580601 140623296894720 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 08:50:09.580682 140623296894720 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 08:50:09.580756 140623296894720 hlog.py:32] train/00149/eval_val/121/corr True
I1204 08:50:09.580826 140623296894720 hlog.py:32] train/00149/eval_val/121 
I1204 08:50:09.580893 140623296894720 hlog.py:18] train/00149/eval_val/121{0.00s}
I1204 08:50:09.580981 140623296894720 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1204 08:50:09.581075 140623296894720 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 08:50:09.581161 140623296894720 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 08:50:09.581235 140623296894720 hlog.py:32] train/00149/eval_val/122/corr True
I1204 08:50:09.581304 140623296894720 hlog.py:32] train/00149/eval_val/122 
I1204 08:50:09.581372 140623296894720 hlog.py:18] train/00149/eval_val/122{0.00s}
I1204 08:50:09.581465 140623296894720 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1204 08:50:09.581559 140623296894720 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 08:50:09.581646 140623296894720 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 08:50:09.581720 140623296894720 hlog.py:32] train/00149/eval_val/123/corr True
I1204 08:50:09.581789 140623296894720 hlog.py:32] train/00149/eval_val/123 
I1204 08:50:09.581857 140623296894720 hlog.py:18] train/00149/eval_val/123{0.00s}
I1204 08:50:09.581946 140623296894720 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1204 08:50:09.582039 140623296894720 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 08:50:09.582126 140623296894720 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 08:50:09.582200 140623296894720 hlog.py:32] train/00149/eval_val/124/corr True
I1204 08:50:09.582269 140623296894720 hlog.py:32] train/00149/eval_val/124 
I1204 08:50:09.582337 140623296894720 hlog.py:18] train/00149/eval_val/124{0.00s}
I1204 08:50:09.582425 140623296894720 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1204 08:50:09.582519 140623296894720 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 08:50:09.582606 140623296894720 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 08:50:09.582681 140623296894720 hlog.py:32] train/00149/eval_val/125/corr True
I1204 08:50:09.582750 140623296894720 hlog.py:32] train/00149/eval_val/125 
I1204 08:50:09.582817 140623296894720 hlog.py:18] train/00149/eval_val/125{0.00s}
I1204 08:50:09.582905 140623296894720 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1204 08:50:09.582994 140623296894720 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.583078 140623296894720 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.583152 140623296894720 hlog.py:32] train/00149/eval_val/126/corr True
I1204 08:50:09.583221 140623296894720 hlog.py:32] train/00149/eval_val/126 
I1204 08:50:09.583288 140623296894720 hlog.py:18] train/00149/eval_val/126{0.00s}
I1204 08:50:09.583376 140623296894720 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1204 08:50:09.583473 140623296894720 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.583557 140623296894720 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.583631 140623296894720 hlog.py:32] train/00149/eval_val/127/corr True
I1204 08:50:09.583700 140623296894720 hlog.py:32] train/00149/eval_val/127 
I1204 08:50:09.583768 140623296894720 hlog.py:18] train/00149/eval_val/127{0.00s}
I1204 08:50:09.701212 140623296894720 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1204 08:50:09.701336 140623296894720 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.701431 140623296894720 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.701513 140623296894720 hlog.py:32] train/00149/eval_val/128/corr True
I1204 08:50:09.701586 140623296894720 hlog.py:32] train/00149/eval_val/128 
I1204 08:50:09.701658 140623296894720 hlog.py:18] train/00149/eval_val/128{0.00s}
I1204 08:50:09.701757 140623296894720 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1204 08:50:09.701850 140623296894720 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.701936 140623296894720 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.702011 140623296894720 hlog.py:32] train/00149/eval_val/129/corr True
I1204 08:50:09.702081 140623296894720 hlog.py:32] train/00149/eval_val/129 
I1204 08:50:09.702150 140623296894720 hlog.py:18] train/00149/eval_val/129{0.00s}
I1204 08:50:09.702234 140623296894720 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1204 08:50:09.702326 140623296894720 hlog.py:32] train/00149/eval_val/130/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , _place ( B ) ) ) )
I1204 08:50:09.702410 140623296894720 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.702486 140623296894720 hlog.py:32] train/00149/eval_val/130/corr False
I1204 08:50:09.702555 140623296894720 hlog.py:32] train/00149/eval_val/130 
I1204 08:50:09.702623 140623296894720 hlog.py:18] train/00149/eval_val/130{0.00s}
I1204 08:50:09.702711 140623296894720 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1204 08:50:09.702801 140623296894720 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.702885 140623296894720 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.702960 140623296894720 hlog.py:32] train/00149/eval_val/131/corr True
I1204 08:50:09.703029 140623296894720 hlog.py:32] train/00149/eval_val/131 
I1204 08:50:09.703097 140623296894720 hlog.py:18] train/00149/eval_val/131{0.00s}
I1204 08:50:09.703180 140623296894720 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1204 08:50:09.703272 140623296894720 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1204 08:50:09.703356 140623296894720 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:50:09.703453 140623296894720 hlog.py:32] train/00149/eval_val/132/corr False
I1204 08:50:09.703526 140623296894720 hlog.py:32] train/00149/eval_val/132 
I1204 08:50:09.703596 140623296894720 hlog.py:18] train/00149/eval_val/132{0.00s}
I1204 08:50:09.703696 140623296894720 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1204 08:50:09.703794 140623296894720 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _elevation ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.703879 140623296894720 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1204 08:50:09.703953 140623296894720 hlog.py:32] train/00149/eval_val/133/corr False
I1204 08:50:09.704022 140623296894720 hlog.py:32] train/00149/eval_val/133 
I1204 08:50:09.704090 140623296894720 hlog.py:18] train/00149/eval_val/133{0.00s}
I1204 08:50:09.704174 140623296894720 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1204 08:50:09.704270 140623296894720 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , _state ( C ) ) ) ) )
I1204 08:50:09.704360 140623296894720 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:50:09.704434 140623296894720 hlog.py:32] train/00149/eval_val/134/corr False
I1204 08:50:09.704504 140623296894720 hlog.py:32] train/00149/eval_val/134 
I1204 08:50:09.704572 140623296894720 hlog.py:18] train/00149/eval_val/134{0.00s}
I1204 08:50:09.704669 140623296894720 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1204 08:50:09.704768 140623296894720 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:50:09.704859 140623296894720 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:50:09.704934 140623296894720 hlog.py:32] train/00149/eval_val/135/corr True
I1204 08:50:09.705003 140623296894720 hlog.py:32] train/00149/eval_val/135 
I1204 08:50:09.705071 140623296894720 hlog.py:18] train/00149/eval_val/135{0.00s}
I1204 08:50:09.705154 140623296894720 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1204 08:50:09.705244 140623296894720 hlog.py:32] train/00149/eval_val/136/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.705330 140623296894720 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.705404 140623296894720 hlog.py:32] train/00149/eval_val/136/corr False
I1204 08:50:09.705474 140623296894720 hlog.py:32] train/00149/eval_val/136 
I1204 08:50:09.705542 140623296894720 hlog.py:18] train/00149/eval_val/136{0.00s}
I1204 08:50:09.705630 140623296894720 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1204 08:50:09.705722 140623296894720 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.705808 140623296894720 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.705882 140623296894720 hlog.py:32] train/00149/eval_val/137/corr True
I1204 08:50:09.705951 140623296894720 hlog.py:32] train/00149/eval_val/137 
I1204 08:50:09.706019 140623296894720 hlog.py:18] train/00149/eval_val/137{0.00s}
I1204 08:50:09.706104 140623296894720 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1204 08:50:09.706196 140623296894720 hlog.py:32] train/00149/eval_val/138/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.706282 140623296894720 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.706357 140623296894720 hlog.py:32] train/00149/eval_val/138/corr False
I1204 08:50:09.706426 140623296894720 hlog.py:32] train/00149/eval_val/138 
I1204 08:50:09.706493 140623296894720 hlog.py:18] train/00149/eval_val/138{0.00s}
I1204 08:50:09.706582 140623296894720 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1204 08:50:09.706674 140623296894720 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.706760 140623296894720 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:50:09.706834 140623296894720 hlog.py:32] train/00149/eval_val/139/corr True
I1204 08:50:09.706903 140623296894720 hlog.py:32] train/00149/eval_val/139 
I1204 08:50:09.706971 140623296894720 hlog.py:18] train/00149/eval_val/139{0.00s}
I1204 08:50:09.707062 140623296894720 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1204 08:50:09.707160 140623296894720 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:50:09.707250 140623296894720 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:50:09.707324 140623296894720 hlog.py:32] train/00149/eval_val/140/corr True
I1204 08:50:09.707419 140623296894720 hlog.py:32] train/00149/eval_val/140 
I1204 08:50:09.707493 140623296894720 hlog.py:18] train/00149/eval_val/140{0.00s}
I1204 08:50:09.707587 140623296894720 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1204 08:50:09.707700 140623296894720 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:50:09.707790 140623296894720 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:50:09.707864 140623296894720 hlog.py:32] train/00149/eval_val/141/corr True
I1204 08:50:09.707933 140623296894720 hlog.py:32] train/00149/eval_val/141 
I1204 08:50:09.708001 140623296894720 hlog.py:18] train/00149/eval_val/141{0.00s}
I1204 08:50:09.708083 140623296894720 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1204 08:50:09.708174 140623296894720 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 08:50:09.708259 140623296894720 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 08:50:09.708333 140623296894720 hlog.py:32] train/00149/eval_val/142/corr False
I1204 08:50:09.708402 140623296894720 hlog.py:32] train/00149/eval_val/142 
I1204 08:50:09.708470 140623296894720 hlog.py:18] train/00149/eval_val/142{0.00s}
I1204 08:50:09.708552 140623296894720 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1204 08:50:09.708643 140623296894720 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 08:50:09.708727 140623296894720 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 08:50:09.708801 140623296894720 hlog.py:32] train/00149/eval_val/143/corr False
I1204 08:50:09.708871 140623296894720 hlog.py:32] train/00149/eval_val/143 
I1204 08:50:09.708939 140623296894720 hlog.py:18] train/00149/eval_val/143{0.00s}
I1204 08:50:09.709021 140623296894720 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1204 08:50:09.709106 140623296894720 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1204 08:50:09.709190 140623296894720 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1204 08:50:09.709264 140623296894720 hlog.py:32] train/00149/eval_val/144/corr False
I1204 08:50:09.709334 140623296894720 hlog.py:32] train/00149/eval_val/144 
I1204 08:50:09.709401 140623296894720 hlog.py:18] train/00149/eval_val/144{0.00s}
I1204 08:50:09.709484 140623296894720 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1204 08:50:09.709575 140623296894720 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _major ( B ) , _city ( B ) ) )
I1204 08:50:09.709659 140623296894720 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1204 08:50:09.709733 140623296894720 hlog.py:32] train/00149/eval_val/145/corr False
I1204 08:50:09.709803 140623296894720 hlog.py:32] train/00149/eval_val/145 
I1204 08:50:09.709870 140623296894720 hlog.py:18] train/00149/eval_val/145{0.00s}
I1204 08:50:09.709956 140623296894720 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1204 08:50:09.710054 140623296894720 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:50:09.710147 140623296894720 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1204 08:50:09.710228 140623296894720 hlog.py:32] train/00149/eval_val/146/corr False
I1204 08:50:09.710298 140623296894720 hlog.py:32] train/00149/eval_val/146 
I1204 08:50:09.710366 140623296894720 hlog.py:18] train/00149/eval_val/146{0.00s}
I1204 08:50:09.710455 140623296894720 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1204 08:50:09.710549 140623296894720 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 08:50:09.710636 140623296894720 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 08:50:09.710711 140623296894720 hlog.py:32] train/00149/eval_val/147/corr True
I1204 08:50:09.710780 140623296894720 hlog.py:32] train/00149/eval_val/147 
I1204 08:50:09.710848 140623296894720 hlog.py:18] train/00149/eval_val/147{0.00s}
I1204 08:50:09.710923 140623296894720 hlog.py:32] train/00149/eval_val/acc 0.5608
I1204 08:50:09.740093 140623296894720 hlog.py:18] train/00149{16.36s}
I1204 08:50:09.742175 140623296894720 hlog.py:18] train{2513.41s}
