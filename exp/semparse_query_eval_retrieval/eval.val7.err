I1204 09:33:00.682371 140166617011968 hlog.py:24] # --noTEST
I1204 09:33:00.682752 140166617011968 hlog.py:24] # --seed=7
I1204 09:33:00.682836 140166617011968 hlog.py:24] # --dataset=semparse
I1204 09:33:00.682912 140166617011968 hlog.py:24] # --model_dir=model
I1204 09:33:00.682985 140166617011968 hlog.py:24] # --n_checkpoint=10
I1204 09:33:00.683057 140166617011968 hlog.py:24] # --nologtostderr
I1204 09:33:00.683129 140166617011968 hlog.py:24] # --noalsologtostderr
I1204 09:33:00.683200 140166617011968 hlog.py:24] # --log_dir=
I1204 09:33:00.683272 140166617011968 hlog.py:24] # --verbosity=0
I1204 09:33:00.683343 140166617011968 hlog.py:24] # --verbosity=0
I1204 09:33:00.683422 140166617011968 hlog.py:24] # --stderrthreshold=fatal
I1204 09:33:00.683495 140166617011968 hlog.py:24] # --showprefixforinfo
I1204 09:33:00.683567 140166617011968 hlog.py:24] # --nodedup
I1204 09:33:00.683638 140166617011968 hlog.py:24] # --nobuild_comp_table
I1204 09:33:00.683708 140166617011968 hlog.py:24] # --semparse_split=query
I1204 09:33:00.683779 140166617011968 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1204 09:33:00.683850 140166617011968 hlog.py:24] # --semparse_mrl=logic
I1204 09:33:00.683920 140166617011968 hlog.py:24] # --val_fold=8
I1204 09:33:00.683991 140166617011968 hlog.py:24] # --test_fold=9
I1204 09:33:00.684062 140166617011968 hlog.py:24] # --n_emb=64
I1204 09:33:00.684132 140166617011968 hlog.py:24] # --n_enc=512
I1204 09:33:00.684203 140166617011968 hlog.py:24] # --dropout=0.5
I1204 09:33:00.684273 140166617011968 hlog.py:24] # --copy_sup
I1204 09:33:00.684343 140166617011968 hlog.py:24] # --n_epochs=150
I1204 09:33:00.684413 140166617011968 hlog.py:24] # --n_epoch_batches=32
I1204 09:33:00.684484 140166617011968 hlog.py:24] # --n_batch=64
I1204 09:33:00.684554 140166617011968 hlog.py:24] # --lr=0.001
I1204 09:33:00.684625 140166617011968 hlog.py:24] # --clip=1.0
I1204 09:33:00.684695 140166617011968 hlog.py:24] # --sched_factor=0.5
I1204 09:33:00.684765 140166617011968 hlog.py:24] # --norun_with_pdb
I1204 09:33:00.684835 140166617011968 hlog.py:24] # --nopdb_post_mortem
I1204 09:33:00.684906 140166617011968 hlog.py:24] # --norun_with_profiling
I1204 09:33:00.684976 140166617011968 hlog.py:24] # --use_cprofile_for_profiling
I1204 09:33:00.685047 140166617011968 hlog.py:24] # --noonly_check_args
I1204 09:33:00.685117 140166617011968 hlog.py:24] # --augment=composed.val7.json
I1204 09:33:00.685188 140166617011968 hlog.py:24] # --aug_ratio=0.3
I1204 09:33:00.685258 140166617011968 hlog.py:24] # --noinvert
I1204 09:33:00.685328 140166617011968 hlog.py:24] # --nohelp
I1204 09:33:00.685399 140166617011968 hlog.py:24] # --nohelp
I1204 09:33:00.685469 140166617011968 hlog.py:24] # --nohelpshort
I1204 09:33:00.685539 140166617011968 hlog.py:24] # --nohelpfull
I1204 09:33:00.685610 140166617011968 hlog.py:24] # --nohelpxml
I1204 09:33:00.685680 140166617011968 hlog.py:24] # 
I1204 09:33:00.725441 140166617011968 hlog.py:32] train 543
I1204 09:33:00.725619 140166617011968 hlog.py:32] aug 1000
I1204 09:33:16.970385 140166617011968 hlog.py:32] train/00000/loss 3.1463
I1204 09:33:28.526472 140166617011968 hlog.py:32] train/00000/eval_train/acc 0.0000
I1204 09:33:30.393997 140166617011968 hlog.py:32] train/00000/eval_val/acc 0.0000
I1204 09:33:30.394646 140166617011968 hlog.py:18] train/00000{25.83s}
I1204 09:33:42.234897 140166617011968 hlog.py:32] train/00001/loss 1.0583
I1204 09:33:44.904126 140166617011968 hlog.py:32] train/00001/eval_train/acc 0.0000
I1204 09:33:45.388177 140166617011968 hlog.py:32] train/00001/eval_val/acc 0.0000
I1204 09:33:45.388702 140166617011968 hlog.py:18] train/00001{14.99s}
I1204 09:33:57.860233 140166617011968 hlog.py:32] train/00002/loss 0.7172
I1204 09:34:00.893153 140166617011968 hlog.py:32] train/00002/eval_train/acc 0.0000
I1204 09:34:01.433873 140166617011968 hlog.py:32] train/00002/eval_val/acc 0.0000
I1204 09:34:01.434350 140166617011968 hlog.py:18] train/00002{16.05s}
I1204 09:34:13.977902 140166617011968 hlog.py:32] train/00003/loss 0.5722
I1204 09:34:17.773873 140166617011968 hlog.py:32] train/00003/eval_train/acc 0.0690
I1204 09:34:18.318361 140166617011968 hlog.py:32] train/00003/eval_val/acc 0.0000
I1204 09:34:18.319096 140166617011968 hlog.py:18] train/00003{16.88s}
I1204 09:34:30.087792 140166617011968 hlog.py:32] train/00004/loss 0.4565
I1204 09:34:34.171876 140166617011968 hlog.py:32] train/00004/eval_train/acc 0.1070
I1204 09:34:35.026874 140166617011968 hlog.py:32] train/00004/eval_val/acc 0.0000
I1204 09:34:35.027355 140166617011968 hlog.py:18] train/00004{16.71s}
I1204 09:34:47.990064 140166617011968 hlog.py:32] train/00005/loss 0.3909
I1204 09:34:54.443853 140166617011968 hlog.py:32] train/00005/eval_train/acc 0.1470
I1204 09:34:55.333940 140166617011968 hlog.py:32] train/00005/eval_val/acc 0.0000
I1204 09:34:55.334380 140166617011968 hlog.py:18] train/00005{20.31s}
I1204 09:35:07.708530 140166617011968 hlog.py:32] train/00006/loss 0.3245
I1204 09:35:11.501551 140166617011968 hlog.py:32] train/00006/eval_train/acc 0.1980
I1204 09:35:12.114089 140166617011968 hlog.py:32] train/00006/eval_val/acc 0.0068
I1204 09:35:12.114590 140166617011968 hlog.py:18] train/00006{16.78s}
I1204 09:35:23.966886 140166617011968 hlog.py:32] train/00007/loss 0.2861
I1204 09:35:28.792168 140166617011968 hlog.py:32] train/00007/eval_train/acc 0.2920
I1204 09:35:29.475585 140166617011968 hlog.py:32] train/00007/eval_val/acc 0.0000
I1204 09:35:29.476070 140166617011968 hlog.py:18] train/00007{17.36s}
I1204 09:35:42.101388 140166617011968 hlog.py:32] train/00008/loss 0.2433
I1204 09:35:45.974363 140166617011968 hlog.py:32] train/00008/eval_train/acc 0.3470
I1204 09:35:46.565966 140166617011968 hlog.py:32] train/00008/eval_val/acc 0.0270
I1204 09:35:46.566402 140166617011968 hlog.py:18] train/00008{17.09s}
I1204 09:35:58.304019 140166617011968 hlog.py:32] train/00009/loss 0.2177
I1204 09:36:02.263080 140166617011968 hlog.py:32] train/00009/eval_train/acc 0.4190
I1204 09:36:02.960314 140166617011968 hlog.py:32] train/00009/eval_val/acc 0.0203
I1204 09:36:03.072285 140166617011968 hlog.py:18] train/00009{16.51s}
I1204 09:36:14.889710 140166617011968 hlog.py:32] train/00010/loss 0.1942
I1204 09:36:18.452123 140166617011968 hlog.py:32] train/00010/eval_train/acc 0.4540
I1204 09:36:19.001519 140166617011968 hlog.py:32] train/00010/eval_val/acc 0.0405
I1204 09:36:19.002171 140166617011968 hlog.py:18] train/00010{15.93s}
I1204 09:36:31.053742 140166617011968 hlog.py:32] train/00011/loss 0.1731
I1204 09:36:34.999977 140166617011968 hlog.py:32] train/00011/eval_train/acc 0.5090
I1204 09:36:35.601456 140166617011968 hlog.py:32] train/00011/eval_val/acc 0.0541
I1204 09:36:35.601927 140166617011968 hlog.py:18] train/00011{16.60s}
I1204 09:36:47.188807 140166617011968 hlog.py:32] train/00012/loss 0.1632
I1204 09:36:51.004830 140166617011968 hlog.py:32] train/00012/eval_train/acc 0.5260
I1204 09:36:51.595293 140166617011968 hlog.py:32] train/00012/eval_val/acc 0.0811
I1204 09:36:51.595798 140166617011968 hlog.py:18] train/00012{15.99s}
I1204 09:37:03.460833 140166617011968 hlog.py:32] train/00013/loss 0.1773
I1204 09:37:07.154363 140166617011968 hlog.py:32] train/00013/eval_train/acc 0.5110
I1204 09:37:07.715130 140166617011968 hlog.py:32] train/00013/eval_val/acc 0.1149
I1204 09:37:07.715844 140166617011968 hlog.py:18] train/00013{16.12s}
I1204 09:37:19.871026 140166617011968 hlog.py:32] train/00014/loss 0.1557
I1204 09:37:23.922698 140166617011968 hlog.py:32] train/00014/eval_train/acc 0.5290
I1204 09:37:24.487152 140166617011968 hlog.py:32] train/00014/eval_val/acc 0.1554
I1204 09:37:24.487669 140166617011968 hlog.py:18] train/00014{16.77s}
I1204 09:37:36.509402 140166617011968 hlog.py:32] train/00015/loss 0.1311
I1204 09:37:40.109835 140166617011968 hlog.py:32] train/00015/eval_train/acc 0.6180
I1204 09:37:40.658378 140166617011968 hlog.py:32] train/00015/eval_val/acc 0.0946
I1204 09:37:40.658863 140166617011968 hlog.py:18] train/00015{16.17s}
I1204 09:37:52.903352 140166617011968 hlog.py:32] train/00016/loss 0.1208
I1204 09:37:56.648406 140166617011968 hlog.py:32] train/00016/eval_train/acc 0.6070
I1204 09:37:57.173992 140166617011968 hlog.py:32] train/00016/eval_val/acc 0.1014
I1204 09:37:57.174509 140166617011968 hlog.py:18] train/00016{16.52s}
I1204 09:38:10.212973 140166617011968 hlog.py:32] train/00017/loss 0.1107
I1204 09:38:14.030834 140166617011968 hlog.py:32] train/00017/eval_train/acc 0.6800
I1204 09:38:14.576063 140166617011968 hlog.py:32] train/00017/eval_val/acc 0.1689
I1204 09:38:14.576550 140166617011968 hlog.py:18] train/00017{17.40s}
I1204 09:38:26.577619 140166617011968 hlog.py:32] train/00018/loss 0.1170
I1204 09:38:30.499181 140166617011968 hlog.py:32] train/00018/eval_train/acc 0.6550
I1204 09:38:31.090455 140166617011968 hlog.py:32] train/00018/eval_val/acc 0.2095
I1204 09:38:31.091023 140166617011968 hlog.py:18] train/00018{16.51s}
I1204 09:38:42.545710 140166617011968 hlog.py:32] train/00019/loss 0.0906
I1204 09:38:47.115566 140166617011968 hlog.py:32] train/00019/eval_train/acc 0.7130
I1204 09:38:47.709558 140166617011968 hlog.py:32] train/00019/eval_val/acc 0.2095
I1204 09:38:47.739330 140166617011968 hlog.py:18] train/00019{16.65s}
I1204 09:38:59.845821 140166617011968 hlog.py:32] train/00020/loss 0.0872
I1204 09:39:03.653047 140166617011968 hlog.py:32] train/00020/eval_train/acc 0.7360
I1204 09:39:04.216685 140166617011968 hlog.py:32] train/00020/eval_val/acc 0.1689
I1204 09:39:04.217240 140166617011968 hlog.py:18] train/00020{16.48s}
I1204 09:39:15.664617 140166617011968 hlog.py:32] train/00021/loss 0.0711
I1204 09:39:19.599495 140166617011968 hlog.py:32] train/00021/eval_train/acc 0.7490
I1204 09:39:20.230497 140166617011968 hlog.py:32] train/00021/eval_val/acc 0.2365
I1204 09:39:20.230980 140166617011968 hlog.py:18] train/00021{16.01s}
I1204 09:39:33.301200 140166617011968 hlog.py:32] train/00022/loss 0.0654
I1204 09:39:37.548258 140166617011968 hlog.py:32] train/00022/eval_train/acc 0.8080
I1204 09:39:38.140928 140166617011968 hlog.py:32] train/00022/eval_val/acc 0.1554
I1204 09:39:38.141429 140166617011968 hlog.py:18] train/00022{17.91s}
I1204 09:39:50.094078 140166617011968 hlog.py:32] train/00023/loss 0.0880
I1204 09:39:53.943660 140166617011968 hlog.py:32] train/00023/eval_train/acc 0.7620
I1204 09:39:54.497329 140166617011968 hlog.py:32] train/00023/eval_val/acc 0.2432
I1204 09:39:54.497840 140166617011968 hlog.py:18] train/00023{16.36s}
I1204 09:40:06.399628 140166617011968 hlog.py:32] train/00024/loss 0.0650
I1204 09:40:10.380389 140166617011968 hlog.py:32] train/00024/eval_train/acc 0.8060
I1204 09:40:10.971011 140166617011968 hlog.py:32] train/00024/eval_val/acc 0.1486
I1204 09:40:10.971542 140166617011968 hlog.py:18] train/00024{16.47s}
I1204 09:40:23.419626 140166617011968 hlog.py:32] train/00025/loss 0.0923
I1204 09:40:27.001355 140166617011968 hlog.py:32] train/00025/eval_train/acc 0.7630
I1204 09:40:27.571870 140166617011968 hlog.py:32] train/00025/eval_val/acc 0.2027
I1204 09:40:27.572425 140166617011968 hlog.py:18] train/00025{16.60s}
I1204 09:40:40.429935 140166617011968 hlog.py:32] train/00026/loss 0.1011
I1204 09:40:44.704937 140166617011968 hlog.py:32] train/00026/eval_train/acc 0.7420
I1204 09:40:45.338348 140166617011968 hlog.py:32] train/00026/eval_val/acc 0.1959
I1204 09:40:45.338828 140166617011968 hlog.py:18] train/00026{17.77s}
I1204 09:40:57.284717 140166617011968 hlog.py:32] train/00027/loss 0.0805
I1204 09:41:01.139864 140166617011968 hlog.py:32] train/00027/eval_train/acc 0.8300
I1204 09:41:01.709803 140166617011968 hlog.py:32] train/00027/eval_val/acc 0.2095
I1204 09:41:01.710287 140166617011968 hlog.py:18] train/00027{16.37s}
I1204 09:41:13.132717 140166617011968 hlog.py:32] train/00028/loss 0.0554
I1204 09:41:16.836465 140166617011968 hlog.py:32] train/00028/eval_train/acc 0.8580
I1204 09:41:17.421895 140166617011968 hlog.py:32] train/00028/eval_val/acc 0.2635
I1204 09:41:17.422390 140166617011968 hlog.py:18] train/00028{15.71s}
I1204 09:41:29.497915 140166617011968 hlog.py:32] train/00029/loss 0.0508
I1204 09:41:33.265193 140166617011968 hlog.py:32] train/00029/eval_train/acc 0.8650
I1204 09:41:33.852267 140166617011968 hlog.py:32] train/00029/eval_val/acc 0.2973
I1204 09:41:33.885008 140166617011968 hlog.py:18] train/00029{16.46s}
I1204 09:41:46.580912 140166617011968 hlog.py:32] train/00030/loss 0.0503
I1204 09:41:50.487439 140166617011968 hlog.py:32] train/00030/eval_train/acc 0.8730
I1204 09:41:51.055510 140166617011968 hlog.py:32] train/00030/eval_val/acc 0.2230
I1204 09:41:51.056081 140166617011968 hlog.py:18] train/00030{17.17s}
I1204 09:42:03.434980 140166617011968 hlog.py:32] train/00031/loss 0.0575
I1204 09:42:07.501100 140166617011968 hlog.py:32] train/00031/eval_train/acc 0.8560
I1204 09:42:08.086875 140166617011968 hlog.py:32] train/00031/eval_val/acc 0.3311
I1204 09:42:08.087679 140166617011968 hlog.py:18] train/00031{17.03s}
I1204 09:42:20.012532 140166617011968 hlog.py:32] train/00032/loss 0.0465
I1204 09:42:24.107676 140166617011968 hlog.py:32] train/00032/eval_train/acc 0.8940
I1204 09:42:24.691286 140166617011968 hlog.py:32] train/00032/eval_val/acc 0.3311
I1204 09:42:24.691811 140166617011968 hlog.py:18] train/00032{16.60s}
I1204 09:42:37.106323 140166617011968 hlog.py:32] train/00033/loss 0.0451
I1204 09:42:40.980778 140166617011968 hlog.py:32] train/00033/eval_train/acc 0.8780
I1204 09:42:41.538180 140166617011968 hlog.py:32] train/00033/eval_val/acc 0.2703
I1204 09:42:41.538657 140166617011968 hlog.py:18] train/00033{16.85s}
I1204 09:42:53.555532 140166617011968 hlog.py:32] train/00034/loss 0.0371
I1204 09:42:57.670228 140166617011968 hlog.py:32] train/00034/eval_train/acc 0.9010
I1204 09:42:58.260288 140166617011968 hlog.py:32] train/00034/eval_val/acc 0.2973
I1204 09:42:58.260941 140166617011968 hlog.py:18] train/00034{16.72s}
I1204 09:43:10.451362 140166617011968 hlog.py:32] train/00035/loss 0.0347
I1204 09:43:14.311403 140166617011968 hlog.py:32] train/00035/eval_train/acc 0.9200
I1204 09:43:14.890555 140166617011968 hlog.py:32] train/00035/eval_val/acc 0.2635
I1204 09:43:14.891026 140166617011968 hlog.py:18] train/00035{16.63s}
I1204 09:43:27.173968 140166617011968 hlog.py:32] train/00036/loss 0.0318
I1204 09:43:31.146225 140166617011968 hlog.py:32] train/00036/eval_train/acc 0.9330
I1204 09:43:31.750316 140166617011968 hlog.py:32] train/00036/eval_val/acc 0.3176
I1204 09:43:31.750844 140166617011968 hlog.py:18] train/00036{16.86s}
I1204 09:43:43.414731 140166617011968 hlog.py:32] train/00037/loss 0.0352
I1204 09:43:47.361708 140166617011968 hlog.py:32] train/00037/eval_train/acc 0.8920
I1204 09:43:47.943599 140166617011968 hlog.py:32] train/00037/eval_val/acc 0.3446
I1204 09:43:47.944081 140166617011968 hlog.py:18] train/00037{16.19s}
I1204 09:44:00.869563 140166617011968 hlog.py:32] train/00038/loss 0.0362
I1204 09:44:05.069126 140166617011968 hlog.py:32] train/00038/eval_train/acc 0.9170
I1204 09:44:05.644513 140166617011968 hlog.py:32] train/00038/eval_val/acc 0.2635
I1204 09:44:05.644990 140166617011968 hlog.py:18] train/00038{17.70s}
I1204 09:44:18.204963 140166617011968 hlog.py:32] train/00039/loss 0.0286
I1204 09:44:22.026210 140166617011968 hlog.py:32] train/00039/eval_train/acc 0.9350
I1204 09:44:22.601167 140166617011968 hlog.py:32] train/00039/eval_val/acc 0.2365
I1204 09:44:22.630699 140166617011968 hlog.py:18] train/00039{16.99s}
I1204 09:44:34.649222 140166617011968 hlog.py:32] train/00040/loss 0.0305
I1204 09:44:38.545924 140166617011968 hlog.py:32] train/00040/eval_train/acc 0.9070
I1204 09:44:39.137222 140166617011968 hlog.py:32] train/00040/eval_val/acc 0.2905
I1204 09:44:39.137727 140166617011968 hlog.py:18] train/00040{16.51s}
I1204 09:44:51.724207 140166617011968 hlog.py:32] train/00041/loss 0.0287
I1204 09:44:55.395012 140166617011968 hlog.py:32] train/00041/eval_train/acc 0.9540
I1204 09:44:56.014349 140166617011968 hlog.py:32] train/00041/eval_val/acc 0.3378
I1204 09:44:56.014824 140166617011968 hlog.py:18] train/00041{16.88s}
I1204 09:45:08.219740 140166617011968 hlog.py:32] train/00042/loss 0.0244
I1204 09:45:12.230666 140166617011968 hlog.py:32] train/00042/eval_train/acc 0.9510
I1204 09:45:12.808999 140166617011968 hlog.py:32] train/00042/eval_val/acc 0.2635
I1204 09:45:12.809529 140166617011968 hlog.py:18] train/00042{16.79s}
I1204 09:45:25.860193 140166617011968 hlog.py:32] train/00043/loss 0.0224
I1204 09:45:29.585277 140166617011968 hlog.py:32] train/00043/eval_train/acc 0.9840
I1204 09:45:30.159254 140166617011968 hlog.py:32] train/00043/eval_val/acc 0.2905
I1204 09:45:30.159786 140166617011968 hlog.py:18] train/00043{17.35s}
I1204 09:45:43.037882 140166617011968 hlog.py:32] train/00044/loss 0.0278
I1204 09:45:46.894164 140166617011968 hlog.py:32] train/00044/eval_train/acc 0.9600
I1204 09:45:47.472076 140166617011968 hlog.py:32] train/00044/eval_val/acc 0.3108
I1204 09:45:47.472563 140166617011968 hlog.py:18] train/00044{17.31s}
I1204 09:45:59.696967 140166617011968 hlog.py:32] train/00045/loss 0.0241
I1204 09:46:03.724653 140166617011968 hlog.py:32] train/00045/eval_train/acc 0.9580
I1204 09:46:04.313359 140166617011968 hlog.py:32] train/00045/eval_val/acc 0.2973
I1204 09:46:04.313830 140166617011968 hlog.py:18] train/00045{16.84s}
I1204 09:46:17.171127 140166617011968 hlog.py:32] train/00046/loss 0.0198
I1204 09:46:20.847938 140166617011968 hlog.py:32] train/00046/eval_train/acc 0.9740
I1204 09:46:21.418772 140166617011968 hlog.py:32] train/00046/eval_val/acc 0.3176
I1204 09:46:21.419267 140166617011968 hlog.py:18] train/00046{17.11s}
I1204 09:46:33.559428 140166617011968 hlog.py:32] train/00047/loss 0.0168
I1204 09:46:37.544491 140166617011968 hlog.py:32] train/00047/eval_train/acc 0.9720
I1204 09:46:38.183880 140166617011968 hlog.py:32] train/00047/eval_val/acc 0.3108
I1204 09:46:38.184321 140166617011968 hlog.py:18] train/00047{16.76s}
I1204 09:46:50.089561 140166617011968 hlog.py:32] train/00048/loss 0.0175
I1204 09:46:53.863375 140166617011968 hlog.py:32] train/00048/eval_train/acc 0.9600
I1204 09:46:54.445830 140166617011968 hlog.py:32] train/00048/eval_val/acc 0.2770
I1204 09:46:54.446662 140166617011968 hlog.py:18] train/00048{16.26s}
I1204 09:47:07.032577 140166617011968 hlog.py:32] train/00049/loss 0.0200
I1204 09:47:11.381922 140166617011968 hlog.py:32] train/00049/eval_train/acc 0.9670
I1204 09:47:11.985953 140166617011968 hlog.py:32] train/00049/eval_val/acc 0.2703
I1204 09:47:12.016367 140166617011968 hlog.py:18] train/00049{17.57s}
I1204 09:47:24.517125 140166617011968 hlog.py:32] train/00050/loss 0.0150
I1204 09:47:28.297426 140166617011968 hlog.py:32] train/00050/eval_train/acc 0.9870
I1204 09:47:28.863785 140166617011968 hlog.py:32] train/00050/eval_val/acc 0.2905
I1204 09:47:28.864291 140166617011968 hlog.py:18] train/00050{16.85s}
I1204 09:47:41.483795 140166617011968 hlog.py:32] train/00051/loss 0.0126
I1204 09:47:45.321087 140166617011968 hlog.py:32] train/00051/eval_train/acc 0.9910
I1204 09:47:45.922511 140166617011968 hlog.py:32] train/00051/eval_val/acc 0.2973
I1204 09:47:45.923015 140166617011968 hlog.py:18] train/00051{17.06s}
I1204 09:47:58.351897 140166617011968 hlog.py:32] train/00052/loss 0.0125
I1204 09:48:02.061026 140166617011968 hlog.py:32] train/00052/eval_train/acc 0.9930
I1204 09:48:02.635464 140166617011968 hlog.py:32] train/00052/eval_val/acc 0.3108
I1204 09:48:02.635933 140166617011968 hlog.py:18] train/00052{16.71s}
I1204 09:48:14.975991 140166617011968 hlog.py:32] train/00053/loss 0.0147
I1204 09:48:18.797759 140166617011968 hlog.py:32] train/00053/eval_train/acc 0.9940
I1204 09:48:19.404329 140166617011968 hlog.py:32] train/00053/eval_val/acc 0.3108
I1204 09:48:19.404834 140166617011968 hlog.py:18] train/00053{16.77s}
I1204 09:48:32.144145 140166617011968 hlog.py:32] train/00054/loss 0.0151
I1204 09:48:36.112345 140166617011968 hlog.py:32] train/00054/eval_train/acc 0.9880
I1204 09:48:36.690006 140166617011968 hlog.py:32] train/00054/eval_val/acc 0.3176
I1204 09:48:36.690503 140166617011968 hlog.py:18] train/00054{17.29s}
I1204 09:48:48.935334 140166617011968 hlog.py:32] train/00055/loss 0.0164
I1204 09:48:53.122963 140166617011968 hlog.py:32] train/00055/eval_train/acc 0.9700
I1204 09:48:53.737826 140166617011968 hlog.py:32] train/00055/eval_val/acc 0.3041
I1204 09:48:53.738303 140166617011968 hlog.py:18] train/00055{17.05s}
I1204 09:49:05.975621 140166617011968 hlog.py:32] train/00056/loss 0.0112
I1204 09:49:09.850089 140166617011968 hlog.py:32] train/00056/eval_train/acc 0.9920
I1204 09:49:10.428416 140166617011968 hlog.py:32] train/00056/eval_val/acc 0.3243
I1204 09:49:10.428993 140166617011968 hlog.py:18] train/00056{16.69s}
I1204 09:49:23.282629 140166617011968 hlog.py:32] train/00057/loss 0.0135
I1204 09:49:27.549141 140166617011968 hlog.py:32] train/00057/eval_train/acc 0.9850
I1204 09:49:28.136379 140166617011968 hlog.py:32] train/00057/eval_val/acc 0.3108
I1204 09:49:28.136855 140166617011968 hlog.py:18] train/00057{17.71s}
I1204 09:49:40.067422 140166617011968 hlog.py:32] train/00058/loss 0.0099
I1204 09:49:44.027247 140166617011968 hlog.py:32] train/00058/eval_train/acc 0.9850
I1204 09:49:44.618545 140166617011968 hlog.py:32] train/00058/eval_val/acc 0.3176
I1204 09:49:44.619022 140166617011968 hlog.py:18] train/00058{16.48s}
I1204 09:49:56.921964 140166617011968 hlog.py:32] train/00059/loss 0.0097
I1204 09:50:00.765308 140166617011968 hlog.py:32] train/00059/eval_train/acc 0.9950
I1204 09:50:01.380833 140166617011968 hlog.py:32] train/00059/eval_val/acc 0.3108
I1204 09:50:01.412989 140166617011968 hlog.py:18] train/00059{16.79s}
I1204 09:50:12.976319 140166617011968 hlog.py:32] train/00060/loss 0.0081
I1204 09:50:16.987924 140166617011968 hlog.py:32] train/00060/eval_train/acc 0.9940
I1204 09:50:17.575582 140166617011968 hlog.py:32] train/00060/eval_val/acc 0.2635
I1204 09:50:17.576070 140166617011968 hlog.py:18] train/00060{16.16s}
I1204 09:50:29.277270 140166617011968 hlog.py:32] train/00061/loss 0.0075
I1204 09:50:33.518035 140166617011968 hlog.py:32] train/00061/eval_train/acc 0.9950
I1204 09:50:34.092993 140166617011968 hlog.py:32] train/00061/eval_val/acc 0.2905
I1204 09:50:34.093597 140166617011968 hlog.py:18] train/00061{16.52s}
I1204 09:50:46.652430 140166617011968 hlog.py:32] train/00062/loss 0.0068
I1204 09:50:50.573170 140166617011968 hlog.py:32] train/00062/eval_train/acc 0.9920
I1204 09:50:51.151026 140166617011968 hlog.py:32] train/00062/eval_val/acc 0.3041
I1204 09:50:51.151687 140166617011968 hlog.py:18] train/00062{17.06s}
I1204 09:51:03.391107 140166617011968 hlog.py:32] train/00063/loss 0.0074
I1204 09:51:07.499437 140166617011968 hlog.py:32] train/00063/eval_train/acc 0.9910
I1204 09:51:08.110647 140166617011968 hlog.py:32] train/00063/eval_val/acc 0.3041
I1204 09:51:08.111345 140166617011968 hlog.py:18] train/00063{16.96s}
I1204 09:51:19.702905 140166617011968 hlog.py:32] train/00064/loss 0.0071
I1204 09:51:23.682623 140166617011968 hlog.py:32] train/00064/eval_train/acc 0.9960
I1204 09:51:24.277215 140166617011968 hlog.py:32] train/00064/eval_val/acc 0.3176
I1204 09:51:24.277743 140166617011968 hlog.py:18] train/00064{16.17s}
I1204 09:51:37.204544 140166617011968 hlog.py:32] train/00065/loss 0.0071
I1204 09:51:40.910663 140166617011968 hlog.py:32] train/00065/eval_train/acc 0.9990
I1204 09:51:41.492467 140166617011968 hlog.py:32] train/00065/eval_val/acc 0.3176
I1204 09:51:41.493003 140166617011968 hlog.py:18] train/00065{17.22s}
I1204 09:51:54.317593 140166617011968 hlog.py:32] train/00066/loss 0.0067
I1204 09:51:58.193053 140166617011968 hlog.py:32] train/00066/eval_train/acc 0.9990
I1204 09:51:58.786173 140166617011968 hlog.py:32] train/00066/eval_val/acc 0.3041
I1204 09:51:58.786708 140166617011968 hlog.py:18] train/00066{17.29s}
I1204 09:52:10.950008 140166617011968 hlog.py:32] train/00067/loss 0.0057
I1204 09:52:14.833492 140166617011968 hlog.py:32] train/00067/eval_train/acc 0.9960
I1204 09:52:15.440969 140166617011968 hlog.py:32] train/00067/eval_val/acc 0.3108
I1204 09:52:15.441460 140166617011968 hlog.py:18] train/00067{16.65s}
I1204 09:52:26.885368 140166617011968 hlog.py:32] train/00068/loss 0.0061
I1204 09:52:30.732105 140166617011968 hlog.py:32] train/00068/eval_train/acc 1.0000
I1204 09:52:31.351809 140166617011968 hlog.py:32] train/00068/eval_val/acc 0.3108
I1204 09:52:31.352533 140166617011968 hlog.py:18] train/00068{15.91s}
I1204 09:52:43.070550 140166617011968 hlog.py:32] train/00069/loss 0.0063
I1204 09:52:47.437223 140166617011968 hlog.py:32] train/00069/eval_train/acc 0.9990
I1204 09:52:48.022123 140166617011968 hlog.py:32] train/00069/eval_val/acc 0.2973
I1204 09:52:48.180392 140166617011968 hlog.py:18] train/00069{16.83s}
I1204 09:53:00.532488 140166617011968 hlog.py:32] train/00070/loss 0.0058
I1204 09:53:04.599681 140166617011968 hlog.py:32] train/00070/eval_train/acc 0.9960
I1204 09:53:05.214149 140166617011968 hlog.py:32] train/00070/eval_val/acc 0.3041
I1204 09:53:05.214897 140166617011968 hlog.py:18] train/00070{17.03s}
I1204 09:53:17.150003 140166617011968 hlog.py:32] train/00071/loss 0.0057
I1204 09:53:21.058418 140166617011968 hlog.py:32] train/00071/eval_train/acc 0.9950
I1204 09:53:21.638705 140166617011968 hlog.py:32] train/00071/eval_val/acc 0.3041
I1204 09:53:21.639194 140166617011968 hlog.py:18] train/00071{16.42s}
I1204 09:53:33.419070 140166617011968 hlog.py:32] train/00072/loss 0.0055
I1204 09:53:37.198817 140166617011968 hlog.py:32] train/00072/eval_train/acc 1.0000
I1204 09:53:37.766779 140166617011968 hlog.py:32] train/00072/eval_val/acc 0.3041
I1204 09:53:37.767257 140166617011968 hlog.py:18] train/00072{16.13s}
I1204 09:53:50.572614 140166617011968 hlog.py:32] train/00073/loss 0.0057
I1204 09:53:54.268258 140166617011968 hlog.py:32] train/00073/eval_train/acc 1.0000
I1204 09:53:54.836328 140166617011968 hlog.py:32] train/00073/eval_val/acc 0.3041
I1204 09:53:54.836802 140166617011968 hlog.py:18] train/00073{17.07s}
I1204 09:54:06.954792 140166617011968 hlog.py:32] train/00074/loss 0.0051
I1204 09:54:10.900113 140166617011968 hlog.py:32] train/00074/eval_train/acc 0.9990
I1204 09:54:11.489463 140166617011968 hlog.py:32] train/00074/eval_val/acc 0.2838
I1204 09:54:11.489946 140166617011968 hlog.py:18] train/00074{16.65s}
I1204 09:54:24.177332 140166617011968 hlog.py:32] train/00075/loss 0.0050
I1204 09:54:27.765493 140166617011968 hlog.py:32] train/00075/eval_train/acc 1.0000
I1204 09:54:28.332734 140166617011968 hlog.py:32] train/00075/eval_val/acc 0.2905
I1204 09:54:28.333245 140166617011968 hlog.py:18] train/00075{16.84s}
I1204 09:54:41.191539 140166617011968 hlog.py:32] train/00076/loss 0.0058
I1204 09:54:45.055876 140166617011968 hlog.py:32] train/00076/eval_train/acc 0.9960
I1204 09:54:45.645883 140166617011968 hlog.py:32] train/00076/eval_val/acc 0.3108
I1204 09:54:45.646389 140166617011968 hlog.py:18] train/00076{17.31s}
I1204 09:54:57.846420 140166617011968 hlog.py:32] train/00077/loss 0.0050
I1204 09:55:01.464785 140166617011968 hlog.py:32] train/00077/eval_train/acc 0.9990
I1204 09:55:02.037342 140166617011968 hlog.py:32] train/00077/eval_val/acc 0.3108
I1204 09:55:02.037824 140166617011968 hlog.py:18] train/00077{16.39s}
I1204 09:55:13.824676 140166617011968 hlog.py:32] train/00078/loss 0.0044
I1204 09:55:17.700876 140166617011968 hlog.py:32] train/00078/eval_train/acc 0.9970
I1204 09:55:18.275310 140166617011968 hlog.py:32] train/00078/eval_val/acc 0.3041
I1204 09:55:18.275830 140166617011968 hlog.py:18] train/00078{16.24s}
I1204 09:55:30.352695 140166617011968 hlog.py:32] train/00079/loss 0.0048
I1204 09:55:33.952872 140166617011968 hlog.py:32] train/00079/eval_train/acc 0.9950
I1204 09:55:34.524843 140166617011968 hlog.py:32] train/00079/eval_val/acc 0.3041
I1204 09:55:34.682591 140166617011968 hlog.py:18] train/00079{16.41s}
I1204 09:55:46.393988 140166617011968 hlog.py:32] train/00080/loss 0.0040
I1204 09:55:50.296190 140166617011968 hlog.py:32] train/00080/eval_train/acc 1.0000
I1204 09:55:50.868227 140166617011968 hlog.py:32] train/00080/eval_val/acc 0.2905
I1204 09:55:50.868711 140166617011968 hlog.py:18] train/00080{16.19s}
I1204 09:56:03.307719 140166617011968 hlog.py:32] train/00081/loss 0.0047
I1204 09:56:07.216584 140166617011968 hlog.py:32] train/00081/eval_train/acc 0.9990
I1204 09:56:07.886220 140166617011968 hlog.py:32] train/00081/eval_val/acc 0.3041
I1204 09:56:07.886850 140166617011968 hlog.py:18] train/00081{17.02s}
I1204 09:56:19.766900 140166617011968 hlog.py:32] train/00082/loss 0.0041
I1204 09:56:23.941457 140166617011968 hlog.py:32] train/00082/eval_train/acc 0.9980
I1204 09:56:24.501954 140166617011968 hlog.py:32] train/00082/eval_val/acc 0.3108
I1204 09:56:24.502464 140166617011968 hlog.py:18] train/00082{16.62s}
I1204 09:56:36.096232 140166617011968 hlog.py:32] train/00083/loss 0.0045
I1204 09:56:39.911651 140166617011968 hlog.py:32] train/00083/eval_train/acc 1.0000
I1204 09:56:40.483579 140166617011968 hlog.py:32] train/00083/eval_val/acc 0.2973
I1204 09:56:40.484099 140166617011968 hlog.py:18] train/00083{15.98s}
I1204 09:56:52.231512 140166617011968 hlog.py:32] train/00084/loss 0.0047
I1204 09:56:56.361389 140166617011968 hlog.py:32] train/00084/eval_train/acc 1.0000
I1204 09:56:56.959655 140166617011968 hlog.py:32] train/00084/eval_val/acc 0.2770
I1204 09:56:56.960236 140166617011968 hlog.py:18] train/00084{16.48s}
I1204 09:57:08.414205 140166617011968 hlog.py:32] train/00085/loss 0.0039
I1204 09:57:12.123065 140166617011968 hlog.py:32] train/00085/eval_train/acc 0.9980
I1204 09:57:12.673950 140166617011968 hlog.py:32] train/00085/eval_val/acc 0.2703
I1204 09:57:12.674425 140166617011968 hlog.py:18] train/00085{15.71s}
I1204 09:57:24.741969 140166617011968 hlog.py:32] train/00086/loss 0.0043
I1204 09:57:28.630013 140166617011968 hlog.py:32] train/00086/eval_train/acc 1.0000
I1204 09:57:29.214180 140166617011968 hlog.py:32] train/00086/eval_val/acc 0.2770
I1204 09:57:29.214670 140166617011968 hlog.py:18] train/00086{16.54s}
I1204 09:57:40.907572 140166617011968 hlog.py:32] train/00087/loss 0.0043
I1204 09:57:44.834016 140166617011968 hlog.py:32] train/00087/eval_train/acc 1.0000
I1204 09:57:45.408029 140166617011968 hlog.py:32] train/00087/eval_val/acc 0.2770
I1204 09:57:45.408480 140166617011968 hlog.py:18] train/00087{16.19s}
I1204 09:57:57.133430 140166617011968 hlog.py:32] train/00088/loss 0.0045
I1204 09:58:00.961276 140166617011968 hlog.py:32] train/00088/eval_train/acc 0.9990
I1204 09:58:01.555614 140166617011968 hlog.py:32] train/00088/eval_val/acc 0.2838
I1204 09:58:01.556139 140166617011968 hlog.py:18] train/00088{16.15s}
I1204 09:58:13.779717 140166617011968 hlog.py:32] train/00089/loss 0.0047
I1204 09:58:17.609140 140166617011968 hlog.py:32] train/00089/eval_train/acc 1.0000
I1204 09:58:18.204162 140166617011968 hlog.py:32] train/00089/eval_val/acc 0.2905
I1204 09:58:18.236477 140166617011968 hlog.py:18] train/00089{16.68s}
I1204 09:58:30.666528 140166617011968 hlog.py:32] train/00090/loss 0.0044
I1204 09:58:34.557089 140166617011968 hlog.py:32] train/00090/eval_train/acc 1.0000
I1204 09:58:35.142633 140166617011968 hlog.py:32] train/00090/eval_val/acc 0.2838
I1204 09:58:35.143103 140166617011968 hlog.py:18] train/00090{16.91s}
I1204 09:58:47.056736 140166617011968 hlog.py:32] train/00091/loss 0.0039
I1204 09:58:51.157696 140166617011968 hlog.py:32] train/00091/eval_train/acc 0.9960
I1204 09:58:51.754858 140166617011968 hlog.py:32] train/00091/eval_val/acc 0.3041
I1204 09:58:51.755337 140166617011968 hlog.py:18] train/00091{16.61s}
I1204 09:59:04.443612 140166617011968 hlog.py:32] train/00092/loss 0.0046
I1204 09:59:08.393290 140166617011968 hlog.py:32] train/00092/eval_train/acc 1.0000
I1204 09:59:08.966717 140166617011968 hlog.py:32] train/00092/eval_val/acc 0.3041
I1204 09:59:08.967236 140166617011968 hlog.py:18] train/00092{17.21s}
I1204 09:59:20.976608 140166617011968 hlog.py:32] train/00093/loss 0.0045
I1204 09:59:24.746927 140166617011968 hlog.py:32] train/00093/eval_train/acc 0.9990
I1204 09:59:25.314827 140166617011968 hlog.py:32] train/00093/eval_val/acc 0.2973
I1204 09:59:25.315304 140166617011968 hlog.py:18] train/00093{16.35s}
I1204 09:59:37.423206 140166617011968 hlog.py:32] train/00094/loss 0.0044
I1204 09:59:41.262111 140166617011968 hlog.py:32] train/00094/eval_train/acc 1.0000
I1204 09:59:41.844742 140166617011968 hlog.py:32] train/00094/eval_val/acc 0.3041
I1204 09:59:41.845258 140166617011968 hlog.py:18] train/00094{16.53s}
I1204 09:59:54.739680 140166617011968 hlog.py:32] train/00095/loss 0.0039
I1204 09:59:58.780966 140166617011968 hlog.py:32] train/00095/eval_train/acc 1.0000
I1204 09:59:59.369867 140166617011968 hlog.py:32] train/00095/eval_val/acc 0.2973
I1204 09:59:59.370345 140166617011968 hlog.py:18] train/00095{17.52s}
I1204 10:00:12.376299 140166617011968 hlog.py:32] train/00096/loss 0.0044
I1204 10:00:16.327421 140166617011968 hlog.py:32] train/00096/eval_train/acc 1.0000
I1204 10:00:16.903662 140166617011968 hlog.py:32] train/00096/eval_val/acc 0.2905
I1204 10:00:16.904260 140166617011968 hlog.py:18] train/00096{17.53s}
I1204 10:00:29.302086 140166617011968 hlog.py:32] train/00097/loss 0.0042
I1204 10:00:33.170646 140166617011968 hlog.py:32] train/00097/eval_train/acc 1.0000
I1204 10:00:33.760674 140166617011968 hlog.py:32] train/00097/eval_val/acc 0.2905
I1204 10:00:33.761312 140166617011968 hlog.py:18] train/00097{16.86s}
I1204 10:00:45.157827 140166617011968 hlog.py:32] train/00098/loss 0.0043
I1204 10:00:49.088325 140166617011968 hlog.py:32] train/00098/eval_train/acc 0.9960
I1204 10:00:49.678890 140166617011968 hlog.py:32] train/00098/eval_val/acc 0.2905
I1204 10:00:49.679444 140166617011968 hlog.py:18] train/00098{15.92s}
I1204 10:01:02.439465 140166617011968 hlog.py:32] train/00099/loss 0.0040
I1204 10:01:06.191074 140166617011968 hlog.py:32] train/00099/eval_train/acc 1.0000
I1204 10:01:06.769968 140166617011968 hlog.py:32] train/00099/eval_val/acc 0.2838
I1204 10:01:06.926274 140166617011968 hlog.py:18] train/00099{17.25s}
I1204 10:01:19.134099 140166617011968 hlog.py:32] train/00100/loss 0.0048
I1204 10:01:23.010824 140166617011968 hlog.py:32] train/00100/eval_train/acc 1.0000
I1204 10:01:23.614545 140166617011968 hlog.py:32] train/00100/eval_val/acc 0.3041
I1204 10:01:23.615068 140166617011968 hlog.py:18] train/00100{16.69s}
I1204 10:01:35.267696 140166617011968 hlog.py:32] train/00101/loss 0.0036
I1204 10:01:39.167127 140166617011968 hlog.py:32] train/00101/eval_train/acc 1.0000
I1204 10:01:39.754269 140166617011968 hlog.py:32] train/00101/eval_val/acc 0.3041
I1204 10:01:39.754772 140166617011968 hlog.py:18] train/00101{16.14s}
I1204 10:01:50.903834 140166617011968 hlog.py:32] train/00102/loss 0.0042
I1204 10:01:54.709196 140166617011968 hlog.py:32] train/00102/eval_train/acc 1.0000
I1204 10:01:55.295714 140166617011968 hlog.py:32] train/00102/eval_val/acc 0.3041
I1204 10:01:55.296227 140166617011968 hlog.py:18] train/00102{15.54s}
I1204 10:02:06.753597 140166617011968 hlog.py:32] train/00103/loss 0.0039
I1204 10:02:10.683832 140166617011968 hlog.py:32] train/00103/eval_train/acc 0.9950
I1204 10:02:11.272761 140166617011968 hlog.py:32] train/00103/eval_val/acc 0.3108
I1204 10:02:11.273282 140166617011968 hlog.py:18] train/00103{15.98s}
I1204 10:02:23.492820 140166617011968 hlog.py:32] train/00104/loss 0.0041
I1204 10:02:27.364526 140166617011968 hlog.py:32] train/00104/eval_train/acc 0.9980
I1204 10:02:27.954073 140166617011968 hlog.py:32] train/00104/eval_val/acc 0.3108
I1204 10:02:27.954587 140166617011968 hlog.py:18] train/00104{16.68s}
I1204 10:02:40.254441 140166617011968 hlog.py:32] train/00105/loss 0.0040
I1204 10:02:44.338394 140166617011968 hlog.py:32] train/00105/eval_train/acc 0.9990
I1204 10:02:44.935302 140166617011968 hlog.py:32] train/00105/eval_val/acc 0.3108
I1204 10:02:44.935815 140166617011968 hlog.py:18] train/00105{16.98s}
I1204 10:02:56.609035 140166617011968 hlog.py:32] train/00106/loss 0.0041
I1204 10:03:00.320829 140166617011968 hlog.py:32] train/00106/eval_train/acc 1.0000
I1204 10:03:00.925902 140166617011968 hlog.py:32] train/00106/eval_val/acc 0.3108
I1204 10:03:00.926416 140166617011968 hlog.py:18] train/00106{15.99s}
I1204 10:03:12.999015 140166617011968 hlog.py:32] train/00107/loss 0.0041
I1204 10:03:16.757166 140166617011968 hlog.py:32] train/00107/eval_train/acc 0.9950
I1204 10:03:17.343052 140166617011968 hlog.py:32] train/00107/eval_val/acc 0.3108
I1204 10:03:17.343560 140166617011968 hlog.py:18] train/00107{16.42s}
I1204 10:03:30.585603 140166617011968 hlog.py:32] train/00108/loss 0.0039
I1204 10:03:34.470185 140166617011968 hlog.py:32] train/00108/eval_train/acc 0.9990
I1204 10:03:35.079289 140166617011968 hlog.py:32] train/00108/eval_val/acc 0.3041
I1204 10:03:35.079820 140166617011968 hlog.py:18] train/00108{17.74s}
I1204 10:03:47.880475 140166617011968 hlog.py:32] train/00109/loss 0.0039
I1204 10:03:51.565415 140166617011968 hlog.py:32] train/00109/eval_train/acc 0.9990
I1204 10:03:52.157366 140166617011968 hlog.py:32] train/00109/eval_val/acc 0.2905
I1204 10:03:52.189732 140166617011968 hlog.py:18] train/00109{17.11s}
I1204 10:04:04.625601 140166617011968 hlog.py:32] train/00110/loss 0.0043
I1204 10:04:08.645972 140166617011968 hlog.py:32] train/00110/eval_train/acc 0.9970
I1204 10:04:09.241827 140166617011968 hlog.py:32] train/00110/eval_val/acc 0.2838
I1204 10:04:09.242316 140166617011968 hlog.py:18] train/00110{17.05s}
I1204 10:04:21.909842 140166617011968 hlog.py:32] train/00111/loss 0.0039
I1204 10:04:25.823779 140166617011968 hlog.py:32] train/00111/eval_train/acc 1.0000
I1204 10:04:26.439643 140166617011968 hlog.py:32] train/00111/eval_val/acc 0.2905
I1204 10:04:26.440283 140166617011968 hlog.py:18] train/00111{17.20s}
I1204 10:04:38.672753 140166617011968 hlog.py:32] train/00112/loss 0.0043
I1204 10:04:42.651637 140166617011968 hlog.py:32] train/00112/eval_train/acc 1.0000
I1204 10:04:43.250289 140166617011968 hlog.py:32] train/00112/eval_val/acc 0.2905
I1204 10:04:43.250826 140166617011968 hlog.py:18] train/00112{16.81s}
I1204 10:04:55.732557 140166617011968 hlog.py:32] train/00113/loss 0.0039
I1204 10:04:59.801761 140166617011968 hlog.py:32] train/00113/eval_train/acc 1.0000
I1204 10:05:00.396264 140166617011968 hlog.py:32] train/00113/eval_val/acc 0.2973
I1204 10:05:00.396754 140166617011968 hlog.py:18] train/00113{17.15s}
I1204 10:05:13.295427 140166617011968 hlog.py:32] train/00114/loss 0.0039
I1204 10:05:16.983856 140166617011968 hlog.py:32] train/00114/eval_train/acc 1.0000
I1204 10:05:17.561508 140166617011968 hlog.py:32] train/00114/eval_val/acc 0.3041
I1204 10:05:17.562021 140166617011968 hlog.py:18] train/00114{17.17s}
I1204 10:05:29.166274 140166617011968 hlog.py:32] train/00115/loss 0.0039
I1204 10:05:33.246198 140166617011968 hlog.py:32] train/00115/eval_train/acc 0.9980
I1204 10:05:33.846095 140166617011968 hlog.py:32] train/00115/eval_val/acc 0.2973
I1204 10:05:33.846626 140166617011968 hlog.py:18] train/00115{16.28s}
I1204 10:05:45.874931 140166617011968 hlog.py:32] train/00116/loss 0.0042
I1204 10:05:49.797166 140166617011968 hlog.py:32] train/00116/eval_train/acc 1.0000
I1204 10:05:50.393948 140166617011968 hlog.py:32] train/00116/eval_val/acc 0.2973
I1204 10:05:50.394568 140166617011968 hlog.py:18] train/00116{16.55s}
I1204 10:06:02.398047 140166617011968 hlog.py:32] train/00117/loss 0.0035
I1204 10:06:06.180996 140166617011968 hlog.py:32] train/00117/eval_train/acc 1.0000
I1204 10:06:06.770949 140166617011968 hlog.py:32] train/00117/eval_val/acc 0.3041
I1204 10:06:06.771467 140166617011968 hlog.py:18] train/00117{16.38s}
I1204 10:06:18.126463 140166617011968 hlog.py:32] train/00118/loss 0.0041
I1204 10:06:21.958973 140166617011968 hlog.py:32] train/00118/eval_train/acc 1.0000
I1204 10:06:22.561231 140166617011968 hlog.py:32] train/00118/eval_val/acc 0.3041
I1204 10:06:22.561735 140166617011968 hlog.py:18] train/00118{15.79s}
I1204 10:06:35.174395 140166617011968 hlog.py:32] train/00119/loss 0.0037
I1204 10:06:39.274394 140166617011968 hlog.py:32] train/00119/eval_train/acc 1.0000
I1204 10:06:39.872666 140166617011968 hlog.py:32] train/00119/eval_val/acc 0.3041
I1204 10:06:39.905353 140166617011968 hlog.py:18] train/00119{17.34s}
I1204 10:06:52.248974 140166617011968 hlog.py:32] train/00120/loss 0.0038
I1204 10:06:56.402180 140166617011968 hlog.py:32] train/00120/eval_train/acc 1.0000
I1204 10:06:56.990186 140166617011968 hlog.py:32] train/00120/eval_val/acc 0.3041
I1204 10:06:56.990678 140166617011968 hlog.py:18] train/00120{17.09s}
I1204 10:07:09.726479 140166617011968 hlog.py:32] train/00121/loss 0.0039
I1204 10:07:13.542289 140166617011968 hlog.py:32] train/00121/eval_train/acc 1.0000
I1204 10:07:14.146893 140166617011968 hlog.py:32] train/00121/eval_val/acc 0.3041
I1204 10:07:14.147374 140166617011968 hlog.py:18] train/00121{17.16s}
I1204 10:07:26.351059 140166617011968 hlog.py:32] train/00122/loss 0.0042
I1204 10:07:30.307026 140166617011968 hlog.py:32] train/00122/eval_train/acc 1.0000
I1204 10:07:30.871520 140166617011968 hlog.py:32] train/00122/eval_val/acc 0.3041
I1204 10:07:30.872021 140166617011968 hlog.py:18] train/00122{16.72s}
I1204 10:07:43.903867 140166617011968 hlog.py:32] train/00123/loss 0.0045
I1204 10:07:47.663566 140166617011968 hlog.py:32] train/00123/eval_train/acc 1.0000
I1204 10:07:48.242764 140166617011968 hlog.py:32] train/00123/eval_val/acc 0.3041
I1204 10:07:48.243255 140166617011968 hlog.py:18] train/00123{17.37s}
I1204 10:08:00.529699 140166617011968 hlog.py:32] train/00124/loss 0.0037
I1204 10:08:04.307925 140166617011968 hlog.py:32] train/00124/eval_train/acc 1.0000
I1204 10:08:04.890394 140166617011968 hlog.py:32] train/00124/eval_val/acc 0.3041
I1204 10:08:04.890895 140166617011968 hlog.py:18] train/00124{16.65s}
I1204 10:08:17.351354 140166617011968 hlog.py:32] train/00125/loss 0.0040
I1204 10:08:21.380939 140166617011968 hlog.py:32] train/00125/eval_train/acc 1.0000
I1204 10:08:21.974912 140166617011968 hlog.py:32] train/00125/eval_val/acc 0.3041
I1204 10:08:21.975478 140166617011968 hlog.py:18] train/00125{17.08s}
I1204 10:08:34.787262 140166617011968 hlog.py:32] train/00126/loss 0.0039
I1204 10:08:38.741609 140166617011968 hlog.py:32] train/00126/eval_train/acc 1.0000
I1204 10:08:39.349872 140166617011968 hlog.py:32] train/00126/eval_val/acc 0.3041
I1204 10:08:39.350410 140166617011968 hlog.py:18] train/00126{17.37s}
I1204 10:08:50.854329 140166617011968 hlog.py:32] train/00127/loss 0.0036
I1204 10:08:54.702708 140166617011968 hlog.py:32] train/00127/eval_train/acc 1.0000
I1204 10:08:55.293504 140166617011968 hlog.py:32] train/00127/eval_val/acc 0.3041
I1204 10:08:55.293997 140166617011968 hlog.py:18] train/00127{15.94s}
I1204 10:09:08.197653 140166617011968 hlog.py:32] train/00128/loss 0.0039
I1204 10:09:11.964892 140166617011968 hlog.py:32] train/00128/eval_train/acc 1.0000
I1204 10:09:12.556250 140166617011968 hlog.py:32] train/00128/eval_val/acc 0.3041
I1204 10:09:12.556735 140166617011968 hlog.py:18] train/00128{17.26s}
I1204 10:09:24.406443 140166617011968 hlog.py:32] train/00129/loss 0.0034
I1204 10:09:28.416442 140166617011968 hlog.py:32] train/00129/eval_train/acc 1.0000
I1204 10:09:29.011512 140166617011968 hlog.py:32] train/00129/eval_val/acc 0.3041
I1204 10:09:29.044869 140166617011968 hlog.py:18] train/00129{16.49s}
I1204 10:09:42.168398 140166617011968 hlog.py:32] train/00130/loss 0.0042
I1204 10:09:46.372163 140166617011968 hlog.py:32] train/00130/eval_train/acc 1.0000
I1204 10:09:46.969352 140166617011968 hlog.py:32] train/00130/eval_val/acc 0.3041
I1204 10:09:46.969816 140166617011968 hlog.py:18] train/00130{17.92s}
I1204 10:10:00.194605 140166617011968 hlog.py:32] train/00131/loss 0.0046
I1204 10:10:03.882863 140166617011968 hlog.py:32] train/00131/eval_train/acc 1.0000
I1204 10:10:04.473840 140166617011968 hlog.py:32] train/00131/eval_val/acc 0.3041
I1204 10:10:04.474517 140166617011968 hlog.py:18] train/00131{17.50s}
I1204 10:10:16.544095 140166617011968 hlog.py:32] train/00132/loss 0.0039
I1204 10:10:20.350793 140166617011968 hlog.py:32] train/00132/eval_train/acc 1.0000
I1204 10:10:20.942125 140166617011968 hlog.py:32] train/00132/eval_val/acc 0.3041
I1204 10:10:20.942642 140166617011968 hlog.py:18] train/00132{16.47s}
I1204 10:10:32.923812 140166617011968 hlog.py:32] train/00133/loss 0.0037
I1204 10:10:36.728631 140166617011968 hlog.py:32] train/00133/eval_train/acc 1.0000
I1204 10:10:37.332423 140166617011968 hlog.py:32] train/00133/eval_val/acc 0.3041
I1204 10:10:37.333126 140166617011968 hlog.py:18] train/00133{16.39s}
I1204 10:10:49.799370 140166617011968 hlog.py:32] train/00134/loss 0.0040
I1204 10:10:53.604097 140166617011968 hlog.py:32] train/00134/eval_train/acc 1.0000
I1204 10:10:54.211867 140166617011968 hlog.py:32] train/00134/eval_val/acc 0.3041
I1204 10:10:54.212365 140166617011968 hlog.py:18] train/00134{16.88s}
I1204 10:11:06.423857 140166617011968 hlog.py:32] train/00135/loss 0.0037
I1204 10:11:10.512609 140166617011968 hlog.py:32] train/00135/eval_train/acc 1.0000
I1204 10:11:11.099848 140166617011968 hlog.py:32] train/00135/eval_val/acc 0.3041
I1204 10:11:11.100339 140166617011968 hlog.py:18] train/00135{16.89s}
I1204 10:11:22.852722 140166617011968 hlog.py:32] train/00136/loss 0.0032
I1204 10:11:26.947257 140166617011968 hlog.py:32] train/00136/eval_train/acc 1.0000
I1204 10:11:27.549321 140166617011968 hlog.py:32] train/00136/eval_val/acc 0.3041
I1204 10:11:27.550030 140166617011968 hlog.py:18] train/00136{16.45s}
I1204 10:11:40.443604 140166617011968 hlog.py:32] train/00137/loss 0.0040
I1204 10:11:44.124658 140166617011968 hlog.py:32] train/00137/eval_train/acc 1.0000
I1204 10:11:44.725663 140166617011968 hlog.py:32] train/00137/eval_val/acc 0.3041
I1204 10:11:44.726133 140166617011968 hlog.py:18] train/00137{17.18s}
I1204 10:11:56.451175 140166617011968 hlog.py:32] train/00138/loss 0.0037
I1204 10:12:00.317162 140166617011968 hlog.py:32] train/00138/eval_train/acc 1.0000
I1204 10:12:00.890017 140166617011968 hlog.py:32] train/00138/eval_val/acc 0.3041
I1204 10:12:00.890489 140166617011968 hlog.py:18] train/00138{16.16s}
I1204 10:12:13.283744 140166617011968 hlog.py:32] train/00139/loss 0.0039
I1204 10:12:17.038417 140166617011968 hlog.py:32] train/00139/eval_train/acc 1.0000
I1204 10:12:17.647195 140166617011968 hlog.py:32] train/00139/eval_val/acc 0.3041
I1204 10:12:17.713293 140166617011968 hlog.py:18] train/00139{16.82s}
I1204 10:12:30.220180 140166617011968 hlog.py:32] train/00140/loss 0.0040
I1204 10:12:33.881315 140166617011968 hlog.py:32] train/00140/eval_train/acc 1.0000
I1204 10:12:34.461517 140166617011968 hlog.py:32] train/00140/eval_val/acc 0.3041
I1204 10:12:34.461988 140166617011968 hlog.py:18] train/00140{16.75s}
I1204 10:12:47.558913 140166617011968 hlog.py:32] train/00141/loss 0.0037
I1204 10:12:51.453178 140166617011968 hlog.py:32] train/00141/eval_train/acc 1.0000
I1204 10:12:52.043365 140166617011968 hlog.py:32] train/00141/eval_val/acc 0.3041
I1204 10:12:52.043957 140166617011968 hlog.py:18] train/00141{17.58s}
I1204 10:13:03.845705 140166617011968 hlog.py:32] train/00142/loss 0.0034
I1204 10:13:07.553300 140166617011968 hlog.py:32] train/00142/eval_train/acc 1.0000
I1204 10:13:08.130780 140166617011968 hlog.py:32] train/00142/eval_val/acc 0.3041
I1204 10:13:08.131257 140166617011968 hlog.py:18] train/00142{16.09s}
I1204 10:13:19.944470 140166617011968 hlog.py:32] train/00143/loss 0.0039
I1204 10:13:23.873894 140166617011968 hlog.py:32] train/00143/eval_train/acc 1.0000
I1204 10:13:24.450909 140166617011968 hlog.py:32] train/00143/eval_val/acc 0.3041
I1204 10:13:24.451398 140166617011968 hlog.py:18] train/00143{16.32s}
I1204 10:13:36.099643 140166617011968 hlog.py:32] train/00144/loss 0.0039
I1204 10:13:40.305932 140166617011968 hlog.py:32] train/00144/eval_train/acc 1.0000
I1204 10:13:40.904933 140166617011968 hlog.py:32] train/00144/eval_val/acc 0.3041
I1204 10:13:40.905425 140166617011968 hlog.py:18] train/00144{16.45s}
I1204 10:13:53.456124 140166617011968 hlog.py:32] train/00145/loss 0.0041
I1204 10:13:57.154282 140166617011968 hlog.py:32] train/00145/eval_train/acc 1.0000
I1204 10:13:57.739459 140166617011968 hlog.py:32] train/00145/eval_val/acc 0.2973
I1204 10:13:57.739944 140166617011968 hlog.py:18] train/00145{16.83s}
I1204 10:14:09.433986 140166617011968 hlog.py:32] train/00146/loss 0.0033
I1204 10:14:13.220754 140166617011968 hlog.py:32] train/00146/eval_train/acc 1.0000
I1204 10:14:13.815993 140166617011968 hlog.py:32] train/00146/eval_val/acc 0.2973
I1204 10:14:13.816699 140166617011968 hlog.py:18] train/00146{16.08s}
I1204 10:14:25.923896 140166617011968 hlog.py:32] train/00147/loss 0.0038
I1204 10:14:29.660382 140166617011968 hlog.py:32] train/00147/eval_train/acc 1.0000
I1204 10:14:30.254393 140166617011968 hlog.py:32] train/00147/eval_val/acc 0.2973
I1204 10:14:30.254938 140166617011968 hlog.py:18] train/00147{16.44s}
I1204 10:14:42.337643 140166617011968 hlog.py:32] train/00148/loss 0.0037
I1204 10:14:45.914482 140166617011968 hlog.py:32] train/00148/eval_train/acc 1.0000
I1204 10:14:46.492548 140166617011968 hlog.py:32] train/00148/eval_val/acc 0.2973
I1204 10:14:46.493028 140166617011968 hlog.py:18] train/00148{16.24s}
I1204 10:14:59.759625 140166617011968 hlog.py:32] train/00149/loss 0.0036
I1204 10:15:03.780367 140166617011968 hlog.py:32] train/00149/eval_train/acc 1.0000
I1204 10:15:04.005629 140166617011968 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1204 10:15:04.005831 140166617011968 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:15:04.005935 140166617011968 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:15:04.006021 140166617011968 hlog.py:32] train/00149/eval_val/0/corr True
I1204 10:15:04.006099 140166617011968 hlog.py:32] train/00149/eval_val/0 
I1204 10:15:04.006185 140166617011968 hlog.py:18] train/00149/eval_val/0{0.00s}
I1204 10:15:04.006280 140166617011968 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1204 10:15:04.006380 140166617011968 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 10:15:04.006471 140166617011968 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.006557 140166617011968 hlog.py:32] train/00149/eval_val/1/corr False
I1204 10:15:04.006632 140166617011968 hlog.py:32] train/00149/eval_val/1 
I1204 10:15:04.006705 140166617011968 hlog.py:18] train/00149/eval_val/1{0.00s}
I1204 10:15:04.006793 140166617011968 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1204 10:15:04.006890 140166617011968 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1204 10:15:04.006980 140166617011968 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1204 10:15:04.007058 140166617011968 hlog.py:32] train/00149/eval_val/2/corr False
I1204 10:15:04.007132 140166617011968 hlog.py:32] train/00149/eval_val/2 
I1204 10:15:04.007203 140166617011968 hlog.py:18] train/00149/eval_val/2{0.00s}
I1204 10:15:04.007291 140166617011968 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1204 10:15:04.007388 140166617011968 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 10:15:04.007487 140166617011968 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:15:04.007566 140166617011968 hlog.py:32] train/00149/eval_val/3/corr False
I1204 10:15:04.007640 140166617011968 hlog.py:32] train/00149/eval_val/3 
I1204 10:15:04.007711 140166617011968 hlog.py:18] train/00149/eval_val/3{0.00s}
I1204 10:15:04.007799 140166617011968 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1204 10:15:04.007895 140166617011968 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1204 10:15:04.007985 140166617011968 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1204 10:15:04.008063 140166617011968 hlog.py:32] train/00149/eval_val/4/corr False
I1204 10:15:04.008137 140166617011968 hlog.py:32] train/00149/eval_val/4 
I1204 10:15:04.008209 140166617011968 hlog.py:18] train/00149/eval_val/4{0.00s}
I1204 10:15:04.008296 140166617011968 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1204 10:15:04.008391 140166617011968 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:15:04.008481 140166617011968 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.008560 140166617011968 hlog.py:32] train/00149/eval_val/5/corr False
I1204 10:15:04.008634 140166617011968 hlog.py:32] train/00149/eval_val/5 
I1204 10:15:04.008705 140166617011968 hlog.py:18] train/00149/eval_val/5{0.00s}
I1204 10:15:04.008793 140166617011968 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1204 10:15:04.008903 140166617011968 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 10:15:04.008994 140166617011968 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.009072 140166617011968 hlog.py:32] train/00149/eval_val/6/corr False
I1204 10:15:04.009146 140166617011968 hlog.py:32] train/00149/eval_val/6 
I1204 10:15:04.009218 140166617011968 hlog.py:18] train/00149/eval_val/6{0.00s}
I1204 10:15:04.009305 140166617011968 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1204 10:15:04.009400 140166617011968 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:15:04.009490 140166617011968 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.009567 140166617011968 hlog.py:32] train/00149/eval_val/7/corr False
I1204 10:15:04.009641 140166617011968 hlog.py:32] train/00149/eval_val/7 
I1204 10:15:04.009712 140166617011968 hlog.py:18] train/00149/eval_val/7{0.00s}
I1204 10:15:04.009800 140166617011968 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1204 10:15:04.009896 140166617011968 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 10:15:04.009985 140166617011968 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 10:15:04.010063 140166617011968 hlog.py:32] train/00149/eval_val/8/corr False
I1204 10:15:04.010136 140166617011968 hlog.py:32] train/00149/eval_val/8 
I1204 10:15:04.010208 140166617011968 hlog.py:18] train/00149/eval_val/8{0.00s}
I1204 10:15:04.010295 140166617011968 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1204 10:15:04.010391 140166617011968 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 10:15:04.010481 140166617011968 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 10:15:04.010559 140166617011968 hlog.py:32] train/00149/eval_val/9/corr False
I1204 10:15:04.010633 140166617011968 hlog.py:32] train/00149/eval_val/9 
I1204 10:15:04.010704 140166617011968 hlog.py:18] train/00149/eval_val/9{0.00s}
I1204 10:15:04.010792 140166617011968 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1204 10:15:04.010887 140166617011968 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:15:04.010977 140166617011968 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.011056 140166617011968 hlog.py:32] train/00149/eval_val/10/corr False
I1204 10:15:04.011129 140166617011968 hlog.py:32] train/00149/eval_val/10 
I1204 10:15:04.011201 140166617011968 hlog.py:18] train/00149/eval_val/10{0.00s}
I1204 10:15:04.011296 140166617011968 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1204 10:15:04.011401 140166617011968 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:15:04.011508 140166617011968 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:15:04.011587 140166617011968 hlog.py:32] train/00149/eval_val/11/corr True
I1204 10:15:04.011661 140166617011968 hlog.py:32] train/00149/eval_val/11 
I1204 10:15:04.011733 140166617011968 hlog.py:18] train/00149/eval_val/11{0.00s}
I1204 10:15:04.011827 140166617011968 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1204 10:15:04.011931 140166617011968 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 10:15:04.012032 140166617011968 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 10:15:04.012111 140166617011968 hlog.py:32] train/00149/eval_val/12/corr True
I1204 10:15:04.012185 140166617011968 hlog.py:32] train/00149/eval_val/12 
I1204 10:15:04.012257 140166617011968 hlog.py:18] train/00149/eval_val/12{0.00s}
I1204 10:15:04.012352 140166617011968 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1204 10:15:04.012456 140166617011968 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 10:15:04.012550 140166617011968 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 10:15:04.012629 140166617011968 hlog.py:32] train/00149/eval_val/13/corr True
I1204 10:15:04.012702 140166617011968 hlog.py:32] train/00149/eval_val/13 
I1204 10:15:04.012774 140166617011968 hlog.py:18] train/00149/eval_val/13{0.00s}
I1204 10:15:04.012869 140166617011968 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1204 10:15:04.012973 140166617011968 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 10:15:04.013068 140166617011968 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 10:15:04.013147 140166617011968 hlog.py:32] train/00149/eval_val/14/corr True
I1204 10:15:04.013220 140166617011968 hlog.py:32] train/00149/eval_val/14 
I1204 10:15:04.013292 140166617011968 hlog.py:18] train/00149/eval_val/14{0.00s}
I1204 10:15:04.013387 140166617011968 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1204 10:15:04.013492 140166617011968 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 10:15:04.013587 140166617011968 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 10:15:04.013666 140166617011968 hlog.py:32] train/00149/eval_val/15/corr True
I1204 10:15:04.013739 140166617011968 hlog.py:32] train/00149/eval_val/15 
I1204 10:15:04.013810 140166617011968 hlog.py:18] train/00149/eval_val/15{0.00s}
I1204 10:15:04.013906 140166617011968 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1204 10:15:04.014009 140166617011968 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:15:04.014104 140166617011968 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:15:04.014182 140166617011968 hlog.py:32] train/00149/eval_val/16/corr True
I1204 10:15:04.014256 140166617011968 hlog.py:32] train/00149/eval_val/16 
I1204 10:15:04.014327 140166617011968 hlog.py:18] train/00149/eval_val/16{0.00s}
I1204 10:15:04.014415 140166617011968 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1204 10:15:04.014515 140166617011968 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1204 10:15:04.014611 140166617011968 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1204 10:15:04.014695 140166617011968 hlog.py:32] train/00149/eval_val/17/corr False
I1204 10:15:04.014769 140166617011968 hlog.py:32] train/00149/eval_val/17 
I1204 10:15:04.014841 140166617011968 hlog.py:18] train/00149/eval_val/17{0.00s}
I1204 10:15:04.014930 140166617011968 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1204 10:15:04.015029 140166617011968 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1204 10:15:04.015125 140166617011968 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1204 10:15:04.015204 140166617011968 hlog.py:32] train/00149/eval_val/18/corr False
I1204 10:15:04.015277 140166617011968 hlog.py:32] train/00149/eval_val/18 
I1204 10:15:04.015348 140166617011968 hlog.py:18] train/00149/eval_val/18{0.00s}
I1204 10:15:04.015442 140166617011968 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1204 10:15:04.015543 140166617011968 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:15:04.015638 140166617011968 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1204 10:15:04.015717 140166617011968 hlog.py:32] train/00149/eval_val/19/corr False
I1204 10:15:04.015790 140166617011968 hlog.py:32] train/00149/eval_val/19 
I1204 10:15:04.015861 140166617011968 hlog.py:18] train/00149/eval_val/19{0.00s}
I1204 10:15:04.015950 140166617011968 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1204 10:15:04.016049 140166617011968 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1204 10:15:04.016144 140166617011968 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1204 10:15:04.016223 140166617011968 hlog.py:32] train/00149/eval_val/20/corr False
I1204 10:15:04.016296 140166617011968 hlog.py:32] train/00149/eval_val/20 
I1204 10:15:04.016368 140166617011968 hlog.py:18] train/00149/eval_val/20{0.00s}
I1204 10:15:04.016460 140166617011968 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1204 10:15:04.016564 140166617011968 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _largest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 10:15:04.016659 140166617011968 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 10:15:04.016737 140166617011968 hlog.py:32] train/00149/eval_val/21/corr False
I1204 10:15:04.016811 140166617011968 hlog.py:32] train/00149/eval_val/21 
I1204 10:15:04.016883 140166617011968 hlog.py:18] train/00149/eval_val/21{0.00s}
I1204 10:15:04.016970 140166617011968 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1204 10:15:04.017066 140166617011968 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( rio grande , _ ) ) ) )
I1204 10:15:04.017156 140166617011968 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1204 10:15:04.017235 140166617011968 hlog.py:32] train/00149/eval_val/22/corr False
I1204 10:15:04.017309 140166617011968 hlog.py:32] train/00149/eval_val/22 
I1204 10:15:04.017381 140166617011968 hlog.py:18] train/00149/eval_val/22{0.00s}
I1204 10:15:04.017468 140166617011968 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1204 10:15:04.017563 140166617011968 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( mississippi , _ ) ) ) )
I1204 10:15:04.017657 140166617011968 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:15:04.017736 140166617011968 hlog.py:32] train/00149/eval_val/23/corr False
I1204 10:15:04.017809 140166617011968 hlog.py:32] train/00149/eval_val/23 
I1204 10:15:04.017881 140166617011968 hlog.py:18] train/00149/eval_val/23{0.00s}
I1204 10:15:04.017968 140166617011968 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1204 10:15:04.018067 140166617011968 hlog.py:32] train/00149/eval_val/24/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( mississippi ) ) ) ) )
I1204 10:15:04.018157 140166617011968 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:15:04.018235 140166617011968 hlog.py:32] train/00149/eval_val/24/corr False
I1204 10:15:04.018309 140166617011968 hlog.py:32] train/00149/eval_val/24 
I1204 10:15:04.018380 140166617011968 hlog.py:18] train/00149/eval_val/24{0.00s}
I1204 10:15:04.018467 140166617011968 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1204 10:15:04.018568 140166617011968 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.018659 140166617011968 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:15:04.018738 140166617011968 hlog.py:32] train/00149/eval_val/25/corr False
I1204 10:15:04.018811 140166617011968 hlog.py:32] train/00149/eval_val/25 
I1204 10:15:04.018883 140166617011968 hlog.py:18] train/00149/eval_val/25{0.00s}
I1204 10:15:04.018970 140166617011968 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1204 10:15:04.019070 140166617011968 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.019161 140166617011968 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 10:15:04.019240 140166617011968 hlog.py:32] train/00149/eval_val/26/corr False
I1204 10:15:04.019313 140166617011968 hlog.py:32] train/00149/eval_val/26 
I1204 10:15:04.019385 140166617011968 hlog.py:18] train/00149/eval_val/26{0.00s}
I1204 10:15:04.019481 140166617011968 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1204 10:15:04.019585 140166617011968 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) ) )
I1204 10:15:04.019676 140166617011968 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:15:04.019755 140166617011968 hlog.py:32] train/00149/eval_val/27/corr False
I1204 10:15:04.019829 140166617011968 hlog.py:32] train/00149/eval_val/27 
I1204 10:15:04.019901 140166617011968 hlog.py:18] train/00149/eval_val/27{0.00s}
I1204 10:15:04.019988 140166617011968 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1204 10:15:04.020089 140166617011968 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.020180 140166617011968 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:15:04.020258 140166617011968 hlog.py:32] train/00149/eval_val/28/corr False
I1204 10:15:04.020332 140166617011968 hlog.py:32] train/00149/eval_val/28 
I1204 10:15:04.020403 140166617011968 hlog.py:18] train/00149/eval_val/28{0.00s}
I1204 10:15:04.020490 140166617011968 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1204 10:15:04.020596 140166617011968 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.020688 140166617011968 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 10:15:04.020767 140166617011968 hlog.py:32] train/00149/eval_val/29/corr False
I1204 10:15:04.020840 140166617011968 hlog.py:32] train/00149/eval_val/29 
I1204 10:15:04.020912 140166617011968 hlog.py:18] train/00149/eval_val/29{0.00s}
I1204 10:15:04.021000 140166617011968 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1204 10:15:04.021101 140166617011968 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.021192 140166617011968 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 10:15:04.021271 140166617011968 hlog.py:32] train/00149/eval_val/30/corr False
I1204 10:15:04.021344 140166617011968 hlog.py:32] train/00149/eval_val/30 
I1204 10:15:04.021416 140166617011968 hlog.py:18] train/00149/eval_val/30{0.00s}
I1204 10:15:04.021503 140166617011968 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1204 10:15:04.021604 140166617011968 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.021695 140166617011968 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 10:15:04.021773 140166617011968 hlog.py:32] train/00149/eval_val/31/corr False
I1204 10:15:04.021847 140166617011968 hlog.py:32] train/00149/eval_val/31 
I1204 10:15:04.021919 140166617011968 hlog.py:18] train/00149/eval_val/31{0.00s}
I1204 10:15:04.022006 140166617011968 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1204 10:15:04.022110 140166617011968 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _shortest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _riverid ( rio grande ) ) ) ) ) )
I1204 10:15:04.022202 140166617011968 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 10:15:04.022281 140166617011968 hlog.py:32] train/00149/eval_val/32/corr False
I1204 10:15:04.022354 140166617011968 hlog.py:32] train/00149/eval_val/32 
I1204 10:15:04.022425 140166617011968 hlog.py:18] train/00149/eval_val/32{0.00s}
I1204 10:15:04.022513 140166617011968 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1204 10:15:04.022613 140166617011968 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _loc ( B , C ) ) )
I1204 10:15:04.022704 140166617011968 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:15:04.022783 140166617011968 hlog.py:32] train/00149/eval_val/33/corr False
I1204 10:15:04.022857 140166617011968 hlog.py:32] train/00149/eval_val/33 
I1204 10:15:04.022928 140166617011968 hlog.py:18] train/00149/eval_val/33{0.00s}
I1204 10:15:04.023016 140166617011968 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1204 10:15:04.023116 140166617011968 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1204 10:15:04.023207 140166617011968 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:15:04.023286 140166617011968 hlog.py:32] train/00149/eval_val/34/corr False
I1204 10:15:04.023359 140166617011968 hlog.py:32] train/00149/eval_val/34 
I1204 10:15:04.023437 140166617011968 hlog.py:18] train/00149/eval_val/34{0.00s}
I1204 10:15:04.023534 140166617011968 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1204 10:15:04.023638 140166617011968 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.023731 140166617011968 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.023821 140166617011968 hlog.py:32] train/00149/eval_val/35/corr False
I1204 10:15:04.023892 140166617011968 hlog.py:32] train/00149/eval_val/35 
I1204 10:15:04.023962 140166617011968 hlog.py:18] train/00149/eval_val/35{0.00s}
I1204 10:15:04.024047 140166617011968 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1204 10:15:04.024146 140166617011968 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.024235 140166617011968 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.024311 140166617011968 hlog.py:32] train/00149/eval_val/36/corr False
I1204 10:15:04.024381 140166617011968 hlog.py:32] train/00149/eval_val/36 
I1204 10:15:04.024450 140166617011968 hlog.py:18] train/00149/eval_val/36{0.00s}
I1204 10:15:04.024535 140166617011968 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1204 10:15:04.024634 140166617011968 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1204 10:15:04.024723 140166617011968 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.024799 140166617011968 hlog.py:32] train/00149/eval_val/37/corr False
I1204 10:15:04.024870 140166617011968 hlog.py:32] train/00149/eval_val/37 
I1204 10:15:04.024939 140166617011968 hlog.py:18] train/00149/eval_val/37{0.00s}
I1204 10:15:04.025024 140166617011968 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1204 10:15:04.025123 140166617011968 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.025213 140166617011968 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.025289 140166617011968 hlog.py:32] train/00149/eval_val/38/corr False
I1204 10:15:04.025360 140166617011968 hlog.py:32] train/00149/eval_val/38 
I1204 10:15:04.025429 140166617011968 hlog.py:18] train/00149/eval_val/38{0.00s}
I1204 10:15:04.025513 140166617011968 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1204 10:15:04.025604 140166617011968 hlog.py:32] train/00149/eval_val/39/pred ( A , ( _size ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:15:04.025694 140166617011968 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:15:04.025770 140166617011968 hlog.py:32] train/00149/eval_val/39/corr False
I1204 10:15:04.025840 140166617011968 hlog.py:32] train/00149/eval_val/39 
I1204 10:15:04.025909 140166617011968 hlog.py:18] train/00149/eval_val/39{0.00s}
I1204 10:15:04.025994 140166617011968 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1204 10:15:04.026090 140166617011968 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 10:15:04.026178 140166617011968 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 10:15:04.026254 140166617011968 hlog.py:32] train/00149/eval_val/40/corr False
I1204 10:15:04.026330 140166617011968 hlog.py:32] train/00149/eval_val/40 
I1204 10:15:04.026400 140166617011968 hlog.py:18] train/00149/eval_val/40{0.00s}
I1204 10:15:04.026484 140166617011968 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1204 10:15:04.026581 140166617011968 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1204 10:15:04.026669 140166617011968 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 10:15:04.026745 140166617011968 hlog.py:32] train/00149/eval_val/41/corr False
I1204 10:15:04.026816 140166617011968 hlog.py:32] train/00149/eval_val/41 
I1204 10:15:04.026885 140166617011968 hlog.py:18] train/00149/eval_val/41{0.00s}
I1204 10:15:04.026970 140166617011968 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1204 10:15:04.027069 140166617011968 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 10:15:04.027155 140166617011968 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1204 10:15:04.027230 140166617011968 hlog.py:32] train/00149/eval_val/42/corr False
I1204 10:15:04.027301 140166617011968 hlog.py:32] train/00149/eval_val/42 
I1204 10:15:04.027370 140166617011968 hlog.py:18] train/00149/eval_val/42{0.00s}
I1204 10:15:04.027482 140166617011968 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1204 10:15:04.027593 140166617011968 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _capital ( D ) , _const ( D , _cityid ( highest , _ ) ) ) ) , A ) )
I1204 10:15:04.027702 140166617011968 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1204 10:15:04.027779 140166617011968 hlog.py:32] train/00149/eval_val/43/corr False
I1204 10:15:04.027849 140166617011968 hlog.py:32] train/00149/eval_val/43 
I1204 10:15:04.027918 140166617011968 hlog.py:18] train/00149/eval_val/43{0.00s}
I1204 10:15:04.028012 140166617011968 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1204 10:15:04.028115 140166617011968 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 10:15:04.028208 140166617011968 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 10:15:04.028284 140166617011968 hlog.py:32] train/00149/eval_val/44/corr True
I1204 10:15:04.028355 140166617011968 hlog.py:32] train/00149/eval_val/44 
I1204 10:15:04.028424 140166617011968 hlog.py:18] train/00149/eval_val/44{0.00s}
I1204 10:15:04.028512 140166617011968 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1204 10:15:04.028609 140166617011968 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 10:15:04.028698 140166617011968 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 10:15:04.028774 140166617011968 hlog.py:32] train/00149/eval_val/45/corr False
I1204 10:15:04.028845 140166617011968 hlog.py:32] train/00149/eval_val/45 
I1204 10:15:04.028914 140166617011968 hlog.py:18] train/00149/eval_val/45{0.00s}
I1204 10:15:04.028999 140166617011968 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1204 10:15:04.029099 140166617011968 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , _state ( C ) ) , _population ( B , D ) ) ) , A ) )
I1204 10:15:04.029197 140166617011968 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 10:15:04.029274 140166617011968 hlog.py:32] train/00149/eval_val/46/corr False
I1204 10:15:04.029345 140166617011968 hlog.py:32] train/00149/eval_val/46 
I1204 10:15:04.029414 140166617011968 hlog.py:18] train/00149/eval_val/46{0.00s}
I1204 10:15:04.029498 140166617011968 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1204 10:15:04.029599 140166617011968 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , _traverse ( C , B ) ) , A ) )
I1204 10:15:04.029690 140166617011968 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 10:15:04.029766 140166617011968 hlog.py:32] train/00149/eval_val/47/corr False
I1204 10:15:04.029837 140166617011968 hlog.py:32] train/00149/eval_val/47 
I1204 10:15:04.029906 140166617011968 hlog.py:18] train/00149/eval_val/47{0.00s}
I1204 10:15:04.029992 140166617011968 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1204 10:15:04.030088 140166617011968 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) ) , A ) )
I1204 10:15:04.030179 140166617011968 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 10:15:04.030255 140166617011968 hlog.py:32] train/00149/eval_val/48/corr False
I1204 10:15:04.030326 140166617011968 hlog.py:32] train/00149/eval_val/48 
I1204 10:15:04.030395 140166617011968 hlog.py:18] train/00149/eval_val/48{0.00s}
I1204 10:15:04.030480 140166617011968 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1204 10:15:04.030586 140166617011968 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _loc ( C , D ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:15:04.030678 140166617011968 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:15:04.030754 140166617011968 hlog.py:32] train/00149/eval_val/49/corr False
I1204 10:15:04.030824 140166617011968 hlog.py:32] train/00149/eval_val/49 
I1204 10:15:04.030894 140166617011968 hlog.py:18] train/00149/eval_val/49{0.00s}
I1204 10:15:04.030978 140166617011968 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1204 10:15:04.031080 140166617011968 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 10:15:04.031172 140166617011968 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 10:15:04.031248 140166617011968 hlog.py:32] train/00149/eval_val/50/corr False
I1204 10:15:04.031319 140166617011968 hlog.py:32] train/00149/eval_val/50 
I1204 10:15:04.031401 140166617011968 hlog.py:18] train/00149/eval_val/50{0.00s}
I1204 10:15:04.031500 140166617011968 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1204 10:15:04.031609 140166617011968 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _loc ( C , D ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:15:04.031715 140166617011968 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:15:04.031797 140166617011968 hlog.py:32] train/00149/eval_val/51/corr False
I1204 10:15:04.031868 140166617011968 hlog.py:32] train/00149/eval_val/51 
I1204 10:15:04.031938 140166617011968 hlog.py:18] train/00149/eval_val/51{0.00s}
I1204 10:15:04.032022 140166617011968 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1204 10:15:04.032117 140166617011968 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount , _ ) ) , _loc ( B , A ) ) )
I1204 10:15:04.032205 140166617011968 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 10:15:04.032281 140166617011968 hlog.py:32] train/00149/eval_val/52/corr False
I1204 10:15:04.032352 140166617011968 hlog.py:32] train/00149/eval_val/52 
I1204 10:15:04.032421 140166617011968 hlog.py:18] train/00149/eval_val/52{0.00s}
I1204 10:15:04.032505 140166617011968 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1204 10:15:04.032599 140166617011968 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount , _ ) ) , _loc ( B , A ) ) )
I1204 10:15:04.032687 140166617011968 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 10:15:04.032763 140166617011968 hlog.py:32] train/00149/eval_val/53/corr False
I1204 10:15:04.032833 140166617011968 hlog.py:32] train/00149/eval_val/53 
I1204 10:15:04.032902 140166617011968 hlog.py:18] train/00149/eval_val/53{0.00s}
I1204 10:15:04.032992 140166617011968 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1204 10:15:04.033086 140166617011968 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.033173 140166617011968 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.033249 140166617011968 hlog.py:32] train/00149/eval_val/54/corr True
I1204 10:15:04.033320 140166617011968 hlog.py:32] train/00149/eval_val/54 
I1204 10:15:04.033389 140166617011968 hlog.py:18] train/00149/eval_val/54{0.00s}
I1204 10:15:04.033473 140166617011968 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1204 10:15:04.033570 140166617011968 hlog.py:32] train/00149/eval_val/55/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( arkansas ) ) ) , A ) )
I1204 10:15:04.033658 140166617011968 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 10:15:04.033733 140166617011968 hlog.py:32] train/00149/eval_val/55/corr False
I1204 10:15:04.033804 140166617011968 hlog.py:32] train/00149/eval_val/55 
I1204 10:15:04.033873 140166617011968 hlog.py:18] train/00149/eval_val/55{0.00s}
I1204 10:15:04.033962 140166617011968 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1204 10:15:04.034057 140166617011968 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:15:04.034145 140166617011968 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:15:04.034221 140166617011968 hlog.py:32] train/00149/eval_val/56/corr True
I1204 10:15:04.034291 140166617011968 hlog.py:32] train/00149/eval_val/56 
I1204 10:15:04.034360 140166617011968 hlog.py:18] train/00149/eval_val/56{0.00s}
I1204 10:15:04.034447 140166617011968 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1204 10:15:04.034541 140166617011968 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.034628 140166617011968 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.034709 140166617011968 hlog.py:32] train/00149/eval_val/57/corr False
I1204 10:15:04.034780 140166617011968 hlog.py:32] train/00149/eval_val/57 
I1204 10:15:04.034849 140166617011968 hlog.py:18] train/00149/eval_val/57{0.00s}
I1204 10:15:04.034935 140166617011968 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1204 10:15:04.035030 140166617011968 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.035117 140166617011968 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.035193 140166617011968 hlog.py:32] train/00149/eval_val/58/corr False
I1204 10:15:04.035264 140166617011968 hlog.py:32] train/00149/eval_val/58 
I1204 10:15:04.035332 140166617011968 hlog.py:18] train/00149/eval_val/58{0.00s}
I1204 10:15:04.035434 140166617011968 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1204 10:15:04.035530 140166617011968 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 10:15:04.035618 140166617011968 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 10:15:04.035694 140166617011968 hlog.py:32] train/00149/eval_val/59/corr True
I1204 10:15:04.035765 140166617011968 hlog.py:32] train/00149/eval_val/59 
I1204 10:15:04.035834 140166617011968 hlog.py:18] train/00149/eval_val/59{0.00s}
I1204 10:15:04.035920 140166617011968 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1204 10:15:04.036014 140166617011968 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 10:15:04.036101 140166617011968 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 10:15:04.036177 140166617011968 hlog.py:32] train/00149/eval_val/60/corr False
I1204 10:15:04.036248 140166617011968 hlog.py:32] train/00149/eval_val/60 
I1204 10:15:04.036316 140166617011968 hlog.py:18] train/00149/eval_val/60{0.00s}
I1204 10:15:04.036403 140166617011968 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1204 10:15:04.036497 140166617011968 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:15:04.036585 140166617011968 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:15:04.036661 140166617011968 hlog.py:32] train/00149/eval_val/61/corr False
I1204 10:15:04.036732 140166617011968 hlog.py:32] train/00149/eval_val/61 
I1204 10:15:04.036801 140166617011968 hlog.py:18] train/00149/eval_val/61{0.00s}
I1204 10:15:04.036887 140166617011968 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1204 10:15:04.036981 140166617011968 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 10:15:04.037068 140166617011968 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 10:15:04.037144 140166617011968 hlog.py:32] train/00149/eval_val/62/corr False
I1204 10:15:04.037214 140166617011968 hlog.py:32] train/00149/eval_val/62 
I1204 10:15:04.037283 140166617011968 hlog.py:18] train/00149/eval_val/62{0.00s}
I1204 10:15:04.037370 140166617011968 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1204 10:15:04.037464 140166617011968 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.037551 140166617011968 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.037626 140166617011968 hlog.py:32] train/00149/eval_val/63/corr False
I1204 10:15:04.037702 140166617011968 hlog.py:32] train/00149/eval_val/63 
I1204 10:15:04.037772 140166617011968 hlog.py:18] train/00149/eval_val/63{0.00s}
I1204 10:15:04.270145 140166617011968 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1204 10:15:04.270349 140166617011968 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 10:15:04.270449 140166617011968 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 10:15:04.270533 140166617011968 hlog.py:32] train/00149/eval_val/64/corr False
I1204 10:15:04.270610 140166617011968 hlog.py:32] train/00149/eval_val/64 
I1204 10:15:04.270687 140166617011968 hlog.py:18] train/00149/eval_val/64{0.00s}
I1204 10:15:04.270778 140166617011968 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1204 10:15:04.270876 140166617011968 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.270965 140166617011968 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.271042 140166617011968 hlog.py:32] train/00149/eval_val/65/corr False
I1204 10:15:04.271113 140166617011968 hlog.py:32] train/00149/eval_val/65 
I1204 10:15:04.271183 140166617011968 hlog.py:18] train/00149/eval_val/65{0.00s}
I1204 10:15:04.271274 140166617011968 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1204 10:15:04.271368 140166617011968 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.271483 140166617011968 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.271562 140166617011968 hlog.py:32] train/00149/eval_val/66/corr True
I1204 10:15:04.271635 140166617011968 hlog.py:32] train/00149/eval_val/66 
I1204 10:15:04.271707 140166617011968 hlog.py:18] train/00149/eval_val/66{0.00s}
I1204 10:15:04.271802 140166617011968 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1204 10:15:04.271912 140166617011968 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.272001 140166617011968 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.272077 140166617011968 hlog.py:32] train/00149/eval_val/67/corr True
I1204 10:15:04.272148 140166617011968 hlog.py:32] train/00149/eval_val/67 
I1204 10:15:04.272217 140166617011968 hlog.py:18] train/00149/eval_val/67{0.00s}
I1204 10:15:04.272309 140166617011968 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1204 10:15:04.272406 140166617011968 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 10:15:04.272496 140166617011968 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 10:15:04.272572 140166617011968 hlog.py:32] train/00149/eval_val/68/corr True
I1204 10:15:04.272643 140166617011968 hlog.py:32] train/00149/eval_val/68 
I1204 10:15:04.272712 140166617011968 hlog.py:18] train/00149/eval_val/68{0.00s}
I1204 10:15:04.272803 140166617011968 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1204 10:15:04.272899 140166617011968 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.272989 140166617011968 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.273064 140166617011968 hlog.py:32] train/00149/eval_val/69/corr True
I1204 10:15:04.273149 140166617011968 hlog.py:32] train/00149/eval_val/69 
I1204 10:15:04.273219 140166617011968 hlog.py:18] train/00149/eval_val/69{0.00s}
I1204 10:15:04.273305 140166617011968 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1204 10:15:04.273397 140166617011968 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 10:15:04.273484 140166617011968 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.273560 140166617011968 hlog.py:32] train/00149/eval_val/70/corr False
I1204 10:15:04.273630 140166617011968 hlog.py:32] train/00149/eval_val/70 
I1204 10:15:04.273699 140166617011968 hlog.py:18] train/00149/eval_val/70{0.00s}
I1204 10:15:04.273784 140166617011968 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1204 10:15:04.273876 140166617011968 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 10:15:04.273963 140166617011968 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 10:15:04.274038 140166617011968 hlog.py:32] train/00149/eval_val/71/corr False
I1204 10:15:04.274108 140166617011968 hlog.py:32] train/00149/eval_val/71 
I1204 10:15:04.274177 140166617011968 hlog.py:18] train/00149/eval_val/71{0.00s}
I1204 10:15:04.274262 140166617011968 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1204 10:15:04.274354 140166617011968 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 10:15:04.274441 140166617011968 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 10:15:04.274517 140166617011968 hlog.py:32] train/00149/eval_val/72/corr False
I1204 10:15:04.274588 140166617011968 hlog.py:32] train/00149/eval_val/72 
I1204 10:15:04.274657 140166617011968 hlog.py:18] train/00149/eval_val/72{0.00s}
I1204 10:15:04.274741 140166617011968 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1204 10:15:04.274834 140166617011968 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1204 10:15:04.274920 140166617011968 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1204 10:15:04.274996 140166617011968 hlog.py:32] train/00149/eval_val/73/corr False
I1204 10:15:04.275066 140166617011968 hlog.py:32] train/00149/eval_val/73 
I1204 10:15:04.275136 140166617011968 hlog.py:18] train/00149/eval_val/73{0.00s}
I1204 10:15:04.275220 140166617011968 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1204 10:15:04.275313 140166617011968 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1204 10:15:04.275399 140166617011968 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:15:04.275484 140166617011968 hlog.py:32] train/00149/eval_val/74/corr False
I1204 10:15:04.275555 140166617011968 hlog.py:32] train/00149/eval_val/74 
I1204 10:15:04.275624 140166617011968 hlog.py:18] train/00149/eval_val/74{0.00s}
I1204 10:15:04.275710 140166617011968 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1204 10:15:04.275803 140166617011968 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , kilometers ) ) ) )
I1204 10:15:04.275889 140166617011968 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1204 10:15:04.275964 140166617011968 hlog.py:32] train/00149/eval_val/75/corr False
I1204 10:15:04.276034 140166617011968 hlog.py:32] train/00149/eval_val/75 
I1204 10:15:04.276104 140166617011968 hlog.py:18] train/00149/eval_val/75{0.00s}
I1204 10:15:04.276195 140166617011968 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1204 10:15:04.276288 140166617011968 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 10:15:04.276375 140166617011968 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:15:04.276451 140166617011968 hlog.py:32] train/00149/eval_val/76/corr False
I1204 10:15:04.276521 140166617011968 hlog.py:32] train/00149/eval_val/76 
I1204 10:15:04.276590 140166617011968 hlog.py:18] train/00149/eval_val/76{0.00s}
I1204 10:15:04.276674 140166617011968 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1204 10:15:04.276767 140166617011968 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1204 10:15:04.276853 140166617011968 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 10:15:04.276929 140166617011968 hlog.py:32] train/00149/eval_val/77/corr False
I1204 10:15:04.276999 140166617011968 hlog.py:32] train/00149/eval_val/77 
I1204 10:15:04.277068 140166617011968 hlog.py:18] train/00149/eval_val/77{0.00s}
I1204 10:15:04.277153 140166617011968 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1204 10:15:04.277245 140166617011968 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1204 10:15:04.277331 140166617011968 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1204 10:15:04.277406 140166617011968 hlog.py:32] train/00149/eval_val/78/corr False
I1204 10:15:04.277477 140166617011968 hlog.py:32] train/00149/eval_val/78 
I1204 10:15:04.277562 140166617011968 hlog.py:18] train/00149/eval_val/78{0.00s}
I1204 10:15:04.277650 140166617011968 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1204 10:15:04.277746 140166617011968 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1204 10:15:04.277835 140166617011968 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1204 10:15:04.277926 140166617011968 hlog.py:32] train/00149/eval_val/79/corr False
I1204 10:15:04.277997 140166617011968 hlog.py:32] train/00149/eval_val/79 
I1204 10:15:04.278067 140166617011968 hlog.py:18] train/00149/eval_val/79{0.00s}
I1204 10:15:04.278151 140166617011968 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1204 10:15:04.278243 140166617011968 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:15:04.278329 140166617011968 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.278404 140166617011968 hlog.py:32] train/00149/eval_val/80/corr False
I1204 10:15:04.278475 140166617011968 hlog.py:32] train/00149/eval_val/80 
I1204 10:15:04.278544 140166617011968 hlog.py:18] train/00149/eval_val/80{0.00s}
I1204 10:15:04.278629 140166617011968 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1204 10:15:04.278717 140166617011968 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _state ( B ) ) )
I1204 10:15:04.278803 140166617011968 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.278879 140166617011968 hlog.py:32] train/00149/eval_val/81/corr False
I1204 10:15:04.278949 140166617011968 hlog.py:32] train/00149/eval_val/81 
I1204 10:15:04.279018 140166617011968 hlog.py:18] train/00149/eval_val/81{0.00s}
I1204 10:15:04.279103 140166617011968 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1204 10:15:04.279195 140166617011968 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1204 10:15:04.279289 140166617011968 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1204 10:15:04.279381 140166617011968 hlog.py:32] train/00149/eval_val/82/corr False
I1204 10:15:04.279465 140166617011968 hlog.py:32] train/00149/eval_val/82 
I1204 10:15:04.279537 140166617011968 hlog.py:18] train/00149/eval_val/82{0.00s}
I1204 10:15:04.279628 140166617011968 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1204 10:15:04.279723 140166617011968 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( B , A ) , _state ( B ) ) ) )
I1204 10:15:04.279823 140166617011968 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 10:15:04.279899 140166617011968 hlog.py:32] train/00149/eval_val/83/corr False
I1204 10:15:04.279970 140166617011968 hlog.py:32] train/00149/eval_val/83 
I1204 10:15:04.280040 140166617011968 hlog.py:18] train/00149/eval_val/83{0.00s}
I1204 10:15:04.280126 140166617011968 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1204 10:15:04.280222 140166617011968 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _population ( B , A ) , _largest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) )
I1204 10:15:04.280308 140166617011968 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:15:04.280384 140166617011968 hlog.py:32] train/00149/eval_val/84/corr False
I1204 10:15:04.280455 140166617011968 hlog.py:32] train/00149/eval_val/84 
I1204 10:15:04.280524 140166617011968 hlog.py:18] train/00149/eval_val/84{0.00s}
I1204 10:15:04.280610 140166617011968 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1204 10:15:04.280704 140166617011968 hlog.py:32] train/00149/eval_val/85/pred ( A , _smallest ( B , ( _population ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.280791 140166617011968 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:15:04.280866 140166617011968 hlog.py:32] train/00149/eval_val/85/corr False
I1204 10:15:04.280937 140166617011968 hlog.py:32] train/00149/eval_val/85 
I1204 10:15:04.281007 140166617011968 hlog.py:18] train/00149/eval_val/85{0.00s}
I1204 10:15:04.281093 140166617011968 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1204 10:15:04.281198 140166617011968 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _const ( C , _riverid ( a ) ) , _river ( C ) ) ) ) )
I1204 10:15:04.281289 140166617011968 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1204 10:15:04.281364 140166617011968 hlog.py:32] train/00149/eval_val/86/corr False
I1204 10:15:04.281436 140166617011968 hlog.py:32] train/00149/eval_val/86 
I1204 10:15:04.281505 140166617011968 hlog.py:18] train/00149/eval_val/86{0.00s}
I1204 10:15:04.281591 140166617011968 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1204 10:15:04.281698 140166617011968 hlog.py:32] train/00149/eval_val/87/pred ( A , _largest ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1204 10:15:04.281793 140166617011968 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:15:04.281869 140166617011968 hlog.py:32] train/00149/eval_val/87/corr False
I1204 10:15:04.281940 140166617011968 hlog.py:32] train/00149/eval_val/87 
I1204 10:15:04.282009 140166617011968 hlog.py:18] train/00149/eval_val/87{0.00s}
I1204 10:15:04.282099 140166617011968 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1204 10:15:04.282199 140166617011968 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 10:15:04.282287 140166617011968 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 10:15:04.282362 140166617011968 hlog.py:32] train/00149/eval_val/88/corr True
I1204 10:15:04.282433 140166617011968 hlog.py:32] train/00149/eval_val/88 
I1204 10:15:04.282502 140166617011968 hlog.py:18] train/00149/eval_val/88{0.00s}
I1204 10:15:04.282588 140166617011968 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1204 10:15:04.282687 140166617011968 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _lowest ( C , _place ( C ) ) ) )
I1204 10:15:04.282780 140166617011968 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:15:04.282856 140166617011968 hlog.py:32] train/00149/eval_val/89/corr False
I1204 10:15:04.282926 140166617011968 hlog.py:32] train/00149/eval_val/89 
I1204 10:15:04.282995 140166617011968 hlog.py:18] train/00149/eval_val/89{0.00s}
I1204 10:15:04.283082 140166617011968 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1204 10:15:04.283214 140166617011968 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _largest ( C , ( _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) ) ) )
I1204 10:15:04.283312 140166617011968 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1204 10:15:04.283388 140166617011968 hlog.py:32] train/00149/eval_val/90/corr False
I1204 10:15:04.283470 140166617011968 hlog.py:32] train/00149/eval_val/90 
I1204 10:15:04.283540 140166617011968 hlog.py:18] train/00149/eval_val/90{0.00s}
I1204 10:15:04.283631 140166617011968 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1204 10:15:04.283728 140166617011968 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.283818 140166617011968 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.283894 140166617011968 hlog.py:32] train/00149/eval_val/91/corr True
I1204 10:15:04.283965 140166617011968 hlog.py:32] train/00149/eval_val/91 
I1204 10:15:04.284034 140166617011968 hlog.py:18] train/00149/eval_val/91{0.00s}
I1204 10:15:04.284124 140166617011968 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1204 10:15:04.284220 140166617011968 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.284309 140166617011968 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.284384 140166617011968 hlog.py:32] train/00149/eval_val/92/corr True
I1204 10:15:04.284455 140166617011968 hlog.py:32] train/00149/eval_val/92 
I1204 10:15:04.284525 140166617011968 hlog.py:18] train/00149/eval_val/92{0.00s}
I1204 10:15:04.284612 140166617011968 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1204 10:15:04.284708 140166617011968 hlog.py:32] train/00149/eval_val/93/pred ( A , _largest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.284797 140166617011968 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.284879 140166617011968 hlog.py:32] train/00149/eval_val/93/corr False
I1204 10:15:04.284951 140166617011968 hlog.py:32] train/00149/eval_val/93 
I1204 10:15:04.285020 140166617011968 hlog.py:18] train/00149/eval_val/93{0.00s}
I1204 10:15:04.285106 140166617011968 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1204 10:15:04.285207 140166617011968 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _area ( B , A ) , _highest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:15:04.285297 140166617011968 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.285373 140166617011968 hlog.py:32] train/00149/eval_val/94/corr False
I1204 10:15:04.285444 140166617011968 hlog.py:32] train/00149/eval_val/94 
I1204 10:15:04.285512 140166617011968 hlog.py:18] train/00149/eval_val/94{0.00s}
I1204 10:15:04.285598 140166617011968 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1204 10:15:04.285698 140166617011968 hlog.py:32] train/00149/eval_val/95/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:15:04.285787 140166617011968 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.285863 140166617011968 hlog.py:32] train/00149/eval_val/95/corr False
I1204 10:15:04.285934 140166617011968 hlog.py:32] train/00149/eval_val/95 
I1204 10:15:04.286003 140166617011968 hlog.py:18] train/00149/eval_val/95{0.00s}
I1204 10:15:04.286096 140166617011968 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1204 10:15:04.286196 140166617011968 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 10:15:04.286288 140166617011968 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 10:15:04.286363 140166617011968 hlog.py:32] train/00149/eval_val/96/corr True
I1204 10:15:04.286435 140166617011968 hlog.py:32] train/00149/eval_val/96 
I1204 10:15:04.286504 140166617011968 hlog.py:18] train/00149/eval_val/96{0.00s}
I1204 10:15:04.286592 140166617011968 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1204 10:15:04.286692 140166617011968 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:15:04.286811 140166617011968 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 10:15:04.286889 140166617011968 hlog.py:32] train/00149/eval_val/97/corr False
I1204 10:15:04.286960 140166617011968 hlog.py:32] train/00149/eval_val/97 
I1204 10:15:04.287029 140166617011968 hlog.py:18] train/00149/eval_val/97{0.00s}
I1204 10:15:04.287122 140166617011968 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1204 10:15:04.287220 140166617011968 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 10:15:04.287310 140166617011968 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 10:15:04.287386 140166617011968 hlog.py:32] train/00149/eval_val/98/corr True
I1204 10:15:04.287465 140166617011968 hlog.py:32] train/00149/eval_val/98 
I1204 10:15:04.287540 140166617011968 hlog.py:18] train/00149/eval_val/98{0.00s}
I1204 10:15:04.287633 140166617011968 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1204 10:15:04.287732 140166617011968 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:15:04.287823 140166617011968 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:15:04.287899 140166617011968 hlog.py:32] train/00149/eval_val/99/corr True
I1204 10:15:04.287969 140166617011968 hlog.py:32] train/00149/eval_val/99 
I1204 10:15:04.288038 140166617011968 hlog.py:18] train/00149/eval_val/99{0.00s}
I1204 10:15:04.288123 140166617011968 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1204 10:15:04.288219 140166617011968 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.288310 140166617011968 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 10:15:04.288387 140166617011968 hlog.py:32] train/00149/eval_val/100/corr False
I1204 10:15:04.288457 140166617011968 hlog.py:32] train/00149/eval_val/100 
I1204 10:15:04.288526 140166617011968 hlog.py:18] train/00149/eval_val/100{0.00s}
I1204 10:15:04.288612 140166617011968 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1204 10:15:04.288708 140166617011968 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:15:04.288800 140166617011968 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 10:15:04.288876 140166617011968 hlog.py:32] train/00149/eval_val/101/corr False
I1204 10:15:04.288946 140166617011968 hlog.py:32] train/00149/eval_val/101 
I1204 10:15:04.289016 140166617011968 hlog.py:18] train/00149/eval_val/101{0.00s}
I1204 10:15:04.289101 140166617011968 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1204 10:15:04.289198 140166617011968 hlog.py:32] train/00149/eval_val/102/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1204 10:15:04.289285 140166617011968 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 10:15:04.289361 140166617011968 hlog.py:32] train/00149/eval_val/102/corr False
I1204 10:15:04.289432 140166617011968 hlog.py:32] train/00149/eval_val/102 
I1204 10:15:04.289501 140166617011968 hlog.py:18] train/00149/eval_val/102{0.00s}
I1204 10:15:04.289591 140166617011968 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1204 10:15:04.289685 140166617011968 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 10:15:04.289772 140166617011968 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 10:15:04.289848 140166617011968 hlog.py:32] train/00149/eval_val/103/corr True
I1204 10:15:04.289918 140166617011968 hlog.py:32] train/00149/eval_val/103 
I1204 10:15:04.289987 140166617011968 hlog.py:18] train/00149/eval_val/103{0.00s}
I1204 10:15:04.290077 140166617011968 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1204 10:15:04.290171 140166617011968 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.290258 140166617011968 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.290340 140166617011968 hlog.py:32] train/00149/eval_val/104/corr True
I1204 10:15:04.290412 140166617011968 hlog.py:32] train/00149/eval_val/104 
I1204 10:15:04.290481 140166617011968 hlog.py:18] train/00149/eval_val/104{0.00s}
I1204 10:15:04.290571 140166617011968 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1204 10:15:04.290665 140166617011968 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 10:15:04.290753 140166617011968 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 10:15:04.290828 140166617011968 hlog.py:32] train/00149/eval_val/105/corr True
I1204 10:15:04.290898 140166617011968 hlog.py:32] train/00149/eval_val/105 
I1204 10:15:04.290967 140166617011968 hlog.py:18] train/00149/eval_val/105{0.00s}
I1204 10:15:04.291056 140166617011968 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1204 10:15:04.291150 140166617011968 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 10:15:04.291237 140166617011968 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 10:15:04.291313 140166617011968 hlog.py:32] train/00149/eval_val/106/corr True
I1204 10:15:04.291384 140166617011968 hlog.py:32] train/00149/eval_val/106 
I1204 10:15:04.291463 140166617011968 hlog.py:18] train/00149/eval_val/106{0.00s}
I1204 10:15:04.291553 140166617011968 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1204 10:15:04.291647 140166617011968 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.291734 140166617011968 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.291810 140166617011968 hlog.py:32] train/00149/eval_val/107/corr True
I1204 10:15:04.291880 140166617011968 hlog.py:32] train/00149/eval_val/107 
I1204 10:15:04.291949 140166617011968 hlog.py:18] train/00149/eval_val/107{0.00s}
I1204 10:15:04.292038 140166617011968 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1204 10:15:04.292132 140166617011968 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 10:15:04.292219 140166617011968 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 10:15:04.292295 140166617011968 hlog.py:32] train/00149/eval_val/108/corr True
I1204 10:15:04.292366 140166617011968 hlog.py:32] train/00149/eval_val/108 
I1204 10:15:04.292434 140166617011968 hlog.py:18] train/00149/eval_val/108{0.00s}
I1204 10:15:04.292524 140166617011968 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1204 10:15:04.292618 140166617011968 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 10:15:04.292705 140166617011968 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 10:15:04.292781 140166617011968 hlog.py:32] train/00149/eval_val/109/corr True
I1204 10:15:04.292851 140166617011968 hlog.py:32] train/00149/eval_val/109 
I1204 10:15:04.292920 140166617011968 hlog.py:18] train/00149/eval_val/109{0.00s}
I1204 10:15:04.293010 140166617011968 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1204 10:15:04.293104 140166617011968 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.293192 140166617011968 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:15:04.293273 140166617011968 hlog.py:32] train/00149/eval_val/110/corr True
I1204 10:15:04.293344 140166617011968 hlog.py:32] train/00149/eval_val/110 
I1204 10:15:04.293414 140166617011968 hlog.py:18] train/00149/eval_val/110{0.00s}
I1204 10:15:04.293504 140166617011968 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1204 10:15:04.293598 140166617011968 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 10:15:04.293686 140166617011968 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 10:15:04.293761 140166617011968 hlog.py:32] train/00149/eval_val/111/corr True
I1204 10:15:04.293832 140166617011968 hlog.py:32] train/00149/eval_val/111 
I1204 10:15:04.293901 140166617011968 hlog.py:18] train/00149/eval_val/111{0.00s}
I1204 10:15:04.293990 140166617011968 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1204 10:15:04.294084 140166617011968 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:15:04.294171 140166617011968 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:15:04.294246 140166617011968 hlog.py:32] train/00149/eval_val/112/corr True
I1204 10:15:04.294317 140166617011968 hlog.py:32] train/00149/eval_val/112 
I1204 10:15:04.294386 140166617011968 hlog.py:18] train/00149/eval_val/112{0.00s}
I1204 10:15:04.294476 140166617011968 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1204 10:15:04.294570 140166617011968 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:15:04.294658 140166617011968 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:15:04.294734 140166617011968 hlog.py:32] train/00149/eval_val/113/corr True
I1204 10:15:04.294805 140166617011968 hlog.py:32] train/00149/eval_val/113 
I1204 10:15:04.294874 140166617011968 hlog.py:18] train/00149/eval_val/113{0.00s}
I1204 10:15:04.294958 140166617011968 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1204 10:15:04.295053 140166617011968 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:15:04.295141 140166617011968 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:15:04.295217 140166617011968 hlog.py:32] train/00149/eval_val/114/corr False
I1204 10:15:04.295287 140166617011968 hlog.py:32] train/00149/eval_val/114 
I1204 10:15:04.295356 140166617011968 hlog.py:18] train/00149/eval_val/114{0.00s}
I1204 10:15:04.295448 140166617011968 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1204 10:15:04.295544 140166617011968 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 10:15:04.295632 140166617011968 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1204 10:15:04.295708 140166617011968 hlog.py:32] train/00149/eval_val/115/corr False
I1204 10:15:04.295780 140166617011968 hlog.py:32] train/00149/eval_val/115 
I1204 10:15:04.295849 140166617011968 hlog.py:18] train/00149/eval_val/115{0.00s}
I1204 10:15:04.295938 140166617011968 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1204 10:15:04.296031 140166617011968 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.296119 140166617011968 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:15:04.296201 140166617011968 hlog.py:32] train/00149/eval_val/116/corr True
I1204 10:15:04.296273 140166617011968 hlog.py:32] train/00149/eval_val/116 
I1204 10:15:04.296342 140166617011968 hlog.py:18] train/00149/eval_val/116{0.00s}
I1204 10:15:04.296433 140166617011968 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1204 10:15:04.296529 140166617011968 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.296618 140166617011968 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.296694 140166617011968 hlog.py:32] train/00149/eval_val/117/corr True
I1204 10:15:04.296765 140166617011968 hlog.py:32] train/00149/eval_val/117 
I1204 10:15:04.296833 140166617011968 hlog.py:18] train/00149/eval_val/117{0.00s}
I1204 10:15:04.296924 140166617011968 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1204 10:15:04.297020 140166617011968 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.297109 140166617011968 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.297185 140166617011968 hlog.py:32] train/00149/eval_val/118/corr True
I1204 10:15:04.297256 140166617011968 hlog.py:32] train/00149/eval_val/118 
I1204 10:15:04.297324 140166617011968 hlog.py:18] train/00149/eval_val/118{0.00s}
I1204 10:15:04.297415 140166617011968 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1204 10:15:04.297512 140166617011968 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.297601 140166617011968 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:15:04.297677 140166617011968 hlog.py:32] train/00149/eval_val/119/corr True
I1204 10:15:04.297747 140166617011968 hlog.py:32] train/00149/eval_val/119 
I1204 10:15:04.297816 140166617011968 hlog.py:18] train/00149/eval_val/119{0.00s}
I1204 10:15:04.297904 140166617011968 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1204 10:15:04.297991 140166617011968 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 10:15:04.298074 140166617011968 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 10:15:04.298150 140166617011968 hlog.py:32] train/00149/eval_val/120/corr True
I1204 10:15:04.298220 140166617011968 hlog.py:32] train/00149/eval_val/120 
I1204 10:15:04.298290 140166617011968 hlog.py:18] train/00149/eval_val/120{0.00s}
I1204 10:15:04.298377 140166617011968 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1204 10:15:04.298465 140166617011968 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 10:15:04.298547 140166617011968 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 10:15:04.298623 140166617011968 hlog.py:32] train/00149/eval_val/121/corr True
I1204 10:15:04.298694 140166617011968 hlog.py:32] train/00149/eval_val/121 
I1204 10:15:04.298763 140166617011968 hlog.py:18] train/00149/eval_val/121{0.00s}
I1204 10:15:04.298853 140166617011968 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1204 10:15:04.298949 140166617011968 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 10:15:04.299038 140166617011968 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 10:15:04.299119 140166617011968 hlog.py:32] train/00149/eval_val/122/corr True
I1204 10:15:04.299191 140166617011968 hlog.py:32] train/00149/eval_val/122 
I1204 10:15:04.299259 140166617011968 hlog.py:18] train/00149/eval_val/122{0.00s}
I1204 10:15:04.299350 140166617011968 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1204 10:15:04.299453 140166617011968 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 10:15:04.299544 140166617011968 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 10:15:04.299619 140166617011968 hlog.py:32] train/00149/eval_val/123/corr True
I1204 10:15:04.299690 140166617011968 hlog.py:32] train/00149/eval_val/123 
I1204 10:15:04.299759 140166617011968 hlog.py:18] train/00149/eval_val/123{0.00s}
I1204 10:15:04.299849 140166617011968 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1204 10:15:04.299945 140166617011968 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 10:15:04.300034 140166617011968 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 10:15:04.300109 140166617011968 hlog.py:32] train/00149/eval_val/124/corr True
I1204 10:15:04.300180 140166617011968 hlog.py:32] train/00149/eval_val/124 
I1204 10:15:04.300248 140166617011968 hlog.py:18] train/00149/eval_val/124{0.00s}
I1204 10:15:04.300338 140166617011968 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1204 10:15:04.300434 140166617011968 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 10:15:04.300523 140166617011968 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 10:15:04.300599 140166617011968 hlog.py:32] train/00149/eval_val/125/corr True
I1204 10:15:04.300669 140166617011968 hlog.py:32] train/00149/eval_val/125 
I1204 10:15:04.300738 140166617011968 hlog.py:18] train/00149/eval_val/125{0.00s}
I1204 10:15:04.300826 140166617011968 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1204 10:15:04.300918 140166617011968 hlog.py:32] train/00149/eval_val/126/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.301003 140166617011968 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.301079 140166617011968 hlog.py:32] train/00149/eval_val/126/corr False
I1204 10:15:04.301150 140166617011968 hlog.py:32] train/00149/eval_val/126 
I1204 10:15:04.301219 140166617011968 hlog.py:18] train/00149/eval_val/126{0.00s}
I1204 10:15:04.301306 140166617011968 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1204 10:15:04.301397 140166617011968 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.301482 140166617011968 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.301558 140166617011968 hlog.py:32] train/00149/eval_val/127/corr False
I1204 10:15:04.301629 140166617011968 hlog.py:32] train/00149/eval_val/127 
I1204 10:15:04.301698 140166617011968 hlog.py:18] train/00149/eval_val/127{0.00s}
I1204 10:15:04.439187 140166617011968 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1204 10:15:04.439315 140166617011968 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.439427 140166617011968 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.439511 140166617011968 hlog.py:32] train/00149/eval_val/128/corr False
I1204 10:15:04.439586 140166617011968 hlog.py:32] train/00149/eval_val/128 
I1204 10:15:04.439658 140166617011968 hlog.py:18] train/00149/eval_val/128{0.00s}
I1204 10:15:04.439749 140166617011968 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1204 10:15:04.439843 140166617011968 hlog.py:32] train/00149/eval_val/129/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.439929 140166617011968 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.440006 140166617011968 hlog.py:32] train/00149/eval_val/129/corr False
I1204 10:15:04.440077 140166617011968 hlog.py:32] train/00149/eval_val/129 
I1204 10:15:04.440147 140166617011968 hlog.py:18] train/00149/eval_val/129{0.00s}
I1204 10:15:04.440232 140166617011968 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1204 10:15:04.440326 140166617011968 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1204 10:15:04.440412 140166617011968 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.440488 140166617011968 hlog.py:32] train/00149/eval_val/130/corr False
I1204 10:15:04.440558 140166617011968 hlog.py:32] train/00149/eval_val/130 
I1204 10:15:04.440628 140166617011968 hlog.py:18] train/00149/eval_val/130{0.00s}
I1204 10:15:04.440715 140166617011968 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1204 10:15:04.440807 140166617011968 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.440892 140166617011968 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.440968 140166617011968 hlog.py:32] train/00149/eval_val/131/corr False
I1204 10:15:04.441038 140166617011968 hlog.py:32] train/00149/eval_val/131 
I1204 10:15:04.441107 140166617011968 hlog.py:18] train/00149/eval_val/131{0.00s}
I1204 10:15:04.441192 140166617011968 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1204 10:15:04.441285 140166617011968 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1204 10:15:04.441371 140166617011968 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:15:04.441447 140166617011968 hlog.py:32] train/00149/eval_val/132/corr False
I1204 10:15:04.441518 140166617011968 hlog.py:32] train/00149/eval_val/132 
I1204 10:15:04.441587 140166617011968 hlog.py:18] train/00149/eval_val/132{0.00s}
I1204 10:15:04.441673 140166617011968 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1204 10:15:04.441770 140166617011968 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _state ( C ) , _loc ( C , A ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:15:04.441855 140166617011968 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1204 10:15:04.441931 140166617011968 hlog.py:32] train/00149/eval_val/133/corr False
I1204 10:15:04.442003 140166617011968 hlog.py:32] train/00149/eval_val/133 
I1204 10:15:04.442072 140166617011968 hlog.py:18] train/00149/eval_val/133{0.00s}
I1204 10:15:04.442158 140166617011968 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1204 10:15:04.442258 140166617011968 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:15:04.442350 140166617011968 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:15:04.442433 140166617011968 hlog.py:32] train/00149/eval_val/134/corr False
I1204 10:15:04.442504 140166617011968 hlog.py:32] train/00149/eval_val/134 
I1204 10:15:04.442574 140166617011968 hlog.py:18] train/00149/eval_val/134{0.00s}
I1204 10:15:04.442660 140166617011968 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1204 10:15:04.442763 140166617011968 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _traverse ( C , B ) , _largest ( C , ( _state ( B ) , _traverse ( C , B ) ) ) ) )
I1204 10:15:04.442856 140166617011968 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:15:04.442932 140166617011968 hlog.py:32] train/00149/eval_val/135/corr False
I1204 10:15:04.443003 140166617011968 hlog.py:32] train/00149/eval_val/135 
I1204 10:15:04.443073 140166617011968 hlog.py:18] train/00149/eval_val/135{0.00s}
I1204 10:15:04.443162 140166617011968 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1204 10:15:04.443257 140166617011968 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.443346 140166617011968 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.443429 140166617011968 hlog.py:32] train/00149/eval_val/136/corr True
I1204 10:15:04.443502 140166617011968 hlog.py:32] train/00149/eval_val/136 
I1204 10:15:04.443571 140166617011968 hlog.py:18] train/00149/eval_val/136{0.00s}
I1204 10:15:04.443658 140166617011968 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1204 10:15:04.443753 140166617011968 hlog.py:32] train/00149/eval_val/137/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.443842 140166617011968 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.443918 140166617011968 hlog.py:32] train/00149/eval_val/137/corr False
I1204 10:15:04.443989 140166617011968 hlog.py:32] train/00149/eval_val/137 
I1204 10:15:04.444058 140166617011968 hlog.py:18] train/00149/eval_val/137{0.00s}
I1204 10:15:04.444144 140166617011968 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1204 10:15:04.444239 140166617011968 hlog.py:32] train/00149/eval_val/138/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.444327 140166617011968 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.444403 140166617011968 hlog.py:32] train/00149/eval_val/138/corr False
I1204 10:15:04.444473 140166617011968 hlog.py:32] train/00149/eval_val/138 
I1204 10:15:04.444542 140166617011968 hlog.py:18] train/00149/eval_val/138{0.00s}
I1204 10:15:04.444629 140166617011968 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1204 10:15:04.444723 140166617011968 hlog.py:32] train/00149/eval_val/139/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.444811 140166617011968 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:15:04.444886 140166617011968 hlog.py:32] train/00149/eval_val/139/corr False
I1204 10:15:04.444957 140166617011968 hlog.py:32] train/00149/eval_val/139 
I1204 10:15:04.445026 140166617011968 hlog.py:18] train/00149/eval_val/139{0.00s}
I1204 10:15:04.445113 140166617011968 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1204 10:15:04.445211 140166617011968 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:15:04.445308 140166617011968 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:15:04.445385 140166617011968 hlog.py:32] train/00149/eval_val/140/corr False
I1204 10:15:04.445456 140166617011968 hlog.py:32] train/00149/eval_val/140 
I1204 10:15:04.445525 140166617011968 hlog.py:18] train/00149/eval_val/140{0.00s}
I1204 10:15:04.445611 140166617011968 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1204 10:15:04.445710 140166617011968 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:15:04.445801 140166617011968 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:15:04.445877 140166617011968 hlog.py:32] train/00149/eval_val/141/corr False
I1204 10:15:04.445948 140166617011968 hlog.py:32] train/00149/eval_val/141 
I1204 10:15:04.446017 140166617011968 hlog.py:18] train/00149/eval_val/141{0.00s}
I1204 10:15:04.446101 140166617011968 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1204 10:15:04.446195 140166617011968 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 10:15:04.446281 140166617011968 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 10:15:04.446357 140166617011968 hlog.py:32] train/00149/eval_val/142/corr False
I1204 10:15:04.446427 140166617011968 hlog.py:32] train/00149/eval_val/142 
I1204 10:15:04.446496 140166617011968 hlog.py:18] train/00149/eval_val/142{0.00s}
I1204 10:15:04.446579 140166617011968 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1204 10:15:04.446673 140166617011968 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 10:15:04.446759 140166617011968 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 10:15:04.446835 140166617011968 hlog.py:32] train/00149/eval_val/143/corr False
I1204 10:15:04.446905 140166617011968 hlog.py:32] train/00149/eval_val/143 
I1204 10:15:04.446974 140166617011968 hlog.py:18] train/00149/eval_val/143{0.00s}
I1204 10:15:04.447059 140166617011968 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1204 10:15:04.447145 140166617011968 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1204 10:15:04.447231 140166617011968 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1204 10:15:04.447323 140166617011968 hlog.py:32] train/00149/eval_val/144/corr False
I1204 10:15:04.447396 140166617011968 hlog.py:32] train/00149/eval_val/144 
I1204 10:15:04.447478 140166617011968 hlog.py:18] train/00149/eval_val/144{0.00s}
I1204 10:15:04.447579 140166617011968 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1204 10:15:04.447673 140166617011968 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _city ( B ) ) )
I1204 10:15:04.447759 140166617011968 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1204 10:15:04.447835 140166617011968 hlog.py:32] train/00149/eval_val/145/corr False
I1204 10:15:04.447906 140166617011968 hlog.py:32] train/00149/eval_val/145 
I1204 10:15:04.447975 140166617011968 hlog.py:18] train/00149/eval_val/145{0.00s}
I1204 10:15:04.448065 140166617011968 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1204 10:15:04.448172 140166617011968 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _shortest ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _countryid ( largest ) ) , _traverse ( D , C ) ) ) ) )
I1204 10:15:04.448273 140166617011968 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1204 10:15:04.448350 140166617011968 hlog.py:32] train/00149/eval_val/146/corr False
I1204 10:15:04.448421 140166617011968 hlog.py:32] train/00149/eval_val/146 
I1204 10:15:04.448491 140166617011968 hlog.py:18] train/00149/eval_val/146{0.00s}
I1204 10:15:04.448582 140166617011968 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1204 10:15:04.448679 140166617011968 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 10:15:04.448768 140166617011968 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 10:15:04.448844 140166617011968 hlog.py:32] train/00149/eval_val/147/corr True
I1204 10:15:04.448915 140166617011968 hlog.py:32] train/00149/eval_val/147 
I1204 10:15:04.448984 140166617011968 hlog.py:18] train/00149/eval_val/147{0.00s}
I1204 10:15:04.449062 140166617011968 hlog.py:32] train/00149/eval_val/acc 0.2973
I1204 10:15:04.484940 140166617011968 hlog.py:18] train/00149{17.99s}
I1204 10:15:04.486464 140166617011968 hlog.py:18] train{2519.92s}
