I1204 05:59:57.171096 139716428515072 hlog.py:24] # --noTEST
I1204 05:59:57.171525 139716428515072 hlog.py:24] # --seed=2
I1204 05:59:57.171611 139716428515072 hlog.py:24] # --dataset=semparse
I1204 05:59:57.171689 139716428515072 hlog.py:24] # --model_dir=model
I1204 05:59:57.171764 139716428515072 hlog.py:24] # --n_checkpoint=10
I1204 05:59:57.171838 139716428515072 hlog.py:24] # --nologtostderr
I1204 05:59:57.171912 139716428515072 hlog.py:24] # --noalsologtostderr
I1204 05:59:57.171985 139716428515072 hlog.py:24] # --log_dir=
I1204 05:59:57.172058 139716428515072 hlog.py:24] # --verbosity=0
I1204 05:59:57.172130 139716428515072 hlog.py:24] # --verbosity=0
I1204 05:59:57.172202 139716428515072 hlog.py:24] # --stderrthreshold=fatal
I1204 05:59:57.172274 139716428515072 hlog.py:24] # --showprefixforinfo
I1204 05:59:57.172346 139716428515072 hlog.py:24] # --nodedup
I1204 05:59:57.172417 139716428515072 hlog.py:24] # --nobuild_comp_table
I1204 05:59:57.172489 139716428515072 hlog.py:24] # --semparse_split=query
I1204 05:59:57.172561 139716428515072 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1204 05:59:57.172633 139716428515072 hlog.py:24] # --semparse_mrl=logic
I1204 05:59:57.172704 139716428515072 hlog.py:24] # --val_fold=8
I1204 05:59:57.172776 139716428515072 hlog.py:24] # --test_fold=9
I1204 05:59:57.172847 139716428515072 hlog.py:24] # --n_emb=64
I1204 05:59:57.172919 139716428515072 hlog.py:24] # --n_enc=512
I1204 05:59:57.172990 139716428515072 hlog.py:24] # --dropout=0.5
I1204 05:59:57.173061 139716428515072 hlog.py:24] # --copy_sup
I1204 05:59:57.173133 139716428515072 hlog.py:24] # --n_epochs=150
I1204 05:59:57.173204 139716428515072 hlog.py:24] # --n_epoch_batches=32
I1204 05:59:57.173275 139716428515072 hlog.py:24] # --n_batch=64
I1204 05:59:57.173346 139716428515072 hlog.py:24] # --lr=0.001
I1204 05:59:57.173418 139716428515072 hlog.py:24] # --clip=1.0
I1204 05:59:57.173488 139716428515072 hlog.py:24] # --sched_factor=0.5
I1204 05:59:57.173560 139716428515072 hlog.py:24] # --norun_with_pdb
I1204 05:59:57.173631 139716428515072 hlog.py:24] # --nopdb_post_mortem
I1204 05:59:57.173702 139716428515072 hlog.py:24] # --norun_with_profiling
I1204 05:59:57.173774 139716428515072 hlog.py:24] # --use_cprofile_for_profiling
I1204 05:59:57.173846 139716428515072 hlog.py:24] # --noonly_check_args
I1204 05:59:57.173917 139716428515072 hlog.py:24] # --augment=composed.val2.json
I1204 05:59:57.173989 139716428515072 hlog.py:24] # --aug_ratio=0.3
I1204 05:59:57.174060 139716428515072 hlog.py:24] # --noinvert
I1204 05:59:57.174131 139716428515072 hlog.py:24] # --nohelp
I1204 05:59:57.174202 139716428515072 hlog.py:24] # --nohelp
I1204 05:59:57.174273 139716428515072 hlog.py:24] # --nohelpshort
I1204 05:59:57.174345 139716428515072 hlog.py:24] # --nohelpfull
I1204 05:59:57.174416 139716428515072 hlog.py:24] # --nohelpxml
I1204 05:59:57.174487 139716428515072 hlog.py:24] # 
I1204 05:59:57.215120 139716428515072 hlog.py:32] train 543
I1204 05:59:57.215315 139716428515072 hlog.py:32] aug 1000
I1204 06:00:13.180370 139716428515072 hlog.py:32] train/00000/loss 3.3480
I1204 06:00:25.417430 139716428515072 hlog.py:32] train/00000/eval_train/acc 0.0000
I1204 06:00:27.424590 139716428515072 hlog.py:32] train/00000/eval_val/acc 0.0000
I1204 06:00:27.425585 139716428515072 hlog.py:18] train/00000{26.34s}
I1204 06:00:40.402341 139716428515072 hlog.py:32] train/00001/loss 1.1828
I1204 06:00:47.576777 139716428515072 hlog.py:32] train/00001/eval_train/acc 0.0000
I1204 06:00:48.826552 139716428515072 hlog.py:32] train/00001/eval_val/acc 0.0000
I1204 06:00:48.827055 139716428515072 hlog.py:18] train/00001{21.40s}
I1204 06:01:01.791371 139716428515072 hlog.py:32] train/00002/loss 0.7536
I1204 06:01:05.063099 139716428515072 hlog.py:32] train/00002/eval_train/acc 0.0000
I1204 06:01:05.622606 139716428515072 hlog.py:32] train/00002/eval_val/acc 0.0000
I1204 06:01:05.623080 139716428515072 hlog.py:18] train/00002{16.80s}
I1204 06:01:18.005232 139716428515072 hlog.py:32] train/00003/loss 0.5740
I1204 06:01:21.065464 139716428515072 hlog.py:32] train/00003/eval_train/acc 0.0240
I1204 06:01:21.565521 139716428515072 hlog.py:32] train/00003/eval_val/acc 0.0000
I1204 06:01:21.565980 139716428515072 hlog.py:18] train/00003{15.94s}
I1204 06:01:33.778899 139716428515072 hlog.py:32] train/00004/loss 0.4877
I1204 06:01:37.510536 139716428515072 hlog.py:32] train/00004/eval_train/acc 0.0560
I1204 06:01:38.121686 139716428515072 hlog.py:32] train/00004/eval_val/acc 0.0000
I1204 06:01:38.122157 139716428515072 hlog.py:18] train/00004{16.56s}
I1204 06:01:50.053000 139716428515072 hlog.py:32] train/00005/loss 0.3868
I1204 06:01:55.420085 139716428515072 hlog.py:32] train/00005/eval_train/acc 0.0970
I1204 06:01:56.452009 139716428515072 hlog.py:32] train/00005/eval_val/acc 0.0000
I1204 06:01:56.452503 139716428515072 hlog.py:18] train/00005{18.33s}
I1204 06:02:08.566286 139716428515072 hlog.py:32] train/00006/loss 0.3185
I1204 06:02:13.440950 139716428515072 hlog.py:32] train/00006/eval_train/acc 0.2000
I1204 06:02:14.250508 139716428515072 hlog.py:32] train/00006/eval_val/acc 0.0000
I1204 06:02:14.251029 139716428515072 hlog.py:18] train/00006{17.80s}
I1204 06:02:26.382063 139716428515072 hlog.py:32] train/00007/loss 0.3101
I1204 06:02:30.935135 139716428515072 hlog.py:32] train/00007/eval_train/acc 0.2910
I1204 06:02:31.539582 139716428515072 hlog.py:32] train/00007/eval_val/acc 0.0068
I1204 06:02:31.540135 139716428515072 hlog.py:18] train/00007{17.29s}
I1204 06:02:43.297695 139716428515072 hlog.py:32] train/00008/loss 0.2614
I1204 06:02:46.996963 139716428515072 hlog.py:32] train/00008/eval_train/acc 0.3400
I1204 06:02:47.628057 139716428515072 hlog.py:32] train/00008/eval_val/acc 0.0068
I1204 06:02:47.628573 139716428515072 hlog.py:18] train/00008{16.09s}
I1204 06:02:59.885872 139716428515072 hlog.py:32] train/00009/loss 0.2261
I1204 06:03:04.006882 139716428515072 hlog.py:32] train/00009/eval_train/acc 0.4320
I1204 06:03:04.726717 139716428515072 hlog.py:32] train/00009/eval_val/acc 0.0405
I1204 06:03:04.848272 139716428515072 hlog.py:18] train/00009{17.22s}
I1204 06:03:17.101448 139716428515072 hlog.py:32] train/00010/loss 0.2173
I1204 06:03:21.770140 139716428515072 hlog.py:32] train/00010/eval_train/acc 0.4420
I1204 06:03:22.353402 139716428515072 hlog.py:32] train/00010/eval_val/acc 0.0608
I1204 06:03:22.353917 139716428515072 hlog.py:18] train/00010{17.51s}
I1204 06:03:34.410534 139716428515072 hlog.py:32] train/00011/loss 0.1961
I1204 06:03:38.749089 139716428515072 hlog.py:32] train/00011/eval_train/acc 0.4540
I1204 06:03:39.386343 139716428515072 hlog.py:32] train/00011/eval_val/acc 0.0743
I1204 06:03:39.386822 139716428515072 hlog.py:18] train/00011{17.03s}
I1204 06:03:51.509003 139716428515072 hlog.py:32] train/00012/loss 0.1598
I1204 06:03:55.423096 139716428515072 hlog.py:32] train/00012/eval_train/acc 0.5240
I1204 06:03:56.314444 139716428515072 hlog.py:32] train/00012/eval_val/acc 0.0743
I1204 06:03:56.315174 139716428515072 hlog.py:18] train/00012{16.93s}
I1204 06:04:09.375002 139716428515072 hlog.py:32] train/00013/loss 0.1601
I1204 06:04:13.060097 139716428515072 hlog.py:32] train/00013/eval_train/acc 0.5730
I1204 06:04:13.704859 139716428515072 hlog.py:32] train/00013/eval_val/acc 0.1014
I1204 06:04:13.705346 139716428515072 hlog.py:18] train/00013{17.39s}
I1204 06:04:25.866982 139716428515072 hlog.py:32] train/00014/loss 0.1367
I1204 06:04:29.914428 139716428515072 hlog.py:32] train/00014/eval_train/acc 0.6090
I1204 06:04:30.621959 139716428515072 hlog.py:32] train/00014/eval_val/acc 0.1014
I1204 06:04:30.622427 139716428515072 hlog.py:18] train/00014{16.92s}
I1204 06:04:42.839957 139716428515072 hlog.py:32] train/00015/loss 0.1279
I1204 06:04:46.614021 139716428515072 hlog.py:32] train/00015/eval_train/acc 0.6530
I1204 06:04:47.193650 139716428515072 hlog.py:32] train/00015/eval_val/acc 0.1351
I1204 06:04:47.194134 139716428515072 hlog.py:18] train/00015{16.57s}
I1204 06:04:58.866615 139716428515072 hlog.py:32] train/00016/loss 0.1031
I1204 06:05:02.623063 139716428515072 hlog.py:32] train/00016/eval_train/acc 0.6920
I1204 06:05:03.201052 139716428515072 hlog.py:32] train/00016/eval_val/acc 0.1554
I1204 06:05:03.201545 139716428515072 hlog.py:18] train/00016{16.01s}
I1204 06:05:14.973943 139716428515072 hlog.py:32] train/00017/loss 0.0987
I1204 06:05:18.787205 139716428515072 hlog.py:32] train/00017/eval_train/acc 0.6980
I1204 06:05:19.389046 139716428515072 hlog.py:32] train/00017/eval_val/acc 0.1824
I1204 06:05:19.389562 139716428515072 hlog.py:18] train/00017{16.19s}
I1204 06:05:31.520204 139716428515072 hlog.py:32] train/00018/loss 0.0860
I1204 06:05:35.337164 139716428515072 hlog.py:32] train/00018/eval_train/acc 0.7200
I1204 06:05:35.964890 139716428515072 hlog.py:32] train/00018/eval_val/acc 0.2297
I1204 06:05:35.965434 139716428515072 hlog.py:18] train/00018{16.58s}
I1204 06:05:47.548381 139716428515072 hlog.py:32] train/00019/loss 0.0839
I1204 06:05:52.756076 139716428515072 hlog.py:32] train/00019/eval_train/acc 0.7670
I1204 06:05:53.360411 139716428515072 hlog.py:32] train/00019/eval_val/acc 0.3243
I1204 06:05:53.390640 139716428515072 hlog.py:18] train/00019{17.43s}
I1204 06:06:05.480311 139716428515072 hlog.py:32] train/00020/loss 0.0886
I1204 06:06:09.641903 139716428515072 hlog.py:32] train/00020/eval_train/acc 0.7460
I1204 06:06:10.504665 139716428515072 hlog.py:32] train/00020/eval_val/acc 0.2635
I1204 06:06:10.505398 139716428515072 hlog.py:18] train/00020{17.11s}
I1204 06:06:23.121840 139716428515072 hlog.py:32] train/00021/loss 0.0884
I1204 06:06:26.837451 139716428515072 hlog.py:32] train/00021/eval_train/acc 0.7630
I1204 06:06:27.449723 139716428515072 hlog.py:32] train/00021/eval_val/acc 0.2568
I1204 06:06:27.450208 139716428515072 hlog.py:18] train/00021{16.94s}
I1204 06:06:40.165689 139716428515072 hlog.py:32] train/00022/loss 0.0757
I1204 06:06:43.911844 139716428515072 hlog.py:32] train/00022/eval_train/acc 0.7640
I1204 06:06:44.515154 139716428515072 hlog.py:32] train/00022/eval_val/acc 0.3108
I1204 06:06:44.515660 139716428515072 hlog.py:18] train/00022{17.07s}
I1204 06:06:56.735836 139716428515072 hlog.py:32] train/00023/loss 0.0727
I1204 06:07:00.849784 139716428515072 hlog.py:32] train/00023/eval_train/acc 0.8240
I1204 06:07:01.450063 139716428515072 hlog.py:32] train/00023/eval_val/acc 0.3311
I1204 06:07:01.450540 139716428515072 hlog.py:18] train/00023{16.93s}
I1204 06:07:13.916866 139716428515072 hlog.py:32] train/00024/loss 0.0873
I1204 06:07:18.307918 139716428515072 hlog.py:32] train/00024/eval_train/acc 0.7740
I1204 06:07:18.977355 139716428515072 hlog.py:32] train/00024/eval_val/acc 0.3108
I1204 06:07:18.978073 139716428515072 hlog.py:18] train/00024{17.53s}
I1204 06:07:32.507288 139716428515072 hlog.py:32] train/00025/loss 0.0857
I1204 06:07:36.614359 139716428515072 hlog.py:32] train/00025/eval_train/acc 0.7710
I1204 06:07:37.298564 139716428515072 hlog.py:32] train/00025/eval_val/acc 0.2230
I1204 06:07:37.299013 139716428515072 hlog.py:18] train/00025{18.32s}
I1204 06:07:49.563575 139716428515072 hlog.py:32] train/00026/loss 0.0778
I1204 06:07:53.701968 139716428515072 hlog.py:32] train/00026/eval_train/acc 0.8070
I1204 06:07:54.374540 139716428515072 hlog.py:32] train/00026/eval_val/acc 0.4392
I1204 06:07:54.375215 139716428515072 hlog.py:18] train/00026{17.08s}
I1204 06:08:06.572992 139716428515072 hlog.py:32] train/00027/loss 0.0639
I1204 06:08:10.355010 139716428515072 hlog.py:32] train/00027/eval_train/acc 0.7980
I1204 06:08:10.928440 139716428515072 hlog.py:32] train/00027/eval_val/acc 0.2770
I1204 06:08:10.928930 139716428515072 hlog.py:18] train/00027{16.55s}
I1204 06:08:23.993861 139716428515072 hlog.py:32] train/00028/loss 0.0823
I1204 06:08:27.964099 139716428515072 hlog.py:32] train/00028/eval_train/acc 0.8250
I1204 06:08:28.574059 139716428515072 hlog.py:32] train/00028/eval_val/acc 0.3243
I1204 06:08:28.574528 139716428515072 hlog.py:18] train/00028{17.65s}
I1204 06:08:40.522405 139716428515072 hlog.py:32] train/00029/loss 0.0696
I1204 06:08:45.358634 139716428515072 hlog.py:32] train/00029/eval_train/acc 0.8430
I1204 06:08:45.971514 139716428515072 hlog.py:32] train/00029/eval_val/acc 0.3446
I1204 06:08:46.001023 139716428515072 hlog.py:18] train/00029{17.43s}
I1204 06:08:58.420975 139716428515072 hlog.py:32] train/00030/loss 0.0548
I1204 06:09:03.353345 139716428515072 hlog.py:32] train/00030/eval_train/acc 0.8710
I1204 06:09:03.956748 139716428515072 hlog.py:32] train/00030/eval_val/acc 0.2770
I1204 06:09:03.957261 139716428515072 hlog.py:18] train/00030{17.96s}
I1204 06:09:17.182334 139716428515072 hlog.py:32] train/00031/loss 0.0510
I1204 06:09:21.069177 139716428515072 hlog.py:32] train/00031/eval_train/acc 0.8770
I1204 06:09:21.718598 139716428515072 hlog.py:32] train/00031/eval_val/acc 0.3514
I1204 06:09:21.719093 139716428515072 hlog.py:18] train/00031{17.76s}
I1204 06:09:33.812471 139716428515072 hlog.py:32] train/00032/loss 0.0464
I1204 06:09:37.545325 139716428515072 hlog.py:32] train/00032/eval_train/acc 0.8980
I1204 06:09:38.113824 139716428515072 hlog.py:32] train/00032/eval_val/acc 0.3986
I1204 06:09:38.114315 139716428515072 hlog.py:18] train/00032{16.40s}
I1204 06:09:50.840575 139716428515072 hlog.py:32] train/00033/loss 0.0417
I1204 06:09:54.791138 139716428515072 hlog.py:32] train/00033/eval_train/acc 0.8860
I1204 06:09:55.421276 139716428515072 hlog.py:32] train/00033/eval_val/acc 0.3041
I1204 06:09:55.421774 139716428515072 hlog.py:18] train/00033{17.31s}
I1204 06:10:08.519117 139716428515072 hlog.py:32] train/00034/loss 0.0388
I1204 06:10:13.233674 139716428515072 hlog.py:32] train/00034/eval_train/acc 0.9420
I1204 06:10:13.828037 139716428515072 hlog.py:32] train/00034/eval_val/acc 0.3851
I1204 06:10:13.828521 139716428515072 hlog.py:18] train/00034{18.41s}
I1204 06:10:26.540482 139716428515072 hlog.py:32] train/00035/loss 0.0289
I1204 06:10:30.328685 139716428515072 hlog.py:32] train/00035/eval_train/acc 0.9210
I1204 06:10:30.953004 139716428515072 hlog.py:32] train/00035/eval_val/acc 0.3919
I1204 06:10:30.953478 139716428515072 hlog.py:18] train/00035{17.12s}
I1204 06:10:43.531169 139716428515072 hlog.py:32] train/00036/loss 0.0273
I1204 06:10:47.480618 139716428515072 hlog.py:32] train/00036/eval_train/acc 0.9370
I1204 06:10:48.059013 139716428515072 hlog.py:32] train/00036/eval_val/acc 0.4122
I1204 06:10:48.059514 139716428515072 hlog.py:18] train/00036{17.11s}
I1204 06:11:01.244182 139716428515072 hlog.py:32] train/00037/loss 0.0311
I1204 06:11:06.647499 139716428515072 hlog.py:32] train/00037/eval_train/acc 0.9090
I1204 06:11:07.200087 139716428515072 hlog.py:32] train/00037/eval_val/acc 0.4122
I1204 06:11:07.200653 139716428515072 hlog.py:18] train/00037{19.14s}
I1204 06:11:18.994467 139716428515072 hlog.py:32] train/00038/loss 0.0296
I1204 06:11:23.186682 139716428515072 hlog.py:32] train/00038/eval_train/acc 0.9320
I1204 06:11:23.774009 139716428515072 hlog.py:32] train/00038/eval_val/acc 0.3784
I1204 06:11:23.774483 139716428515072 hlog.py:18] train/00038{16.57s}
I1204 06:11:35.915732 139716428515072 hlog.py:32] train/00039/loss 0.0233
I1204 06:11:39.945794 139716428515072 hlog.py:32] train/00039/eval_train/acc 0.9570
I1204 06:11:40.625514 139716428515072 hlog.py:32] train/00039/eval_val/acc 0.4122
I1204 06:11:40.660421 139716428515072 hlog.py:18] train/00039{16.89s}
I1204 06:11:53.036041 139716428515072 hlog.py:32] train/00040/loss 0.0192
I1204 06:11:57.316037 139716428515072 hlog.py:32] train/00040/eval_train/acc 0.9670
I1204 06:11:57.913660 139716428515072 hlog.py:32] train/00040/eval_val/acc 0.4392
I1204 06:11:57.914349 139716428515072 hlog.py:18] train/00040{17.25s}
I1204 06:12:10.313763 139716428515072 hlog.py:32] train/00041/loss 0.0202
I1204 06:12:14.464873 139716428515072 hlog.py:32] train/00041/eval_train/acc 0.9700
I1204 06:12:15.042275 139716428515072 hlog.py:32] train/00041/eval_val/acc 0.4122
I1204 06:12:15.042780 139716428515072 hlog.py:18] train/00041{17.13s}
I1204 06:12:27.338328 139716428515072 hlog.py:32] train/00042/loss 0.0194
I1204 06:12:31.779616 139716428515072 hlog.py:32] train/00042/eval_train/acc 0.9730
I1204 06:12:32.333299 139716428515072 hlog.py:32] train/00042/eval_val/acc 0.4054
I1204 06:12:32.333825 139716428515072 hlog.py:18] train/00042{17.29s}
I1204 06:12:45.584700 139716428515072 hlog.py:32] train/00043/loss 0.0245
I1204 06:12:49.708450 139716428515072 hlog.py:32] train/00043/eval_train/acc 0.9640
I1204 06:12:50.284541 139716428515072 hlog.py:32] train/00043/eval_val/acc 0.4054
I1204 06:12:50.285151 139716428515072 hlog.py:18] train/00043{17.95s}
I1204 06:13:03.044102 139716428515072 hlog.py:32] train/00044/loss 0.0256
I1204 06:13:07.634539 139716428515072 hlog.py:32] train/00044/eval_train/acc 0.9440
I1204 06:13:08.204398 139716428515072 hlog.py:32] train/00044/eval_val/acc 0.3919
I1204 06:13:08.204993 139716428515072 hlog.py:18] train/00044{17.92s}
I1204 06:13:20.118288 139716428515072 hlog.py:32] train/00045/loss 0.0201
I1204 06:13:23.963628 139716428515072 hlog.py:32] train/00045/eval_train/acc 0.9820
I1204 06:13:24.505677 139716428515072 hlog.py:32] train/00045/eval_val/acc 0.4054
I1204 06:13:24.506306 139716428515072 hlog.py:18] train/00045{16.30s}
I1204 06:13:36.552944 139716428515072 hlog.py:32] train/00046/loss 0.0179
I1204 06:13:40.708874 139716428515072 hlog.py:32] train/00046/eval_train/acc 0.9760
I1204 06:13:41.247566 139716428515072 hlog.py:32] train/00046/eval_val/acc 0.4189
I1204 06:13:41.248060 139716428515072 hlog.py:18] train/00046{16.74s}
I1204 06:13:52.950526 139716428515072 hlog.py:32] train/00047/loss 0.0162
I1204 06:13:57.164130 139716428515072 hlog.py:32] train/00047/eval_train/acc 0.9870
I1204 06:13:57.738480 139716428515072 hlog.py:32] train/00047/eval_val/acc 0.4459
I1204 06:13:57.739182 139716428515072 hlog.py:18] train/00047{16.49s}
I1204 06:14:10.183567 139716428515072 hlog.py:32] train/00048/loss 0.0155
I1204 06:14:13.984214 139716428515072 hlog.py:32] train/00048/eval_train/acc 0.9840
I1204 06:14:14.550674 139716428515072 hlog.py:32] train/00048/eval_val/acc 0.4392
I1204 06:14:14.551222 139716428515072 hlog.py:18] train/00048{16.81s}
I1204 06:14:26.155364 139716428515072 hlog.py:32] train/00049/loss 0.0138
I1204 06:14:30.980548 139716428515072 hlog.py:32] train/00049/eval_train/acc 0.9780
I1204 06:14:31.527143 139716428515072 hlog.py:32] train/00049/eval_val/acc 0.4662
I1204 06:14:31.557613 139716428515072 hlog.py:18] train/00049{17.01s}
I1204 06:14:43.558446 139716428515072 hlog.py:32] train/00050/loss 0.0178
I1204 06:14:47.370641 139716428515072 hlog.py:32] train/00050/eval_train/acc 0.9760
I1204 06:14:47.979580 139716428515072 hlog.py:32] train/00050/eval_val/acc 0.4459
I1204 06:14:47.980060 139716428515072 hlog.py:18] train/00050{16.42s}
I1204 06:14:59.746094 139716428515072 hlog.py:32] train/00051/loss 0.0204
I1204 06:15:03.626525 139716428515072 hlog.py:32] train/00051/eval_train/acc 0.9750
I1204 06:15:04.204308 139716428515072 hlog.py:32] train/00051/eval_val/acc 0.4459
I1204 06:15:04.204783 139716428515072 hlog.py:18] train/00051{16.22s}
I1204 06:15:16.992655 139716428515072 hlog.py:32] train/00052/loss 0.0128
I1204 06:15:20.842800 139716428515072 hlog.py:32] train/00052/eval_train/acc 0.9840
I1204 06:15:21.395942 139716428515072 hlog.py:32] train/00052/eval_val/acc 0.4662
I1204 06:15:21.396465 139716428515072 hlog.py:18] train/00052{17.19s}
I1204 06:15:32.741859 139716428515072 hlog.py:32] train/00053/loss 0.0115
I1204 06:15:36.620992 139716428515072 hlog.py:32] train/00053/eval_train/acc 0.9850
I1204 06:15:37.188555 139716428515072 hlog.py:32] train/00053/eval_val/acc 0.4527
I1204 06:15:37.189087 139716428515072 hlog.py:18] train/00053{15.79s}
I1204 06:15:49.513150 139716428515072 hlog.py:32] train/00054/loss 0.0120
I1204 06:15:53.289028 139716428515072 hlog.py:32] train/00054/eval_train/acc 0.9910
I1204 06:15:53.836718 139716428515072 hlog.py:32] train/00054/eval_val/acc 0.4324
I1204 06:15:53.837215 139716428515072 hlog.py:18] train/00054{16.65s}
I1204 06:16:05.631248 139716428515072 hlog.py:32] train/00055/loss 0.0096
I1204 06:16:09.653522 139716428515072 hlog.py:32] train/00055/eval_train/acc 0.9880
I1204 06:16:10.196370 139716428515072 hlog.py:32] train/00055/eval_val/acc 0.4257
I1204 06:16:10.196859 139716428515072 hlog.py:18] train/00055{16.36s}
I1204 06:16:21.872591 139716428515072 hlog.py:32] train/00056/loss 0.0104
I1204 06:16:25.992332 139716428515072 hlog.py:32] train/00056/eval_train/acc 0.9830
I1204 06:16:26.608358 139716428515072 hlog.py:32] train/00056/eval_val/acc 0.3986
I1204 06:16:26.608932 139716428515072 hlog.py:18] train/00056{16.41s}
I1204 06:16:39.050339 139716428515072 hlog.py:32] train/00057/loss 0.0144
I1204 06:16:42.891008 139716428515072 hlog.py:32] train/00057/eval_train/acc 0.9880
I1204 06:16:43.473317 139716428515072 hlog.py:32] train/00057/eval_val/acc 0.4797
I1204 06:16:43.473799 139716428515072 hlog.py:18] train/00057{16.86s}
I1204 06:16:55.683886 139716428515072 hlog.py:32] train/00058/loss 0.0149
I1204 06:16:59.827051 139716428515072 hlog.py:32] train/00058/eval_train/acc 0.9810
I1204 06:17:00.399438 139716428515072 hlog.py:32] train/00058/eval_val/acc 0.4527
I1204 06:17:00.399960 139716428515072 hlog.py:18] train/00058{16.93s}
I1204 06:17:12.445501 139716428515072 hlog.py:32] train/00059/loss 0.0115
I1204 06:17:16.450827 139716428515072 hlog.py:32] train/00059/eval_train/acc 0.9860
I1204 06:17:17.018275 139716428515072 hlog.py:32] train/00059/eval_val/acc 0.4662
I1204 06:17:17.048987 139716428515072 hlog.py:18] train/00059{16.65s}
I1204 06:17:29.445496 139716428515072 hlog.py:32] train/00060/loss 0.0102
I1204 06:17:33.617650 139716428515072 hlog.py:32] train/00060/eval_train/acc 0.9950
I1204 06:17:34.156334 139716428515072 hlog.py:32] train/00060/eval_val/acc 0.4932
I1204 06:17:34.156839 139716428515072 hlog.py:18] train/00060{17.11s}
I1204 06:17:47.248932 139716428515072 hlog.py:32] train/00061/loss 0.0107
I1204 06:17:51.745855 139716428515072 hlog.py:32] train/00061/eval_train/acc 0.9880
I1204 06:17:52.283950 139716428515072 hlog.py:32] train/00061/eval_val/acc 0.4459
I1204 06:17:52.284405 139716428515072 hlog.py:18] train/00061{18.13s}
I1204 06:18:04.477237 139716428515072 hlog.py:32] train/00062/loss 0.0110
I1204 06:18:08.238008 139716428515072 hlog.py:32] train/00062/eval_train/acc 0.9900
I1204 06:18:08.812514 139716428515072 hlog.py:32] train/00062/eval_val/acc 0.4324
I1204 06:18:08.813018 139716428515072 hlog.py:18] train/00062{16.53s}
I1204 06:18:21.357246 139716428515072 hlog.py:32] train/00063/loss 0.0113
I1204 06:18:25.240969 139716428515072 hlog.py:32] train/00063/eval_train/acc 0.9910
I1204 06:18:25.801002 139716428515072 hlog.py:32] train/00063/eval_val/acc 0.5000
I1204 06:18:25.801589 139716428515072 hlog.py:18] train/00063{16.99s}
I1204 06:18:38.410212 139716428515072 hlog.py:32] train/00064/loss 0.0111
I1204 06:18:42.563320 139716428515072 hlog.py:32] train/00064/eval_train/acc 0.9890
I1204 06:18:43.143204 139716428515072 hlog.py:32] train/00064/eval_val/acc 0.4324
I1204 06:18:43.143770 139716428515072 hlog.py:18] train/00064{17.34s}
I1204 06:18:54.833392 139716428515072 hlog.py:32] train/00065/loss 0.0129
I1204 06:18:58.795445 139716428515072 hlog.py:32] train/00065/eval_train/acc 0.9890
I1204 06:18:59.368983 139716428515072 hlog.py:32] train/00065/eval_val/acc 0.4324
I1204 06:18:59.369454 139716428515072 hlog.py:18] train/00065{16.23s}
I1204 06:19:11.113615 139716428515072 hlog.py:32] train/00066/loss 0.0092
I1204 06:19:15.221986 139716428515072 hlog.py:32] train/00066/eval_train/acc 0.9910
I1204 06:19:15.860609 139716428515072 hlog.py:32] train/00066/eval_val/acc 0.4662
I1204 06:19:15.861078 139716428515072 hlog.py:18] train/00066{16.49s}
I1204 06:19:28.106241 139716428515072 hlog.py:32] train/00067/loss 0.0101
I1204 06:19:32.110983 139716428515072 hlog.py:32] train/00067/eval_train/acc 0.9960
I1204 06:19:32.691627 139716428515072 hlog.py:32] train/00067/eval_val/acc 0.4189
I1204 06:19:32.692124 139716428515072 hlog.py:18] train/00067{16.83s}
I1204 06:19:45.103426 139716428515072 hlog.py:32] train/00068/loss 0.0101
I1204 06:19:48.968402 139716428515072 hlog.py:32] train/00068/eval_train/acc 0.9980
I1204 06:19:49.572025 139716428515072 hlog.py:32] train/00068/eval_val/acc 0.4662
I1204 06:19:49.572524 139716428515072 hlog.py:18] train/00068{16.88s}
I1204 06:20:02.357317 139716428515072 hlog.py:32] train/00069/loss 0.0099
I1204 06:20:06.116071 139716428515072 hlog.py:32] train/00069/eval_train/acc 0.9920
I1204 06:20:06.678112 139716428515072 hlog.py:32] train/00069/eval_val/acc 0.4459
I1204 06:20:06.708873 139716428515072 hlog.py:18] train/00069{17.14s}
I1204 06:20:18.701304 139716428515072 hlog.py:32] train/00070/loss 0.0103
I1204 06:20:22.542714 139716428515072 hlog.py:32] train/00070/eval_train/acc 0.9950
I1204 06:20:23.104587 139716428515072 hlog.py:32] train/00070/eval_val/acc 0.4797
I1204 06:20:23.105074 139716428515072 hlog.py:18] train/00070{16.40s}
I1204 06:20:35.099412 139716428515072 hlog.py:32] train/00071/loss 0.0100
I1204 06:20:38.976296 139716428515072 hlog.py:32] train/00071/eval_train/acc 0.9960
I1204 06:20:39.545420 139716428515072 hlog.py:32] train/00071/eval_val/acc 0.3784
I1204 06:20:39.545908 139716428515072 hlog.py:18] train/00071{16.44s}
I1204 06:20:51.415932 139716428515072 hlog.py:32] train/00072/loss 0.0081
I1204 06:20:55.585158 139716428515072 hlog.py:32] train/00072/eval_train/acc 0.9980
I1204 06:20:56.138708 139716428515072 hlog.py:32] train/00072/eval_val/acc 0.4257
I1204 06:20:56.139227 139716428515072 hlog.py:18] train/00072{16.59s}
I1204 06:21:08.980122 139716428515072 hlog.py:32] train/00073/loss 0.0081
I1204 06:21:12.974575 139716428515072 hlog.py:32] train/00073/eval_train/acc 0.9890
I1204 06:21:13.534766 139716428515072 hlog.py:32] train/00073/eval_val/acc 0.4662
I1204 06:21:13.535231 139716428515072 hlog.py:18] train/00073{17.40s}
I1204 06:21:24.956072 139716428515072 hlog.py:32] train/00074/loss 0.0067
I1204 06:21:28.977161 139716428515072 hlog.py:32] train/00074/eval_train/acc 1.0000
I1204 06:21:29.547987 139716428515072 hlog.py:32] train/00074/eval_val/acc 0.4527
I1204 06:21:29.548639 139716428515072 hlog.py:18] train/00074{16.01s}
I1204 06:21:41.657526 139716428515072 hlog.py:32] train/00075/loss 0.0067
I1204 06:21:45.504377 139716428515072 hlog.py:32] train/00075/eval_train/acc 1.0000
I1204 06:21:46.076817 139716428515072 hlog.py:32] train/00075/eval_val/acc 0.4797
I1204 06:21:46.077293 139716428515072 hlog.py:18] train/00075{16.53s}
I1204 06:21:58.266480 139716428515072 hlog.py:32] train/00076/loss 0.0066
I1204 06:22:02.343176 139716428515072 hlog.py:32] train/00076/eval_train/acc 0.9980
I1204 06:22:02.918078 139716428515072 hlog.py:32] train/00076/eval_val/acc 0.4595
I1204 06:22:02.918521 139716428515072 hlog.py:18] train/00076{16.84s}
I1204 06:22:15.808945 139716428515072 hlog.py:32] train/00077/loss 0.0060
I1204 06:22:19.793219 139716428515072 hlog.py:32] train/00077/eval_train/acc 0.9950
I1204 06:22:20.345750 139716428515072 hlog.py:32] train/00077/eval_val/acc 0.4662
I1204 06:22:20.346399 139716428515072 hlog.py:18] train/00077{17.43s}
I1204 06:22:33.215585 139716428515072 hlog.py:32] train/00078/loss 0.0060
I1204 06:22:37.187014 139716428515072 hlog.py:32] train/00078/eval_train/acc 0.9980
I1204 06:22:37.747609 139716428515072 hlog.py:32] train/00078/eval_val/acc 0.4595
I1204 06:22:37.748124 139716428515072 hlog.py:18] train/00078{17.40s}
I1204 06:22:50.530054 139716428515072 hlog.py:32] train/00079/loss 0.0061
I1204 06:22:54.539126 139716428515072 hlog.py:32] train/00079/eval_train/acc 1.0000
I1204 06:22:55.090674 139716428515072 hlog.py:32] train/00079/eval_val/acc 0.4324
I1204 06:22:55.121543 139716428515072 hlog.py:18] train/00079{17.37s}
I1204 06:23:07.669121 139716428515072 hlog.py:32] train/00080/loss 0.0065
I1204 06:23:11.534937 139716428515072 hlog.py:32] train/00080/eval_train/acc 1.0000
I1204 06:23:12.102859 139716428515072 hlog.py:32] train/00080/eval_val/acc 0.4054
I1204 06:23:12.103353 139716428515072 hlog.py:18] train/00080{16.98s}
I1204 06:23:24.565779 139716428515072 hlog.py:32] train/00081/loss 0.0055
I1204 06:23:28.769216 139716428515072 hlog.py:32] train/00081/eval_train/acc 0.9960
I1204 06:23:29.372307 139716428515072 hlog.py:32] train/00081/eval_val/acc 0.4324
I1204 06:23:29.372811 139716428515072 hlog.py:18] train/00081{17.27s}
I1204 06:23:41.370065 139716428515072 hlog.py:32] train/00082/loss 0.0049
I1204 06:23:45.185951 139716428515072 hlog.py:32] train/00082/eval_train/acc 1.0000
I1204 06:23:45.772008 139716428515072 hlog.py:32] train/00082/eval_val/acc 0.4392
I1204 06:23:45.772610 139716428515072 hlog.py:18] train/00082{16.40s}
I1204 06:23:57.988435 139716428515072 hlog.py:32] train/00083/loss 0.0046
I1204 06:24:02.076565 139716428515072 hlog.py:32] train/00083/eval_train/acc 0.9990
I1204 06:24:02.632283 139716428515072 hlog.py:32] train/00083/eval_val/acc 0.4459
I1204 06:24:02.632802 139716428515072 hlog.py:18] train/00083{16.86s}
I1204 06:24:14.247159 139716428515072 hlog.py:32] train/00084/loss 0.0045
I1204 06:24:18.162247 139716428515072 hlog.py:32] train/00084/eval_train/acc 1.0000
I1204 06:24:18.710262 139716428515072 hlog.py:32] train/00084/eval_val/acc 0.4730
I1204 06:24:18.710751 139716428515072 hlog.py:18] train/00084{16.08s}
I1204 06:24:31.097594 139716428515072 hlog.py:32] train/00085/loss 0.0048
I1204 06:24:35.068501 139716428515072 hlog.py:32] train/00085/eval_train/acc 1.0000
I1204 06:24:35.622425 139716428515072 hlog.py:32] train/00085/eval_val/acc 0.4595
I1204 06:24:35.622962 139716428515072 hlog.py:18] train/00085{16.91s}
I1204 06:24:48.114663 139716428515072 hlog.py:32] train/00086/loss 0.0050
I1204 06:24:52.132082 139716428515072 hlog.py:32] train/00086/eval_train/acc 0.9970
I1204 06:24:52.690678 139716428515072 hlog.py:32] train/00086/eval_val/acc 0.4392
I1204 06:24:52.691315 139716428515072 hlog.py:18] train/00086{17.07s}
I1204 06:25:05.696159 139716428515072 hlog.py:32] train/00087/loss 0.0047
I1204 06:25:09.748038 139716428515072 hlog.py:32] train/00087/eval_train/acc 1.0000
I1204 06:25:10.311251 139716428515072 hlog.py:32] train/00087/eval_val/acc 0.4324
I1204 06:25:10.311957 139716428515072 hlog.py:18] train/00087{17.62s}
I1204 06:25:21.873939 139716428515072 hlog.py:32] train/00088/loss 0.0037
I1204 06:25:25.624223 139716428515072 hlog.py:32] train/00088/eval_train/acc 1.0000
I1204 06:25:26.187128 139716428515072 hlog.py:32] train/00088/eval_val/acc 0.4527
I1204 06:25:26.187706 139716428515072 hlog.py:18] train/00088{15.88s}
I1204 06:25:38.226075 139716428515072 hlog.py:32] train/00089/loss 0.0038
I1204 06:25:42.047806 139716428515072 hlog.py:32] train/00089/eval_train/acc 1.0000
I1204 06:25:42.618568 139716428515072 hlog.py:32] train/00089/eval_val/acc 0.4595
I1204 06:25:42.647840 139716428515072 hlog.py:18] train/00089{16.46s}
I1204 06:25:55.482046 139716428515072 hlog.py:32] train/00090/loss 0.0044
I1204 06:25:59.745714 139716428515072 hlog.py:32] train/00090/eval_train/acc 1.0000
I1204 06:26:00.326505 139716428515072 hlog.py:32] train/00090/eval_val/acc 0.4595
I1204 06:26:00.327021 139716428515072 hlog.py:18] train/00090{17.68s}
I1204 06:26:12.213166 139716428515072 hlog.py:32] train/00091/loss 0.0037
I1204 06:26:16.040094 139716428515072 hlog.py:32] train/00091/eval_train/acc 1.0000
I1204 06:26:16.614557 139716428515072 hlog.py:32] train/00091/eval_val/acc 0.4730
I1204 06:26:16.615061 139716428515072 hlog.py:18] train/00091{16.29s}
I1204 06:26:29.220131 139716428515072 hlog.py:32] train/00092/loss 0.0042
I1204 06:26:33.060712 139716428515072 hlog.py:32] train/00092/eval_train/acc 1.0000
I1204 06:26:33.628017 139716428515072 hlog.py:32] train/00092/eval_val/acc 0.4662
I1204 06:26:33.628494 139716428515072 hlog.py:18] train/00092{17.01s}
I1204 06:26:45.610432 139716428515072 hlog.py:32] train/00093/loss 0.0036
I1204 06:26:49.505604 139716428515072 hlog.py:32] train/00093/eval_train/acc 1.0000
I1204 06:26:50.043259 139716428515072 hlog.py:32] train/00093/eval_val/acc 0.4527
I1204 06:26:50.043765 139716428515072 hlog.py:18] train/00093{16.42s}
I1204 06:27:02.428991 139716428515072 hlog.py:32] train/00094/loss 0.0038
I1204 06:27:06.445193 139716428515072 hlog.py:32] train/00094/eval_train/acc 1.0000
I1204 06:27:07.010616 139716428515072 hlog.py:32] train/00094/eval_val/acc 0.4595
I1204 06:27:07.011149 139716428515072 hlog.py:18] train/00094{16.97s}
I1204 06:27:19.039336 139716428515072 hlog.py:32] train/00095/loss 0.0039
I1204 06:27:23.071030 139716428515072 hlog.py:32] train/00095/eval_train/acc 0.9980
I1204 06:27:23.628239 139716428515072 hlog.py:32] train/00095/eval_val/acc 0.4257
I1204 06:27:23.628702 139716428515072 hlog.py:18] train/00095{16.62s}
I1204 06:27:35.285047 139716428515072 hlog.py:32] train/00096/loss 0.0038
I1204 06:27:39.483994 139716428515072 hlog.py:32] train/00096/eval_train/acc 1.0000
I1204 06:27:40.031958 139716428515072 hlog.py:32] train/00096/eval_val/acc 0.4324
I1204 06:27:40.032510 139716428515072 hlog.py:18] train/00096{16.40s}
I1204 06:27:52.403477 139716428515072 hlog.py:32] train/00097/loss 0.0037
I1204 06:27:55.972051 139716428515072 hlog.py:32] train/00097/eval_train/acc 0.9990
I1204 06:27:56.509639 139716428515072 hlog.py:32] train/00097/eval_val/acc 0.4257
I1204 06:27:56.510126 139716428515072 hlog.py:18] train/00097{16.48s}
I1204 06:28:08.579775 139716428515072 hlog.py:32] train/00098/loss 0.0035
I1204 06:28:12.839348 139716428515072 hlog.py:32] train/00098/eval_train/acc 1.0000
I1204 06:28:13.384115 139716428515072 hlog.py:32] train/00098/eval_val/acc 0.4324
I1204 06:28:13.384604 139716428515072 hlog.py:18] train/00098{16.87s}
I1204 06:28:25.106054 139716428515072 hlog.py:32] train/00099/loss 0.0035
I1204 06:28:29.242144 139716428515072 hlog.py:32] train/00099/eval_train/acc 0.9980
I1204 06:28:29.789674 139716428515072 hlog.py:32] train/00099/eval_val/acc 0.4324
I1204 06:28:29.840161 139716428515072 hlog.py:18] train/00099{16.46s}
I1204 06:28:43.163953 139716428515072 hlog.py:32] train/00100/loss 0.0043
I1204 06:28:46.985641 139716428515072 hlog.py:32] train/00100/eval_train/acc 1.0000
I1204 06:28:47.525991 139716428515072 hlog.py:32] train/00100/eval_val/acc 0.4527
I1204 06:28:47.526487 139716428515072 hlog.py:18] train/00100{17.69s}
I1204 06:28:59.429445 139716428515072 hlog.py:32] train/00101/loss 0.0035
I1204 06:29:03.370898 139716428515072 hlog.py:32] train/00101/eval_train/acc 1.0000
I1204 06:29:03.908047 139716428515072 hlog.py:32] train/00101/eval_val/acc 0.4595
I1204 06:29:03.908533 139716428515072 hlog.py:18] train/00101{16.38s}
I1204 06:29:15.230513 139716428515072 hlog.py:32] train/00102/loss 0.0034
I1204 06:29:19.097719 139716428515072 hlog.py:32] train/00102/eval_train/acc 1.0000
I1204 06:29:19.663246 139716428515072 hlog.py:32] train/00102/eval_val/acc 0.4595
I1204 06:29:19.663882 139716428515072 hlog.py:18] train/00102{15.76s}
I1204 06:29:32.071910 139716428515072 hlog.py:32] train/00103/loss 0.0034
I1204 06:29:36.370183 139716428515072 hlog.py:32] train/00103/eval_train/acc 1.0000
I1204 06:29:36.978596 139716428515072 hlog.py:32] train/00103/eval_val/acc 0.4459
I1204 06:29:36.979425 139716428515072 hlog.py:18] train/00103{17.32s}
I1204 06:29:49.699899 139716428515072 hlog.py:32] train/00104/loss 0.0032
I1204 06:29:53.582720 139716428515072 hlog.py:32] train/00104/eval_train/acc 1.0000
I1204 06:29:54.124504 139716428515072 hlog.py:32] train/00104/eval_val/acc 0.4527
I1204 06:29:54.125209 139716428515072 hlog.py:18] train/00104{17.15s}
I1204 06:30:06.117740 139716428515072 hlog.py:32] train/00105/loss 0.0033
I1204 06:30:09.821058 139716428515072 hlog.py:32] train/00105/eval_train/acc 1.0000
I1204 06:30:10.355986 139716428515072 hlog.py:32] train/00105/eval_val/acc 0.4527
I1204 06:30:10.356461 139716428515072 hlog.py:18] train/00105{16.23s}
I1204 06:30:21.723379 139716428515072 hlog.py:32] train/00106/loss 0.0032
I1204 06:30:25.762652 139716428515072 hlog.py:32] train/00106/eval_train/acc 1.0000
I1204 06:30:26.327265 139716428515072 hlog.py:32] train/00106/eval_val/acc 0.4662
I1204 06:30:26.327885 139716428515072 hlog.py:18] train/00106{15.97s}
I1204 06:30:39.088348 139716428515072 hlog.py:32] train/00107/loss 0.0033
I1204 06:30:43.031694 139716428515072 hlog.py:32] train/00107/eval_train/acc 1.0000
I1204 06:30:43.590575 139716428515072 hlog.py:32] train/00107/eval_val/acc 0.4595
I1204 06:30:43.591157 139716428515072 hlog.py:18] train/00107{17.26s}
I1204 06:30:56.070805 139716428515072 hlog.py:32] train/00108/loss 0.0033
I1204 06:30:59.867015 139716428515072 hlog.py:32] train/00108/eval_train/acc 1.0000
I1204 06:31:00.425962 139716428515072 hlog.py:32] train/00108/eval_val/acc 0.4527
I1204 06:31:00.426489 139716428515072 hlog.py:18] train/00108{16.84s}
I1204 06:31:13.320617 139716428515072 hlog.py:32] train/00109/loss 0.0031
I1204 06:31:17.007536 139716428515072 hlog.py:32] train/00109/eval_train/acc 1.0000
I1204 06:31:17.569263 139716428515072 hlog.py:32] train/00109/eval_val/acc 0.4527
I1204 06:31:17.599948 139716428515072 hlog.py:18] train/00109{17.17s}
I1204 06:31:30.774998 139716428515072 hlog.py:32] train/00110/loss 0.0033
I1204 06:31:35.002165 139716428515072 hlog.py:32] train/00110/eval_train/acc 1.0000
I1204 06:31:35.564414 139716428515072 hlog.py:32] train/00110/eval_val/acc 0.4595
I1204 06:31:35.565096 139716428515072 hlog.py:18] train/00110{17.96s}
I1204 06:31:48.030495 139716428515072 hlog.py:32] train/00111/loss 0.0035
I1204 06:31:52.083909 139716428515072 hlog.py:32] train/00111/eval_train/acc 1.0000
I1204 06:31:52.622440 139716428515072 hlog.py:32] train/00111/eval_val/acc 0.4595
I1204 06:31:52.622907 139716428515072 hlog.py:18] train/00111{17.06s}
I1204 06:32:05.164841 139716428515072 hlog.py:32] train/00112/loss 0.0033
I1204 06:32:09.269581 139716428515072 hlog.py:32] train/00112/eval_train/acc 1.0000
I1204 06:32:09.809100 139716428515072 hlog.py:32] train/00112/eval_val/acc 0.4662
I1204 06:32:09.809576 139716428515072 hlog.py:18] train/00112{17.19s}
I1204 06:32:21.723778 139716428515072 hlog.py:32] train/00113/loss 0.0058
I1204 06:32:25.630753 139716428515072 hlog.py:32] train/00113/eval_train/acc 1.0000
I1204 06:32:26.180027 139716428515072 hlog.py:32] train/00113/eval_val/acc 0.4662
I1204 06:32:26.180511 139716428515072 hlog.py:18] train/00113{16.37s}
I1204 06:32:38.417549 139716428515072 hlog.py:32] train/00114/loss 0.0032
I1204 06:32:42.405771 139716428515072 hlog.py:32] train/00114/eval_train/acc 1.0000
I1204 06:32:42.942018 139716428515072 hlog.py:32] train/00114/eval_val/acc 0.4662
I1204 06:32:42.942504 139716428515072 hlog.py:18] train/00114{16.76s}
I1204 06:32:55.223636 139716428515072 hlog.py:32] train/00115/loss 0.0032
I1204 06:32:59.446712 139716428515072 hlog.py:32] train/00115/eval_train/acc 1.0000
I1204 06:32:59.979377 139716428515072 hlog.py:32] train/00115/eval_val/acc 0.4662
I1204 06:32:59.979886 139716428515072 hlog.py:18] train/00115{17.04s}
I1204 06:33:12.689952 139716428515072 hlog.py:32] train/00116/loss 0.0031
I1204 06:33:16.438715 139716428515072 hlog.py:32] train/00116/eval_train/acc 1.0000
I1204 06:33:16.998727 139716428515072 hlog.py:32] train/00116/eval_val/acc 0.4662
I1204 06:33:16.999215 139716428515072 hlog.py:18] train/00116{17.02s}
I1204 06:33:28.769780 139716428515072 hlog.py:32] train/00117/loss 0.0028
I1204 06:33:32.598235 139716428515072 hlog.py:32] train/00117/eval_train/acc 1.0000
I1204 06:33:33.145659 139716428515072 hlog.py:32] train/00117/eval_val/acc 0.4662
I1204 06:33:33.146144 139716428515072 hlog.py:18] train/00117{16.15s}
I1204 06:33:45.431735 139716428515072 hlog.py:32] train/00118/loss 0.0032
I1204 06:33:49.629340 139716428515072 hlog.py:32] train/00118/eval_train/acc 1.0000
I1204 06:33:50.170210 139716428515072 hlog.py:32] train/00118/eval_val/acc 0.4662
I1204 06:33:50.170745 139716428515072 hlog.py:18] train/00118{17.02s}
I1204 06:34:02.040788 139716428515072 hlog.py:32] train/00119/loss 0.0033
I1204 06:34:05.748362 139716428515072 hlog.py:32] train/00119/eval_train/acc 1.0000
I1204 06:34:06.305349 139716428515072 hlog.py:32] train/00119/eval_val/acc 0.4662
I1204 06:34:06.335536 139716428515072 hlog.py:18] train/00119{16.16s}
I1204 06:34:18.290237 139716428515072 hlog.py:32] train/00120/loss 0.0033
I1204 06:34:21.900861 139716428515072 hlog.py:32] train/00120/eval_train/acc 1.0000
I1204 06:34:22.464369 139716428515072 hlog.py:32] train/00120/eval_val/acc 0.4662
I1204 06:34:22.464857 139716428515072 hlog.py:18] train/00120{16.13s}
I1204 06:34:34.929987 139716428515072 hlog.py:32] train/00121/loss 0.0029
I1204 06:34:38.911975 139716428515072 hlog.py:32] train/00121/eval_train/acc 1.0000
I1204 06:34:39.463255 139716428515072 hlog.py:32] train/00121/eval_val/acc 0.4662
I1204 06:34:39.463797 139716428515072 hlog.py:18] train/00121{17.00s}
I1204 06:34:51.244071 139716428515072 hlog.py:32] train/00122/loss 0.0028
I1204 06:34:55.011029 139716428515072 hlog.py:32] train/00122/eval_train/acc 1.0000
I1204 06:34:55.572020 139716428515072 hlog.py:32] train/00122/eval_val/acc 0.4662
I1204 06:34:55.572490 139716428515072 hlog.py:18] train/00122{16.11s}
I1204 06:35:07.721725 139716428515072 hlog.py:32] train/00123/loss 0.0030
I1204 06:35:11.505004 139716428515072 hlog.py:32] train/00123/eval_train/acc 1.0000
I1204 06:35:12.056910 139716428515072 hlog.py:32] train/00123/eval_val/acc 0.4662
I1204 06:35:12.057397 139716428515072 hlog.py:18] train/00123{16.48s}
I1204 06:35:24.046270 139716428515072 hlog.py:32] train/00124/loss 0.0033
I1204 06:35:27.788849 139716428515072 hlog.py:32] train/00124/eval_train/acc 1.0000
I1204 06:35:28.342330 139716428515072 hlog.py:32] train/00124/eval_val/acc 0.4662
I1204 06:35:28.342816 139716428515072 hlog.py:18] train/00124{16.29s}
I1204 06:35:40.427912 139716428515072 hlog.py:32] train/00125/loss 0.0032
I1204 06:35:44.230461 139716428515072 hlog.py:32] train/00125/eval_train/acc 1.0000
I1204 06:35:44.792529 139716428515072 hlog.py:32] train/00125/eval_val/acc 0.4662
I1204 06:35:44.793023 139716428515072 hlog.py:18] train/00125{16.45s}
I1204 06:35:57.080250 139716428515072 hlog.py:32] train/00126/loss 0.0028
I1204 06:36:01.013551 139716428515072 hlog.py:32] train/00126/eval_train/acc 1.0000
I1204 06:36:01.553720 139716428515072 hlog.py:32] train/00126/eval_val/acc 0.4662
I1204 06:36:01.554185 139716428515072 hlog.py:18] train/00126{16.76s}
I1204 06:36:13.318936 139716428515072 hlog.py:32] train/00127/loss 0.0034
I1204 06:36:17.491551 139716428515072 hlog.py:32] train/00127/eval_train/acc 1.0000
I1204 06:36:18.038151 139716428515072 hlog.py:32] train/00127/eval_val/acc 0.4730
I1204 06:36:18.038663 139716428515072 hlog.py:18] train/00127{16.48s}
I1204 06:36:30.110465 139716428515072 hlog.py:32] train/00128/loss 0.0031
I1204 06:36:34.154492 139716428515072 hlog.py:32] train/00128/eval_train/acc 1.0000
I1204 06:36:34.772599 139716428515072 hlog.py:32] train/00128/eval_val/acc 0.4730
I1204 06:36:34.773178 139716428515072 hlog.py:18] train/00128{16.73s}
I1204 06:36:47.338406 139716428515072 hlog.py:32] train/00129/loss 0.0031
I1204 06:36:51.052540 139716428515072 hlog.py:32] train/00129/eval_train/acc 1.0000
I1204 06:36:51.593513 139716428515072 hlog.py:32] train/00129/eval_val/acc 0.4662
I1204 06:36:51.623932 139716428515072 hlog.py:18] train/00129{16.85s}
I1204 06:37:04.428446 139716428515072 hlog.py:32] train/00130/loss 0.0031
I1204 06:37:08.233053 139716428515072 hlog.py:32] train/00130/eval_train/acc 1.0000
I1204 06:37:08.790588 139716428515072 hlog.py:32] train/00130/eval_val/acc 0.4662
I1204 06:37:08.791041 139716428515072 hlog.py:18] train/00130{17.17s}
I1204 06:37:22.259453 139716428515072 hlog.py:32] train/00131/loss 0.0037
I1204 06:37:26.259836 139716428515072 hlog.py:32] train/00131/eval_train/acc 1.0000
I1204 06:37:26.814892 139716428515072 hlog.py:32] train/00131/eval_val/acc 0.4662
I1204 06:37:26.815439 139716428515072 hlog.py:18] train/00131{18.02s}
I1204 06:37:39.551156 139716428515072 hlog.py:32] train/00132/loss 0.0030
I1204 06:37:43.295216 139716428515072 hlog.py:32] train/00132/eval_train/acc 1.0000
I1204 06:37:43.871048 139716428515072 hlog.py:32] train/00132/eval_val/acc 0.4662
I1204 06:37:43.871786 139716428515072 hlog.py:18] train/00132{17.06s}
I1204 06:37:56.184751 139716428515072 hlog.py:32] train/00133/loss 0.0026
I1204 06:38:00.080401 139716428515072 hlog.py:32] train/00133/eval_train/acc 1.0000
I1204 06:38:00.644772 139716428515072 hlog.py:32] train/00133/eval_val/acc 0.4662
I1204 06:38:00.645274 139716428515072 hlog.py:18] train/00133{16.77s}
I1204 06:38:12.512382 139716428515072 hlog.py:32] train/00134/loss 0.0029
I1204 06:38:16.375452 139716428515072 hlog.py:32] train/00134/eval_train/acc 1.0000
I1204 06:38:16.941930 139716428515072 hlog.py:32] train/00134/eval_val/acc 0.4662
I1204 06:38:16.942402 139716428515072 hlog.py:18] train/00134{16.30s}
I1204 06:38:28.808451 139716428515072 hlog.py:32] train/00135/loss 0.0031
I1204 06:38:32.535158 139716428515072 hlog.py:32] train/00135/eval_train/acc 1.0000
I1204 06:38:33.104582 139716428515072 hlog.py:32] train/00135/eval_val/acc 0.4662
I1204 06:38:33.105077 139716428515072 hlog.py:18] train/00135{16.16s}
I1204 06:38:45.198902 139716428515072 hlog.py:32] train/00136/loss 0.0027
I1204 06:38:48.839223 139716428515072 hlog.py:32] train/00136/eval_train/acc 1.0000
I1204 06:38:49.392853 139716428515072 hlog.py:32] train/00136/eval_val/acc 0.4662
I1204 06:38:49.393357 139716428515072 hlog.py:18] train/00136{16.29s}
I1204 06:39:01.890606 139716428515072 hlog.py:32] train/00137/loss 0.0031
I1204 06:39:06.096398 139716428515072 hlog.py:32] train/00137/eval_train/acc 1.0000
I1204 06:39:06.653782 139716428515072 hlog.py:32] train/00137/eval_val/acc 0.4662
I1204 06:39:06.654312 139716428515072 hlog.py:18] train/00137{17.26s}
I1204 06:39:19.056576 139716428515072 hlog.py:32] train/00138/loss 0.0032
I1204 06:39:22.876437 139716428515072 hlog.py:32] train/00138/eval_train/acc 1.0000
I1204 06:39:23.453457 139716428515072 hlog.py:32] train/00138/eval_val/acc 0.4662
I1204 06:39:23.453949 139716428515072 hlog.py:18] train/00138{16.80s}
I1204 06:39:36.132357 139716428515072 hlog.py:32] train/00139/loss 0.0031
I1204 06:39:39.982214 139716428515072 hlog.py:32] train/00139/eval_train/acc 1.0000
I1204 06:39:40.519585 139716428515072 hlog.py:32] train/00139/eval_val/acc 0.4662
I1204 06:39:40.550084 139716428515072 hlog.py:18] train/00139{17.10s}
I1204 06:39:53.741492 139716428515072 hlog.py:32] train/00140/loss 0.0026
I1204 06:39:57.805107 139716428515072 hlog.py:32] train/00140/eval_train/acc 1.0000
I1204 06:39:58.346583 139716428515072 hlog.py:32] train/00140/eval_val/acc 0.4662
I1204 06:39:58.347139 139716428515072 hlog.py:18] train/00140{17.80s}
I1204 06:40:10.765800 139716428515072 hlog.py:32] train/00141/loss 0.0028
I1204 06:40:15.088079 139716428515072 hlog.py:32] train/00141/eval_train/acc 1.0000
I1204 06:40:15.649270 139716428515072 hlog.py:32] train/00141/eval_val/acc 0.4662
I1204 06:40:15.649941 139716428515072 hlog.py:18] train/00141{17.30s}
I1204 06:40:28.169363 139716428515072 hlog.py:32] train/00142/loss 0.0026
I1204 06:40:32.269589 139716428515072 hlog.py:32] train/00142/eval_train/acc 1.0000
I1204 06:40:32.825139 139716428515072 hlog.py:32] train/00142/eval_val/acc 0.4662
I1204 06:40:32.825764 139716428515072 hlog.py:18] train/00142{17.18s}
I1204 06:40:44.561299 139716428515072 hlog.py:32] train/00143/loss 0.0031
I1204 06:40:48.574464 139716428515072 hlog.py:32] train/00143/eval_train/acc 1.0000
I1204 06:40:49.139967 139716428515072 hlog.py:32] train/00143/eval_val/acc 0.4662
I1204 06:40:49.140490 139716428515072 hlog.py:18] train/00143{16.31s}
I1204 06:41:01.022052 139716428515072 hlog.py:32] train/00144/loss 0.0031
I1204 06:41:04.734689 139716428515072 hlog.py:32] train/00144/eval_train/acc 1.0000
I1204 06:41:05.281632 139716428515072 hlog.py:32] train/00144/eval_val/acc 0.4662
I1204 06:41:05.282145 139716428515072 hlog.py:18] train/00144{16.14s}
I1204 06:41:17.405850 139716428515072 hlog.py:32] train/00145/loss 0.0030
I1204 06:41:21.706885 139716428515072 hlog.py:32] train/00145/eval_train/acc 1.0000
I1204 06:41:22.266689 139716428515072 hlog.py:32] train/00145/eval_val/acc 0.4662
I1204 06:41:22.267231 139716428515072 hlog.py:18] train/00145{16.98s}
I1204 06:41:35.117063 139716428515072 hlog.py:32] train/00146/loss 0.0031
I1204 06:41:39.197651 139716428515072 hlog.py:32] train/00146/eval_train/acc 1.0000
I1204 06:41:39.734084 139716428515072 hlog.py:32] train/00146/eval_val/acc 0.4662
I1204 06:41:39.734547 139716428515072 hlog.py:18] train/00146{17.47s}
I1204 06:41:52.427578 139716428515072 hlog.py:32] train/00147/loss 0.0030
I1204 06:41:56.211129 139716428515072 hlog.py:32] train/00147/eval_train/acc 1.0000
I1204 06:41:56.783624 139716428515072 hlog.py:32] train/00147/eval_val/acc 0.4662
I1204 06:41:56.784152 139716428515072 hlog.py:18] train/00147{17.05s}
I1204 06:42:09.938306 139716428515072 hlog.py:32] train/00148/loss 0.0030
I1204 06:42:13.872618 139716428515072 hlog.py:32] train/00148/eval_train/acc 1.0000
I1204 06:42:14.483144 139716428515072 hlog.py:32] train/00148/eval_val/acc 0.4662
I1204 06:42:14.483738 139716428515072 hlog.py:18] train/00148{17.70s}
I1204 06:42:26.236917 139716428515072 hlog.py:32] train/00149/loss 0.0030
I1204 06:42:30.260406 139716428515072 hlog.py:32] train/00149/eval_train/acc 1.0000
I1204 06:42:30.462229 139716428515072 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1204 06:42:30.462430 139716428515072 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 06:42:30.462530 139716428515072 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 06:42:30.462613 139716428515072 hlog.py:32] train/00149/eval_val/0/corr True
I1204 06:42:30.462687 139716428515072 hlog.py:32] train/00149/eval_val/0 
I1204 06:42:30.462761 139716428515072 hlog.py:18] train/00149/eval_val/0{0.00s}
I1204 06:42:30.462849 139716428515072 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1204 06:42:30.462944 139716428515072 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _population ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 06:42:30.463031 139716428515072 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.463113 139716428515072 hlog.py:32] train/00149/eval_val/1/corr False
I1204 06:42:30.463185 139716428515072 hlog.py:32] train/00149/eval_val/1 
I1204 06:42:30.463254 139716428515072 hlog.py:18] train/00149/eval_val/1{0.00s}
I1204 06:42:30.463339 139716428515072 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1204 06:42:30.463468 139716428515072 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1204 06:42:30.463562 139716428515072 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1204 06:42:30.463642 139716428515072 hlog.py:32] train/00149/eval_val/2/corr False
I1204 06:42:30.463729 139716428515072 hlog.py:32] train/00149/eval_val/2 
I1204 06:42:30.463812 139716428515072 hlog.py:18] train/00149/eval_val/2{0.00s}
I1204 06:42:30.463896 139716428515072 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1204 06:42:30.463990 139716428515072 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 06:42:30.464076 139716428515072 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 06:42:30.464151 139716428515072 hlog.py:32] train/00149/eval_val/3/corr False
I1204 06:42:30.464221 139716428515072 hlog.py:32] train/00149/eval_val/3 
I1204 06:42:30.464290 139716428515072 hlog.py:18] train/00149/eval_val/3{0.00s}
I1204 06:42:30.464376 139716428515072 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1204 06:42:30.464468 139716428515072 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1204 06:42:30.464555 139716428515072 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1204 06:42:30.464630 139716428515072 hlog.py:32] train/00149/eval_val/4/corr False
I1204 06:42:30.464700 139716428515072 hlog.py:32] train/00149/eval_val/4 
I1204 06:42:30.464769 139716428515072 hlog.py:18] train/00149/eval_val/4{0.00s}
I1204 06:42:30.464851 139716428515072 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1204 06:42:30.464944 139716428515072 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 06:42:30.465030 139716428515072 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.465105 139716428515072 hlog.py:32] train/00149/eval_val/5/corr False
I1204 06:42:30.465175 139716428515072 hlog.py:32] train/00149/eval_val/5 
I1204 06:42:30.465244 139716428515072 hlog.py:18] train/00149/eval_val/5{0.00s}
I1204 06:42:30.465327 139716428515072 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1204 06:42:30.465430 139716428515072 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 06:42:30.465516 139716428515072 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.465590 139716428515072 hlog.py:32] train/00149/eval_val/6/corr False
I1204 06:42:30.465660 139716428515072 hlog.py:32] train/00149/eval_val/6 
I1204 06:42:30.465728 139716428515072 hlog.py:18] train/00149/eval_val/6{0.00s}
I1204 06:42:30.465814 139716428515072 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1204 06:42:30.465905 139716428515072 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1204 06:42:30.465990 139716428515072 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.466064 139716428515072 hlog.py:32] train/00149/eval_val/7/corr False
I1204 06:42:30.466134 139716428515072 hlog.py:32] train/00149/eval_val/7 
I1204 06:42:30.466202 139716428515072 hlog.py:18] train/00149/eval_val/7{0.00s}
I1204 06:42:30.466286 139716428515072 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1204 06:42:30.466378 139716428515072 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 06:42:30.466463 139716428515072 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 06:42:30.466538 139716428515072 hlog.py:32] train/00149/eval_val/8/corr False
I1204 06:42:30.466608 139716428515072 hlog.py:32] train/00149/eval_val/8 
I1204 06:42:30.466676 139716428515072 hlog.py:18] train/00149/eval_val/8{0.00s}
I1204 06:42:30.466760 139716428515072 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1204 06:42:30.466852 139716428515072 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _population ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 06:42:30.466937 139716428515072 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 06:42:30.467011 139716428515072 hlog.py:32] train/00149/eval_val/9/corr False
I1204 06:42:30.467081 139716428515072 hlog.py:32] train/00149/eval_val/9 
I1204 06:42:30.467149 139716428515072 hlog.py:18] train/00149/eval_val/9{0.00s}
I1204 06:42:30.467232 139716428515072 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1204 06:42:30.467324 139716428515072 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 06:42:30.467430 139716428515072 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.467525 139716428515072 hlog.py:32] train/00149/eval_val/10/corr False
I1204 06:42:30.467600 139716428515072 hlog.py:32] train/00149/eval_val/10 
I1204 06:42:30.467673 139716428515072 hlog.py:18] train/00149/eval_val/10{0.00s}
I1204 06:42:30.467792 139716428515072 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1204 06:42:30.467894 139716428515072 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 06:42:30.467985 139716428515072 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 06:42:30.468060 139716428515072 hlog.py:32] train/00149/eval_val/11/corr True
I1204 06:42:30.468130 139716428515072 hlog.py:32] train/00149/eval_val/11 
I1204 06:42:30.468198 139716428515072 hlog.py:18] train/00149/eval_val/11{0.00s}
I1204 06:42:30.468289 139716428515072 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1204 06:42:30.468389 139716428515072 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 06:42:30.468486 139716428515072 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 06:42:30.468562 139716428515072 hlog.py:32] train/00149/eval_val/12/corr True
I1204 06:42:30.468632 139716428515072 hlog.py:32] train/00149/eval_val/12 
I1204 06:42:30.468700 139716428515072 hlog.py:18] train/00149/eval_val/12{0.00s}
I1204 06:42:30.468791 139716428515072 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1204 06:42:30.468891 139716428515072 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 06:42:30.468981 139716428515072 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 06:42:30.469057 139716428515072 hlog.py:32] train/00149/eval_val/13/corr True
I1204 06:42:30.469127 139716428515072 hlog.py:32] train/00149/eval_val/13 
I1204 06:42:30.469195 139716428515072 hlog.py:18] train/00149/eval_val/13{0.00s}
I1204 06:42:30.469285 139716428515072 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1204 06:42:30.469386 139716428515072 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 06:42:30.469476 139716428515072 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 06:42:30.469551 139716428515072 hlog.py:32] train/00149/eval_val/14/corr True
I1204 06:42:30.469622 139716428515072 hlog.py:32] train/00149/eval_val/14 
I1204 06:42:30.469689 139716428515072 hlog.py:18] train/00149/eval_val/14{0.00s}
I1204 06:42:30.469780 139716428515072 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1204 06:42:30.469880 139716428515072 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 06:42:30.469970 139716428515072 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 06:42:30.470045 139716428515072 hlog.py:32] train/00149/eval_val/15/corr True
I1204 06:42:30.470115 139716428515072 hlog.py:32] train/00149/eval_val/15 
I1204 06:42:30.470183 139716428515072 hlog.py:18] train/00149/eval_val/15{0.00s}
I1204 06:42:30.470273 139716428515072 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1204 06:42:30.470374 139716428515072 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 06:42:30.470464 139716428515072 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 06:42:30.470539 139716428515072 hlog.py:32] train/00149/eval_val/16/corr True
I1204 06:42:30.470609 139716428515072 hlog.py:32] train/00149/eval_val/16 
I1204 06:42:30.470677 139716428515072 hlog.py:18] train/00149/eval_val/16{0.00s}
I1204 06:42:30.470761 139716428515072 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1204 06:42:30.470857 139716428515072 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1204 06:42:30.470948 139716428515072 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1204 06:42:30.471028 139716428515072 hlog.py:32] train/00149/eval_val/17/corr False
I1204 06:42:30.471099 139716428515072 hlog.py:32] train/00149/eval_val/17 
I1204 06:42:30.471167 139716428515072 hlog.py:18] train/00149/eval_val/17{0.00s}
I1204 06:42:30.471251 139716428515072 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1204 06:42:30.471348 139716428515072 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1204 06:42:30.471475 139716428515072 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1204 06:42:30.471558 139716428515072 hlog.py:32] train/00149/eval_val/18/corr False
I1204 06:42:30.471632 139716428515072 hlog.py:32] train/00149/eval_val/18 
I1204 06:42:30.471718 139716428515072 hlog.py:18] train/00149/eval_val/18{0.00s}
I1204 06:42:30.471816 139716428515072 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1204 06:42:30.471912 139716428515072 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 06:42:30.472002 139716428515072 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1204 06:42:30.472077 139716428515072 hlog.py:32] train/00149/eval_val/19/corr False
I1204 06:42:30.472147 139716428515072 hlog.py:32] train/00149/eval_val/19 
I1204 06:42:30.472215 139716428515072 hlog.py:18] train/00149/eval_val/19{0.00s}
I1204 06:42:30.472300 139716428515072 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1204 06:42:30.472396 139716428515072 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1204 06:42:30.472486 139716428515072 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1204 06:42:30.472561 139716428515072 hlog.py:32] train/00149/eval_val/20/corr False
I1204 06:42:30.472631 139716428515072 hlog.py:32] train/00149/eval_val/20 
I1204 06:42:30.472700 139716428515072 hlog.py:18] train/00149/eval_val/20{0.00s}
I1204 06:42:30.472790 139716428515072 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1204 06:42:30.472891 139716428515072 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 06:42:30.472981 139716428515072 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 06:42:30.473056 139716428515072 hlog.py:32] train/00149/eval_val/21/corr True
I1204 06:42:30.473126 139716428515072 hlog.py:32] train/00149/eval_val/21 
I1204 06:42:30.473194 139716428515072 hlog.py:18] train/00149/eval_val/21{0.00s}
I1204 06:42:30.473278 139716428515072 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1204 06:42:30.473371 139716428515072 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( rio grande , _ ) ) ) )
I1204 06:42:30.473457 139716428515072 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1204 06:42:30.473531 139716428515072 hlog.py:32] train/00149/eval_val/22/corr False
I1204 06:42:30.473601 139716428515072 hlog.py:32] train/00149/eval_val/22 
I1204 06:42:30.473669 139716428515072 hlog.py:18] train/00149/eval_val/22{0.00s}
I1204 06:42:30.473754 139716428515072 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1204 06:42:30.473845 139716428515072 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 06:42:30.473936 139716428515072 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 06:42:30.474011 139716428515072 hlog.py:32] train/00149/eval_val/23/corr False
I1204 06:42:30.474081 139716428515072 hlog.py:32] train/00149/eval_val/23 
I1204 06:42:30.474149 139716428515072 hlog.py:18] train/00149/eval_val/23{0.00s}
I1204 06:42:30.474232 139716428515072 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1204 06:42:30.474319 139716428515072 hlog.py:32] train/00149/eval_val/24/pred ( A , _largest ( A , _state ( A ) ) )
I1204 06:42:30.474404 139716428515072 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 06:42:30.474479 139716428515072 hlog.py:32] train/00149/eval_val/24/corr False
I1204 06:42:30.474549 139716428515072 hlog.py:32] train/00149/eval_val/24 
I1204 06:42:30.474617 139716428515072 hlog.py:18] train/00149/eval_val/24{0.00s}
I1204 06:42:30.474705 139716428515072 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1204 06:42:30.474799 139716428515072 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 06:42:30.474886 139716428515072 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 06:42:30.474961 139716428515072 hlog.py:32] train/00149/eval_val/25/corr True
I1204 06:42:30.475031 139716428515072 hlog.py:32] train/00149/eval_val/25 
I1204 06:42:30.475099 139716428515072 hlog.py:18] train/00149/eval_val/25{0.00s}
I1204 06:42:30.475188 139716428515072 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1204 06:42:30.475282 139716428515072 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 06:42:30.475368 139716428515072 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 06:42:30.475483 139716428515072 hlog.py:32] train/00149/eval_val/26/corr True
I1204 06:42:30.475559 139716428515072 hlog.py:32] train/00149/eval_val/26 
I1204 06:42:30.475632 139716428515072 hlog.py:18] train/00149/eval_val/26{0.00s}
I1204 06:42:30.475734 139716428515072 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1204 06:42:30.475851 139716428515072 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) )
I1204 06:42:30.475937 139716428515072 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 06:42:30.476012 139716428515072 hlog.py:32] train/00149/eval_val/27/corr False
I1204 06:42:30.476082 139716428515072 hlog.py:32] train/00149/eval_val/27 
I1204 06:42:30.476150 139716428515072 hlog.py:18] train/00149/eval_val/27{0.00s}
I1204 06:42:30.476238 139716428515072 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1204 06:42:30.476332 139716428515072 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 06:42:30.476418 139716428515072 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 06:42:30.476493 139716428515072 hlog.py:32] train/00149/eval_val/28/corr True
I1204 06:42:30.476563 139716428515072 hlog.py:32] train/00149/eval_val/28 
I1204 06:42:30.476630 139716428515072 hlog.py:18] train/00149/eval_val/28{0.00s}
I1204 06:42:30.476719 139716428515072 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1204 06:42:30.476813 139716428515072 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 06:42:30.476906 139716428515072 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 06:42:30.476981 139716428515072 hlog.py:32] train/00149/eval_val/29/corr True
I1204 06:42:30.477051 139716428515072 hlog.py:32] train/00149/eval_val/29 
I1204 06:42:30.477119 139716428515072 hlog.py:18] train/00149/eval_val/29{0.00s}
I1204 06:42:30.477208 139716428515072 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1204 06:42:30.477302 139716428515072 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 06:42:30.477389 139716428515072 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 06:42:30.477464 139716428515072 hlog.py:32] train/00149/eval_val/30/corr True
I1204 06:42:30.477534 139716428515072 hlog.py:32] train/00149/eval_val/30 
I1204 06:42:30.477602 139716428515072 hlog.py:18] train/00149/eval_val/30{0.00s}
I1204 06:42:30.477690 139716428515072 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1204 06:42:30.477784 139716428515072 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 06:42:30.477870 139716428515072 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 06:42:30.477944 139716428515072 hlog.py:32] train/00149/eval_val/31/corr True
I1204 06:42:30.478014 139716428515072 hlog.py:32] train/00149/eval_val/31 
I1204 06:42:30.478082 139716428515072 hlog.py:18] train/00149/eval_val/31{0.00s}
I1204 06:42:30.478171 139716428515072 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1204 06:42:30.478266 139716428515072 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 06:42:30.478353 139716428515072 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 06:42:30.478428 139716428515072 hlog.py:32] train/00149/eval_val/32/corr True
I1204 06:42:30.478498 139716428515072 hlog.py:32] train/00149/eval_val/32 
I1204 06:42:30.478566 139716428515072 hlog.py:18] train/00149/eval_val/32{0.00s}
I1204 06:42:30.478654 139716428515072 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1204 06:42:30.478749 139716428515072 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 06:42:30.478835 139716428515072 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 06:42:30.478910 139716428515072 hlog.py:32] train/00149/eval_val/33/corr True
I1204 06:42:30.478980 139716428515072 hlog.py:32] train/00149/eval_val/33 
I1204 06:42:30.479048 139716428515072 hlog.py:18] train/00149/eval_val/33{0.00s}
I1204 06:42:30.479136 139716428515072 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1204 06:42:30.479230 139716428515072 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 06:42:30.479317 139716428515072 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 06:42:30.479413 139716428515072 hlog.py:32] train/00149/eval_val/34/corr True
I1204 06:42:30.479502 139716428515072 hlog.py:32] train/00149/eval_val/34 
I1204 06:42:30.479575 139716428515072 hlog.py:18] train/00149/eval_val/34{0.00s}
I1204 06:42:30.479671 139716428515072 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1204 06:42:30.479798 139716428515072 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.479893 139716428515072 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.479969 139716428515072 hlog.py:32] train/00149/eval_val/35/corr True
I1204 06:42:30.480038 139716428515072 hlog.py:32] train/00149/eval_val/35 
I1204 06:42:30.480107 139716428515072 hlog.py:18] train/00149/eval_val/35{0.00s}
I1204 06:42:30.480197 139716428515072 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1204 06:42:30.480294 139716428515072 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.480382 139716428515072 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.480457 139716428515072 hlog.py:32] train/00149/eval_val/36/corr True
I1204 06:42:30.480527 139716428515072 hlog.py:32] train/00149/eval_val/36 
I1204 06:42:30.480595 139716428515072 hlog.py:18] train/00149/eval_val/36{0.00s}
I1204 06:42:30.480684 139716428515072 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1204 06:42:30.480781 139716428515072 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1204 06:42:30.480869 139716428515072 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.480943 139716428515072 hlog.py:32] train/00149/eval_val/37/corr False
I1204 06:42:30.481013 139716428515072 hlog.py:32] train/00149/eval_val/37 
I1204 06:42:30.481081 139716428515072 hlog.py:18] train/00149/eval_val/37{0.00s}
I1204 06:42:30.481170 139716428515072 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1204 06:42:30.481267 139716428515072 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.481356 139716428515072 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.481430 139716428515072 hlog.py:32] train/00149/eval_val/38/corr True
I1204 06:42:30.481500 139716428515072 hlog.py:32] train/00149/eval_val/38 
I1204 06:42:30.481568 139716428515072 hlog.py:18] train/00149/eval_val/38{0.00s}
I1204 06:42:30.481657 139716428515072 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1204 06:42:30.481755 139716428515072 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.481843 139716428515072 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 06:42:30.481918 139716428515072 hlog.py:32] train/00149/eval_val/39/corr True
I1204 06:42:30.481988 139716428515072 hlog.py:32] train/00149/eval_val/39 
I1204 06:42:30.482055 139716428515072 hlog.py:18] train/00149/eval_val/39{0.00s}
I1204 06:42:30.482138 139716428515072 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1204 06:42:30.482235 139716428515072 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 06:42:30.482322 139716428515072 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 06:42:30.482397 139716428515072 hlog.py:32] train/00149/eval_val/40/corr False
I1204 06:42:30.482467 139716428515072 hlog.py:32] train/00149/eval_val/40 
I1204 06:42:30.482535 139716428515072 hlog.py:18] train/00149/eval_val/40{0.00s}
I1204 06:42:30.482618 139716428515072 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1204 06:42:30.482725 139716428515072 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1204 06:42:30.482812 139716428515072 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 06:42:30.482887 139716428515072 hlog.py:32] train/00149/eval_val/41/corr False
I1204 06:42:30.482957 139716428515072 hlog.py:32] train/00149/eval_val/41 
I1204 06:42:30.483025 139716428515072 hlog.py:18] train/00149/eval_val/41{0.00s}
I1204 06:42:30.483108 139716428515072 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1204 06:42:30.483208 139716428515072 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 06:42:30.483293 139716428515072 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1204 06:42:30.483367 139716428515072 hlog.py:32] train/00149/eval_val/42/corr False
I1204 06:42:30.483475 139716428515072 hlog.py:32] train/00149/eval_val/42 
I1204 06:42:30.483549 139716428515072 hlog.py:18] train/00149/eval_val/42{0.00s}
I1204 06:42:30.483639 139716428515072 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1204 06:42:30.483773 139716428515072 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( C ) ) ) ) , A ) )
I1204 06:42:30.483866 139716428515072 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1204 06:42:30.483941 139716428515072 hlog.py:32] train/00149/eval_val/43/corr False
I1204 06:42:30.484011 139716428515072 hlog.py:32] train/00149/eval_val/43 
I1204 06:42:30.484079 139716428515072 hlog.py:18] train/00149/eval_val/43{0.00s}
I1204 06:42:30.484171 139716428515072 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1204 06:42:30.484274 139716428515072 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 06:42:30.484366 139716428515072 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 06:42:30.484441 139716428515072 hlog.py:32] train/00149/eval_val/44/corr True
I1204 06:42:30.484511 139716428515072 hlog.py:32] train/00149/eval_val/44 
I1204 06:42:30.484579 139716428515072 hlog.py:18] train/00149/eval_val/44{0.00s}
I1204 06:42:30.484666 139716428515072 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1204 06:42:30.484763 139716428515072 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 06:42:30.484852 139716428515072 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 06:42:30.484927 139716428515072 hlog.py:32] train/00149/eval_val/45/corr False
I1204 06:42:30.484997 139716428515072 hlog.py:32] train/00149/eval_val/45 
I1204 06:42:30.485065 139716428515072 hlog.py:18] train/00149/eval_val/45{0.00s}
I1204 06:42:30.485155 139716428515072 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1204 06:42:30.485252 139716428515072 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 06:42:30.485340 139716428515072 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 06:42:30.485415 139716428515072 hlog.py:32] train/00149/eval_val/46/corr True
I1204 06:42:30.485491 139716428515072 hlog.py:32] train/00149/eval_val/46 
I1204 06:42:30.485560 139716428515072 hlog.py:18] train/00149/eval_val/46{0.00s}
I1204 06:42:30.485649 139716428515072 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1204 06:42:30.485748 139716428515072 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( B ) ) , A ) )
I1204 06:42:30.485838 139716428515072 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 06:42:30.485913 139716428515072 hlog.py:32] train/00149/eval_val/47/corr False
I1204 06:42:30.485982 139716428515072 hlog.py:32] train/00149/eval_val/47 
I1204 06:42:30.486051 139716428515072 hlog.py:18] train/00149/eval_val/47{0.00s}
I1204 06:42:30.486142 139716428515072 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1204 06:42:30.486242 139716428515072 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 06:42:30.486332 139716428515072 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 06:42:30.486407 139716428515072 hlog.py:32] train/00149/eval_val/48/corr True
I1204 06:42:30.486478 139716428515072 hlog.py:32] train/00149/eval_val/48 
I1204 06:42:30.486546 139716428515072 hlog.py:18] train/00149/eval_val/48{0.00s}
I1204 06:42:30.486634 139716428515072 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1204 06:42:30.486735 139716428515072 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 06:42:30.486825 139716428515072 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 06:42:30.486900 139716428515072 hlog.py:32] train/00149/eval_val/49/corr False
I1204 06:42:30.486970 139716428515072 hlog.py:32] train/00149/eval_val/49 
I1204 06:42:30.487038 139716428515072 hlog.py:18] train/00149/eval_val/49{0.00s}
I1204 06:42:30.487121 139716428515072 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1204 06:42:30.487221 139716428515072 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) ) , A ) )
I1204 06:42:30.487312 139716428515072 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 06:42:30.487399 139716428515072 hlog.py:32] train/00149/eval_val/50/corr False
I1204 06:42:30.487495 139716428515072 hlog.py:32] train/00149/eval_val/50 
I1204 06:42:30.487569 139716428515072 hlog.py:18] train/00149/eval_val/50{0.00s}
I1204 06:42:30.487663 139716428515072 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1204 06:42:30.487793 139716428515072 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 06:42:30.487884 139716428515072 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 06:42:30.487959 139716428515072 hlog.py:32] train/00149/eval_val/51/corr False
I1204 06:42:30.488029 139716428515072 hlog.py:32] train/00149/eval_val/51 
I1204 06:42:30.488096 139716428515072 hlog.py:18] train/00149/eval_val/51{0.00s}
I1204 06:42:30.488179 139716428515072 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1204 06:42:30.488281 139716428515072 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 06:42:30.488368 139716428515072 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 06:42:30.488443 139716428515072 hlog.py:32] train/00149/eval_val/52/corr False
I1204 06:42:30.488513 139716428515072 hlog.py:32] train/00149/eval_val/52 
I1204 06:42:30.488581 139716428515072 hlog.py:18] train/00149/eval_val/52{0.00s}
I1204 06:42:30.488663 139716428515072 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1204 06:42:30.488758 139716428515072 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 06:42:30.488845 139716428515072 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 06:42:30.488919 139716428515072 hlog.py:32] train/00149/eval_val/53/corr False
I1204 06:42:30.488990 139716428515072 hlog.py:32] train/00149/eval_val/53 
I1204 06:42:30.489058 139716428515072 hlog.py:18] train/00149/eval_val/53{0.00s}
I1204 06:42:30.489146 139716428515072 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1204 06:42:30.489240 139716428515072 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.489326 139716428515072 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.489401 139716428515072 hlog.py:32] train/00149/eval_val/54/corr True
I1204 06:42:30.489471 139716428515072 hlog.py:32] train/00149/eval_val/54 
I1204 06:42:30.489539 139716428515072 hlog.py:18] train/00149/eval_val/54{0.00s}
I1204 06:42:30.489627 139716428515072 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1204 06:42:30.489721 139716428515072 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 06:42:30.489807 139716428515072 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 06:42:30.489882 139716428515072 hlog.py:32] train/00149/eval_val/55/corr True
I1204 06:42:30.489952 139716428515072 hlog.py:32] train/00149/eval_val/55 
I1204 06:42:30.490020 139716428515072 hlog.py:18] train/00149/eval_val/55{0.00s}
I1204 06:42:30.490108 139716428515072 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1204 06:42:30.490202 139716428515072 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 06:42:30.490289 139716428515072 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 06:42:30.490363 139716428515072 hlog.py:32] train/00149/eval_val/56/corr True
I1204 06:42:30.490433 139716428515072 hlog.py:32] train/00149/eval_val/56 
I1204 06:42:30.490501 139716428515072 hlog.py:18] train/00149/eval_val/56{0.00s}
I1204 06:42:30.490587 139716428515072 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1204 06:42:30.490681 139716428515072 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _major ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.490767 139716428515072 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.490841 139716428515072 hlog.py:32] train/00149/eval_val/57/corr False
I1204 06:42:30.490911 139716428515072 hlog.py:32] train/00149/eval_val/57 
I1204 06:42:30.490979 139716428515072 hlog.py:18] train/00149/eval_val/57{0.00s}
I1204 06:42:30.491067 139716428515072 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1204 06:42:30.491167 139716428515072 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.491254 139716428515072 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.491329 139716428515072 hlog.py:32] train/00149/eval_val/58/corr True
I1204 06:42:30.491419 139716428515072 hlog.py:32] train/00149/eval_val/58 
I1204 06:42:30.491506 139716428515072 hlog.py:18] train/00149/eval_val/58{0.00s}
I1204 06:42:30.491602 139716428515072 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1204 06:42:30.491714 139716428515072 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 06:42:30.491816 139716428515072 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 06:42:30.491891 139716428515072 hlog.py:32] train/00149/eval_val/59/corr True
I1204 06:42:30.491961 139716428515072 hlog.py:32] train/00149/eval_val/59 
I1204 06:42:30.492029 139716428515072 hlog.py:18] train/00149/eval_val/59{0.00s}
I1204 06:42:30.492115 139716428515072 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1204 06:42:30.492209 139716428515072 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 06:42:30.492295 139716428515072 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 06:42:30.492370 139716428515072 hlog.py:32] train/00149/eval_val/60/corr False
I1204 06:42:30.492440 139716428515072 hlog.py:32] train/00149/eval_val/60 
I1204 06:42:30.492508 139716428515072 hlog.py:18] train/00149/eval_val/60{0.00s}
I1204 06:42:30.492594 139716428515072 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1204 06:42:30.492688 139716428515072 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 06:42:30.492775 139716428515072 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 06:42:30.492849 139716428515072 hlog.py:32] train/00149/eval_val/61/corr False
I1204 06:42:30.492919 139716428515072 hlog.py:32] train/00149/eval_val/61 
I1204 06:42:30.492987 139716428515072 hlog.py:18] train/00149/eval_val/61{0.00s}
I1204 06:42:30.493072 139716428515072 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1204 06:42:30.493165 139716428515072 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 06:42:30.493252 139716428515072 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 06:42:30.493327 139716428515072 hlog.py:32] train/00149/eval_val/62/corr False
I1204 06:42:30.493397 139716428515072 hlog.py:32] train/00149/eval_val/62 
I1204 06:42:30.493465 139716428515072 hlog.py:18] train/00149/eval_val/62{0.00s}
I1204 06:42:30.493550 139716428515072 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1204 06:42:30.493643 139716428515072 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.493730 139716428515072 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.493804 139716428515072 hlog.py:32] train/00149/eval_val/63/corr False
I1204 06:42:30.493903 139716428515072 hlog.py:32] train/00149/eval_val/63 
I1204 06:42:30.493976 139716428515072 hlog.py:18] train/00149/eval_val/63{0.00s}
I1204 06:42:30.708967 139716428515072 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1204 06:42:30.709166 139716428515072 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 06:42:30.709276 139716428515072 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 06:42:30.709358 139716428515072 hlog.py:32] train/00149/eval_val/64/corr False
I1204 06:42:30.709432 139716428515072 hlog.py:32] train/00149/eval_val/64 
I1204 06:42:30.709505 139716428515072 hlog.py:18] train/00149/eval_val/64{0.00s}
I1204 06:42:30.709594 139716428515072 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1204 06:42:30.709691 139716428515072 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.709779 139716428515072 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.709855 139716428515072 hlog.py:32] train/00149/eval_val/65/corr False
I1204 06:42:30.709926 139716428515072 hlog.py:32] train/00149/eval_val/65 
I1204 06:42:30.709995 139716428515072 hlog.py:18] train/00149/eval_val/65{0.00s}
I1204 06:42:30.710081 139716428515072 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1204 06:42:30.710175 139716428515072 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.710263 139716428515072 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.710338 139716428515072 hlog.py:32] train/00149/eval_val/66/corr False
I1204 06:42:30.710407 139716428515072 hlog.py:32] train/00149/eval_val/66 
I1204 06:42:30.710475 139716428515072 hlog.py:18] train/00149/eval_val/66{0.00s}
I1204 06:42:30.710565 139716428515072 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1204 06:42:30.710659 139716428515072 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.710746 139716428515072 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.710821 139716428515072 hlog.py:32] train/00149/eval_val/67/corr True
I1204 06:42:30.710891 139716428515072 hlog.py:32] train/00149/eval_val/67 
I1204 06:42:30.710959 139716428515072 hlog.py:18] train/00149/eval_val/67{0.00s}
I1204 06:42:30.711046 139716428515072 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1204 06:42:30.711143 139716428515072 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _major ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 06:42:30.711231 139716428515072 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 06:42:30.711306 139716428515072 hlog.py:32] train/00149/eval_val/68/corr False
I1204 06:42:30.711375 139716428515072 hlog.py:32] train/00149/eval_val/68 
I1204 06:42:30.711483 139716428515072 hlog.py:18] train/00149/eval_val/68{0.00s}
I1204 06:42:30.711576 139716428515072 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1204 06:42:30.711679 139716428515072 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _major ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.711795 139716428515072 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.711870 139716428515072 hlog.py:32] train/00149/eval_val/69/corr False
I1204 06:42:30.711940 139716428515072 hlog.py:32] train/00149/eval_val/69 
I1204 06:42:30.712008 139716428515072 hlog.py:18] train/00149/eval_val/69{0.00s}
I1204 06:42:30.712091 139716428515072 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1204 06:42:30.712184 139716428515072 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 06:42:30.712275 139716428515072 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.712350 139716428515072 hlog.py:32] train/00149/eval_val/70/corr False
I1204 06:42:30.712420 139716428515072 hlog.py:32] train/00149/eval_val/70 
I1204 06:42:30.712488 139716428515072 hlog.py:18] train/00149/eval_val/70{0.00s}
I1204 06:42:30.712572 139716428515072 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1204 06:42:30.712664 139716428515072 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 06:42:30.712749 139716428515072 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 06:42:30.712823 139716428515072 hlog.py:32] train/00149/eval_val/71/corr False
I1204 06:42:30.712893 139716428515072 hlog.py:32] train/00149/eval_val/71 
I1204 06:42:30.712960 139716428515072 hlog.py:18] train/00149/eval_val/71{0.00s}
I1204 06:42:30.713043 139716428515072 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1204 06:42:30.713136 139716428515072 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 06:42:30.713221 139716428515072 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 06:42:30.713295 139716428515072 hlog.py:32] train/00149/eval_val/72/corr False
I1204 06:42:30.713365 139716428515072 hlog.py:32] train/00149/eval_val/72 
I1204 06:42:30.713433 139716428515072 hlog.py:18] train/00149/eval_val/72{0.00s}
I1204 06:42:30.713516 139716428515072 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1204 06:42:30.713608 139716428515072 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1204 06:42:30.713693 139716428515072 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1204 06:42:30.713768 139716428515072 hlog.py:32] train/00149/eval_val/73/corr False
I1204 06:42:30.713837 139716428515072 hlog.py:32] train/00149/eval_val/73 
I1204 06:42:30.713906 139716428515072 hlog.py:18] train/00149/eval_val/73{0.00s}
I1204 06:42:30.713989 139716428515072 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1204 06:42:30.714081 139716428515072 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1204 06:42:30.714166 139716428515072 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1204 06:42:30.714240 139716428515072 hlog.py:32] train/00149/eval_val/74/corr False
I1204 06:42:30.714310 139716428515072 hlog.py:32] train/00149/eval_val/74 
I1204 06:42:30.714378 139716428515072 hlog.py:18] train/00149/eval_val/74{0.00s}
I1204 06:42:30.714463 139716428515072 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1204 06:42:30.714555 139716428515072 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , _ ) ) ) )
I1204 06:42:30.714639 139716428515072 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1204 06:42:30.714714 139716428515072 hlog.py:32] train/00149/eval_val/75/corr False
I1204 06:42:30.714783 139716428515072 hlog.py:32] train/00149/eval_val/75 
I1204 06:42:30.714851 139716428515072 hlog.py:18] train/00149/eval_val/75{0.00s}
I1204 06:42:30.714935 139716428515072 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1204 06:42:30.715028 139716428515072 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 06:42:30.715113 139716428515072 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 06:42:30.715188 139716428515072 hlog.py:32] train/00149/eval_val/76/corr False
I1204 06:42:30.715263 139716428515072 hlog.py:32] train/00149/eval_val/76 
I1204 06:42:30.715332 139716428515072 hlog.py:18] train/00149/eval_val/76{0.00s}
I1204 06:42:30.715436 139716428515072 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1204 06:42:30.715550 139716428515072 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1204 06:42:30.715641 139716428515072 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 06:42:30.715732 139716428515072 hlog.py:32] train/00149/eval_val/77/corr False
I1204 06:42:30.715816 139716428515072 hlog.py:32] train/00149/eval_val/77 
I1204 06:42:30.715884 139716428515072 hlog.py:18] train/00149/eval_val/77{0.00s}
I1204 06:42:30.715967 139716428515072 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1204 06:42:30.716059 139716428515072 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1204 06:42:30.716143 139716428515072 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1204 06:42:30.716217 139716428515072 hlog.py:32] train/00149/eval_val/78/corr False
I1204 06:42:30.716287 139716428515072 hlog.py:32] train/00149/eval_val/78 
I1204 06:42:30.716355 139716428515072 hlog.py:18] train/00149/eval_val/78{0.00s}
I1204 06:42:30.716439 139716428515072 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1204 06:42:30.716532 139716428515072 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1204 06:42:30.716617 139716428515072 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1204 06:42:30.716691 139716428515072 hlog.py:32] train/00149/eval_val/79/corr False
I1204 06:42:30.716761 139716428515072 hlog.py:32] train/00149/eval_val/79 
I1204 06:42:30.716829 139716428515072 hlog.py:18] train/00149/eval_val/79{0.00s}
I1204 06:42:30.716912 139716428515072 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1204 06:42:30.717004 139716428515072 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 06:42:30.717089 139716428515072 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.717163 139716428515072 hlog.py:32] train/00149/eval_val/80/corr False
I1204 06:42:30.717233 139716428515072 hlog.py:32] train/00149/eval_val/80 
I1204 06:42:30.717301 139716428515072 hlog.py:18] train/00149/eval_val/80{0.00s}
I1204 06:42:30.717384 139716428515072 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1204 06:42:30.717479 139716428515072 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( texas ) ) , _loc ( B , A ) ) )
I1204 06:42:30.717565 139716428515072 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.717639 139716428515072 hlog.py:32] train/00149/eval_val/81/corr False
I1204 06:42:30.717709 139716428515072 hlog.py:32] train/00149/eval_val/81 
I1204 06:42:30.717777 139716428515072 hlog.py:18] train/00149/eval_val/81{0.00s}
I1204 06:42:30.717860 139716428515072 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1204 06:42:30.717952 139716428515072 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1204 06:42:30.718037 139716428515072 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1204 06:42:30.718111 139716428515072 hlog.py:32] train/00149/eval_val/82/corr False
I1204 06:42:30.718181 139716428515072 hlog.py:32] train/00149/eval_val/82 
I1204 06:42:30.718248 139716428515072 hlog.py:18] train/00149/eval_val/82{0.00s}
I1204 06:42:30.718342 139716428515072 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1204 06:42:30.718433 139716428515072 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 06:42:30.718517 139716428515072 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 06:42:30.718591 139716428515072 hlog.py:32] train/00149/eval_val/83/corr True
I1204 06:42:30.718661 139716428515072 hlog.py:32] train/00149/eval_val/83 
I1204 06:42:30.718729 139716428515072 hlog.py:18] train/00149/eval_val/83{0.00s}
I1204 06:42:30.718817 139716428515072 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1204 06:42:30.718908 139716428515072 hlog.py:32] train/00149/eval_val/84/pred ( A , _largest ( B , ( _population ( B , A ) , _state ( B ) ) ) )
I1204 06:42:30.718993 139716428515072 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 06:42:30.719067 139716428515072 hlog.py:32] train/00149/eval_val/84/corr False
I1204 06:42:30.719137 139716428515072 hlog.py:32] train/00149/eval_val/84 
I1204 06:42:30.719205 139716428515072 hlog.py:18] train/00149/eval_val/84{0.00s}
I1204 06:42:30.719292 139716428515072 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1204 06:42:30.719383 139716428515072 hlog.py:32] train/00149/eval_val/85/pred ( A , _largest ( B , ( _density ( B , A ) , _state ( B ) ) ) )
I1204 06:42:30.719507 139716428515072 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 06:42:30.719587 139716428515072 hlog.py:32] train/00149/eval_val/85/corr False
I1204 06:42:30.719662 139716428515072 hlog.py:32] train/00149/eval_val/85 
I1204 06:42:30.719758 139716428515072 hlog.py:18] train/00149/eval_val/85{0.00s}
I1204 06:42:30.719845 139716428515072 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1204 06:42:30.719945 139716428515072 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) ) )
I1204 06:42:30.720035 139716428515072 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1204 06:42:30.720110 139716428515072 hlog.py:32] train/00149/eval_val/86/corr False
I1204 06:42:30.720180 139716428515072 hlog.py:32] train/00149/eval_val/86 
I1204 06:42:30.720247 139716428515072 hlog.py:18] train/00149/eval_val/86{0.00s}
I1204 06:42:30.720332 139716428515072 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1204 06:42:30.720438 139716428515072 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1204 06:42:30.720532 139716428515072 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 06:42:30.720607 139716428515072 hlog.py:32] train/00149/eval_val/87/corr False
I1204 06:42:30.720677 139716428515072 hlog.py:32] train/00149/eval_val/87 
I1204 06:42:30.720745 139716428515072 hlog.py:18] train/00149/eval_val/87{0.00s}
I1204 06:42:30.720834 139716428515072 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1204 06:42:30.720928 139716428515072 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 06:42:30.721014 139716428515072 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 06:42:30.721089 139716428515072 hlog.py:32] train/00149/eval_val/88/corr True
I1204 06:42:30.721158 139716428515072 hlog.py:32] train/00149/eval_val/88 
I1204 06:42:30.721232 139716428515072 hlog.py:18] train/00149/eval_val/88{0.00s}
I1204 06:42:30.721325 139716428515072 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1204 06:42:30.721426 139716428515072 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.721517 139716428515072 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.721591 139716428515072 hlog.py:32] train/00149/eval_val/89/corr True
I1204 06:42:30.721661 139716428515072 hlog.py:32] train/00149/eval_val/89 
I1204 06:42:30.721728 139716428515072 hlog.py:18] train/00149/eval_val/89{0.00s}
I1204 06:42:30.721813 139716428515072 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1204 06:42:30.721913 139716428515072 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) )
I1204 06:42:30.722006 139716428515072 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1204 06:42:30.722081 139716428515072 hlog.py:32] train/00149/eval_val/90/corr False
I1204 06:42:30.722150 139716428515072 hlog.py:32] train/00149/eval_val/90 
I1204 06:42:30.722218 139716428515072 hlog.py:18] train/00149/eval_val/90{0.00s}
I1204 06:42:30.722308 139716428515072 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1204 06:42:30.722404 139716428515072 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.722492 139716428515072 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.722566 139716428515072 hlog.py:32] train/00149/eval_val/91/corr True
I1204 06:42:30.722636 139716428515072 hlog.py:32] train/00149/eval_val/91 
I1204 06:42:30.722704 139716428515072 hlog.py:18] train/00149/eval_val/91{0.00s}
I1204 06:42:30.722793 139716428515072 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1204 06:42:30.722889 139716428515072 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.722977 139716428515072 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.723052 139716428515072 hlog.py:32] train/00149/eval_val/92/corr True
I1204 06:42:30.723122 139716428515072 hlog.py:32] train/00149/eval_val/92 
I1204 06:42:30.723190 139716428515072 hlog.py:18] train/00149/eval_val/92{0.00s}
I1204 06:42:30.723273 139716428515072 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1204 06:42:30.723364 139716428515072 hlog.py:32] train/00149/eval_val/93/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 06:42:30.723492 139716428515072 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.723572 139716428515072 hlog.py:32] train/00149/eval_val/93/corr False
I1204 06:42:30.723648 139716428515072 hlog.py:32] train/00149/eval_val/93 
I1204 06:42:30.723733 139716428515072 hlog.py:18] train/00149/eval_val/93{0.00s}
I1204 06:42:30.723831 139716428515072 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1204 06:42:30.723931 139716428515072 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _area ( B , A ) , _highest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 06:42:30.724025 139716428515072 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.724101 139716428515072 hlog.py:32] train/00149/eval_val/94/corr False
I1204 06:42:30.724170 139716428515072 hlog.py:32] train/00149/eval_val/94 
I1204 06:42:30.724239 139716428515072 hlog.py:18] train/00149/eval_val/94{0.00s}
I1204 06:42:30.724326 139716428515072 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1204 06:42:30.724422 139716428515072 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.724510 139716428515072 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.724600 139716428515072 hlog.py:32] train/00149/eval_val/95/corr False
I1204 06:42:30.724688 139716428515072 hlog.py:32] train/00149/eval_val/95 
I1204 06:42:30.724761 139716428515072 hlog.py:18] train/00149/eval_val/95{0.00s}
I1204 06:42:30.724859 139716428515072 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1204 06:42:30.724967 139716428515072 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 06:42:30.725064 139716428515072 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 06:42:30.725144 139716428515072 hlog.py:32] train/00149/eval_val/96/corr True
I1204 06:42:30.725219 139716428515072 hlog.py:32] train/00149/eval_val/96 
I1204 06:42:30.725291 139716428515072 hlog.py:18] train/00149/eval_val/96{0.00s}
I1204 06:42:30.725385 139716428515072 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1204 06:42:30.725496 139716428515072 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _traverse ( B , C ) , _state ( C ) ) ) ) ) )
I1204 06:42:30.725631 139716428515072 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 06:42:30.725714 139716428515072 hlog.py:32] train/00149/eval_val/97/corr False
I1204 06:42:30.725789 139716428515072 hlog.py:32] train/00149/eval_val/97 
I1204 06:42:30.725862 139716428515072 hlog.py:18] train/00149/eval_val/97{0.00s}
I1204 06:42:30.725959 139716428515072 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1204 06:42:30.726065 139716428515072 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 06:42:30.726160 139716428515072 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 06:42:30.726239 139716428515072 hlog.py:32] train/00149/eval_val/98/corr True
I1204 06:42:30.726314 139716428515072 hlog.py:32] train/00149/eval_val/98 
I1204 06:42:30.726387 139716428515072 hlog.py:18] train/00149/eval_val/98{0.00s}
I1204 06:42:30.726483 139716428515072 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1204 06:42:30.726589 139716428515072 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 06:42:30.726684 139716428515072 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 06:42:30.726769 139716428515072 hlog.py:32] train/00149/eval_val/99/corr True
I1204 06:42:30.726845 139716428515072 hlog.py:32] train/00149/eval_val/99 
I1204 06:42:30.726917 139716428515072 hlog.py:18] train/00149/eval_val/99{0.00s}
I1204 06:42:30.727008 139716428515072 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1204 06:42:30.727111 139716428515072 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 06:42:30.727207 139716428515072 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 06:42:30.727287 139716428515072 hlog.py:32] train/00149/eval_val/100/corr False
I1204 06:42:30.727362 139716428515072 hlog.py:32] train/00149/eval_val/100 
I1204 06:42:30.727442 139716428515072 hlog.py:18] train/00149/eval_val/100{0.00s}
I1204 06:42:30.727533 139716428515072 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1204 06:42:30.727642 139716428515072 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 06:42:30.727739 139716428515072 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 06:42:30.727819 139716428515072 hlog.py:32] train/00149/eval_val/101/corr False
I1204 06:42:30.727894 139716428515072 hlog.py:32] train/00149/eval_val/101 
I1204 06:42:30.727966 139716428515072 hlog.py:18] train/00149/eval_val/101{0.00s}
I1204 06:42:30.728056 139716428515072 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1204 06:42:30.728159 139716428515072 hlog.py:32] train/00149/eval_val/102/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1204 06:42:30.728252 139716428515072 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 06:42:30.728332 139716428515072 hlog.py:32] train/00149/eval_val/102/corr False
I1204 06:42:30.728407 139716428515072 hlog.py:32] train/00149/eval_val/102 
I1204 06:42:30.728479 139716428515072 hlog.py:18] train/00149/eval_val/102{0.00s}
I1204 06:42:30.728574 139716428515072 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1204 06:42:30.728674 139716428515072 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 06:42:30.728766 139716428515072 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 06:42:30.728846 139716428515072 hlog.py:32] train/00149/eval_val/103/corr True
I1204 06:42:30.728920 139716428515072 hlog.py:32] train/00149/eval_val/103 
I1204 06:42:30.728992 139716428515072 hlog.py:18] train/00149/eval_val/103{0.00s}
I1204 06:42:30.729081 139716428515072 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1204 06:42:30.729182 139716428515072 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 06:42:30.729274 139716428515072 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.729354 139716428515072 hlog.py:32] train/00149/eval_val/104/corr False
I1204 06:42:30.729429 139716428515072 hlog.py:32] train/00149/eval_val/104 
I1204 06:42:30.729502 139716428515072 hlog.py:18] train/00149/eval_val/104{0.00s}
I1204 06:42:30.729596 139716428515072 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1204 06:42:30.729696 139716428515072 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 06:42:30.729794 139716428515072 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 06:42:30.729874 139716428515072 hlog.py:32] train/00149/eval_val/105/corr True
I1204 06:42:30.729948 139716428515072 hlog.py:32] train/00149/eval_val/105 
I1204 06:42:30.730021 139716428515072 hlog.py:18] train/00149/eval_val/105{0.00s}
I1204 06:42:30.730116 139716428515072 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1204 06:42:30.730215 139716428515072 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 06:42:30.730308 139716428515072 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 06:42:30.730388 139716428515072 hlog.py:32] train/00149/eval_val/106/corr True
I1204 06:42:30.730463 139716428515072 hlog.py:32] train/00149/eval_val/106 
I1204 06:42:30.730535 139716428515072 hlog.py:18] train/00149/eval_val/106{0.00s}
I1204 06:42:30.730630 139716428515072 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1204 06:42:30.730729 139716428515072 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.730821 139716428515072 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.730901 139716428515072 hlog.py:32] train/00149/eval_val/107/corr True
I1204 06:42:30.730976 139716428515072 hlog.py:32] train/00149/eval_val/107 
I1204 06:42:30.731048 139716428515072 hlog.py:18] train/00149/eval_val/107{0.00s}
I1204 06:42:30.731142 139716428515072 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1204 06:42:30.731243 139716428515072 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 06:42:30.731335 139716428515072 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 06:42:30.731422 139716428515072 hlog.py:32] train/00149/eval_val/108/corr True
I1204 06:42:30.731499 139716428515072 hlog.py:32] train/00149/eval_val/108 
I1204 06:42:30.731571 139716428515072 hlog.py:18] train/00149/eval_val/108{0.00s}
I1204 06:42:30.731666 139716428515072 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1204 06:42:30.731766 139716428515072 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 06:42:30.731858 139716428515072 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 06:42:30.731938 139716428515072 hlog.py:32] train/00149/eval_val/109/corr True
I1204 06:42:30.732012 139716428515072 hlog.py:32] train/00149/eval_val/109 
I1204 06:42:30.732085 139716428515072 hlog.py:18] train/00149/eval_val/109{0.00s}
I1204 06:42:30.732179 139716428515072 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1204 06:42:30.732279 139716428515072 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.732371 139716428515072 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 06:42:30.732450 139716428515072 hlog.py:32] train/00149/eval_val/110/corr True
I1204 06:42:30.732525 139716428515072 hlog.py:32] train/00149/eval_val/110 
I1204 06:42:30.732598 139716428515072 hlog.py:18] train/00149/eval_val/110{0.00s}
I1204 06:42:30.732692 139716428515072 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1204 06:42:30.732792 139716428515072 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 06:42:30.732890 139716428515072 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 06:42:30.732970 139716428515072 hlog.py:32] train/00149/eval_val/111/corr True
I1204 06:42:30.733045 139716428515072 hlog.py:32] train/00149/eval_val/111 
I1204 06:42:30.733117 139716428515072 hlog.py:18] train/00149/eval_val/111{0.00s}
I1204 06:42:30.733211 139716428515072 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1204 06:42:30.733312 139716428515072 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 06:42:30.733404 139716428515072 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 06:42:30.733484 139716428515072 hlog.py:32] train/00149/eval_val/112/corr True
I1204 06:42:30.733559 139716428515072 hlog.py:32] train/00149/eval_val/112 
I1204 06:42:30.733631 139716428515072 hlog.py:18] train/00149/eval_val/112{0.00s}
I1204 06:42:30.733726 139716428515072 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1204 06:42:30.733827 139716428515072 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 06:42:30.733920 139716428515072 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 06:42:30.733999 139716428515072 hlog.py:32] train/00149/eval_val/113/corr True
I1204 06:42:30.734074 139716428515072 hlog.py:32] train/00149/eval_val/113 
I1204 06:42:30.734146 139716428515072 hlog.py:18] train/00149/eval_val/113{0.00s}
I1204 06:42:30.734241 139716428515072 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1204 06:42:30.734341 139716428515072 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.734433 139716428515072 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 06:42:30.734513 139716428515072 hlog.py:32] train/00149/eval_val/114/corr True
I1204 06:42:30.734588 139716428515072 hlog.py:32] train/00149/eval_val/114 
I1204 06:42:30.734660 139716428515072 hlog.py:18] train/00149/eval_val/114{0.00s}
I1204 06:42:30.734750 139716428515072 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1204 06:42:30.734849 139716428515072 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 06:42:30.734942 139716428515072 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1204 06:42:30.735022 139716428515072 hlog.py:32] train/00149/eval_val/115/corr False
I1204 06:42:30.735097 139716428515072 hlog.py:32] train/00149/eval_val/115 
I1204 06:42:30.735169 139716428515072 hlog.py:18] train/00149/eval_val/115{0.00s}
I1204 06:42:30.735262 139716428515072 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1204 06:42:30.735363 139716428515072 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.735465 139716428515072 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 06:42:30.735546 139716428515072 hlog.py:32] train/00149/eval_val/116/corr True
I1204 06:42:30.735620 139716428515072 hlog.py:32] train/00149/eval_val/116 
I1204 06:42:30.735693 139716428515072 hlog.py:18] train/00149/eval_val/116{0.00s}
I1204 06:42:30.735789 139716428515072 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1204 06:42:30.735892 139716428515072 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.735992 139716428515072 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.736073 139716428515072 hlog.py:32] train/00149/eval_val/117/corr True
I1204 06:42:30.736147 139716428515072 hlog.py:32] train/00149/eval_val/117 
I1204 06:42:30.736219 139716428515072 hlog.py:18] train/00149/eval_val/117{0.00s}
I1204 06:42:30.736315 139716428515072 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1204 06:42:30.736418 139716428515072 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.736512 139716428515072 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.736592 139716428515072 hlog.py:32] train/00149/eval_val/118/corr True
I1204 06:42:30.736666 139716428515072 hlog.py:32] train/00149/eval_val/118 
I1204 06:42:30.736738 139716428515072 hlog.py:18] train/00149/eval_val/118{0.00s}
I1204 06:42:30.736834 139716428515072 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1204 06:42:30.736937 139716428515072 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.737031 139716428515072 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 06:42:30.737111 139716428515072 hlog.py:32] train/00149/eval_val/119/corr True
I1204 06:42:30.737185 139716428515072 hlog.py:32] train/00149/eval_val/119 
I1204 06:42:30.737257 139716428515072 hlog.py:18] train/00149/eval_val/119{0.00s}
I1204 06:42:30.737349 139716428515072 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1204 06:42:30.737441 139716428515072 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 06:42:30.737529 139716428515072 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 06:42:30.737608 139716428515072 hlog.py:32] train/00149/eval_val/120/corr True
I1204 06:42:30.737683 139716428515072 hlog.py:32] train/00149/eval_val/120 
I1204 06:42:30.737754 139716428515072 hlog.py:18] train/00149/eval_val/120{0.00s}
I1204 06:42:30.737846 139716428515072 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1204 06:42:30.737939 139716428515072 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 06:42:30.738027 139716428515072 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 06:42:30.738106 139716428515072 hlog.py:32] train/00149/eval_val/121/corr True
I1204 06:42:30.738181 139716428515072 hlog.py:32] train/00149/eval_val/121 
I1204 06:42:30.738384 139716428515072 hlog.py:18] train/00149/eval_val/121{0.00s}
I1204 06:42:30.738482 139716428515072 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1204 06:42:30.738586 139716428515072 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 06:42:30.738680 139716428515072 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 06:42:30.738760 139716428515072 hlog.py:32] train/00149/eval_val/122/corr True
I1204 06:42:30.738834 139716428515072 hlog.py:32] train/00149/eval_val/122 
I1204 06:42:30.738907 139716428515072 hlog.py:18] train/00149/eval_val/122{0.00s}
I1204 06:42:30.739002 139716428515072 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1204 06:42:30.739105 139716428515072 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 06:42:30.739205 139716428515072 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 06:42:30.739285 139716428515072 hlog.py:32] train/00149/eval_val/123/corr True
I1204 06:42:30.739360 139716428515072 hlog.py:32] train/00149/eval_val/123 
I1204 06:42:30.739439 139716428515072 hlog.py:18] train/00149/eval_val/123{0.00s}
I1204 06:42:30.739536 139716428515072 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1204 06:42:30.739638 139716428515072 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 06:42:30.739732 139716428515072 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 06:42:30.739812 139716428515072 hlog.py:32] train/00149/eval_val/124/corr True
I1204 06:42:30.739886 139716428515072 hlog.py:32] train/00149/eval_val/124 
I1204 06:42:30.739959 139716428515072 hlog.py:18] train/00149/eval_val/124{0.00s}
I1204 06:42:30.740055 139716428515072 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1204 06:42:30.740157 139716428515072 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 06:42:30.740251 139716428515072 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 06:42:30.740331 139716428515072 hlog.py:32] train/00149/eval_val/125/corr True
I1204 06:42:30.740405 139716428515072 hlog.py:32] train/00149/eval_val/125 
I1204 06:42:30.740477 139716428515072 hlog.py:18] train/00149/eval_val/125{0.00s}
I1204 06:42:30.740572 139716428515072 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1204 06:42:30.740670 139716428515072 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.740760 139716428515072 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.740839 139716428515072 hlog.py:32] train/00149/eval_val/126/corr True
I1204 06:42:30.740913 139716428515072 hlog.py:32] train/00149/eval_val/126 
I1204 06:42:30.740986 139716428515072 hlog.py:18] train/00149/eval_val/126{0.00s}
I1204 06:42:30.741078 139716428515072 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1204 06:42:30.741176 139716428515072 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.741266 139716428515072 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.741345 139716428515072 hlog.py:32] train/00149/eval_val/127/corr False
I1204 06:42:30.741419 139716428515072 hlog.py:32] train/00149/eval_val/127 
I1204 06:42:30.741492 139716428515072 hlog.py:18] train/00149/eval_val/127{0.00s}
I1204 06:42:30.867803 139716428515072 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1204 06:42:30.867942 139716428515072 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.868041 139716428515072 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.868124 139716428515072 hlog.py:32] train/00149/eval_val/128/corr False
I1204 06:42:30.868199 139716428515072 hlog.py:32] train/00149/eval_val/128 
I1204 06:42:30.868273 139716428515072 hlog.py:18] train/00149/eval_val/128{0.00s}
I1204 06:42:30.868368 139716428515072 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1204 06:42:30.868464 139716428515072 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.868561 139716428515072 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.868640 139716428515072 hlog.py:32] train/00149/eval_val/129/corr True
I1204 06:42:30.868712 139716428515072 hlog.py:32] train/00149/eval_val/129 
I1204 06:42:30.868783 139716428515072 hlog.py:18] train/00149/eval_val/129{0.00s}
I1204 06:42:30.868873 139716428515072 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1204 06:42:30.868968 139716428515072 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.869055 139716428515072 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.869132 139716428515072 hlog.py:32] train/00149/eval_val/130/corr False
I1204 06:42:30.869205 139716428515072 hlog.py:32] train/00149/eval_val/130 
I1204 06:42:30.869275 139716428515072 hlog.py:18] train/00149/eval_val/130{0.00s}
I1204 06:42:30.869364 139716428515072 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1204 06:42:30.869458 139716428515072 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.869545 139716428515072 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.869622 139716428515072 hlog.py:32] train/00149/eval_val/131/corr False
I1204 06:42:30.869694 139716428515072 hlog.py:32] train/00149/eval_val/131 
I1204 06:42:30.869765 139716428515072 hlog.py:18] train/00149/eval_val/131{0.00s}
I1204 06:42:30.869856 139716428515072 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1204 06:42:30.869949 139716428515072 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.870037 139716428515072 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 06:42:30.870114 139716428515072 hlog.py:32] train/00149/eval_val/132/corr True
I1204 06:42:30.870187 139716428515072 hlog.py:32] train/00149/eval_val/132 
I1204 06:42:30.870256 139716428515072 hlog.py:18] train/00149/eval_val/132{0.00s}
I1204 06:42:30.870345 139716428515072 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1204 06:42:30.870445 139716428515072 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _elevation ( B , A ) , _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) )
I1204 06:42:30.870533 139716428515072 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1204 06:42:30.870610 139716428515072 hlog.py:32] train/00149/eval_val/133/corr False
I1204 06:42:30.870682 139716428515072 hlog.py:32] train/00149/eval_val/133 
I1204 06:42:30.870753 139716428515072 hlog.py:18] train/00149/eval_val/133{0.00s}
I1204 06:42:30.870847 139716428515072 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1204 06:42:30.870952 139716428515072 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.871045 139716428515072 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.871123 139716428515072 hlog.py:32] train/00149/eval_val/134/corr True
I1204 06:42:30.871195 139716428515072 hlog.py:32] train/00149/eval_val/134 
I1204 06:42:30.871266 139716428515072 hlog.py:18] train/00149/eval_val/134{0.00s}
I1204 06:42:30.871360 139716428515072 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1204 06:42:30.871487 139716428515072 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.871592 139716428515072 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 06:42:30.871673 139716428515072 hlog.py:32] train/00149/eval_val/135/corr True
I1204 06:42:30.871759 139716428515072 hlog.py:32] train/00149/eval_val/135 
I1204 06:42:30.871829 139716428515072 hlog.py:18] train/00149/eval_val/135{0.00s}
I1204 06:42:30.871921 139716428515072 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1204 06:42:30.872018 139716428515072 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.872108 139716428515072 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.872184 139716428515072 hlog.py:32] train/00149/eval_val/136/corr True
I1204 06:42:30.872257 139716428515072 hlog.py:32] train/00149/eval_val/136 
I1204 06:42:30.872328 139716428515072 hlog.py:18] train/00149/eval_val/136{0.00s}
I1204 06:42:30.872419 139716428515072 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1204 06:42:30.872517 139716428515072 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.872606 139716428515072 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.872683 139716428515072 hlog.py:32] train/00149/eval_val/137/corr True
I1204 06:42:30.872755 139716428515072 hlog.py:32] train/00149/eval_val/137 
I1204 06:42:30.872826 139716428515072 hlog.py:18] train/00149/eval_val/137{0.00s}
I1204 06:42:30.872918 139716428515072 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1204 06:42:30.873015 139716428515072 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.873104 139716428515072 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.873182 139716428515072 hlog.py:32] train/00149/eval_val/138/corr True
I1204 06:42:30.873253 139716428515072 hlog.py:32] train/00149/eval_val/138 
I1204 06:42:30.873323 139716428515072 hlog.py:18] train/00149/eval_val/138{0.00s}
I1204 06:42:30.873415 139716428515072 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1204 06:42:30.873512 139716428515072 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.873602 139716428515072 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 06:42:30.873678 139716428515072 hlog.py:32] train/00149/eval_val/139/corr True
I1204 06:42:30.873751 139716428515072 hlog.py:32] train/00149/eval_val/139 
I1204 06:42:30.873821 139716428515072 hlog.py:18] train/00149/eval_val/139{0.00s}
I1204 06:42:30.873908 139716428515072 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1204 06:42:30.874009 139716428515072 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 06:42:30.874102 139716428515072 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 06:42:30.874180 139716428515072 hlog.py:32] train/00149/eval_val/140/corr False
I1204 06:42:30.874252 139716428515072 hlog.py:32] train/00149/eval_val/140 
I1204 06:42:30.874322 139716428515072 hlog.py:18] train/00149/eval_val/140{0.00s}
I1204 06:42:30.874409 139716428515072 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1204 06:42:30.874517 139716428515072 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 06:42:30.874610 139716428515072 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 06:42:30.874688 139716428515072 hlog.py:32] train/00149/eval_val/141/corr False
I1204 06:42:30.874760 139716428515072 hlog.py:32] train/00149/eval_val/141 
I1204 06:42:30.874830 139716428515072 hlog.py:18] train/00149/eval_val/141{0.00s}
I1204 06:42:30.874916 139716428515072 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1204 06:42:30.875012 139716428515072 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 06:42:30.875100 139716428515072 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 06:42:30.875178 139716428515072 hlog.py:32] train/00149/eval_val/142/corr False
I1204 06:42:30.875251 139716428515072 hlog.py:32] train/00149/eval_val/142 
I1204 06:42:30.875321 139716428515072 hlog.py:18] train/00149/eval_val/142{0.00s}
I1204 06:42:30.875412 139716428515072 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1204 06:42:30.875526 139716428515072 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 06:42:30.875617 139716428515072 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 06:42:30.875710 139716428515072 hlog.py:32] train/00149/eval_val/143/corr False
I1204 06:42:30.875783 139716428515072 hlog.py:32] train/00149/eval_val/143 
I1204 06:42:30.875853 139716428515072 hlog.py:18] train/00149/eval_val/143{0.00s}
I1204 06:42:30.875939 139716428515072 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1204 06:42:30.876028 139716428515072 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1204 06:42:30.876116 139716428515072 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1204 06:42:30.876192 139716428515072 hlog.py:32] train/00149/eval_val/144/corr False
I1204 06:42:30.876265 139716428515072 hlog.py:32] train/00149/eval_val/144 
I1204 06:42:30.876335 139716428515072 hlog.py:18] train/00149/eval_val/144{0.00s}
I1204 06:42:30.876421 139716428515072 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1204 06:42:30.876519 139716428515072 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _loc ( A , B ) , _major ( B ) , _city ( B ) ) ) )
I1204 06:42:30.876607 139716428515072 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1204 06:42:30.876684 139716428515072 hlog.py:32] train/00149/eval_val/145/corr False
I1204 06:42:30.876757 139716428515072 hlog.py:32] train/00149/eval_val/145 
I1204 06:42:30.876827 139716428515072 hlog.py:18] train/00149/eval_val/145{0.00s}
I1204 06:42:30.876917 139716428515072 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1204 06:42:30.877023 139716428515072 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _loc ( B , A ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) , _state ( C ) ) ) ) )
I1204 06:42:30.877121 139716428515072 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1204 06:42:30.877199 139716428515072 hlog.py:32] train/00149/eval_val/146/corr False
I1204 06:42:30.877271 139716428515072 hlog.py:32] train/00149/eval_val/146 
I1204 06:42:30.877341 139716428515072 hlog.py:18] train/00149/eval_val/146{0.00s}
I1204 06:42:30.877440 139716428515072 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1204 06:42:30.877541 139716428515072 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 06:42:30.877632 139716428515072 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 06:42:30.877709 139716428515072 hlog.py:32] train/00149/eval_val/147/corr True
I1204 06:42:30.877782 139716428515072 hlog.py:32] train/00149/eval_val/147 
I1204 06:42:30.877852 139716428515072 hlog.py:18] train/00149/eval_val/147{0.00s}
I1204 06:42:30.877931 139716428515072 hlog.py:32] train/00149/eval_val/acc 0.4662
I1204 06:42:30.909249 139716428515072 hlog.py:18] train/00149{16.43s}
I1204 06:42:30.911433 139716428515072 hlog.py:18] train{2549.83s}
