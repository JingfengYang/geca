I1204 10:15:19.669717 140477203080960 hlog.py:24] # --noTEST
I1204 10:15:19.670096 140477203080960 hlog.py:24] # --seed=8
I1204 10:15:19.670181 140477203080960 hlog.py:24] # --dataset=semparse
I1204 10:15:19.670259 140477203080960 hlog.py:24] # --model_dir=model
I1204 10:15:19.670336 140477203080960 hlog.py:24] # --n_checkpoint=10
I1204 10:15:19.670409 140477203080960 hlog.py:24] # --nologtostderr
I1204 10:15:19.670482 140477203080960 hlog.py:24] # --noalsologtostderr
I1204 10:15:19.670554 140477203080960 hlog.py:24] # --log_dir=
I1204 10:15:19.670625 140477203080960 hlog.py:24] # --verbosity=0
I1204 10:15:19.670696 140477203080960 hlog.py:24] # --verbosity=0
I1204 10:15:19.670767 140477203080960 hlog.py:24] # --stderrthreshold=fatal
I1204 10:15:19.670838 140477203080960 hlog.py:24] # --showprefixforinfo
I1204 10:15:19.670908 140477203080960 hlog.py:24] # --nodedup
I1204 10:15:19.670979 140477203080960 hlog.py:24] # --nobuild_comp_table
I1204 10:15:19.671050 140477203080960 hlog.py:24] # --semparse_split=query
I1204 10:15:19.671121 140477203080960 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1204 10:15:19.671192 140477203080960 hlog.py:24] # --semparse_mrl=logic
I1204 10:15:19.671262 140477203080960 hlog.py:24] # --val_fold=8
I1204 10:15:19.671333 140477203080960 hlog.py:24] # --test_fold=9
I1204 10:15:19.671427 140477203080960 hlog.py:24] # --n_emb=64
I1204 10:15:19.671503 140477203080960 hlog.py:24] # --n_enc=512
I1204 10:15:19.671576 140477203080960 hlog.py:24] # --dropout=0.5
I1204 10:15:19.671649 140477203080960 hlog.py:24] # --copy_sup
I1204 10:15:19.671734 140477203080960 hlog.py:24] # --n_epochs=150
I1204 10:15:19.671804 140477203080960 hlog.py:24] # --n_epoch_batches=32
I1204 10:15:19.671875 140477203080960 hlog.py:24] # --n_batch=64
I1204 10:15:19.671946 140477203080960 hlog.py:24] # --lr=0.001
I1204 10:15:19.672016 140477203080960 hlog.py:24] # --clip=1.0
I1204 10:15:19.672086 140477203080960 hlog.py:24] # --sched_factor=0.5
I1204 10:15:19.672157 140477203080960 hlog.py:24] # --norun_with_pdb
I1204 10:15:19.672228 140477203080960 hlog.py:24] # --nopdb_post_mortem
I1204 10:15:19.672299 140477203080960 hlog.py:24] # --norun_with_profiling
I1204 10:15:19.672369 140477203080960 hlog.py:24] # --use_cprofile_for_profiling
I1204 10:15:19.672440 140477203080960 hlog.py:24] # --noonly_check_args
I1204 10:15:19.672511 140477203080960 hlog.py:24] # --augment=composed.val8.json
I1204 10:15:19.672582 140477203080960 hlog.py:24] # --aug_ratio=0.3
I1204 10:15:19.672653 140477203080960 hlog.py:24] # --noinvert
I1204 10:15:19.672724 140477203080960 hlog.py:24] # --nohelp
I1204 10:15:19.672794 140477203080960 hlog.py:24] # --nohelp
I1204 10:15:19.672864 140477203080960 hlog.py:24] # --nohelpshort
I1204 10:15:19.672936 140477203080960 hlog.py:24] # --nohelpfull
I1204 10:15:19.673006 140477203080960 hlog.py:24] # --nohelpxml
I1204 10:15:19.673076 140477203080960 hlog.py:24] # 
I1204 10:15:19.711761 140477203080960 hlog.py:32] train 543
I1204 10:15:19.711947 140477203080960 hlog.py:32] aug 1000
I1204 10:15:35.895572 140477203080960 hlog.py:32] train/00000/loss 3.7831
I1204 10:15:47.848634 140477203080960 hlog.py:32] train/00000/eval_train/acc 0.0000
I1204 10:15:49.764096 140477203080960 hlog.py:32] train/00000/eval_val/acc 0.0000
I1204 10:15:49.764896 140477203080960 hlog.py:18] train/00000{26.23s}
I1204 10:16:01.201698 140477203080960 hlog.py:32] train/00001/loss 1.2036
I1204 10:16:09.301541 140477203080960 hlog.py:32] train/00001/eval_train/acc 0.0000
I1204 10:16:10.662892 140477203080960 hlog.py:32] train/00001/eval_val/acc 0.0000
I1204 10:16:10.663354 140477203080960 hlog.py:18] train/00001{20.90s}
I1204 10:16:23.119160 140477203080960 hlog.py:32] train/00002/loss 0.7698
I1204 10:16:27.916821 140477203080960 hlog.py:32] train/00002/eval_train/acc 0.0000
I1204 10:16:28.710394 140477203080960 hlog.py:32] train/00002/eval_val/acc 0.0000
I1204 10:16:28.710908 140477203080960 hlog.py:18] train/00002{18.05s}
I1204 10:16:41.038825 140477203080960 hlog.py:32] train/00003/loss 0.5645
I1204 10:16:48.700610 140477203080960 hlog.py:32] train/00003/eval_train/acc 0.1030
I1204 10:16:50.042726 140477203080960 hlog.py:32] train/00003/eval_val/acc 0.0000
I1204 10:16:50.043484 140477203080960 hlog.py:18] train/00003{21.33s}
I1204 10:17:02.369754 140477203080960 hlog.py:32] train/00004/loss 0.4520
I1204 10:17:06.625037 140477203080960 hlog.py:32] train/00004/eval_train/acc 0.1980
I1204 10:17:07.168797 140477203080960 hlog.py:32] train/00004/eval_val/acc 0.0000
I1204 10:17:07.169329 140477203080960 hlog.py:18] train/00004{17.13s}
I1204 10:17:19.158204 140477203080960 hlog.py:32] train/00005/loss 0.3742
I1204 10:17:25.343425 140477203080960 hlog.py:32] train/00005/eval_train/acc 0.1900
I1204 10:17:26.567517 140477203080960 hlog.py:32] train/00005/eval_val/acc 0.0000
I1204 10:17:26.568157 140477203080960 hlog.py:18] train/00005{19.40s}
I1204 10:17:39.300464 140477203080960 hlog.py:32] train/00006/loss 0.3218
I1204 10:17:44.235175 140477203080960 hlog.py:32] train/00006/eval_train/acc 0.2990
I1204 10:17:45.046316 140477203080960 hlog.py:32] train/00006/eval_val/acc 0.0135
I1204 10:17:45.046772 140477203080960 hlog.py:18] train/00006{18.48s}
I1204 10:17:57.459473 140477203080960 hlog.py:32] train/00007/loss 0.2455
I1204 10:18:01.172234 140477203080960 hlog.py:32] train/00007/eval_train/acc 0.3720
I1204 10:18:01.838464 140477203080960 hlog.py:32] train/00007/eval_val/acc 0.0270
I1204 10:18:01.838960 140477203080960 hlog.py:18] train/00007{16.79s}
I1204 10:18:13.928780 140477203080960 hlog.py:32] train/00008/loss 0.2173
I1204 10:18:18.063453 140477203080960 hlog.py:32] train/00008/eval_train/acc 0.4420
I1204 10:18:18.837878 140477203080960 hlog.py:32] train/00008/eval_val/acc 0.0338
I1204 10:18:18.838378 140477203080960 hlog.py:18] train/00008{17.00s}
I1204 10:18:31.510847 140477203080960 hlog.py:32] train/00009/loss 0.2006
I1204 10:18:35.871206 140477203080960 hlog.py:32] train/00009/eval_train/acc 0.5030
I1204 10:18:36.587615 140477203080960 hlog.py:32] train/00009/eval_val/acc 0.0743
I1204 10:18:36.834066 140477203080960 hlog.py:18] train/00009{18.00s}
I1204 10:18:48.905426 140477203080960 hlog.py:32] train/00010/loss 0.1706
I1204 10:18:54.541501 140477203080960 hlog.py:32] train/00010/eval_train/acc 0.4800
I1204 10:18:55.606683 140477203080960 hlog.py:32] train/00010/eval_val/acc 0.0811
I1204 10:18:55.607178 140477203080960 hlog.py:18] train/00010{18.77s}
I1204 10:19:07.813828 140477203080960 hlog.py:32] train/00011/loss 0.1828
I1204 10:19:12.550925 140477203080960 hlog.py:32] train/00011/eval_train/acc 0.4600
I1204 10:19:13.391451 140477203080960 hlog.py:32] train/00011/eval_val/acc 0.1014
I1204 10:19:13.391952 140477203080960 hlog.py:18] train/00011{17.78s}
I1204 10:19:26.041063 140477203080960 hlog.py:32] train/00012/loss 0.1731
I1204 10:19:30.184808 140477203080960 hlog.py:32] train/00012/eval_train/acc 0.5150
I1204 10:19:31.026471 140477203080960 hlog.py:32] train/00012/eval_val/acc 0.1351
I1204 10:19:31.026996 140477203080960 hlog.py:18] train/00012{17.63s}
I1204 10:19:42.949662 140477203080960 hlog.py:32] train/00013/loss 0.1525
I1204 10:19:46.693727 140477203080960 hlog.py:32] train/00013/eval_train/acc 0.5620
I1204 10:19:47.314242 140477203080960 hlog.py:32] train/00013/eval_val/acc 0.1689
I1204 10:19:47.314959 140477203080960 hlog.py:18] train/00013{16.29s}
I1204 10:19:59.059152 140477203080960 hlog.py:32] train/00014/loss 0.1255
I1204 10:20:02.819616 140477203080960 hlog.py:32] train/00014/eval_train/acc 0.5760
I1204 10:20:03.385463 140477203080960 hlog.py:32] train/00014/eval_val/acc 0.1824
I1204 10:20:03.386073 140477203080960 hlog.py:18] train/00014{16.07s}
I1204 10:20:15.732369 140477203080960 hlog.py:32] train/00015/loss 0.1040
I1204 10:20:19.577719 140477203080960 hlog.py:32] train/00015/eval_train/acc 0.6820
I1204 10:20:20.122747 140477203080960 hlog.py:32] train/00015/eval_val/acc 0.1892
I1204 10:20:20.123247 140477203080960 hlog.py:18] train/00015{16.74s}
I1204 10:20:33.600750 140477203080960 hlog.py:32] train/00016/loss 0.1002
I1204 10:20:37.564428 140477203080960 hlog.py:32] train/00016/eval_train/acc 0.6670
I1204 10:20:38.119667 140477203080960 hlog.py:32] train/00016/eval_val/acc 0.1622
I1204 10:20:38.120236 140477203080960 hlog.py:18] train/00016{18.00s}
I1204 10:20:50.260004 140477203080960 hlog.py:32] train/00017/loss 0.1033
I1204 10:20:54.175491 140477203080960 hlog.py:32] train/00017/eval_train/acc 0.6870
I1204 10:20:54.689900 140477203080960 hlog.py:32] train/00017/eval_val/acc 0.2365
I1204 10:20:54.690383 140477203080960 hlog.py:18] train/00017{16.57s}
I1204 10:21:06.376495 140477203080960 hlog.py:32] train/00018/loss 0.0974
I1204 10:21:10.155748 140477203080960 hlog.py:32] train/00018/eval_train/acc 0.6910
I1204 10:21:10.711212 140477203080960 hlog.py:32] train/00018/eval_val/acc 0.2230
I1204 10:21:10.711770 140477203080960 hlog.py:18] train/00018{16.02s}
I1204 10:21:22.611402 140477203080960 hlog.py:32] train/00019/loss 0.0797
I1204 10:21:26.423308 140477203080960 hlog.py:32] train/00019/eval_train/acc 0.7740
I1204 10:21:26.988444 140477203080960 hlog.py:32] train/00019/eval_val/acc 0.2838
I1204 10:21:27.019921 140477203080960 hlog.py:18] train/00019{16.31s}
I1204 10:21:39.476639 140477203080960 hlog.py:32] train/00020/loss 0.0860
I1204 10:21:43.156981 140477203080960 hlog.py:32] train/00020/eval_train/acc 0.8000
I1204 10:21:43.758007 140477203080960 hlog.py:32] train/00020/eval_val/acc 0.2973
I1204 10:21:43.758496 140477203080960 hlog.py:18] train/00020{16.74s}
I1204 10:21:55.282675 140477203080960 hlog.py:32] train/00021/loss 0.0696
I1204 10:21:59.077076 140477203080960 hlog.py:32] train/00021/eval_train/acc 0.8260
I1204 10:21:59.622736 140477203080960 hlog.py:32] train/00021/eval_val/acc 0.4324
I1204 10:21:59.623353 140477203080960 hlog.py:18] train/00021{15.86s}
I1204 10:22:11.711583 140477203080960 hlog.py:32] train/00022/loss 0.0607
I1204 10:22:15.567806 140477203080960 hlog.py:32] train/00022/eval_train/acc 0.7930
I1204 10:22:16.148157 140477203080960 hlog.py:32] train/00022/eval_val/acc 0.4189
I1204 10:22:16.148651 140477203080960 hlog.py:18] train/00022{16.53s}
I1204 10:22:29.344737 140477203080960 hlog.py:32] train/00023/loss 0.0775
I1204 10:22:33.033770 140477203080960 hlog.py:32] train/00023/eval_train/acc 0.7510
I1204 10:22:33.593831 140477203080960 hlog.py:32] train/00023/eval_val/acc 0.3446
I1204 10:22:33.594302 140477203080960 hlog.py:18] train/00023{17.45s}
I1204 10:22:46.461637 140477203080960 hlog.py:32] train/00024/loss 0.0747
I1204 10:22:50.668185 140477203080960 hlog.py:32] train/00024/eval_train/acc 0.8200
I1204 10:22:51.261956 140477203080960 hlog.py:32] train/00024/eval_val/acc 0.3784
I1204 10:22:51.262405 140477203080960 hlog.py:18] train/00024{17.67s}
I1204 10:23:03.751235 140477203080960 hlog.py:32] train/00025/loss 0.0636
I1204 10:23:07.375743 140477203080960 hlog.py:32] train/00025/eval_train/acc 0.8160
I1204 10:23:07.923037 140477203080960 hlog.py:32] train/00025/eval_val/acc 0.3378
I1204 10:23:07.923539 140477203080960 hlog.py:18] train/00025{16.66s}
I1204 10:23:20.449940 140477203080960 hlog.py:32] train/00026/loss 0.0530
I1204 10:23:24.918759 140477203080960 hlog.py:32] train/00026/eval_train/acc 0.8820
I1204 10:23:25.454744 140477203080960 hlog.py:32] train/00026/eval_val/acc 0.4189
I1204 10:23:25.455227 140477203080960 hlog.py:18] train/00026{17.53s}
I1204 10:23:38.234052 140477203080960 hlog.py:32] train/00027/loss 0.0473
I1204 10:23:41.906375 140477203080960 hlog.py:32] train/00027/eval_train/acc 0.8470
I1204 10:23:42.439858 140477203080960 hlog.py:32] train/00027/eval_val/acc 0.4324
I1204 10:23:42.440338 140477203080960 hlog.py:18] train/00027{16.99s}
I1204 10:23:54.837775 140477203080960 hlog.py:32] train/00028/loss 0.0437
I1204 10:23:58.937231 140477203080960 hlog.py:32] train/00028/eval_train/acc 0.7780
I1204 10:23:59.523014 140477203080960 hlog.py:32] train/00028/eval_val/acc 0.3986
I1204 10:23:59.523492 140477203080960 hlog.py:18] train/00028{17.08s}
I1204 10:24:11.818605 140477203080960 hlog.py:32] train/00029/loss 0.0472
I1204 10:24:15.657293 140477203080960 hlog.py:32] train/00029/eval_train/acc 0.8870
I1204 10:24:16.237781 140477203080960 hlog.py:32] train/00029/eval_val/acc 0.3851
I1204 10:24:16.395825 140477203080960 hlog.py:18] train/00029{16.87s}
I1204 10:24:29.122296 140477203080960 hlog.py:32] train/00030/loss 0.0426
I1204 10:24:33.836239 140477203080960 hlog.py:32] train/00030/eval_train/acc 0.7960
I1204 10:24:34.415789 140477203080960 hlog.py:32] train/00030/eval_val/acc 0.4122
I1204 10:24:34.416288 140477203080960 hlog.py:18] train/00030{18.02s}
I1204 10:24:47.759830 140477203080960 hlog.py:32] train/00031/loss 0.0441
I1204 10:24:51.454942 140477203080960 hlog.py:32] train/00031/eval_train/acc 0.8990
I1204 10:24:52.009881 140477203080960 hlog.py:32] train/00031/eval_val/acc 0.4054
I1204 10:24:52.010391 140477203080960 hlog.py:18] train/00031{17.59s}
I1204 10:25:04.013187 140477203080960 hlog.py:32] train/00032/loss 0.0379
I1204 10:25:07.767901 140477203080960 hlog.py:32] train/00032/eval_train/acc 0.9190
I1204 10:25:08.333378 140477203080960 hlog.py:32] train/00032/eval_val/acc 0.3851
I1204 10:25:08.333917 140477203080960 hlog.py:18] train/00032{16.32s}
I1204 10:25:20.204957 140477203080960 hlog.py:32] train/00033/loss 0.0327
I1204 10:25:24.615430 140477203080960 hlog.py:32] train/00033/eval_train/acc 0.9370
I1204 10:25:25.167135 140477203080960 hlog.py:32] train/00033/eval_val/acc 0.4257
I1204 10:25:25.167625 140477203080960 hlog.py:18] train/00033{16.83s}
I1204 10:25:37.632680 140477203080960 hlog.py:32] train/00034/loss 0.0262
I1204 10:25:41.441661 140477203080960 hlog.py:32] train/00034/eval_train/acc 0.9620
I1204 10:25:41.968814 140477203080960 hlog.py:32] train/00034/eval_val/acc 0.4527
I1204 10:25:41.969296 140477203080960 hlog.py:18] train/00034{16.80s}
I1204 10:25:55.023582 140477203080960 hlog.py:32] train/00035/loss 0.0255
I1204 10:25:59.539152 140477203080960 hlog.py:32] train/00035/eval_train/acc 0.9500
I1204 10:26:00.135617 140477203080960 hlog.py:32] train/00035/eval_val/acc 0.4392
I1204 10:26:00.136076 140477203080960 hlog.py:18] train/00035{18.17s}
I1204 10:26:12.453380 140477203080960 hlog.py:32] train/00036/loss 0.0272
I1204 10:26:16.333337 140477203080960 hlog.py:32] train/00036/eval_train/acc 0.9590
I1204 10:26:16.874796 140477203080960 hlog.py:32] train/00036/eval_val/acc 0.4797
I1204 10:26:16.875275 140477203080960 hlog.py:18] train/00036{16.74s}
I1204 10:26:29.031304 140477203080960 hlog.py:32] train/00037/loss 0.0240
I1204 10:26:32.823286 140477203080960 hlog.py:32] train/00037/eval_train/acc 0.9550
I1204 10:26:33.415425 140477203080960 hlog.py:32] train/00037/eval_val/acc 0.4797
I1204 10:26:33.415926 140477203080960 hlog.py:18] train/00037{16.54s}
I1204 10:26:45.548419 140477203080960 hlog.py:32] train/00038/loss 0.0221
I1204 10:26:49.281933 140477203080960 hlog.py:32] train/00038/eval_train/acc 0.9700
I1204 10:26:49.873329 140477203080960 hlog.py:32] train/00038/eval_val/acc 0.4865
I1204 10:26:49.873794 140477203080960 hlog.py:18] train/00038{16.46s}
I1204 10:27:01.567030 140477203080960 hlog.py:32] train/00039/loss 0.0179
I1204 10:27:05.421280 140477203080960 hlog.py:32] train/00039/eval_train/acc 0.9750
I1204 10:27:05.980557 140477203080960 hlog.py:32] train/00039/eval_val/acc 0.4662
I1204 10:27:06.138494 140477203080960 hlog.py:18] train/00039{16.26s}
I1204 10:27:18.892997 140477203080960 hlog.py:32] train/00040/loss 0.0198
I1204 10:27:22.567327 140477203080960 hlog.py:32] train/00040/eval_train/acc 0.9740
I1204 10:27:23.122792 140477203080960 hlog.py:32] train/00040/eval_val/acc 0.4324
I1204 10:27:23.123382 140477203080960 hlog.py:18] train/00040{16.98s}
I1204 10:27:35.148249 140477203080960 hlog.py:32] train/00041/loss 0.0144
I1204 10:27:39.355689 140477203080960 hlog.py:32] train/00041/eval_train/acc 0.9710
I1204 10:27:39.924703 140477203080960 hlog.py:32] train/00041/eval_val/acc 0.4392
I1204 10:27:39.925513 140477203080960 hlog.py:18] train/00041{16.80s}
I1204 10:27:53.132477 140477203080960 hlog.py:32] train/00042/loss 0.0175
I1204 10:27:57.167811 140477203080960 hlog.py:32] train/00042/eval_train/acc 0.9560
I1204 10:27:57.749882 140477203080960 hlog.py:32] train/00042/eval_val/acc 0.4459
I1204 10:27:57.750377 140477203080960 hlog.py:18] train/00042{17.82s}
I1204 10:28:09.735729 140477203080960 hlog.py:32] train/00043/loss 0.0135
I1204 10:28:13.803664 140477203080960 hlog.py:32] train/00043/eval_train/acc 0.9820
I1204 10:28:14.354076 140477203080960 hlog.py:32] train/00043/eval_val/acc 0.4459
I1204 10:28:14.354588 140477203080960 hlog.py:18] train/00043{16.60s}
I1204 10:28:27.514487 140477203080960 hlog.py:32] train/00044/loss 0.0159
I1204 10:28:31.571402 140477203080960 hlog.py:32] train/00044/eval_train/acc 0.9670
I1204 10:28:32.184147 140477203080960 hlog.py:32] train/00044/eval_val/acc 0.4797
I1204 10:28:32.184636 140477203080960 hlog.py:18] train/00044{17.83s}
I1204 10:28:44.376238 140477203080960 hlog.py:32] train/00045/loss 0.0141
I1204 10:28:48.177744 140477203080960 hlog.py:32] train/00045/eval_train/acc 0.9570
I1204 10:28:48.750389 140477203080960 hlog.py:32] train/00045/eval_val/acc 0.4662
I1204 10:28:48.750876 140477203080960 hlog.py:18] train/00045{16.57s}
I1204 10:29:01.411020 140477203080960 hlog.py:32] train/00046/loss 0.0133
I1204 10:29:05.554383 140477203080960 hlog.py:32] train/00046/eval_train/acc 0.9850
I1204 10:29:06.143588 140477203080960 hlog.py:32] train/00046/eval_val/acc 0.4595
I1204 10:29:06.144040 140477203080960 hlog.py:18] train/00046{17.39s}
I1204 10:29:19.048826 140477203080960 hlog.py:32] train/00047/loss 0.0128
I1204 10:29:22.973223 140477203080960 hlog.py:32] train/00047/eval_train/acc 0.9890
I1204 10:29:23.602570 140477203080960 hlog.py:32] train/00047/eval_val/acc 0.4865
I1204 10:29:23.603053 140477203080960 hlog.py:18] train/00047{17.46s}
I1204 10:29:36.461596 140477203080960 hlog.py:32] train/00048/loss 0.0124
I1204 10:29:40.766851 140477203080960 hlog.py:32] train/00048/eval_train/acc 0.9940
I1204 10:29:41.348754 140477203080960 hlog.py:32] train/00048/eval_val/acc 0.4932
I1204 10:29:41.349403 140477203080960 hlog.py:18] train/00048{17.75s}
I1204 10:29:53.377927 140477203080960 hlog.py:32] train/00049/loss 0.0138
I1204 10:29:57.143622 140477203080960 hlog.py:32] train/00049/eval_train/acc 0.9970
I1204 10:29:57.719789 140477203080960 hlog.py:32] train/00049/eval_val/acc 0.4459
I1204 10:29:57.756064 140477203080960 hlog.py:18] train/00049{16.41s}
I1204 10:30:09.610926 140477203080960 hlog.py:32] train/00050/loss 0.0127
I1204 10:30:13.473474 140477203080960 hlog.py:32] train/00050/eval_train/acc 0.9910
I1204 10:30:14.046871 140477203080960 hlog.py:32] train/00050/eval_val/acc 0.4662
I1204 10:30:14.047329 140477203080960 hlog.py:18] train/00050{16.29s}
I1204 10:30:26.099209 140477203080960 hlog.py:32] train/00051/loss 0.0138
I1204 10:30:29.888811 140477203080960 hlog.py:32] train/00051/eval_train/acc 0.9950
I1204 10:30:30.432813 140477203080960 hlog.py:32] train/00051/eval_val/acc 0.4932
I1204 10:30:30.433338 140477203080960 hlog.py:18] train/00051{16.39s}
I1204 10:30:41.580933 140477203080960 hlog.py:32] train/00052/loss 0.0125
I1204 10:30:45.237275 140477203080960 hlog.py:32] train/00052/eval_train/acc 0.9920
I1204 10:30:45.778404 140477203080960 hlog.py:32] train/00052/eval_val/acc 0.4595
I1204 10:30:45.778878 140477203080960 hlog.py:18] train/00052{15.35s}
I1204 10:30:57.889000 140477203080960 hlog.py:32] train/00053/loss 0.0169
I1204 10:31:01.903207 140477203080960 hlog.py:32] train/00053/eval_train/acc 0.9840
I1204 10:31:02.468093 140477203080960 hlog.py:32] train/00053/eval_val/acc 0.4527
I1204 10:31:02.468574 140477203080960 hlog.py:18] train/00053{16.69s}
I1204 10:31:14.646761 140477203080960 hlog.py:32] train/00054/loss 0.0130
I1204 10:31:18.908505 140477203080960 hlog.py:32] train/00054/eval_train/acc 0.9740
I1204 10:31:19.485080 140477203080960 hlog.py:32] train/00054/eval_val/acc 0.4459
I1204 10:31:19.485545 140477203080960 hlog.py:18] train/00054{17.02s}
I1204 10:31:31.252083 140477203080960 hlog.py:32] train/00055/loss 0.0128
I1204 10:31:35.011497 140477203080960 hlog.py:32] train/00055/eval_train/acc 0.9290
I1204 10:31:35.557027 140477203080960 hlog.py:32] train/00055/eval_val/acc 0.4324
I1204 10:31:35.557522 140477203080960 hlog.py:18] train/00055{16.07s}
I1204 10:31:47.498000 140477203080960 hlog.py:32] train/00056/loss 0.0133
I1204 10:31:51.463639 140477203080960 hlog.py:32] train/00056/eval_train/acc 0.9720
I1204 10:31:52.029537 140477203080960 hlog.py:32] train/00056/eval_val/acc 0.4392
I1204 10:31:52.030076 140477203080960 hlog.py:18] train/00056{16.47s}
I1204 10:32:04.667350 140477203080960 hlog.py:32] train/00057/loss 0.0125
I1204 10:32:08.685193 140477203080960 hlog.py:32] train/00057/eval_train/acc 0.9760
I1204 10:32:09.227129 140477203080960 hlog.py:32] train/00057/eval_val/acc 0.4527
I1204 10:32:09.227622 140477203080960 hlog.py:18] train/00057{17.20s}
I1204 10:32:20.853329 140477203080960 hlog.py:32] train/00058/loss 0.0099
I1204 10:32:25.634496 140477203080960 hlog.py:32] train/00058/eval_train/acc 0.9900
I1204 10:32:26.240216 140477203080960 hlog.py:32] train/00058/eval_val/acc 0.4392
I1204 10:32:26.240841 140477203080960 hlog.py:18] train/00058{17.01s}
I1204 10:32:38.922366 140477203080960 hlog.py:32] train/00059/loss 0.0105
I1204 10:32:42.858324 140477203080960 hlog.py:32] train/00059/eval_train/acc 0.9770
I1204 10:32:43.504145 140477203080960 hlog.py:32] train/00059/eval_val/acc 0.4730
I1204 10:32:43.662758 140477203080960 hlog.py:18] train/00059{17.42s}
I1204 10:32:55.751084 140477203080960 hlog.py:32] train/00060/loss 0.0093
I1204 10:32:59.486506 140477203080960 hlog.py:32] train/00060/eval_train/acc 0.9920
I1204 10:33:00.043828 140477203080960 hlog.py:32] train/00060/eval_val/acc 0.4392
I1204 10:33:00.044305 140477203080960 hlog.py:18] train/00060{16.38s}
I1204 10:33:12.369530 140477203080960 hlog.py:32] train/00061/loss 0.0088
I1204 10:33:16.158483 140477203080960 hlog.py:32] train/00061/eval_train/acc 0.9970
I1204 10:33:16.737539 140477203080960 hlog.py:32] train/00061/eval_val/acc 0.4730
I1204 10:33:16.738022 140477203080960 hlog.py:18] train/00061{16.69s}
I1204 10:33:30.113851 140477203080960 hlog.py:32] train/00062/loss 0.0089
I1204 10:33:34.068824 140477203080960 hlog.py:32] train/00062/eval_train/acc 0.9960
I1204 10:33:34.641296 140477203080960 hlog.py:32] train/00062/eval_val/acc 0.4595
I1204 10:33:34.641872 140477203080960 hlog.py:18] train/00062{17.90s}
I1204 10:33:47.079617 140477203080960 hlog.py:32] train/00063/loss 0.0077
I1204 10:33:50.748444 140477203080960 hlog.py:32] train/00063/eval_train/acc 0.9940
I1204 10:33:51.315329 140477203080960 hlog.py:32] train/00063/eval_val/acc 0.4730
I1204 10:33:51.315854 140477203080960 hlog.py:18] train/00063{16.67s}
I1204 10:34:03.893935 140477203080960 hlog.py:32] train/00064/loss 0.0077
I1204 10:34:08.022477 140477203080960 hlog.py:32] train/00064/eval_train/acc 1.0000
I1204 10:34:08.593271 140477203080960 hlog.py:32] train/00064/eval_val/acc 0.4595
I1204 10:34:08.593709 140477203080960 hlog.py:18] train/00064{17.28s}
I1204 10:34:21.484246 140477203080960 hlog.py:32] train/00065/loss 0.0073
I1204 10:34:25.398025 140477203080960 hlog.py:32] train/00065/eval_train/acc 0.9940
I1204 10:34:25.942011 140477203080960 hlog.py:32] train/00065/eval_val/acc 0.5135
I1204 10:34:25.942506 140477203080960 hlog.py:18] train/00065{17.35s}
I1204 10:34:38.253458 140477203080960 hlog.py:32] train/00066/loss 0.0093
I1204 10:34:42.198653 140477203080960 hlog.py:32] train/00066/eval_train/acc 0.9970
I1204 10:34:42.797211 140477203080960 hlog.py:32] train/00066/eval_val/acc 0.5000
I1204 10:34:42.797887 140477203080960 hlog.py:18] train/00066{16.86s}
I1204 10:34:55.025455 140477203080960 hlog.py:32] train/00067/loss 0.0068
I1204 10:34:59.090706 140477203080960 hlog.py:32] train/00067/eval_train/acc 0.9950
I1204 10:34:59.662201 140477203080960 hlog.py:32] train/00067/eval_val/acc 0.5135
I1204 10:34:59.662687 140477203080960 hlog.py:18] train/00067{16.86s}
I1204 10:35:11.503819 140477203080960 hlog.py:32] train/00068/loss 0.0067
I1204 10:35:15.845307 140477203080960 hlog.py:32] train/00068/eval_train/acc 0.9970
I1204 10:35:16.420594 140477203080960 hlog.py:32] train/00068/eval_val/acc 0.5068
I1204 10:35:16.421123 140477203080960 hlog.py:18] train/00068{16.76s}
I1204 10:35:30.227866 140477203080960 hlog.py:32] train/00069/loss 0.0088
I1204 10:35:34.044049 140477203080960 hlog.py:32] train/00069/eval_train/acc 0.9990
I1204 10:35:34.674891 140477203080960 hlog.py:32] train/00069/eval_val/acc 0.5405
I1204 10:35:34.706800 140477203080960 hlog.py:18] train/00069{18.29s}
I1204 10:35:46.864922 140477203080960 hlog.py:32] train/00070/loss 0.0072
I1204 10:35:50.815696 140477203080960 hlog.py:32] train/00070/eval_train/acc 0.9900
I1204 10:35:51.453184 140477203080960 hlog.py:32] train/00070/eval_val/acc 0.4730
I1204 10:35:51.453710 140477203080960 hlog.py:18] train/00070{16.75s}
I1204 10:36:03.583327 140477203080960 hlog.py:32] train/00071/loss 0.0071
I1204 10:36:07.412874 140477203080960 hlog.py:32] train/00071/eval_train/acc 1.0000
I1204 10:36:08.013440 140477203080960 hlog.py:32] train/00071/eval_val/acc 0.5203
I1204 10:36:08.014056 140477203080960 hlog.py:18] train/00071{16.56s}
I1204 10:36:19.805356 140477203080960 hlog.py:32] train/00072/loss 0.0067
I1204 10:36:23.681671 140477203080960 hlog.py:32] train/00072/eval_train/acc 0.9990
I1204 10:36:24.265195 140477203080960 hlog.py:32] train/00072/eval_val/acc 0.5338
I1204 10:36:24.265954 140477203080960 hlog.py:18] train/00072{16.25s}
I1204 10:36:36.422625 140477203080960 hlog.py:32] train/00073/loss 0.0077
I1204 10:36:40.576128 140477203080960 hlog.py:32] train/00073/eval_train/acc 0.9990
I1204 10:36:41.156123 140477203080960 hlog.py:32] train/00073/eval_val/acc 0.5270
I1204 10:36:41.156696 140477203080960 hlog.py:18] train/00073{16.89s}
I1204 10:36:53.567983 140477203080960 hlog.py:32] train/00074/loss 0.0068
I1204 10:36:57.591436 140477203080960 hlog.py:32] train/00074/eval_train/acc 1.0000
I1204 10:36:58.182964 140477203080960 hlog.py:32] train/00074/eval_val/acc 0.5135
I1204 10:36:58.183485 140477203080960 hlog.py:18] train/00074{17.03s}
I1204 10:37:09.688795 140477203080960 hlog.py:32] train/00075/loss 0.0058
I1204 10:37:13.268347 140477203080960 hlog.py:32] train/00075/eval_train/acc 0.9990
I1204 10:37:13.888117 140477203080960 hlog.py:32] train/00075/eval_val/acc 0.5000
I1204 10:37:13.888554 140477203080960 hlog.py:18] train/00075{15.70s}
I1204 10:37:25.471748 140477203080960 hlog.py:32] train/00076/loss 0.0074
I1204 10:37:29.319093 140477203080960 hlog.py:32] train/00076/eval_train/acc 1.0000
I1204 10:37:29.924223 140477203080960 hlog.py:32] train/00076/eval_val/acc 0.4797
I1204 10:37:29.924690 140477203080960 hlog.py:18] train/00076{16.04s}
I1204 10:37:42.803319 140477203080960 hlog.py:32] train/00077/loss 0.0064
I1204 10:37:46.580290 140477203080960 hlog.py:32] train/00077/eval_train/acc 0.9970
I1204 10:37:47.205563 140477203080960 hlog.py:32] train/00077/eval_val/acc 0.4932
I1204 10:37:47.206092 140477203080960 hlog.py:18] train/00077{17.28s}
I1204 10:37:59.143814 140477203080960 hlog.py:32] train/00078/loss 0.0079
I1204 10:38:02.940230 140477203080960 hlog.py:32] train/00078/eval_train/acc 0.9930
I1204 10:38:03.502183 140477203080960 hlog.py:32] train/00078/eval_val/acc 0.4797
I1204 10:38:03.502662 140477203080960 hlog.py:18] train/00078{16.30s}
I1204 10:38:15.683170 140477203080960 hlog.py:32] train/00079/loss 0.0066
I1204 10:38:19.715477 140477203080960 hlog.py:32] train/00079/eval_train/acc 0.9950
I1204 10:38:20.335679 140477203080960 hlog.py:32] train/00079/eval_val/acc 0.5000
I1204 10:38:20.493775 140477203080960 hlog.py:18] train/00079{16.99s}
I1204 10:38:32.407773 140477203080960 hlog.py:32] train/00080/loss 0.0061
I1204 10:38:36.485228 140477203080960 hlog.py:32] train/00080/eval_train/acc 0.9940
I1204 10:38:37.121398 140477203080960 hlog.py:32] train/00080/eval_val/acc 0.4662
I1204 10:38:37.121899 140477203080960 hlog.py:18] train/00080{16.63s}
I1204 10:38:49.356748 140477203080960 hlog.py:32] train/00081/loss 0.0065
I1204 10:38:53.011503 140477203080960 hlog.py:32] train/00081/eval_train/acc 1.0000
I1204 10:38:53.639189 140477203080960 hlog.py:32] train/00081/eval_val/acc 0.4730
I1204 10:38:53.639709 140477203080960 hlog.py:18] train/00081{16.52s}
I1204 10:39:05.544812 140477203080960 hlog.py:32] train/00082/loss 0.0053
I1204 10:39:09.501360 140477203080960 hlog.py:32] train/00082/eval_train/acc 1.0000
I1204 10:39:10.101022 140477203080960 hlog.py:32] train/00082/eval_val/acc 0.4797
I1204 10:39:10.101519 140477203080960 hlog.py:18] train/00082{16.46s}
I1204 10:39:22.269525 140477203080960 hlog.py:32] train/00083/loss 0.0056
I1204 10:39:26.280967 140477203080960 hlog.py:32] train/00083/eval_train/acc 1.0000
I1204 10:39:26.891538 140477203080960 hlog.py:32] train/00083/eval_val/acc 0.4662
I1204 10:39:26.892189 140477203080960 hlog.py:18] train/00083{16.79s}
I1204 10:39:39.032613 140477203080960 hlog.py:32] train/00084/loss 0.0052
I1204 10:39:42.749345 140477203080960 hlog.py:32] train/00084/eval_train/acc 0.9970
I1204 10:39:43.320164 140477203080960 hlog.py:32] train/00084/eval_val/acc 0.4662
I1204 10:39:43.320647 140477203080960 hlog.py:18] train/00084{16.43s}
I1204 10:39:56.008874 140477203080960 hlog.py:32] train/00085/loss 0.0049
I1204 10:40:00.065282 140477203080960 hlog.py:32] train/00085/eval_train/acc 1.0000
I1204 10:40:00.656050 140477203080960 hlog.py:32] train/00085/eval_val/acc 0.4730
I1204 10:40:00.656537 140477203080960 hlog.py:18] train/00085{17.34s}
I1204 10:40:12.471574 140477203080960 hlog.py:32] train/00086/loss 0.0049
I1204 10:40:16.456398 140477203080960 hlog.py:32] train/00086/eval_train/acc 1.0000
I1204 10:40:17.045590 140477203080960 hlog.py:32] train/00086/eval_val/acc 0.4662
I1204 10:40:17.046062 140477203080960 hlog.py:18] train/00086{16.39s}
I1204 10:40:29.000513 140477203080960 hlog.py:32] train/00087/loss 0.0044
I1204 10:40:32.984476 140477203080960 hlog.py:32] train/00087/eval_train/acc 0.9990
I1204 10:40:33.625971 140477203080960 hlog.py:32] train/00087/eval_val/acc 0.4730
I1204 10:40:33.626485 140477203080960 hlog.py:18] train/00087{16.58s}
I1204 10:40:45.481403 140477203080960 hlog.py:32] train/00088/loss 0.0044
I1204 10:40:49.233350 140477203080960 hlog.py:32] train/00088/eval_train/acc 1.0000
I1204 10:40:49.863222 140477203080960 hlog.py:32] train/00088/eval_val/acc 0.4865
I1204 10:40:49.863618 140477203080960 hlog.py:18] train/00088{16.24s}
I1204 10:41:01.782542 140477203080960 hlog.py:32] train/00089/loss 0.0044
I1204 10:41:05.508642 140477203080960 hlog.py:32] train/00089/eval_train/acc 0.9960
I1204 10:41:06.120919 140477203080960 hlog.py:32] train/00089/eval_val/acc 0.4932
I1204 10:41:06.151555 140477203080960 hlog.py:18] train/00089{16.29s}
I1204 10:41:17.943985 140477203080960 hlog.py:32] train/00090/loss 0.0040
I1204 10:41:21.796897 140477203080960 hlog.py:32] train/00090/eval_train/acc 1.0000
I1204 10:41:22.439459 140477203080960 hlog.py:32] train/00090/eval_val/acc 0.5000
I1204 10:41:22.440148 140477203080960 hlog.py:18] train/00090{16.29s}
I1204 10:41:35.026029 140477203080960 hlog.py:32] train/00091/loss 0.0043
I1204 10:41:38.976716 140477203080960 hlog.py:32] train/00091/eval_train/acc 1.0000
I1204 10:41:39.583906 140477203080960 hlog.py:32] train/00091/eval_val/acc 0.5068
I1204 10:41:39.584434 140477203080960 hlog.py:18] train/00091{17.14s}
I1204 10:41:51.606963 140477203080960 hlog.py:32] train/00092/loss 0.0041
I1204 10:41:55.388198 140477203080960 hlog.py:32] train/00092/eval_train/acc 1.0000
I1204 10:41:56.024982 140477203080960 hlog.py:32] train/00092/eval_val/acc 0.5135
I1204 10:41:56.025480 140477203080960 hlog.py:18] train/00092{16.44s}
I1204 10:42:08.687793 140477203080960 hlog.py:32] train/00093/loss 0.0047
I1204 10:42:12.559238 140477203080960 hlog.py:32] train/00093/eval_train/acc 1.0000
I1204 10:42:13.208639 140477203080960 hlog.py:32] train/00093/eval_val/acc 0.5270
I1204 10:42:13.209218 140477203080960 hlog.py:18] train/00093{17.18s}
I1204 10:42:26.090574 140477203080960 hlog.py:32] train/00094/loss 0.0040
I1204 10:42:30.048792 140477203080960 hlog.py:32] train/00094/eval_train/acc 1.0000
I1204 10:42:30.673798 140477203080960 hlog.py:32] train/00094/eval_val/acc 0.5203
I1204 10:42:30.674279 140477203080960 hlog.py:18] train/00094{17.46s}
I1204 10:42:43.352359 140477203080960 hlog.py:32] train/00095/loss 0.0041
I1204 10:42:47.441496 140477203080960 hlog.py:32] train/00095/eval_train/acc 1.0000
I1204 10:42:48.085695 140477203080960 hlog.py:32] train/00095/eval_val/acc 0.4932
I1204 10:42:48.086112 140477203080960 hlog.py:18] train/00095{17.41s}
I1204 10:43:00.926111 140477203080960 hlog.py:32] train/00096/loss 0.0043
I1204 10:43:04.609895 140477203080960 hlog.py:32] train/00096/eval_train/acc 1.0000
I1204 10:43:05.231976 140477203080960 hlog.py:32] train/00096/eval_val/acc 0.4730
I1204 10:43:05.232395 140477203080960 hlog.py:18] train/00096{17.15s}
I1204 10:43:17.498639 140477203080960 hlog.py:32] train/00097/loss 0.0042
I1204 10:43:21.579372 140477203080960 hlog.py:32] train/00097/eval_train/acc 1.0000
I1204 10:43:22.194830 140477203080960 hlog.py:32] train/00097/eval_val/acc 0.4865
I1204 10:43:22.195377 140477203080960 hlog.py:18] train/00097{16.96s}
I1204 10:43:34.514756 140477203080960 hlog.py:32] train/00098/loss 0.0039
I1204 10:43:38.391586 140477203080960 hlog.py:32] train/00098/eval_train/acc 1.0000
I1204 10:43:39.015729 140477203080960 hlog.py:32] train/00098/eval_val/acc 0.4932
I1204 10:43:39.016263 140477203080960 hlog.py:18] train/00098{16.82s}
I1204 10:43:51.276577 140477203080960 hlog.py:32] train/00099/loss 0.0040
I1204 10:43:55.194743 140477203080960 hlog.py:32] train/00099/eval_train/acc 1.0000
I1204 10:43:55.815787 140477203080960 hlog.py:32] train/00099/eval_val/acc 0.4932
I1204 10:43:55.975099 140477203080960 hlog.py:18] train/00099{16.96s}
I1204 10:44:08.703109 140477203080960 hlog.py:32] train/00100/loss 0.0042
I1204 10:44:12.622736 140477203080960 hlog.py:32] train/00100/eval_train/acc 1.0000
I1204 10:44:13.183639 140477203080960 hlog.py:32] train/00100/eval_val/acc 0.4932
I1204 10:44:13.184161 140477203080960 hlog.py:18] train/00100{17.21s}
I1204 10:44:25.234168 140477203080960 hlog.py:32] train/00101/loss 0.0039
I1204 10:44:28.910557 140477203080960 hlog.py:32] train/00101/eval_train/acc 1.0000
I1204 10:44:29.500528 140477203080960 hlog.py:32] train/00101/eval_val/acc 0.4932
I1204 10:44:29.501026 140477203080960 hlog.py:18] train/00101{16.32s}
I1204 10:44:41.519156 140477203080960 hlog.py:32] train/00102/loss 0.0039
I1204 10:44:45.576423 140477203080960 hlog.py:32] train/00102/eval_train/acc 1.0000
I1204 10:44:46.224081 140477203080960 hlog.py:32] train/00102/eval_val/acc 0.4932
I1204 10:44:46.224949 140477203080960 hlog.py:18] train/00102{16.72s}
I1204 10:44:58.241633 140477203080960 hlog.py:32] train/00103/loss 0.0035
I1204 10:45:02.694296 140477203080960 hlog.py:32] train/00103/eval_train/acc 1.0000
I1204 10:45:03.281090 140477203080960 hlog.py:32] train/00103/eval_val/acc 0.4865
I1204 10:45:03.281566 140477203080960 hlog.py:18] train/00103{17.06s}
I1204 10:45:15.558869 140477203080960 hlog.py:32] train/00104/loss 0.0038
I1204 10:45:19.713809 140477203080960 hlog.py:32] train/00104/eval_train/acc 1.0000
I1204 10:45:20.318463 140477203080960 hlog.py:32] train/00104/eval_val/acc 0.4932
I1204 10:45:20.319043 140477203080960 hlog.py:18] train/00104{17.04s}
I1204 10:45:32.272806 140477203080960 hlog.py:32] train/00105/loss 0.0033
I1204 10:45:36.149262 140477203080960 hlog.py:32] train/00105/eval_train/acc 1.0000
I1204 10:45:36.750921 140477203080960 hlog.py:32] train/00105/eval_val/acc 0.4932
I1204 10:45:36.751414 140477203080960 hlog.py:18] train/00105{16.43s}
I1204 10:45:48.962939 140477203080960 hlog.py:32] train/00106/loss 0.0038
I1204 10:45:52.726915 140477203080960 hlog.py:32] train/00106/eval_train/acc 1.0000
I1204 10:45:53.364018 140477203080960 hlog.py:32] train/00106/eval_val/acc 0.4932
I1204 10:45:53.364552 140477203080960 hlog.py:18] train/00106{16.61s}
I1204 10:46:04.909943 140477203080960 hlog.py:32] train/00107/loss 0.0034
I1204 10:46:08.774221 140477203080960 hlog.py:32] train/00107/eval_train/acc 1.0000
I1204 10:46:09.407876 140477203080960 hlog.py:32] train/00107/eval_val/acc 0.5000
I1204 10:46:09.408314 140477203080960 hlog.py:18] train/00107{16.04s}
I1204 10:46:21.701125 140477203080960 hlog.py:32] train/00108/loss 0.0034
I1204 10:46:25.723711 140477203080960 hlog.py:32] train/00108/eval_train/acc 1.0000
I1204 10:46:26.340340 140477203080960 hlog.py:32] train/00108/eval_val/acc 0.5000
I1204 10:46:26.340759 140477203080960 hlog.py:18] train/00108{16.93s}
I1204 10:46:39.510424 140477203080960 hlog.py:32] train/00109/loss 0.0041
I1204 10:46:43.336983 140477203080960 hlog.py:32] train/00109/eval_train/acc 1.0000
I1204 10:46:43.962556 140477203080960 hlog.py:32] train/00109/eval_val/acc 0.5000
I1204 10:46:43.995449 140477203080960 hlog.py:18] train/00109{17.65s}
I1204 10:46:56.418229 140477203080960 hlog.py:32] train/00110/loss 0.0031
I1204 10:47:00.438529 140477203080960 hlog.py:32] train/00110/eval_train/acc 1.0000
I1204 10:47:01.102572 140477203080960 hlog.py:32] train/00110/eval_val/acc 0.5000
I1204 10:47:01.103094 140477203080960 hlog.py:18] train/00110{17.11s}
I1204 10:47:13.458465 140477203080960 hlog.py:32] train/00111/loss 0.0037
I1204 10:47:17.576987 140477203080960 hlog.py:32] train/00111/eval_train/acc 1.0000
I1204 10:47:18.244875 140477203080960 hlog.py:32] train/00111/eval_val/acc 0.4932
I1204 10:47:18.245404 140477203080960 hlog.py:18] train/00111{17.14s}
I1204 10:47:30.987100 140477203080960 hlog.py:32] train/00112/loss 0.0037
I1204 10:47:34.837280 140477203080960 hlog.py:32] train/00112/eval_train/acc 1.0000
I1204 10:47:35.499423 140477203080960 hlog.py:32] train/00112/eval_val/acc 0.5000
I1204 10:47:35.499912 140477203080960 hlog.py:18] train/00112{17.25s}
I1204 10:47:48.070383 140477203080960 hlog.py:32] train/00113/loss 0.0039
I1204 10:47:51.690471 140477203080960 hlog.py:32] train/00113/eval_train/acc 1.0000
I1204 10:47:52.320010 140477203080960 hlog.py:32] train/00113/eval_val/acc 0.5000
I1204 10:47:52.320749 140477203080960 hlog.py:18] train/00113{16.82s}
I1204 10:48:04.373168 140477203080960 hlog.py:32] train/00114/loss 0.0038
I1204 10:48:08.254606 140477203080960 hlog.py:32] train/00114/eval_train/acc 1.0000
I1204 10:48:08.896004 140477203080960 hlog.py:32] train/00114/eval_val/acc 0.5000
I1204 10:48:08.896417 140477203080960 hlog.py:18] train/00114{16.58s}
I1204 10:48:21.913374 140477203080960 hlog.py:32] train/00115/loss 0.0042
I1204 10:48:25.681179 140477203080960 hlog.py:32] train/00115/eval_train/acc 1.0000
I1204 10:48:26.321974 140477203080960 hlog.py:32] train/00115/eval_val/acc 0.5000
I1204 10:48:26.322515 140477203080960 hlog.py:18] train/00115{17.43s}
I1204 10:48:38.930008 140477203080960 hlog.py:32] train/00116/loss 0.0036
I1204 10:48:42.888332 140477203080960 hlog.py:32] train/00116/eval_train/acc 1.0000
I1204 10:48:43.518136 140477203080960 hlog.py:32] train/00116/eval_val/acc 0.5000
I1204 10:48:43.518636 140477203080960 hlog.py:18] train/00116{17.20s}
I1204 10:48:56.523658 140477203080960 hlog.py:32] train/00117/loss 0.0036
I1204 10:49:00.348295 140477203080960 hlog.py:32] train/00117/eval_train/acc 1.0000
I1204 10:49:00.965425 140477203080960 hlog.py:32] train/00117/eval_val/acc 0.5000
I1204 10:49:00.965924 140477203080960 hlog.py:18] train/00117{17.45s}
I1204 10:49:12.869613 140477203080960 hlog.py:32] train/00118/loss 0.0033
I1204 10:49:16.696306 140477203080960 hlog.py:32] train/00118/eval_train/acc 1.0000
I1204 10:49:17.315128 140477203080960 hlog.py:32] train/00118/eval_val/acc 0.5000
I1204 10:49:17.315679 140477203080960 hlog.py:18] train/00118{16.35s}
I1204 10:49:30.701275 140477203080960 hlog.py:32] train/00119/loss 0.0035
I1204 10:49:34.539282 140477203080960 hlog.py:32] train/00119/eval_train/acc 1.0000
I1204 10:49:35.161198 140477203080960 hlog.py:32] train/00119/eval_val/acc 0.5000
I1204 10:49:35.263823 140477203080960 hlog.py:18] train/00119{17.95s}
I1204 10:49:47.257653 140477203080960 hlog.py:32] train/00120/loss 0.0035
I1204 10:49:51.167947 140477203080960 hlog.py:32] train/00120/eval_train/acc 1.0000
I1204 10:49:51.771870 140477203080960 hlog.py:32] train/00120/eval_val/acc 0.5068
I1204 10:49:51.772441 140477203080960 hlog.py:18] train/00120{16.51s}
I1204 10:50:03.346512 140477203080960 hlog.py:32] train/00121/loss 0.0036
I1204 10:50:07.410135 140477203080960 hlog.py:32] train/00121/eval_train/acc 1.0000
I1204 10:50:08.007495 140477203080960 hlog.py:32] train/00121/eval_val/acc 0.5068
I1204 10:50:08.007933 140477203080960 hlog.py:18] train/00121{16.24s}
I1204 10:50:19.778297 140477203080960 hlog.py:32] train/00122/loss 0.0042
I1204 10:50:23.745328 140477203080960 hlog.py:32] train/00122/eval_train/acc 1.0000
I1204 10:50:24.334588 140477203080960 hlog.py:32] train/00122/eval_val/acc 0.5068
I1204 10:50:24.335114 140477203080960 hlog.py:18] train/00122{16.33s}
I1204 10:50:37.116908 140477203080960 hlog.py:32] train/00123/loss 0.0035
I1204 10:50:41.022369 140477203080960 hlog.py:32] train/00123/eval_train/acc 1.0000
I1204 10:50:41.624784 140477203080960 hlog.py:32] train/00123/eval_val/acc 0.5135
I1204 10:50:41.625271 140477203080960 hlog.py:18] train/00123{17.29s}
I1204 10:50:53.399426 140477203080960 hlog.py:32] train/00124/loss 0.0058
I1204 10:50:57.288062 140477203080960 hlog.py:32] train/00124/eval_train/acc 1.0000
I1204 10:50:57.904667 140477203080960 hlog.py:32] train/00124/eval_val/acc 0.5068
I1204 10:50:57.905126 140477203080960 hlog.py:18] train/00124{16.28s}
I1204 10:51:10.558410 140477203080960 hlog.py:32] train/00125/loss 0.0035
I1204 10:51:14.792902 140477203080960 hlog.py:32] train/00125/eval_train/acc 1.0000
I1204 10:51:15.400020 140477203080960 hlog.py:32] train/00125/eval_val/acc 0.5068
I1204 10:51:15.400474 140477203080960 hlog.py:18] train/00125{17.50s}
I1204 10:51:27.110810 140477203080960 hlog.py:32] train/00126/loss 0.0030
I1204 10:51:30.940712 140477203080960 hlog.py:32] train/00126/eval_train/acc 1.0000
I1204 10:51:31.554869 140477203080960 hlog.py:32] train/00126/eval_val/acc 0.5068
I1204 10:51:31.555295 140477203080960 hlog.py:18] train/00126{16.15s}
I1204 10:51:44.256989 140477203080960 hlog.py:32] train/00127/loss 0.0035
I1204 10:51:48.108118 140477203080960 hlog.py:32] train/00127/eval_train/acc 1.0000
I1204 10:51:48.707093 140477203080960 hlog.py:32] train/00127/eval_val/acc 0.5068
I1204 10:51:48.707649 140477203080960 hlog.py:18] train/00127{17.15s}
I1204 10:52:00.528979 140477203080960 hlog.py:32] train/00128/loss 0.0035
I1204 10:52:04.386186 140477203080960 hlog.py:32] train/00128/eval_train/acc 1.0000
I1204 10:52:05.002152 140477203080960 hlog.py:32] train/00128/eval_val/acc 0.5068
I1204 10:52:05.002832 140477203080960 hlog.py:18] train/00128{16.30s}
I1204 10:52:17.181788 140477203080960 hlog.py:32] train/00129/loss 0.0034
I1204 10:52:21.338792 140477203080960 hlog.py:32] train/00129/eval_train/acc 1.0000
I1204 10:52:21.938185 140477203080960 hlog.py:32] train/00129/eval_val/acc 0.5068
I1204 10:52:21.969791 140477203080960 hlog.py:18] train/00129{16.97s}
I1204 10:52:33.979203 140477203080960 hlog.py:32] train/00130/loss 0.0035
I1204 10:52:37.881449 140477203080960 hlog.py:32] train/00130/eval_train/acc 1.0000
I1204 10:52:38.637353 140477203080960 hlog.py:32] train/00130/eval_val/acc 0.5000
I1204 10:52:38.637934 140477203080960 hlog.py:18] train/00130{16.67s}
I1204 10:52:51.016494 140477203080960 hlog.py:32] train/00131/loss 0.0030
I1204 10:52:54.674747 140477203080960 hlog.py:32] train/00131/eval_train/acc 1.0000
I1204 10:52:55.251230 140477203080960 hlog.py:32] train/00131/eval_val/acc 0.5000
I1204 10:52:55.251715 140477203080960 hlog.py:18] train/00131{16.61s}
I1204 10:53:08.216413 140477203080960 hlog.py:32] train/00132/loss 0.0040
I1204 10:53:12.122543 140477203080960 hlog.py:32] train/00132/eval_train/acc 1.0000
I1204 10:53:12.701047 140477203080960 hlog.py:32] train/00132/eval_val/acc 0.5000
I1204 10:53:12.701533 140477203080960 hlog.py:18] train/00132{17.45s}
I1204 10:53:25.444301 140477203080960 hlog.py:32] train/00133/loss 0.0035
I1204 10:53:29.099613 140477203080960 hlog.py:32] train/00133/eval_train/acc 1.0000
I1204 10:53:29.679493 140477203080960 hlog.py:32] train/00133/eval_val/acc 0.5000
I1204 10:53:29.679986 140477203080960 hlog.py:18] train/00133{16.98s}
I1204 10:53:41.846365 140477203080960 hlog.py:32] train/00134/loss 0.0034
I1204 10:53:45.683354 140477203080960 hlog.py:32] train/00134/eval_train/acc 1.0000
I1204 10:53:46.270031 140477203080960 hlog.py:32] train/00134/eval_val/acc 0.5000
I1204 10:53:46.270554 140477203080960 hlog.py:18] train/00134{16.59s}
I1204 10:53:59.671047 140477203080960 hlog.py:32] train/00135/loss 0.0036
I1204 10:54:03.325464 140477203080960 hlog.py:32] train/00135/eval_train/acc 1.0000
I1204 10:54:03.937470 140477203080960 hlog.py:32] train/00135/eval_val/acc 0.5000
I1204 10:54:03.937984 140477203080960 hlog.py:18] train/00135{17.67s}
I1204 10:54:16.595754 140477203080960 hlog.py:32] train/00136/loss 0.0036
I1204 10:54:20.554453 140477203080960 hlog.py:32] train/00136/eval_train/acc 1.0000
I1204 10:54:21.144023 140477203080960 hlog.py:32] train/00136/eval_val/acc 0.5068
I1204 10:54:21.144499 140477203080960 hlog.py:18] train/00136{17.21s}
I1204 10:54:33.613233 140477203080960 hlog.py:32] train/00137/loss 0.0038
I1204 10:54:37.345518 140477203080960 hlog.py:32] train/00137/eval_train/acc 1.0000
I1204 10:54:37.949060 140477203080960 hlog.py:32] train/00137/eval_val/acc 0.5068
I1204 10:54:37.949578 140477203080960 hlog.py:18] train/00137{16.80s}
I1204 10:54:50.018932 140477203080960 hlog.py:32] train/00138/loss 0.0036
I1204 10:54:54.098300 140477203080960 hlog.py:32] train/00138/eval_train/acc 1.0000
I1204 10:54:54.777129 140477203080960 hlog.py:32] train/00138/eval_val/acc 0.5068
I1204 10:54:54.777709 140477203080960 hlog.py:18] train/00138{16.83s}
I1204 10:55:07.026130 140477203080960 hlog.py:32] train/00139/loss 0.0032
I1204 10:55:10.805094 140477203080960 hlog.py:32] train/00139/eval_train/acc 1.0000
I1204 10:55:11.410919 140477203080960 hlog.py:32] train/00139/eval_val/acc 0.5068
I1204 10:55:11.443180 140477203080960 hlog.py:18] train/00139{16.67s}
I1204 10:55:23.330096 140477203080960 hlog.py:32] train/00140/loss 0.0027
I1204 10:55:27.058654 140477203080960 hlog.py:32] train/00140/eval_train/acc 1.0000
I1204 10:55:27.651226 140477203080960 hlog.py:32] train/00140/eval_val/acc 0.5068
I1204 10:55:27.651735 140477203080960 hlog.py:18] train/00140{16.21s}
I1204 10:55:39.798588 140477203080960 hlog.py:32] train/00141/loss 0.0037
I1204 10:55:43.801747 140477203080960 hlog.py:32] train/00141/eval_train/acc 1.0000
I1204 10:55:44.402049 140477203080960 hlog.py:32] train/00141/eval_val/acc 0.5068
I1204 10:55:44.402606 140477203080960 hlog.py:18] train/00141{16.75s}
I1204 10:55:56.613272 140477203080960 hlog.py:32] train/00142/loss 0.0036
I1204 10:56:00.565643 140477203080960 hlog.py:32] train/00142/eval_train/acc 1.0000
I1204 10:56:01.154501 140477203080960 hlog.py:32] train/00142/eval_val/acc 0.5068
I1204 10:56:01.154999 140477203080960 hlog.py:18] train/00142{16.75s}
I1204 10:56:14.286344 140477203080960 hlog.py:32] train/00143/loss 0.0039
I1204 10:56:18.110754 140477203080960 hlog.py:32] train/00143/eval_train/acc 1.0000
I1204 10:56:18.704224 140477203080960 hlog.py:32] train/00143/eval_val/acc 0.5068
I1204 10:56:18.704767 140477203080960 hlog.py:18] train/00143{17.55s}
I1204 10:56:31.100395 140477203080960 hlog.py:32] train/00144/loss 0.0031
I1204 10:56:35.147018 140477203080960 hlog.py:32] train/00144/eval_train/acc 1.0000
I1204 10:56:35.760872 140477203080960 hlog.py:32] train/00144/eval_val/acc 0.5068
I1204 10:56:35.761357 140477203080960 hlog.py:18] train/00144{17.06s}
I1204 10:56:49.185697 140477203080960 hlog.py:32] train/00145/loss 0.0040
I1204 10:56:53.272607 140477203080960 hlog.py:32] train/00145/eval_train/acc 1.0000
I1204 10:56:53.875899 140477203080960 hlog.py:32] train/00145/eval_val/acc 0.5068
I1204 10:56:53.876480 140477203080960 hlog.py:18] train/00145{18.12s}
I1204 10:57:06.132770 140477203080960 hlog.py:32] train/00146/loss 0.0031
I1204 10:57:10.029987 140477203080960 hlog.py:32] train/00146/eval_train/acc 1.0000
I1204 10:57:10.640309 140477203080960 hlog.py:32] train/00146/eval_val/acc 0.5068
I1204 10:57:10.640927 140477203080960 hlog.py:18] train/00146{16.76s}
I1204 10:57:23.023669 140477203080960 hlog.py:32] train/00147/loss 0.0033
I1204 10:57:26.898417 140477203080960 hlog.py:32] train/00147/eval_train/acc 1.0000
I1204 10:57:27.518832 140477203080960 hlog.py:32] train/00147/eval_val/acc 0.5068
I1204 10:57:27.519433 140477203080960 hlog.py:18] train/00147{16.88s}
I1204 10:57:39.772212 140477203080960 hlog.py:32] train/00148/loss 0.0035
I1204 10:57:43.714778 140477203080960 hlog.py:32] train/00148/eval_train/acc 1.0000
I1204 10:57:44.305980 140477203080960 hlog.py:32] train/00148/eval_val/acc 0.5068
I1204 10:57:44.306466 140477203080960 hlog.py:18] train/00148{16.79s}
I1204 10:57:56.301056 140477203080960 hlog.py:32] train/00149/loss 0.0030
I1204 10:58:00.134629 140477203080960 hlog.py:32] train/00149/eval_train/acc 1.0000
I1204 10:58:00.342658 140477203080960 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1204 10:58:00.342868 140477203080960 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:58:00.342973 140477203080960 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:58:00.343060 140477203080960 hlog.py:32] train/00149/eval_val/0/corr True
I1204 10:58:00.343139 140477203080960 hlog.py:32] train/00149/eval_val/0 
I1204 10:58:00.343225 140477203080960 hlog.py:18] train/00149/eval_val/0{0.00s}
I1204 10:58:00.343320 140477203080960 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1204 10:58:00.343442 140477203080960 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1204 10:58:00.343539 140477203080960 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.343629 140477203080960 hlog.py:32] train/00149/eval_val/1/corr False
I1204 10:58:00.343719 140477203080960 hlog.py:32] train/00149/eval_val/1 
I1204 10:58:00.343792 140477203080960 hlog.py:18] train/00149/eval_val/1{0.00s}
I1204 10:58:00.343880 140477203080960 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1204 10:58:00.343976 140477203080960 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1204 10:58:00.344066 140477203080960 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1204 10:58:00.344145 140477203080960 hlog.py:32] train/00149/eval_val/2/corr False
I1204 10:58:00.344219 140477203080960 hlog.py:32] train/00149/eval_val/2 
I1204 10:58:00.344291 140477203080960 hlog.py:18] train/00149/eval_val/2{0.00s}
I1204 10:58:00.344383 140477203080960 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1204 10:58:00.344478 140477203080960 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1204 10:58:00.344567 140477203080960 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:58:00.344646 140477203080960 hlog.py:32] train/00149/eval_val/3/corr False
I1204 10:58:00.344720 140477203080960 hlog.py:32] train/00149/eval_val/3 
I1204 10:58:00.344792 140477203080960 hlog.py:18] train/00149/eval_val/3{0.00s}
I1204 10:58:00.344881 140477203080960 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1204 10:58:00.344975 140477203080960 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1204 10:58:00.345064 140477203080960 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1204 10:58:00.345143 140477203080960 hlog.py:32] train/00149/eval_val/4/corr False
I1204 10:58:00.345216 140477203080960 hlog.py:32] train/00149/eval_val/4 
I1204 10:58:00.345288 140477203080960 hlog.py:18] train/00149/eval_val/4{0.00s}
I1204 10:58:00.345374 140477203080960 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1204 10:58:00.345469 140477203080960 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:58:00.345558 140477203080960 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.345636 140477203080960 hlog.py:32] train/00149/eval_val/5/corr False
I1204 10:58:00.345710 140477203080960 hlog.py:32] train/00149/eval_val/5 
I1204 10:58:00.345782 140477203080960 hlog.py:18] train/00149/eval_val/5{0.00s}
I1204 10:58:00.345867 140477203080960 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1204 10:58:00.345979 140477203080960 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 10:58:00.346069 140477203080960 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.346147 140477203080960 hlog.py:32] train/00149/eval_val/6/corr False
I1204 10:58:00.346220 140477203080960 hlog.py:32] train/00149/eval_val/6 
I1204 10:58:00.346291 140477203080960 hlog.py:18] train/00149/eval_val/6{0.00s}
I1204 10:58:00.346377 140477203080960 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1204 10:58:00.346472 140477203080960 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:58:00.346560 140477203080960 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.346639 140477203080960 hlog.py:32] train/00149/eval_val/7/corr False
I1204 10:58:00.346712 140477203080960 hlog.py:32] train/00149/eval_val/7 
I1204 10:58:00.346783 140477203080960 hlog.py:18] train/00149/eval_val/7{0.00s}
I1204 10:58:00.346870 140477203080960 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1204 10:58:00.346965 140477203080960 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 10:58:00.347053 140477203080960 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 10:58:00.347132 140477203080960 hlog.py:32] train/00149/eval_val/8/corr False
I1204 10:58:00.347205 140477203080960 hlog.py:32] train/00149/eval_val/8 
I1204 10:58:00.347276 140477203080960 hlog.py:18] train/00149/eval_val/8{0.00s}
I1204 10:58:00.347363 140477203080960 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1204 10:58:00.347482 140477203080960 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 10:58:00.347573 140477203080960 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 10:58:00.347654 140477203080960 hlog.py:32] train/00149/eval_val/9/corr False
I1204 10:58:00.347741 140477203080960 hlog.py:32] train/00149/eval_val/9 
I1204 10:58:00.347813 140477203080960 hlog.py:18] train/00149/eval_val/9{0.00s}
I1204 10:58:00.347899 140477203080960 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1204 10:58:00.347993 140477203080960 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:58:00.348082 140477203080960 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.348160 140477203080960 hlog.py:32] train/00149/eval_val/10/corr False
I1204 10:58:00.348233 140477203080960 hlog.py:32] train/00149/eval_val/10 
I1204 10:58:00.348305 140477203080960 hlog.py:18] train/00149/eval_val/10{0.00s}
I1204 10:58:00.348399 140477203080960 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1204 10:58:00.348503 140477203080960 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:58:00.348598 140477203080960 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:58:00.348676 140477203080960 hlog.py:32] train/00149/eval_val/11/corr True
I1204 10:58:00.348749 140477203080960 hlog.py:32] train/00149/eval_val/11 
I1204 10:58:00.348821 140477203080960 hlog.py:18] train/00149/eval_val/11{0.00s}
I1204 10:58:00.348916 140477203080960 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1204 10:58:00.349018 140477203080960 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 10:58:00.349119 140477203080960 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 10:58:00.349198 140477203080960 hlog.py:32] train/00149/eval_val/12/corr True
I1204 10:58:00.349272 140477203080960 hlog.py:32] train/00149/eval_val/12 
I1204 10:58:00.349343 140477203080960 hlog.py:18] train/00149/eval_val/12{0.00s}
I1204 10:58:00.349438 140477203080960 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1204 10:58:00.349540 140477203080960 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 10:58:00.349634 140477203080960 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 10:58:00.349712 140477203080960 hlog.py:32] train/00149/eval_val/13/corr True
I1204 10:58:00.349786 140477203080960 hlog.py:32] train/00149/eval_val/13 
I1204 10:58:00.349857 140477203080960 hlog.py:18] train/00149/eval_val/13{0.00s}
I1204 10:58:00.349951 140477203080960 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1204 10:58:00.350054 140477203080960 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 10:58:00.350149 140477203080960 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 10:58:00.350368 140477203080960 hlog.py:32] train/00149/eval_val/14/corr True
I1204 10:58:00.350443 140477203080960 hlog.py:32] train/00149/eval_val/14 
I1204 10:58:00.350515 140477203080960 hlog.py:18] train/00149/eval_val/14{0.00s}
I1204 10:58:00.350610 140477203080960 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1204 10:58:00.350713 140477203080960 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 10:58:00.350807 140477203080960 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 10:58:00.350886 140477203080960 hlog.py:32] train/00149/eval_val/15/corr True
I1204 10:58:00.350959 140477203080960 hlog.py:32] train/00149/eval_val/15 
I1204 10:58:00.351031 140477203080960 hlog.py:18] train/00149/eval_val/15{0.00s}
I1204 10:58:00.351125 140477203080960 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1204 10:58:00.351228 140477203080960 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:58:00.351323 140477203080960 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 10:58:00.351424 140477203080960 hlog.py:32] train/00149/eval_val/16/corr True
I1204 10:58:00.351503 140477203080960 hlog.py:32] train/00149/eval_val/16 
I1204 10:58:00.351577 140477203080960 hlog.py:18] train/00149/eval_val/16{0.00s}
I1204 10:58:00.351668 140477203080960 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1204 10:58:00.351781 140477203080960 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1204 10:58:00.351876 140477203080960 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1204 10:58:00.351961 140477203080960 hlog.py:32] train/00149/eval_val/17/corr False
I1204 10:58:00.352035 140477203080960 hlog.py:32] train/00149/eval_val/17 
I1204 10:58:00.352107 140477203080960 hlog.py:18] train/00149/eval_val/17{0.00s}
I1204 10:58:00.352195 140477203080960 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1204 10:58:00.352293 140477203080960 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1204 10:58:00.352388 140477203080960 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1204 10:58:00.352467 140477203080960 hlog.py:32] train/00149/eval_val/18/corr False
I1204 10:58:00.352540 140477203080960 hlog.py:32] train/00149/eval_val/18 
I1204 10:58:00.352612 140477203080960 hlog.py:18] train/00149/eval_val/18{0.00s}
I1204 10:58:00.352699 140477203080960 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1204 10:58:00.352797 140477203080960 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:58:00.352892 140477203080960 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1204 10:58:00.352971 140477203080960 hlog.py:32] train/00149/eval_val/19/corr False
I1204 10:58:00.353044 140477203080960 hlog.py:32] train/00149/eval_val/19 
I1204 10:58:00.353116 140477203080960 hlog.py:18] train/00149/eval_val/19{0.00s}
I1204 10:58:00.353204 140477203080960 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1204 10:58:00.353302 140477203080960 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1204 10:58:00.353396 140477203080960 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1204 10:58:00.353475 140477203080960 hlog.py:32] train/00149/eval_val/20/corr False
I1204 10:58:00.353548 140477203080960 hlog.py:32] train/00149/eval_val/20 
I1204 10:58:00.353619 140477203080960 hlog.py:18] train/00149/eval_val/20{0.00s}
I1204 10:58:00.353714 140477203080960 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1204 10:58:00.353816 140477203080960 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 10:58:00.353911 140477203080960 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 10:58:00.353989 140477203080960 hlog.py:32] train/00149/eval_val/21/corr True
I1204 10:58:00.354063 140477203080960 hlog.py:32] train/00149/eval_val/21 
I1204 10:58:00.354135 140477203080960 hlog.py:18] train/00149/eval_val/21{0.00s}
I1204 10:58:00.354224 140477203080960 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1204 10:58:00.354319 140477203080960 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1204 10:58:00.354409 140477203080960 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1204 10:58:00.354487 140477203080960 hlog.py:32] train/00149/eval_val/22/corr False
I1204 10:58:00.354561 140477203080960 hlog.py:32] train/00149/eval_val/22 
I1204 10:58:00.354632 140477203080960 hlog.py:18] train/00149/eval_val/22{0.00s}
I1204 10:58:00.354721 140477203080960 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1204 10:58:00.354815 140477203080960 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:58:00.354911 140477203080960 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:58:00.354989 140477203080960 hlog.py:32] train/00149/eval_val/23/corr False
I1204 10:58:00.355062 140477203080960 hlog.py:32] train/00149/eval_val/23 
I1204 10:58:00.355134 140477203080960 hlog.py:18] train/00149/eval_val/23{0.00s}
I1204 10:58:00.355223 140477203080960 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1204 10:58:00.355317 140477203080960 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _loc ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:58:00.355428 140477203080960 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 10:58:00.355512 140477203080960 hlog.py:32] train/00149/eval_val/24/corr False
I1204 10:58:00.355587 140477203080960 hlog.py:32] train/00149/eval_val/24 
I1204 10:58:00.355662 140477203080960 hlog.py:18] train/00149/eval_val/24{0.00s}
I1204 10:58:00.355768 140477203080960 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1204 10:58:00.355865 140477203080960 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:58:00.355955 140477203080960 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:58:00.356034 140477203080960 hlog.py:32] train/00149/eval_val/25/corr True
I1204 10:58:00.356106 140477203080960 hlog.py:32] train/00149/eval_val/25 
I1204 10:58:00.356178 140477203080960 hlog.py:18] train/00149/eval_val/25{0.00s}
I1204 10:58:00.356270 140477203080960 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1204 10:58:00.356366 140477203080960 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 10:58:00.356456 140477203080960 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 10:58:00.356534 140477203080960 hlog.py:32] train/00149/eval_val/26/corr True
I1204 10:58:00.356608 140477203080960 hlog.py:32] train/00149/eval_val/26 
I1204 10:58:00.356680 140477203080960 hlog.py:18] train/00149/eval_val/26{0.00s}
I1204 10:58:00.356767 140477203080960 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1204 10:58:00.356870 140477203080960 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1204 10:58:00.356962 140477203080960 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:58:00.357040 140477203080960 hlog.py:32] train/00149/eval_val/27/corr False
I1204 10:58:00.357113 140477203080960 hlog.py:32] train/00149/eval_val/27 
I1204 10:58:00.357184 140477203080960 hlog.py:18] train/00149/eval_val/27{0.00s}
I1204 10:58:00.357275 140477203080960 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1204 10:58:00.357372 140477203080960 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:58:00.357463 140477203080960 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:58:00.357541 140477203080960 hlog.py:32] train/00149/eval_val/28/corr True
I1204 10:58:00.357613 140477203080960 hlog.py:32] train/00149/eval_val/28 
I1204 10:58:00.357685 140477203080960 hlog.py:18] train/00149/eval_val/28{0.00s}
I1204 10:58:00.357777 140477203080960 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1204 10:58:00.357873 140477203080960 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 10:58:00.357969 140477203080960 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 10:58:00.358048 140477203080960 hlog.py:32] train/00149/eval_val/29/corr True
I1204 10:58:00.358121 140477203080960 hlog.py:32] train/00149/eval_val/29 
I1204 10:58:00.358193 140477203080960 hlog.py:18] train/00149/eval_val/29{0.00s}
I1204 10:58:00.358285 140477203080960 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1204 10:58:00.358383 140477203080960 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 10:58:00.358474 140477203080960 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 10:58:00.358551 140477203080960 hlog.py:32] train/00149/eval_val/30/corr True
I1204 10:58:00.358624 140477203080960 hlog.py:32] train/00149/eval_val/30 
I1204 10:58:00.358696 140477203080960 hlog.py:18] train/00149/eval_val/30{0.00s}
I1204 10:58:00.358788 140477203080960 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1204 10:58:00.358884 140477203080960 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 10:58:00.358975 140477203080960 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 10:58:00.359053 140477203080960 hlog.py:32] train/00149/eval_val/31/corr True
I1204 10:58:00.359126 140477203080960 hlog.py:32] train/00149/eval_val/31 
I1204 10:58:00.359197 140477203080960 hlog.py:18] train/00149/eval_val/31{0.00s}
I1204 10:58:00.359290 140477203080960 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1204 10:58:00.359401 140477203080960 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 10:58:00.359505 140477203080960 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 10:58:00.359586 140477203080960 hlog.py:32] train/00149/eval_val/32/corr True
I1204 10:58:00.359662 140477203080960 hlog.py:32] train/00149/eval_val/32 
I1204 10:58:00.359748 140477203080960 hlog.py:18] train/00149/eval_val/32{0.00s}
I1204 10:58:00.359841 140477203080960 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1204 10:58:00.359938 140477203080960 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:58:00.360028 140477203080960 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 10:58:00.360106 140477203080960 hlog.py:32] train/00149/eval_val/33/corr True
I1204 10:58:00.360179 140477203080960 hlog.py:32] train/00149/eval_val/33 
I1204 10:58:00.360251 140477203080960 hlog.py:18] train/00149/eval_val/33{0.00s}
I1204 10:58:00.360343 140477203080960 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1204 10:58:00.360440 140477203080960 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:58:00.360530 140477203080960 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 10:58:00.360608 140477203080960 hlog.py:32] train/00149/eval_val/34/corr True
I1204 10:58:00.360682 140477203080960 hlog.py:32] train/00149/eval_val/34 
I1204 10:58:00.360753 140477203080960 hlog.py:18] train/00149/eval_val/34{0.00s}
I1204 10:58:00.360847 140477203080960 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1204 10:58:00.360946 140477203080960 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.361049 140477203080960 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.361128 140477203080960 hlog.py:32] train/00149/eval_val/35/corr True
I1204 10:58:00.361201 140477203080960 hlog.py:32] train/00149/eval_val/35 
I1204 10:58:00.361272 140477203080960 hlog.py:18] train/00149/eval_val/35{0.00s}
I1204 10:58:00.361366 140477203080960 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1204 10:58:00.361465 140477203080960 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.361557 140477203080960 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.361636 140477203080960 hlog.py:32] train/00149/eval_val/36/corr True
I1204 10:58:00.361709 140477203080960 hlog.py:32] train/00149/eval_val/36 
I1204 10:58:00.361781 140477203080960 hlog.py:18] train/00149/eval_val/36{0.00s}
I1204 10:58:00.361873 140477203080960 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1204 10:58:00.361973 140477203080960 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1204 10:58:00.362065 140477203080960 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.362143 140477203080960 hlog.py:32] train/00149/eval_val/37/corr False
I1204 10:58:00.362216 140477203080960 hlog.py:32] train/00149/eval_val/37 
I1204 10:58:00.362288 140477203080960 hlog.py:18] train/00149/eval_val/37{0.00s}
I1204 10:58:00.362381 140477203080960 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1204 10:58:00.362480 140477203080960 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.362573 140477203080960 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.362651 140477203080960 hlog.py:32] train/00149/eval_val/38/corr True
I1204 10:58:00.362725 140477203080960 hlog.py:32] train/00149/eval_val/38 
I1204 10:58:00.362796 140477203080960 hlog.py:18] train/00149/eval_val/38{0.00s}
I1204 10:58:00.362890 140477203080960 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1204 10:58:00.362989 140477203080960 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.363081 140477203080960 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 10:58:00.363160 140477203080960 hlog.py:32] train/00149/eval_val/39/corr True
I1204 10:58:00.363233 140477203080960 hlog.py:32] train/00149/eval_val/39 
I1204 10:58:00.363304 140477203080960 hlog.py:18] train/00149/eval_val/39{0.00s}
I1204 10:58:00.363413 140477203080960 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1204 10:58:00.363519 140477203080960 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 10:58:00.363613 140477203080960 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 10:58:00.363706 140477203080960 hlog.py:32] train/00149/eval_val/40/corr False
I1204 10:58:00.363780 140477203080960 hlog.py:32] train/00149/eval_val/40 
I1204 10:58:00.363851 140477203080960 hlog.py:18] train/00149/eval_val/40{0.00s}
I1204 10:58:00.363938 140477203080960 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1204 10:58:00.364049 140477203080960 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( called ) ) ) , A ) )
I1204 10:58:00.364139 140477203080960 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 10:58:00.364217 140477203080960 hlog.py:32] train/00149/eval_val/41/corr False
I1204 10:58:00.364290 140477203080960 hlog.py:32] train/00149/eval_val/41 
I1204 10:58:00.364362 140477203080960 hlog.py:18] train/00149/eval_val/41{0.00s}
I1204 10:58:00.364449 140477203080960 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1204 10:58:00.364549 140477203080960 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1204 10:58:00.364638 140477203080960 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1204 10:58:00.364716 140477203080960 hlog.py:32] train/00149/eval_val/42/corr False
I1204 10:58:00.364789 140477203080960 hlog.py:32] train/00149/eval_val/42 
I1204 10:58:00.364860 140477203080960 hlog.py:18] train/00149/eval_val/42{0.00s}
I1204 10:58:00.364948 140477203080960 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1204 10:58:00.365053 140477203080960 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1204 10:58:00.365149 140477203080960 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1204 10:58:00.365227 140477203080960 hlog.py:32] train/00149/eval_val/43/corr False
I1204 10:58:00.365300 140477203080960 hlog.py:32] train/00149/eval_val/43 
I1204 10:58:00.365372 140477203080960 hlog.py:18] train/00149/eval_val/43{0.00s}
I1204 10:58:00.365467 140477203080960 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1204 10:58:00.365572 140477203080960 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 10:58:00.365668 140477203080960 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 10:58:00.365746 140477203080960 hlog.py:32] train/00149/eval_val/44/corr True
I1204 10:58:00.365819 140477203080960 hlog.py:32] train/00149/eval_val/44 
I1204 10:58:00.365891 140477203080960 hlog.py:18] train/00149/eval_val/44{0.00s}
I1204 10:58:00.365982 140477203080960 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1204 10:58:00.366081 140477203080960 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 10:58:00.366173 140477203080960 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 10:58:00.366251 140477203080960 hlog.py:32] train/00149/eval_val/45/corr False
I1204 10:58:00.366323 140477203080960 hlog.py:32] train/00149/eval_val/45 
I1204 10:58:00.366395 140477203080960 hlog.py:18] train/00149/eval_val/45{0.00s}
I1204 10:58:00.366488 140477203080960 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1204 10:58:00.366586 140477203080960 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 10:58:00.366678 140477203080960 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 10:58:00.366757 140477203080960 hlog.py:32] train/00149/eval_val/46/corr True
I1204 10:58:00.366836 140477203080960 hlog.py:32] train/00149/eval_val/46 
I1204 10:58:00.366908 140477203080960 hlog.py:18] train/00149/eval_val/46{0.00s}
I1204 10:58:00.366995 140477203080960 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1204 10:58:00.367095 140477203080960 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , A ) )
I1204 10:58:00.367189 140477203080960 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 10:58:00.367268 140477203080960 hlog.py:32] train/00149/eval_val/47/corr False
I1204 10:58:00.367341 140477203080960 hlog.py:32] train/00149/eval_val/47 
I1204 10:58:00.367434 140477203080960 hlog.py:18] train/00149/eval_val/47{0.00s}
I1204 10:58:00.367679 140477203080960 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1204 10:58:00.367831 140477203080960 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 10:58:00.367938 140477203080960 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 10:58:00.368024 140477203080960 hlog.py:32] train/00149/eval_val/48/corr True
I1204 10:58:00.368103 140477203080960 hlog.py:32] train/00149/eval_val/48 
I1204 10:58:00.368183 140477203080960 hlog.py:18] train/00149/eval_val/48{0.00s}
I1204 10:58:00.368286 140477203080960 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1204 10:58:00.368393 140477203080960 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:58:00.368492 140477203080960 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:58:00.368574 140477203080960 hlog.py:32] train/00149/eval_val/49/corr True
I1204 10:58:00.368650 140477203080960 hlog.py:32] train/00149/eval_val/49 
I1204 10:58:00.368726 140477203080960 hlog.py:18] train/00149/eval_val/49{0.00s}
I1204 10:58:00.368826 140477203080960 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1204 10:58:00.368933 140477203080960 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 10:58:00.369031 140477203080960 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 10:58:00.369114 140477203080960 hlog.py:32] train/00149/eval_val/50/corr True
I1204 10:58:00.369190 140477203080960 hlog.py:32] train/00149/eval_val/50 
I1204 10:58:00.369265 140477203080960 hlog.py:18] train/00149/eval_val/50{0.00s}
I1204 10:58:00.369358 140477203080960 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1204 10:58:00.369468 140477203080960 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:58:00.369568 140477203080960 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 10:58:00.369650 140477203080960 hlog.py:32] train/00149/eval_val/51/corr False
I1204 10:58:00.369726 140477203080960 hlog.py:32] train/00149/eval_val/51 
I1204 10:58:00.369801 140477203080960 hlog.py:18] train/00149/eval_val/51{0.00s}
I1204 10:58:00.369892 140477203080960 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1204 10:58:00.370009 140477203080960 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 10:58:00.370106 140477203080960 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 10:58:00.370188 140477203080960 hlog.py:32] train/00149/eval_val/52/corr False
I1204 10:58:00.370264 140477203080960 hlog.py:32] train/00149/eval_val/52 
I1204 10:58:00.370339 140477203080960 hlog.py:18] train/00149/eval_val/52{0.00s}
I1204 10:58:00.370429 140477203080960 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1204 10:58:00.370531 140477203080960 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 10:58:00.370625 140477203080960 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 10:58:00.370707 140477203080960 hlog.py:32] train/00149/eval_val/53/corr False
I1204 10:58:00.370783 140477203080960 hlog.py:32] train/00149/eval_val/53 
I1204 10:58:00.370857 140477203080960 hlog.py:18] train/00149/eval_val/53{0.00s}
I1204 10:58:00.370949 140477203080960 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1204 10:58:00.371051 140477203080960 hlog.py:32] train/00149/eval_val/54/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) ) )
I1204 10:58:00.371146 140477203080960 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:58:00.371228 140477203080960 hlog.py:32] train/00149/eval_val/54/corr False
I1204 10:58:00.371304 140477203080960 hlog.py:32] train/00149/eval_val/54 
I1204 10:58:00.371378 140477203080960 hlog.py:18] train/00149/eval_val/54{0.00s}
I1204 10:58:00.371483 140477203080960 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1204 10:58:00.371581 140477203080960 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 10:58:00.371675 140477203080960 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 10:58:00.371756 140477203080960 hlog.py:32] train/00149/eval_val/55/corr False
I1204 10:58:00.371832 140477203080960 hlog.py:32] train/00149/eval_val/55 
I1204 10:58:00.371906 140477203080960 hlog.py:18] train/00149/eval_val/55{0.00s}
I1204 10:58:00.371998 140477203080960 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1204 10:58:00.372100 140477203080960 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:58:00.372194 140477203080960 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:58:00.372275 140477203080960 hlog.py:32] train/00149/eval_val/56/corr False
I1204 10:58:00.372350 140477203080960 hlog.py:32] train/00149/eval_val/56 
I1204 10:58:00.372424 140477203080960 hlog.py:18] train/00149/eval_val/56{0.00s}
I1204 10:58:00.372521 140477203080960 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1204 10:58:00.372621 140477203080960 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.372715 140477203080960 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.372796 140477203080960 hlog.py:32] train/00149/eval_val/57/corr True
I1204 10:58:00.372872 140477203080960 hlog.py:32] train/00149/eval_val/57 
I1204 10:58:00.372946 140477203080960 hlog.py:18] train/00149/eval_val/57{0.00s}
I1204 10:58:00.373036 140477203080960 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1204 10:58:00.373139 140477203080960 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.373234 140477203080960 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.373315 140477203080960 hlog.py:32] train/00149/eval_val/58/corr False
I1204 10:58:00.373392 140477203080960 hlog.py:32] train/00149/eval_val/58 
I1204 10:58:00.373466 140477203080960 hlog.py:18] train/00149/eval_val/58{0.00s}
I1204 10:58:00.373557 140477203080960 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1204 10:58:00.373655 140477203080960 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( montana , _ ) ) ) )
I1204 10:58:00.373749 140477203080960 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 10:58:00.373831 140477203080960 hlog.py:32] train/00149/eval_val/59/corr False
I1204 10:58:00.373906 140477203080960 hlog.py:32] train/00149/eval_val/59 
I1204 10:58:00.373980 140477203080960 hlog.py:18] train/00149/eval_val/59{0.00s}
I1204 10:58:00.374073 140477203080960 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1204 10:58:00.374172 140477203080960 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 10:58:00.374266 140477203080960 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 10:58:00.374348 140477203080960 hlog.py:32] train/00149/eval_val/60/corr False
I1204 10:58:00.374423 140477203080960 hlog.py:32] train/00149/eval_val/60 
I1204 10:58:00.374498 140477203080960 hlog.py:18] train/00149/eval_val/60{0.00s}
I1204 10:58:00.374591 140477203080960 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1204 10:58:00.374691 140477203080960 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:58:00.374785 140477203080960 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:58:00.374866 140477203080960 hlog.py:32] train/00149/eval_val/61/corr False
I1204 10:58:00.374942 140477203080960 hlog.py:32] train/00149/eval_val/61 
I1204 10:58:00.375016 140477203080960 hlog.py:18] train/00149/eval_val/61{0.00s}
I1204 10:58:00.375108 140477203080960 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1204 10:58:00.375208 140477203080960 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 10:58:00.375302 140477203080960 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 10:58:00.375383 140477203080960 hlog.py:32] train/00149/eval_val/62/corr False
I1204 10:58:00.375479 140477203080960 hlog.py:32] train/00149/eval_val/62 
I1204 10:58:00.375554 140477203080960 hlog.py:18] train/00149/eval_val/62{0.00s}
I1204 10:58:00.375647 140477203080960 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1204 10:58:00.375751 140477203080960 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.375845 140477203080960 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.375926 140477203080960 hlog.py:32] train/00149/eval_val/63/corr False
I1204 10:58:00.376002 140477203080960 hlog.py:32] train/00149/eval_val/63 
I1204 10:58:00.376076 140477203080960 hlog.py:18] train/00149/eval_val/63{0.00s}
I1204 10:58:00.620755 140477203080960 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1204 10:58:00.620973 140477203080960 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 10:58:00.621090 140477203080960 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 10:58:00.621178 140477203080960 hlog.py:32] train/00149/eval_val/64/corr False
I1204 10:58:00.621258 140477203080960 hlog.py:32] train/00149/eval_val/64 
I1204 10:58:00.621338 140477203080960 hlog.py:18] train/00149/eval_val/64{0.00s}
I1204 10:58:00.621437 140477203080960 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1204 10:58:00.621539 140477203080960 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.621635 140477203080960 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.621717 140477203080960 hlog.py:32] train/00149/eval_val/65/corr True
I1204 10:58:00.621793 140477203080960 hlog.py:32] train/00149/eval_val/65 
I1204 10:58:00.621868 140477203080960 hlog.py:18] train/00149/eval_val/65{0.00s}
I1204 10:58:00.621965 140477203080960 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1204 10:58:00.622066 140477203080960 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.622160 140477203080960 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.622241 140477203080960 hlog.py:32] train/00149/eval_val/66/corr True
I1204 10:58:00.622318 140477203080960 hlog.py:32] train/00149/eval_val/66 
I1204 10:58:00.622392 140477203080960 hlog.py:18] train/00149/eval_val/66{0.00s}
I1204 10:58:00.622491 140477203080960 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1204 10:58:00.622592 140477203080960 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.622686 140477203080960 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.622768 140477203080960 hlog.py:32] train/00149/eval_val/67/corr True
I1204 10:58:00.622844 140477203080960 hlog.py:32] train/00149/eval_val/67 
I1204 10:58:00.622919 140477203080960 hlog.py:18] train/00149/eval_val/67{0.00s}
I1204 10:58:00.623011 140477203080960 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1204 10:58:00.623115 140477203080960 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _loc ( B , A ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( indiana ) ) ) )
I1204 10:58:00.623211 140477203080960 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 10:58:00.623293 140477203080960 hlog.py:32] train/00149/eval_val/68/corr False
I1204 10:58:00.623369 140477203080960 hlog.py:32] train/00149/eval_val/68 
I1204 10:58:00.623456 140477203080960 hlog.py:18] train/00149/eval_val/68{0.00s}
I1204 10:58:00.623548 140477203080960 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1204 10:58:00.623651 140477203080960 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _loc ( B , A ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1204 10:58:00.623748 140477203080960 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.623829 140477203080960 hlog.py:32] train/00149/eval_val/69/corr False
I1204 10:58:00.623905 140477203080960 hlog.py:32] train/00149/eval_val/69 
I1204 10:58:00.623979 140477203080960 hlog.py:18] train/00149/eval_val/69{0.00s}
I1204 10:58:00.624070 140477203080960 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1204 10:58:00.624170 140477203080960 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 10:58:00.624269 140477203080960 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.624351 140477203080960 hlog.py:32] train/00149/eval_val/70/corr False
I1204 10:58:00.624428 140477203080960 hlog.py:32] train/00149/eval_val/70 
I1204 10:58:00.624502 140477203080960 hlog.py:18] train/00149/eval_val/70{0.00s}
I1204 10:58:00.624592 140477203080960 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1204 10:58:00.624691 140477203080960 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 10:58:00.624783 140477203080960 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 10:58:00.624864 140477203080960 hlog.py:32] train/00149/eval_val/71/corr False
I1204 10:58:00.624940 140477203080960 hlog.py:32] train/00149/eval_val/71 
I1204 10:58:00.625015 140477203080960 hlog.py:18] train/00149/eval_val/71{0.00s}
I1204 10:58:00.625105 140477203080960 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1204 10:58:00.625203 140477203080960 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 10:58:00.625295 140477203080960 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 10:58:00.625376 140477203080960 hlog.py:32] train/00149/eval_val/72/corr False
I1204 10:58:00.625452 140477203080960 hlog.py:32] train/00149/eval_val/72 
I1204 10:58:00.625527 140477203080960 hlog.py:18] train/00149/eval_val/72{0.00s}
I1204 10:58:00.625616 140477203080960 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1204 10:58:00.625714 140477203080960 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1204 10:58:00.625807 140477203080960 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1204 10:58:00.625888 140477203080960 hlog.py:32] train/00149/eval_val/73/corr False
I1204 10:58:00.625964 140477203080960 hlog.py:32] train/00149/eval_val/73 
I1204 10:58:00.626038 140477203080960 hlog.py:18] train/00149/eval_val/73{0.00s}
I1204 10:58:00.626128 140477203080960 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1204 10:58:00.626225 140477203080960 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1204 10:58:00.626317 140477203080960 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:58:00.626399 140477203080960 hlog.py:32] train/00149/eval_val/74/corr False
I1204 10:58:00.626474 140477203080960 hlog.py:32] train/00149/eval_val/74 
I1204 10:58:00.626548 140477203080960 hlog.py:18] train/00149/eval_val/74{0.00s}
I1204 10:58:00.626640 140477203080960 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1204 10:58:00.626739 140477203080960 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _len ( B , A ) , _const ( B , _cityid ( maryland , _ ) ) ) )
I1204 10:58:00.626831 140477203080960 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1204 10:58:00.626913 140477203080960 hlog.py:32] train/00149/eval_val/75/corr False
I1204 10:58:00.626988 140477203080960 hlog.py:32] train/00149/eval_val/75 
I1204 10:58:00.627063 140477203080960 hlog.py:18] train/00149/eval_val/75{0.00s}
I1204 10:58:00.627153 140477203080960 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1204 10:58:00.627252 140477203080960 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 10:58:00.627345 140477203080960 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 10:58:00.627433 140477203080960 hlog.py:32] train/00149/eval_val/76/corr False
I1204 10:58:00.627516 140477203080960 hlog.py:32] train/00149/eval_val/76 
I1204 10:58:00.627592 140477203080960 hlog.py:18] train/00149/eval_val/76{0.00s}
I1204 10:58:00.627681 140477203080960 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1204 10:58:00.627780 140477203080960 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1204 10:58:00.627872 140477203080960 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 10:58:00.627954 140477203080960 hlog.py:32] train/00149/eval_val/77/corr False
I1204 10:58:00.628030 140477203080960 hlog.py:32] train/00149/eval_val/77 
I1204 10:58:00.628104 140477203080960 hlog.py:18] train/00149/eval_val/77{0.00s}
I1204 10:58:00.628194 140477203080960 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1204 10:58:00.628291 140477203080960 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1204 10:58:00.628384 140477203080960 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1204 10:58:00.628465 140477203080960 hlog.py:32] train/00149/eval_val/78/corr False
I1204 10:58:00.628540 140477203080960 hlog.py:32] train/00149/eval_val/78 
I1204 10:58:00.628615 140477203080960 hlog.py:18] train/00149/eval_val/78{0.00s}
I1204 10:58:00.628705 140477203080960 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1204 10:58:00.628805 140477203080960 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1204 10:58:00.628897 140477203080960 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1204 10:58:00.628978 140477203080960 hlog.py:32] train/00149/eval_val/79/corr False
I1204 10:58:00.629054 140477203080960 hlog.py:32] train/00149/eval_val/79 
I1204 10:58:00.629128 140477203080960 hlog.py:18] train/00149/eval_val/79{0.00s}
I1204 10:58:00.629218 140477203080960 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1204 10:58:00.629316 140477203080960 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 10:58:00.629409 140477203080960 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.629490 140477203080960 hlog.py:32] train/00149/eval_val/80/corr False
I1204 10:58:00.629565 140477203080960 hlog.py:32] train/00149/eval_val/80 
I1204 10:58:00.629639 140477203080960 hlog.py:18] train/00149/eval_val/80{0.00s}
I1204 10:58:00.629729 140477203080960 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1204 10:58:00.629829 140477203080960 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( texas ) ) , _state ( B ) ) )
I1204 10:58:00.629921 140477203080960 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.630002 140477203080960 hlog.py:32] train/00149/eval_val/81/corr False
I1204 10:58:00.630078 140477203080960 hlog.py:32] train/00149/eval_val/81 
I1204 10:58:00.630152 140477203080960 hlog.py:18] train/00149/eval_val/81{0.00s}
I1204 10:58:00.630242 140477203080960 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1204 10:58:00.630340 140477203080960 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1204 10:58:00.630433 140477203080960 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1204 10:58:00.630514 140477203080960 hlog.py:32] train/00149/eval_val/82/corr False
I1204 10:58:00.630589 140477203080960 hlog.py:32] train/00149/eval_val/82 
I1204 10:58:00.630663 140477203080960 hlog.py:18] train/00149/eval_val/82{0.00s}
I1204 10:58:00.630759 140477203080960 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1204 10:58:00.630854 140477203080960 hlog.py:32] train/00149/eval_val/83/pred ( A , _sum ( A , _state ( A ) ) )
I1204 10:58:00.630946 140477203080960 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 10:58:00.631028 140477203080960 hlog.py:32] train/00149/eval_val/83/corr False
I1204 10:58:00.631103 140477203080960 hlog.py:32] train/00149/eval_val/83 
I1204 10:58:00.631177 140477203080960 hlog.py:18] train/00149/eval_val/83{0.00s}
I1204 10:58:00.631271 140477203080960 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1204 10:58:00.631367 140477203080960 hlog.py:32] train/00149/eval_val/84/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1204 10:58:00.631467 140477203080960 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:58:00.631548 140477203080960 hlog.py:32] train/00149/eval_val/84/corr False
I1204 10:58:00.631624 140477203080960 hlog.py:32] train/00149/eval_val/84 
I1204 10:58:00.631698 140477203080960 hlog.py:18] train/00149/eval_val/84{0.00s}
I1204 10:58:00.631793 140477203080960 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1204 10:58:00.631891 140477203080960 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _population ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:58:00.631983 140477203080960 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 10:58:00.632065 140477203080960 hlog.py:32] train/00149/eval_val/85/corr False
I1204 10:58:00.632140 140477203080960 hlog.py:32] train/00149/eval_val/85 
I1204 10:58:00.632214 140477203080960 hlog.py:18] train/00149/eval_val/85{0.00s}
I1204 10:58:00.632307 140477203080960 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1204 10:58:00.632416 140477203080960 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _const ( C , _riverid ( a ) ) , _river ( C ) ) ) ) )
I1204 10:58:00.632515 140477203080960 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1204 10:58:00.632597 140477203080960 hlog.py:32] train/00149/eval_val/86/corr False
I1204 10:58:00.632672 140477203080960 hlog.py:32] train/00149/eval_val/86 
I1204 10:58:00.632746 140477203080960 hlog.py:18] train/00149/eval_val/86{0.00s}
I1204 10:58:00.632843 140477203080960 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1204 10:58:00.632954 140477203080960 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _smallest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:58:00.633057 140477203080960 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:58:00.633138 140477203080960 hlog.py:32] train/00149/eval_val/87/corr False
I1204 10:58:00.633214 140477203080960 hlog.py:32] train/00149/eval_val/87 
I1204 10:58:00.633288 140477203080960 hlog.py:18] train/00149/eval_val/87{0.00s}
I1204 10:58:00.633384 140477203080960 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1204 10:58:00.633484 140477203080960 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 10:58:00.633578 140477203080960 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 10:58:00.633659 140477203080960 hlog.py:32] train/00149/eval_val/88/corr True
I1204 10:58:00.633735 140477203080960 hlog.py:32] train/00149/eval_val/88 
I1204 10:58:00.633815 140477203080960 hlog.py:18] train/00149/eval_val/88{0.00s}
I1204 10:58:00.633916 140477203080960 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1204 10:58:00.634023 140477203080960 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.634122 140477203080960 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.634204 140477203080960 hlog.py:32] train/00149/eval_val/89/corr True
I1204 10:58:00.634279 140477203080960 hlog.py:32] train/00149/eval_val/89 
I1204 10:58:00.634353 140477203080960 hlog.py:18] train/00149/eval_val/89{0.00s}
I1204 10:58:00.634446 140477203080960 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1204 10:58:00.634550 140477203080960 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1204 10:58:00.634652 140477203080960 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1204 10:58:00.634733 140477203080960 hlog.py:32] train/00149/eval_val/90/corr False
I1204 10:58:00.634809 140477203080960 hlog.py:32] train/00149/eval_val/90 
I1204 10:58:00.634883 140477203080960 hlog.py:18] train/00149/eval_val/90{0.00s}
I1204 10:58:00.634979 140477203080960 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1204 10:58:00.635081 140477203080960 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.635177 140477203080960 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.635259 140477203080960 hlog.py:32] train/00149/eval_val/91/corr True
I1204 10:58:00.635334 140477203080960 hlog.py:32] train/00149/eval_val/91 
I1204 10:58:00.635415 140477203080960 hlog.py:18] train/00149/eval_val/91{0.00s}
I1204 10:58:00.635514 140477203080960 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1204 10:58:00.635616 140477203080960 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.635711 140477203080960 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.635793 140477203080960 hlog.py:32] train/00149/eval_val/92/corr True
I1204 10:58:00.635869 140477203080960 hlog.py:32] train/00149/eval_val/92 
I1204 10:58:00.635943 140477203080960 hlog.py:18] train/00149/eval_val/92{0.00s}
I1204 10:58:00.636036 140477203080960 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1204 10:58:00.636137 140477203080960 hlog.py:32] train/00149/eval_val/93/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.636233 140477203080960 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.636315 140477203080960 hlog.py:32] train/00149/eval_val/93/corr False
I1204 10:58:00.636390 140477203080960 hlog.py:32] train/00149/eval_val/93 
I1204 10:58:00.636464 140477203080960 hlog.py:18] train/00149/eval_val/93{0.00s}
I1204 10:58:00.636557 140477203080960 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1204 10:58:00.636659 140477203080960 hlog.py:32] train/00149/eval_val/94/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.636760 140477203080960 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.636842 140477203080960 hlog.py:32] train/00149/eval_val/94/corr False
I1204 10:58:00.636918 140477203080960 hlog.py:32] train/00149/eval_val/94 
I1204 10:58:00.636992 140477203080960 hlog.py:18] train/00149/eval_val/94{0.00s}
I1204 10:58:00.637090 140477203080960 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1204 10:58:00.637192 140477203080960 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.637287 140477203080960 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.637370 140477203080960 hlog.py:32] train/00149/eval_val/95/corr True
I1204 10:58:00.637446 140477203080960 hlog.py:32] train/00149/eval_val/95 
I1204 10:58:00.637520 140477203080960 hlog.py:18] train/00149/eval_val/95{0.00s}
I1204 10:58:00.637619 140477203080960 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1204 10:58:00.637725 140477203080960 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 10:58:00.637823 140477203080960 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 10:58:00.637905 140477203080960 hlog.py:32] train/00149/eval_val/96/corr True
I1204 10:58:00.637981 140477203080960 hlog.py:32] train/00149/eval_val/96 
I1204 10:58:00.638055 140477203080960 hlog.py:18] train/00149/eval_val/96{0.00s}
I1204 10:58:00.638158 140477203080960 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1204 10:58:00.638320 140477203080960 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 10:58:00.638474 140477203080960 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 10:58:00.638557 140477203080960 hlog.py:32] train/00149/eval_val/97/corr True
I1204 10:58:00.638633 140477203080960 hlog.py:32] train/00149/eval_val/97 
I1204 10:58:00.638707 140477203080960 hlog.py:18] train/00149/eval_val/97{0.00s}
I1204 10:58:00.638806 140477203080960 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1204 10:58:00.638910 140477203080960 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 10:58:00.639007 140477203080960 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 10:58:00.639089 140477203080960 hlog.py:32] train/00149/eval_val/98/corr True
I1204 10:58:00.639164 140477203080960 hlog.py:32] train/00149/eval_val/98 
I1204 10:58:00.639238 140477203080960 hlog.py:18] train/00149/eval_val/98{0.00s}
I1204 10:58:00.639337 140477203080960 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1204 10:58:00.639448 140477203080960 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:58:00.639546 140477203080960 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 10:58:00.639633 140477203080960 hlog.py:32] train/00149/eval_val/99/corr True
I1204 10:58:00.639709 140477203080960 hlog.py:32] train/00149/eval_val/99 
I1204 10:58:00.639784 140477203080960 hlog.py:18] train/00149/eval_val/99{0.00s}
I1204 10:58:00.639879 140477203080960 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1204 10:58:00.639984 140477203080960 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1204 10:58:00.640082 140477203080960 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 10:58:00.640163 140477203080960 hlog.py:32] train/00149/eval_val/100/corr False
I1204 10:58:00.640239 140477203080960 hlog.py:32] train/00149/eval_val/100 
I1204 10:58:00.640313 140477203080960 hlog.py:18] train/00149/eval_val/100{0.00s}
I1204 10:58:00.640404 140477203080960 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1204 10:58:00.640512 140477203080960 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 10:58:00.640610 140477203080960 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 10:58:00.640692 140477203080960 hlog.py:32] train/00149/eval_val/101/corr False
I1204 10:58:00.640768 140477203080960 hlog.py:32] train/00149/eval_val/101 
I1204 10:58:00.640841 140477203080960 hlog.py:18] train/00149/eval_val/101{0.00s}
I1204 10:58:00.640932 140477203080960 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1204 10:58:00.641029 140477203080960 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( over ) ) ) )
I1204 10:58:00.641124 140477203080960 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 10:58:00.641206 140477203080960 hlog.py:32] train/00149/eval_val/102/corr False
I1204 10:58:00.641282 140477203080960 hlog.py:32] train/00149/eval_val/102 
I1204 10:58:00.641355 140477203080960 hlog.py:18] train/00149/eval_val/102{0.00s}
I1204 10:58:00.641451 140477203080960 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1204 10:58:00.641551 140477203080960 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 10:58:00.641645 140477203080960 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 10:58:00.641726 140477203080960 hlog.py:32] train/00149/eval_val/103/corr True
I1204 10:58:00.641802 140477203080960 hlog.py:32] train/00149/eval_val/103 
I1204 10:58:00.641876 140477203080960 hlog.py:18] train/00149/eval_val/103{0.00s}
I1204 10:58:00.641970 140477203080960 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1204 10:58:00.642070 140477203080960 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.642164 140477203080960 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.642245 140477203080960 hlog.py:32] train/00149/eval_val/104/corr True
I1204 10:58:00.642321 140477203080960 hlog.py:32] train/00149/eval_val/104 
I1204 10:58:00.642394 140477203080960 hlog.py:18] train/00149/eval_val/104{0.00s}
I1204 10:58:00.642490 140477203080960 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1204 10:58:00.642590 140477203080960 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 10:58:00.642690 140477203080960 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 10:58:00.642772 140477203080960 hlog.py:32] train/00149/eval_val/105/corr True
I1204 10:58:00.642848 140477203080960 hlog.py:32] train/00149/eval_val/105 
I1204 10:58:00.642922 140477203080960 hlog.py:18] train/00149/eval_val/105{0.00s}
I1204 10:58:00.643018 140477203080960 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1204 10:58:00.643117 140477203080960 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 10:58:00.643210 140477203080960 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 10:58:00.643292 140477203080960 hlog.py:32] train/00149/eval_val/106/corr True
I1204 10:58:00.643367 140477203080960 hlog.py:32] train/00149/eval_val/106 
I1204 10:58:00.643448 140477203080960 hlog.py:18] train/00149/eval_val/106{0.00s}
I1204 10:58:00.643545 140477203080960 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1204 10:58:00.643644 140477203080960 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:58:00.643738 140477203080960 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:58:00.643819 140477203080960 hlog.py:32] train/00149/eval_val/107/corr True
I1204 10:58:00.643894 140477203080960 hlog.py:32] train/00149/eval_val/107 
I1204 10:58:00.643968 140477203080960 hlog.py:18] train/00149/eval_val/107{0.00s}
I1204 10:58:00.644063 140477203080960 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1204 10:58:00.644163 140477203080960 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 10:58:00.644256 140477203080960 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 10:58:00.644337 140477203080960 hlog.py:32] train/00149/eval_val/108/corr True
I1204 10:58:00.644413 140477203080960 hlog.py:32] train/00149/eval_val/108 
I1204 10:58:00.644486 140477203080960 hlog.py:18] train/00149/eval_val/108{0.00s}
I1204 10:58:00.644581 140477203080960 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1204 10:58:00.644680 140477203080960 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 10:58:00.644774 140477203080960 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 10:58:00.644855 140477203080960 hlog.py:32] train/00149/eval_val/109/corr True
I1204 10:58:00.644931 140477203080960 hlog.py:32] train/00149/eval_val/109 
I1204 10:58:00.645004 140477203080960 hlog.py:18] train/00149/eval_val/109{0.00s}
I1204 10:58:00.645099 140477203080960 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1204 10:58:00.645199 140477203080960 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:58:00.645292 140477203080960 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 10:58:00.645373 140477203080960 hlog.py:32] train/00149/eval_val/110/corr True
I1204 10:58:00.645448 140477203080960 hlog.py:32] train/00149/eval_val/110 
I1204 10:58:00.645522 140477203080960 hlog.py:18] train/00149/eval_val/110{0.00s}
I1204 10:58:00.645617 140477203080960 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1204 10:58:00.645716 140477203080960 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 10:58:00.645816 140477203080960 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 10:58:00.645898 140477203080960 hlog.py:32] train/00149/eval_val/111/corr True
I1204 10:58:00.645973 140477203080960 hlog.py:32] train/00149/eval_val/111 
I1204 10:58:00.646048 140477203080960 hlog.py:18] train/00149/eval_val/111{0.00s}
I1204 10:58:00.646143 140477203080960 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1204 10:58:00.646242 140477203080960 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:58:00.646336 140477203080960 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 10:58:00.646418 140477203080960 hlog.py:32] train/00149/eval_val/112/corr True
I1204 10:58:00.646494 140477203080960 hlog.py:32] train/00149/eval_val/112 
I1204 10:58:00.646567 140477203080960 hlog.py:18] train/00149/eval_val/112{0.00s}
I1204 10:58:00.646663 140477203080960 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1204 10:58:00.646764 140477203080960 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:58:00.646858 140477203080960 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 10:58:00.646939 140477203080960 hlog.py:32] train/00149/eval_val/113/corr True
I1204 10:58:00.647014 140477203080960 hlog.py:32] train/00149/eval_val/113 
I1204 10:58:00.647089 140477203080960 hlog.py:18] train/00149/eval_val/113{0.00s}
I1204 10:58:00.647184 140477203080960 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1204 10:58:00.647282 140477203080960 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.647377 140477203080960 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 10:58:00.647467 140477203080960 hlog.py:32] train/00149/eval_val/114/corr True
I1204 10:58:00.647543 140477203080960 hlog.py:32] train/00149/eval_val/114 
I1204 10:58:00.647617 140477203080960 hlog.py:18] train/00149/eval_val/114{0.00s}
I1204 10:58:00.647708 140477203080960 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1204 10:58:00.647808 140477203080960 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west ) ) ) )
I1204 10:58:00.647902 140477203080960 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1204 10:58:00.647983 140477203080960 hlog.py:32] train/00149/eval_val/115/corr False
I1204 10:58:00.648059 140477203080960 hlog.py:32] train/00149/eval_val/115 
I1204 10:58:00.648133 140477203080960 hlog.py:18] train/00149/eval_val/115{0.00s}
I1204 10:58:00.648228 140477203080960 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1204 10:58:00.648327 140477203080960 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.648421 140477203080960 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 10:58:00.648502 140477203080960 hlog.py:32] train/00149/eval_val/116/corr True
I1204 10:58:00.648578 140477203080960 hlog.py:32] train/00149/eval_val/116 
I1204 10:58:00.648652 140477203080960 hlog.py:18] train/00149/eval_val/116{0.00s}
I1204 10:58:00.648749 140477203080960 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1204 10:58:00.648851 140477203080960 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.648952 140477203080960 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.649034 140477203080960 hlog.py:32] train/00149/eval_val/117/corr True
I1204 10:58:00.649110 140477203080960 hlog.py:32] train/00149/eval_val/117 
I1204 10:58:00.649184 140477203080960 hlog.py:18] train/00149/eval_val/117{0.00s}
I1204 10:58:00.649281 140477203080960 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1204 10:58:00.649382 140477203080960 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.649477 140477203080960 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.649559 140477203080960 hlog.py:32] train/00149/eval_val/118/corr True
I1204 10:58:00.649634 140477203080960 hlog.py:32] train/00149/eval_val/118 
I1204 10:58:00.649708 140477203080960 hlog.py:18] train/00149/eval_val/118{0.00s}
I1204 10:58:00.649806 140477203080960 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1204 10:58:00.649908 140477203080960 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.650002 140477203080960 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 10:58:00.650084 140477203080960 hlog.py:32] train/00149/eval_val/119/corr True
I1204 10:58:00.650160 140477203080960 hlog.py:32] train/00149/eval_val/119 
I1204 10:58:00.650234 140477203080960 hlog.py:18] train/00149/eval_val/119{0.00s}
I1204 10:58:00.650327 140477203080960 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1204 10:58:00.650420 140477203080960 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 10:58:00.650510 140477203080960 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 10:58:00.650591 140477203080960 hlog.py:32] train/00149/eval_val/120/corr True
I1204 10:58:00.650666 140477203080960 hlog.py:32] train/00149/eval_val/120 
I1204 10:58:00.650741 140477203080960 hlog.py:18] train/00149/eval_val/120{0.00s}
I1204 10:58:00.650834 140477203080960 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1204 10:58:00.650927 140477203080960 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 10:58:00.651016 140477203080960 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 10:58:00.651097 140477203080960 hlog.py:32] train/00149/eval_val/121/corr True
I1204 10:58:00.651173 140477203080960 hlog.py:32] train/00149/eval_val/121 
I1204 10:58:00.651247 140477203080960 hlog.py:18] train/00149/eval_val/121{0.00s}
I1204 10:58:00.651343 140477203080960 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1204 10:58:00.651451 140477203080960 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 10:58:00.651548 140477203080960 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 10:58:00.651629 140477203080960 hlog.py:32] train/00149/eval_val/122/corr True
I1204 10:58:00.651705 140477203080960 hlog.py:32] train/00149/eval_val/122 
I1204 10:58:00.651779 140477203080960 hlog.py:18] train/00149/eval_val/122{0.00s}
I1204 10:58:00.651876 140477203080960 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1204 10:58:00.651977 140477203080960 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 10:58:00.652079 140477203080960 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 10:58:00.652161 140477203080960 hlog.py:32] train/00149/eval_val/123/corr True
I1204 10:58:00.652237 140477203080960 hlog.py:32] train/00149/eval_val/123 
I1204 10:58:00.652311 140477203080960 hlog.py:18] train/00149/eval_val/123{0.00s}
I1204 10:58:00.652408 140477203080960 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1204 10:58:00.652509 140477203080960 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 10:58:00.652605 140477203080960 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 10:58:00.652686 140477203080960 hlog.py:32] train/00149/eval_val/124/corr True
I1204 10:58:00.652762 140477203080960 hlog.py:32] train/00149/eval_val/124 
I1204 10:58:00.652835 140477203080960 hlog.py:18] train/00149/eval_val/124{0.00s}
I1204 10:58:00.652932 140477203080960 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1204 10:58:00.653033 140477203080960 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 10:58:00.653129 140477203080960 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 10:58:00.653210 140477203080960 hlog.py:32] train/00149/eval_val/125/corr True
I1204 10:58:00.653286 140477203080960 hlog.py:32] train/00149/eval_val/125 
I1204 10:58:00.653360 140477203080960 hlog.py:18] train/00149/eval_val/125{0.00s}
I1204 10:58:00.653456 140477203080960 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1204 10:58:00.653553 140477203080960 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.653645 140477203080960 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.653726 140477203080960 hlog.py:32] train/00149/eval_val/126/corr True
I1204 10:58:00.653802 140477203080960 hlog.py:32] train/00149/eval_val/126 
I1204 10:58:00.653876 140477203080960 hlog.py:18] train/00149/eval_val/126{0.00s}
I1204 10:58:00.653971 140477203080960 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1204 10:58:00.654068 140477203080960 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.654159 140477203080960 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.654240 140477203080960 hlog.py:32] train/00149/eval_val/127/corr True
I1204 10:58:00.654316 140477203080960 hlog.py:32] train/00149/eval_val/127 
I1204 10:58:00.654390 140477203080960 hlog.py:18] train/00149/eval_val/127{0.00s}
I1204 10:58:00.822681 140477203080960 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1204 10:58:00.822890 140477203080960 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.822994 140477203080960 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.823082 140477203080960 hlog.py:32] train/00149/eval_val/128/corr True
I1204 10:58:00.823162 140477203080960 hlog.py:32] train/00149/eval_val/128 
I1204 10:58:00.823243 140477203080960 hlog.py:18] train/00149/eval_val/128{0.00s}
I1204 10:58:00.823343 140477203080960 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1204 10:58:00.823454 140477203080960 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.823560 140477203080960 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.823643 140477203080960 hlog.py:32] train/00149/eval_val/129/corr True
I1204 10:58:00.823720 140477203080960 hlog.py:32] train/00149/eval_val/129 
I1204 10:58:00.823795 140477203080960 hlog.py:18] train/00149/eval_val/129{0.00s}
I1204 10:58:00.823893 140477203080960 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1204 10:58:00.823991 140477203080960 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.824084 140477203080960 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.824165 140477203080960 hlog.py:32] train/00149/eval_val/130/corr True
I1204 10:58:00.824241 140477203080960 hlog.py:32] train/00149/eval_val/130 
I1204 10:58:00.824315 140477203080960 hlog.py:18] train/00149/eval_val/130{0.00s}
I1204 10:58:00.824412 140477203080960 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1204 10:58:00.824509 140477203080960 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.824602 140477203080960 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.824682 140477203080960 hlog.py:32] train/00149/eval_val/131/corr True
I1204 10:58:00.824759 140477203080960 hlog.py:32] train/00149/eval_val/131 
I1204 10:58:00.824833 140477203080960 hlog.py:18] train/00149/eval_val/131{0.00s}
I1204 10:58:00.824928 140477203080960 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1204 10:58:00.825025 140477203080960 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.825117 140477203080960 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 10:58:00.825197 140477203080960 hlog.py:32] train/00149/eval_val/132/corr True
I1204 10:58:00.825273 140477203080960 hlog.py:32] train/00149/eval_val/132 
I1204 10:58:00.825348 140477203080960 hlog.py:18] train/00149/eval_val/132{0.00s}
I1204 10:58:00.825441 140477203080960 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1204 10:58:00.825546 140477203080960 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _river ( C ) , _loc ( C , A ) , _const ( C , _countryid ( usa ) ) ) ) , A ) )
I1204 10:58:00.825639 140477203080960 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1204 10:58:00.825721 140477203080960 hlog.py:32] train/00149/eval_val/133/corr False
I1204 10:58:00.825797 140477203080960 hlog.py:32] train/00149/eval_val/133 
I1204 10:58:00.825871 140477203080960 hlog.py:18] train/00149/eval_val/133{0.00s}
I1204 10:58:00.825967 140477203080960 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1204 10:58:00.826074 140477203080960 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.826174 140477203080960 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.826256 140477203080960 hlog.py:32] train/00149/eval_val/134/corr False
I1204 10:58:00.826332 140477203080960 hlog.py:32] train/00149/eval_val/134 
I1204 10:58:00.826406 140477203080960 hlog.py:18] train/00149/eval_val/134{0.00s}
I1204 10:58:00.826505 140477203080960 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1204 10:58:00.826611 140477203080960 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.826716 140477203080960 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 10:58:00.826798 140477203080960 hlog.py:32] train/00149/eval_val/135/corr True
I1204 10:58:00.826874 140477203080960 hlog.py:32] train/00149/eval_val/135 
I1204 10:58:00.826949 140477203080960 hlog.py:18] train/00149/eval_val/135{0.00s}
I1204 10:58:00.827039 140477203080960 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1204 10:58:00.827141 140477203080960 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , \+ ( _loc ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.827236 140477203080960 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.827318 140477203080960 hlog.py:32] train/00149/eval_val/136/corr False
I1204 10:58:00.827394 140477203080960 hlog.py:32] train/00149/eval_val/136 
I1204 10:58:00.827479 140477203080960 hlog.py:18] train/00149/eval_val/136{0.00s}
I1204 10:58:00.827576 140477203080960 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1204 10:58:00.827676 140477203080960 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.827770 140477203080960 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.827851 140477203080960 hlog.py:32] train/00149/eval_val/137/corr True
I1204 10:58:00.827927 140477203080960 hlog.py:32] train/00149/eval_val/137 
I1204 10:58:00.828001 140477203080960 hlog.py:18] train/00149/eval_val/137{0.00s}
I1204 10:58:00.828097 140477203080960 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1204 10:58:00.828197 140477203080960 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.828291 140477203080960 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.828372 140477203080960 hlog.py:32] train/00149/eval_val/138/corr True
I1204 10:58:00.828448 140477203080960 hlog.py:32] train/00149/eval_val/138 
I1204 10:58:00.828522 140477203080960 hlog.py:18] train/00149/eval_val/138{0.00s}
I1204 10:58:00.828618 140477203080960 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1204 10:58:00.828718 140477203080960 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.828812 140477203080960 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 10:58:00.828893 140477203080960 hlog.py:32] train/00149/eval_val/139/corr True
I1204 10:58:00.828969 140477203080960 hlog.py:32] train/00149/eval_val/139 
I1204 10:58:00.829043 140477203080960 hlog.py:18] train/00149/eval_val/139{0.00s}
I1204 10:58:00.829143 140477203080960 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1204 10:58:00.829250 140477203080960 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:58:00.829348 140477203080960 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:58:00.829429 140477203080960 hlog.py:32] train/00149/eval_val/140/corr True
I1204 10:58:00.829505 140477203080960 hlog.py:32] train/00149/eval_val/140 
I1204 10:58:00.829579 140477203080960 hlog.py:18] train/00149/eval_val/140{0.00s}
I1204 10:58:00.829678 140477203080960 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1204 10:58:00.829792 140477203080960 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:58:00.829890 140477203080960 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 10:58:00.829971 140477203080960 hlog.py:32] train/00149/eval_val/141/corr True
I1204 10:58:00.830047 140477203080960 hlog.py:32] train/00149/eval_val/141 
I1204 10:58:00.830121 140477203080960 hlog.py:18] train/00149/eval_val/141{0.00s}
I1204 10:58:00.830212 140477203080960 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1204 10:58:00.830312 140477203080960 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 10:58:00.830404 140477203080960 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 10:58:00.830486 140477203080960 hlog.py:32] train/00149/eval_val/142/corr False
I1204 10:58:00.830562 140477203080960 hlog.py:32] train/00149/eval_val/142 
I1204 10:58:00.830636 140477203080960 hlog.py:18] train/00149/eval_val/142{0.00s}
I1204 10:58:00.830726 140477203080960 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1204 10:58:00.830825 140477203080960 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 10:58:00.830918 140477203080960 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 10:58:00.830999 140477203080960 hlog.py:32] train/00149/eval_val/143/corr False
I1204 10:58:00.831074 140477203080960 hlog.py:32] train/00149/eval_val/143 
I1204 10:58:00.831149 140477203080960 hlog.py:18] train/00149/eval_val/143{0.00s}
I1204 10:58:00.831239 140477203080960 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1204 10:58:00.831332 140477203080960 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1204 10:58:00.831431 140477203080960 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1204 10:58:00.831514 140477203080960 hlog.py:32] train/00149/eval_val/144/corr False
I1204 10:58:00.831590 140477203080960 hlog.py:32] train/00149/eval_val/144 
I1204 10:58:00.831664 140477203080960 hlog.py:18] train/00149/eval_val/144{0.00s}
I1204 10:58:00.831754 140477203080960 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1204 10:58:00.831856 140477203080960 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) )
I1204 10:58:00.831949 140477203080960 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1204 10:58:00.832030 140477203080960 hlog.py:32] train/00149/eval_val/145/corr False
I1204 10:58:00.832105 140477203080960 hlog.py:32] train/00149/eval_val/145 
I1204 10:58:00.832179 140477203080960 hlog.py:18] train/00149/eval_val/145{0.00s}
I1204 10:58:00.832273 140477203080960 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1204 10:58:00.832440 140477203080960 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _state ( B ) , _loc ( C , B ) , _higher ( C , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) , _state ( D ) ) ) ) ) )
I1204 10:58:00.832545 140477203080960 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1204 10:58:00.832628 140477203080960 hlog.py:32] train/00149/eval_val/146/corr False
I1204 10:58:00.832709 140477203080960 hlog.py:32] train/00149/eval_val/146 
I1204 10:58:00.832784 140477203080960 hlog.py:18] train/00149/eval_val/146{0.00s}
I1204 10:58:00.832881 140477203080960 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1204 10:58:00.832985 140477203080960 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 10:58:00.833081 140477203080960 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 10:58:00.833162 140477203080960 hlog.py:32] train/00149/eval_val/147/corr True
I1204 10:58:00.833237 140477203080960 hlog.py:32] train/00149/eval_val/147 
I1204 10:58:00.833312 140477203080960 hlog.py:18] train/00149/eval_val/147{0.00s}
I1204 10:58:00.833395 140477203080960 hlog.py:32] train/00149/eval_val/acc 0.5068
I1204 10:58:00.866391 140477203080960 hlog.py:18] train/00149{16.56s}
I1204 10:58:00.868586 140477203080960 hlog.py:18] train{2557.33s}
