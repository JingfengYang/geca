I1204 07:25:30.385908 140087498471168 hlog.py:24] # --noTEST
I1204 07:25:30.386306 140087498471168 hlog.py:24] # --seed=4
I1204 07:25:30.386393 140087498471168 hlog.py:24] # --dataset=semparse
I1204 07:25:30.386473 140087498471168 hlog.py:24] # --model_dir=model
I1204 07:25:30.386551 140087498471168 hlog.py:24] # --n_checkpoint=10
I1204 07:25:30.386625 140087498471168 hlog.py:24] # --nologtostderr
I1204 07:25:30.386699 140087498471168 hlog.py:24] # --noalsologtostderr
I1204 07:25:30.386772 140087498471168 hlog.py:24] # --log_dir=
I1204 07:25:30.386846 140087498471168 hlog.py:24] # --verbosity=0
I1204 07:25:30.386919 140087498471168 hlog.py:24] # --verbosity=0
I1204 07:25:30.386992 140087498471168 hlog.py:24] # --stderrthreshold=fatal
I1204 07:25:30.387064 140087498471168 hlog.py:24] # --showprefixforinfo
I1204 07:25:30.387136 140087498471168 hlog.py:24] # --nodedup
I1204 07:25:30.387209 140087498471168 hlog.py:24] # --nobuild_comp_table
I1204 07:25:30.387282 140087498471168 hlog.py:24] # --semparse_split=query
I1204 07:25:30.387354 140087498471168 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1204 07:25:30.387448 140087498471168 hlog.py:24] # --semparse_mrl=logic
I1204 07:25:30.387523 140087498471168 hlog.py:24] # --val_fold=8
I1204 07:25:30.387595 140087498471168 hlog.py:24] # --test_fold=9
I1204 07:25:30.387667 140087498471168 hlog.py:24] # --n_emb=64
I1204 07:25:30.387740 140087498471168 hlog.py:24] # --n_enc=512
I1204 07:25:30.387812 140087498471168 hlog.py:24] # --dropout=0.5
I1204 07:25:30.387884 140087498471168 hlog.py:24] # --copy_sup
I1204 07:25:30.387956 140087498471168 hlog.py:24] # --n_epochs=150
I1204 07:25:30.388028 140087498471168 hlog.py:24] # --n_epoch_batches=32
I1204 07:25:30.388100 140087498471168 hlog.py:24] # --n_batch=64
I1204 07:25:30.388172 140087498471168 hlog.py:24] # --lr=0.001
I1204 07:25:30.388243 140087498471168 hlog.py:24] # --clip=1.0
I1204 07:25:30.388316 140087498471168 hlog.py:24] # --sched_factor=0.5
I1204 07:25:30.388388 140087498471168 hlog.py:24] # --norun_with_pdb
I1204 07:25:30.388459 140087498471168 hlog.py:24] # --nopdb_post_mortem
I1204 07:25:30.388532 140087498471168 hlog.py:24] # --norun_with_profiling
I1204 07:25:30.388603 140087498471168 hlog.py:24] # --use_cprofile_for_profiling
I1204 07:25:30.388676 140087498471168 hlog.py:24] # --noonly_check_args
I1204 07:25:30.388748 140087498471168 hlog.py:24] # --augment=composed.val4.json
I1204 07:25:30.388820 140087498471168 hlog.py:24] # --aug_ratio=0.3
I1204 07:25:30.388892 140087498471168 hlog.py:24] # --noinvert
I1204 07:25:30.388963 140087498471168 hlog.py:24] # --nohelp
I1204 07:25:30.389035 140087498471168 hlog.py:24] # --nohelp
I1204 07:25:30.389108 140087498471168 hlog.py:24] # --nohelpshort
I1204 07:25:30.389180 140087498471168 hlog.py:24] # --nohelpfull
I1204 07:25:30.389252 140087498471168 hlog.py:24] # --nohelpxml
I1204 07:25:30.389323 140087498471168 hlog.py:24] # 
I1204 07:25:30.430174 140087498471168 hlog.py:32] train 543
I1204 07:25:30.430384 140087498471168 hlog.py:32] aug 1000
I1204 07:25:45.823911 140087498471168 hlog.py:32] train/00000/loss 3.6077
I1204 07:25:58.048189 140087498471168 hlog.py:32] train/00000/eval_train/acc 0.0000
I1204 07:26:00.014514 140087498471168 hlog.py:32] train/00000/eval_val/acc 0.0000
I1204 07:26:00.015198 140087498471168 hlog.py:18] train/00000{25.77s}
I1204 07:26:12.830928 140087498471168 hlog.py:32] train/00001/loss 1.1532
I1204 07:26:15.405518 140087498471168 hlog.py:32] train/00001/eval_train/acc 0.0000
I1204 07:26:15.816916 140087498471168 hlog.py:32] train/00001/eval_val/acc 0.0000
I1204 07:26:15.817418 140087498471168 hlog.py:18] train/00001{15.80s}
I1204 07:26:28.522976 140087498471168 hlog.py:32] train/00002/loss 0.7236
I1204 07:26:31.493040 140087498471168 hlog.py:32] train/00002/eval_train/acc 0.0000
I1204 07:26:32.003489 140087498471168 hlog.py:32] train/00002/eval_val/acc 0.0000
I1204 07:26:32.003987 140087498471168 hlog.py:18] train/00002{16.19s}
I1204 07:26:44.222516 140087498471168 hlog.py:32] train/00003/loss 0.5799
I1204 07:26:48.671242 140087498471168 hlog.py:32] train/00003/eval_train/acc 0.0500
I1204 07:26:49.487936 140087498471168 hlog.py:32] train/00003/eval_val/acc 0.0000
I1204 07:26:49.488431 140087498471168 hlog.py:18] train/00003{17.48s}
I1204 07:27:02.394639 140087498471168 hlog.py:32] train/00004/loss 0.4701
I1204 07:27:06.069241 140087498471168 hlog.py:32] train/00004/eval_train/acc 0.1570
I1204 07:27:06.646091 140087498471168 hlog.py:32] train/00004/eval_val/acc 0.0000
I1204 07:27:06.646586 140087498471168 hlog.py:18] train/00004{17.16s}
I1204 07:27:19.495288 140087498471168 hlog.py:32] train/00005/loss 0.3993
I1204 07:27:23.508344 140087498471168 hlog.py:32] train/00005/eval_train/acc 0.2210
I1204 07:27:24.019961 140087498471168 hlog.py:32] train/00005/eval_val/acc 0.0000
I1204 07:27:24.020459 140087498471168 hlog.py:18] train/00005{17.37s}
I1204 07:27:35.516032 140087498471168 hlog.py:32] train/00006/loss 0.3293
I1204 07:27:42.379220 140087498471168 hlog.py:32] train/00006/eval_train/acc 0.3040
I1204 07:27:43.446194 140087498471168 hlog.py:32] train/00006/eval_val/acc 0.0000
I1204 07:27:43.447026 140087498471168 hlog.py:18] train/00006{19.43s}
I1204 07:27:55.352302 140087498471168 hlog.py:32] train/00007/loss 0.2827
I1204 07:27:58.895872 140087498471168 hlog.py:32] train/00007/eval_train/acc 0.2900
I1204 07:27:59.489962 140087498471168 hlog.py:32] train/00007/eval_val/acc 0.0541
I1204 07:27:59.490756 140087498471168 hlog.py:18] train/00007{16.04s}
I1204 07:28:11.839221 140087498471168 hlog.py:32] train/00008/loss 0.2430
I1204 07:28:16.438284 140087498471168 hlog.py:32] train/00008/eval_train/acc 0.3820
I1204 07:28:17.012319 140087498471168 hlog.py:32] train/00008/eval_val/acc 0.1081
I1204 07:28:17.012844 140087498471168 hlog.py:18] train/00008{17.52s}
I1204 07:28:29.114709 140087498471168 hlog.py:32] train/00009/loss 0.2012
I1204 07:28:34.508451 140087498471168 hlog.py:32] train/00009/eval_train/acc 0.3900
I1204 07:28:35.293545 140087498471168 hlog.py:32] train/00009/eval_val/acc 0.1081
I1204 07:28:35.534325 140087498471168 hlog.py:18] train/00009{18.52s}
I1204 07:28:47.422585 140087498471168 hlog.py:32] train/00010/loss 0.1728
I1204 07:28:54.510664 140087498471168 hlog.py:32] train/00010/eval_train/acc 0.3690
I1204 07:28:55.516571 140087498471168 hlog.py:32] train/00010/eval_val/acc 0.1622
I1204 07:28:55.517119 140087498471168 hlog.py:18] train/00010{19.98s}
I1204 07:29:07.468778 140087498471168 hlog.py:32] train/00011/loss 0.1793
I1204 07:29:11.434352 140087498471168 hlog.py:32] train/00011/eval_train/acc 0.4810
I1204 07:29:12.226247 140087498471168 hlog.py:32] train/00011/eval_val/acc 0.2635
I1204 07:29:12.226760 140087498471168 hlog.py:18] train/00011{16.71s}
I1204 07:29:24.798983 140087498471168 hlog.py:32] train/00012/loss 0.1741
I1204 07:29:30.663824 140087498471168 hlog.py:32] train/00012/eval_train/acc 0.5410
I1204 07:29:31.257467 140087498471168 hlog.py:32] train/00012/eval_val/acc 0.2230
I1204 07:29:31.258106 140087498471168 hlog.py:18] train/00012{19.03s}
I1204 07:29:43.228278 140087498471168 hlog.py:32] train/00013/loss 0.1482
I1204 07:29:49.676950 140087498471168 hlog.py:32] train/00013/eval_train/acc 0.5110
I1204 07:29:50.558558 140087498471168 hlog.py:32] train/00013/eval_val/acc 0.2365
I1204 07:29:50.559011 140087498471168 hlog.py:18] train/00013{19.30s}
I1204 07:30:02.908534 140087498471168 hlog.py:32] train/00014/loss 0.1430
I1204 07:30:06.936977 140087498471168 hlog.py:32] train/00014/eval_train/acc 0.6010
I1204 07:30:07.500809 140087498471168 hlog.py:32] train/00014/eval_val/acc 0.2095
I1204 07:30:07.501343 140087498471168 hlog.py:18] train/00014{16.94s}
I1204 07:30:19.477049 140087498471168 hlog.py:32] train/00015/loss 0.1141
I1204 07:30:23.528679 140087498471168 hlog.py:32] train/00015/eval_train/acc 0.6400
I1204 07:30:24.375533 140087498471168 hlog.py:32] train/00015/eval_val/acc 0.2230
I1204 07:30:24.376019 140087498471168 hlog.py:18] train/00015{16.87s}
I1204 07:30:36.216517 140087498471168 hlog.py:32] train/00016/loss 0.1057
I1204 07:30:40.165841 140087498471168 hlog.py:32] train/00016/eval_train/acc 0.6870
I1204 07:30:40.761250 140087498471168 hlog.py:32] train/00016/eval_val/acc 0.2500
I1204 07:30:40.761829 140087498471168 hlog.py:18] train/00016{16.39s}
I1204 07:30:53.159893 140087498471168 hlog.py:32] train/00017/loss 0.1090
I1204 07:30:57.718108 140087498471168 hlog.py:32] train/00017/eval_train/acc 0.6760
I1204 07:30:58.351128 140087498471168 hlog.py:32] train/00017/eval_val/acc 0.3311
I1204 07:30:58.351705 140087498471168 hlog.py:18] train/00017{17.59s}
I1204 07:31:10.625792 140087498471168 hlog.py:32] train/00018/loss 0.0998
I1204 07:31:15.947778 140087498471168 hlog.py:32] train/00018/eval_train/acc 0.7160
I1204 07:31:16.525928 140087498471168 hlog.py:32] train/00018/eval_val/acc 0.3243
I1204 07:31:16.526480 140087498471168 hlog.py:18] train/00018{18.17s}
I1204 07:31:28.609927 140087498471168 hlog.py:32] train/00019/loss 0.0823
I1204 07:31:32.780730 140087498471168 hlog.py:32] train/00019/eval_train/acc 0.6930
I1204 07:31:33.428170 140087498471168 hlog.py:32] train/00019/eval_val/acc 0.3108
I1204 07:31:33.458468 140087498471168 hlog.py:18] train/00019{16.93s}
I1204 07:31:45.250601 140087498471168 hlog.py:32] train/00020/loss 0.0692
I1204 07:31:49.067527 140087498471168 hlog.py:32] train/00020/eval_train/acc 0.8030
I1204 07:31:49.663256 140087498471168 hlog.py:32] train/00020/eval_val/acc 0.3446
I1204 07:31:49.663750 140087498471168 hlog.py:18] train/00020{16.21s}
I1204 07:32:01.695506 140087498471168 hlog.py:32] train/00021/loss 0.0699
I1204 07:32:05.625662 140087498471168 hlog.py:32] train/00021/eval_train/acc 0.7880
I1204 07:32:06.216485 140087498471168 hlog.py:32] train/00021/eval_val/acc 0.3784
I1204 07:32:06.216973 140087498471168 hlog.py:18] train/00021{16.55s}
I1204 07:32:17.714920 140087498471168 hlog.py:32] train/00022/loss 0.0541
I1204 07:32:21.543456 140087498471168 hlog.py:32] train/00022/eval_train/acc 0.7880
I1204 07:32:22.161712 140087498471168 hlog.py:32] train/00022/eval_val/acc 0.4054
I1204 07:32:22.162240 140087498471168 hlog.py:18] train/00022{15.95s}
I1204 07:32:34.077800 140087498471168 hlog.py:32] train/00023/loss 0.0525
I1204 07:32:37.911978 140087498471168 hlog.py:32] train/00023/eval_train/acc 0.8100
I1204 07:32:38.509612 140087498471168 hlog.py:32] train/00023/eval_val/acc 0.4054
I1204 07:32:38.510292 140087498471168 hlog.py:18] train/00023{16.35s}
I1204 07:32:50.896149 140087498471168 hlog.py:32] train/00024/loss 0.0667
I1204 07:32:54.772116 140087498471168 hlog.py:32] train/00024/eval_train/acc 0.8500
I1204 07:32:55.353648 140087498471168 hlog.py:32] train/00024/eval_val/acc 0.4797
I1204 07:32:55.354144 140087498471168 hlog.py:18] train/00024{16.84s}
I1204 07:33:07.120806 140087498471168 hlog.py:32] train/00025/loss 0.0596
I1204 07:33:10.994095 140087498471168 hlog.py:32] train/00025/eval_train/acc 0.7750
I1204 07:33:11.597247 140087498471168 hlog.py:32] train/00025/eval_val/acc 0.4054
I1204 07:33:11.597739 140087498471168 hlog.py:18] train/00025{16.24s}
I1204 07:33:23.289307 140087498471168 hlog.py:32] train/00026/loss 0.0731
I1204 07:33:27.385199 140087498471168 hlog.py:32] train/00026/eval_train/acc 0.8040
I1204 07:33:28.047496 140087498471168 hlog.py:32] train/00026/eval_val/acc 0.3716
I1204 07:33:28.047975 140087498471168 hlog.py:18] train/00026{16.45s}
I1204 07:33:40.253862 140087498471168 hlog.py:32] train/00027/loss 0.0632
I1204 07:33:44.235865 140087498471168 hlog.py:32] train/00027/eval_train/acc 0.8060
I1204 07:33:44.868942 140087498471168 hlog.py:32] train/00027/eval_val/acc 0.4257
I1204 07:33:44.869425 140087498471168 hlog.py:18] train/00027{16.82s}
I1204 07:33:56.165077 140087498471168 hlog.py:32] train/00028/loss 0.0599
I1204 07:34:00.108140 140087498471168 hlog.py:32] train/00028/eval_train/acc 0.8820
I1204 07:34:00.712639 140087498471168 hlog.py:32] train/00028/eval_val/acc 0.4257
I1204 07:34:00.713240 140087498471168 hlog.py:18] train/00028{15.84s}
I1204 07:34:12.760101 140087498471168 hlog.py:32] train/00029/loss 0.0699
I1204 07:34:16.427925 140087498471168 hlog.py:32] train/00029/eval_train/acc 0.8530
I1204 07:34:16.968300 140087498471168 hlog.py:32] train/00029/eval_val/acc 0.4392
I1204 07:34:17.126376 140087498471168 hlog.py:18] train/00029{16.41s}
I1204 07:34:29.766106 140087498471168 hlog.py:32] train/00030/loss 0.0596
I1204 07:34:33.651846 140087498471168 hlog.py:32] train/00030/eval_train/acc 0.8670
I1204 07:34:34.262915 140087498471168 hlog.py:32] train/00030/eval_val/acc 0.4730
I1204 07:34:34.263448 140087498471168 hlog.py:18] train/00030{17.14s}
I1204 07:34:46.567380 140087498471168 hlog.py:32] train/00031/loss 0.0453
I1204 07:34:51.071669 140087498471168 hlog.py:32] train/00031/eval_train/acc 0.8600
I1204 07:34:51.686618 140087498471168 hlog.py:32] train/00031/eval_val/acc 0.4527
I1204 07:34:51.687245 140087498471168 hlog.py:18] train/00031{17.42s}
I1204 07:35:03.779902 140087498471168 hlog.py:32] train/00032/loss 0.0442
I1204 07:35:07.651155 140087498471168 hlog.py:32] train/00032/eval_train/acc 0.8560
I1204 07:35:08.377017 140087498471168 hlog.py:32] train/00032/eval_val/acc 0.4730
I1204 07:35:08.377516 140087498471168 hlog.py:18] train/00032{16.69s}
I1204 07:35:19.636217 140087498471168 hlog.py:32] train/00033/loss 0.0501
I1204 07:35:23.521846 140087498471168 hlog.py:32] train/00033/eval_train/acc 0.8740
I1204 07:35:24.163605 140087498471168 hlog.py:32] train/00033/eval_val/acc 0.4122
I1204 07:35:24.164105 140087498471168 hlog.py:18] train/00033{15.79s}
I1204 07:35:36.450063 140087498471168 hlog.py:32] train/00034/loss 0.0655
I1204 07:35:40.891238 140087498471168 hlog.py:32] train/00034/eval_train/acc 0.8890
I1204 07:35:41.493154 140087498471168 hlog.py:32] train/00034/eval_val/acc 0.4257
I1204 07:35:41.493623 140087498471168 hlog.py:18] train/00034{17.33s}
I1204 07:35:53.213307 140087498471168 hlog.py:32] train/00035/loss 0.0550
I1204 07:35:57.227652 140087498471168 hlog.py:32] train/00035/eval_train/acc 0.8550
I1204 07:35:57.858488 140087498471168 hlog.py:32] train/00035/eval_val/acc 0.4257
I1204 07:35:57.859065 140087498471168 hlog.py:18] train/00035{16.37s}
I1204 07:36:10.583729 140087498471168 hlog.py:32] train/00036/loss 0.0392
I1204 07:36:14.463542 140087498471168 hlog.py:32] train/00036/eval_train/acc 0.9310
I1204 07:36:15.070614 140087498471168 hlog.py:32] train/00036/eval_val/acc 0.4797
I1204 07:36:15.071095 140087498471168 hlog.py:18] train/00036{17.21s}
I1204 07:36:26.823128 140087498471168 hlog.py:32] train/00037/loss 0.0402
I1204 07:36:30.905381 140087498471168 hlog.py:32] train/00037/eval_train/acc 0.9490
I1204 07:36:31.451857 140087498471168 hlog.py:32] train/00037/eval_val/acc 0.4595
I1204 07:36:31.452324 140087498471168 hlog.py:18] train/00037{16.38s}
I1204 07:36:43.966050 140087498471168 hlog.py:32] train/00038/loss 0.0309
I1204 07:36:47.671526 140087498471168 hlog.py:32] train/00038/eval_train/acc 0.9640
I1204 07:36:48.224970 140087498471168 hlog.py:32] train/00038/eval_val/acc 0.4662
I1204 07:36:48.225510 140087498471168 hlog.py:18] train/00038{16.77s}
I1204 07:37:00.274807 140087498471168 hlog.py:32] train/00039/loss 0.0253
I1204 07:37:04.814321 140087498471168 hlog.py:32] train/00039/eval_train/acc 0.9570
I1204 07:37:05.384806 140087498471168 hlog.py:32] train/00039/eval_val/acc 0.4932
I1204 07:37:05.415452 140087498471168 hlog.py:18] train/00039{17.19s}
I1204 07:37:17.060643 140087498471168 hlog.py:32] train/00040/loss 0.0266
I1204 07:37:20.989953 140087498471168 hlog.py:32] train/00040/eval_train/acc 0.9480
I1204 07:37:21.598544 140087498471168 hlog.py:32] train/00040/eval_val/acc 0.4932
I1204 07:37:21.599193 140087498471168 hlog.py:18] train/00040{16.18s}
I1204 07:37:33.905886 140087498471168 hlog.py:32] train/00041/loss 0.0272
I1204 07:37:38.525565 140087498471168 hlog.py:32] train/00041/eval_train/acc 0.9570
I1204 07:37:39.119940 140087498471168 hlog.py:32] train/00041/eval_val/acc 0.5203
I1204 07:37:39.120585 140087498471168 hlog.py:18] train/00041{17.52s}
I1204 07:37:51.126410 140087498471168 hlog.py:32] train/00042/loss 0.0251
I1204 07:37:54.847812 140087498471168 hlog.py:32] train/00042/eval_train/acc 0.9550
I1204 07:37:55.407728 140087498471168 hlog.py:32] train/00042/eval_val/acc 0.4730
I1204 07:37:55.408201 140087498471168 hlog.py:18] train/00042{16.29s}
I1204 07:38:07.715202 140087498471168 hlog.py:32] train/00043/loss 0.0225
I1204 07:38:11.496570 140087498471168 hlog.py:32] train/00043/eval_train/acc 0.9760
I1204 07:38:12.040822 140087498471168 hlog.py:32] train/00043/eval_val/acc 0.4865
I1204 07:38:12.041299 140087498471168 hlog.py:18] train/00043{16.63s}
I1204 07:38:24.704083 140087498471168 hlog.py:32] train/00044/loss 0.0218
I1204 07:38:28.489940 140087498471168 hlog.py:32] train/00044/eval_train/acc 0.9590
I1204 07:38:29.069137 140087498471168 hlog.py:32] train/00044/eval_val/acc 0.4730
I1204 07:38:29.069650 140087498471168 hlog.py:18] train/00044{17.03s}
I1204 07:38:40.583374 140087498471168 hlog.py:32] train/00045/loss 0.0187
I1204 07:38:44.459035 140087498471168 hlog.py:32] train/00045/eval_train/acc 0.9640
I1204 07:38:45.023860 140087498471168 hlog.py:32] train/00045/eval_val/acc 0.4527
I1204 07:38:45.024481 140087498471168 hlog.py:18] train/00045{15.95s}
I1204 07:38:56.910571 140087498471168 hlog.py:32] train/00046/loss 0.0178
I1204 07:39:00.779304 140087498471168 hlog.py:32] train/00046/eval_train/acc 0.9740
I1204 07:39:01.346654 140087498471168 hlog.py:32] train/00046/eval_val/acc 0.4595
I1204 07:39:01.347141 140087498471168 hlog.py:18] train/00046{16.32s}
I1204 07:39:12.626542 140087498471168 hlog.py:32] train/00047/loss 0.0182
I1204 07:39:16.635140 140087498471168 hlog.py:32] train/00047/eval_train/acc 0.9950
I1204 07:39:17.210546 140087498471168 hlog.py:32] train/00047/eval_val/acc 0.5068
I1204 07:39:17.211044 140087498471168 hlog.py:18] train/00047{15.86s}
I1204 07:39:29.592738 140087498471168 hlog.py:32] train/00048/loss 0.0149
I1204 07:39:33.875256 140087498471168 hlog.py:32] train/00048/eval_train/acc 0.9770
I1204 07:39:34.480388 140087498471168 hlog.py:32] train/00048/eval_val/acc 0.4932
I1204 07:39:34.481050 140087498471168 hlog.py:18] train/00048{17.27s}
I1204 07:39:46.986737 140087498471168 hlog.py:32] train/00049/loss 0.0211
I1204 07:39:50.793904 140087498471168 hlog.py:32] train/00049/eval_train/acc 0.9710
I1204 07:39:51.394068 140087498471168 hlog.py:32] train/00049/eval_val/acc 0.4865
I1204 07:39:51.615895 140087498471168 hlog.py:18] train/00049{17.13s}
I1204 07:40:03.923567 140087498471168 hlog.py:32] train/00050/loss 0.0172
I1204 07:40:07.588709 140087498471168 hlog.py:32] train/00050/eval_train/acc 0.9910
I1204 07:40:08.160719 140087498471168 hlog.py:32] train/00050/eval_val/acc 0.4797
I1204 07:40:08.161185 140087498471168 hlog.py:18] train/00050{16.55s}
I1204 07:40:20.395508 140087498471168 hlog.py:32] train/00051/loss 0.0132
I1204 07:40:24.494900 140087498471168 hlog.py:32] train/00051/eval_train/acc 0.9810
I1204 07:40:25.046154 140087498471168 hlog.py:32] train/00051/eval_val/acc 0.4730
I1204 07:40:25.046646 140087498471168 hlog.py:18] train/00051{16.89s}
I1204 07:40:36.921544 140087498471168 hlog.py:32] train/00052/loss 0.0138
I1204 07:40:40.943044 140087498471168 hlog.py:32] train/00052/eval_train/acc 0.9850
I1204 07:40:41.496771 140087498471168 hlog.py:32] train/00052/eval_val/acc 0.4730
I1204 07:40:41.497314 140087498471168 hlog.py:18] train/00052{16.45s}
I1204 07:40:53.074424 140087498471168 hlog.py:32] train/00053/loss 0.0109
I1204 07:40:56.822245 140087498471168 hlog.py:32] train/00053/eval_train/acc 0.9900
I1204 07:40:57.381361 140087498471168 hlog.py:32] train/00053/eval_val/acc 0.4932
I1204 07:40:57.381839 140087498471168 hlog.py:18] train/00053{15.88s}
I1204 07:41:09.835957 140087498471168 hlog.py:32] train/00054/loss 0.0114
I1204 07:41:13.612429 140087498471168 hlog.py:32] train/00054/eval_train/acc 0.9950
I1204 07:41:14.149209 140087498471168 hlog.py:32] train/00054/eval_val/acc 0.5000
I1204 07:41:14.149686 140087498471168 hlog.py:18] train/00054{16.77s}
I1204 07:41:25.987005 140087498471168 hlog.py:32] train/00055/loss 0.0107
I1204 07:41:30.033204 140087498471168 hlog.py:32] train/00055/eval_train/acc 0.9950
I1204 07:41:30.603530 140087498471168 hlog.py:32] train/00055/eval_val/acc 0.4865
I1204 07:41:30.604176 140087498471168 hlog.py:18] train/00055{16.45s}
I1204 07:41:42.095473 140087498471168 hlog.py:32] train/00056/loss 0.0095
I1204 07:41:45.848706 140087498471168 hlog.py:32] train/00056/eval_train/acc 0.9950
I1204 07:41:46.424235 140087498471168 hlog.py:32] train/00056/eval_val/acc 0.5000
I1204 07:41:46.424731 140087498471168 hlog.py:18] train/00056{15.82s}
I1204 07:41:58.813050 140087498471168 hlog.py:32] train/00057/loss 0.0098
I1204 07:42:02.625685 140087498471168 hlog.py:32] train/00057/eval_train/acc 0.9890
I1204 07:42:03.183520 140087498471168 hlog.py:32] train/00057/eval_val/acc 0.5068
I1204 07:42:03.184014 140087498471168 hlog.py:18] train/00057{16.76s}
I1204 07:42:14.785747 140087498471168 hlog.py:32] train/00058/loss 0.0093
I1204 07:42:18.472208 140087498471168 hlog.py:32] train/00058/eval_train/acc 0.9940
I1204 07:42:19.033067 140087498471168 hlog.py:32] train/00058/eval_val/acc 0.4932
I1204 07:42:19.033533 140087498471168 hlog.py:18] train/00058{15.85s}
I1204 07:42:30.880304 140087498471168 hlog.py:32] train/00059/loss 0.0094
I1204 07:42:34.783317 140087498471168 hlog.py:32] train/00059/eval_train/acc 0.9940
I1204 07:42:35.355800 140087498471168 hlog.py:32] train/00059/eval_val/acc 0.5203
I1204 07:42:35.516376 140087498471168 hlog.py:18] train/00059{16.48s}
I1204 07:42:47.313694 140087498471168 hlog.py:32] train/00060/loss 0.0102
I1204 07:42:52.075983 140087498471168 hlog.py:32] train/00060/eval_train/acc 0.9940
I1204 07:42:52.635784 140087498471168 hlog.py:32] train/00060/eval_val/acc 0.5135
I1204 07:42:52.636296 140087498471168 hlog.py:18] train/00060{17.12s}
I1204 07:43:05.038734 140087498471168 hlog.py:32] train/00061/loss 0.0108
I1204 07:43:08.990329 140087498471168 hlog.py:32] train/00061/eval_train/acc 0.9960
I1204 07:43:09.556927 140087498471168 hlog.py:32] train/00061/eval_val/acc 0.5135
I1204 07:43:09.557618 140087498471168 hlog.py:18] train/00061{16.92s}
I1204 07:43:22.188899 140087498471168 hlog.py:32] train/00062/loss 0.0089
I1204 07:43:25.985163 140087498471168 hlog.py:32] train/00062/eval_train/acc 0.9930
I1204 07:43:26.551841 140087498471168 hlog.py:32] train/00062/eval_val/acc 0.5000
I1204 07:43:26.552315 140087498471168 hlog.py:18] train/00062{16.99s}
I1204 07:43:39.085945 140087498471168 hlog.py:32] train/00063/loss 0.0086
I1204 07:43:42.978941 140087498471168 hlog.py:32] train/00063/eval_train/acc 0.9930
I1204 07:43:43.555017 140087498471168 hlog.py:32] train/00063/eval_val/acc 0.5270
I1204 07:43:43.555535 140087498471168 hlog.py:18] train/00063{17.00s}
I1204 07:43:55.723412 140087498471168 hlog.py:32] train/00064/loss 0.0087
I1204 07:43:59.640280 140087498471168 hlog.py:32] train/00064/eval_train/acc 0.9940
I1204 07:44:00.225816 140087498471168 hlog.py:32] train/00064/eval_val/acc 0.4865
I1204 07:44:00.226369 140087498471168 hlog.py:18] train/00064{16.67s}
I1204 07:44:12.876506 140087498471168 hlog.py:32] train/00065/loss 0.0080
I1204 07:44:16.670179 140087498471168 hlog.py:32] train/00065/eval_train/acc 0.9950
I1204 07:44:17.237212 140087498471168 hlog.py:32] train/00065/eval_val/acc 0.5068
I1204 07:44:17.237633 140087498471168 hlog.py:18] train/00065{17.01s}
I1204 07:44:29.786580 140087498471168 hlog.py:32] train/00066/loss 0.0104
I1204 07:44:33.711830 140087498471168 hlog.py:32] train/00066/eval_train/acc 0.9950
I1204 07:44:34.304009 140087498471168 hlog.py:32] train/00066/eval_val/acc 0.5135
I1204 07:44:34.304481 140087498471168 hlog.py:18] train/00066{17.07s}
I1204 07:44:46.900549 140087498471168 hlog.py:32] train/00067/loss 0.0080
I1204 07:44:51.353993 140087498471168 hlog.py:32] train/00067/eval_train/acc 0.9920
I1204 07:44:51.899223 140087498471168 hlog.py:32] train/00067/eval_val/acc 0.5270
I1204 07:44:51.899772 140087498471168 hlog.py:18] train/00067{17.60s}
I1204 07:45:03.320094 140087498471168 hlog.py:32] train/00068/loss 0.0083
I1204 07:45:07.405324 140087498471168 hlog.py:32] train/00068/eval_train/acc 0.9880
I1204 07:45:07.955812 140087498471168 hlog.py:32] train/00068/eval_val/acc 0.4865
I1204 07:45:07.956277 140087498471168 hlog.py:18] train/00068{16.06s}
I1204 07:45:20.477012 140087498471168 hlog.py:32] train/00069/loss 0.0081
I1204 07:45:24.652318 140087498471168 hlog.py:32] train/00069/eval_train/acc 0.9930
I1204 07:45:25.225658 140087498471168 hlog.py:32] train/00069/eval_val/acc 0.5135
I1204 07:45:25.260072 140087498471168 hlog.py:18] train/00069{17.30s}
I1204 07:45:37.980358 140087498471168 hlog.py:32] train/00070/loss 0.0071
I1204 07:45:42.422254 140087498471168 hlog.py:32] train/00070/eval_train/acc 0.9970
I1204 07:45:43.001733 140087498471168 hlog.py:32] train/00070/eval_val/acc 0.5068
I1204 07:45:43.002420 140087498471168 hlog.py:18] train/00070{17.74s}
I1204 07:45:55.583980 140087498471168 hlog.py:32] train/00071/loss 0.0067
I1204 07:45:59.322968 140087498471168 hlog.py:32] train/00071/eval_train/acc 0.9990
I1204 07:45:59.889147 140087498471168 hlog.py:32] train/00071/eval_val/acc 0.4797
I1204 07:45:59.889659 140087498471168 hlog.py:18] train/00071{16.89s}
I1204 07:46:12.108419 140087498471168 hlog.py:32] train/00072/loss 0.0121
I1204 07:46:15.993988 140087498471168 hlog.py:32] train/00072/eval_train/acc 0.9950
I1204 07:46:16.548584 140087498471168 hlog.py:32] train/00072/eval_val/acc 0.4797
I1204 07:46:16.549069 140087498471168 hlog.py:18] train/00072{16.66s}
I1204 07:46:28.513049 140087498471168 hlog.py:32] train/00073/loss 0.0074
I1204 07:46:32.660751 140087498471168 hlog.py:32] train/00073/eval_train/acc 0.9970
I1204 07:46:33.244193 140087498471168 hlog.py:32] train/00073/eval_val/acc 0.5068
I1204 07:46:33.244642 140087498471168 hlog.py:18] train/00073{16.70s}
I1204 07:46:46.046053 140087498471168 hlog.py:32] train/00074/loss 0.0072
I1204 07:46:49.909441 140087498471168 hlog.py:32] train/00074/eval_train/acc 0.9930
I1204 07:46:50.478872 140087498471168 hlog.py:32] train/00074/eval_val/acc 0.5068
I1204 07:46:50.479427 140087498471168 hlog.py:18] train/00074{17.23s}
I1204 07:47:02.934790 140087498471168 hlog.py:32] train/00075/loss 0.0069
I1204 07:47:06.762131 140087498471168 hlog.py:32] train/00075/eval_train/acc 0.9960
I1204 07:47:07.366840 140087498471168 hlog.py:32] train/00075/eval_val/acc 0.4932
I1204 07:47:07.367313 140087498471168 hlog.py:18] train/00075{16.89s}
I1204 07:47:18.742868 140087498471168 hlog.py:32] train/00076/loss 0.0060
I1204 07:47:22.660419 140087498471168 hlog.py:32] train/00076/eval_train/acc 0.9950
I1204 07:47:23.211033 140087498471168 hlog.py:32] train/00076/eval_val/acc 0.5000
I1204 07:47:23.211525 140087498471168 hlog.py:18] train/00076{15.84s}
I1204 07:47:34.841492 140087498471168 hlog.py:32] train/00077/loss 0.0058
I1204 07:47:38.932522 140087498471168 hlog.py:32] train/00077/eval_train/acc 0.9990
I1204 07:47:39.510510 140087498471168 hlog.py:32] train/00077/eval_val/acc 0.5000
I1204 07:47:39.511038 140087498471168 hlog.py:18] train/00077{16.30s}
I1204 07:47:51.687237 140087498471168 hlog.py:32] train/00078/loss 0.0060
I1204 07:47:55.563568 140087498471168 hlog.py:32] train/00078/eval_train/acc 1.0000
I1204 07:47:56.147935 140087498471168 hlog.py:32] train/00078/eval_val/acc 0.5068
I1204 07:47:56.148445 140087498471168 hlog.py:18] train/00078{16.64s}
I1204 07:48:08.973574 140087498471168 hlog.py:32] train/00079/loss 0.0086
I1204 07:48:13.690261 140087498471168 hlog.py:32] train/00079/eval_train/acc 0.9920
I1204 07:48:14.251873 140087498471168 hlog.py:32] train/00079/eval_val/acc 0.5203
I1204 07:48:14.411755 140087498471168 hlog.py:18] train/00079{18.26s}
I1204 07:48:27.126202 140087498471168 hlog.py:32] train/00080/loss 0.0067
I1204 07:48:30.928054 140087498471168 hlog.py:32] train/00080/eval_train/acc 1.0000
I1204 07:48:31.492688 140087498471168 hlog.py:32] train/00080/eval_val/acc 0.5203
I1204 07:48:31.493128 140087498471168 hlog.py:18] train/00080{17.08s}
I1204 07:48:46.513174 140087498471168 hlog.py:32] train/00081/loss 0.0069
I1204 07:48:50.833962 140087498471168 hlog.py:32] train/00081/eval_train/acc 1.0000
I1204 07:48:51.387339 140087498471168 hlog.py:32] train/00081/eval_val/acc 0.5068
I1204 07:48:51.387868 140087498471168 hlog.py:18] train/00081{19.89s}
I1204 07:49:03.796722 140087498471168 hlog.py:32] train/00082/loss 0.0074
I1204 07:49:07.622622 140087498471168 hlog.py:32] train/00082/eval_train/acc 1.0000
I1204 07:49:08.194123 140087498471168 hlog.py:32] train/00082/eval_val/acc 0.5135
I1204 07:49:08.194667 140087498471168 hlog.py:18] train/00082{16.81s}
I1204 07:49:21.019651 140087498471168 hlog.py:32] train/00083/loss 0.0060
I1204 07:49:25.305608 140087498471168 hlog.py:32] train/00083/eval_train/acc 0.9960
I1204 07:49:25.883758 140087498471168 hlog.py:32] train/00083/eval_val/acc 0.5203
I1204 07:49:25.884266 140087498471168 hlog.py:18] train/00083{17.69s}
I1204 07:49:38.487969 140087498471168 hlog.py:32] train/00084/loss 0.0062
I1204 07:49:42.513367 140087498471168 hlog.py:32] train/00084/eval_train/acc 0.9970
I1204 07:49:43.119253 140087498471168 hlog.py:32] train/00084/eval_val/acc 0.5405
I1204 07:49:43.119803 140087498471168 hlog.py:18] train/00084{17.24s}
I1204 07:49:55.847083 140087498471168 hlog.py:32] train/00085/loss 0.0055
I1204 07:49:59.749775 140087498471168 hlog.py:32] train/00085/eval_train/acc 0.9980
I1204 07:50:00.314834 140087498471168 hlog.py:32] train/00085/eval_val/acc 0.5270
I1204 07:50:00.315315 140087498471168 hlog.py:18] train/00085{17.20s}
I1204 07:50:13.164994 140087498471168 hlog.py:32] train/00086/loss 0.0062
I1204 07:50:17.004295 140087498471168 hlog.py:32] train/00086/eval_train/acc 0.9990
I1204 07:50:17.540293 140087498471168 hlog.py:32] train/00086/eval_val/acc 0.5203
I1204 07:50:17.540797 140087498471168 hlog.py:18] train/00086{17.23s}
I1204 07:50:29.759302 140087498471168 hlog.py:32] train/00087/loss 0.0053
I1204 07:50:33.638709 140087498471168 hlog.py:32] train/00087/eval_train/acc 0.9980
I1204 07:50:34.212220 140087498471168 hlog.py:32] train/00087/eval_val/acc 0.5135
I1204 07:50:34.212890 140087498471168 hlog.py:18] train/00087{16.67s}
I1204 07:50:46.285629 140087498471168 hlog.py:32] train/00088/loss 0.0055
I1204 07:50:50.355501 140087498471168 hlog.py:32] train/00088/eval_train/acc 0.9980
I1204 07:50:50.889719 140087498471168 hlog.py:32] train/00088/eval_val/acc 0.5270
I1204 07:50:50.890197 140087498471168 hlog.py:18] train/00088{16.68s}
I1204 07:51:03.070674 140087498471168 hlog.py:32] train/00089/loss 0.0063
I1204 07:51:06.651957 140087498471168 hlog.py:32] train/00089/eval_train/acc 0.9990
I1204 07:51:07.189061 140087498471168 hlog.py:32] train/00089/eval_val/acc 0.5270
I1204 07:51:07.220259 140087498471168 hlog.py:18] train/00089{16.33s}
I1204 07:51:19.417980 140087498471168 hlog.py:32] train/00090/loss 0.0053
I1204 07:51:24.195105 140087498471168 hlog.py:32] train/00090/eval_train/acc 0.9950
I1204 07:51:24.741645 140087498471168 hlog.py:32] train/00090/eval_val/acc 0.5270
I1204 07:51:24.742101 140087498471168 hlog.py:18] train/00090{17.52s}
I1204 07:51:36.469106 140087498471168 hlog.py:32] train/00091/loss 0.0051
I1204 07:51:40.483239 140087498471168 hlog.py:32] train/00091/eval_train/acc 0.9950
I1204 07:51:41.043532 140087498471168 hlog.py:32] train/00091/eval_val/acc 0.5473
I1204 07:51:41.044031 140087498471168 hlog.py:18] train/00091{16.30s}
I1204 07:51:52.933774 140087498471168 hlog.py:32] train/00092/loss 0.0050
I1204 07:51:57.243133 140087498471168 hlog.py:32] train/00092/eval_train/acc 0.9980
I1204 07:51:57.817278 140087498471168 hlog.py:32] train/00092/eval_val/acc 0.5405
I1204 07:51:57.817806 140087498471168 hlog.py:18] train/00092{16.77s}
I1204 07:52:10.113672 140087498471168 hlog.py:32] train/00093/loss 0.0057
I1204 07:52:13.992424 140087498471168 hlog.py:32] train/00093/eval_train/acc 0.9950
I1204 07:52:14.571442 140087498471168 hlog.py:32] train/00093/eval_val/acc 0.5338
I1204 07:52:14.572009 140087498471168 hlog.py:18] train/00093{16.75s}
I1204 07:52:27.368983 140087498471168 hlog.py:32] train/00094/loss 0.0062
I1204 07:52:31.251469 140087498471168 hlog.py:32] train/00094/eval_train/acc 1.0000
I1204 07:52:31.837716 140087498471168 hlog.py:32] train/00094/eval_val/acc 0.5270
I1204 07:52:31.838505 140087498471168 hlog.py:18] train/00094{17.27s}
I1204 07:52:43.995962 140087498471168 hlog.py:32] train/00095/loss 0.0048
I1204 07:52:47.715819 140087498471168 hlog.py:32] train/00095/eval_train/acc 1.0000
I1204 07:52:48.269444 140087498471168 hlog.py:32] train/00095/eval_val/acc 0.5473
I1204 07:52:48.269934 140087498471168 hlog.py:18] train/00095{16.43s}
I1204 07:53:00.779528 140087498471168 hlog.py:32] train/00096/loss 0.0048
I1204 07:53:04.745883 140087498471168 hlog.py:32] train/00096/eval_train/acc 1.0000
I1204 07:53:05.336155 140087498471168 hlog.py:32] train/00096/eval_val/acc 0.5405
I1204 07:53:05.336669 140087498471168 hlog.py:18] train/00096{17.07s}
I1204 07:53:16.800402 140087498471168 hlog.py:32] train/00097/loss 0.0047
I1204 07:53:20.801856 140087498471168 hlog.py:32] train/00097/eval_train/acc 1.0000
I1204 07:53:21.360873 140087498471168 hlog.py:32] train/00097/eval_val/acc 0.5135
I1204 07:53:21.361456 140087498471168 hlog.py:18] train/00097{16.02s}
I1204 07:53:33.404155 140087498471168 hlog.py:32] train/00098/loss 0.0049
I1204 07:53:37.098378 140087498471168 hlog.py:32] train/00098/eval_train/acc 1.0000
I1204 07:53:37.664687 140087498471168 hlog.py:32] train/00098/eval_val/acc 0.5270
I1204 07:53:37.665187 140087498471168 hlog.py:18] train/00098{16.30s}
I1204 07:53:50.075989 140087498471168 hlog.py:32] train/00099/loss 0.0054
I1204 07:53:53.924174 140087498471168 hlog.py:32] train/00099/eval_train/acc 1.0000
I1204 07:53:54.480728 140087498471168 hlog.py:32] train/00099/eval_val/acc 0.5405
I1204 07:53:54.638399 140087498471168 hlog.py:18] train/00099{16.97s}
I1204 07:54:06.526123 140087498471168 hlog.py:32] train/00100/loss 0.0043
I1204 07:54:10.690697 140087498471168 hlog.py:32] train/00100/eval_train/acc 0.9960
I1204 07:54:11.281350 140087498471168 hlog.py:32] train/00100/eval_val/acc 0.5338
I1204 07:54:11.282208 140087498471168 hlog.py:18] train/00100{16.64s}
I1204 07:54:23.692563 140087498471168 hlog.py:32] train/00101/loss 0.0052
I1204 07:54:27.558040 140087498471168 hlog.py:32] train/00101/eval_train/acc 1.0000
I1204 07:54:28.142090 140087498471168 hlog.py:32] train/00101/eval_val/acc 0.5405
I1204 07:54:28.142594 140087498471168 hlog.py:18] train/00101{16.86s}
I1204 07:54:39.843924 140087498471168 hlog.py:32] train/00102/loss 0.0047
I1204 07:54:43.623552 140087498471168 hlog.py:32] train/00102/eval_train/acc 0.9980
I1204 07:54:44.208051 140087498471168 hlog.py:32] train/00102/eval_val/acc 0.5405
I1204 07:54:44.208498 140087498471168 hlog.py:18] train/00102{16.07s}
I1204 07:54:57.674876 140087498471168 hlog.py:32] train/00103/loss 0.0052
I1204 07:55:01.565148 140087498471168 hlog.py:32] train/00103/eval_train/acc 1.0000
I1204 07:55:02.131510 140087498471168 hlog.py:32] train/00103/eval_val/acc 0.5405
I1204 07:55:02.131999 140087498471168 hlog.py:18] train/00103{17.92s}
I1204 07:55:13.883975 140087498471168 hlog.py:32] train/00104/loss 0.0043
I1204 07:55:17.681758 140087498471168 hlog.py:32] train/00104/eval_train/acc 1.0000
I1204 07:55:18.246146 140087498471168 hlog.py:32] train/00104/eval_val/acc 0.5405
I1204 07:55:18.246680 140087498471168 hlog.py:18] train/00104{16.11s}
I1204 07:55:30.572831 140087498471168 hlog.py:32] train/00105/loss 0.0049
I1204 07:55:34.296934 140087498471168 hlog.py:32] train/00105/eval_train/acc 1.0000
I1204 07:55:34.886440 140087498471168 hlog.py:32] train/00105/eval_val/acc 0.5270
I1204 07:55:34.886940 140087498471168 hlog.py:18] train/00105{16.64s}
I1204 07:55:46.312545 140087498471168 hlog.py:32] train/00106/loss 0.0042
I1204 07:55:50.107644 140087498471168 hlog.py:32] train/00106/eval_train/acc 1.0000
I1204 07:55:50.659291 140087498471168 hlog.py:32] train/00106/eval_val/acc 0.5270
I1204 07:55:50.659757 140087498471168 hlog.py:18] train/00106{15.77s}
I1204 07:56:03.002478 140087498471168 hlog.py:32] train/00107/loss 0.0045
I1204 07:56:06.753923 140087498471168 hlog.py:32] train/00107/eval_train/acc 1.0000
I1204 07:56:07.322984 140087498471168 hlog.py:32] train/00107/eval_val/acc 0.5203
I1204 07:56:07.323502 140087498471168 hlog.py:18] train/00107{16.66s}
I1204 07:56:19.818280 140087498471168 hlog.py:32] train/00108/loss 0.0040
I1204 07:56:23.751086 140087498471168 hlog.py:32] train/00108/eval_train/acc 1.0000
I1204 07:56:24.325960 140087498471168 hlog.py:32] train/00108/eval_val/acc 0.5135
I1204 07:56:24.326459 140087498471168 hlog.py:18] train/00108{17.00s}
I1204 07:56:35.987648 140087498471168 hlog.py:32] train/00109/loss 0.0041
I1204 07:56:40.166140 140087498471168 hlog.py:32] train/00109/eval_train/acc 1.0000
I1204 07:56:40.731008 140087498471168 hlog.py:32] train/00109/eval_val/acc 0.5000
I1204 07:56:40.761959 140087498471168 hlog.py:18] train/00109{16.44s}
I1204 07:56:53.298516 140087498471168 hlog.py:32] train/00110/loss 0.0046
I1204 07:56:57.231582 140087498471168 hlog.py:32] train/00110/eval_train/acc 0.9990
I1204 07:56:57.808923 140087498471168 hlog.py:32] train/00110/eval_val/acc 0.5000
I1204 07:56:57.809432 140087498471168 hlog.py:18] train/00110{17.05s}
I1204 07:57:10.644376 140087498471168 hlog.py:32] train/00111/loss 0.0042
I1204 07:57:14.677343 140087498471168 hlog.py:32] train/00111/eval_train/acc 1.0000
I1204 07:57:15.263690 140087498471168 hlog.py:32] train/00111/eval_val/acc 0.4932
I1204 07:57:15.264176 140087498471168 hlog.py:18] train/00111{17.45s}
I1204 07:57:29.136778 140087498471168 hlog.py:32] train/00112/loss 0.0051
I1204 07:57:33.076607 140087498471168 hlog.py:32] train/00112/eval_train/acc 1.0000
I1204 07:57:33.657258 140087498471168 hlog.py:32] train/00112/eval_val/acc 0.5000
I1204 07:57:33.657756 140087498471168 hlog.py:18] train/00112{18.39s}
I1204 07:57:45.714329 140087498471168 hlog.py:32] train/00113/loss 0.0043
I1204 07:57:49.561437 140087498471168 hlog.py:32] train/00113/eval_train/acc 0.9990
I1204 07:57:50.140618 140087498471168 hlog.py:32] train/00113/eval_val/acc 0.5000
I1204 07:57:50.141120 140087498471168 hlog.py:18] train/00113{16.48s}
I1204 07:58:02.689330 140087498471168 hlog.py:32] train/00114/loss 0.0044
I1204 07:58:06.600229 140087498471168 hlog.py:32] train/00114/eval_train/acc 1.0000
I1204 07:58:07.241504 140087498471168 hlog.py:32] train/00114/eval_val/acc 0.4932
I1204 07:58:07.242149 140087498471168 hlog.py:18] train/00114{17.10s}
I1204 07:58:19.845223 140087498471168 hlog.py:32] train/00115/loss 0.0045
I1204 07:58:23.701400 140087498471168 hlog.py:32] train/00115/eval_train/acc 1.0000
I1204 07:58:24.299755 140087498471168 hlog.py:32] train/00115/eval_val/acc 0.5068
I1204 07:58:24.300283 140087498471168 hlog.py:18] train/00115{17.06s}
I1204 07:58:36.346130 140087498471168 hlog.py:32] train/00116/loss 0.0041
I1204 07:58:40.154328 140087498471168 hlog.py:32] train/00116/eval_train/acc 1.0000
I1204 07:58:40.732040 140087498471168 hlog.py:32] train/00116/eval_val/acc 0.5068
I1204 07:58:40.732653 140087498471168 hlog.py:18] train/00116{16.43s}
I1204 07:58:53.266339 140087498471168 hlog.py:32] train/00117/loss 0.0041
I1204 07:58:57.539617 140087498471168 hlog.py:32] train/00117/eval_train/acc 0.9980
I1204 07:58:58.102905 140087498471168 hlog.py:32] train/00117/eval_val/acc 0.5068
I1204 07:58:58.103420 140087498471168 hlog.py:18] train/00117{17.37s}
I1204 07:59:10.208641 140087498471168 hlog.py:32] train/00118/loss 0.0038
I1204 07:59:13.910781 140087498471168 hlog.py:32] train/00118/eval_train/acc 1.0000
I1204 07:59:14.503725 140087498471168 hlog.py:32] train/00118/eval_val/acc 0.5068
I1204 07:59:14.504290 140087498471168 hlog.py:18] train/00118{16.40s}
I1204 07:59:27.752959 140087498471168 hlog.py:32] train/00119/loss 0.0047
I1204 07:59:31.770323 140087498471168 hlog.py:32] train/00119/eval_train/acc 1.0000
I1204 07:59:32.371913 140087498471168 hlog.py:32] train/00119/eval_val/acc 0.5135
I1204 07:59:32.532509 140087498471168 hlog.py:18] train/00119{18.03s}
I1204 07:59:44.918154 140087498471168 hlog.py:32] train/00120/loss 0.0037
I1204 07:59:48.698496 140087498471168 hlog.py:32] train/00120/eval_train/acc 1.0000
I1204 07:59:49.277450 140087498471168 hlog.py:32] train/00120/eval_val/acc 0.5068
I1204 07:59:49.278012 140087498471168 hlog.py:18] train/00120{16.75s}
I1204 08:00:01.567182 140087498471168 hlog.py:32] train/00121/loss 0.0041
I1204 08:00:05.906070 140087498471168 hlog.py:32] train/00121/eval_train/acc 1.0000
I1204 08:00:06.503062 140087498471168 hlog.py:32] train/00121/eval_val/acc 0.5068
I1204 08:00:06.503696 140087498471168 hlog.py:18] train/00121{17.23s}
I1204 08:00:18.805967 140087498471168 hlog.py:32] train/00122/loss 0.0038
I1204 08:00:23.102999 140087498471168 hlog.py:32] train/00122/eval_train/acc 1.0000
I1204 08:00:23.676435 140087498471168 hlog.py:32] train/00122/eval_val/acc 0.5135
I1204 08:00:23.677155 140087498471168 hlog.py:18] train/00122{17.17s}
I1204 08:00:36.203319 140087498471168 hlog.py:32] train/00123/loss 0.0038
I1204 08:00:40.336548 140087498471168 hlog.py:32] train/00123/eval_train/acc 1.0000
I1204 08:00:40.918064 140087498471168 hlog.py:32] train/00123/eval_val/acc 0.5135
I1204 08:00:40.918574 140087498471168 hlog.py:18] train/00123{17.24s}
I1204 08:00:53.515570 140087498471168 hlog.py:32] train/00124/loss 0.0039
I1204 08:00:57.913572 140087498471168 hlog.py:32] train/00124/eval_train/acc 1.0000
I1204 08:00:58.483496 140087498471168 hlog.py:32] train/00124/eval_val/acc 0.5203
I1204 08:00:58.484159 140087498471168 hlog.py:18] train/00124{17.57s}
I1204 08:01:11.301516 140087498471168 hlog.py:32] train/00125/loss 0.0041
I1204 08:01:15.257556 140087498471168 hlog.py:32] train/00125/eval_train/acc 1.0000
I1204 08:01:15.849157 140087498471168 hlog.py:32] train/00125/eval_val/acc 0.5135
I1204 08:01:15.849710 140087498471168 hlog.py:18] train/00125{17.37s}
I1204 08:01:28.304082 140087498471168 hlog.py:32] train/00126/loss 0.0043
I1204 08:01:32.263638 140087498471168 hlog.py:32] train/00126/eval_train/acc 1.0000
I1204 08:01:32.842009 140087498471168 hlog.py:32] train/00126/eval_val/acc 0.5135
I1204 08:01:32.842541 140087498471168 hlog.py:18] train/00126{16.99s}
I1204 08:01:45.116099 140087498471168 hlog.py:32] train/00127/loss 0.0035
I1204 08:01:49.008462 140087498471168 hlog.py:32] train/00127/eval_train/acc 1.0000
I1204 08:01:49.575502 140087498471168 hlog.py:32] train/00127/eval_val/acc 0.5068
I1204 08:01:49.576116 140087498471168 hlog.py:18] train/00127{16.73s}
I1204 08:02:01.707669 140087498471168 hlog.py:32] train/00128/loss 0.0041
I1204 08:02:05.344593 140087498471168 hlog.py:32] train/00128/eval_train/acc 1.0000
I1204 08:02:05.947442 140087498471168 hlog.py:32] train/00128/eval_val/acc 0.5068
I1204 08:02:05.947986 140087498471168 hlog.py:18] train/00128{16.37s}
I1204 08:02:18.579213 140087498471168 hlog.py:32] train/00129/loss 0.0043
I1204 08:02:22.489779 140087498471168 hlog.py:32] train/00129/eval_train/acc 1.0000
I1204 08:02:23.059208 140087498471168 hlog.py:32] train/00129/eval_val/acc 0.5135
I1204 08:02:23.089789 140087498471168 hlog.py:18] train/00129{17.14s}
I1204 08:02:34.935055 140087498471168 hlog.py:32] train/00130/loss 0.0039
I1204 08:02:38.725996 140087498471168 hlog.py:32] train/00130/eval_train/acc 1.0000
I1204 08:02:39.294549 140087498471168 hlog.py:32] train/00130/eval_val/acc 0.5135
I1204 08:02:39.295023 140087498471168 hlog.py:18] train/00130{16.21s}
I1204 08:02:51.164091 140087498471168 hlog.py:32] train/00131/loss 0.0040
I1204 08:02:55.167915 140087498471168 hlog.py:32] train/00131/eval_train/acc 1.0000
I1204 08:02:55.734802 140087498471168 hlog.py:32] train/00131/eval_val/acc 0.5203
I1204 08:02:55.735304 140087498471168 hlog.py:18] train/00131{16.44s}
I1204 08:03:07.778355 140087498471168 hlog.py:32] train/00132/loss 0.0038
I1204 08:03:11.548342 140087498471168 hlog.py:32] train/00132/eval_train/acc 1.0000
I1204 08:03:12.116424 140087498471168 hlog.py:32] train/00132/eval_val/acc 0.5135
I1204 08:03:12.116896 140087498471168 hlog.py:18] train/00132{16.38s}
I1204 08:03:24.886759 140087498471168 hlog.py:32] train/00133/loss 0.0035
I1204 08:03:28.605714 140087498471168 hlog.py:32] train/00133/eval_train/acc 1.0000
I1204 08:03:29.157672 140087498471168 hlog.py:32] train/00133/eval_val/acc 0.5135
I1204 08:03:29.158162 140087498471168 hlog.py:18] train/00133{17.04s}
I1204 08:03:42.577371 140087498471168 hlog.py:32] train/00134/loss 0.0040
I1204 08:03:46.552911 140087498471168 hlog.py:32] train/00134/eval_train/acc 1.0000
I1204 08:03:47.132189 140087498471168 hlog.py:32] train/00134/eval_val/acc 0.5135
I1204 08:03:47.132684 140087498471168 hlog.py:18] train/00134{17.97s}
I1204 08:03:59.602942 140087498471168 hlog.py:32] train/00135/loss 0.0033
I1204 08:04:03.686430 140087498471168 hlog.py:32] train/00135/eval_train/acc 1.0000
I1204 08:04:04.273372 140087498471168 hlog.py:32] train/00135/eval_val/acc 0.5135
I1204 08:04:04.274116 140087498471168 hlog.py:18] train/00135{17.14s}
I1204 08:04:17.017712 140087498471168 hlog.py:32] train/00136/loss 0.0035
I1204 08:04:20.700557 140087498471168 hlog.py:32] train/00136/eval_train/acc 1.0000
I1204 08:04:21.252761 140087498471168 hlog.py:32] train/00136/eval_val/acc 0.5135
I1204 08:04:21.253233 140087498471168 hlog.py:18] train/00136{16.98s}
I1204 08:04:33.413401 140087498471168 hlog.py:32] train/00137/loss 0.0037
I1204 08:04:37.480522 140087498471168 hlog.py:32] train/00137/eval_train/acc 1.0000
I1204 08:04:38.063247 140087498471168 hlog.py:32] train/00137/eval_val/acc 0.5135
I1204 08:04:38.063902 140087498471168 hlog.py:18] train/00137{16.81s}
I1204 08:04:49.742068 140087498471168 hlog.py:32] train/00138/loss 0.0035
I1204 08:04:53.542722 140087498471168 hlog.py:32] train/00138/eval_train/acc 1.0000
I1204 08:04:54.116926 140087498471168 hlog.py:32] train/00138/eval_val/acc 0.5068
I1204 08:04:54.117402 140087498471168 hlog.py:18] train/00138{16.05s}
I1204 08:05:06.550329 140087498471168 hlog.py:32] train/00139/loss 0.0035
I1204 08:05:10.142539 140087498471168 hlog.py:32] train/00139/eval_train/acc 1.0000
I1204 08:05:10.697060 140087498471168 hlog.py:32] train/00139/eval_val/acc 0.5135
I1204 08:05:10.729881 140087498471168 hlog.py:18] train/00139{16.61s}
I1204 08:05:23.148681 140087498471168 hlog.py:32] train/00140/loss 0.0037
I1204 08:05:26.833289 140087498471168 hlog.py:32] train/00140/eval_train/acc 1.0000
I1204 08:05:27.401651 140087498471168 hlog.py:32] train/00140/eval_val/acc 0.5068
I1204 08:05:27.402128 140087498471168 hlog.py:18] train/00140{16.67s}
I1204 08:05:39.202034 140087498471168 hlog.py:32] train/00141/loss 0.0034
I1204 08:05:43.313254 140087498471168 hlog.py:32] train/00141/eval_train/acc 1.0000
I1204 08:05:43.907018 140087498471168 hlog.py:32] train/00141/eval_val/acc 0.5135
I1204 08:05:43.907454 140087498471168 hlog.py:18] train/00141{16.51s}
I1204 08:05:56.143041 140087498471168 hlog.py:32] train/00142/loss 0.0031
I1204 08:06:00.222958 140087498471168 hlog.py:32] train/00142/eval_train/acc 1.0000
I1204 08:06:00.817634 140087498471168 hlog.py:32] train/00142/eval_val/acc 0.5135
I1204 08:06:00.818286 140087498471168 hlog.py:18] train/00142{16.91s}
I1204 08:06:13.192229 140087498471168 hlog.py:32] train/00143/loss 0.0039
I1204 08:06:16.830169 140087498471168 hlog.py:32] train/00143/eval_train/acc 1.0000
I1204 08:06:17.396802 140087498471168 hlog.py:32] train/00143/eval_val/acc 0.5135
I1204 08:06:17.397273 140087498471168 hlog.py:18] train/00143{16.58s}
I1204 08:06:29.702765 140087498471168 hlog.py:32] train/00144/loss 0.0039
I1204 08:06:33.547753 140087498471168 hlog.py:32] train/00144/eval_train/acc 1.0000
I1204 08:06:34.139169 140087498471168 hlog.py:32] train/00144/eval_val/acc 0.5203
I1204 08:06:34.139681 140087498471168 hlog.py:18] train/00144{16.74s}
I1204 08:06:45.967813 140087498471168 hlog.py:32] train/00145/loss 0.0034
I1204 08:06:49.843169 140087498471168 hlog.py:32] train/00145/eval_train/acc 1.0000
I1204 08:06:50.429100 140087498471168 hlog.py:32] train/00145/eval_val/acc 0.5203
I1204 08:06:50.429611 140087498471168 hlog.py:18] train/00145{16.29s}
I1204 08:07:02.499228 140087498471168 hlog.py:32] train/00146/loss 0.0037
I1204 08:07:06.358925 140087498471168 hlog.py:32] train/00146/eval_train/acc 1.0000
I1204 08:07:06.924596 140087498471168 hlog.py:32] train/00146/eval_val/acc 0.5203
I1204 08:07:06.925204 140087498471168 hlog.py:18] train/00146{16.50s}
I1204 08:07:19.866696 140087498471168 hlog.py:32] train/00147/loss 0.0038
I1204 08:07:23.681294 140087498471168 hlog.py:32] train/00147/eval_train/acc 1.0000
I1204 08:07:24.234963 140087498471168 hlog.py:32] train/00147/eval_val/acc 0.5203
I1204 08:07:24.235463 140087498471168 hlog.py:18] train/00147{17.31s}
I1204 08:07:36.553954 140087498471168 hlog.py:32] train/00148/loss 0.0035
I1204 08:07:40.256747 140087498471168 hlog.py:32] train/00148/eval_train/acc 1.0000
I1204 08:07:40.808675 140087498471168 hlog.py:32] train/00148/eval_val/acc 0.5203
I1204 08:07:40.809212 140087498471168 hlog.py:18] train/00148{16.57s}
I1204 08:07:52.941516 140087498471168 hlog.py:32] train/00149/loss 0.0037
I1204 08:07:57.007773 140087498471168 hlog.py:32] train/00149/eval_train/acc 1.0000
I1204 08:07:57.217129 140087498471168 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1204 08:07:57.217365 140087498471168 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.217469 140087498471168 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.217554 140087498471168 hlog.py:32] train/00149/eval_val/0/corr True
I1204 08:07:57.217631 140087498471168 hlog.py:32] train/00149/eval_val/0 
I1204 08:07:57.217715 140087498471168 hlog.py:18] train/00149/eval_val/0{0.00s}
I1204 08:07:57.217810 140087498471168 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1204 08:07:57.217908 140087498471168 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 08:07:57.217999 140087498471168 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.218101 140087498471168 hlog.py:32] train/00149/eval_val/1/corr False
I1204 08:07:57.218178 140087498471168 hlog.py:32] train/00149/eval_val/1 
I1204 08:07:57.218251 140087498471168 hlog.py:18] train/00149/eval_val/1{0.00s}
I1204 08:07:57.218340 140087498471168 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1204 08:07:57.218435 140087498471168 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( massachusetts , _ ) ) ) )
I1204 08:07:57.218525 140087498471168 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1204 08:07:57.218603 140087498471168 hlog.py:32] train/00149/eval_val/2/corr False
I1204 08:07:57.218676 140087498471168 hlog.py:32] train/00149/eval_val/2 
I1204 08:07:57.218748 140087498471168 hlog.py:18] train/00149/eval_val/2{0.00s}
I1204 08:07:57.218836 140087498471168 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1204 08:07:57.218931 140087498471168 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 08:07:57.219021 140087498471168 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:07:57.219099 140087498471168 hlog.py:32] train/00149/eval_val/3/corr False
I1204 08:07:57.219171 140087498471168 hlog.py:32] train/00149/eval_val/3 
I1204 08:07:57.219243 140087498471168 hlog.py:18] train/00149/eval_val/3{0.00s}
I1204 08:07:57.219330 140087498471168 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1204 08:07:57.219447 140087498471168 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1204 08:07:57.219539 140087498471168 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1204 08:07:57.219618 140087498471168 hlog.py:32] train/00149/eval_val/4/corr False
I1204 08:07:57.219690 140087498471168 hlog.py:32] train/00149/eval_val/4 
I1204 08:07:57.219761 140087498471168 hlog.py:18] train/00149/eval_val/4{0.00s}
I1204 08:07:57.219847 140087498471168 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1204 08:07:57.219942 140087498471168 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 08:07:57.220031 140087498471168 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.220109 140087498471168 hlog.py:32] train/00149/eval_val/5/corr False
I1204 08:07:57.220182 140087498471168 hlog.py:32] train/00149/eval_val/5 
I1204 08:07:57.220253 140087498471168 hlog.py:18] train/00149/eval_val/5{0.00s}
I1204 08:07:57.220340 140087498471168 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1204 08:07:57.220449 140087498471168 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 08:07:57.220539 140087498471168 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.220617 140087498471168 hlog.py:32] train/00149/eval_val/6/corr False
I1204 08:07:57.220690 140087498471168 hlog.py:32] train/00149/eval_val/6 
I1204 08:07:57.220760 140087498471168 hlog.py:18] train/00149/eval_val/6{0.00s}
I1204 08:07:57.220846 140087498471168 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1204 08:07:57.220940 140087498471168 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 08:07:57.221029 140087498471168 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.221107 140087498471168 hlog.py:32] train/00149/eval_val/7/corr False
I1204 08:07:57.221178 140087498471168 hlog.py:32] train/00149/eval_val/7 
I1204 08:07:57.221249 140087498471168 hlog.py:18] train/00149/eval_val/7{0.00s}
I1204 08:07:57.221337 140087498471168 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1204 08:07:57.221431 140087498471168 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 08:07:57.221519 140087498471168 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 08:07:57.221596 140087498471168 hlog.py:32] train/00149/eval_val/8/corr False
I1204 08:07:57.221669 140087498471168 hlog.py:32] train/00149/eval_val/8 
I1204 08:07:57.221740 140087498471168 hlog.py:18] train/00149/eval_val/8{0.00s}
I1204 08:07:57.221827 140087498471168 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1204 08:07:57.221921 140087498471168 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 08:07:57.222010 140087498471168 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 08:07:57.222087 140087498471168 hlog.py:32] train/00149/eval_val/9/corr False
I1204 08:07:57.222159 140087498471168 hlog.py:32] train/00149/eval_val/9 
I1204 08:07:57.222229 140087498471168 hlog.py:18] train/00149/eval_val/9{0.00s}
I1204 08:07:57.222316 140087498471168 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1204 08:07:57.222410 140087498471168 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 08:07:57.222499 140087498471168 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.222576 140087498471168 hlog.py:32] train/00149/eval_val/10/corr False
I1204 08:07:57.222648 140087498471168 hlog.py:32] train/00149/eval_val/10 
I1204 08:07:57.222719 140087498471168 hlog.py:18] train/00149/eval_val/10{0.00s}
I1204 08:07:57.222815 140087498471168 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1204 08:07:57.222918 140087498471168 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:07:57.223013 140087498471168 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:07:57.223091 140087498471168 hlog.py:32] train/00149/eval_val/11/corr True
I1204 08:07:57.223163 140087498471168 hlog.py:32] train/00149/eval_val/11 
I1204 08:07:57.223234 140087498471168 hlog.py:18] train/00149/eval_val/11{0.00s}
I1204 08:07:57.223329 140087498471168 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1204 08:07:57.223438 140087498471168 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 08:07:57.223540 140087498471168 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1204 08:07:57.223619 140087498471168 hlog.py:32] train/00149/eval_val/12/corr True
I1204 08:07:57.223692 140087498471168 hlog.py:32] train/00149/eval_val/12 
I1204 08:07:57.223762 140087498471168 hlog.py:18] train/00149/eval_val/12{0.00s}
I1204 08:07:57.223857 140087498471168 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1204 08:07:57.223959 140087498471168 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 08:07:57.224052 140087498471168 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1204 08:07:57.224131 140087498471168 hlog.py:32] train/00149/eval_val/13/corr True
I1204 08:07:57.224203 140087498471168 hlog.py:32] train/00149/eval_val/13 
I1204 08:07:57.224274 140087498471168 hlog.py:18] train/00149/eval_val/13{0.00s}
I1204 08:07:57.224369 140087498471168 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1204 08:07:57.224470 140087498471168 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 08:07:57.224564 140087498471168 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1204 08:07:57.224641 140087498471168 hlog.py:32] train/00149/eval_val/14/corr True
I1204 08:07:57.224713 140087498471168 hlog.py:32] train/00149/eval_val/14 
I1204 08:07:57.224784 140087498471168 hlog.py:18] train/00149/eval_val/14{0.00s}
I1204 08:07:57.224879 140087498471168 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1204 08:07:57.224982 140087498471168 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 08:07:57.225075 140087498471168 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1204 08:07:57.225154 140087498471168 hlog.py:32] train/00149/eval_val/15/corr True
I1204 08:07:57.225225 140087498471168 hlog.py:32] train/00149/eval_val/15 
I1204 08:07:57.225296 140087498471168 hlog.py:18] train/00149/eval_val/15{0.00s}
I1204 08:07:57.225391 140087498471168 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1204 08:07:57.225493 140087498471168 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:07:57.225587 140087498471168 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1204 08:07:57.225665 140087498471168 hlog.py:32] train/00149/eval_val/16/corr True
I1204 08:07:57.225737 140087498471168 hlog.py:32] train/00149/eval_val/16 
I1204 08:07:57.225808 140087498471168 hlog.py:18] train/00149/eval_val/16{0.00s}
I1204 08:07:57.225895 140087498471168 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1204 08:07:57.225993 140087498471168 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1204 08:07:57.226089 140087498471168 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1204 08:07:57.226172 140087498471168 hlog.py:32] train/00149/eval_val/17/corr False
I1204 08:07:57.226245 140087498471168 hlog.py:32] train/00149/eval_val/17 
I1204 08:07:57.226316 140087498471168 hlog.py:18] train/00149/eval_val/17{0.00s}
I1204 08:07:57.226404 140087498471168 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1204 08:07:57.226502 140087498471168 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1204 08:07:57.226597 140087498471168 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1204 08:07:57.226676 140087498471168 hlog.py:32] train/00149/eval_val/18/corr False
I1204 08:07:57.226748 140087498471168 hlog.py:32] train/00149/eval_val/18 
I1204 08:07:57.226819 140087498471168 hlog.py:18] train/00149/eval_val/18{0.00s}
I1204 08:07:57.226906 140087498471168 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1204 08:07:57.227004 140087498471168 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:07:57.227099 140087498471168 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1204 08:07:57.227178 140087498471168 hlog.py:32] train/00149/eval_val/19/corr False
I1204 08:07:57.227250 140087498471168 hlog.py:32] train/00149/eval_val/19 
I1204 08:07:57.227321 140087498471168 hlog.py:18] train/00149/eval_val/19{0.00s}
I1204 08:07:57.227415 140087498471168 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1204 08:07:57.227516 140087498471168 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1204 08:07:57.227611 140087498471168 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1204 08:07:57.227689 140087498471168 hlog.py:32] train/00149/eval_val/20/corr False
I1204 08:07:57.227761 140087498471168 hlog.py:32] train/00149/eval_val/20 
I1204 08:07:57.227832 140087498471168 hlog.py:18] train/00149/eval_val/20{0.00s}
I1204 08:07:57.227926 140087498471168 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1204 08:07:57.228029 140087498471168 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 08:07:57.228123 140087498471168 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1204 08:07:57.228201 140087498471168 hlog.py:32] train/00149/eval_val/21/corr True
I1204 08:07:57.228273 140087498471168 hlog.py:32] train/00149/eval_val/21 
I1204 08:07:57.228344 140087498471168 hlog.py:18] train/00149/eval_val/21{0.00s}
I1204 08:07:57.228433 140087498471168 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1204 08:07:57.228528 140087498471168 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1204 08:07:57.228617 140087498471168 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1204 08:07:57.228695 140087498471168 hlog.py:32] train/00149/eval_val/22/corr False
I1204 08:07:57.228767 140087498471168 hlog.py:32] train/00149/eval_val/22 
I1204 08:07:57.228838 140087498471168 hlog.py:18] train/00149/eval_val/22{0.00s}
I1204 08:07:57.228927 140087498471168 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1204 08:07:57.229020 140087498471168 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:07:57.229120 140087498471168 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:07:57.229199 140087498471168 hlog.py:32] train/00149/eval_val/23/corr False
I1204 08:07:57.229271 140087498471168 hlog.py:32] train/00149/eval_val/23 
I1204 08:07:57.229342 140087498471168 hlog.py:18] train/00149/eval_val/23{0.00s}
I1204 08:07:57.229428 140087498471168 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1204 08:07:57.229527 140087498471168 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _const ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _const ( B , _cityid ( mississippi , _ ) ) ) )
I1204 08:07:57.229616 140087498471168 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1204 08:07:57.229693 140087498471168 hlog.py:32] train/00149/eval_val/24/corr False
I1204 08:07:57.229766 140087498471168 hlog.py:32] train/00149/eval_val/24 
I1204 08:07:57.229836 140087498471168 hlog.py:18] train/00149/eval_val/24{0.00s}
I1204 08:07:57.229929 140087498471168 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1204 08:07:57.230025 140087498471168 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:07:57.230116 140087498471168 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:07:57.230194 140087498471168 hlog.py:32] train/00149/eval_val/25/corr True
I1204 08:07:57.230266 140087498471168 hlog.py:32] train/00149/eval_val/25 
I1204 08:07:57.230337 140087498471168 hlog.py:18] train/00149/eval_val/25{0.00s}
I1204 08:07:57.230428 140087498471168 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1204 08:07:57.230524 140087498471168 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 08:07:57.230613 140087498471168 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1204 08:07:57.230691 140087498471168 hlog.py:32] train/00149/eval_val/26/corr True
I1204 08:07:57.230763 140087498471168 hlog.py:32] train/00149/eval_val/26 
I1204 08:07:57.230834 140087498471168 hlog.py:18] train/00149/eval_val/26{0.00s}
I1204 08:07:57.230921 140087498471168 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1204 08:07:57.231026 140087498471168 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) )
I1204 08:07:57.231117 140087498471168 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:07:57.231195 140087498471168 hlog.py:32] train/00149/eval_val/27/corr False
I1204 08:07:57.231267 140087498471168 hlog.py:32] train/00149/eval_val/27 
I1204 08:07:57.231338 140087498471168 hlog.py:18] train/00149/eval_val/27{0.00s}
I1204 08:07:57.231438 140087498471168 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1204 08:07:57.231536 140087498471168 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:07:57.231626 140087498471168 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:07:57.231704 140087498471168 hlog.py:32] train/00149/eval_val/28/corr True
I1204 08:07:57.231776 140087498471168 hlog.py:32] train/00149/eval_val/28 
I1204 08:07:57.231847 140087498471168 hlog.py:18] train/00149/eval_val/28{0.00s}
I1204 08:07:57.231939 140087498471168 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1204 08:07:57.232041 140087498471168 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 08:07:57.232131 140087498471168 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1204 08:07:57.232208 140087498471168 hlog.py:32] train/00149/eval_val/29/corr True
I1204 08:07:57.232280 140087498471168 hlog.py:32] train/00149/eval_val/29 
I1204 08:07:57.232351 140087498471168 hlog.py:18] train/00149/eval_val/29{0.00s}
I1204 08:07:57.232440 140087498471168 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1204 08:07:57.232537 140087498471168 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 08:07:57.232628 140087498471168 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1204 08:07:57.232706 140087498471168 hlog.py:32] train/00149/eval_val/30/corr False
I1204 08:07:57.232778 140087498471168 hlog.py:32] train/00149/eval_val/30 
I1204 08:07:57.232849 140087498471168 hlog.py:18] train/00149/eval_val/30{0.00s}
I1204 08:07:57.232940 140087498471168 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1204 08:07:57.233035 140087498471168 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 08:07:57.233124 140087498471168 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1204 08:07:57.233202 140087498471168 hlog.py:32] train/00149/eval_val/31/corr True
I1204 08:07:57.233274 140087498471168 hlog.py:32] train/00149/eval_val/31 
I1204 08:07:57.233344 140087498471168 hlog.py:18] train/00149/eval_val/31{0.00s}
I1204 08:07:57.233436 140087498471168 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1204 08:07:57.233532 140087498471168 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 08:07:57.233623 140087498471168 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1204 08:07:57.233700 140087498471168 hlog.py:32] train/00149/eval_val/32/corr True
I1204 08:07:57.233772 140087498471168 hlog.py:32] train/00149/eval_val/32 
I1204 08:07:57.233842 140087498471168 hlog.py:18] train/00149/eval_val/32{0.00s}
I1204 08:07:57.233935 140087498471168 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1204 08:07:57.234031 140087498471168 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:07:57.234120 140087498471168 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1204 08:07:57.234198 140087498471168 hlog.py:32] train/00149/eval_val/33/corr True
I1204 08:07:57.234271 140087498471168 hlog.py:32] train/00149/eval_val/33 
I1204 08:07:57.234341 140087498471168 hlog.py:18] train/00149/eval_val/33{0.00s}
I1204 08:07:57.234434 140087498471168 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1204 08:07:57.234529 140087498471168 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:07:57.234620 140087498471168 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1204 08:07:57.234698 140087498471168 hlog.py:32] train/00149/eval_val/34/corr True
I1204 08:07:57.234770 140087498471168 hlog.py:32] train/00149/eval_val/34 
I1204 08:07:57.234841 140087498471168 hlog.py:18] train/00149/eval_val/34{0.00s}
I1204 08:07:57.234935 140087498471168 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1204 08:07:57.235034 140087498471168 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.235131 140087498471168 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.235210 140087498471168 hlog.py:32] train/00149/eval_val/35/corr True
I1204 08:07:57.235282 140087498471168 hlog.py:32] train/00149/eval_val/35 
I1204 08:07:57.235352 140087498471168 hlog.py:18] train/00149/eval_val/35{0.00s}
I1204 08:07:57.235453 140087498471168 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1204 08:07:57.235554 140087498471168 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.235646 140087498471168 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.235724 140087498471168 hlog.py:32] train/00149/eval_val/36/corr True
I1204 08:07:57.235796 140087498471168 hlog.py:32] train/00149/eval_val/36 
I1204 08:07:57.235867 140087498471168 hlog.py:18] train/00149/eval_val/36{0.00s}
I1204 08:07:57.235960 140087498471168 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1204 08:07:57.236059 140087498471168 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.236151 140087498471168 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.236228 140087498471168 hlog.py:32] train/00149/eval_val/37/corr True
I1204 08:07:57.236300 140087498471168 hlog.py:32] train/00149/eval_val/37 
I1204 08:07:57.236371 140087498471168 hlog.py:18] train/00149/eval_val/37{0.00s}
I1204 08:07:57.236464 140087498471168 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1204 08:07:57.236562 140087498471168 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.236654 140087498471168 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.236732 140087498471168 hlog.py:32] train/00149/eval_val/38/corr True
I1204 08:07:57.236805 140087498471168 hlog.py:32] train/00149/eval_val/38 
I1204 08:07:57.236876 140087498471168 hlog.py:18] train/00149/eval_val/38{0.00s}
I1204 08:07:57.236969 140087498471168 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1204 08:07:57.237067 140087498471168 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.237159 140087498471168 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1204 08:07:57.237237 140087498471168 hlog.py:32] train/00149/eval_val/39/corr True
I1204 08:07:57.237309 140087498471168 hlog.py:32] train/00149/eval_val/39 
I1204 08:07:57.237379 140087498471168 hlog.py:18] train/00149/eval_val/39{0.00s}
I1204 08:07:57.237465 140087498471168 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1204 08:07:57.237555 140087498471168 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , _state ( B ) , A ) )
I1204 08:07:57.237645 140087498471168 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 08:07:57.237723 140087498471168 hlog.py:32] train/00149/eval_val/40/corr False
I1204 08:07:57.237795 140087498471168 hlog.py:32] train/00149/eval_val/40 
I1204 08:07:57.237866 140087498471168 hlog.py:18] train/00149/eval_val/40{0.00s}
I1204 08:07:57.237952 140087498471168 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1204 08:07:57.238059 140087498471168 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1204 08:07:57.238149 140087498471168 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1204 08:07:57.238227 140087498471168 hlog.py:32] train/00149/eval_val/41/corr False
I1204 08:07:57.238299 140087498471168 hlog.py:32] train/00149/eval_val/41 
I1204 08:07:57.238370 140087498471168 hlog.py:18] train/00149/eval_val/41{0.00s}
I1204 08:07:57.238456 140087498471168 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1204 08:07:57.238546 140087498471168 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , _state ( B ) , A ) )
I1204 08:07:57.238635 140087498471168 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1204 08:07:57.238728 140087498471168 hlog.py:32] train/00149/eval_val/42/corr False
I1204 08:07:57.238803 140087498471168 hlog.py:32] train/00149/eval_val/42 
I1204 08:07:57.238876 140087498471168 hlog.py:18] train/00149/eval_val/42{0.00s}
I1204 08:07:57.238966 140087498471168 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1204 08:07:57.239087 140087498471168 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1204 08:07:57.239184 140087498471168 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1204 08:07:57.239262 140087498471168 hlog.py:32] train/00149/eval_val/43/corr False
I1204 08:07:57.239334 140087498471168 hlog.py:32] train/00149/eval_val/43 
I1204 08:07:57.239411 140087498471168 hlog.py:18] train/00149/eval_val/43{0.00s}
I1204 08:07:57.239510 140087498471168 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1204 08:07:57.239614 140087498471168 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 08:07:57.239709 140087498471168 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1204 08:07:57.239787 140087498471168 hlog.py:32] train/00149/eval_val/44/corr True
I1204 08:07:57.239859 140087498471168 hlog.py:32] train/00149/eval_val/44 
I1204 08:07:57.239929 140087498471168 hlog.py:18] train/00149/eval_val/44{0.00s}
I1204 08:07:57.240020 140087498471168 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1204 08:07:57.240119 140087498471168 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 08:07:57.240211 140087498471168 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1204 08:07:57.240288 140087498471168 hlog.py:32] train/00149/eval_val/45/corr False
I1204 08:07:57.240360 140087498471168 hlog.py:32] train/00149/eval_val/45 
I1204 08:07:57.240431 140087498471168 hlog.py:18] train/00149/eval_val/45{0.00s}
I1204 08:07:57.240524 140087498471168 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1204 08:07:57.240622 140087498471168 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 08:07:57.240715 140087498471168 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1204 08:07:57.240792 140087498471168 hlog.py:32] train/00149/eval_val/46/corr True
I1204 08:07:57.240869 140087498471168 hlog.py:32] train/00149/eval_val/46 
I1204 08:07:57.240941 140087498471168 hlog.py:18] train/00149/eval_val/46{0.00s}
I1204 08:07:57.241027 140087498471168 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1204 08:07:57.241127 140087498471168 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , A ) )
I1204 08:07:57.241221 140087498471168 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1204 08:07:57.241299 140087498471168 hlog.py:32] train/00149/eval_val/47/corr False
I1204 08:07:57.241371 140087498471168 hlog.py:32] train/00149/eval_val/47 
I1204 08:07:57.241441 140087498471168 hlog.py:18] train/00149/eval_val/47{0.00s}
I1204 08:07:57.241529 140087498471168 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1204 08:07:57.241632 140087498471168 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( rochester ) ) ) , A ) )
I1204 08:07:57.241727 140087498471168 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1204 08:07:57.241804 140087498471168 hlog.py:32] train/00149/eval_val/48/corr False
I1204 08:07:57.241877 140087498471168 hlog.py:32] train/00149/eval_val/48 
I1204 08:07:57.241947 140087498471168 hlog.py:18] train/00149/eval_val/48{0.00s}
I1204 08:07:57.242042 140087498471168 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1204 08:07:57.242144 140087498471168 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:07:57.242238 140087498471168 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:07:57.242315 140087498471168 hlog.py:32] train/00149/eval_val/49/corr True
I1204 08:07:57.242387 140087498471168 hlog.py:32] train/00149/eval_val/49 
I1204 08:07:57.242458 140087498471168 hlog.py:18] train/00149/eval_val/49{0.00s}
I1204 08:07:57.242551 140087498471168 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1204 08:07:57.242652 140087498471168 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 08:07:57.242745 140087498471168 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1204 08:07:57.242823 140087498471168 hlog.py:32] train/00149/eval_val/50/corr True
I1204 08:07:57.242895 140087498471168 hlog.py:32] train/00149/eval_val/50 
I1204 08:07:57.242965 140087498471168 hlog.py:18] train/00149/eval_val/50{0.00s}
I1204 08:07:57.243060 140087498471168 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1204 08:07:57.243161 140087498471168 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:07:57.243255 140087498471168 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1204 08:07:57.243332 140087498471168 hlog.py:32] train/00149/eval_val/51/corr True
I1204 08:07:57.243411 140087498471168 hlog.py:32] train/00149/eval_val/51 
I1204 08:07:57.243485 140087498471168 hlog.py:18] train/00149/eval_val/51{0.00s}
I1204 08:07:57.243571 140087498471168 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1204 08:07:57.243674 140087498471168 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 08:07:57.243765 140087498471168 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 08:07:57.243844 140087498471168 hlog.py:32] train/00149/eval_val/52/corr False
I1204 08:07:57.243916 140087498471168 hlog.py:32] train/00149/eval_val/52 
I1204 08:07:57.243986 140087498471168 hlog.py:18] train/00149/eval_val/52{0.00s}
I1204 08:07:57.244072 140087498471168 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1204 08:07:57.244168 140087498471168 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1204 08:07:57.244259 140087498471168 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1204 08:07:57.244337 140087498471168 hlog.py:32] train/00149/eval_val/53/corr False
I1204 08:07:57.244409 140087498471168 hlog.py:32] train/00149/eval_val/53 
I1204 08:07:57.244479 140087498471168 hlog.py:18] train/00149/eval_val/53{0.00s}
I1204 08:07:57.244571 140087498471168 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1204 08:07:57.244667 140087498471168 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.244756 140087498471168 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.244834 140087498471168 hlog.py:32] train/00149/eval_val/54/corr True
I1204 08:07:57.244906 140087498471168 hlog.py:32] train/00149/eval_val/54 
I1204 08:07:57.244976 140087498471168 hlog.py:18] train/00149/eval_val/54{0.00s}
I1204 08:07:57.245062 140087498471168 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1204 08:07:57.245160 140087498471168 hlog.py:32] train/00149/eval_val/55/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 08:07:57.245250 140087498471168 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1204 08:07:57.245328 140087498471168 hlog.py:32] train/00149/eval_val/55/corr False
I1204 08:07:57.245400 140087498471168 hlog.py:32] train/00149/eval_val/55 
I1204 08:07:57.245471 140087498471168 hlog.py:18] train/00149/eval_val/55{0.00s}
I1204 08:07:57.245562 140087498471168 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1204 08:07:57.245658 140087498471168 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:07:57.245748 140087498471168 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:07:57.245826 140087498471168 hlog.py:32] train/00149/eval_val/56/corr True
I1204 08:07:57.245898 140087498471168 hlog.py:32] train/00149/eval_val/56 
I1204 08:07:57.245968 140087498471168 hlog.py:18] train/00149/eval_val/56{0.00s}
I1204 08:07:57.246060 140087498471168 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1204 08:07:57.246155 140087498471168 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.246245 140087498471168 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.246322 140087498471168 hlog.py:32] train/00149/eval_val/57/corr True
I1204 08:07:57.246394 140087498471168 hlog.py:32] train/00149/eval_val/57 
I1204 08:07:57.246464 140087498471168 hlog.py:18] train/00149/eval_val/57{0.00s}
I1204 08:07:57.246556 140087498471168 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1204 08:07:57.246651 140087498471168 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.246748 140087498471168 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.246826 140087498471168 hlog.py:32] train/00149/eval_val/58/corr True
I1204 08:07:57.246898 140087498471168 hlog.py:32] train/00149/eval_val/58 
I1204 08:07:57.246968 140087498471168 hlog.py:18] train/00149/eval_val/58{0.00s}
I1204 08:07:57.247061 140087498471168 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1204 08:07:57.247157 140087498471168 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 08:07:57.247246 140087498471168 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1204 08:07:57.247324 140087498471168 hlog.py:32] train/00149/eval_val/59/corr True
I1204 08:07:57.247395 140087498471168 hlog.py:32] train/00149/eval_val/59 
I1204 08:07:57.247475 140087498471168 hlog.py:18] train/00149/eval_val/59{0.00s}
I1204 08:07:57.247566 140087498471168 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1204 08:07:57.247662 140087498471168 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 08:07:57.247752 140087498471168 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1204 08:07:57.247829 140087498471168 hlog.py:32] train/00149/eval_val/60/corr True
I1204 08:07:57.247902 140087498471168 hlog.py:32] train/00149/eval_val/60 
I1204 08:07:57.247972 140087498471168 hlog.py:18] train/00149/eval_val/60{0.00s}
I1204 08:07:57.248064 140087498471168 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1204 08:07:57.248159 140087498471168 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:07:57.248250 140087498471168 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:07:57.248328 140087498471168 hlog.py:32] train/00149/eval_val/61/corr True
I1204 08:07:57.248400 140087498471168 hlog.py:32] train/00149/eval_val/61 
I1204 08:07:57.248470 140087498471168 hlog.py:18] train/00149/eval_val/61{0.00s}
I1204 08:07:57.248561 140087498471168 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1204 08:07:57.248656 140087498471168 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 08:07:57.248745 140087498471168 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1204 08:07:57.248823 140087498471168 hlog.py:32] train/00149/eval_val/62/corr True
I1204 08:07:57.248895 140087498471168 hlog.py:32] train/00149/eval_val/62 
I1204 08:07:57.248966 140087498471168 hlog.py:18] train/00149/eval_val/62{0.00s}
I1204 08:07:57.249057 140087498471168 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1204 08:07:57.249152 140087498471168 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.249242 140087498471168 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.249319 140087498471168 hlog.py:32] train/00149/eval_val/63/corr True
I1204 08:07:57.249391 140087498471168 hlog.py:32] train/00149/eval_val/63 
I1204 08:07:57.249462 140087498471168 hlog.py:18] train/00149/eval_val/63{0.00s}
I1204 08:07:57.488515 140087498471168 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1204 08:07:57.488721 140087498471168 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 08:07:57.488836 140087498471168 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1204 08:07:57.488923 140087498471168 hlog.py:32] train/00149/eval_val/64/corr True
I1204 08:07:57.489000 140087498471168 hlog.py:32] train/00149/eval_val/64 
I1204 08:07:57.489079 140087498471168 hlog.py:18] train/00149/eval_val/64{0.00s}
I1204 08:07:57.489175 140087498471168 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1204 08:07:57.489274 140087498471168 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.489366 140087498471168 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.489445 140087498471168 hlog.py:32] train/00149/eval_val/65/corr True
I1204 08:07:57.489518 140087498471168 hlog.py:32] train/00149/eval_val/65 
I1204 08:07:57.489589 140087498471168 hlog.py:18] train/00149/eval_val/65{0.00s}
I1204 08:07:57.489681 140087498471168 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1204 08:07:57.489777 140087498471168 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.489867 140087498471168 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.489945 140087498471168 hlog.py:32] train/00149/eval_val/66/corr True
I1204 08:07:57.490017 140087498471168 hlog.py:32] train/00149/eval_val/66 
I1204 08:07:57.490088 140087498471168 hlog.py:18] train/00149/eval_val/66{0.00s}
I1204 08:07:57.490176 140087498471168 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1204 08:07:57.490278 140087498471168 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.490369 140087498471168 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.490447 140087498471168 hlog.py:32] train/00149/eval_val/67/corr False
I1204 08:07:57.490520 140087498471168 hlog.py:32] train/00149/eval_val/67 
I1204 08:07:57.490591 140087498471168 hlog.py:18] train/00149/eval_val/67{0.00s}
I1204 08:07:57.490684 140087498471168 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1204 08:07:57.490782 140087498471168 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 08:07:57.490873 140087498471168 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1204 08:07:57.490950 140087498471168 hlog.py:32] train/00149/eval_val/68/corr True
I1204 08:07:57.491023 140087498471168 hlog.py:32] train/00149/eval_val/68 
I1204 08:07:57.491094 140087498471168 hlog.py:18] train/00149/eval_val/68{0.00s}
I1204 08:07:57.491187 140087498471168 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1204 08:07:57.491284 140087498471168 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.491376 140087498471168 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.491479 140087498471168 hlog.py:32] train/00149/eval_val/69/corr True
I1204 08:07:57.491555 140087498471168 hlog.py:32] train/00149/eval_val/69 
I1204 08:07:57.491629 140087498471168 hlog.py:18] train/00149/eval_val/69{0.00s}
I1204 08:07:57.491730 140087498471168 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1204 08:07:57.491825 140087498471168 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1204 08:07:57.491920 140087498471168 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.491999 140087498471168 hlog.py:32] train/00149/eval_val/70/corr False
I1204 08:07:57.492072 140087498471168 hlog.py:32] train/00149/eval_val/70 
I1204 08:07:57.492143 140087498471168 hlog.py:18] train/00149/eval_val/70{0.00s}
I1204 08:07:57.492229 140087498471168 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1204 08:07:57.492323 140087498471168 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1204 08:07:57.492413 140087498471168 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1204 08:07:57.492490 140087498471168 hlog.py:32] train/00149/eval_val/71/corr False
I1204 08:07:57.492563 140087498471168 hlog.py:32] train/00149/eval_val/71 
I1204 08:07:57.492633 140087498471168 hlog.py:18] train/00149/eval_val/71{0.00s}
I1204 08:07:57.492720 140087498471168 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1204 08:07:57.492814 140087498471168 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1204 08:07:57.492902 140087498471168 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1204 08:07:57.492980 140087498471168 hlog.py:32] train/00149/eval_val/72/corr False
I1204 08:07:57.493053 140087498471168 hlog.py:32] train/00149/eval_val/72 
I1204 08:07:57.493123 140087498471168 hlog.py:18] train/00149/eval_val/72{0.00s}
I1204 08:07:57.493210 140087498471168 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1204 08:07:57.493304 140087498471168 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1204 08:07:57.493392 140087498471168 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1204 08:07:57.493470 140087498471168 hlog.py:32] train/00149/eval_val/73/corr False
I1204 08:07:57.493542 140087498471168 hlog.py:32] train/00149/eval_val/73 
I1204 08:07:57.493613 140087498471168 hlog.py:18] train/00149/eval_val/73{0.00s}
I1204 08:07:57.493699 140087498471168 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1204 08:07:57.493792 140087498471168 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1204 08:07:57.493880 140087498471168 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:07:57.493958 140087498471168 hlog.py:32] train/00149/eval_val/74/corr False
I1204 08:07:57.494030 140087498471168 hlog.py:32] train/00149/eval_val/74 
I1204 08:07:57.494101 140087498471168 hlog.py:18] train/00149/eval_val/74{0.00s}
I1204 08:07:57.494189 140087498471168 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1204 08:07:57.494283 140087498471168 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , _ ) ) ) )
I1204 08:07:57.494371 140087498471168 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1204 08:07:57.494449 140087498471168 hlog.py:32] train/00149/eval_val/75/corr False
I1204 08:07:57.494521 140087498471168 hlog.py:32] train/00149/eval_val/75 
I1204 08:07:57.494592 140087498471168 hlog.py:18] train/00149/eval_val/75{0.00s}
I1204 08:07:57.494678 140087498471168 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1204 08:07:57.494773 140087498471168 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1204 08:07:57.494862 140087498471168 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1204 08:07:57.494940 140087498471168 hlog.py:32] train/00149/eval_val/76/corr False
I1204 08:07:57.495018 140087498471168 hlog.py:32] train/00149/eval_val/76 
I1204 08:07:57.495090 140087498471168 hlog.py:18] train/00149/eval_val/76{0.00s}
I1204 08:07:57.495176 140087498471168 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1204 08:07:57.495270 140087498471168 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1204 08:07:57.495359 140087498471168 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 08:07:57.495463 140087498471168 hlog.py:32] train/00149/eval_val/77/corr False
I1204 08:07:57.495539 140087498471168 hlog.py:32] train/00149/eval_val/77 
I1204 08:07:57.495612 140087498471168 hlog.py:18] train/00149/eval_val/77{0.00s}
I1204 08:07:57.495713 140087498471168 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1204 08:07:57.495808 140087498471168 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , washington ) ) ) )
I1204 08:07:57.495897 140087498471168 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1204 08:07:57.495975 140087498471168 hlog.py:32] train/00149/eval_val/78/corr False
I1204 08:07:57.496048 140087498471168 hlog.py:32] train/00149/eval_val/78 
I1204 08:07:57.496118 140087498471168 hlog.py:18] train/00149/eval_val/78{0.00s}
I1204 08:07:57.496205 140087498471168 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1204 08:07:57.496299 140087498471168 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1204 08:07:57.496388 140087498471168 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1204 08:07:57.496466 140087498471168 hlog.py:32] train/00149/eval_val/79/corr False
I1204 08:07:57.496538 140087498471168 hlog.py:32] train/00149/eval_val/79 
I1204 08:07:57.496608 140087498471168 hlog.py:18] train/00149/eval_val/79{0.00s}
I1204 08:07:57.496694 140087498471168 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1204 08:07:57.496788 140087498471168 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1204 08:07:57.496876 140087498471168 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.496954 140087498471168 hlog.py:32] train/00149/eval_val/80/corr False
I1204 08:07:57.497026 140087498471168 hlog.py:32] train/00149/eval_val/80 
I1204 08:07:57.497097 140087498471168 hlog.py:18] train/00149/eval_val/80{0.00s}
I1204 08:07:57.497184 140087498471168 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1204 08:07:57.497278 140087498471168 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _riverid ( texas ) ) , _state ( B ) ) )
I1204 08:07:57.497366 140087498471168 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.497444 140087498471168 hlog.py:32] train/00149/eval_val/81/corr False
I1204 08:07:57.497516 140087498471168 hlog.py:32] train/00149/eval_val/81 
I1204 08:07:57.497586 140087498471168 hlog.py:18] train/00149/eval_val/81{0.00s}
I1204 08:07:57.497673 140087498471168 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1204 08:07:57.497767 140087498471168 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1204 08:07:57.497854 140087498471168 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1204 08:07:57.497932 140087498471168 hlog.py:32] train/00149/eval_val/82/corr False
I1204 08:07:57.498004 140087498471168 hlog.py:32] train/00149/eval_val/82 
I1204 08:07:57.498075 140087498471168 hlog.py:18] train/00149/eval_val/82{0.00s}
I1204 08:07:57.498170 140087498471168 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1204 08:07:57.498264 140087498471168 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1204 08:07:57.498352 140087498471168 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 08:07:57.498428 140087498471168 hlog.py:32] train/00149/eval_val/83/corr False
I1204 08:07:57.498501 140087498471168 hlog.py:32] train/00149/eval_val/83 
I1204 08:07:57.498571 140087498471168 hlog.py:18] train/00149/eval_val/83{0.00s}
I1204 08:07:57.498663 140087498471168 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1204 08:07:57.498756 140087498471168 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1204 08:07:57.498844 140087498471168 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.498922 140087498471168 hlog.py:32] train/00149/eval_val/84/corr False
I1204 08:07:57.498994 140087498471168 hlog.py:32] train/00149/eval_val/84 
I1204 08:07:57.499065 140087498471168 hlog.py:18] train/00149/eval_val/84{0.00s}
I1204 08:07:57.499153 140087498471168 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1204 08:07:57.499253 140087498471168 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:07:57.499343 140087498471168 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.499443 140087498471168 hlog.py:32] train/00149/eval_val/85/corr False
I1204 08:07:57.499520 140087498471168 hlog.py:32] train/00149/eval_val/85 
I1204 08:07:57.499593 140087498471168 hlog.py:18] train/00149/eval_val/85{0.00s}
I1204 08:07:57.499697 140087498471168 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1204 08:07:57.499804 140087498471168 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _const ( C , _stateid ( a ) ) ) ) ) )
I1204 08:07:57.499898 140087498471168 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1204 08:07:57.499977 140087498471168 hlog.py:32] train/00149/eval_val/86/corr False
I1204 08:07:57.500049 140087498471168 hlog.py:32] train/00149/eval_val/86 
I1204 08:07:57.500119 140087498471168 hlog.py:18] train/00149/eval_val/86{0.00s}
I1204 08:07:57.500207 140087498471168 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1204 08:07:57.500313 140087498471168 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1204 08:07:57.500410 140087498471168 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:07:57.500489 140087498471168 hlog.py:32] train/00149/eval_val/87/corr False
I1204 08:07:57.500561 140087498471168 hlog.py:32] train/00149/eval_val/87 
I1204 08:07:57.500631 140087498471168 hlog.py:18] train/00149/eval_val/87{0.00s}
I1204 08:07:57.500723 140087498471168 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1204 08:07:57.500818 140087498471168 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 08:07:57.500908 140087498471168 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1204 08:07:57.500985 140087498471168 hlog.py:32] train/00149/eval_val/88/corr True
I1204 08:07:57.501063 140087498471168 hlog.py:32] train/00149/eval_val/88 
I1204 08:07:57.501134 140087498471168 hlog.py:18] train/00149/eval_val/88{0.00s}
I1204 08:07:57.501230 140087498471168 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1204 08:07:57.501332 140087498471168 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.501426 140087498471168 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.501505 140087498471168 hlog.py:32] train/00149/eval_val/89/corr True
I1204 08:07:57.501577 140087498471168 hlog.py:32] train/00149/eval_val/89 
I1204 08:07:57.501647 140087498471168 hlog.py:18] train/00149/eval_val/89{0.00s}
I1204 08:07:57.501735 140087498471168 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1204 08:07:57.501842 140087498471168 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) ) )
I1204 08:07:57.501939 140087498471168 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1204 08:07:57.502017 140087498471168 hlog.py:32] train/00149/eval_val/90/corr False
I1204 08:07:57.502088 140087498471168 hlog.py:32] train/00149/eval_val/90 
I1204 08:07:57.502159 140087498471168 hlog.py:18] train/00149/eval_val/90{0.00s}
I1204 08:07:57.502252 140087498471168 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1204 08:07:57.502349 140087498471168 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.502440 140087498471168 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.502518 140087498471168 hlog.py:32] train/00149/eval_val/91/corr True
I1204 08:07:57.502590 140087498471168 hlog.py:32] train/00149/eval_val/91 
I1204 08:07:57.502660 140087498471168 hlog.py:18] train/00149/eval_val/91{0.00s}
I1204 08:07:57.502753 140087498471168 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1204 08:07:57.502851 140087498471168 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.502942 140087498471168 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.503020 140087498471168 hlog.py:32] train/00149/eval_val/92/corr True
I1204 08:07:57.503092 140087498471168 hlog.py:32] train/00149/eval_val/92 
I1204 08:07:57.503162 140087498471168 hlog.py:18] train/00149/eval_val/92{0.00s}
I1204 08:07:57.503249 140087498471168 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1204 08:07:57.503342 140087498471168 hlog.py:32] train/00149/eval_val/93/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.503456 140087498471168 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.503538 140087498471168 hlog.py:32] train/00149/eval_val/93/corr False
I1204 08:07:57.503612 140087498471168 hlog.py:32] train/00149/eval_val/93 
I1204 08:07:57.503698 140087498471168 hlog.py:18] train/00149/eval_val/93{0.00s}
I1204 08:07:57.503786 140087498471168 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1204 08:07:57.503878 140087498471168 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _area ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.503975 140087498471168 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.504053 140087498471168 hlog.py:32] train/00149/eval_val/94/corr False
I1204 08:07:57.504125 140087498471168 hlog.py:32] train/00149/eval_val/94 
I1204 08:07:57.504196 140087498471168 hlog.py:18] train/00149/eval_val/94{0.00s}
I1204 08:07:57.504286 140087498471168 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1204 08:07:57.504383 140087498471168 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.504474 140087498471168 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.504552 140087498471168 hlog.py:32] train/00149/eval_val/95/corr False
I1204 08:07:57.504624 140087498471168 hlog.py:32] train/00149/eval_val/95 
I1204 08:07:57.504694 140087498471168 hlog.py:18] train/00149/eval_val/95{0.00s}
I1204 08:07:57.504790 140087498471168 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1204 08:07:57.504891 140087498471168 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 08:07:57.504985 140087498471168 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1204 08:07:57.505062 140087498471168 hlog.py:32] train/00149/eval_val/96/corr True
I1204 08:07:57.505135 140087498471168 hlog.py:32] train/00149/eval_val/96 
I1204 08:07:57.505205 140087498471168 hlog.py:18] train/00149/eval_val/96{0.00s}
I1204 08:07:57.505304 140087498471168 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1204 08:07:57.505458 140087498471168 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 08:07:57.505603 140087498471168 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1204 08:07:57.505683 140087498471168 hlog.py:32] train/00149/eval_val/97/corr True
I1204 08:07:57.505755 140087498471168 hlog.py:32] train/00149/eval_val/97 
I1204 08:07:57.505825 140087498471168 hlog.py:18] train/00149/eval_val/97{0.00s}
I1204 08:07:57.505920 140087498471168 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1204 08:07:57.506020 140087498471168 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 08:07:57.506113 140087498471168 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1204 08:07:57.506190 140087498471168 hlog.py:32] train/00149/eval_val/98/corr True
I1204 08:07:57.506262 140087498471168 hlog.py:32] train/00149/eval_val/98 
I1204 08:07:57.506333 140087498471168 hlog.py:18] train/00149/eval_val/98{0.00s}
I1204 08:07:57.506427 140087498471168 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1204 08:07:57.506526 140087498471168 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:07:57.506619 140087498471168 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1204 08:07:57.506703 140087498471168 hlog.py:32] train/00149/eval_val/99/corr True
I1204 08:07:57.506776 140087498471168 hlog.py:32] train/00149/eval_val/99 
I1204 08:07:57.506846 140087498471168 hlog.py:18] train/00149/eval_val/99{0.00s}
I1204 08:07:57.506938 140087498471168 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1204 08:07:57.507038 140087498471168 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1204 08:07:57.507131 140087498471168 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 08:07:57.507209 140087498471168 hlog.py:32] train/00149/eval_val/100/corr False
I1204 08:07:57.507281 140087498471168 hlog.py:32] train/00149/eval_val/100 
I1204 08:07:57.507351 140087498471168 hlog.py:18] train/00149/eval_val/100{0.00s}
I1204 08:07:57.507463 140087498471168 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1204 08:07:57.507564 140087498471168 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.507661 140087498471168 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1204 08:07:57.507765 140087498471168 hlog.py:32] train/00149/eval_val/101/corr False
I1204 08:07:57.507836 140087498471168 hlog.py:32] train/00149/eval_val/101 
I1204 08:07:57.507904 140087498471168 hlog.py:18] train/00149/eval_val/101{0.00s}
I1204 08:07:57.507987 140087498471168 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1204 08:07:57.508081 140087498471168 hlog.py:32] train/00149/eval_val/102/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1204 08:07:57.508168 140087498471168 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1204 08:07:57.508244 140087498471168 hlog.py:32] train/00149/eval_val/102/corr False
I1204 08:07:57.508314 140087498471168 hlog.py:32] train/00149/eval_val/102 
I1204 08:07:57.508382 140087498471168 hlog.py:18] train/00149/eval_val/102{0.00s}
I1204 08:07:57.508471 140087498471168 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1204 08:07:57.508564 140087498471168 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 08:07:57.508651 140087498471168 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1204 08:07:57.508726 140087498471168 hlog.py:32] train/00149/eval_val/103/corr True
I1204 08:07:57.508796 140087498471168 hlog.py:32] train/00149/eval_val/103 
I1204 08:07:57.508865 140087498471168 hlog.py:18] train/00149/eval_val/103{0.00s}
I1204 08:07:57.508953 140087498471168 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1204 08:07:57.509046 140087498471168 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.509132 140087498471168 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.509207 140087498471168 hlog.py:32] train/00149/eval_val/104/corr True
I1204 08:07:57.509277 140087498471168 hlog.py:32] train/00149/eval_val/104 
I1204 08:07:57.509345 140087498471168 hlog.py:18] train/00149/eval_val/104{0.00s}
I1204 08:07:57.509433 140087498471168 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1204 08:07:57.509525 140087498471168 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 08:07:57.509618 140087498471168 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1204 08:07:57.509693 140087498471168 hlog.py:32] train/00149/eval_val/105/corr True
I1204 08:07:57.509763 140087498471168 hlog.py:32] train/00149/eval_val/105 
I1204 08:07:57.509831 140087498471168 hlog.py:18] train/00149/eval_val/105{0.00s}
I1204 08:07:57.509920 140087498471168 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1204 08:07:57.510012 140087498471168 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 08:07:57.510099 140087498471168 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1204 08:07:57.510174 140087498471168 hlog.py:32] train/00149/eval_val/106/corr True
I1204 08:07:57.510244 140087498471168 hlog.py:32] train/00149/eval_val/106 
I1204 08:07:57.510312 140087498471168 hlog.py:18] train/00149/eval_val/106{0.00s}
I1204 08:07:57.510401 140087498471168 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1204 08:07:57.510493 140087498471168 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.510580 140087498471168 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.510654 140087498471168 hlog.py:32] train/00149/eval_val/107/corr True
I1204 08:07:57.510725 140087498471168 hlog.py:32] train/00149/eval_val/107 
I1204 08:07:57.510792 140087498471168 hlog.py:18] train/00149/eval_val/107{0.00s}
I1204 08:07:57.510880 140087498471168 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1204 08:07:57.510972 140087498471168 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 08:07:57.511059 140087498471168 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1204 08:07:57.511133 140087498471168 hlog.py:32] train/00149/eval_val/108/corr True
I1204 08:07:57.511203 140087498471168 hlog.py:32] train/00149/eval_val/108 
I1204 08:07:57.511271 140087498471168 hlog.py:18] train/00149/eval_val/108{0.00s}
I1204 08:07:57.511359 140087498471168 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1204 08:07:57.511476 140087498471168 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 08:07:57.511565 140087498471168 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1204 08:07:57.511643 140087498471168 hlog.py:32] train/00149/eval_val/109/corr True
I1204 08:07:57.511727 140087498471168 hlog.py:32] train/00149/eval_val/109 
I1204 08:07:57.511811 140087498471168 hlog.py:18] train/00149/eval_val/109{0.00s}
I1204 08:07:57.511903 140087498471168 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1204 08:07:57.511997 140087498471168 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.512098 140087498471168 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1204 08:07:57.512174 140087498471168 hlog.py:32] train/00149/eval_val/110/corr True
I1204 08:07:57.512243 140087498471168 hlog.py:32] train/00149/eval_val/110 
I1204 08:07:57.512312 140087498471168 hlog.py:18] train/00149/eval_val/110{0.00s}
I1204 08:07:57.512399 140087498471168 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1204 08:07:57.512497 140087498471168 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 08:07:57.512584 140087498471168 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1204 08:07:57.512660 140087498471168 hlog.py:32] train/00149/eval_val/111/corr True
I1204 08:07:57.512730 140087498471168 hlog.py:32] train/00149/eval_val/111 
I1204 08:07:57.512798 140087498471168 hlog.py:18] train/00149/eval_val/111{0.00s}
I1204 08:07:57.512886 140087498471168 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1204 08:07:57.512978 140087498471168 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:07:57.513064 140087498471168 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1204 08:07:57.513140 140087498471168 hlog.py:32] train/00149/eval_val/112/corr True
I1204 08:07:57.513209 140087498471168 hlog.py:32] train/00149/eval_val/112 
I1204 08:07:57.513277 140087498471168 hlog.py:18] train/00149/eval_val/112{0.00s}
I1204 08:07:57.513366 140087498471168 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1204 08:07:57.513459 140087498471168 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:07:57.513546 140087498471168 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1204 08:07:57.513622 140087498471168 hlog.py:32] train/00149/eval_val/113/corr True
I1204 08:07:57.513691 140087498471168 hlog.py:32] train/00149/eval_val/113 
I1204 08:07:57.513759 140087498471168 hlog.py:18] train/00149/eval_val/113{0.00s}
I1204 08:07:57.513848 140087498471168 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1204 08:07:57.513939 140087498471168 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.514027 140087498471168 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1204 08:07:57.514101 140087498471168 hlog.py:32] train/00149/eval_val/114/corr True
I1204 08:07:57.514171 140087498471168 hlog.py:32] train/00149/eval_val/114 
I1204 08:07:57.514239 140087498471168 hlog.py:18] train/00149/eval_val/114{0.00s}
I1204 08:07:57.514327 140087498471168 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1204 08:07:57.514419 140087498471168 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) ) )
I1204 08:07:57.514506 140087498471168 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1204 08:07:57.514581 140087498471168 hlog.py:32] train/00149/eval_val/115/corr False
I1204 08:07:57.514651 140087498471168 hlog.py:32] train/00149/eval_val/115 
I1204 08:07:57.514719 140087498471168 hlog.py:18] train/00149/eval_val/115{0.00s}
I1204 08:07:57.514807 140087498471168 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1204 08:07:57.514899 140087498471168 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.514985 140087498471168 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1204 08:07:57.515060 140087498471168 hlog.py:32] train/00149/eval_val/116/corr True
I1204 08:07:57.515130 140087498471168 hlog.py:32] train/00149/eval_val/116 
I1204 08:07:57.515198 140087498471168 hlog.py:18] train/00149/eval_val/116{0.00s}
I1204 08:07:57.515289 140087498471168 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1204 08:07:57.515402 140087498471168 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.515516 140087498471168 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.515597 140087498471168 hlog.py:32] train/00149/eval_val/117/corr True
I1204 08:07:57.515672 140087498471168 hlog.py:32] train/00149/eval_val/117 
I1204 08:07:57.515756 140087498471168 hlog.py:18] train/00149/eval_val/117{0.00s}
I1204 08:07:57.515849 140087498471168 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1204 08:07:57.515959 140087498471168 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.516048 140087498471168 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.516123 140087498471168 hlog.py:32] train/00149/eval_val/118/corr True
I1204 08:07:57.516192 140087498471168 hlog.py:32] train/00149/eval_val/118 
I1204 08:07:57.516261 140087498471168 hlog.py:18] train/00149/eval_val/118{0.00s}
I1204 08:07:57.516350 140087498471168 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1204 08:07:57.516444 140087498471168 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.516533 140087498471168 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1204 08:07:57.516608 140087498471168 hlog.py:32] train/00149/eval_val/119/corr True
I1204 08:07:57.516678 140087498471168 hlog.py:32] train/00149/eval_val/119 
I1204 08:07:57.516746 140087498471168 hlog.py:18] train/00149/eval_val/119{0.00s}
I1204 08:07:57.516832 140087498471168 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1204 08:07:57.516919 140087498471168 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 08:07:57.517002 140087498471168 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 08:07:57.517077 140087498471168 hlog.py:32] train/00149/eval_val/120/corr True
I1204 08:07:57.517147 140087498471168 hlog.py:32] train/00149/eval_val/120 
I1204 08:07:57.517215 140087498471168 hlog.py:18] train/00149/eval_val/120{0.00s}
I1204 08:07:57.517301 140087498471168 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1204 08:07:57.517388 140087498471168 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1204 08:07:57.517470 140087498471168 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1204 08:07:57.517544 140087498471168 hlog.py:32] train/00149/eval_val/121/corr True
I1204 08:07:57.517614 140087498471168 hlog.py:32] train/00149/eval_val/121 
I1204 08:07:57.517682 140087498471168 hlog.py:18] train/00149/eval_val/121{0.00s}
I1204 08:07:57.517771 140087498471168 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1204 08:07:57.517866 140087498471168 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 08:07:57.517954 140087498471168 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1204 08:07:57.518030 140087498471168 hlog.py:32] train/00149/eval_val/122/corr True
I1204 08:07:57.518099 140087498471168 hlog.py:32] train/00149/eval_val/122 
I1204 08:07:57.518168 140087498471168 hlog.py:18] train/00149/eval_val/122{0.00s}
I1204 08:07:57.518258 140087498471168 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1204 08:07:57.518358 140087498471168 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 08:07:57.518447 140087498471168 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1204 08:07:57.518522 140087498471168 hlog.py:32] train/00149/eval_val/123/corr True
I1204 08:07:57.518591 140087498471168 hlog.py:32] train/00149/eval_val/123 
I1204 08:07:57.518659 140087498471168 hlog.py:18] train/00149/eval_val/123{0.00s}
I1204 08:07:57.518749 140087498471168 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1204 08:07:57.518844 140087498471168 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 08:07:57.518932 140087498471168 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1204 08:07:57.519007 140087498471168 hlog.py:32] train/00149/eval_val/124/corr True
I1204 08:07:57.519076 140087498471168 hlog.py:32] train/00149/eval_val/124 
I1204 08:07:57.519145 140087498471168 hlog.py:18] train/00149/eval_val/124{0.00s}
I1204 08:07:57.519234 140087498471168 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1204 08:07:57.519329 140087498471168 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 08:07:57.519440 140087498471168 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1204 08:07:57.519520 140087498471168 hlog.py:32] train/00149/eval_val/125/corr True
I1204 08:07:57.519592 140087498471168 hlog.py:32] train/00149/eval_val/125 
I1204 08:07:57.519662 140087498471168 hlog.py:18] train/00149/eval_val/125{0.00s}
I1204 08:07:57.519766 140087498471168 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1204 08:07:57.519855 140087498471168 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.519941 140087498471168 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.520016 140087498471168 hlog.py:32] train/00149/eval_val/126/corr True
I1204 08:07:57.520086 140087498471168 hlog.py:32] train/00149/eval_val/126 
I1204 08:07:57.520154 140087498471168 hlog.py:18] train/00149/eval_val/126{0.00s}
I1204 08:07:57.520240 140087498471168 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1204 08:07:57.520330 140087498471168 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.520416 140087498471168 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.520491 140087498471168 hlog.py:32] train/00149/eval_val/127/corr False
I1204 08:07:57.520560 140087498471168 hlog.py:32] train/00149/eval_val/127 
I1204 08:07:57.520628 140087498471168 hlog.py:18] train/00149/eval_val/127{0.00s}
I1204 08:07:57.644657 140087498471168 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1204 08:07:57.644812 140087498471168 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.644911 140087498471168 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.644995 140087498471168 hlog.py:32] train/00149/eval_val/128/corr False
I1204 08:07:57.645071 140087498471168 hlog.py:32] train/00149/eval_val/128 
I1204 08:07:57.645147 140087498471168 hlog.py:18] train/00149/eval_val/128{0.00s}
I1204 08:07:57.645243 140087498471168 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1204 08:07:57.645349 140087498471168 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.645439 140087498471168 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.645519 140087498471168 hlog.py:32] train/00149/eval_val/129/corr True
I1204 08:07:57.645592 140087498471168 hlog.py:32] train/00149/eval_val/129 
I1204 08:07:57.645664 140087498471168 hlog.py:18] train/00149/eval_val/129{0.00s}
I1204 08:07:57.645754 140087498471168 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1204 08:07:57.645848 140087498471168 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.645937 140087498471168 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.646015 140087498471168 hlog.py:32] train/00149/eval_val/130/corr False
I1204 08:07:57.646088 140087498471168 hlog.py:32] train/00149/eval_val/130 
I1204 08:07:57.646159 140087498471168 hlog.py:18] train/00149/eval_val/130{0.00s}
I1204 08:07:57.646248 140087498471168 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1204 08:07:57.646341 140087498471168 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.646430 140087498471168 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.646508 140087498471168 hlog.py:32] train/00149/eval_val/131/corr False
I1204 08:07:57.646581 140087498471168 hlog.py:32] train/00149/eval_val/131 
I1204 08:07:57.646652 140087498471168 hlog.py:18] train/00149/eval_val/131{0.00s}
I1204 08:07:57.646741 140087498471168 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1204 08:07:57.646834 140087498471168 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _area ( A , B ) ) ) )
I1204 08:07:57.646922 140087498471168 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1204 08:07:57.647000 140087498471168 hlog.py:32] train/00149/eval_val/132/corr False
I1204 08:07:57.647072 140087498471168 hlog.py:32] train/00149/eval_val/132 
I1204 08:07:57.647143 140087498471168 hlog.py:18] train/00149/eval_val/132{0.00s}
I1204 08:07:57.647231 140087498471168 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1204 08:07:57.647325 140087498471168 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1204 08:07:57.647440 140087498471168 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1204 08:07:57.647522 140087498471168 hlog.py:32] train/00149/eval_val/133/corr False
I1204 08:07:57.647598 140087498471168 hlog.py:32] train/00149/eval_val/133 
I1204 08:07:57.647670 140087498471168 hlog.py:18] train/00149/eval_val/133{0.00s}
I1204 08:07:57.647773 140087498471168 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1204 08:07:57.647876 140087498471168 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _next_to ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.647970 140087498471168 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.648048 140087498471168 hlog.py:32] train/00149/eval_val/134/corr False
I1204 08:07:57.648121 140087498471168 hlog.py:32] train/00149/eval_val/134 
I1204 08:07:57.648193 140087498471168 hlog.py:18] train/00149/eval_val/134{0.00s}
I1204 08:07:57.648288 140087498471168 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1204 08:07:57.648397 140087498471168 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.648492 140087498471168 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1204 08:07:57.648570 140087498471168 hlog.py:32] train/00149/eval_val/135/corr True
I1204 08:07:57.648642 140087498471168 hlog.py:32] train/00149/eval_val/135 
I1204 08:07:57.648713 140087498471168 hlog.py:18] train/00149/eval_val/135{0.00s}
I1204 08:07:57.648805 140087498471168 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1204 08:07:57.648901 140087498471168 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.648991 140087498471168 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.649069 140087498471168 hlog.py:32] train/00149/eval_val/136/corr True
I1204 08:07:57.649141 140087498471168 hlog.py:32] train/00149/eval_val/136 
I1204 08:07:57.649212 140087498471168 hlog.py:18] train/00149/eval_val/136{0.00s}
I1204 08:07:57.649300 140087498471168 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1204 08:07:57.649396 140087498471168 hlog.py:32] train/00149/eval_val/137/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.649487 140087498471168 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.649565 140087498471168 hlog.py:32] train/00149/eval_val/137/corr False
I1204 08:07:57.649637 140087498471168 hlog.py:32] train/00149/eval_val/137 
I1204 08:07:57.649708 140087498471168 hlog.py:18] train/00149/eval_val/137{0.00s}
I1204 08:07:57.649799 140087498471168 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1204 08:07:57.649895 140087498471168 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.649985 140087498471168 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.650063 140087498471168 hlog.py:32] train/00149/eval_val/138/corr True
I1204 08:07:57.650135 140087498471168 hlog.py:32] train/00149/eval_val/138 
I1204 08:07:57.650205 140087498471168 hlog.py:18] train/00149/eval_val/138{0.00s}
I1204 08:07:57.650297 140087498471168 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1204 08:07:57.650393 140087498471168 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.650482 140087498471168 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1204 08:07:57.650561 140087498471168 hlog.py:32] train/00149/eval_val/139/corr True
I1204 08:07:57.650634 140087498471168 hlog.py:32] train/00149/eval_val/139 
I1204 08:07:57.650704 140087498471168 hlog.py:18] train/00149/eval_val/139{0.00s}
I1204 08:07:57.650792 140087498471168 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1204 08:07:57.650891 140087498471168 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _traverse ( B , A ) ) ) )
I1204 08:07:57.650985 140087498471168 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:07:57.651064 140087498471168 hlog.py:32] train/00149/eval_val/140/corr False
I1204 08:07:57.651136 140087498471168 hlog.py:32] train/00149/eval_val/140 
I1204 08:07:57.651207 140087498471168 hlog.py:18] train/00149/eval_val/140{0.00s}
I1204 08:07:57.651301 140087498471168 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1204 08:07:57.651434 140087498471168 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _traverse ( B , A ) ) ) )
I1204 08:07:57.651534 140087498471168 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1204 08:07:57.651615 140087498471168 hlog.py:32] train/00149/eval_val/141/corr False
I1204 08:07:57.651702 140087498471168 hlog.py:32] train/00149/eval_val/141 
I1204 08:07:57.651774 140087498471168 hlog.py:18] train/00149/eval_val/141{0.00s}
I1204 08:07:57.651861 140087498471168 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1204 08:07:57.651956 140087498471168 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 08:07:57.652045 140087498471168 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 08:07:57.652123 140087498471168 hlog.py:32] train/00149/eval_val/142/corr False
I1204 08:07:57.652196 140087498471168 hlog.py:32] train/00149/eval_val/142 
I1204 08:07:57.652266 140087498471168 hlog.py:18] train/00149/eval_val/142{0.00s}
I1204 08:07:57.652352 140087498471168 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1204 08:07:57.652446 140087498471168 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1204 08:07:57.652535 140087498471168 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1204 08:07:57.652613 140087498471168 hlog.py:32] train/00149/eval_val/143/corr False
I1204 08:07:57.652685 140087498471168 hlog.py:32] train/00149/eval_val/143 
I1204 08:07:57.652756 140087498471168 hlog.py:18] train/00149/eval_val/143{0.00s}
I1204 08:07:57.652842 140087498471168 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1204 08:07:57.652931 140087498471168 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1204 08:07:57.653019 140087498471168 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1204 08:07:57.653097 140087498471168 hlog.py:32] train/00149/eval_val/144/corr False
I1204 08:07:57.653170 140087498471168 hlog.py:32] train/00149/eval_val/144 
I1204 08:07:57.653240 140087498471168 hlog.py:18] train/00149/eval_val/144{0.00s}
I1204 08:07:57.653327 140087498471168 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1204 08:07:57.653424 140087498471168 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _next_to ( A , B ) , _major ( B ) , _city ( B ) ) ) )
I1204 08:07:57.653512 140087498471168 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1204 08:07:57.653590 140087498471168 hlog.py:32] train/00149/eval_val/145/corr False
I1204 08:07:57.653663 140087498471168 hlog.py:32] train/00149/eval_val/145 
I1204 08:07:57.653733 140087498471168 hlog.py:18] train/00149/eval_val/145{0.00s}
I1204 08:07:57.653823 140087498471168 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1204 08:07:57.653927 140087498471168 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _density ( B , A ) , _state ( B ) , _largest ( C , ( _state ( B ) , _loc ( C , D ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1204 08:07:57.654024 140087498471168 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1204 08:07:57.654102 140087498471168 hlog.py:32] train/00149/eval_val/146/corr False
I1204 08:07:57.654175 140087498471168 hlog.py:32] train/00149/eval_val/146 
I1204 08:07:57.654251 140087498471168 hlog.py:18] train/00149/eval_val/146{0.00s}
I1204 08:07:57.654345 140087498471168 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1204 08:07:57.654443 140087498471168 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 08:07:57.654536 140087498471168 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1204 08:07:57.654613 140087498471168 hlog.py:32] train/00149/eval_val/147/corr True
I1204 08:07:57.654685 140087498471168 hlog.py:32] train/00149/eval_val/147 
I1204 08:07:57.654756 140087498471168 hlog.py:18] train/00149/eval_val/147{0.00s}
I1204 08:07:57.654835 140087498471168 hlog.py:32] train/00149/eval_val/acc 0.5203
I1204 08:07:57.710331 140087498471168 hlog.py:18] train/00149{16.90s}
I1204 08:07:57.712324 140087498471168 hlog.py:18] train{2543.47s}
