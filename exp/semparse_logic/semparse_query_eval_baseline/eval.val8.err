I1203 02:22:56.620143 140104912262912 hlog.py:24] # --noTEST
I1203 02:22:56.620494 140104912262912 hlog.py:24] # --seed=8
I1203 02:22:56.620581 140104912262912 hlog.py:24] # --dataset=semparse
I1203 02:22:56.620662 140104912262912 hlog.py:24] # --model_dir=model
I1203 02:22:56.620740 140104912262912 hlog.py:24] # --n_checkpoint=10
I1203 02:22:56.620816 140104912262912 hlog.py:24] # --nologtostderr
I1203 02:22:56.620891 140104912262912 hlog.py:24] # --noalsologtostderr
I1203 02:22:56.620965 140104912262912 hlog.py:24] # --log_dir=
I1203 02:22:56.621039 140104912262912 hlog.py:24] # --verbosity=0
I1203 02:22:56.621112 140104912262912 hlog.py:24] # --verbosity=0
I1203 02:22:56.621184 140104912262912 hlog.py:24] # --stderrthreshold=fatal
I1203 02:22:56.621256 140104912262912 hlog.py:24] # --showprefixforinfo
I1203 02:22:56.621328 140104912262912 hlog.py:24] # --nodedup
I1203 02:22:56.621400 140104912262912 hlog.py:24] # --nobuild_comp_table
I1203 02:22:56.621471 140104912262912 hlog.py:24] # --semparse_split=query
I1203 02:22:56.621543 140104912262912 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 02:22:56.621615 140104912262912 hlog.py:24] # --semparse_mrl=logic
I1203 02:22:56.621687 140104912262912 hlog.py:24] # --val_fold=8
I1203 02:22:56.621758 140104912262912 hlog.py:24] # --test_fold=9
I1203 02:22:56.621830 140104912262912 hlog.py:24] # --n_emb=64
I1203 02:22:56.621902 140104912262912 hlog.py:24] # --n_enc=512
I1203 02:22:56.621974 140104912262912 hlog.py:24] # --dropout=0.5
I1203 02:22:56.622045 140104912262912 hlog.py:24] # --copy_sup
I1203 02:22:56.622117 140104912262912 hlog.py:24] # --n_epochs=150
I1203 02:22:56.622189 140104912262912 hlog.py:24] # --n_epoch_batches=32
I1203 02:22:56.622261 140104912262912 hlog.py:24] # --n_batch=64
I1203 02:22:56.622332 140104912262912 hlog.py:24] # --lr=0.001
I1203 02:22:56.622404 140104912262912 hlog.py:24] # --clip=1.0
I1203 02:22:56.622476 140104912262912 hlog.py:24] # --sched_factor=0.5
I1203 02:22:56.622547 140104912262912 hlog.py:24] # --norun_with_pdb
I1203 02:22:56.622619 140104912262912 hlog.py:24] # --nopdb_post_mortem
I1203 02:22:56.622691 140104912262912 hlog.py:24] # --norun_with_profiling
I1203 02:22:56.622763 140104912262912 hlog.py:24] # --use_cprofile_for_profiling
I1203 02:22:56.622835 140104912262912 hlog.py:24] # --noonly_check_args
I1203 02:22:56.622907 140104912262912 hlog.py:24] # --aug_ratio=0.0
I1203 02:22:56.622978 140104912262912 hlog.py:24] # --noinvert
I1203 02:22:56.623050 140104912262912 hlog.py:24] # --nohelp
I1203 02:22:56.623122 140104912262912 hlog.py:24] # --nohelp
I1203 02:22:56.623193 140104912262912 hlog.py:24] # --nohelpshort
I1203 02:22:56.623265 140104912262912 hlog.py:24] # --nohelpfull
I1203 02:22:56.623336 140104912262912 hlog.py:24] # --nohelpxml
I1203 02:22:56.623427 140104912262912 hlog.py:24] # 
I1203 02:22:56.645990 140104912262912 hlog.py:32] train 543
I1203 02:22:56.646096 140104912262912 hlog.py:32] aug 0
I1203 02:23:12.701981 140104912262912 hlog.py:32] train/00000/loss 3.6610
I1203 02:23:24.931025 140104912262912 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 02:23:26.875159 140104912262912 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 02:23:26.875864 140104912262912 hlog.py:18] train/00000{26.38s}
I1203 02:23:38.312318 140104912262912 hlog.py:32] train/00001/loss 1.2103
I1203 02:23:46.941096 140104912262912 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 02:23:48.454190 140104912262912 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 02:23:48.454819 140104912262912 hlog.py:18] train/00001{21.58s}
I1203 02:24:01.076976 140104912262912 hlog.py:32] train/00002/loss 0.7666
I1203 02:24:04.321057 140104912262912 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 02:24:04.860164 140104912262912 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 02:24:04.860656 140104912262912 hlog.py:18] train/00002{16.41s}
I1203 02:24:16.520473 140104912262912 hlog.py:32] train/00003/loss 0.5498
I1203 02:24:19.706358 140104912262912 hlog.py:32] train/00003/eval_train/acc 0.0760
I1203 02:24:20.226016 140104912262912 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 02:24:20.226517 140104912262912 hlog.py:18] train/00003{15.37s}
I1203 02:24:33.006166 140104912262912 hlog.py:32] train/00004/loss 0.4522
I1203 02:24:37.864840 140104912262912 hlog.py:32] train/00004/eval_train/acc 0.1430
I1203 02:24:38.354737 140104912262912 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 02:24:38.355225 140104912262912 hlog.py:18] train/00004{18.13s}
I1203 02:24:49.897596 140104912262912 hlog.py:32] train/00005/loss 0.3965
I1203 02:24:53.310641 140104912262912 hlog.py:32] train/00005/eval_train/acc 0.1750
I1203 02:24:53.909219 140104912262912 hlog.py:32] train/00005/eval_val/acc 0.0068
I1203 02:24:53.909696 140104912262912 hlog.py:18] train/00005{15.55s}
I1203 02:25:06.134698 140104912262912 hlog.py:32] train/00006/loss 0.3409
I1203 02:25:11.374216 140104912262912 hlog.py:32] train/00006/eval_train/acc 0.3030
I1203 02:25:12.210267 140104912262912 hlog.py:32] train/00006/eval_val/acc 0.0270
I1203 02:25:12.210765 140104912262912 hlog.py:18] train/00006{18.30s}
I1203 02:25:25.419003 140104912262912 hlog.py:32] train/00007/loss 0.2938
I1203 02:25:30.225695 140104912262912 hlog.py:32] train/00007/eval_train/acc 0.3010
I1203 02:25:31.086679 140104912262912 hlog.py:32] train/00007/eval_val/acc 0.0068
I1203 02:25:31.087152 140104912262912 hlog.py:18] train/00007{18.88s}
I1203 02:25:43.371932 140104912262912 hlog.py:32] train/00008/loss 0.2440
I1203 02:25:47.618944 140104912262912 hlog.py:32] train/00008/eval_train/acc 0.4160
I1203 02:25:48.168605 140104912262912 hlog.py:32] train/00008/eval_val/acc 0.0135
I1203 02:25:48.169114 140104912262912 hlog.py:18] train/00008{17.08s}
I1203 02:26:00.906084 140104912262912 hlog.py:32] train/00009/loss 0.2262
I1203 02:26:04.941683 140104912262912 hlog.py:32] train/00009/eval_train/acc 0.4940
I1203 02:26:05.718352 140104912262912 hlog.py:32] train/00009/eval_val/acc 0.0270
I1203 02:26:05.830220 140104912262912 hlog.py:18] train/00009{17.66s}
I1203 02:26:18.448922 140104912262912 hlog.py:32] train/00010/loss 0.2010
I1203 02:26:22.452970 140104912262912 hlog.py:32] train/00010/eval_train/acc 0.5010
I1203 02:26:23.020133 140104912262912 hlog.py:32] train/00010/eval_val/acc 0.0676
I1203 02:26:23.020608 140104912262912 hlog.py:18] train/00010{17.19s}
I1203 02:26:34.741415 140104912262912 hlog.py:32] train/00011/loss 0.1716
I1203 02:26:38.558910 140104912262912 hlog.py:32] train/00011/eval_train/acc 0.5970
I1203 02:26:39.168955 140104912262912 hlog.py:32] train/00011/eval_val/acc 0.0946
I1203 02:26:39.169469 140104912262912 hlog.py:18] train/00011{16.15s}
I1203 02:26:50.379873 140104912262912 hlog.py:32] train/00012/loss 0.1354
I1203 02:26:54.071494 140104912262912 hlog.py:32] train/00012/eval_train/acc 0.6820
I1203 02:26:54.790978 140104912262912 hlog.py:32] train/00012/eval_val/acc 0.2162
I1203 02:26:54.791511 140104912262912 hlog.py:18] train/00012{15.62s}
I1203 02:27:08.178587 140104912262912 hlog.py:32] train/00013/loss 0.1186
I1203 02:27:11.754229 140104912262912 hlog.py:32] train/00013/eval_train/acc 0.6880
I1203 02:27:12.333038 140104912262912 hlog.py:32] train/00013/eval_val/acc 0.1689
I1203 02:27:12.333500 140104912262912 hlog.py:18] train/00013{17.54s}
I1203 02:27:24.753520 140104912262912 hlog.py:32] train/00014/loss 0.1166
I1203 02:27:28.687165 140104912262912 hlog.py:32] train/00014/eval_train/acc 0.7300
I1203 02:27:29.275725 140104912262912 hlog.py:32] train/00014/eval_val/acc 0.4054
I1203 02:27:29.276214 140104912262912 hlog.py:18] train/00014{16.94s}
I1203 02:27:41.688983 140104912262912 hlog.py:32] train/00015/loss 0.0981
I1203 02:27:45.404859 140104912262912 hlog.py:32] train/00015/eval_train/acc 0.7880
I1203 02:27:46.012879 140104912262912 hlog.py:32] train/00015/eval_val/acc 0.2838
I1203 02:27:46.013374 140104912262912 hlog.py:18] train/00015{16.74s}
I1203 02:27:57.447458 140104912262912 hlog.py:32] train/00016/loss 0.0915
I1203 02:28:01.559117 140104912262912 hlog.py:32] train/00016/eval_train/acc 0.7610
I1203 02:28:02.143061 140104912262912 hlog.py:32] train/00016/eval_val/acc 0.2973
I1203 02:28:02.143601 140104912262912 hlog.py:18] train/00016{16.13s}
I1203 02:28:13.863715 140104912262912 hlog.py:32] train/00017/loss 0.0875
I1203 02:28:17.556392 140104912262912 hlog.py:32] train/00017/eval_train/acc 0.7530
I1203 02:28:18.130957 140104912262912 hlog.py:32] train/00017/eval_val/acc 0.3041
I1203 02:28:18.131485 140104912262912 hlog.py:18] train/00017{15.99s}
I1203 02:28:29.748854 140104912262912 hlog.py:32] train/00018/loss 0.0927
I1203 02:28:33.582386 140104912262912 hlog.py:32] train/00018/eval_train/acc 0.7640
I1203 02:28:34.203780 140104912262912 hlog.py:32] train/00018/eval_val/acc 0.3176
I1203 02:28:34.204340 140104912262912 hlog.py:18] train/00018{16.07s}
I1203 02:28:46.702430 140104912262912 hlog.py:32] train/00019/loss 0.1016
I1203 02:28:50.431244 140104912262912 hlog.py:32] train/00019/eval_train/acc 0.8150
I1203 02:28:50.996281 140104912262912 hlog.py:32] train/00019/eval_val/acc 0.4257
I1203 02:28:51.029373 140104912262912 hlog.py:18] train/00019{16.82s}
I1203 02:29:02.300200 140104912262912 hlog.py:32] train/00020/loss 0.0830
I1203 02:29:06.249598 140104912262912 hlog.py:32] train/00020/eval_train/acc 0.8120
I1203 02:29:06.831988 140104912262912 hlog.py:32] train/00020/eval_val/acc 0.3581
I1203 02:29:06.832628 140104912262912 hlog.py:18] train/00020{15.80s}
I1203 02:29:19.355282 140104912262912 hlog.py:32] train/00021/loss 0.0864
I1203 02:29:23.008987 140104912262912 hlog.py:32] train/00021/eval_train/acc 0.8340
I1203 02:29:23.582495 140104912262912 hlog.py:32] train/00021/eval_val/acc 0.3514
I1203 02:29:23.582974 140104912262912 hlog.py:18] train/00021{16.75s}
I1203 02:29:37.164201 140104912262912 hlog.py:32] train/00022/loss 0.0764
I1203 02:29:40.947503 140104912262912 hlog.py:32] train/00022/eval_train/acc 0.8560
I1203 02:29:41.503986 140104912262912 hlog.py:32] train/00022/eval_val/acc 0.3851
I1203 02:29:41.504456 140104912262912 hlog.py:18] train/00022{17.92s}
I1203 02:29:53.131731 140104912262912 hlog.py:32] train/00023/loss 0.0668
I1203 02:29:56.956619 140104912262912 hlog.py:32] train/00023/eval_train/acc 0.8670
I1203 02:29:57.523437 140104912262912 hlog.py:32] train/00023/eval_val/acc 0.4189
I1203 02:29:57.524167 140104912262912 hlog.py:18] train/00023{16.02s}
I1203 02:30:09.291842 140104912262912 hlog.py:32] train/00024/loss 0.0554
I1203 02:30:13.301562 140104912262912 hlog.py:32] train/00024/eval_train/acc 0.8880
I1203 02:30:13.862679 140104912262912 hlog.py:32] train/00024/eval_val/acc 0.3514
I1203 02:30:13.863232 140104912262912 hlog.py:18] train/00024{16.34s}
I1203 02:30:25.451651 140104912262912 hlog.py:32] train/00025/loss 0.0497
I1203 02:30:29.264461 140104912262912 hlog.py:32] train/00025/eval_train/acc 0.9240
I1203 02:30:29.890687 140104912262912 hlog.py:32] train/00025/eval_val/acc 0.3986
I1203 02:30:29.891186 140104912262912 hlog.py:18] train/00025{16.03s}
I1203 02:30:42.226412 140104912262912 hlog.py:32] train/00026/loss 0.0522
I1203 02:30:45.878932 140104912262912 hlog.py:32] train/00026/eval_train/acc 0.9240
I1203 02:30:46.439312 140104912262912 hlog.py:32] train/00026/eval_val/acc 0.3986
I1203 02:30:46.439874 140104912262912 hlog.py:18] train/00026{16.55s}
I1203 02:30:57.999952 140104912262912 hlog.py:32] train/00027/loss 0.0571
I1203 02:31:01.598057 140104912262912 hlog.py:32] train/00027/eval_train/acc 0.9410
I1203 02:31:02.146174 140104912262912 hlog.py:32] train/00027/eval_val/acc 0.4595
I1203 02:31:02.146660 140104912262912 hlog.py:18] train/00027{15.71s}
I1203 02:31:14.179901 140104912262912 hlog.py:32] train/00028/loss 0.0536
I1203 02:31:18.030458 140104912262912 hlog.py:32] train/00028/eval_train/acc 0.9090
I1203 02:31:18.653171 140104912262912 hlog.py:32] train/00028/eval_val/acc 0.3919
I1203 02:31:18.653643 140104912262912 hlog.py:18] train/00028{16.51s}
I1203 02:31:32.227889 140104912262912 hlog.py:32] train/00029/loss 0.0516
I1203 02:31:36.007016 140104912262912 hlog.py:32] train/00029/eval_train/acc 0.9380
I1203 02:31:36.535288 140104912262912 hlog.py:32] train/00029/eval_val/acc 0.5068
I1203 02:31:36.566099 140104912262912 hlog.py:18] train/00029{17.91s}
I1203 02:31:48.163271 140104912262912 hlog.py:32] train/00030/loss 0.0508
I1203 02:31:51.897001 140104912262912 hlog.py:32] train/00030/eval_train/acc 0.9230
I1203 02:31:52.524219 140104912262912 hlog.py:32] train/00030/eval_val/acc 0.4662
I1203 02:31:52.524705 140104912262912 hlog.py:18] train/00030{15.96s}
I1203 02:32:03.761513 140104912262912 hlog.py:32] train/00031/loss 0.0468
I1203 02:32:07.355379 140104912262912 hlog.py:32] train/00031/eval_train/acc 0.9470
I1203 02:32:07.917748 140104912262912 hlog.py:32] train/00031/eval_val/acc 0.4595
I1203 02:32:07.918226 140104912262912 hlog.py:18] train/00031{15.39s}
I1203 02:32:20.370407 140104912262912 hlog.py:32] train/00032/loss 0.0393
I1203 02:32:24.072121 140104912262912 hlog.py:32] train/00032/eval_train/acc 0.9640
I1203 02:32:24.628180 140104912262912 hlog.py:32] train/00032/eval_val/acc 0.4189
I1203 02:32:24.628652 140104912262912 hlog.py:18] train/00032{16.71s}
I1203 02:32:36.548897 140104912262912 hlog.py:32] train/00033/loss 0.0320
I1203 02:32:40.559896 140104912262912 hlog.py:32] train/00033/eval_train/acc 0.9510
I1203 02:32:41.119084 140104912262912 hlog.py:32] train/00033/eval_val/acc 0.4595
I1203 02:32:41.119623 140104912262912 hlog.py:18] train/00033{16.49s}
I1203 02:32:53.944107 140104912262912 hlog.py:32] train/00034/loss 0.0360
I1203 02:32:57.698405 140104912262912 hlog.py:32] train/00034/eval_train/acc 0.9240
I1203 02:32:58.288789 140104912262912 hlog.py:32] train/00034/eval_val/acc 0.4459
I1203 02:32:58.289276 140104912262912 hlog.py:18] train/00034{17.17s}
I1203 02:33:09.777360 140104912262912 hlog.py:32] train/00035/loss 0.0358
I1203 02:33:13.621498 140104912262912 hlog.py:32] train/00035/eval_train/acc 0.9430
I1203 02:33:14.212855 140104912262912 hlog.py:32] train/00035/eval_val/acc 0.4662
I1203 02:33:14.213451 140104912262912 hlog.py:18] train/00035{15.92s}
I1203 02:33:25.528491 140104912262912 hlog.py:32] train/00036/loss 0.0292
I1203 02:33:29.392673 140104912262912 hlog.py:32] train/00036/eval_train/acc 0.9540
I1203 02:33:29.953234 140104912262912 hlog.py:32] train/00036/eval_val/acc 0.4662
I1203 02:33:29.953714 140104912262912 hlog.py:18] train/00036{15.74s}
I1203 02:33:42.059909 140104912262912 hlog.py:32] train/00037/loss 0.0424
I1203 02:33:46.016594 140104912262912 hlog.py:32] train/00037/eval_train/acc 0.9620
I1203 02:33:46.587878 140104912262912 hlog.py:32] train/00037/eval_val/acc 0.4189
I1203 02:33:46.588385 140104912262912 hlog.py:18] train/00037{16.63s}
I1203 02:33:59.464659 140104912262912 hlog.py:32] train/00038/loss 0.0485
I1203 02:34:03.226404 140104912262912 hlog.py:32] train/00038/eval_train/acc 0.9690
I1203 02:34:03.864321 140104912262912 hlog.py:32] train/00038/eval_val/acc 0.5068
I1203 02:34:03.864997 140104912262912 hlog.py:18] train/00038{17.28s}
I1203 02:34:15.551320 140104912262912 hlog.py:32] train/00039/loss 0.0372
I1203 02:34:19.939303 140104912262912 hlog.py:32] train/00039/eval_train/acc 0.9480
I1203 02:34:20.513182 140104912262912 hlog.py:32] train/00039/eval_val/acc 0.4054
I1203 02:34:20.545655 140104912262912 hlog.py:18] train/00039{16.68s}
I1203 02:34:34.089546 140104912262912 hlog.py:32] train/00040/loss 0.0415
I1203 02:34:38.042802 140104912262912 hlog.py:32] train/00040/eval_train/acc 0.9590
I1203 02:34:38.626253 140104912262912 hlog.py:32] train/00040/eval_val/acc 0.4257
I1203 02:34:38.626837 140104912262912 hlog.py:18] train/00040{18.08s}
I1203 02:34:50.437541 140104912262912 hlog.py:32] train/00041/loss 0.0373
I1203 02:34:54.498966 140104912262912 hlog.py:32] train/00041/eval_train/acc 0.9750
I1203 02:34:55.079721 140104912262912 hlog.py:32] train/00041/eval_val/acc 0.5135
I1203 02:34:55.080223 140104912262912 hlog.py:18] train/00041{16.45s}
I1203 02:35:07.901022 140104912262912 hlog.py:32] train/00042/loss 0.0275
I1203 02:35:11.942878 140104912262912 hlog.py:32] train/00042/eval_train/acc 0.9750
I1203 02:35:12.531657 140104912262912 hlog.py:32] train/00042/eval_val/acc 0.4932
I1203 02:35:12.532169 140104912262912 hlog.py:18] train/00042{17.45s}
I1203 02:35:23.866745 140104912262912 hlog.py:32] train/00043/loss 0.0172
I1203 02:35:27.844602 140104912262912 hlog.py:32] train/00043/eval_train/acc 0.9800
I1203 02:35:28.431907 140104912262912 hlog.py:32] train/00043/eval_val/acc 0.5000
I1203 02:35:28.432349 140104912262912 hlog.py:18] train/00043{15.90s}
I1203 02:35:40.746503 140104912262912 hlog.py:32] train/00044/loss 0.0154
I1203 02:35:44.817132 140104912262912 hlog.py:32] train/00044/eval_train/acc 0.9880
I1203 02:35:45.376210 140104912262912 hlog.py:32] train/00044/eval_val/acc 0.4797
I1203 02:35:45.376714 140104912262912 hlog.py:18] train/00044{16.94s}
I1203 02:35:58.361968 140104912262912 hlog.py:32] train/00045/loss 0.0139
I1203 02:36:02.569950 140104912262912 hlog.py:32] train/00045/eval_train/acc 0.9940
I1203 02:36:03.125745 140104912262912 hlog.py:32] train/00045/eval_val/acc 0.5068
I1203 02:36:03.126258 140104912262912 hlog.py:18] train/00045{17.75s}
I1203 02:36:16.980258 140104912262912 hlog.py:32] train/00046/loss 0.0147
I1203 02:36:20.742050 140104912262912 hlog.py:32] train/00046/eval_train/acc 0.9790
I1203 02:36:21.283154 140104912262912 hlog.py:32] train/00046/eval_val/acc 0.5000
I1203 02:36:21.283639 140104912262912 hlog.py:18] train/00046{18.16s}
I1203 02:36:33.057982 140104912262912 hlog.py:32] train/00047/loss 0.0141
I1203 02:36:36.987847 140104912262912 hlog.py:32] train/00047/eval_train/acc 0.9970
I1203 02:36:37.581887 140104912262912 hlog.py:32] train/00047/eval_val/acc 0.5068
I1203 02:36:37.582390 140104912262912 hlog.py:18] train/00047{16.30s}
I1203 02:36:49.281838 140104912262912 hlog.py:32] train/00048/loss 0.0126
I1203 02:36:52.962299 140104912262912 hlog.py:32] train/00048/eval_train/acc 0.9940
I1203 02:36:53.540056 140104912262912 hlog.py:32] train/00048/eval_val/acc 0.5068
I1203 02:36:53.540508 140104912262912 hlog.py:18] train/00048{15.96s}
I1203 02:37:05.424864 140104912262912 hlog.py:32] train/00049/loss 0.0123
I1203 02:37:09.162341 140104912262912 hlog.py:32] train/00049/eval_train/acc 0.9970
I1203 02:37:09.731373 140104912262912 hlog.py:32] train/00049/eval_val/acc 0.5203
I1203 02:37:09.762655 140104912262912 hlog.py:18] train/00049{16.22s}
I1203 02:37:20.818010 140104912262912 hlog.py:32] train/00050/loss 0.0116
I1203 02:37:24.643975 140104912262912 hlog.py:32] train/00050/eval_train/acc 0.9910
I1203 02:37:25.225895 140104912262912 hlog.py:32] train/00050/eval_val/acc 0.4932
I1203 02:37:25.226386 140104912262912 hlog.py:18] train/00050{15.46s}
I1203 02:37:36.930870 140104912262912 hlog.py:32] train/00051/loss 0.0121
I1203 02:37:40.779819 140104912262912 hlog.py:32] train/00051/eval_train/acc 0.9930
I1203 02:37:41.389952 140104912262912 hlog.py:32] train/00051/eval_val/acc 0.5203
I1203 02:37:41.390447 140104912262912 hlog.py:18] train/00051{16.16s}
I1203 02:37:53.753371 140104912262912 hlog.py:32] train/00052/loss 0.0108
I1203 02:37:57.705238 140104912262912 hlog.py:32] train/00052/eval_train/acc 0.9910
I1203 02:37:58.282099 140104912262912 hlog.py:32] train/00052/eval_val/acc 0.5676
I1203 02:37:58.282587 140104912262912 hlog.py:18] train/00052{16.89s}
I1203 02:38:09.924761 140104912262912 hlog.py:32] train/00053/loss 0.0104
I1203 02:38:13.560340 140104912262912 hlog.py:32] train/00053/eval_train/acc 0.9940
I1203 02:38:14.128588 140104912262912 hlog.py:32] train/00053/eval_val/acc 0.5405
I1203 02:38:14.129072 140104912262912 hlog.py:18] train/00053{15.85s}
I1203 02:38:26.047514 140104912262912 hlog.py:32] train/00054/loss 0.0104
I1203 02:38:29.889256 140104912262912 hlog.py:32] train/00054/eval_train/acc 0.9900
I1203 02:38:30.433231 140104912262912 hlog.py:32] train/00054/eval_val/acc 0.5338
I1203 02:38:30.433738 140104912262912 hlog.py:18] train/00054{16.30s}
I1203 02:38:42.812246 140104912262912 hlog.py:32] train/00055/loss 0.0095
I1203 02:38:46.528744 140104912262912 hlog.py:32] train/00055/eval_train/acc 0.9910
I1203 02:38:47.069883 140104912262912 hlog.py:32] train/00055/eval_val/acc 0.5676
I1203 02:38:47.070393 140104912262912 hlog.py:18] train/00055{16.64s}
I1203 02:39:00.190860 140104912262912 hlog.py:32] train/00056/loss 0.0076
I1203 02:39:04.059890 140104912262912 hlog.py:32] train/00056/eval_train/acc 0.9920
I1203 02:39:04.654191 140104912262912 hlog.py:32] train/00056/eval_val/acc 0.5203
I1203 02:39:04.654694 140104912262912 hlog.py:18] train/00056{17.58s}
I1203 02:39:16.485713 140104912262912 hlog.py:32] train/00057/loss 0.0085
I1203 02:39:20.368285 140104912262912 hlog.py:32] train/00057/eval_train/acc 0.9980
I1203 02:39:20.951936 140104912262912 hlog.py:32] train/00057/eval_val/acc 0.5338
I1203 02:39:20.952413 140104912262912 hlog.py:18] train/00057{16.30s}
I1203 02:39:32.256775 140104912262912 hlog.py:32] train/00058/loss 0.0078
I1203 02:39:36.375841 140104912262912 hlog.py:32] train/00058/eval_train/acc 0.9920
I1203 02:39:36.975077 140104912262912 hlog.py:32] train/00058/eval_val/acc 0.4797
I1203 02:39:36.975589 140104912262912 hlog.py:18] train/00058{16.02s}
I1203 02:39:49.933920 140104912262912 hlog.py:32] train/00059/loss 0.0115
I1203 02:39:54.282044 140104912262912 hlog.py:32] train/00059/eval_train/acc 0.9880
I1203 02:39:54.908738 140104912262912 hlog.py:32] train/00059/eval_val/acc 0.5000
I1203 02:39:54.945079 140104912262912 hlog.py:18] train/00059{17.97s}
I1203 02:40:08.395891 140104912262912 hlog.py:32] train/00060/loss 0.0141
I1203 02:40:11.985641 140104912262912 hlog.py:32] train/00060/eval_train/acc 0.9950
I1203 02:40:12.548078 140104912262912 hlog.py:32] train/00060/eval_val/acc 0.5338
I1203 02:40:12.548569 140104912262912 hlog.py:18] train/00060{17.60s}
I1203 02:40:24.580638 140104912262912 hlog.py:32] train/00061/loss 0.0109
I1203 02:40:28.707933 140104912262912 hlog.py:32] train/00061/eval_train/acc 0.9750
I1203 02:40:29.316061 140104912262912 hlog.py:32] train/00061/eval_val/acc 0.5000
I1203 02:40:29.316576 140104912262912 hlog.py:18] train/00061{16.77s}
I1203 02:40:42.123936 140104912262912 hlog.py:32] train/00062/loss 0.0140
I1203 02:40:45.858286 140104912262912 hlog.py:32] train/00062/eval_train/acc 0.9920
I1203 02:40:46.469161 140104912262912 hlog.py:32] train/00062/eval_val/acc 0.4865
I1203 02:40:46.469664 140104912262912 hlog.py:18] train/00062{17.15s}
I1203 02:40:59.329868 140104912262912 hlog.py:32] train/00063/loss 0.0140
I1203 02:41:03.528799 140104912262912 hlog.py:32] train/00063/eval_train/acc 0.9910
I1203 02:41:04.159001 140104912262912 hlog.py:32] train/00063/eval_val/acc 0.5405
I1203 02:41:04.159640 140104912262912 hlog.py:18] train/00063{17.69s}
I1203 02:41:15.961957 140104912262912 hlog.py:32] train/00064/loss 0.0084
I1203 02:41:19.831855 140104912262912 hlog.py:32] train/00064/eval_train/acc 1.0000
I1203 02:41:20.418092 140104912262912 hlog.py:32] train/00064/eval_val/acc 0.5338
I1203 02:41:20.418745 140104912262912 hlog.py:18] train/00064{16.26s}
I1203 02:41:32.470561 140104912262912 hlog.py:32] train/00065/loss 0.0074
I1203 02:41:36.468318 140104912262912 hlog.py:32] train/00065/eval_train/acc 0.9980
I1203 02:41:37.033690 140104912262912 hlog.py:32] train/00065/eval_val/acc 0.5608
I1203 02:41:37.034138 140104912262912 hlog.py:18] train/00065{16.62s}
I1203 02:41:50.819006 140104912262912 hlog.py:32] train/00066/loss 0.0072
I1203 02:41:54.448670 140104912262912 hlog.py:32] train/00066/eval_train/acc 0.9970
I1203 02:41:55.020540 140104912262912 hlog.py:32] train/00066/eval_val/acc 0.5743
I1203 02:41:55.020938 140104912262912 hlog.py:18] train/00066{17.99s}
I1203 02:42:07.010273 140104912262912 hlog.py:32] train/00067/loss 0.0071
I1203 02:42:10.957818 140104912262912 hlog.py:32] train/00067/eval_train/acc 0.9960
I1203 02:42:11.547981 140104912262912 hlog.py:32] train/00067/eval_val/acc 0.5473
I1203 02:42:11.548476 140104912262912 hlog.py:18] train/00067{16.53s}
I1203 02:42:23.596095 140104912262912 hlog.py:32] train/00068/loss 0.0071
I1203 02:42:27.472615 140104912262912 hlog.py:32] train/00068/eval_train/acc 0.9980
I1203 02:42:28.041459 140104912262912 hlog.py:32] train/00068/eval_val/acc 0.5405
I1203 02:42:28.041959 140104912262912 hlog.py:18] train/00068{16.49s}
I1203 02:42:39.619953 140104912262912 hlog.py:32] train/00069/loss 0.0052
I1203 02:42:43.512246 140104912262912 hlog.py:32] train/00069/eval_train/acc 0.9970
I1203 02:42:44.098543 140104912262912 hlog.py:32] train/00069/eval_val/acc 0.5203
I1203 02:42:44.256682 140104912262912 hlog.py:18] train/00069{16.21s}
I1203 02:42:57.143094 140104912262912 hlog.py:32] train/00070/loss 0.0057
I1203 02:43:01.026987 140104912262912 hlog.py:32] train/00070/eval_train/acc 0.9980
I1203 02:43:01.671801 140104912262912 hlog.py:32] train/00070/eval_val/acc 0.5068
I1203 02:43:01.672310 140104912262912 hlog.py:18] train/00070{17.42s}
I1203 02:43:13.560409 140104912262912 hlog.py:32] train/00071/loss 0.0060
I1203 02:43:17.575030 140104912262912 hlog.py:32] train/00071/eval_train/acc 0.9980
I1203 02:43:18.159837 140104912262912 hlog.py:32] train/00071/eval_val/acc 0.5135
I1203 02:43:18.160351 140104912262912 hlog.py:18] train/00071{16.49s}
I1203 02:43:28.797942 140104912262912 hlog.py:32] train/00072/loss 0.0046
I1203 02:43:32.344577 140104912262912 hlog.py:32] train/00072/eval_train/acc 0.9990
I1203 02:43:32.937590 140104912262912 hlog.py:32] train/00072/eval_val/acc 0.5135
I1203 02:43:32.938054 140104912262912 hlog.py:18] train/00072{14.78s}
I1203 02:43:44.895113 140104912262912 hlog.py:32] train/00073/loss 0.0046
I1203 02:43:49.080985 140104912262912 hlog.py:32] train/00073/eval_train/acc 1.0000
I1203 02:43:49.664936 140104912262912 hlog.py:32] train/00073/eval_val/acc 0.5270
I1203 02:43:49.665451 140104912262912 hlog.py:18] train/00073{16.73s}
I1203 02:44:00.880044 140104912262912 hlog.py:32] train/00074/loss 0.0045
I1203 02:44:04.612273 140104912262912 hlog.py:32] train/00074/eval_train/acc 0.9990
I1203 02:44:05.230073 140104912262912 hlog.py:32] train/00074/eval_val/acc 0.5203
I1203 02:44:05.230572 140104912262912 hlog.py:18] train/00074{15.57s}
I1203 02:44:16.500545 140104912262912 hlog.py:32] train/00075/loss 0.0046
I1203 02:44:20.441354 140104912262912 hlog.py:32] train/00075/eval_train/acc 1.0000
I1203 02:44:21.057705 140104912262912 hlog.py:32] train/00075/eval_val/acc 0.5270
I1203 02:44:21.058149 140104912262912 hlog.py:18] train/00075{15.83s}
I1203 02:44:32.748053 140104912262912 hlog.py:32] train/00076/loss 0.0045
I1203 02:44:36.648166 140104912262912 hlog.py:32] train/00076/eval_train/acc 0.9960
I1203 02:44:37.281209 140104912262912 hlog.py:32] train/00076/eval_val/acc 0.5270
I1203 02:44:37.281888 140104912262912 hlog.py:18] train/00076{16.22s}
I1203 02:44:49.535371 140104912262912 hlog.py:32] train/00077/loss 0.0045
I1203 02:44:53.274003 140104912262912 hlog.py:32] train/00077/eval_train/acc 1.0000
I1203 02:44:53.912330 140104912262912 hlog.py:32] train/00077/eval_val/acc 0.5135
I1203 02:44:53.912800 140104912262912 hlog.py:18] train/00077{16.63s}
I1203 02:45:04.871968 140104912262912 hlog.py:32] train/00078/loss 0.0039
I1203 02:45:08.857906 140104912262912 hlog.py:32] train/00078/eval_train/acc 1.0000
I1203 02:45:09.469360 140104912262912 hlog.py:32] train/00078/eval_val/acc 0.5203
I1203 02:45:09.469818 140104912262912 hlog.py:18] train/00078{15.56s}
I1203 02:45:21.552892 140104912262912 hlog.py:32] train/00079/loss 0.0045
I1203 02:45:25.373199 140104912262912 hlog.py:32] train/00079/eval_train/acc 1.0000
I1203 02:45:25.978641 140104912262912 hlog.py:32] train/00079/eval_val/acc 0.5203
I1203 02:45:26.008467 140104912262912 hlog.py:18] train/00079{16.54s}
I1203 02:45:38.786857 140104912262912 hlog.py:32] train/00080/loss 0.0042
I1203 02:45:42.497039 140104912262912 hlog.py:32] train/00080/eval_train/acc 1.0000
I1203 02:45:43.105725 140104912262912 hlog.py:32] train/00080/eval_val/acc 0.5203
I1203 02:45:43.106219 140104912262912 hlog.py:18] train/00080{17.10s}
I1203 02:45:56.056052 140104912262912 hlog.py:32] train/00081/loss 0.0039
I1203 02:45:59.773284 140104912262912 hlog.py:32] train/00081/eval_train/acc 1.0000
I1203 02:46:00.397136 140104912262912 hlog.py:32] train/00081/eval_val/acc 0.5203
I1203 02:46:00.397799 140104912262912 hlog.py:18] train/00081{17.29s}
I1203 02:46:12.708389 140104912262912 hlog.py:32] train/00082/loss 0.0040
I1203 02:46:16.625574 140104912262912 hlog.py:32] train/00082/eval_train/acc 1.0000
I1203 02:46:17.226168 140104912262912 hlog.py:32] train/00082/eval_val/acc 0.5270
I1203 02:46:17.226679 140104912262912 hlog.py:18] train/00082{16.83s}
I1203 02:46:28.902612 140104912262912 hlog.py:32] train/00083/loss 0.0045
I1203 02:46:32.958400 140104912262912 hlog.py:32] train/00083/eval_train/acc 1.0000
I1203 02:46:33.602988 140104912262912 hlog.py:32] train/00083/eval_val/acc 0.5270
I1203 02:46:33.603512 140104912262912 hlog.py:18] train/00083{16.38s}
I1203 02:46:45.874381 140104912262912 hlog.py:32] train/00084/loss 0.0039
I1203 02:46:49.633061 140104912262912 hlog.py:32] train/00084/eval_train/acc 1.0000
I1203 02:46:50.199678 140104912262912 hlog.py:32] train/00084/eval_val/acc 0.5270
I1203 02:46:50.200204 140104912262912 hlog.py:18] train/00084{16.60s}
I1203 02:47:01.869717 140104912262912 hlog.py:32] train/00085/loss 0.0036
I1203 02:47:05.506088 140104912262912 hlog.py:32] train/00085/eval_train/acc 1.0000
I1203 02:47:06.106635 140104912262912 hlog.py:32] train/00085/eval_val/acc 0.5203
I1203 02:47:06.107104 140104912262912 hlog.py:18] train/00085{15.91s}
I1203 02:47:18.107830 140104912262912 hlog.py:32] train/00086/loss 0.0038
I1203 02:47:21.932281 140104912262912 hlog.py:32] train/00086/eval_train/acc 1.0000
I1203 02:47:22.576591 140104912262912 hlog.py:32] train/00086/eval_val/acc 0.5270
I1203 02:47:22.577086 140104912262912 hlog.py:18] train/00086{16.47s}
I1203 02:47:34.061573 140104912262912 hlog.py:32] train/00087/loss 0.0039
I1203 02:47:38.012616 140104912262912 hlog.py:32] train/00087/eval_train/acc 0.9990
I1203 02:47:38.612405 140104912262912 hlog.py:32] train/00087/eval_val/acc 0.5203
I1203 02:47:38.612874 140104912262912 hlog.py:18] train/00087{16.04s}
I1203 02:47:50.073676 140104912262912 hlog.py:32] train/00088/loss 0.0034
I1203 02:47:53.750536 140104912262912 hlog.py:32] train/00088/eval_train/acc 0.9990
I1203 02:47:54.369369 140104912262912 hlog.py:32] train/00088/eval_val/acc 0.5135
I1203 02:47:54.369909 140104912262912 hlog.py:18] train/00088{15.76s}
I1203 02:48:06.812834 140104912262912 hlog.py:32] train/00089/loss 0.0033
I1203 02:48:10.699619 140104912262912 hlog.py:32] train/00089/eval_train/acc 1.0000
I1203 02:48:11.312771 140104912262912 hlog.py:32] train/00089/eval_val/acc 0.5203
I1203 02:48:11.360390 140104912262912 hlog.py:18] train/00089{16.99s}
I1203 02:48:23.164788 140104912262912 hlog.py:32] train/00090/loss 0.0035
I1203 02:48:27.205127 140104912262912 hlog.py:32] train/00090/eval_train/acc 1.0000
I1203 02:48:27.783764 140104912262912 hlog.py:32] train/00090/eval_val/acc 0.5203
I1203 02:48:27.784265 140104912262912 hlog.py:18] train/00090{16.42s}
I1203 02:48:39.948061 140104912262912 hlog.py:32] train/00091/loss 0.0036
I1203 02:48:44.122344 140104912262912 hlog.py:32] train/00091/eval_train/acc 1.0000
I1203 02:48:44.774491 140104912262912 hlog.py:32] train/00091/eval_val/acc 0.5135
I1203 02:48:44.775053 140104912262912 hlog.py:18] train/00091{16.99s}
I1203 02:48:56.605800 140104912262912 hlog.py:32] train/00092/loss 0.0032
I1203 02:49:00.669925 140104912262912 hlog.py:32] train/00092/eval_train/acc 1.0000
I1203 02:49:01.270007 140104912262912 hlog.py:32] train/00092/eval_val/acc 0.5203
I1203 02:49:01.270529 140104912262912 hlog.py:18] train/00092{16.50s}
I1203 02:49:13.897015 140104912262912 hlog.py:32] train/00093/loss 0.0038
I1203 02:49:17.525593 140104912262912 hlog.py:32] train/00093/eval_train/acc 1.0000
I1203 02:49:18.103037 140104912262912 hlog.py:32] train/00093/eval_val/acc 0.5135
I1203 02:49:18.103599 140104912262912 hlog.py:18] train/00093{16.83s}
I1203 02:49:30.299435 140104912262912 hlog.py:32] train/00094/loss 0.0037
I1203 02:49:34.367975 140104912262912 hlog.py:32] train/00094/eval_train/acc 1.0000
I1203 02:49:34.942188 140104912262912 hlog.py:32] train/00094/eval_val/acc 0.5203
I1203 02:49:34.942703 140104912262912 hlog.py:18] train/00094{16.84s}
I1203 02:49:46.785451 140104912262912 hlog.py:32] train/00095/loss 0.0035
I1203 02:49:50.654001 140104912262912 hlog.py:32] train/00095/eval_train/acc 1.0000
I1203 02:49:51.236126 140104912262912 hlog.py:32] train/00095/eval_val/acc 0.5203
I1203 02:49:51.236657 140104912262912 hlog.py:18] train/00095{16.29s}
I1203 02:50:03.583275 140104912262912 hlog.py:32] train/00096/loss 0.0032
I1203 02:50:07.271175 140104912262912 hlog.py:32] train/00096/eval_train/acc 1.0000
I1203 02:50:07.848602 140104912262912 hlog.py:32] train/00096/eval_val/acc 0.5203
I1203 02:50:07.849063 140104912262912 hlog.py:18] train/00096{16.61s}
I1203 02:50:20.176177 140104912262912 hlog.py:32] train/00097/loss 0.0032
I1203 02:50:23.871013 140104912262912 hlog.py:32] train/00097/eval_train/acc 0.9970
I1203 02:50:24.444106 140104912262912 hlog.py:32] train/00097/eval_val/acc 0.5135
I1203 02:50:24.444602 140104912262912 hlog.py:18] train/00097{16.60s}
I1203 02:50:36.027212 140104912262912 hlog.py:32] train/00098/loss 0.0032
I1203 02:50:40.088409 140104912262912 hlog.py:32] train/00098/eval_train/acc 1.0000
I1203 02:50:40.687079 140104912262912 hlog.py:32] train/00098/eval_val/acc 0.5068
I1203 02:50:40.687605 140104912262912 hlog.py:18] train/00098{16.24s}
I1203 02:50:53.934129 140104912262912 hlog.py:32] train/00099/loss 0.0036
I1203 02:50:57.756437 140104912262912 hlog.py:32] train/00099/eval_train/acc 1.0000
I1203 02:50:58.353076 140104912262912 hlog.py:32] train/00099/eval_val/acc 0.5068
I1203 02:50:58.531153 140104912262912 hlog.py:18] train/00099{17.84s}
I1203 02:51:10.645053 140104912262912 hlog.py:32] train/00100/loss 0.0032
I1203 02:51:14.530556 140104912262912 hlog.py:32] train/00100/eval_train/acc 1.0000
I1203 02:51:15.124414 140104912262912 hlog.py:32] train/00100/eval_val/acc 0.5068
I1203 02:51:15.124896 140104912262912 hlog.py:18] train/00100{16.59s}
I1203 02:51:27.278690 140104912262912 hlog.py:32] train/00101/loss 0.0038
I1203 02:51:31.110755 140104912262912 hlog.py:32] train/00101/eval_train/acc 1.0000
I1203 02:51:31.725007 140104912262912 hlog.py:32] train/00101/eval_val/acc 0.5135
I1203 02:51:31.725507 140104912262912 hlog.py:18] train/00101{16.60s}
I1203 02:51:42.843984 140104912262912 hlog.py:32] train/00102/loss 0.0027
I1203 02:51:46.710225 140104912262912 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 02:51:47.309325 140104912262912 hlog.py:32] train/00102/eval_val/acc 0.5203
I1203 02:51:47.309806 140104912262912 hlog.py:18] train/00102{15.58s}
I1203 02:51:59.965558 140104912262912 hlog.py:32] train/00103/loss 0.0036
I1203 02:52:03.890859 140104912262912 hlog.py:32] train/00103/eval_train/acc 1.0000
I1203 02:52:04.486148 140104912262912 hlog.py:32] train/00103/eval_val/acc 0.5203
I1203 02:52:04.486644 140104912262912 hlog.py:18] train/00103{17.18s}
I1203 02:52:17.927894 140104912262912 hlog.py:32] train/00104/loss 0.0032
I1203 02:52:21.622103 140104912262912 hlog.py:32] train/00104/eval_train/acc 1.0000
I1203 02:52:22.218914 140104912262912 hlog.py:32] train/00104/eval_val/acc 0.5203
I1203 02:52:22.219375 140104912262912 hlog.py:18] train/00104{17.73s}
I1203 02:52:35.607287 140104912262912 hlog.py:32] train/00105/loss 0.0028
I1203 02:52:39.612178 140104912262912 hlog.py:32] train/00105/eval_train/acc 1.0000
I1203 02:52:40.219326 140104912262912 hlog.py:32] train/00105/eval_val/acc 0.5135
I1203 02:52:40.219969 140104912262912 hlog.py:18] train/00105{18.00s}
I1203 02:52:52.674973 140104912262912 hlog.py:32] train/00106/loss 0.0034
I1203 02:52:56.691831 140104912262912 hlog.py:32] train/00106/eval_train/acc 1.0000
I1203 02:52:57.299551 140104912262912 hlog.py:32] train/00106/eval_val/acc 0.5270
I1203 02:52:57.300037 140104912262912 hlog.py:18] train/00106{17.08s}
I1203 02:53:09.613650 140104912262912 hlog.py:32] train/00107/loss 0.0029
I1203 02:53:13.586905 140104912262912 hlog.py:32] train/00107/eval_train/acc 1.0000
I1203 02:53:14.170857 140104912262912 hlog.py:32] train/00107/eval_val/acc 0.5203
I1203 02:53:14.171348 140104912262912 hlog.py:18] train/00107{16.87s}
I1203 02:53:26.018524 140104912262912 hlog.py:32] train/00108/loss 0.0032
I1203 02:53:29.604810 140104912262912 hlog.py:32] train/00108/eval_train/acc 1.0000
I1203 02:53:30.199285 140104912262912 hlog.py:32] train/00108/eval_val/acc 0.5270
I1203 02:53:30.199805 140104912262912 hlog.py:18] train/00108{16.03s}
I1203 02:53:41.988806 140104912262912 hlog.py:32] train/00109/loss 0.0030
I1203 02:53:46.061353 140104912262912 hlog.py:32] train/00109/eval_train/acc 1.0000
I1203 02:53:46.635970 140104912262912 hlog.py:32] train/00109/eval_val/acc 0.5270
I1203 02:53:46.667811 140104912262912 hlog.py:18] train/00109{16.47s}
I1203 02:53:59.586792 140104912262912 hlog.py:32] train/00110/loss 0.0033
I1203 02:54:03.567844 140104912262912 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 02:54:04.116701 140104912262912 hlog.py:32] train/00110/eval_val/acc 0.5203
I1203 02:54:04.117244 140104912262912 hlog.py:18] train/00110{17.45s}
I1203 02:54:16.651704 140104912262912 hlog.py:32] train/00111/loss 0.0034
I1203 02:54:20.774570 140104912262912 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 02:54:21.329061 140104912262912 hlog.py:32] train/00111/eval_val/acc 0.5270
I1203 02:54:21.329580 140104912262912 hlog.py:18] train/00111{17.21s}
I1203 02:54:32.627366 140104912262912 hlog.py:32] train/00112/loss 0.0029
I1203 02:54:36.853619 140104912262912 hlog.py:32] train/00112/eval_train/acc 1.0000
I1203 02:54:37.396753 140104912262912 hlog.py:32] train/00112/eval_val/acc 0.5270
I1203 02:54:37.397226 140104912262912 hlog.py:18] train/00112{16.07s}
I1203 02:54:49.114239 140104912262912 hlog.py:32] train/00113/loss 0.0027
I1203 02:54:53.492030 140104912262912 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 02:54:54.046449 140104912262912 hlog.py:32] train/00113/eval_val/acc 0.5270
I1203 02:54:54.046950 140104912262912 hlog.py:18] train/00113{16.65s}
I1203 02:55:06.287497 140104912262912 hlog.py:32] train/00114/loss 0.0026
I1203 02:55:10.320981 140104912262912 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 02:55:10.905015 140104912262912 hlog.py:32] train/00114/eval_val/acc 0.5203
I1203 02:55:10.905650 140104912262912 hlog.py:18] train/00114{16.86s}
I1203 02:55:22.999169 140104912262912 hlog.py:32] train/00115/loss 0.0029
I1203 02:55:26.779176 140104912262912 hlog.py:32] train/00115/eval_train/acc 1.0000
I1203 02:55:27.354260 140104912262912 hlog.py:32] train/00115/eval_val/acc 0.5270
I1203 02:55:27.354739 140104912262912 hlog.py:18] train/00115{16.45s}
I1203 02:55:39.669636 140104912262912 hlog.py:32] train/00116/loss 0.0027
I1203 02:55:43.407814 140104912262912 hlog.py:32] train/00116/eval_train/acc 1.0000
I1203 02:55:43.967912 140104912262912 hlog.py:32] train/00116/eval_val/acc 0.5203
I1203 02:55:43.968396 140104912262912 hlog.py:18] train/00116{16.61s}
I1203 02:55:56.508515 140104912262912 hlog.py:32] train/00117/loss 0.0030
I1203 02:56:00.596504 140104912262912 hlog.py:32] train/00117/eval_train/acc 1.0000
I1203 02:56:01.157265 140104912262912 hlog.py:32] train/00117/eval_val/acc 0.5203
I1203 02:56:01.157753 140104912262912 hlog.py:18] train/00117{17.19s}
I1203 02:56:12.833694 140104912262912 hlog.py:32] train/00118/loss 0.0028
I1203 02:56:16.655381 140104912262912 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 02:56:17.238314 140104912262912 hlog.py:32] train/00118/eval_val/acc 0.5270
I1203 02:56:17.238837 140104912262912 hlog.py:18] train/00118{16.08s}
I1203 02:56:29.379837 140104912262912 hlog.py:32] train/00119/loss 0.0028
I1203 02:56:33.330305 140104912262912 hlog.py:32] train/00119/eval_train/acc 1.0000
I1203 02:56:33.904283 140104912262912 hlog.py:32] train/00119/eval_val/acc 0.5270
I1203 02:56:33.935818 140104912262912 hlog.py:18] train/00119{16.70s}
I1203 02:56:46.927867 140104912262912 hlog.py:32] train/00120/loss 0.0031
I1203 02:56:50.644822 140104912262912 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 02:56:51.221445 140104912262912 hlog.py:32] train/00120/eval_val/acc 0.5203
I1203 02:56:51.221921 140104912262912 hlog.py:18] train/00120{17.29s}
I1203 02:57:03.245111 140104912262912 hlog.py:32] train/00121/loss 0.0024
I1203 02:57:07.369590 140104912262912 hlog.py:32] train/00121/eval_train/acc 1.0000
I1203 02:57:07.946721 140104912262912 hlog.py:32] train/00121/eval_val/acc 0.5270
I1203 02:57:07.947351 140104912262912 hlog.py:18] train/00121{16.73s}
I1203 02:57:19.469869 140104912262912 hlog.py:32] train/00122/loss 0.0027
I1203 02:57:23.497599 140104912262912 hlog.py:32] train/00122/eval_train/acc 1.0000
I1203 02:57:24.070648 140104912262912 hlog.py:32] train/00122/eval_val/acc 0.5203
I1203 02:57:24.071136 140104912262912 hlog.py:18] train/00122{16.12s}
I1203 02:57:36.199998 140104912262912 hlog.py:32] train/00123/loss 0.0027
I1203 02:57:39.986114 140104912262912 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 02:57:40.570070 140104912262912 hlog.py:32] train/00123/eval_val/acc 0.5270
I1203 02:57:40.570603 140104912262912 hlog.py:18] train/00123{16.50s}
I1203 02:57:53.092519 140104912262912 hlog.py:32] train/00124/loss 0.0031
I1203 02:57:56.864292 140104912262912 hlog.py:32] train/00124/eval_train/acc 1.0000
I1203 02:57:57.443054 140104912262912 hlog.py:32] train/00124/eval_val/acc 0.5270
I1203 02:57:57.443576 140104912262912 hlog.py:18] train/00124{16.87s}
I1203 02:58:09.340215 140104912262912 hlog.py:32] train/00125/loss 0.0027
I1203 02:58:13.101997 140104912262912 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 02:58:13.679964 140104912262912 hlog.py:32] train/00125/eval_val/acc 0.5270
I1203 02:58:13.680467 140104912262912 hlog.py:18] train/00125{16.24s}
I1203 02:58:25.402957 140104912262912 hlog.py:32] train/00126/loss 0.0026
I1203 02:58:29.396480 140104912262912 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 02:58:29.978138 140104912262912 hlog.py:32] train/00126/eval_val/acc 0.5270
I1203 02:58:29.978640 140104912262912 hlog.py:18] train/00126{16.30s}
I1203 02:58:41.674432 140104912262912 hlog.py:32] train/00127/loss 0.0029
I1203 02:58:45.464578 140104912262912 hlog.py:32] train/00127/eval_train/acc 1.0000
I1203 02:58:46.053622 140104912262912 hlog.py:32] train/00127/eval_val/acc 0.5270
I1203 02:58:46.054092 140104912262912 hlog.py:18] train/00127{16.08s}
I1203 02:58:58.086416 140104912262912 hlog.py:32] train/00128/loss 0.0028
I1203 02:59:01.822044 140104912262912 hlog.py:32] train/00128/eval_train/acc 1.0000
I1203 02:59:02.413117 140104912262912 hlog.py:32] train/00128/eval_val/acc 0.5270
I1203 02:59:02.413609 140104912262912 hlog.py:18] train/00128{16.36s}
I1203 02:59:15.456080 140104912262912 hlog.py:32] train/00129/loss 0.0033
I1203 02:59:19.417324 140104912262912 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 02:59:19.991770 140104912262912 hlog.py:32] train/00129/eval_val/acc 0.5270
I1203 02:59:20.174115 140104912262912 hlog.py:18] train/00129{17.76s}
I1203 02:59:33.476585 140104912262912 hlog.py:32] train/00130/loss 0.0030
I1203 02:59:37.454185 140104912262912 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 02:59:38.040728 140104912262912 hlog.py:32] train/00130/eval_val/acc 0.5203
I1203 02:59:38.041238 140104912262912 hlog.py:18] train/00130{17.87s}
I1203 02:59:50.730306 140104912262912 hlog.py:32] train/00131/loss 0.0031
I1203 02:59:54.523759 140104912262912 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 02:59:55.097167 140104912262912 hlog.py:32] train/00131/eval_val/acc 0.5203
I1203 02:59:55.097712 140104912262912 hlog.py:18] train/00131{17.06s}
I1203 03:00:06.792455 140104912262912 hlog.py:32] train/00132/loss 0.0030
I1203 03:00:10.712067 140104912262912 hlog.py:32] train/00132/eval_train/acc 1.0000
I1203 03:00:11.293118 140104912262912 hlog.py:32] train/00132/eval_val/acc 0.5270
I1203 03:00:11.293710 140104912262912 hlog.py:18] train/00132{16.20s}
I1203 03:00:23.386214 140104912262912 hlog.py:32] train/00133/loss 0.0026
I1203 03:00:27.111968 140104912262912 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 03:00:27.699921 140104912262912 hlog.py:32] train/00133/eval_val/acc 0.5270
I1203 03:00:27.700431 140104912262912 hlog.py:18] train/00133{16.41s}
I1203 03:00:39.439086 140104912262912 hlog.py:32] train/00134/loss 0.0033
I1203 03:00:43.109428 140104912262912 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 03:00:43.672914 140104912262912 hlog.py:32] train/00134/eval_val/acc 0.5270
I1203 03:00:43.673405 140104912262912 hlog.py:18] train/00134{15.97s}
I1203 03:00:55.968130 140104912262912 hlog.py:32] train/00135/loss 0.0030
I1203 03:00:59.777348 140104912262912 hlog.py:32] train/00135/eval_train/acc 1.0000
I1203 03:01:00.391223 140104912262912 hlog.py:32] train/00135/eval_val/acc 0.5270
I1203 03:01:00.391794 140104912262912 hlog.py:18] train/00135{16.72s}
I1203 03:01:12.332323 140104912262912 hlog.py:32] train/00136/loss 0.0027
I1203 03:01:16.579988 140104912262912 hlog.py:32] train/00136/eval_train/acc 1.0000
I1203 03:01:17.154954 140104912262912 hlog.py:32] train/00136/eval_val/acc 0.5270
I1203 03:01:17.155463 140104912262912 hlog.py:18] train/00136{16.76s}
I1203 03:01:28.972717 140104912262912 hlog.py:32] train/00137/loss 0.0027
I1203 03:01:32.786077 140104912262912 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 03:01:33.369808 140104912262912 hlog.py:32] train/00137/eval_val/acc 0.5270
I1203 03:01:33.370316 140104912262912 hlog.py:18] train/00137{16.21s}
I1203 03:01:46.406408 140104912262912 hlog.py:32] train/00138/loss 0.0029
I1203 03:01:50.209720 140104912262912 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 03:01:50.769733 140104912262912 hlog.py:32] train/00138/eval_val/acc 0.5270
I1203 03:01:50.770217 140104912262912 hlog.py:18] train/00138{17.40s}
I1203 03:02:02.970181 140104912262912 hlog.py:32] train/00139/loss 0.0025
I1203 03:02:06.780294 140104912262912 hlog.py:32] train/00139/eval_train/acc 1.0000
I1203 03:02:07.341933 140104912262912 hlog.py:32] train/00139/eval_val/acc 0.5270
I1203 03:02:07.373189 140104912262912 hlog.py:18] train/00139{16.60s}
I1203 03:02:19.677625 140104912262912 hlog.py:32] train/00140/loss 0.0031
I1203 03:02:23.463707 140104912262912 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 03:02:24.026813 140104912262912 hlog.py:32] train/00140/eval_val/acc 0.5270
I1203 03:02:24.027303 140104912262912 hlog.py:18] train/00140{16.65s}
I1203 03:02:35.832396 140104912262912 hlog.py:32] train/00141/loss 0.0030
I1203 03:02:39.505341 140104912262912 hlog.py:32] train/00141/eval_train/acc 1.0000
I1203 03:02:40.068960 140104912262912 hlog.py:32] train/00141/eval_val/acc 0.5270
I1203 03:02:40.069445 140104912262912 hlog.py:18] train/00141{16.04s}
I1203 03:02:51.879426 140104912262912 hlog.py:32] train/00142/loss 0.0029
I1203 03:02:55.714586 140104912262912 hlog.py:32] train/00142/eval_train/acc 1.0000
I1203 03:02:56.274819 140104912262912 hlog.py:32] train/00142/eval_val/acc 0.5270
I1203 03:02:56.275291 140104912262912 hlog.py:18] train/00142{16.21s}
I1203 03:03:08.169864 140104912262912 hlog.py:32] train/00143/loss 0.0026
I1203 03:03:12.006549 140104912262912 hlog.py:32] train/00143/eval_train/acc 1.0000
I1203 03:03:12.610527 140104912262912 hlog.py:32] train/00143/eval_val/acc 0.5270
I1203 03:03:12.611073 140104912262912 hlog.py:18] train/00143{16.34s}
I1203 03:03:25.035278 140104912262912 hlog.py:32] train/00144/loss 0.0026
I1203 03:03:29.095822 140104912262912 hlog.py:32] train/00144/eval_train/acc 1.0000
I1203 03:03:29.683355 140104912262912 hlog.py:32] train/00144/eval_val/acc 0.5270
I1203 03:03:29.683809 140104912262912 hlog.py:18] train/00144{17.07s}
I1203 03:03:41.953246 140104912262912 hlog.py:32] train/00145/loss 0.0028
I1203 03:03:45.748031 140104912262912 hlog.py:32] train/00145/eval_train/acc 1.0000
I1203 03:03:46.332580 140104912262912 hlog.py:32] train/00145/eval_val/acc 0.5270
I1203 03:03:46.333108 140104912262912 hlog.py:18] train/00145{16.65s}
I1203 03:03:58.485998 140104912262912 hlog.py:32] train/00146/loss 0.0028
I1203 03:04:02.184251 140104912262912 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 03:04:02.790523 140104912262912 hlog.py:32] train/00146/eval_val/acc 0.5270
I1203 03:04:02.791218 140104912262912 hlog.py:18] train/00146{16.46s}
I1203 03:04:15.178865 140104912262912 hlog.py:32] train/00147/loss 0.0030
I1203 03:04:19.385128 140104912262912 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 03:04:19.945654 140104912262912 hlog.py:32] train/00147/eval_val/acc 0.5270
I1203 03:04:19.946151 140104912262912 hlog.py:18] train/00147{17.15s}
I1203 03:04:31.450387 140104912262912 hlog.py:32] train/00148/loss 0.0031
I1203 03:04:35.429541 140104912262912 hlog.py:32] train/00148/eval_train/acc 1.0000
I1203 03:04:35.988419 140104912262912 hlog.py:32] train/00148/eval_val/acc 0.5270
I1203 03:04:35.988909 140104912262912 hlog.py:18] train/00148{16.04s}
I1203 03:04:48.287039 140104912262912 hlog.py:32] train/00149/loss 0.0026
I1203 03:04:52.215238 140104912262912 hlog.py:32] train/00149/eval_train/acc 1.0000
I1203 03:04:52.415557 140104912262912 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 03:04:52.415771 140104912262912 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:04:52.415870 140104912262912 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:04:52.415953 140104912262912 hlog.py:32] train/00149/eval_val/0/corr True
I1203 03:04:52.416028 140104912262912 hlog.py:32] train/00149/eval_val/0 
I1203 03:04:52.416109 140104912262912 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 03:04:52.416203 140104912262912 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 03:04:52.416297 140104912262912 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 03:04:52.416384 140104912262912 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.416485 140104912262912 hlog.py:32] train/00149/eval_val/1/corr False
I1203 03:04:52.416558 140104912262912 hlog.py:32] train/00149/eval_val/1 
I1203 03:04:52.416628 140104912262912 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 03:04:52.416712 140104912262912 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 03:04:52.416803 140104912262912 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( massachusetts , _ ) ) ) )
I1203 03:04:52.416889 140104912262912 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 03:04:52.416965 140104912262912 hlog.py:32] train/00149/eval_val/2/corr False
I1203 03:04:52.417035 140104912262912 hlog.py:32] train/00149/eval_val/2 
I1203 03:04:52.417104 140104912262912 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 03:04:52.417191 140104912262912 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 03:04:52.417281 140104912262912 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1203 03:04:52.417366 140104912262912 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:04:52.417442 140104912262912 hlog.py:32] train/00149/eval_val/3/corr False
I1203 03:04:52.417512 140104912262912 hlog.py:32] train/00149/eval_val/3 
I1203 03:04:52.417580 140104912262912 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 03:04:52.417664 140104912262912 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 03:04:52.417755 140104912262912 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1203 03:04:52.417840 140104912262912 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 03:04:52.417916 140104912262912 hlog.py:32] train/00149/eval_val/4/corr False
I1203 03:04:52.417985 140104912262912 hlog.py:32] train/00149/eval_val/4 
I1203 03:04:52.418054 140104912262912 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 03:04:52.418137 140104912262912 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 03:04:52.418227 140104912262912 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 03:04:52.418313 140104912262912 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.418388 140104912262912 hlog.py:32] train/00149/eval_val/5/corr False
I1203 03:04:52.418458 140104912262912 hlog.py:32] train/00149/eval_val/5 
I1203 03:04:52.418526 140104912262912 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 03:04:52.418610 140104912262912 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 03:04:52.418716 140104912262912 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1203 03:04:52.418802 140104912262912 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.418877 140104912262912 hlog.py:32] train/00149/eval_val/6/corr False
I1203 03:04:52.418946 140104912262912 hlog.py:32] train/00149/eval_val/6 
I1203 03:04:52.419015 140104912262912 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 03:04:52.419097 140104912262912 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 03:04:52.419187 140104912262912 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 03:04:52.419271 140104912262912 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.419346 140104912262912 hlog.py:32] train/00149/eval_val/7/corr False
I1203 03:04:52.419438 140104912262912 hlog.py:32] train/00149/eval_val/7 
I1203 03:04:52.419511 140104912262912 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 03:04:52.419598 140104912262912 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 03:04:52.419703 140104912262912 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 03:04:52.419789 140104912262912 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 03:04:52.419864 140104912262912 hlog.py:32] train/00149/eval_val/8/corr False
I1203 03:04:52.419933 140104912262912 hlog.py:32] train/00149/eval_val/8 
I1203 03:04:52.420001 140104912262912 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 03:04:52.420085 140104912262912 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 03:04:52.420175 140104912262912 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 03:04:52.420259 140104912262912 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 03:04:52.420334 140104912262912 hlog.py:32] train/00149/eval_val/9/corr False
I1203 03:04:52.420404 140104912262912 hlog.py:32] train/00149/eval_val/9 
I1203 03:04:52.420472 140104912262912 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 03:04:52.420555 140104912262912 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 03:04:52.420646 140104912262912 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 03:04:52.420730 140104912262912 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.420805 140104912262912 hlog.py:32] train/00149/eval_val/10/corr False
I1203 03:04:52.420875 140104912262912 hlog.py:32] train/00149/eval_val/10 
I1203 03:04:52.420943 140104912262912 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 03:04:52.421034 140104912262912 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 03:04:52.421133 140104912262912 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:04:52.421224 140104912262912 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:04:52.421299 140104912262912 hlog.py:32] train/00149/eval_val/11/corr True
I1203 03:04:52.421369 140104912262912 hlog.py:32] train/00149/eval_val/11 
I1203 03:04:52.421437 140104912262912 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 03:04:52.421528 140104912262912 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 03:04:52.421626 140104912262912 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 03:04:52.421722 140104912262912 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 03:04:52.421798 140104912262912 hlog.py:32] train/00149/eval_val/12/corr True
I1203 03:04:52.421868 140104912262912 hlog.py:32] train/00149/eval_val/12 
I1203 03:04:52.421936 140104912262912 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 03:04:52.422027 140104912262912 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 03:04:52.422125 140104912262912 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 03:04:52.422215 140104912262912 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 03:04:52.422291 140104912262912 hlog.py:32] train/00149/eval_val/13/corr True
I1203 03:04:52.422360 140104912262912 hlog.py:32] train/00149/eval_val/13 
I1203 03:04:52.422428 140104912262912 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 03:04:52.422518 140104912262912 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 03:04:52.422616 140104912262912 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 03:04:52.422706 140104912262912 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 03:04:52.422781 140104912262912 hlog.py:32] train/00149/eval_val/14/corr True
I1203 03:04:52.422851 140104912262912 hlog.py:32] train/00149/eval_val/14 
I1203 03:04:52.422919 140104912262912 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 03:04:52.423011 140104912262912 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 03:04:52.423109 140104912262912 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 03:04:52.423199 140104912262912 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 03:04:52.423274 140104912262912 hlog.py:32] train/00149/eval_val/15/corr True
I1203 03:04:52.423343 140104912262912 hlog.py:32] train/00149/eval_val/15 
I1203 03:04:52.423434 140104912262912 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 03:04:52.423530 140104912262912 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 03:04:52.423631 140104912262912 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:04:52.423737 140104912262912 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 03:04:52.423812 140104912262912 hlog.py:32] train/00149/eval_val/16/corr True
I1203 03:04:52.423882 140104912262912 hlog.py:32] train/00149/eval_val/16 
I1203 03:04:52.423950 140104912262912 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 03:04:52.424034 140104912262912 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 03:04:52.424129 140104912262912 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 03:04:52.424219 140104912262912 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 03:04:52.424300 140104912262912 hlog.py:32] train/00149/eval_val/17/corr False
I1203 03:04:52.424371 140104912262912 hlog.py:32] train/00149/eval_val/17 
I1203 03:04:52.424438 140104912262912 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 03:04:52.424523 140104912262912 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 03:04:52.424617 140104912262912 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1203 03:04:52.424708 140104912262912 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 03:04:52.424784 140104912262912 hlog.py:32] train/00149/eval_val/18/corr False
I1203 03:04:52.424853 140104912262912 hlog.py:32] train/00149/eval_val/18 
I1203 03:04:52.424922 140104912262912 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 03:04:52.425006 140104912262912 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 03:04:52.425100 140104912262912 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:04:52.425190 140104912262912 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 03:04:52.425266 140104912262912 hlog.py:32] train/00149/eval_val/19/corr False
I1203 03:04:52.425336 140104912262912 hlog.py:32] train/00149/eval_val/19 
I1203 03:04:52.425404 140104912262912 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 03:04:52.425489 140104912262912 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 03:04:52.425582 140104912262912 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 03:04:52.425673 140104912262912 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 03:04:52.425748 140104912262912 hlog.py:32] train/00149/eval_val/20/corr False
I1203 03:04:52.425817 140104912262912 hlog.py:32] train/00149/eval_val/20 
I1203 03:04:52.425886 140104912262912 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 03:04:52.425977 140104912262912 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 03:04:52.426075 140104912262912 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 03:04:52.426165 140104912262912 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 03:04:52.426240 140104912262912 hlog.py:32] train/00149/eval_val/21/corr True
I1203 03:04:52.426310 140104912262912 hlog.py:32] train/00149/eval_val/21 
I1203 03:04:52.426378 140104912262912 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 03:04:52.426464 140104912262912 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 03:04:52.426554 140104912262912 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1203 03:04:52.426640 140104912262912 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 03:04:52.426714 140104912262912 hlog.py:32] train/00149/eval_val/22/corr False
I1203 03:04:52.426784 140104912262912 hlog.py:32] train/00149/eval_val/22 
I1203 03:04:52.426851 140104912262912 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 03:04:52.426935 140104912262912 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 03:04:52.427027 140104912262912 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.427118 140104912262912 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 03:04:52.427193 140104912262912 hlog.py:32] train/00149/eval_val/23/corr False
I1203 03:04:52.427263 140104912262912 hlog.py:32] train/00149/eval_val/23 
I1203 03:04:52.427331 140104912262912 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 03:04:52.427436 140104912262912 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 03:04:52.427533 140104912262912 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _loc ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.427622 140104912262912 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 03:04:52.427711 140104912262912 hlog.py:32] train/00149/eval_val/24/corr False
I1203 03:04:52.427781 140104912262912 hlog.py:32] train/00149/eval_val/24 
I1203 03:04:52.427849 140104912262912 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 03:04:52.427938 140104912262912 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 03:04:52.428030 140104912262912 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:04:52.428117 140104912262912 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:04:52.428192 140104912262912 hlog.py:32] train/00149/eval_val/25/corr True
I1203 03:04:52.428262 140104912262912 hlog.py:32] train/00149/eval_val/25 
I1203 03:04:52.428330 140104912262912 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 03:04:52.428419 140104912262912 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 03:04:52.428511 140104912262912 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 03:04:52.428597 140104912262912 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 03:04:52.428672 140104912262912 hlog.py:32] train/00149/eval_val/26/corr True
I1203 03:04:52.428742 140104912262912 hlog.py:32] train/00149/eval_val/26 
I1203 03:04:52.428810 140104912262912 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 03:04:52.428894 140104912262912 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 03:04:52.428994 140104912262912 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , A ) , _const ( B , _cityid ( miles , _ ) ) ) )
I1203 03:04:52.429081 140104912262912 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.429157 140104912262912 hlog.py:32] train/00149/eval_val/27/corr False
I1203 03:04:52.429227 140104912262912 hlog.py:32] train/00149/eval_val/27 
I1203 03:04:52.429295 140104912262912 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 03:04:52.429383 140104912262912 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 03:04:52.429475 140104912262912 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.429561 140104912262912 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.429636 140104912262912 hlog.py:32] train/00149/eval_val/28/corr True
I1203 03:04:52.429706 140104912262912 hlog.py:32] train/00149/eval_val/28 
I1203 03:04:52.429774 140104912262912 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 03:04:52.429863 140104912262912 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 03:04:52.429955 140104912262912 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 03:04:52.430047 140104912262912 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 03:04:52.430123 140104912262912 hlog.py:32] train/00149/eval_val/29/corr True
I1203 03:04:52.430193 140104912262912 hlog.py:32] train/00149/eval_val/29 
I1203 03:04:52.430261 140104912262912 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 03:04:52.430345 140104912262912 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 03:04:52.430436 140104912262912 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( north ) ) , _river ( B ) ) )
I1203 03:04:52.430523 140104912262912 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 03:04:52.430599 140104912262912 hlog.py:32] train/00149/eval_val/30/corr False
I1203 03:04:52.430668 140104912262912 hlog.py:32] train/00149/eval_val/30 
I1203 03:04:52.430736 140104912262912 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 03:04:52.430824 140104912262912 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 03:04:52.430916 140104912262912 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 03:04:52.431003 140104912262912 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 03:04:52.431078 140104912262912 hlog.py:32] train/00149/eval_val/31/corr True
I1203 03:04:52.431148 140104912262912 hlog.py:32] train/00149/eval_val/31 
I1203 03:04:52.431215 140104912262912 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 03:04:52.431299 140104912262912 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 03:04:52.431403 140104912262912 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 03:04:52.431502 140104912262912 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 03:04:52.431579 140104912262912 hlog.py:32] train/00149/eval_val/32/corr False
I1203 03:04:52.431651 140104912262912 hlog.py:32] train/00149/eval_val/32 
I1203 03:04:52.431734 140104912262912 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 03:04:52.431823 140104912262912 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 03:04:52.431915 140104912262912 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:04:52.432001 140104912262912 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 03:04:52.432077 140104912262912 hlog.py:32] train/00149/eval_val/33/corr True
I1203 03:04:52.432147 140104912262912 hlog.py:32] train/00149/eval_val/33 
I1203 03:04:52.432214 140104912262912 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 03:04:52.432303 140104912262912 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 03:04:52.432395 140104912262912 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.432482 140104912262912 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 03:04:52.432557 140104912262912 hlog.py:32] train/00149/eval_val/34/corr True
I1203 03:04:52.432627 140104912262912 hlog.py:32] train/00149/eval_val/34 
I1203 03:04:52.432695 140104912262912 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 03:04:52.432786 140104912262912 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 03:04:52.432881 140104912262912 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.432976 140104912262912 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.433051 140104912262912 hlog.py:32] train/00149/eval_val/35/corr True
I1203 03:04:52.433121 140104912262912 hlog.py:32] train/00149/eval_val/35 
I1203 03:04:52.433189 140104912262912 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 03:04:52.433279 140104912262912 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 03:04:52.433374 140104912262912 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.433463 140104912262912 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.433538 140104912262912 hlog.py:32] train/00149/eval_val/36/corr True
I1203 03:04:52.433608 140104912262912 hlog.py:32] train/00149/eval_val/36 
I1203 03:04:52.433676 140104912262912 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 03:04:52.433766 140104912262912 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 03:04:52.433860 140104912262912 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.433948 140104912262912 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.434023 140104912262912 hlog.py:32] train/00149/eval_val/37/corr True
I1203 03:04:52.434093 140104912262912 hlog.py:32] train/00149/eval_val/37 
I1203 03:04:52.434161 140104912262912 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 03:04:52.434251 140104912262912 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 03:04:52.434345 140104912262912 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.434433 140104912262912 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.434509 140104912262912 hlog.py:32] train/00149/eval_val/38/corr True
I1203 03:04:52.434579 140104912262912 hlog.py:32] train/00149/eval_val/38 
I1203 03:04:52.434647 140104912262912 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 03:04:52.434736 140104912262912 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 03:04:52.434831 140104912262912 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.434919 140104912262912 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 03:04:52.434995 140104912262912 hlog.py:32] train/00149/eval_val/39/corr True
I1203 03:04:52.435064 140104912262912 hlog.py:32] train/00149/eval_val/39 
I1203 03:04:52.435132 140104912262912 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 03:04:52.435216 140104912262912 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 03:04:52.435311 140104912262912 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 03:04:52.435417 140104912262912 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 03:04:52.435498 140104912262912 hlog.py:32] train/00149/eval_val/40/corr False
I1203 03:04:52.435571 140104912262912 hlog.py:32] train/00149/eval_val/40 
I1203 03:04:52.435641 140104912262912 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 03:04:52.435740 140104912262912 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 03:04:52.435835 140104912262912 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 03:04:52.435927 140104912262912 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 03:04:52.436002 140104912262912 hlog.py:32] train/00149/eval_val/41/corr False
I1203 03:04:52.436073 140104912262912 hlog.py:32] train/00149/eval_val/41 
I1203 03:04:52.436140 140104912262912 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 03:04:52.436223 140104912262912 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 03:04:52.436320 140104912262912 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 03:04:52.436405 140104912262912 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 03:04:52.436480 140104912262912 hlog.py:32] train/00149/eval_val/42/corr False
I1203 03:04:52.436550 140104912262912 hlog.py:32] train/00149/eval_val/42 
I1203 03:04:52.436618 140104912262912 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 03:04:52.436703 140104912262912 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 03:04:52.436803 140104912262912 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1203 03:04:52.436895 140104912262912 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 03:04:52.436971 140104912262912 hlog.py:32] train/00149/eval_val/43/corr False
I1203 03:04:52.437041 140104912262912 hlog.py:32] train/00149/eval_val/43 
I1203 03:04:52.437109 140104912262912 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 03:04:52.437201 140104912262912 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 03:04:52.437302 140104912262912 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 03:04:52.437393 140104912262912 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 03:04:52.437469 140104912262912 hlog.py:32] train/00149/eval_val/44/corr True
I1203 03:04:52.437538 140104912262912 hlog.py:32] train/00149/eval_val/44 
I1203 03:04:52.437606 140104912262912 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 03:04:52.437694 140104912262912 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 03:04:52.437788 140104912262912 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 03:04:52.437876 140104912262912 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 03:04:52.437952 140104912262912 hlog.py:32] train/00149/eval_val/45/corr False
I1203 03:04:52.438021 140104912262912 hlog.py:32] train/00149/eval_val/45 
I1203 03:04:52.438090 140104912262912 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 03:04:52.438179 140104912262912 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 03:04:52.438273 140104912262912 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 03:04:52.438361 140104912262912 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 03:04:52.438437 140104912262912 hlog.py:32] train/00149/eval_val/46/corr True
I1203 03:04:52.438512 140104912262912 hlog.py:32] train/00149/eval_val/46 
I1203 03:04:52.438580 140104912262912 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 03:04:52.438664 140104912262912 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 03:04:52.438761 140104912262912 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , A ) )
I1203 03:04:52.438850 140104912262912 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 03:04:52.438925 140104912262912 hlog.py:32] train/00149/eval_val/47/corr False
I1203 03:04:52.438996 140104912262912 hlog.py:32] train/00149/eval_val/47 
I1203 03:04:52.439064 140104912262912 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 03:04:52.439148 140104912262912 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 03:04:52.439244 140104912262912 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _const ( C , _stateid ( rochester ) ) ) , A ) )
I1203 03:04:52.439334 140104912262912 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 03:04:52.439431 140104912262912 hlog.py:32] train/00149/eval_val/48/corr False
I1203 03:04:52.439505 140104912262912 hlog.py:32] train/00149/eval_val/48 
I1203 03:04:52.439576 140104912262912 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 03:04:52.439670 140104912262912 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 03:04:52.439781 140104912262912 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:04:52.439871 140104912262912 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:04:52.439946 140104912262912 hlog.py:32] train/00149/eval_val/49/corr True
I1203 03:04:52.440015 140104912262912 hlog.py:32] train/00149/eval_val/49 
I1203 03:04:52.440083 140104912262912 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 03:04:52.440174 140104912262912 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 03:04:52.440271 140104912262912 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 03:04:52.440361 140104912262912 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 03:04:52.440436 140104912262912 hlog.py:32] train/00149/eval_val/50/corr True
I1203 03:04:52.440505 140104912262912 hlog.py:32] train/00149/eval_val/50 
I1203 03:04:52.440574 140104912262912 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 03:04:52.440659 140104912262912 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 03:04:52.440758 140104912262912 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:04:52.440848 140104912262912 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 03:04:52.440924 140104912262912 hlog.py:32] train/00149/eval_val/51/corr False
I1203 03:04:52.440993 140104912262912 hlog.py:32] train/00149/eval_val/51 
I1203 03:04:52.441061 140104912262912 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 03:04:52.441145 140104912262912 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 03:04:52.441244 140104912262912 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 03:04:52.441331 140104912262912 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 03:04:52.441406 140104912262912 hlog.py:32] train/00149/eval_val/52/corr False
I1203 03:04:52.441475 140104912262912 hlog.py:32] train/00149/eval_val/52 
I1203 03:04:52.441543 140104912262912 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 03:04:52.441627 140104912262912 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 03:04:52.441719 140104912262912 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 03:04:52.441806 140104912262912 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 03:04:52.441881 140104912262912 hlog.py:32] train/00149/eval_val/53/corr False
I1203 03:04:52.441951 140104912262912 hlog.py:32] train/00149/eval_val/53 
I1203 03:04:52.442018 140104912262912 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 03:04:52.442101 140104912262912 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 03:04:52.442195 140104912262912 hlog.py:32] train/00149/eval_val/54/pred ( A , _count ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) ) )
I1203 03:04:52.442281 140104912262912 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:04:52.442357 140104912262912 hlog.py:32] train/00149/eval_val/54/corr False
I1203 03:04:52.442426 140104912262912 hlog.py:32] train/00149/eval_val/54 
I1203 03:04:52.442494 140104912262912 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 03:04:52.442577 140104912262912 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 03:04:52.442667 140104912262912 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 03:04:52.442753 140104912262912 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 03:04:52.442827 140104912262912 hlog.py:32] train/00149/eval_val/55/corr False
I1203 03:04:52.442896 140104912262912 hlog.py:32] train/00149/eval_val/55 
I1203 03:04:52.442964 140104912262912 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 03:04:52.443052 140104912262912 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 03:04:52.443144 140104912262912 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:04:52.443230 140104912262912 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:04:52.443305 140104912262912 hlog.py:32] train/00149/eval_val/56/corr True
I1203 03:04:52.443375 140104912262912 hlog.py:32] train/00149/eval_val/56 
I1203 03:04:52.443470 140104912262912 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 03:04:52.443562 140104912262912 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 03:04:52.443657 140104912262912 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.443758 140104912262912 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.443833 140104912262912 hlog.py:32] train/00149/eval_val/57/corr True
I1203 03:04:52.443903 140104912262912 hlog.py:32] train/00149/eval_val/57 
I1203 03:04:52.443972 140104912262912 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 03:04:52.444055 140104912262912 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 03:04:52.444144 140104912262912 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.444236 140104912262912 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.444311 140104912262912 hlog.py:32] train/00149/eval_val/58/corr False
I1203 03:04:52.444380 140104912262912 hlog.py:32] train/00149/eval_val/58 
I1203 03:04:52.444449 140104912262912 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 03:04:52.444532 140104912262912 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 03:04:52.444622 140104912262912 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _population ( B , A ) , _const ( B , _cityid ( montana , _ ) ) ) )
I1203 03:04:52.444709 140104912262912 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 03:04:52.444784 140104912262912 hlog.py:32] train/00149/eval_val/59/corr False
I1203 03:04:52.444854 140104912262912 hlog.py:32] train/00149/eval_val/59 
I1203 03:04:52.444922 140104912262912 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 03:04:52.445010 140104912262912 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 03:04:52.445101 140104912262912 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 03:04:52.445188 140104912262912 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 03:04:52.445263 140104912262912 hlog.py:32] train/00149/eval_val/60/corr True
I1203 03:04:52.445333 140104912262912 hlog.py:32] train/00149/eval_val/60 
I1203 03:04:52.445400 140104912262912 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 03:04:52.445489 140104912262912 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 03:04:52.445581 140104912262912 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:04:52.445668 140104912262912 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:04:52.445743 140104912262912 hlog.py:32] train/00149/eval_val/61/corr True
I1203 03:04:52.445813 140104912262912 hlog.py:32] train/00149/eval_val/61 
I1203 03:04:52.445880 140104912262912 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 03:04:52.445968 140104912262912 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 03:04:52.446060 140104912262912 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 03:04:52.446146 140104912262912 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 03:04:52.446222 140104912262912 hlog.py:32] train/00149/eval_val/62/corr True
I1203 03:04:52.446291 140104912262912 hlog.py:32] train/00149/eval_val/62 
I1203 03:04:52.446359 140104912262912 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 03:04:52.446447 140104912262912 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 03:04:52.446538 140104912262912 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.446625 140104912262912 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.446700 140104912262912 hlog.py:32] train/00149/eval_val/63/corr True
I1203 03:04:52.446769 140104912262912 hlog.py:32] train/00149/eval_val/63 
I1203 03:04:52.446837 140104912262912 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 03:04:52.655837 140104912262912 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 03:04:52.656033 140104912262912 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 03:04:52.656144 140104912262912 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 03:04:52.656227 140104912262912 hlog.py:32] train/00149/eval_val/64/corr True
I1203 03:04:52.656301 140104912262912 hlog.py:32] train/00149/eval_val/64 
I1203 03:04:52.656377 140104912262912 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 03:04:52.656470 140104912262912 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 03:04:52.656565 140104912262912 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.656654 140104912262912 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.656730 140104912262912 hlog.py:32] train/00149/eval_val/65/corr True
I1203 03:04:52.656800 140104912262912 hlog.py:32] train/00149/eval_val/65 
I1203 03:04:52.656870 140104912262912 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 03:04:52.656959 140104912262912 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 03:04:52.657052 140104912262912 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.657139 140104912262912 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.657215 140104912262912 hlog.py:32] train/00149/eval_val/66/corr True
I1203 03:04:52.657285 140104912262912 hlog.py:32] train/00149/eval_val/66 
I1203 03:04:52.657354 140104912262912 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 03:04:52.657446 140104912262912 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 03:04:52.657538 140104912262912 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.657625 140104912262912 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.657701 140104912262912 hlog.py:32] train/00149/eval_val/67/corr True
I1203 03:04:52.657771 140104912262912 hlog.py:32] train/00149/eval_val/67 
I1203 03:04:52.657840 140104912262912 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 03:04:52.657928 140104912262912 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 03:04:52.658024 140104912262912 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 03:04:52.658112 140104912262912 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 03:04:52.658188 140104912262912 hlog.py:32] train/00149/eval_val/68/corr False
I1203 03:04:52.658258 140104912262912 hlog.py:32] train/00149/eval_val/68 
I1203 03:04:52.658327 140104912262912 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 03:04:52.658413 140104912262912 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 03:04:52.658508 140104912262912 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.658596 140104912262912 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.658671 140104912262912 hlog.py:32] train/00149/eval_val/69/corr False
I1203 03:04:52.658741 140104912262912 hlog.py:32] train/00149/eval_val/69 
I1203 03:04:52.658809 140104912262912 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 03:04:52.658894 140104912262912 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 03:04:52.658980 140104912262912 hlog.py:32] train/00149/eval_val/70/pred ( A , _sum ( A , _state ( A ) ) )
I1203 03:04:52.659066 140104912262912 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.659147 140104912262912 hlog.py:32] train/00149/eval_val/70/corr False
I1203 03:04:52.659217 140104912262912 hlog.py:32] train/00149/eval_val/70 
I1203 03:04:52.659286 140104912262912 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 03:04:52.659370 140104912262912 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 03:04:52.659482 140104912262912 hlog.py:32] train/00149/eval_val/71/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.659571 140104912262912 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 03:04:52.659649 140104912262912 hlog.py:32] train/00149/eval_val/71/corr False
I1203 03:04:52.659721 140104912262912 hlog.py:32] train/00149/eval_val/71 
I1203 03:04:52.659792 140104912262912 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 03:04:52.659879 140104912262912 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 03:04:52.659971 140104912262912 hlog.py:32] train/00149/eval_val/72/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.660071 140104912262912 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 03:04:52.660147 140104912262912 hlog.py:32] train/00149/eval_val/72/corr False
I1203 03:04:52.660217 140104912262912 hlog.py:32] train/00149/eval_val/72 
I1203 03:04:52.660286 140104912262912 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 03:04:52.660369 140104912262912 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 03:04:52.660463 140104912262912 hlog.py:32] train/00149/eval_val/73/pred ( A , _sum ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( idaho ) ) ) ) )
I1203 03:04:52.660549 140104912262912 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 03:04:52.660625 140104912262912 hlog.py:32] train/00149/eval_val/73/corr False
I1203 03:04:52.660694 140104912262912 hlog.py:32] train/00149/eval_val/73 
I1203 03:04:52.660763 140104912262912 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 03:04:52.660847 140104912262912 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 03:04:52.660935 140104912262912 hlog.py:32] train/00149/eval_val/74/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.661020 140104912262912 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 03:04:52.661096 140104912262912 hlog.py:32] train/00149/eval_val/74/corr False
I1203 03:04:52.661166 140104912262912 hlog.py:32] train/00149/eval_val/74 
I1203 03:04:52.661234 140104912262912 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 03:04:52.661319 140104912262912 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 03:04:52.661410 140104912262912 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , kilometers ) ) ) )
I1203 03:04:52.661496 140104912262912 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 03:04:52.661571 140104912262912 hlog.py:32] train/00149/eval_val/75/corr False
I1203 03:04:52.661641 140104912262912 hlog.py:32] train/00149/eval_val/75 
I1203 03:04:52.661710 140104912262912 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 03:04:52.661794 140104912262912 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 03:04:52.661885 140104912262912 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1203 03:04:52.661971 140104912262912 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 03:04:52.662046 140104912262912 hlog.py:32] train/00149/eval_val/76/corr False
I1203 03:04:52.662116 140104912262912 hlog.py:32] train/00149/eval_val/76 
I1203 03:04:52.662190 140104912262912 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 03:04:52.662275 140104912262912 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 03:04:52.662364 140104912262912 hlog.py:32] train/00149/eval_val/77/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.662449 140104912262912 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 03:04:52.662525 140104912262912 hlog.py:32] train/00149/eval_val/77/corr False
I1203 03:04:52.662595 140104912262912 hlog.py:32] train/00149/eval_val/77 
I1203 03:04:52.662663 140104912262912 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 03:04:52.662747 140104912262912 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 03:04:52.662835 140104912262912 hlog.py:32] train/00149/eval_val/78/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.662920 140104912262912 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 03:04:52.662995 140104912262912 hlog.py:32] train/00149/eval_val/78/corr False
I1203 03:04:52.663065 140104912262912 hlog.py:32] train/00149/eval_val/78 
I1203 03:04:52.663133 140104912262912 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 03:04:52.663218 140104912262912 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 03:04:52.663306 140104912262912 hlog.py:32] train/00149/eval_val/79/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 03:04:52.663413 140104912262912 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 03:04:52.663494 140104912262912 hlog.py:32] train/00149/eval_val/79/corr False
I1203 03:04:52.663567 140104912262912 hlog.py:32] train/00149/eval_val/79 
I1203 03:04:52.663638 140104912262912 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 03:04:52.663736 140104912262912 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 03:04:52.663834 140104912262912 hlog.py:32] train/00149/eval_val/80/pred ( A , _sum ( C , ( _state ( C ) , _loc ( C , C ) , _const ( C , _stateid ( texas ) ) ) , _population ( C ) , A ) )
I1203 03:04:52.663919 140104912262912 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.663995 140104912262912 hlog.py:32] train/00149/eval_val/80/corr False
I1203 03:04:52.664065 140104912262912 hlog.py:32] train/00149/eval_val/80 
I1203 03:04:52.664133 140104912262912 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 03:04:52.664221 140104912262912 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 03:04:52.664310 140104912262912 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1203 03:04:52.664396 140104912262912 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.664471 140104912262912 hlog.py:32] train/00149/eval_val/81/corr False
I1203 03:04:52.664541 140104912262912 hlog.py:32] train/00149/eval_val/81 
I1203 03:04:52.664609 140104912262912 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 03:04:52.664694 140104912262912 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 03:04:52.664788 140104912262912 hlog.py:32] train/00149/eval_val/82/pred ( A , _sum ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( wisconsin ) ) ) ) )
I1203 03:04:52.664873 140104912262912 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 03:04:52.664948 140104912262912 hlog.py:32] train/00149/eval_val/82/corr False
I1203 03:04:52.665018 140104912262912 hlog.py:32] train/00149/eval_val/82 
I1203 03:04:52.665087 140104912262912 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 03:04:52.665171 140104912262912 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 03:04:52.665263 140104912262912 hlog.py:32] train/00149/eval_val/83/pred ( A , _sum ( A , _state ( A ) ) )
I1203 03:04:52.665349 140104912262912 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 03:04:52.665424 140104912262912 hlog.py:32] train/00149/eval_val/83/corr False
I1203 03:04:52.665494 140104912262912 hlog.py:32] train/00149/eval_val/83 
I1203 03:04:52.665562 140104912262912 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 03:04:52.665651 140104912262912 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 03:04:52.665741 140104912262912 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _density ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 03:04:52.665827 140104912262912 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:04:52.665902 140104912262912 hlog.py:32] train/00149/eval_val/84/corr False
I1203 03:04:52.665972 140104912262912 hlog.py:32] train/00149/eval_val/84 
I1203 03:04:52.666040 140104912262912 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 03:04:52.666126 140104912262912 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 03:04:52.666221 140104912262912 hlog.py:32] train/00149/eval_val/85/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:04:52.666306 140104912262912 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 03:04:52.666381 140104912262912 hlog.py:32] train/00149/eval_val/85/corr False
I1203 03:04:52.666452 140104912262912 hlog.py:32] train/00149/eval_val/85 
I1203 03:04:52.666521 140104912262912 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 03:04:52.666607 140104912262912 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 03:04:52.666704 140104912262912 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) ) )
I1203 03:04:52.666794 140104912262912 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 03:04:52.666870 140104912262912 hlog.py:32] train/00149/eval_val/86/corr False
I1203 03:04:52.666940 140104912262912 hlog.py:32] train/00149/eval_val/86 
I1203 03:04:52.667009 140104912262912 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 03:04:52.667103 140104912262912 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 03:04:52.667205 140104912262912 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:04:52.667299 140104912262912 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:04:52.667375 140104912262912 hlog.py:32] train/00149/eval_val/87/corr True
I1203 03:04:52.667470 140104912262912 hlog.py:32] train/00149/eval_val/87 
I1203 03:04:52.667541 140104912262912 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 03:04:52.667634 140104912262912 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 03:04:52.667741 140104912262912 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 03:04:52.667829 140104912262912 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 03:04:52.667904 140104912262912 hlog.py:32] train/00149/eval_val/88/corr True
I1203 03:04:52.667974 140104912262912 hlog.py:32] train/00149/eval_val/88 
I1203 03:04:52.668042 140104912262912 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 03:04:52.668141 140104912262912 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 03:04:52.668240 140104912262912 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:04:52.668331 140104912262912 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:04:52.668407 140104912262912 hlog.py:32] train/00149/eval_val/89/corr True
I1203 03:04:52.668477 140104912262912 hlog.py:32] train/00149/eval_val/89 
I1203 03:04:52.668545 140104912262912 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 03:04:52.668632 140104912262912 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 03:04:52.668729 140104912262912 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1203 03:04:52.668823 140104912262912 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 03:04:52.668899 140104912262912 hlog.py:32] train/00149/eval_val/90/corr False
I1203 03:04:52.668969 140104912262912 hlog.py:32] train/00149/eval_val/90 
I1203 03:04:52.669038 140104912262912 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 03:04:52.669128 140104912262912 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 03:04:52.669222 140104912262912 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.669310 140104912262912 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.669386 140104912262912 hlog.py:32] train/00149/eval_val/91/corr True
I1203 03:04:52.669456 140104912262912 hlog.py:32] train/00149/eval_val/91 
I1203 03:04:52.669524 140104912262912 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 03:04:52.669614 140104912262912 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 03:04:52.669708 140104912262912 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.669797 140104912262912 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.669872 140104912262912 hlog.py:32] train/00149/eval_val/92/corr True
I1203 03:04:52.669942 140104912262912 hlog.py:32] train/00149/eval_val/92 
I1203 03:04:52.670010 140104912262912 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 03:04:52.670097 140104912262912 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 03:04:52.670191 140104912262912 hlog.py:32] train/00149/eval_val/93/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.670279 140104912262912 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.670355 140104912262912 hlog.py:32] train/00149/eval_val/93/corr False
I1203 03:04:52.670425 140104912262912 hlog.py:32] train/00149/eval_val/93 
I1203 03:04:52.670493 140104912262912 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 03:04:52.670580 140104912262912 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 03:04:52.670674 140104912262912 hlog.py:32] train/00149/eval_val/94/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.670762 140104912262912 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.670845 140104912262912 hlog.py:32] train/00149/eval_val/94/corr False
I1203 03:04:52.670915 140104912262912 hlog.py:32] train/00149/eval_val/94 
I1203 03:04:52.670984 140104912262912 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 03:04:52.671074 140104912262912 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 03:04:52.671168 140104912262912 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.671256 140104912262912 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.671331 140104912262912 hlog.py:32] train/00149/eval_val/95/corr True
I1203 03:04:52.671422 140104912262912 hlog.py:32] train/00149/eval_val/95 
I1203 03:04:52.671495 140104912262912 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 03:04:52.671591 140104912262912 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 03:04:52.671704 140104912262912 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 03:04:52.671796 140104912262912 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 03:04:52.671872 140104912262912 hlog.py:32] train/00149/eval_val/96/corr True
I1203 03:04:52.671942 140104912262912 hlog.py:32] train/00149/eval_val/96 
I1203 03:04:52.672010 140104912262912 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 03:04:52.672098 140104912262912 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 03:04:52.672195 140104912262912 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) )
I1203 03:04:52.672360 140104912262912 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 03:04:52.672438 140104912262912 hlog.py:32] train/00149/eval_val/97/corr False
I1203 03:04:52.672508 140104912262912 hlog.py:32] train/00149/eval_val/97 
I1203 03:04:52.672577 140104912262912 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 03:04:52.672669 140104912262912 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 03:04:52.672765 140104912262912 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 03:04:52.672855 140104912262912 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 03:04:52.672930 140104912262912 hlog.py:32] train/00149/eval_val/98/corr True
I1203 03:04:52.673001 140104912262912 hlog.py:32] train/00149/eval_val/98 
I1203 03:04:52.673069 140104912262912 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 03:04:52.673161 140104912262912 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 03:04:52.673257 140104912262912 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:04:52.673346 140104912262912 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 03:04:52.673422 140104912262912 hlog.py:32] train/00149/eval_val/99/corr True
I1203 03:04:52.673492 140104912262912 hlog.py:32] train/00149/eval_val/99 
I1203 03:04:52.673565 140104912262912 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 03:04:52.673650 140104912262912 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 03:04:52.673744 140104912262912 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:04:52.673835 140104912262912 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:04:52.673910 140104912262912 hlog.py:32] train/00149/eval_val/100/corr False
I1203 03:04:52.673980 140104912262912 hlog.py:32] train/00149/eval_val/100 
I1203 03:04:52.674049 140104912262912 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 03:04:52.674134 140104912262912 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 03:04:52.674234 140104912262912 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 03:04:52.674324 140104912262912 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 03:04:52.674399 140104912262912 hlog.py:32] train/00149/eval_val/101/corr False
I1203 03:04:52.674470 140104912262912 hlog.py:32] train/00149/eval_val/101 
I1203 03:04:52.674538 140104912262912 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 03:04:52.674623 140104912262912 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 03:04:52.674713 140104912262912 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( over ) ) ) )
I1203 03:04:52.674800 140104912262912 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 03:04:52.674876 140104912262912 hlog.py:32] train/00149/eval_val/102/corr False
I1203 03:04:52.674946 140104912262912 hlog.py:32] train/00149/eval_val/102 
I1203 03:04:52.675015 140104912262912 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 03:04:52.675103 140104912262912 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 03:04:52.675196 140104912262912 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 03:04:52.675283 140104912262912 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 03:04:52.675359 140104912262912 hlog.py:32] train/00149/eval_val/103/corr True
I1203 03:04:52.675453 140104912262912 hlog.py:32] train/00149/eval_val/103 
I1203 03:04:52.675525 140104912262912 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 03:04:52.675616 140104912262912 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 03:04:52.675724 140104912262912 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.675811 140104912262912 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.675886 140104912262912 hlog.py:32] train/00149/eval_val/104/corr True
I1203 03:04:52.675956 140104912262912 hlog.py:32] train/00149/eval_val/104 
I1203 03:04:52.676025 140104912262912 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 03:04:52.676113 140104912262912 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 03:04:52.676205 140104912262912 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 03:04:52.676292 140104912262912 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 03:04:52.676373 140104912262912 hlog.py:32] train/00149/eval_val/105/corr True
I1203 03:04:52.676443 140104912262912 hlog.py:32] train/00149/eval_val/105 
I1203 03:04:52.676512 140104912262912 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 03:04:52.676600 140104912262912 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 03:04:52.676692 140104912262912 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 03:04:52.676780 140104912262912 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 03:04:52.676855 140104912262912 hlog.py:32] train/00149/eval_val/106/corr True
I1203 03:04:52.676925 140104912262912 hlog.py:32] train/00149/eval_val/106 
I1203 03:04:52.676994 140104912262912 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 03:04:52.677081 140104912262912 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 03:04:52.677174 140104912262912 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:04:52.677260 140104912262912 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:04:52.677336 140104912262912 hlog.py:32] train/00149/eval_val/107/corr True
I1203 03:04:52.677406 140104912262912 hlog.py:32] train/00149/eval_val/107 
I1203 03:04:52.677474 140104912262912 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 03:04:52.677563 140104912262912 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 03:04:52.677655 140104912262912 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 03:04:52.677742 140104912262912 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 03:04:52.677817 140104912262912 hlog.py:32] train/00149/eval_val/108/corr True
I1203 03:04:52.677887 140104912262912 hlog.py:32] train/00149/eval_val/108 
I1203 03:04:52.677955 140104912262912 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 03:04:52.678044 140104912262912 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 03:04:52.678136 140104912262912 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 03:04:52.678223 140104912262912 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 03:04:52.678298 140104912262912 hlog.py:32] train/00149/eval_val/109/corr True
I1203 03:04:52.678368 140104912262912 hlog.py:32] train/00149/eval_val/109 
I1203 03:04:52.678436 140104912262912 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 03:04:52.678524 140104912262912 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 03:04:52.678616 140104912262912 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:04:52.678702 140104912262912 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 03:04:52.678777 140104912262912 hlog.py:32] train/00149/eval_val/110/corr True
I1203 03:04:52.678847 140104912262912 hlog.py:32] train/00149/eval_val/110 
I1203 03:04:52.678915 140104912262912 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 03:04:52.679003 140104912262912 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 03:04:52.679095 140104912262912 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 03:04:52.679182 140104912262912 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 03:04:52.679262 140104912262912 hlog.py:32] train/00149/eval_val/111/corr True
I1203 03:04:52.679333 140104912262912 hlog.py:32] train/00149/eval_val/111 
I1203 03:04:52.679422 140104912262912 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 03:04:52.679516 140104912262912 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 03:04:52.679611 140104912262912 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 03:04:52.679714 140104912262912 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 03:04:52.679791 140104912262912 hlog.py:32] train/00149/eval_val/112/corr True
I1203 03:04:52.679860 140104912262912 hlog.py:32] train/00149/eval_val/112 
I1203 03:04:52.679928 140104912262912 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 03:04:52.680017 140104912262912 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 03:04:52.680109 140104912262912 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:04:52.680197 140104912262912 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 03:04:52.680273 140104912262912 hlog.py:32] train/00149/eval_val/113/corr True
I1203 03:04:52.680342 140104912262912 hlog.py:32] train/00149/eval_val/113 
I1203 03:04:52.680411 140104912262912 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 03:04:52.680500 140104912262912 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 03:04:52.680592 140104912262912 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.680678 140104912262912 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 03:04:52.680754 140104912262912 hlog.py:32] train/00149/eval_val/114/corr True
I1203 03:04:52.680824 140104912262912 hlog.py:32] train/00149/eval_val/114 
I1203 03:04:52.680893 140104912262912 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 03:04:52.680981 140104912262912 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 03:04:52.681074 140104912262912 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 03:04:52.681161 140104912262912 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 03:04:52.681237 140104912262912 hlog.py:32] train/00149/eval_val/115/corr True
I1203 03:04:52.681307 140104912262912 hlog.py:32] train/00149/eval_val/115 
I1203 03:04:52.681375 140104912262912 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 03:04:52.681464 140104912262912 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 03:04:52.681556 140104912262912 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.681643 140104912262912 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 03:04:52.681718 140104912262912 hlog.py:32] train/00149/eval_val/116/corr True
I1203 03:04:52.681789 140104912262912 hlog.py:32] train/00149/eval_val/116 
I1203 03:04:52.681857 140104912262912 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 03:04:52.681947 140104912262912 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 03:04:52.682041 140104912262912 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.682130 140104912262912 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.682210 140104912262912 hlog.py:32] train/00149/eval_val/117/corr True
I1203 03:04:52.682281 140104912262912 hlog.py:32] train/00149/eval_val/117 
I1203 03:04:52.682349 140104912262912 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 03:04:52.682439 140104912262912 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 03:04:52.682533 140104912262912 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.682620 140104912262912 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.682696 140104912262912 hlog.py:32] train/00149/eval_val/118/corr True
I1203 03:04:52.682766 140104912262912 hlog.py:32] train/00149/eval_val/118 
I1203 03:04:52.682834 140104912262912 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 03:04:52.682924 140104912262912 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 03:04:52.683018 140104912262912 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.683106 140104912262912 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 03:04:52.683182 140104912262912 hlog.py:32] train/00149/eval_val/119/corr True
I1203 03:04:52.683251 140104912262912 hlog.py:32] train/00149/eval_val/119 
I1203 03:04:52.683320 140104912262912 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 03:04:52.683428 140104912262912 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 03:04:52.683519 140104912262912 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 03:04:52.683605 140104912262912 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 03:04:52.683695 140104912262912 hlog.py:32] train/00149/eval_val/120/corr True
I1203 03:04:52.683766 140104912262912 hlog.py:32] train/00149/eval_val/120 
I1203 03:04:52.683835 140104912262912 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 03:04:52.683921 140104912262912 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 03:04:52.684007 140104912262912 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 03:04:52.684090 140104912262912 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 03:04:52.684165 140104912262912 hlog.py:32] train/00149/eval_val/121/corr True
I1203 03:04:52.684235 140104912262912 hlog.py:32] train/00149/eval_val/121 
I1203 03:04:52.684303 140104912262912 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 03:04:52.684393 140104912262912 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 03:04:52.684488 140104912262912 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 03:04:52.684576 140104912262912 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 03:04:52.684651 140104912262912 hlog.py:32] train/00149/eval_val/122/corr True
I1203 03:04:52.684721 140104912262912 hlog.py:32] train/00149/eval_val/122 
I1203 03:04:52.684789 140104912262912 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 03:04:52.684879 140104912262912 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 03:04:52.684973 140104912262912 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 03:04:52.685061 140104912262912 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 03:04:52.685145 140104912262912 hlog.py:32] train/00149/eval_val/123/corr True
I1203 03:04:52.685216 140104912262912 hlog.py:32] train/00149/eval_val/123 
I1203 03:04:52.685284 140104912262912 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 03:04:52.685374 140104912262912 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 03:04:52.685468 140104912262912 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 03:04:52.685556 140104912262912 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 03:04:52.685632 140104912262912 hlog.py:32] train/00149/eval_val/124/corr True
I1203 03:04:52.685702 140104912262912 hlog.py:32] train/00149/eval_val/124 
I1203 03:04:52.685770 140104912262912 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 03:04:52.685860 140104912262912 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 03:04:52.685954 140104912262912 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 03:04:52.686042 140104912262912 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 03:04:52.686117 140104912262912 hlog.py:32] train/00149/eval_val/125/corr True
I1203 03:04:52.686202 140104912262912 hlog.py:32] train/00149/eval_val/125 
I1203 03:04:52.686274 140104912262912 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 03:04:52.686365 140104912262912 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 03:04:52.686458 140104912262912 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.686557 140104912262912 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.686632 140104912262912 hlog.py:32] train/00149/eval_val/126/corr True
I1203 03:04:52.686702 140104912262912 hlog.py:32] train/00149/eval_val/126 
I1203 03:04:52.686770 140104912262912 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 03:04:52.686857 140104912262912 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 03:04:52.686946 140104912262912 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.687031 140104912262912 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.687106 140104912262912 hlog.py:32] train/00149/eval_val/127/corr False
I1203 03:04:52.687176 140104912262912 hlog.py:32] train/00149/eval_val/127 
I1203 03:04:52.687244 140104912262912 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 03:04:52.842977 140104912262912 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 03:04:52.843103 140104912262912 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.843199 140104912262912 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.843281 140104912262912 hlog.py:32] train/00149/eval_val/128/corr True
I1203 03:04:52.843355 140104912262912 hlog.py:32] train/00149/eval_val/128 
I1203 03:04:52.843454 140104912262912 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 03:04:52.843552 140104912262912 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 03:04:52.843648 140104912262912 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.843749 140104912262912 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.843832 140104912262912 hlog.py:32] train/00149/eval_val/129/corr True
I1203 03:04:52.843904 140104912262912 hlog.py:32] train/00149/eval_val/129 
I1203 03:04:52.843973 140104912262912 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 03:04:52.844060 140104912262912 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 03:04:52.844150 140104912262912 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.844236 140104912262912 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.844311 140104912262912 hlog.py:32] train/00149/eval_val/130/corr False
I1203 03:04:52.844381 140104912262912 hlog.py:32] train/00149/eval_val/130 
I1203 03:04:52.844449 140104912262912 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 03:04:52.844538 140104912262912 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 03:04:52.844628 140104912262912 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.844712 140104912262912 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.844788 140104912262912 hlog.py:32] train/00149/eval_val/131/corr True
I1203 03:04:52.844857 140104912262912 hlog.py:32] train/00149/eval_val/131 
I1203 03:04:52.844926 140104912262912 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 03:04:52.845014 140104912262912 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 03:04:52.845103 140104912262912 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.845188 140104912262912 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 03:04:52.845263 140104912262912 hlog.py:32] train/00149/eval_val/132/corr True
I1203 03:04:52.845333 140104912262912 hlog.py:32] train/00149/eval_val/132 
I1203 03:04:52.845401 140104912262912 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 03:04:52.845486 140104912262912 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 03:04:52.845581 140104912262912 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _len ( B , A ) , _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) )
I1203 03:04:52.845666 140104912262912 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 03:04:52.845741 140104912262912 hlog.py:32] train/00149/eval_val/133/corr False
I1203 03:04:52.845811 140104912262912 hlog.py:32] train/00149/eval_val/133 
I1203 03:04:52.845879 140104912262912 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 03:04:52.845965 140104912262912 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 03:04:52.846066 140104912262912 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) ) )
I1203 03:04:52.846157 140104912262912 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:04:52.846233 140104912262912 hlog.py:32] train/00149/eval_val/134/corr False
I1203 03:04:52.846303 140104912262912 hlog.py:32] train/00149/eval_val/134 
I1203 03:04:52.846371 140104912262912 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 03:04:52.846463 140104912262912 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 03:04:52.846562 140104912262912 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:04:52.846652 140104912262912 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 03:04:52.846734 140104912262912 hlog.py:32] train/00149/eval_val/135/corr True
I1203 03:04:52.846804 140104912262912 hlog.py:32] train/00149/eval_val/135 
I1203 03:04:52.846872 140104912262912 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 03:04:52.846956 140104912262912 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 03:04:52.847050 140104912262912 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , \+ ( _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.847137 140104912262912 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.847212 140104912262912 hlog.py:32] train/00149/eval_val/136/corr False
I1203 03:04:52.847282 140104912262912 hlog.py:32] train/00149/eval_val/136 
I1203 03:04:52.847350 140104912262912 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 03:04:52.847461 140104912262912 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 03:04:52.847559 140104912262912 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.847649 140104912262912 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.847739 140104912262912 hlog.py:32] train/00149/eval_val/137/corr True
I1203 03:04:52.847809 140104912262912 hlog.py:32] train/00149/eval_val/137 
I1203 03:04:52.847877 140104912262912 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 03:04:52.847965 140104912262912 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 03:04:52.848058 140104912262912 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.848145 140104912262912 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.848220 140104912262912 hlog.py:32] train/00149/eval_val/138/corr True
I1203 03:04:52.848290 140104912262912 hlog.py:32] train/00149/eval_val/138 
I1203 03:04:52.848358 140104912262912 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 03:04:52.848448 140104912262912 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 03:04:52.848540 140104912262912 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.848627 140104912262912 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 03:04:52.848701 140104912262912 hlog.py:32] train/00149/eval_val/139/corr True
I1203 03:04:52.848771 140104912262912 hlog.py:32] train/00149/eval_val/139 
I1203 03:04:52.848839 140104912262912 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 03:04:52.848931 140104912262912 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 03:04:52.849029 140104912262912 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:04:52.849119 140104912262912 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:04:52.849194 140104912262912 hlog.py:32] train/00149/eval_val/140/corr True
I1203 03:04:52.849264 140104912262912 hlog.py:32] train/00149/eval_val/140 
I1203 03:04:52.849333 140104912262912 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 03:04:52.849424 140104912262912 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 03:04:52.849522 140104912262912 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:04:52.849618 140104912262912 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 03:04:52.849694 140104912262912 hlog.py:32] train/00149/eval_val/141/corr True
I1203 03:04:52.849764 140104912262912 hlog.py:32] train/00149/eval_val/141 
I1203 03:04:52.849833 140104912262912 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 03:04:52.849916 140104912262912 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 03:04:52.850008 140104912262912 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 03:04:52.850093 140104912262912 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 03:04:52.850168 140104912262912 hlog.py:32] train/00149/eval_val/142/corr False
I1203 03:04:52.850238 140104912262912 hlog.py:32] train/00149/eval_val/142 
I1203 03:04:52.850306 140104912262912 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 03:04:52.850389 140104912262912 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 03:04:52.850480 140104912262912 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 03:04:52.850566 140104912262912 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 03:04:52.850641 140104912262912 hlog.py:32] train/00149/eval_val/143/corr False
I1203 03:04:52.850711 140104912262912 hlog.py:32] train/00149/eval_val/143 
I1203 03:04:52.850780 140104912262912 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 03:04:52.850863 140104912262912 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 03:04:52.850949 140104912262912 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 03:04:52.851033 140104912262912 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 03:04:52.851108 140104912262912 hlog.py:32] train/00149/eval_val/144/corr False
I1203 03:04:52.851177 140104912262912 hlog.py:32] train/00149/eval_val/144 
I1203 03:04:52.851246 140104912262912 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 03:04:52.851329 140104912262912 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 03:04:52.851447 140104912262912 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) )
I1203 03:04:52.851538 140104912262912 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 03:04:52.851615 140104912262912 hlog.py:32] train/00149/eval_val/145/corr False
I1203 03:04:52.851699 140104912262912 hlog.py:32] train/00149/eval_val/145 
I1203 03:04:52.851768 140104912262912 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 03:04:52.851855 140104912262912 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 03:04:52.852010 140104912262912 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _state ( A ) , _traverse ( B , A ) , _largest ( C , ( _river ( B ) , _loc ( B , C ) , _largest ( C , ( _state ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) ) ) )
I1203 03:04:52.852107 140104912262912 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 03:04:52.852182 140104912262912 hlog.py:32] train/00149/eval_val/146/corr False
I1203 03:04:52.852252 140104912262912 hlog.py:32] train/00149/eval_val/146 
I1203 03:04:52.852320 140104912262912 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 03:04:52.852419 140104912262912 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 03:04:52.852514 140104912262912 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 03:04:52.852602 140104912262912 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 03:04:52.852677 140104912262912 hlog.py:32] train/00149/eval_val/147/corr True
I1203 03:04:52.852747 140104912262912 hlog.py:32] train/00149/eval_val/147 
I1203 03:04:52.852815 140104912262912 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 03:04:52.852892 140104912262912 hlog.py:32] train/00149/eval_val/acc 0.5270
I1203 03:04:52.882892 140104912262912 hlog.py:18] train/00149{16.89s}
I1203 03:04:52.885133 140104912262912 hlog.py:18] train{2512.39s}
