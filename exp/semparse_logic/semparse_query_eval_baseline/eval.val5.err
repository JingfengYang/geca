I1203 00:17:07.032958 139917320247040 hlog.py:24] # --noTEST
I1203 00:17:07.033320 139917320247040 hlog.py:24] # --seed=5
I1203 00:17:07.033404 139917320247040 hlog.py:24] # --dataset=semparse
I1203 00:17:07.033482 139917320247040 hlog.py:24] # --model_dir=model
I1203 00:17:07.033556 139917320247040 hlog.py:24] # --n_checkpoint=10
I1203 00:17:07.033629 139917320247040 hlog.py:24] # --nologtostderr
I1203 00:17:07.033701 139917320247040 hlog.py:24] # --noalsologtostderr
I1203 00:17:07.033772 139917320247040 hlog.py:24] # --log_dir=
I1203 00:17:07.033842 139917320247040 hlog.py:24] # --verbosity=0
I1203 00:17:07.033912 139917320247040 hlog.py:24] # --verbosity=0
I1203 00:17:07.033981 139917320247040 hlog.py:24] # --stderrthreshold=fatal
I1203 00:17:07.034050 139917320247040 hlog.py:24] # --showprefixforinfo
I1203 00:17:07.034119 139917320247040 hlog.py:24] # --nodedup
I1203 00:17:07.034188 139917320247040 hlog.py:24] # --nobuild_comp_table
I1203 00:17:07.034257 139917320247040 hlog.py:24] # --semparse_split=query
I1203 00:17:07.034326 139917320247040 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 00:17:07.034396 139917320247040 hlog.py:24] # --semparse_mrl=logic
I1203 00:17:07.034465 139917320247040 hlog.py:24] # --val_fold=8
I1203 00:17:07.034534 139917320247040 hlog.py:24] # --test_fold=9
I1203 00:17:07.034603 139917320247040 hlog.py:24] # --n_emb=64
I1203 00:17:07.034672 139917320247040 hlog.py:24] # --n_enc=512
I1203 00:17:07.034741 139917320247040 hlog.py:24] # --dropout=0.5
I1203 00:17:07.034809 139917320247040 hlog.py:24] # --copy_sup
I1203 00:17:07.034878 139917320247040 hlog.py:24] # --n_epochs=150
I1203 00:17:07.034947 139917320247040 hlog.py:24] # --n_epoch_batches=32
I1203 00:17:07.035016 139917320247040 hlog.py:24] # --n_batch=64
I1203 00:17:07.035085 139917320247040 hlog.py:24] # --lr=0.001
I1203 00:17:07.035154 139917320247040 hlog.py:24] # --clip=1.0
I1203 00:17:07.035223 139917320247040 hlog.py:24] # --sched_factor=0.5
I1203 00:17:07.035291 139917320247040 hlog.py:24] # --norun_with_pdb
I1203 00:17:07.035361 139917320247040 hlog.py:24] # --nopdb_post_mortem
I1203 00:17:07.035454 139917320247040 hlog.py:24] # --norun_with_profiling
I1203 00:17:07.035526 139917320247040 hlog.py:24] # --use_cprofile_for_profiling
I1203 00:17:07.035598 139917320247040 hlog.py:24] # --noonly_check_args
I1203 00:17:07.035669 139917320247040 hlog.py:24] # --aug_ratio=0.0
I1203 00:17:07.035753 139917320247040 hlog.py:24] # --noinvert
I1203 00:17:07.035821 139917320247040 hlog.py:24] # --nohelp
I1203 00:17:07.035890 139917320247040 hlog.py:24] # --nohelp
I1203 00:17:07.035959 139917320247040 hlog.py:24] # --nohelpshort
I1203 00:17:07.036027 139917320247040 hlog.py:24] # --nohelpfull
I1203 00:17:07.036096 139917320247040 hlog.py:24] # --nohelpxml
I1203 00:17:07.036164 139917320247040 hlog.py:24] # 
I1203 00:17:07.058801 139917320247040 hlog.py:32] train 543
I1203 00:17:07.058903 139917320247040 hlog.py:32] aug 0
I1203 00:17:24.097624 139917320247040 hlog.py:32] train/00000/loss 3.2013
I1203 00:17:36.084242 139917320247040 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 00:17:37.987370 139917320247040 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 00:17:37.988160 139917320247040 hlog.py:18] train/00000{27.14s}
I1203 00:17:50.646341 139917320247040 hlog.py:32] train/00001/loss 1.1240
I1203 00:17:57.367258 139917320247040 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 00:17:58.046945 139917320247040 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 00:17:58.047383 139917320247040 hlog.py:18] train/00001{20.06s}
I1203 00:18:10.492267 139917320247040 hlog.py:32] train/00002/loss 0.7348
I1203 00:18:13.848870 139917320247040 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 00:18:14.425031 139917320247040 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 00:18:14.425590 139917320247040 hlog.py:18] train/00002{16.38s}
I1203 00:18:27.023996 139917320247040 hlog.py:32] train/00003/loss 0.5769
I1203 00:18:32.228810 139917320247040 hlog.py:32] train/00003/eval_train/acc 0.1090
I1203 00:18:33.182584 139917320247040 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 00:18:33.183073 139917320247040 hlog.py:18] train/00003{18.76s}
I1203 00:18:46.149987 139917320247040 hlog.py:32] train/00004/loss 0.4897
I1203 00:18:53.114157 139917320247040 hlog.py:32] train/00004/eval_train/acc 0.1140
I1203 00:18:54.363553 139917320247040 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 00:18:54.364048 139917320247040 hlog.py:18] train/00004{21.18s}
I1203 00:19:05.849210 139917320247040 hlog.py:32] train/00005/loss 0.4009
I1203 00:19:13.375654 139917320247040 hlog.py:32] train/00005/eval_train/acc 0.1600
I1203 00:19:14.617798 139917320247040 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 00:19:14.618332 139917320247040 hlog.py:18] train/00005{20.25s}
I1203 00:19:26.050481 139917320247040 hlog.py:32] train/00006/loss 0.3257
I1203 00:19:30.450693 139917320247040 hlog.py:32] train/00006/eval_train/acc 0.2090
I1203 00:19:31.048894 139917320247040 hlog.py:32] train/00006/eval_val/acc 0.0000
I1203 00:19:31.049326 139917320247040 hlog.py:18] train/00006{16.43s}
I1203 00:19:42.914604 139917320247040 hlog.py:32] train/00007/loss 0.2891
I1203 00:19:46.445448 139917320247040 hlog.py:32] train/00007/eval_train/acc 0.3410
I1203 00:19:47.030217 139917320247040 hlog.py:32] train/00007/eval_val/acc 0.1419
I1203 00:19:47.030681 139917320247040 hlog.py:18] train/00007{15.98s}
I1203 00:19:59.929156 139917320247040 hlog.py:32] train/00008/loss 0.2581
I1203 00:20:06.396422 139917320247040 hlog.py:32] train/00008/eval_train/acc 0.4090
I1203 00:20:07.498914 139917320247040 hlog.py:32] train/00008/eval_val/acc 0.0743
I1203 00:20:07.499441 139917320247040 hlog.py:18] train/00008{20.47s}
I1203 00:20:18.660601 139917320247040 hlog.py:32] train/00009/loss 0.1959
I1203 00:20:23.270123 139917320247040 hlog.py:32] train/00009/eval_train/acc 0.4700
I1203 00:20:24.082778 139917320247040 hlog.py:32] train/00009/eval_val/acc 0.1014
I1203 00:20:24.199892 139917320247040 hlog.py:18] train/00009{16.70s}
I1203 00:20:35.703114 139917320247040 hlog.py:32] train/00010/loss 0.1707
I1203 00:20:39.761118 139917320247040 hlog.py:32] train/00010/eval_train/acc 0.5190
I1203 00:20:40.376442 139917320247040 hlog.py:32] train/00010/eval_val/acc 0.1351
I1203 00:20:40.376930 139917320247040 hlog.py:18] train/00010{16.18s}
I1203 00:20:53.315965 139917320247040 hlog.py:32] train/00011/loss 0.1797
I1203 00:20:59.044857 139917320247040 hlog.py:32] train/00011/eval_train/acc 0.5600
I1203 00:20:59.841155 139917320247040 hlog.py:32] train/00011/eval_val/acc 0.1689
I1203 00:20:59.841614 139917320247040 hlog.py:18] train/00011{19.46s}
I1203 00:21:11.631580 139917320247040 hlog.py:32] train/00012/loss 0.1783
I1203 00:21:17.597107 139917320247040 hlog.py:32] train/00012/eval_train/acc 0.5630
I1203 00:21:18.215311 139917320247040 hlog.py:32] train/00012/eval_val/acc 0.1824
I1203 00:21:18.215831 139917320247040 hlog.py:18] train/00012{18.37s}
I1203 00:21:29.381928 139917320247040 hlog.py:32] train/00013/loss 0.1655
I1203 00:21:33.238140 139917320247040 hlog.py:32] train/00013/eval_train/acc 0.5830
I1203 00:21:34.030853 139917320247040 hlog.py:32] train/00013/eval_val/acc 0.2905
I1203 00:21:34.031353 139917320247040 hlog.py:18] train/00013{15.82s}
I1203 00:21:46.291524 139917320247040 hlog.py:32] train/00014/loss 0.1458
I1203 00:21:50.035488 139917320247040 hlog.py:32] train/00014/eval_train/acc 0.6770
I1203 00:21:50.720348 139917320247040 hlog.py:32] train/00014/eval_val/acc 0.2297
I1203 00:21:50.720810 139917320247040 hlog.py:18] train/00014{16.69s}
I1203 00:22:02.891874 139917320247040 hlog.py:32] train/00015/loss 0.1454
I1203 00:22:06.551852 139917320247040 hlog.py:32] train/00015/eval_train/acc 0.7090
I1203 00:22:07.170377 139917320247040 hlog.py:32] train/00015/eval_val/acc 0.3919
I1203 00:22:07.171058 139917320247040 hlog.py:18] train/00015{16.45s}
I1203 00:22:19.165700 139917320247040 hlog.py:32] train/00016/loss 0.1224
I1203 00:22:23.304523 139917320247040 hlog.py:32] train/00016/eval_train/acc 0.7550
I1203 00:22:24.051997 139917320247040 hlog.py:32] train/00016/eval_val/acc 0.2297
I1203 00:22:24.052663 139917320247040 hlog.py:18] train/00016{16.88s}
I1203 00:22:36.458457 139917320247040 hlog.py:32] train/00017/loss 0.1181
I1203 00:22:40.366045 139917320247040 hlog.py:32] train/00017/eval_train/acc 0.6970
I1203 00:22:40.924310 139917320247040 hlog.py:32] train/00017/eval_val/acc 0.3649
I1203 00:22:40.924821 139917320247040 hlog.py:18] train/00017{16.87s}
I1203 00:22:52.916244 139917320247040 hlog.py:32] train/00018/loss 0.0971
I1203 00:22:56.810888 139917320247040 hlog.py:32] train/00018/eval_train/acc 0.8150
I1203 00:22:57.370320 139917320247040 hlog.py:32] train/00018/eval_val/acc 0.3581
I1203 00:22:57.370792 139917320247040 hlog.py:18] train/00018{16.45s}
I1203 00:23:08.864067 139917320247040 hlog.py:32] train/00019/loss 0.0890
I1203 00:23:13.161862 139917320247040 hlog.py:32] train/00019/eval_train/acc 0.8010
I1203 00:23:13.774689 139917320247040 hlog.py:32] train/00019/eval_val/acc 0.3784
I1203 00:23:13.805022 139917320247040 hlog.py:18] train/00019{16.43s}
I1203 00:23:25.401898 139917320247040 hlog.py:32] train/00020/loss 0.0755
I1203 00:23:29.437803 139917320247040 hlog.py:32] train/00020/eval_train/acc 0.8230
I1203 00:23:30.041402 139917320247040 hlog.py:32] train/00020/eval_val/acc 0.4054
I1203 00:23:30.041862 139917320247040 hlog.py:18] train/00020{16.24s}
I1203 00:23:42.652482 139917320247040 hlog.py:32] train/00021/loss 0.0754
I1203 00:23:46.458652 139917320247040 hlog.py:32] train/00021/eval_train/acc 0.8520
I1203 00:23:47.014619 139917320247040 hlog.py:32] train/00021/eval_val/acc 0.4257
I1203 00:23:47.015083 139917320247040 hlog.py:18] train/00021{16.97s}
I1203 00:23:58.628671 139917320247040 hlog.py:32] train/00022/loss 0.0623
I1203 00:24:03.343028 139917320247040 hlog.py:32] train/00022/eval_train/acc 0.8380
I1203 00:24:03.932827 139917320247040 hlog.py:32] train/00022/eval_val/acc 0.4054
I1203 00:24:03.933301 139917320247040 hlog.py:18] train/00022{16.92s}
I1203 00:24:16.258297 139917320247040 hlog.py:32] train/00023/loss 0.0579
I1203 00:24:20.247758 139917320247040 hlog.py:32] train/00023/eval_train/acc 0.8650
I1203 00:24:20.821720 139917320247040 hlog.py:32] train/00023/eval_val/acc 0.4257
I1203 00:24:20.822231 139917320247040 hlog.py:18] train/00023{16.89s}
I1203 00:24:32.552236 139917320247040 hlog.py:32] train/00024/loss 0.0565
I1203 00:24:36.468126 139917320247040 hlog.py:32] train/00024/eval_train/acc 0.9010
I1203 00:24:37.069227 139917320247040 hlog.py:32] train/00024/eval_val/acc 0.4392
I1203 00:24:37.069813 139917320247040 hlog.py:18] train/00024{16.25s}
I1203 00:24:49.258267 139917320247040 hlog.py:32] train/00025/loss 0.0522
I1203 00:24:53.264567 139917320247040 hlog.py:32] train/00025/eval_train/acc 0.8990
I1203 00:24:53.828572 139917320247040 hlog.py:32] train/00025/eval_val/acc 0.4797
I1203 00:24:53.829242 139917320247040 hlog.py:18] train/00025{16.76s}
I1203 00:25:05.587657 139917320247040 hlog.py:32] train/00026/loss 0.0628
I1203 00:25:10.483629 139917320247040 hlog.py:32] train/00026/eval_train/acc 0.8870
I1203 00:25:11.116568 139917320247040 hlog.py:32] train/00026/eval_val/acc 0.4324
I1203 00:25:11.117059 139917320247040 hlog.py:18] train/00026{17.29s}
I1203 00:25:23.547236 139917320247040 hlog.py:32] train/00027/loss 0.0683
I1203 00:25:27.526742 139917320247040 hlog.py:32] train/00027/eval_train/acc 0.8530
I1203 00:25:28.079155 139917320247040 hlog.py:32] train/00027/eval_val/acc 0.4797
I1203 00:25:28.079662 139917320247040 hlog.py:18] train/00027{16.96s}
I1203 00:25:39.666945 139917320247040 hlog.py:32] train/00028/loss 0.0556
I1203 00:25:43.683041 139917320247040 hlog.py:32] train/00028/eval_train/acc 0.8990
I1203 00:25:44.302811 139917320247040 hlog.py:32] train/00028/eval_val/acc 0.5270
I1203 00:25:44.303319 139917320247040 hlog.py:18] train/00028{16.22s}
I1203 00:25:55.986330 139917320247040 hlog.py:32] train/00029/loss 0.0494
I1203 00:25:59.711615 139917320247040 hlog.py:32] train/00029/eval_train/acc 0.8580
I1203 00:26:00.255183 139917320247040 hlog.py:32] train/00029/eval_val/acc 0.4527
I1203 00:26:00.548396 139917320247040 hlog.py:18] train/00029{16.24s}
I1203 00:26:13.152432 139917320247040 hlog.py:32] train/00030/loss 0.0507
I1203 00:26:17.204993 139917320247040 hlog.py:32] train/00030/eval_train/acc 0.8900
I1203 00:26:17.766152 139917320247040 hlog.py:32] train/00030/eval_val/acc 0.4459
I1203 00:26:17.766813 139917320247040 hlog.py:18] train/00030{17.22s}
I1203 00:26:29.862885 139917320247040 hlog.py:32] train/00031/loss 0.0492
I1203 00:26:33.724696 139917320247040 hlog.py:32] train/00031/eval_train/acc 0.9330
I1203 00:26:34.299092 139917320247040 hlog.py:32] train/00031/eval_val/acc 0.4730
I1203 00:26:34.299575 139917320247040 hlog.py:18] train/00031{16.53s}
I1203 00:26:45.406186 139917320247040 hlog.py:32] train/00032/loss 0.0419
I1203 00:26:49.562104 139917320247040 hlog.py:32] train/00032/eval_train/acc 0.9280
I1203 00:26:50.183540 139917320247040 hlog.py:32] train/00032/eval_val/acc 0.4932
I1203 00:26:50.184025 139917320247040 hlog.py:18] train/00032{15.88s}
I1203 00:27:02.833268 139917320247040 hlog.py:32] train/00033/loss 0.0453
I1203 00:27:07.194664 139917320247040 hlog.py:32] train/00033/eval_train/acc 0.9200
I1203 00:27:07.779160 139917320247040 hlog.py:32] train/00033/eval_val/acc 0.4459
I1203 00:27:07.779667 139917320247040 hlog.py:18] train/00033{17.60s}
I1203 00:27:19.887655 139917320247040 hlog.py:32] train/00034/loss 0.0374
I1203 00:27:23.795125 139917320247040 hlog.py:32] train/00034/eval_train/acc 0.9510
I1203 00:27:24.407746 139917320247040 hlog.py:32] train/00034/eval_val/acc 0.5068
I1203 00:27:24.408221 139917320247040 hlog.py:18] train/00034{16.63s}
I1203 00:27:35.315819 139917320247040 hlog.py:32] train/00035/loss 0.0286
I1203 00:27:39.088553 139917320247040 hlog.py:32] train/00035/eval_train/acc 0.9720
I1203 00:27:39.643015 139917320247040 hlog.py:32] train/00035/eval_val/acc 0.5338
I1203 00:27:39.643501 139917320247040 hlog.py:18] train/00035{15.24s}
I1203 00:27:52.244735 139917320247040 hlog.py:32] train/00036/loss 0.0327
I1203 00:27:56.541785 139917320247040 hlog.py:32] train/00036/eval_train/acc 0.9330
I1203 00:27:57.108132 139917320247040 hlog.py:32] train/00036/eval_val/acc 0.5068
I1203 00:27:57.108617 139917320247040 hlog.py:18] train/00036{17.47s}
I1203 00:28:08.916084 139917320247040 hlog.py:32] train/00037/loss 0.0404
I1203 00:28:12.777334 139917320247040 hlog.py:32] train/00037/eval_train/acc 0.9600
I1203 00:28:13.371864 139917320247040 hlog.py:32] train/00037/eval_val/acc 0.5473
I1203 00:28:13.372281 139917320247040 hlog.py:18] train/00037{16.26s}
I1203 00:28:25.356047 139917320247040 hlog.py:32] train/00038/loss 0.0378
I1203 00:28:29.095437 139917320247040 hlog.py:32] train/00038/eval_train/acc 0.9490
I1203 00:28:29.660735 139917320247040 hlog.py:32] train/00038/eval_val/acc 0.5000
I1203 00:28:29.661193 139917320247040 hlog.py:18] train/00038{16.29s}
I1203 00:28:41.667562 139917320247040 hlog.py:32] train/00039/loss 0.0410
I1203 00:28:45.466274 139917320247040 hlog.py:32] train/00039/eval_train/acc 0.9570
I1203 00:28:46.095194 139917320247040 hlog.py:32] train/00039/eval_val/acc 0.4662
I1203 00:28:46.125972 139917320247040 hlog.py:18] train/00039{16.46s}
I1203 00:28:57.262064 139917320247040 hlog.py:32] train/00040/loss 0.0484
I1203 00:29:01.082299 139917320247040 hlog.py:32] train/00040/eval_train/acc 0.9440
I1203 00:29:01.633751 139917320247040 hlog.py:32] train/00040/eval_val/acc 0.5000
I1203 00:29:01.634246 139917320247040 hlog.py:18] train/00040{15.51s}
I1203 00:29:13.337121 139917320247040 hlog.py:32] train/00041/loss 0.0390
I1203 00:29:17.024737 139917320247040 hlog.py:32] train/00041/eval_train/acc 0.9660
I1203 00:29:17.655776 139917320247040 hlog.py:32] train/00041/eval_val/acc 0.4527
I1203 00:29:17.656279 139917320247040 hlog.py:18] train/00041{16.02s}
I1203 00:29:29.351051 139917320247040 hlog.py:32] train/00042/loss 0.0294
I1203 00:29:33.111744 139917320247040 hlog.py:32] train/00042/eval_train/acc 0.9620
I1203 00:29:33.723300 139917320247040 hlog.py:32] train/00042/eval_val/acc 0.5541
I1203 00:29:33.723807 139917320247040 hlog.py:18] train/00042{16.07s}
I1203 00:29:45.344901 139917320247040 hlog.py:32] train/00043/loss 0.0265
I1203 00:29:50.155560 139917320247040 hlog.py:32] train/00043/eval_train/acc 0.9720
I1203 00:29:50.768203 139917320247040 hlog.py:32] train/00043/eval_val/acc 0.5203
I1203 00:29:50.768886 139917320247040 hlog.py:18] train/00043{17.04s}
I1203 00:30:02.424758 139917320247040 hlog.py:32] train/00044/loss 0.0342
I1203 00:30:06.739106 139917320247040 hlog.py:32] train/00044/eval_train/acc 0.9690
I1203 00:30:07.314904 139917320247040 hlog.py:32] train/00044/eval_val/acc 0.5338
I1203 00:30:07.315588 139917320247040 hlog.py:18] train/00044{16.55s}
I1203 00:30:20.408797 139917320247040 hlog.py:32] train/00045/loss 0.0448
I1203 00:30:24.745792 139917320247040 hlog.py:32] train/00045/eval_train/acc 0.9740
I1203 00:30:25.356477 139917320247040 hlog.py:32] train/00045/eval_val/acc 0.4865
I1203 00:30:25.356979 139917320247040 hlog.py:18] train/00045{18.04s}
I1203 00:30:38.065381 139917320247040 hlog.py:32] train/00046/loss 0.0596
I1203 00:30:41.695151 139917320247040 hlog.py:32] train/00046/eval_train/acc 0.9770
I1203 00:30:42.295704 139917320247040 hlog.py:32] train/00046/eval_val/acc 0.5068
I1203 00:30:42.296189 139917320247040 hlog.py:18] train/00046{16.94s}
I1203 00:30:54.352915 139917320247040 hlog.py:32] train/00047/loss 0.0327
I1203 00:30:58.874554 139917320247040 hlog.py:32] train/00047/eval_train/acc 0.9700
I1203 00:30:59.548706 139917320247040 hlog.py:32] train/00047/eval_val/acc 0.5203
I1203 00:30:59.549400 139917320247040 hlog.py:18] train/00047{17.25s}
I1203 00:31:10.895667 139917320247040 hlog.py:32] train/00048/loss 0.0293
I1203 00:31:15.180191 139917320247040 hlog.py:32] train/00048/eval_train/acc 0.9760
I1203 00:31:15.762434 139917320247040 hlog.py:32] train/00048/eval_val/acc 0.5541
I1203 00:31:15.762908 139917320247040 hlog.py:18] train/00048{16.21s}
I1203 00:31:28.672902 139917320247040 hlog.py:32] train/00049/loss 0.0527
I1203 00:31:32.416530 139917320247040 hlog.py:32] train/00049/eval_train/acc 0.9510
I1203 00:31:33.065185 139917320247040 hlog.py:32] train/00049/eval_val/acc 0.5270
I1203 00:31:33.222528 139917320247040 hlog.py:18] train/00049{17.46s}
I1203 00:31:45.464356 139917320247040 hlog.py:32] train/00050/loss 0.0387
I1203 00:31:50.436907 139917320247040 hlog.py:32] train/00050/eval_train/acc 0.9430
I1203 00:31:51.071976 139917320247040 hlog.py:32] train/00050/eval_val/acc 0.5608
I1203 00:31:51.072487 139917320247040 hlog.py:18] train/00050{17.85s}
I1203 00:32:02.775658 139917320247040 hlog.py:32] train/00051/loss 0.0319
I1203 00:32:06.631533 139917320247040 hlog.py:32] train/00051/eval_train/acc 0.9570
I1203 00:32:07.232256 139917320247040 hlog.py:32] train/00051/eval_val/acc 0.5068
I1203 00:32:07.232791 139917320247040 hlog.py:18] train/00051{16.16s}
I1203 00:32:18.541464 139917320247040 hlog.py:32] train/00052/loss 0.0403
I1203 00:32:22.422723 139917320247040 hlog.py:32] train/00052/eval_train/acc 0.9680
I1203 00:32:22.957962 139917320247040 hlog.py:32] train/00052/eval_val/acc 0.5068
I1203 00:32:22.958429 139917320247040 hlog.py:18] train/00052{15.73s}
I1203 00:32:34.954889 139917320247040 hlog.py:32] train/00053/loss 0.0302
I1203 00:32:38.878086 139917320247040 hlog.py:32] train/00053/eval_train/acc 0.9610
I1203 00:32:39.435164 139917320247040 hlog.py:32] train/00053/eval_val/acc 0.5000
I1203 00:32:39.435695 139917320247040 hlog.py:18] train/00053{16.48s}
I1203 00:32:51.870193 139917320247040 hlog.py:32] train/00054/loss 0.0498
I1203 00:32:56.577661 139917320247040 hlog.py:32] train/00054/eval_train/acc 0.9340
I1203 00:32:57.195865 139917320247040 hlog.py:32] train/00054/eval_val/acc 0.5203
I1203 00:32:57.196372 139917320247040 hlog.py:18] train/00054{17.76s}
I1203 00:33:10.106434 139917320247040 hlog.py:32] train/00055/loss 0.0335
I1203 00:33:15.092801 139917320247040 hlog.py:32] train/00055/eval_train/acc 0.9610
I1203 00:33:15.680083 139917320247040 hlog.py:32] train/00055/eval_val/acc 0.5541
I1203 00:33:15.680601 139917320247040 hlog.py:18] train/00055{18.48s}
I1203 00:33:27.402354 139917320247040 hlog.py:32] train/00056/loss 0.0334
I1203 00:33:31.083804 139917320247040 hlog.py:32] train/00056/eval_train/acc 0.9490
I1203 00:33:31.641807 139917320247040 hlog.py:32] train/00056/eval_val/acc 0.5473
I1203 00:33:31.642250 139917320247040 hlog.py:18] train/00056{15.96s}
I1203 00:33:44.406881 139917320247040 hlog.py:32] train/00057/loss 0.0276
I1203 00:33:48.178526 139917320247040 hlog.py:32] train/00057/eval_train/acc 0.9790
I1203 00:33:48.778851 139917320247040 hlog.py:32] train/00057/eval_val/acc 0.5473
I1203 00:33:48.779338 139917320247040 hlog.py:18] train/00057{17.14s}
I1203 00:34:01.063800 139917320247040 hlog.py:32] train/00058/loss 0.0225
I1203 00:34:05.078104 139917320247040 hlog.py:32] train/00058/eval_train/acc 0.9730
I1203 00:34:05.669966 139917320247040 hlog.py:32] train/00058/eval_val/acc 0.5676
I1203 00:34:05.670460 139917320247040 hlog.py:18] train/00058{16.89s}
I1203 00:34:17.233763 139917320247040 hlog.py:32] train/00059/loss 0.0221
I1203 00:34:21.041245 139917320247040 hlog.py:32] train/00059/eval_train/acc 0.9870
I1203 00:34:21.635896 139917320247040 hlog.py:32] train/00059/eval_val/acc 0.5135
I1203 00:34:21.791554 139917320247040 hlog.py:18] train/00059{16.12s}
I1203 00:34:34.259587 139917320247040 hlog.py:32] train/00060/loss 0.0218
I1203 00:34:38.104825 139917320247040 hlog.py:32] train/00060/eval_train/acc 0.9910
I1203 00:34:38.716152 139917320247040 hlog.py:32] train/00060/eval_val/acc 0.4595
I1203 00:34:38.716653 139917320247040 hlog.py:18] train/00060{16.92s}
I1203 00:34:50.460183 139917320247040 hlog.py:32] train/00061/loss 0.0262
I1203 00:34:54.309907 139917320247040 hlog.py:32] train/00061/eval_train/acc 0.9880
I1203 00:34:54.887111 139917320247040 hlog.py:32] train/00061/eval_val/acc 0.5270
I1203 00:34:54.887639 139917320247040 hlog.py:18] train/00061{16.17s}
I1203 00:35:06.758639 139917320247040 hlog.py:32] train/00062/loss 0.0237
I1203 00:35:10.650379 139917320247040 hlog.py:32] train/00062/eval_train/acc 0.9830
I1203 00:35:11.211211 139917320247040 hlog.py:32] train/00062/eval_val/acc 0.5338
I1203 00:35:11.211734 139917320247040 hlog.py:18] train/00062{16.32s}
I1203 00:35:23.585929 139917320247040 hlog.py:32] train/00063/loss 0.0377
I1203 00:35:27.619146 139917320247040 hlog.py:32] train/00063/eval_train/acc 0.9670
I1203 00:35:28.203572 139917320247040 hlog.py:32] train/00063/eval_val/acc 0.4662
I1203 00:35:28.204059 139917320247040 hlog.py:18] train/00063{16.99s}
I1203 00:35:40.156139 139917320247040 hlog.py:32] train/00064/loss 0.0322
I1203 00:35:43.780481 139917320247040 hlog.py:32] train/00064/eval_train/acc 0.9820
I1203 00:35:44.429574 139917320247040 hlog.py:32] train/00064/eval_val/acc 0.4797
I1203 00:35:44.430050 139917320247040 hlog.py:18] train/00064{16.23s}
I1203 00:35:56.315780 139917320247040 hlog.py:32] train/00065/loss 0.0319
I1203 00:36:00.685994 139917320247040 hlog.py:32] train/00065/eval_train/acc 0.9700
I1203 00:36:01.294737 139917320247040 hlog.py:32] train/00065/eval_val/acc 0.5338
I1203 00:36:01.295226 139917320247040 hlog.py:18] train/00065{16.87s}
I1203 00:36:13.158209 139917320247040 hlog.py:32] train/00066/loss 0.0246
I1203 00:36:16.870573 139917320247040 hlog.py:32] train/00066/eval_train/acc 0.9900
I1203 00:36:17.495196 139917320247040 hlog.py:32] train/00066/eval_val/acc 0.5135
I1203 00:36:17.495727 139917320247040 hlog.py:18] train/00066{16.20s}
I1203 00:36:29.470484 139917320247040 hlog.py:32] train/00067/loss 0.0202
I1203 00:36:33.321764 139917320247040 hlog.py:32] train/00067/eval_train/acc 0.9840
I1203 00:36:33.977595 139917320247040 hlog.py:32] train/00067/eval_val/acc 0.5270
I1203 00:36:33.978263 139917320247040 hlog.py:18] train/00067{16.48s}
I1203 00:36:45.441158 139917320247040 hlog.py:32] train/00068/loss 0.0150
I1203 00:36:49.205051 139917320247040 hlog.py:32] train/00068/eval_train/acc 0.9950
I1203 00:36:49.785023 139917320247040 hlog.py:32] train/00068/eval_val/acc 0.5270
I1203 00:36:49.785501 139917320247040 hlog.py:18] train/00068{15.81s}
I1203 00:37:02.082769 139917320247040 hlog.py:32] train/00069/loss 0.0139
I1203 00:37:05.928868 139917320247040 hlog.py:32] train/00069/eval_train/acc 0.9660
I1203 00:37:06.550542 139917320247040 hlog.py:32] train/00069/eval_val/acc 0.5473
I1203 00:37:06.581126 139917320247040 hlog.py:18] train/00069{16.80s}
I1203 00:37:19.320100 139917320247040 hlog.py:32] train/00070/loss 0.0299
I1203 00:37:23.060782 139917320247040 hlog.py:32] train/00070/eval_train/acc 0.9870
I1203 00:37:23.631384 139917320247040 hlog.py:32] train/00070/eval_val/acc 0.5405
I1203 00:37:23.631893 139917320247040 hlog.py:18] train/00070{17.05s}
I1203 00:37:35.510253 139917320247040 hlog.py:32] train/00071/loss 0.0160
I1203 00:37:39.439223 139917320247040 hlog.py:32] train/00071/eval_train/acc 0.9970
I1203 00:37:40.036698 139917320247040 hlog.py:32] train/00071/eval_val/acc 0.5608
I1203 00:37:40.037399 139917320247040 hlog.py:18] train/00071{16.41s}
I1203 00:37:52.231854 139917320247040 hlog.py:32] train/00072/loss 0.0184
I1203 00:37:56.090715 139917320247040 hlog.py:32] train/00072/eval_train/acc 0.9990
I1203 00:37:56.770869 139917320247040 hlog.py:32] train/00072/eval_val/acc 0.5405
I1203 00:37:56.771550 139917320247040 hlog.py:18] train/00072{16.73s}
I1203 00:38:08.271806 139917320247040 hlog.py:32] train/00073/loss 0.0087
I1203 00:38:12.073087 139917320247040 hlog.py:32] train/00073/eval_train/acc 1.0000
I1203 00:38:12.709522 139917320247040 hlog.py:32] train/00073/eval_val/acc 0.5676
I1203 00:38:12.709998 139917320247040 hlog.py:18] train/00073{15.94s}
I1203 00:38:24.585615 139917320247040 hlog.py:32] train/00074/loss 0.0079
I1203 00:38:28.286488 139917320247040 hlog.py:32] train/00074/eval_train/acc 0.9970
I1203 00:38:28.889602 139917320247040 hlog.py:32] train/00074/eval_val/acc 0.5811
I1203 00:38:28.890076 139917320247040 hlog.py:18] train/00074{16.18s}
I1203 00:38:40.871503 139917320247040 hlog.py:32] train/00075/loss 0.0117
I1203 00:38:44.963655 139917320247040 hlog.py:32] train/00075/eval_train/acc 0.9980
I1203 00:38:45.551496 139917320247040 hlog.py:32] train/00075/eval_val/acc 0.5608
I1203 00:38:45.551973 139917320247040 hlog.py:18] train/00075{16.66s}
I1203 00:38:57.406442 139917320247040 hlog.py:32] train/00076/loss 0.0080
I1203 00:39:01.407877 139917320247040 hlog.py:32] train/00076/eval_train/acc 0.9950
I1203 00:39:01.998755 139917320247040 hlog.py:32] train/00076/eval_val/acc 0.5608
I1203 00:39:01.999258 139917320247040 hlog.py:18] train/00076{16.45s}
I1203 00:39:13.774623 139917320247040 hlog.py:32] train/00077/loss 0.0063
I1203 00:39:17.638066 139917320247040 hlog.py:32] train/00077/eval_train/acc 0.9970
I1203 00:39:18.227294 139917320247040 hlog.py:32] train/00077/eval_val/acc 0.5676
I1203 00:39:18.227719 139917320247040 hlog.py:18] train/00077{16.23s}
I1203 00:39:30.900535 139917320247040 hlog.py:32] train/00078/loss 0.0066
I1203 00:39:34.804157 139917320247040 hlog.py:32] train/00078/eval_train/acc 0.9990
I1203 00:39:35.435839 139917320247040 hlog.py:32] train/00078/eval_val/acc 0.5676
I1203 00:39:35.436312 139917320247040 hlog.py:18] train/00078{17.21s}
I1203 00:39:47.632572 139917320247040 hlog.py:32] train/00079/loss 0.0065
I1203 00:39:51.503762 139917320247040 hlog.py:32] train/00079/eval_train/acc 1.0000
I1203 00:39:52.121380 139917320247040 hlog.py:32] train/00079/eval_val/acc 0.5743
I1203 00:39:52.151838 139917320247040 hlog.py:18] train/00079{16.72s}
I1203 00:40:04.103663 139917320247040 hlog.py:32] train/00080/loss 0.0055
I1203 00:40:07.991807 139917320247040 hlog.py:32] train/00080/eval_train/acc 0.9960
I1203 00:40:08.585182 139917320247040 hlog.py:32] train/00080/eval_val/acc 0.5743
I1203 00:40:08.585667 139917320247040 hlog.py:18] train/00080{16.43s}
I1203 00:40:20.169453 139917320247040 hlog.py:32] train/00081/loss 0.0050
I1203 00:40:24.131835 139917320247040 hlog.py:32] train/00081/eval_train/acc 0.9970
I1203 00:40:24.740973 139917320247040 hlog.py:32] train/00081/eval_val/acc 0.5811
I1203 00:40:24.741451 139917320247040 hlog.py:18] train/00081{16.16s}
I1203 00:40:37.068380 139917320247040 hlog.py:32] train/00082/loss 0.0059
I1203 00:40:40.970531 139917320247040 hlog.py:32] train/00082/eval_train/acc 0.9960
I1203 00:40:41.575297 139917320247040 hlog.py:32] train/00082/eval_val/acc 0.5811
I1203 00:40:41.575852 139917320247040 hlog.py:18] train/00082{16.83s}
I1203 00:40:54.065347 139917320247040 hlog.py:32] train/00083/loss 0.0061
I1203 00:40:58.016239 139917320247040 hlog.py:32] train/00083/eval_train/acc 1.0000
I1203 00:40:58.619925 139917320247040 hlog.py:32] train/00083/eval_val/acc 0.5608
I1203 00:40:58.620407 139917320247040 hlog.py:18] train/00083{17.04s}
I1203 00:41:10.579919 139917320247040 hlog.py:32] train/00084/loss 0.0053
I1203 00:41:14.469348 139917320247040 hlog.py:32] train/00084/eval_train/acc 1.0000
I1203 00:41:15.095940 139917320247040 hlog.py:32] train/00084/eval_val/acc 0.5946
I1203 00:41:15.096617 139917320247040 hlog.py:18] train/00084{16.48s}
I1203 00:41:26.304111 139917320247040 hlog.py:32] train/00085/loss 0.0049
I1203 00:41:30.216960 139917320247040 hlog.py:32] train/00085/eval_train/acc 0.9980
I1203 00:41:30.816715 139917320247040 hlog.py:32] train/00085/eval_val/acc 0.6014
I1203 00:41:30.817191 139917320247040 hlog.py:18] train/00085{15.72s}
I1203 00:41:42.344277 139917320247040 hlog.py:32] train/00086/loss 0.0051
I1203 00:41:46.489735 139917320247040 hlog.py:32] train/00086/eval_train/acc 1.0000
I1203 00:41:47.074895 139917320247040 hlog.py:32] train/00086/eval_val/acc 0.5946
I1203 00:41:47.075394 139917320247040 hlog.py:18] train/00086{16.26s}
I1203 00:41:59.660562 139917320247040 hlog.py:32] train/00087/loss 0.0051
I1203 00:42:03.613559 139917320247040 hlog.py:32] train/00087/eval_train/acc 0.9910
I1203 00:42:04.212044 139917320247040 hlog.py:32] train/00087/eval_val/acc 0.5608
I1203 00:42:04.212504 139917320247040 hlog.py:18] train/00087{17.14s}
I1203 00:42:16.649419 139917320247040 hlog.py:32] train/00088/loss 0.0047
I1203 00:42:20.408271 139917320247040 hlog.py:32] train/00088/eval_train/acc 1.0000
I1203 00:42:20.994990 139917320247040 hlog.py:32] train/00088/eval_val/acc 0.6014
I1203 00:42:20.995476 139917320247040 hlog.py:18] train/00088{16.78s}
I1203 00:42:32.945743 139917320247040 hlog.py:32] train/00089/loss 0.0044
I1203 00:42:36.845354 139917320247040 hlog.py:32] train/00089/eval_train/acc 0.9960
I1203 00:42:37.456110 139917320247040 hlog.py:32] train/00089/eval_val/acc 0.5743
I1203 00:42:37.485784 139917320247040 hlog.py:18] train/00089{16.49s}
I1203 00:42:49.259201 139917320247040 hlog.py:32] train/00090/loss 0.0051
I1203 00:42:53.336295 139917320247040 hlog.py:32] train/00090/eval_train/acc 1.0000
I1203 00:42:53.936722 139917320247040 hlog.py:32] train/00090/eval_val/acc 0.5878
I1203 00:42:53.937201 139917320247040 hlog.py:18] train/00090{16.45s}
I1203 00:43:06.363369 139917320247040 hlog.py:32] train/00091/loss 0.0055
I1203 00:43:10.616381 139917320247040 hlog.py:32] train/00091/eval_train/acc 0.9920
I1203 00:43:11.228871 139917320247040 hlog.py:32] train/00091/eval_val/acc 0.5811
I1203 00:43:11.229285 139917320247040 hlog.py:18] train/00091{17.29s}
I1203 00:43:24.131087 139917320247040 hlog.py:32] train/00092/loss 0.0054
I1203 00:43:27.922204 139917320247040 hlog.py:32] train/00092/eval_train/acc 1.0000
I1203 00:43:28.525279 139917320247040 hlog.py:32] train/00092/eval_val/acc 0.6014
I1203 00:43:28.525762 139917320247040 hlog.py:18] train/00092{17.30s}
I1203 00:43:40.919478 139917320247040 hlog.py:32] train/00093/loss 0.0052
I1203 00:43:44.647842 139917320247040 hlog.py:32] train/00093/eval_train/acc 0.9990
I1203 00:43:45.264872 139917320247040 hlog.py:32] train/00093/eval_val/acc 0.5878
I1203 00:43:45.265377 139917320247040 hlog.py:18] train/00093{16.74s}
I1203 00:43:58.310181 139917320247040 hlog.py:32] train/00094/loss 0.0041
I1203 00:44:01.915743 139917320247040 hlog.py:32] train/00094/eval_train/acc 1.0000
I1203 00:44:02.513889 139917320247040 hlog.py:32] train/00094/eval_val/acc 0.5946
I1203 00:44:02.514403 139917320247040 hlog.py:18] train/00094{17.25s}
I1203 00:44:14.716534 139917320247040 hlog.py:32] train/00095/loss 0.0039
I1203 00:44:18.554646 139917320247040 hlog.py:32] train/00095/eval_train/acc 1.0000
I1203 00:44:19.167070 139917320247040 hlog.py:32] train/00095/eval_val/acc 0.5878
I1203 00:44:19.167622 139917320247040 hlog.py:18] train/00095{16.65s}
I1203 00:44:30.329119 139917320247040 hlog.py:32] train/00096/loss 0.0039
I1203 00:44:34.305607 139917320247040 hlog.py:32] train/00096/eval_train/acc 0.9960
I1203 00:44:34.897137 139917320247040 hlog.py:32] train/00096/eval_val/acc 0.5676
I1203 00:44:34.897732 139917320247040 hlog.py:18] train/00096{15.73s}
I1203 00:44:46.467285 139917320247040 hlog.py:32] train/00097/loss 0.0058
I1203 00:44:50.433369 139917320247040 hlog.py:32] train/00097/eval_train/acc 0.9960
I1203 00:44:51.030353 139917320247040 hlog.py:32] train/00097/eval_val/acc 0.5811
I1203 00:44:51.031079 139917320247040 hlog.py:18] train/00097{16.13s}
I1203 00:45:02.774914 139917320247040 hlog.py:32] train/00098/loss 0.0034
I1203 00:45:06.537932 139917320247040 hlog.py:32] train/00098/eval_train/acc 1.0000
I1203 00:45:07.140046 139917320247040 hlog.py:32] train/00098/eval_val/acc 0.5946
I1203 00:45:07.140620 139917320247040 hlog.py:18] train/00098{16.11s}
I1203 00:45:19.580529 139917320247040 hlog.py:32] train/00099/loss 0.0034
I1203 00:45:23.526487 139917320247040 hlog.py:32] train/00099/eval_train/acc 1.0000
I1203 00:45:24.126977 139917320247040 hlog.py:32] train/00099/eval_val/acc 0.5946
I1203 00:45:24.285265 139917320247040 hlog.py:18] train/00099{17.14s}
I1203 00:45:35.700759 139917320247040 hlog.py:32] train/00100/loss 0.0030
I1203 00:45:39.422422 139917320247040 hlog.py:32] train/00100/eval_train/acc 1.0000
I1203 00:45:40.031831 139917320247040 hlog.py:32] train/00100/eval_val/acc 0.5811
I1203 00:45:40.032538 139917320247040 hlog.py:18] train/00100{15.75s}
I1203 00:45:52.297876 139917320247040 hlog.py:32] train/00101/loss 0.0030
I1203 00:45:56.288496 139917320247040 hlog.py:32] train/00101/eval_train/acc 1.0000
I1203 00:45:56.927486 139917320247040 hlog.py:32] train/00101/eval_val/acc 0.5676
I1203 00:45:56.928107 139917320247040 hlog.py:18] train/00101{16.90s}
I1203 00:46:08.902929 139917320247040 hlog.py:32] train/00102/loss 0.0035
I1203 00:46:12.845777 139917320247040 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 00:46:13.468551 139917320247040 hlog.py:32] train/00102/eval_val/acc 0.5608
I1203 00:46:13.469042 139917320247040 hlog.py:18] train/00102{16.54s}
I1203 00:46:25.484827 139917320247040 hlog.py:32] train/00103/loss 0.0025
I1203 00:46:29.364485 139917320247040 hlog.py:32] train/00103/eval_train/acc 0.9950
I1203 00:46:29.999493 139917320247040 hlog.py:32] train/00103/eval_val/acc 0.5743
I1203 00:46:30.000160 139917320247040 hlog.py:18] train/00103{16.53s}
I1203 00:46:42.644094 139917320247040 hlog.py:32] train/00104/loss 0.0038
I1203 00:46:46.430307 139917320247040 hlog.py:32] train/00104/eval_train/acc 1.0000
I1203 00:46:47.063377 139917320247040 hlog.py:32] train/00104/eval_val/acc 0.5676
I1203 00:46:47.064077 139917320247040 hlog.py:18] train/00104{17.06s}
I1203 00:46:59.772048 139917320247040 hlog.py:32] train/00105/loss 0.0033
I1203 00:47:03.750682 139917320247040 hlog.py:32] train/00105/eval_train/acc 1.0000
I1203 00:47:04.382435 139917320247040 hlog.py:32] train/00105/eval_val/acc 0.5811
I1203 00:47:04.383111 139917320247040 hlog.py:18] train/00105{17.32s}
I1203 00:47:17.162542 139917320247040 hlog.py:32] train/00106/loss 0.0033
I1203 00:47:20.890502 139917320247040 hlog.py:32] train/00106/eval_train/acc 1.0000
I1203 00:47:21.537462 139917320247040 hlog.py:32] train/00106/eval_val/acc 0.5743
I1203 00:47:21.538271 139917320247040 hlog.py:18] train/00106{17.16s}
I1203 00:47:34.033622 139917320247040 hlog.py:32] train/00107/loss 0.0028
I1203 00:47:38.062597 139917320247040 hlog.py:32] train/00107/eval_train/acc 1.0000
I1203 00:47:38.644903 139917320247040 hlog.py:32] train/00107/eval_val/acc 0.5811
I1203 00:47:38.645546 139917320247040 hlog.py:18] train/00107{17.11s}
I1203 00:47:51.071051 139917320247040 hlog.py:32] train/00108/loss 0.0028
I1203 00:47:54.840016 139917320247040 hlog.py:32] train/00108/eval_train/acc 1.0000
I1203 00:47:55.436358 139917320247040 hlog.py:32] train/00108/eval_val/acc 0.5743
I1203 00:47:55.436893 139917320247040 hlog.py:18] train/00108{16.79s}
I1203 00:48:08.177083 139917320247040 hlog.py:32] train/00109/loss 0.0029
I1203 00:48:12.401710 139917320247040 hlog.py:32] train/00109/eval_train/acc 1.0000
I1203 00:48:12.998577 139917320247040 hlog.py:32] train/00109/eval_val/acc 0.5676
I1203 00:48:13.029682 139917320247040 hlog.py:18] train/00109{17.59s}
I1203 00:48:24.896393 139917320247040 hlog.py:32] train/00110/loss 0.0023
I1203 00:48:28.936913 139917320247040 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 00:48:29.536603 139917320247040 hlog.py:32] train/00110/eval_val/acc 0.5743
I1203 00:48:29.537102 139917320247040 hlog.py:18] train/00110{16.51s}
I1203 00:48:40.843530 139917320247040 hlog.py:32] train/00111/loss 0.0021
I1203 00:48:44.879368 139917320247040 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 00:48:45.488266 139917320247040 hlog.py:32] train/00111/eval_val/acc 0.5811
I1203 00:48:45.488823 139917320247040 hlog.py:18] train/00111{15.95s}
I1203 00:48:57.407441 139917320247040 hlog.py:32] train/00112/loss 0.0019
I1203 00:49:01.073722 139917320247040 hlog.py:32] train/00112/eval_train/acc 1.0000
I1203 00:49:01.663329 139917320247040 hlog.py:32] train/00112/eval_val/acc 0.5878
I1203 00:49:01.663842 139917320247040 hlog.py:18] train/00112{16.17s}
I1203 00:49:14.669577 139917320247040 hlog.py:32] train/00113/loss 0.0025
I1203 00:49:18.606920 139917320247040 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 00:49:19.193717 139917320247040 hlog.py:32] train/00113/eval_val/acc 0.5811
I1203 00:49:19.194200 139917320247040 hlog.py:18] train/00113{17.53s}
I1203 00:49:31.442219 139917320247040 hlog.py:32] train/00114/loss 0.0019
I1203 00:49:35.131169 139917320247040 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 00:49:35.773452 139917320247040 hlog.py:32] train/00114/eval_val/acc 0.5811
I1203 00:49:35.774102 139917320247040 hlog.py:18] train/00114{16.58s}
I1203 00:49:47.610382 139917320247040 hlog.py:32] train/00115/loss 0.0021
I1203 00:49:51.569667 139917320247040 hlog.py:32] train/00115/eval_train/acc 1.0000
I1203 00:49:52.155112 139917320247040 hlog.py:32] train/00115/eval_val/acc 0.5811
I1203 00:49:52.155611 139917320247040 hlog.py:18] train/00115{16.38s}
I1203 00:50:04.596481 139917320247040 hlog.py:32] train/00116/loss 0.0026
I1203 00:50:08.379695 139917320247040 hlog.py:32] train/00116/eval_train/acc 1.0000
I1203 00:50:08.966374 139917320247040 hlog.py:32] train/00116/eval_val/acc 0.5811
I1203 00:50:08.966837 139917320247040 hlog.py:18] train/00116{16.81s}
I1203 00:50:22.397124 139917320247040 hlog.py:32] train/00117/loss 0.0026
I1203 00:50:26.552140 139917320247040 hlog.py:32] train/00117/eval_train/acc 1.0000
I1203 00:50:27.149567 139917320247040 hlog.py:32] train/00117/eval_val/acc 0.5946
I1203 00:50:27.149983 139917320247040 hlog.py:18] train/00117{18.18s}
I1203 00:50:39.766288 139917320247040 hlog.py:32] train/00118/loss 0.0026
I1203 00:50:43.712432 139917320247040 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 00:50:44.320929 139917320247040 hlog.py:32] train/00118/eval_val/acc 0.5878
I1203 00:50:44.321483 139917320247040 hlog.py:18] train/00118{17.17s}
I1203 00:50:57.189451 139917320247040 hlog.py:32] train/00119/loss 0.0021
I1203 00:51:00.829577 139917320247040 hlog.py:32] train/00119/eval_train/acc 1.0000
I1203 00:51:01.415938 139917320247040 hlog.py:32] train/00119/eval_val/acc 0.5946
I1203 00:51:01.572576 139917320247040 hlog.py:18] train/00119{17.25s}
I1203 00:51:13.778008 139917320247040 hlog.py:32] train/00120/loss 0.0023
I1203 00:51:17.342153 139917320247040 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 00:51:17.947198 139917320247040 hlog.py:32] train/00120/eval_val/acc 0.5878
I1203 00:51:17.947766 139917320247040 hlog.py:18] train/00120{16.37s}
I1203 00:51:30.313746 139917320247040 hlog.py:32] train/00121/loss 0.0025
I1203 00:51:33.992575 139917320247040 hlog.py:32] train/00121/eval_train/acc 1.0000
I1203 00:51:34.582109 139917320247040 hlog.py:32] train/00121/eval_val/acc 0.5811
I1203 00:51:34.582602 139917320247040 hlog.py:18] train/00121{16.63s}
I1203 00:51:46.594980 139917320247040 hlog.py:32] train/00122/loss 0.0023
I1203 00:51:50.707843 139917320247040 hlog.py:32] train/00122/eval_train/acc 1.0000
I1203 00:51:51.288464 139917320247040 hlog.py:32] train/00122/eval_val/acc 0.5743
I1203 00:51:51.288957 139917320247040 hlog.py:18] train/00122{16.71s}
I1203 00:52:02.962080 139917320247040 hlog.py:32] train/00123/loss 0.0023
I1203 00:52:07.147687 139917320247040 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 00:52:07.740405 139917320247040 hlog.py:32] train/00123/eval_val/acc 0.5811
I1203 00:52:07.741080 139917320247040 hlog.py:18] train/00123{16.45s}
I1203 00:52:19.417442 139917320247040 hlog.py:32] train/00124/loss 0.0020
I1203 00:52:23.138206 139917320247040 hlog.py:32] train/00124/eval_train/acc 1.0000
I1203 00:52:23.722838 139917320247040 hlog.py:32] train/00124/eval_val/acc 0.5743
I1203 00:52:23.723313 139917320247040 hlog.py:18] train/00124{15.98s}
I1203 00:52:36.688479 139917320247040 hlog.py:32] train/00125/loss 0.0020
I1203 00:52:40.346998 139917320247040 hlog.py:32] train/00125/eval_train/acc 1.0000
I1203 00:52:40.923630 139917320247040 hlog.py:32] train/00125/eval_val/acc 0.5743
I1203 00:52:40.924110 139917320247040 hlog.py:18] train/00125{17.20s}
I1203 00:52:53.800439 139917320247040 hlog.py:32] train/00126/loss 0.0021
I1203 00:52:57.572937 139917320247040 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 00:52:58.172069 139917320247040 hlog.py:32] train/00126/eval_val/acc 0.5878
I1203 00:52:58.172744 139917320247040 hlog.py:18] train/00126{17.25s}
I1203 00:53:10.463510 139917320247040 hlog.py:32] train/00127/loss 0.0021
I1203 00:53:14.247518 139917320247040 hlog.py:32] train/00127/eval_train/acc 1.0000
I1203 00:53:14.886239 139917320247040 hlog.py:32] train/00127/eval_val/acc 0.5811
I1203 00:53:14.886720 139917320247040 hlog.py:18] train/00127{16.71s}
I1203 00:53:26.730572 139917320247040 hlog.py:32] train/00128/loss 0.0022
I1203 00:53:30.437214 139917320247040 hlog.py:32] train/00128/eval_train/acc 1.0000
I1203 00:53:31.025126 139917320247040 hlog.py:32] train/00128/eval_val/acc 0.5811
I1203 00:53:31.025556 139917320247040 hlog.py:18] train/00128{16.14s}
I1203 00:53:42.239216 139917320247040 hlog.py:32] train/00129/loss 0.0018
I1203 00:53:46.021981 139917320247040 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 00:53:46.608029 139917320247040 hlog.py:32] train/00129/eval_val/acc 0.5946
I1203 00:53:46.639332 139917320247040 hlog.py:18] train/00129{15.61s}
I1203 00:53:58.077468 139917320247040 hlog.py:32] train/00130/loss 0.0019
I1203 00:54:01.881900 139917320247040 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 00:54:02.479690 139917320247040 hlog.py:32] train/00130/eval_val/acc 0.5811
I1203 00:54:02.480266 139917320247040 hlog.py:18] train/00130{15.84s}
I1203 00:54:14.353216 139917320247040 hlog.py:32] train/00131/loss 0.0017
I1203 00:54:18.293071 139917320247040 hlog.py:32] train/00131/eval_train/acc 1.0000
I1203 00:54:18.881071 139917320247040 hlog.py:32] train/00131/eval_val/acc 0.5811
I1203 00:54:18.881559 139917320247040 hlog.py:18] train/00131{16.40s}
I1203 00:54:30.725136 139917320247040 hlog.py:32] train/00132/loss 0.0036
I1203 00:54:34.940769 139917320247040 hlog.py:32] train/00132/eval_train/acc 1.0000
I1203 00:54:35.558764 139917320247040 hlog.py:32] train/00132/eval_val/acc 0.5878
I1203 00:54:35.559529 139917320247040 hlog.py:18] train/00132{16.68s}
I1203 00:54:48.626050 139917320247040 hlog.py:32] train/00133/loss 0.0020
I1203 00:54:52.783483 139917320247040 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 00:54:53.372565 139917320247040 hlog.py:32] train/00133/eval_val/acc 0.5878
I1203 00:54:53.373064 139917320247040 hlog.py:18] train/00133{17.81s}
I1203 00:55:05.146605 139917320247040 hlog.py:32] train/00134/loss 0.0018
I1203 00:55:09.103922 139917320247040 hlog.py:32] train/00134/eval_train/acc 1.0000
I1203 00:55:09.692435 139917320247040 hlog.py:32] train/00134/eval_val/acc 0.5946
I1203 00:55:09.692919 139917320247040 hlog.py:18] train/00134{16.32s}
I1203 00:55:21.681707 139917320247040 hlog.py:32] train/00135/loss 0.0018
I1203 00:55:25.463441 139917320247040 hlog.py:32] train/00135/eval_train/acc 1.0000
I1203 00:55:26.061862 139917320247040 hlog.py:32] train/00135/eval_val/acc 0.5878
I1203 00:55:26.062353 139917320247040 hlog.py:18] train/00135{16.37s}
I1203 00:55:37.859699 139917320247040 hlog.py:32] train/00136/loss 0.0020
I1203 00:55:41.720433 139917320247040 hlog.py:32] train/00136/eval_train/acc 1.0000
I1203 00:55:42.307022 139917320247040 hlog.py:32] train/00136/eval_val/acc 0.5878
I1203 00:55:42.307510 139917320247040 hlog.py:18] train/00136{16.25s}
I1203 00:55:54.356391 139917320247040 hlog.py:32] train/00137/loss 0.0020
I1203 00:55:58.123255 139917320247040 hlog.py:32] train/00137/eval_train/acc 1.0000
I1203 00:55:58.746568 139917320247040 hlog.py:32] train/00137/eval_val/acc 0.5878
I1203 00:55:58.747091 139917320247040 hlog.py:18] train/00137{16.44s}
I1203 00:56:11.822705 139917320247040 hlog.py:32] train/00138/loss 0.0021
I1203 00:56:15.615586 139917320247040 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 00:56:16.211140 139917320247040 hlog.py:32] train/00138/eval_val/acc 0.5878
I1203 00:56:16.211637 139917320247040 hlog.py:18] train/00138{17.46s}
I1203 00:56:29.113707 139917320247040 hlog.py:32] train/00139/loss 0.0019
I1203 00:56:33.224177 139917320247040 hlog.py:32] train/00139/eval_train/acc 1.0000
I1203 00:56:33.832751 139917320247040 hlog.py:32] train/00139/eval_val/acc 0.5946
I1203 00:56:33.990472 139917320247040 hlog.py:18] train/00139{17.78s}
I1203 00:56:46.416315 139917320247040 hlog.py:32] train/00140/loss 0.0019
I1203 00:56:50.258679 139917320247040 hlog.py:32] train/00140/eval_train/acc 1.0000
I1203 00:56:50.852737 139917320247040 hlog.py:32] train/00140/eval_val/acc 0.5878
I1203 00:56:50.853493 139917320247040 hlog.py:18] train/00140{16.86s}
I1203 00:57:03.599667 139917320247040 hlog.py:32] train/00141/loss 0.0015
I1203 00:57:07.422655 139917320247040 hlog.py:32] train/00141/eval_train/acc 1.0000
I1203 00:57:08.034007 139917320247040 hlog.py:32] train/00141/eval_val/acc 0.5811
I1203 00:57:08.034502 139917320247040 hlog.py:18] train/00141{17.18s}
I1203 00:57:20.847894 139917320247040 hlog.py:32] train/00142/loss 0.0020
I1203 00:57:24.719433 139917320247040 hlog.py:32] train/00142/eval_train/acc 1.0000
I1203 00:57:25.306684 139917320247040 hlog.py:32] train/00142/eval_val/acc 0.5811
I1203 00:57:25.307232 139917320247040 hlog.py:18] train/00142{17.27s}
I1203 00:57:36.547293 139917320247040 hlog.py:32] train/00143/loss 0.0019
I1203 00:57:40.312061 139917320247040 hlog.py:32] train/00143/eval_train/acc 1.0000
I1203 00:57:40.901450 139917320247040 hlog.py:32] train/00143/eval_val/acc 0.5878
I1203 00:57:40.901865 139917320247040 hlog.py:18] train/00143{15.59s}
I1203 00:57:53.817899 139917320247040 hlog.py:32] train/00144/loss 0.0028
I1203 00:57:57.872705 139917320247040 hlog.py:32] train/00144/eval_train/acc 1.0000
I1203 00:57:58.473251 139917320247040 hlog.py:32] train/00144/eval_val/acc 0.5946
I1203 00:57:58.473750 139917320247040 hlog.py:18] train/00144{17.57s}
I1203 00:58:09.707096 139917320247040 hlog.py:32] train/00145/loss 0.0020
I1203 00:58:13.770025 139917320247040 hlog.py:32] train/00145/eval_train/acc 1.0000
I1203 00:58:14.367860 139917320247040 hlog.py:32] train/00145/eval_val/acc 0.5946
I1203 00:58:14.368351 139917320247040 hlog.py:18] train/00145{15.89s}
I1203 00:58:26.263094 139917320247040 hlog.py:32] train/00146/loss 0.0019
I1203 00:58:30.110418 139917320247040 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 00:58:30.731008 139917320247040 hlog.py:32] train/00146/eval_val/acc 0.5946
I1203 00:58:30.731504 139917320247040 hlog.py:18] train/00146{16.36s}
I1203 00:58:42.530549 139917320247040 hlog.py:32] train/00147/loss 0.0017
I1203 00:58:46.335942 139917320247040 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 00:58:46.923594 139917320247040 hlog.py:32] train/00147/eval_val/acc 0.5878
I1203 00:58:46.924083 139917320247040 hlog.py:18] train/00147{16.19s}
I1203 00:58:59.131592 139917320247040 hlog.py:32] train/00148/loss 0.0019
I1203 00:59:02.963859 139917320247040 hlog.py:32] train/00148/eval_train/acc 1.0000
I1203 00:59:03.559953 139917320247040 hlog.py:32] train/00148/eval_val/acc 0.5878
I1203 00:59:03.560448 139917320247040 hlog.py:18] train/00148{16.64s}
I1203 00:59:14.835100 139917320247040 hlog.py:32] train/00149/loss 0.0016
I1203 00:59:18.883455 139917320247040 hlog.py:32] train/00149/eval_train/acc 1.0000
I1203 00:59:19.128145 139917320247040 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 00:59:19.128347 139917320247040 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 00:59:19.128449 139917320247040 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 00:59:19.128533 139917320247040 hlog.py:32] train/00149/eval_val/0/corr True
I1203 00:59:19.128609 139917320247040 hlog.py:32] train/00149/eval_val/0 
I1203 00:59:19.128694 139917320247040 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 00:59:19.128791 139917320247040 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 00:59:19.128888 139917320247040 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 00:59:19.128978 139917320247040 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.129062 139917320247040 hlog.py:32] train/00149/eval_val/1/corr False
I1203 00:59:19.129136 139917320247040 hlog.py:32] train/00149/eval_val/1 
I1203 00:59:19.129207 139917320247040 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 00:59:19.129297 139917320247040 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 00:59:19.129392 139917320247040 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( massachusetts ) ) ) )
I1203 00:59:19.129479 139917320247040 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 00:59:19.129556 139917320247040 hlog.py:32] train/00149/eval_val/2/corr False
I1203 00:59:19.129629 139917320247040 hlog.py:32] train/00149/eval_val/2 
I1203 00:59:19.129700 139917320247040 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 00:59:19.129790 139917320247040 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 00:59:19.129884 139917320247040 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1203 00:59:19.129972 139917320247040 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 00:59:19.130050 139917320247040 hlog.py:32] train/00149/eval_val/3/corr False
I1203 00:59:19.130122 139917320247040 hlog.py:32] train/00149/eval_val/3 
I1203 00:59:19.130193 139917320247040 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 00:59:19.130279 139917320247040 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 00:59:19.130374 139917320247040 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( north dakota , _ ) ) ) )
I1203 00:59:19.130462 139917320247040 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 00:59:19.130541 139917320247040 hlog.py:32] train/00149/eval_val/4/corr False
I1203 00:59:19.130613 139917320247040 hlog.py:32] train/00149/eval_val/4 
I1203 00:59:19.130682 139917320247040 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 00:59:19.130771 139917320247040 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 00:59:19.130864 139917320247040 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 00:59:19.130951 139917320247040 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.131028 139917320247040 hlog.py:32] train/00149/eval_val/5/corr False
I1203 00:59:19.131100 139917320247040 hlog.py:32] train/00149/eval_val/5 
I1203 00:59:19.131170 139917320247040 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 00:59:19.131258 139917320247040 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 00:59:19.131352 139917320247040 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 00:59:19.131475 139917320247040 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.131555 139917320247040 hlog.py:32] train/00149/eval_val/6/corr False
I1203 00:59:19.131630 139917320247040 hlog.py:32] train/00149/eval_val/6 
I1203 00:59:19.131715 139917320247040 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 00:59:19.131804 139917320247040 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 00:59:19.131898 139917320247040 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 00:59:19.131984 139917320247040 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.132061 139917320247040 hlog.py:32] train/00149/eval_val/7/corr False
I1203 00:59:19.132133 139917320247040 hlog.py:32] train/00149/eval_val/7 
I1203 00:59:19.132203 139917320247040 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 00:59:19.132288 139917320247040 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 00:59:19.132383 139917320247040 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 00:59:19.132469 139917320247040 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 00:59:19.132546 139917320247040 hlog.py:32] train/00149/eval_val/8/corr False
I1203 00:59:19.132618 139917320247040 hlog.py:32] train/00149/eval_val/8 
I1203 00:59:19.132688 139917320247040 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 00:59:19.132773 139917320247040 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 00:59:19.132867 139917320247040 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 00:59:19.132953 139917320247040 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 00:59:19.133030 139917320247040 hlog.py:32] train/00149/eval_val/9/corr False
I1203 00:59:19.133101 139917320247040 hlog.py:32] train/00149/eval_val/9 
I1203 00:59:19.133171 139917320247040 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 00:59:19.133256 139917320247040 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 00:59:19.133350 139917320247040 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1203 00:59:19.133437 139917320247040 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.133514 139917320247040 hlog.py:32] train/00149/eval_val/10/corr False
I1203 00:59:19.133585 139917320247040 hlog.py:32] train/00149/eval_val/10 
I1203 00:59:19.133655 139917320247040 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 00:59:19.133749 139917320247040 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 00:59:19.133853 139917320247040 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 00:59:19.133945 139917320247040 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 00:59:19.134022 139917320247040 hlog.py:32] train/00149/eval_val/11/corr True
I1203 00:59:19.134093 139917320247040 hlog.py:32] train/00149/eval_val/11 
I1203 00:59:19.134163 139917320247040 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 00:59:19.134256 139917320247040 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 00:59:19.134359 139917320247040 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 00:59:19.134460 139917320247040 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 00:59:19.134538 139917320247040 hlog.py:32] train/00149/eval_val/12/corr True
I1203 00:59:19.134609 139917320247040 hlog.py:32] train/00149/eval_val/12 
I1203 00:59:19.134679 139917320247040 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 00:59:19.134772 139917320247040 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 00:59:19.134875 139917320247040 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 00:59:19.134967 139917320247040 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 00:59:19.135044 139917320247040 hlog.py:32] train/00149/eval_val/13/corr True
I1203 00:59:19.135115 139917320247040 hlog.py:32] train/00149/eval_val/13 
I1203 00:59:19.135185 139917320247040 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 00:59:19.135278 139917320247040 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 00:59:19.135394 139917320247040 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 00:59:19.135499 139917320247040 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 00:59:19.135578 139917320247040 hlog.py:32] train/00149/eval_val/14/corr True
I1203 00:59:19.135653 139917320247040 hlog.py:32] train/00149/eval_val/14 
I1203 00:59:19.135736 139917320247040 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 00:59:19.135830 139917320247040 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 00:59:19.135933 139917320247040 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 00:59:19.136026 139917320247040 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 00:59:19.136102 139917320247040 hlog.py:32] train/00149/eval_val/15/corr True
I1203 00:59:19.136173 139917320247040 hlog.py:32] train/00149/eval_val/15 
I1203 00:59:19.136244 139917320247040 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 00:59:19.136337 139917320247040 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 00:59:19.136440 139917320247040 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 00:59:19.136532 139917320247040 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 00:59:19.136609 139917320247040 hlog.py:32] train/00149/eval_val/16/corr True
I1203 00:59:19.136680 139917320247040 hlog.py:32] train/00149/eval_val/16 
I1203 00:59:19.136751 139917320247040 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 00:59:19.136836 139917320247040 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 00:59:19.136935 139917320247040 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 00:59:19.137028 139917320247040 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 00:59:19.137105 139917320247040 hlog.py:32] train/00149/eval_val/17/corr False
I1203 00:59:19.137184 139917320247040 hlog.py:32] train/00149/eval_val/17 
I1203 00:59:19.137254 139917320247040 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 00:59:19.137341 139917320247040 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 00:59:19.137440 139917320247040 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1203 00:59:19.137533 139917320247040 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 00:59:19.137610 139917320247040 hlog.py:32] train/00149/eval_val/18/corr False
I1203 00:59:19.137682 139917320247040 hlog.py:32] train/00149/eval_val/18 
I1203 00:59:19.137752 139917320247040 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 00:59:19.137837 139917320247040 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 00:59:19.137935 139917320247040 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 00:59:19.138028 139917320247040 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 00:59:19.138104 139917320247040 hlog.py:32] train/00149/eval_val/19/corr False
I1203 00:59:19.138175 139917320247040 hlog.py:32] train/00149/eval_val/19 
I1203 00:59:19.138245 139917320247040 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 00:59:19.138332 139917320247040 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 00:59:19.138430 139917320247040 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 00:59:19.138522 139917320247040 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 00:59:19.138598 139917320247040 hlog.py:32] train/00149/eval_val/20/corr False
I1203 00:59:19.138669 139917320247040 hlog.py:32] train/00149/eval_val/20 
I1203 00:59:19.138739 139917320247040 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 00:59:19.138832 139917320247040 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 00:59:19.138935 139917320247040 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 00:59:19.139027 139917320247040 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 00:59:19.139104 139917320247040 hlog.py:32] train/00149/eval_val/21/corr True
I1203 00:59:19.139175 139917320247040 hlog.py:32] train/00149/eval_val/21 
I1203 00:59:19.139245 139917320247040 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 00:59:19.139332 139917320247040 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 00:59:19.139452 139917320247040 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1203 00:59:19.139545 139917320247040 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 00:59:19.139624 139917320247040 hlog.py:32] train/00149/eval_val/22/corr False
I1203 00:59:19.139710 139917320247040 hlog.py:32] train/00149/eval_val/22 
I1203 00:59:19.139780 139917320247040 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 00:59:19.139870 139917320247040 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 00:59:19.139963 139917320247040 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 00:59:19.140057 139917320247040 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 00:59:19.140134 139917320247040 hlog.py:32] train/00149/eval_val/23/corr True
I1203 00:59:19.140205 139917320247040 hlog.py:32] train/00149/eval_val/23 
I1203 00:59:19.140275 139917320247040 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 00:59:19.140360 139917320247040 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 00:59:19.140448 139917320247040 hlog.py:32] train/00149/eval_val/24/pred ( A , _largest ( A , _state ( A ) ) )
I1203 00:59:19.140535 139917320247040 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 00:59:19.140612 139917320247040 hlog.py:32] train/00149/eval_val/24/corr False
I1203 00:59:19.140683 139917320247040 hlog.py:32] train/00149/eval_val/24 
I1203 00:59:19.140753 139917320247040 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 00:59:19.140844 139917320247040 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 00:59:19.140939 139917320247040 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 00:59:19.141028 139917320247040 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 00:59:19.141105 139917320247040 hlog.py:32] train/00149/eval_val/25/corr True
I1203 00:59:19.141177 139917320247040 hlog.py:32] train/00149/eval_val/25 
I1203 00:59:19.141246 139917320247040 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 00:59:19.141336 139917320247040 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 00:59:19.141432 139917320247040 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 00:59:19.141520 139917320247040 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 00:59:19.141597 139917320247040 hlog.py:32] train/00149/eval_val/26/corr True
I1203 00:59:19.141668 139917320247040 hlog.py:32] train/00149/eval_val/26 
I1203 00:59:19.141737 139917320247040 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 00:59:19.141824 139917320247040 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 00:59:19.141928 139917320247040 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1203 00:59:19.142017 139917320247040 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 00:59:19.142093 139917320247040 hlog.py:32] train/00149/eval_val/27/corr False
I1203 00:59:19.142165 139917320247040 hlog.py:32] train/00149/eval_val/27 
I1203 00:59:19.142235 139917320247040 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 00:59:19.142326 139917320247040 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 00:59:19.142421 139917320247040 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 00:59:19.142510 139917320247040 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 00:59:19.142586 139917320247040 hlog.py:32] train/00149/eval_val/28/corr True
I1203 00:59:19.142658 139917320247040 hlog.py:32] train/00149/eval_val/28 
I1203 00:59:19.142727 139917320247040 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 00:59:19.142818 139917320247040 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 00:59:19.142914 139917320247040 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 00:59:19.143002 139917320247040 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 00:59:19.143084 139917320247040 hlog.py:32] train/00149/eval_val/29/corr True
I1203 00:59:19.143156 139917320247040 hlog.py:32] train/00149/eval_val/29 
I1203 00:59:19.143226 139917320247040 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 00:59:19.143311 139917320247040 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 00:59:19.143425 139917320247040 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _largest ( B , _river ( B ) ) ) )
I1203 00:59:19.143520 139917320247040 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 00:59:19.143599 139917320247040 hlog.py:32] train/00149/eval_val/30/corr False
I1203 00:59:19.143673 139917320247040 hlog.py:32] train/00149/eval_val/30 
I1203 00:59:19.143890 139917320247040 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 00:59:19.143987 139917320247040 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 00:59:19.144084 139917320247040 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 00:59:19.144173 139917320247040 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 00:59:19.144265 139917320247040 hlog.py:32] train/00149/eval_val/31/corr True
I1203 00:59:19.144340 139917320247040 hlog.py:32] train/00149/eval_val/31 
I1203 00:59:19.144412 139917320247040 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 00:59:19.144507 139917320247040 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 00:59:19.144608 139917320247040 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 00:59:19.144711 139917320247040 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 00:59:19.144789 139917320247040 hlog.py:32] train/00149/eval_val/32/corr True
I1203 00:59:19.144861 139917320247040 hlog.py:32] train/00149/eval_val/32 
I1203 00:59:19.144931 139917320247040 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 00:59:19.145023 139917320247040 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 00:59:19.145120 139917320247040 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 00:59:19.145209 139917320247040 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 00:59:19.145286 139917320247040 hlog.py:32] train/00149/eval_val/33/corr True
I1203 00:59:19.145358 139917320247040 hlog.py:32] train/00149/eval_val/33 
I1203 00:59:19.145427 139917320247040 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 00:59:19.145519 139917320247040 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 00:59:19.145616 139917320247040 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 00:59:19.145704 139917320247040 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 00:59:19.145782 139917320247040 hlog.py:32] train/00149/eval_val/34/corr True
I1203 00:59:19.145853 139917320247040 hlog.py:32] train/00149/eval_val/34 
I1203 00:59:19.145924 139917320247040 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 00:59:19.146017 139917320247040 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 00:59:19.146117 139917320247040 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.146208 139917320247040 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.146292 139917320247040 hlog.py:32] train/00149/eval_val/35/corr True
I1203 00:59:19.146364 139917320247040 hlog.py:32] train/00149/eval_val/35 
I1203 00:59:19.146434 139917320247040 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 00:59:19.146527 139917320247040 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 00:59:19.146627 139917320247040 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.146717 139917320247040 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.146794 139917320247040 hlog.py:32] train/00149/eval_val/36/corr True
I1203 00:59:19.146866 139917320247040 hlog.py:32] train/00149/eval_val/36 
I1203 00:59:19.146936 139917320247040 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 00:59:19.147027 139917320247040 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 00:59:19.147127 139917320247040 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.147217 139917320247040 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.147294 139917320247040 hlog.py:32] train/00149/eval_val/37/corr True
I1203 00:59:19.147366 139917320247040 hlog.py:32] train/00149/eval_val/37 
I1203 00:59:19.147461 139917320247040 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 00:59:19.147557 139917320247040 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 00:59:19.147660 139917320247040 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.147764 139917320247040 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.147841 139917320247040 hlog.py:32] train/00149/eval_val/38/corr True
I1203 00:59:19.147913 139917320247040 hlog.py:32] train/00149/eval_val/38 
I1203 00:59:19.147983 139917320247040 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 00:59:19.148076 139917320247040 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 00:59:19.148175 139917320247040 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.148266 139917320247040 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 00:59:19.148343 139917320247040 hlog.py:32] train/00149/eval_val/39/corr True
I1203 00:59:19.148415 139917320247040 hlog.py:32] train/00149/eval_val/39 
I1203 00:59:19.148485 139917320247040 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 00:59:19.148571 139917320247040 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 00:59:19.148670 139917320247040 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 00:59:19.148758 139917320247040 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 00:59:19.148836 139917320247040 hlog.py:32] train/00149/eval_val/40/corr False
I1203 00:59:19.148907 139917320247040 hlog.py:32] train/00149/eval_val/40 
I1203 00:59:19.148977 139917320247040 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 00:59:19.149063 139917320247040 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 00:59:19.149162 139917320247040 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 00:59:19.149256 139917320247040 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 00:59:19.149334 139917320247040 hlog.py:32] train/00149/eval_val/41/corr False
I1203 00:59:19.149406 139917320247040 hlog.py:32] train/00149/eval_val/41 
I1203 00:59:19.149476 139917320247040 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 00:59:19.149562 139917320247040 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 00:59:19.149664 139917320247040 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 00:59:19.149752 139917320247040 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 00:59:19.149829 139917320247040 hlog.py:32] train/00149/eval_val/42/corr False
I1203 00:59:19.149900 139917320247040 hlog.py:32] train/00149/eval_val/42 
I1203 00:59:19.149970 139917320247040 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 00:59:19.150057 139917320247040 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 00:59:19.150259 139917320247040 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , ( _place ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , A ) )
I1203 00:59:19.150357 139917320247040 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 00:59:19.150434 139917320247040 hlog.py:32] train/00149/eval_val/43/corr False
I1203 00:59:19.150505 139917320247040 hlog.py:32] train/00149/eval_val/43 
I1203 00:59:19.150575 139917320247040 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 00:59:19.150669 139917320247040 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 00:59:19.150775 139917320247040 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 00:59:19.150870 139917320247040 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 00:59:19.150947 139917320247040 hlog.py:32] train/00149/eval_val/44/corr True
I1203 00:59:19.151018 139917320247040 hlog.py:32] train/00149/eval_val/44 
I1203 00:59:19.151088 139917320247040 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 00:59:19.151178 139917320247040 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 00:59:19.151278 139917320247040 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 00:59:19.151369 139917320247040 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 00:59:19.151472 139917320247040 hlog.py:32] train/00149/eval_val/45/corr False
I1203 00:59:19.151547 139917320247040 hlog.py:32] train/00149/eval_val/45 
I1203 00:59:19.151619 139917320247040 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 00:59:19.151725 139917320247040 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 00:59:19.151825 139917320247040 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 00:59:19.151916 139917320247040 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 00:59:19.151993 139917320247040 hlog.py:32] train/00149/eval_val/46/corr True
I1203 00:59:19.152064 139917320247040 hlog.py:32] train/00149/eval_val/46 
I1203 00:59:19.152140 139917320247040 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 00:59:19.152234 139917320247040 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 00:59:19.152336 139917320247040 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 00:59:19.152428 139917320247040 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 00:59:19.152505 139917320247040 hlog.py:32] train/00149/eval_val/47/corr True
I1203 00:59:19.152576 139917320247040 hlog.py:32] train/00149/eval_val/47 
I1203 00:59:19.152647 139917320247040 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 00:59:19.152733 139917320247040 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 00:59:19.152839 139917320247040 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 00:59:19.152932 139917320247040 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 00:59:19.153009 139917320247040 hlog.py:32] train/00149/eval_val/48/corr False
I1203 00:59:19.153082 139917320247040 hlog.py:32] train/00149/eval_val/48 
I1203 00:59:19.153151 139917320247040 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 00:59:19.153245 139917320247040 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 00:59:19.153349 139917320247040 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 00:59:19.153442 139917320247040 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 00:59:19.153519 139917320247040 hlog.py:32] train/00149/eval_val/49/corr True
I1203 00:59:19.153591 139917320247040 hlog.py:32] train/00149/eval_val/49 
I1203 00:59:19.153660 139917320247040 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 00:59:19.153753 139917320247040 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 00:59:19.153856 139917320247040 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 00:59:19.153949 139917320247040 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 00:59:19.154026 139917320247040 hlog.py:32] train/00149/eval_val/50/corr True
I1203 00:59:19.154097 139917320247040 hlog.py:32] train/00149/eval_val/50 
I1203 00:59:19.154167 139917320247040 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 00:59:19.154260 139917320247040 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 00:59:19.154364 139917320247040 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 00:59:19.154457 139917320247040 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 00:59:19.154533 139917320247040 hlog.py:32] train/00149/eval_val/51/corr True
I1203 00:59:19.154605 139917320247040 hlog.py:32] train/00149/eval_val/51 
I1203 00:59:19.154675 139917320247040 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 00:59:19.154760 139917320247040 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 00:59:19.154857 139917320247040 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 00:59:19.154952 139917320247040 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 00:59:19.155030 139917320247040 hlog.py:32] train/00149/eval_val/52/corr False
I1203 00:59:19.155102 139917320247040 hlog.py:32] train/00149/eval_val/52 
I1203 00:59:19.155172 139917320247040 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 00:59:19.155257 139917320247040 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 00:59:19.155354 139917320247040 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 00:59:19.155467 139917320247040 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 00:59:19.155547 139917320247040 hlog.py:32] train/00149/eval_val/53/corr False
I1203 00:59:19.155622 139917320247040 hlog.py:32] train/00149/eval_val/53 
I1203 00:59:19.155694 139917320247040 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 00:59:19.155799 139917320247040 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 00:59:19.155895 139917320247040 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.155984 139917320247040 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.156061 139917320247040 hlog.py:32] train/00149/eval_val/54/corr True
I1203 00:59:19.156133 139917320247040 hlog.py:32] train/00149/eval_val/54 
I1203 00:59:19.156203 139917320247040 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 00:59:19.156293 139917320247040 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 00:59:19.156390 139917320247040 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 00:59:19.156478 139917320247040 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 00:59:19.156555 139917320247040 hlog.py:32] train/00149/eval_val/55/corr True
I1203 00:59:19.156627 139917320247040 hlog.py:32] train/00149/eval_val/55 
I1203 00:59:19.156697 139917320247040 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 00:59:19.156787 139917320247040 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 00:59:19.156883 139917320247040 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 00:59:19.156972 139917320247040 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 00:59:19.157049 139917320247040 hlog.py:32] train/00149/eval_val/56/corr True
I1203 00:59:19.157121 139917320247040 hlog.py:32] train/00149/eval_val/56 
I1203 00:59:19.157191 139917320247040 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 00:59:19.157282 139917320247040 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 00:59:19.157377 139917320247040 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.157466 139917320247040 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.157542 139917320247040 hlog.py:32] train/00149/eval_val/57/corr True
I1203 00:59:19.157614 139917320247040 hlog.py:32] train/00149/eval_val/57 
I1203 00:59:19.157684 139917320247040 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 00:59:19.157774 139917320247040 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 00:59:19.157870 139917320247040 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.157964 139917320247040 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.158042 139917320247040 hlog.py:32] train/00149/eval_val/58/corr True
I1203 00:59:19.158113 139917320247040 hlog.py:32] train/00149/eval_val/58 
I1203 00:59:19.158183 139917320247040 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 00:59:19.158274 139917320247040 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 00:59:19.158370 139917320247040 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 00:59:19.158458 139917320247040 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 00:59:19.158534 139917320247040 hlog.py:32] train/00149/eval_val/59/corr True
I1203 00:59:19.158605 139917320247040 hlog.py:32] train/00149/eval_val/59 
I1203 00:59:19.158675 139917320247040 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 00:59:19.158766 139917320247040 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 00:59:19.158862 139917320247040 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 00:59:19.158950 139917320247040 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 00:59:19.159026 139917320247040 hlog.py:32] train/00149/eval_val/60/corr True
I1203 00:59:19.159098 139917320247040 hlog.py:32] train/00149/eval_val/60 
I1203 00:59:19.159168 139917320247040 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 00:59:19.159258 139917320247040 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 00:59:19.159355 139917320247040 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 00:59:19.159466 139917320247040 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 00:59:19.159546 139917320247040 hlog.py:32] train/00149/eval_val/61/corr True
I1203 00:59:19.159620 139917320247040 hlog.py:32] train/00149/eval_val/61 
I1203 00:59:19.159705 139917320247040 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 00:59:19.159796 139917320247040 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 00:59:19.159892 139917320247040 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 00:59:19.159980 139917320247040 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 00:59:19.160057 139917320247040 hlog.py:32] train/00149/eval_val/62/corr True
I1203 00:59:19.160128 139917320247040 hlog.py:32] train/00149/eval_val/62 
I1203 00:59:19.160198 139917320247040 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 00:59:19.160288 139917320247040 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 00:59:19.160384 139917320247040 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.160472 139917320247040 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.160549 139917320247040 hlog.py:32] train/00149/eval_val/63/corr True
I1203 00:59:19.160621 139917320247040 hlog.py:32] train/00149/eval_val/63 
I1203 00:59:19.160691 139917320247040 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 00:59:19.401223 139917320247040 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 00:59:19.401417 139917320247040 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 00:59:19.401518 139917320247040 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 00:59:19.401617 139917320247040 hlog.py:32] train/00149/eval_val/64/corr True
I1203 00:59:19.401696 139917320247040 hlog.py:32] train/00149/eval_val/64 
I1203 00:59:19.401772 139917320247040 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 00:59:19.401867 139917320247040 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 00:59:19.401966 139917320247040 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.402056 139917320247040 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.402133 139917320247040 hlog.py:32] train/00149/eval_val/65/corr True
I1203 00:59:19.402205 139917320247040 hlog.py:32] train/00149/eval_val/65 
I1203 00:59:19.402276 139917320247040 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 00:59:19.402367 139917320247040 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 00:59:19.402463 139917320247040 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.402552 139917320247040 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.402629 139917320247040 hlog.py:32] train/00149/eval_val/66/corr True
I1203 00:59:19.402700 139917320247040 hlog.py:32] train/00149/eval_val/66 
I1203 00:59:19.402771 139917320247040 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 00:59:19.402863 139917320247040 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 00:59:19.402959 139917320247040 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.403048 139917320247040 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.403125 139917320247040 hlog.py:32] train/00149/eval_val/67/corr True
I1203 00:59:19.403196 139917320247040 hlog.py:32] train/00149/eval_val/67 
I1203 00:59:19.403265 139917320247040 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 00:59:19.403358 139917320247040 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 00:59:19.403484 139917320247040 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 00:59:19.403577 139917320247040 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 00:59:19.403657 139917320247040 hlog.py:32] train/00149/eval_val/68/corr True
I1203 00:59:19.403743 139917320247040 hlog.py:32] train/00149/eval_val/68 
I1203 00:59:19.403814 139917320247040 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 00:59:19.403906 139917320247040 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 00:59:19.404005 139917320247040 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.404095 139917320247040 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.404171 139917320247040 hlog.py:32] train/00149/eval_val/69/corr True
I1203 00:59:19.404243 139917320247040 hlog.py:32] train/00149/eval_val/69 
I1203 00:59:19.404312 139917320247040 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 00:59:19.404402 139917320247040 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 00:59:19.404495 139917320247040 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1203 00:59:19.404582 139917320247040 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.404664 139917320247040 hlog.py:32] train/00149/eval_val/70/corr False
I1203 00:59:19.404736 139917320247040 hlog.py:32] train/00149/eval_val/70 
I1203 00:59:19.404806 139917320247040 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 00:59:19.404891 139917320247040 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 00:59:19.404986 139917320247040 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1203 00:59:19.405072 139917320247040 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 00:59:19.405149 139917320247040 hlog.py:32] train/00149/eval_val/71/corr False
I1203 00:59:19.405220 139917320247040 hlog.py:32] train/00149/eval_val/71 
I1203 00:59:19.405290 139917320247040 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 00:59:19.405375 139917320247040 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 00:59:19.405469 139917320247040 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1203 00:59:19.405556 139917320247040 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 00:59:19.405633 139917320247040 hlog.py:32] train/00149/eval_val/72/corr False
I1203 00:59:19.405704 139917320247040 hlog.py:32] train/00149/eval_val/72 
I1203 00:59:19.405774 139917320247040 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 00:59:19.405863 139917320247040 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 00:59:19.405956 139917320247040 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( idaho ) ) ) )
I1203 00:59:19.406042 139917320247040 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 00:59:19.406118 139917320247040 hlog.py:32] train/00149/eval_val/73/corr False
I1203 00:59:19.406190 139917320247040 hlog.py:32] train/00149/eval_val/73 
I1203 00:59:19.406260 139917320247040 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 00:59:19.406344 139917320247040 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 00:59:19.406438 139917320247040 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1203 00:59:19.406525 139917320247040 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 00:59:19.406601 139917320247040 hlog.py:32] train/00149/eval_val/74/corr False
I1203 00:59:19.406673 139917320247040 hlog.py:32] train/00149/eval_val/74 
I1203 00:59:19.406743 139917320247040 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 00:59:19.406828 139917320247040 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 00:59:19.406923 139917320247040 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( square , _ ) ) ) )
I1203 00:59:19.407009 139917320247040 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 00:59:19.407086 139917320247040 hlog.py:32] train/00149/eval_val/75/corr False
I1203 00:59:19.407157 139917320247040 hlog.py:32] train/00149/eval_val/75 
I1203 00:59:19.407227 139917320247040 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 00:59:19.407316 139917320247040 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 00:59:19.407432 139917320247040 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1203 00:59:19.407525 139917320247040 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 00:59:19.407604 139917320247040 hlog.py:32] train/00149/eval_val/76/corr False
I1203 00:59:19.407677 139917320247040 hlog.py:32] train/00149/eval_val/76 
I1203 00:59:19.407767 139917320247040 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 00:59:19.407857 139917320247040 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 00:59:19.407950 139917320247040 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( ohio ) ) ) )
I1203 00:59:19.408037 139917320247040 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 00:59:19.408113 139917320247040 hlog.py:32] train/00149/eval_val/77/corr False
I1203 00:59:19.408185 139917320247040 hlog.py:32] train/00149/eval_val/77 
I1203 00:59:19.408254 139917320247040 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 00:59:19.408339 139917320247040 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 00:59:19.408433 139917320247040 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1203 00:59:19.408520 139917320247040 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 00:59:19.408597 139917320247040 hlog.py:32] train/00149/eval_val/78/corr False
I1203 00:59:19.408668 139917320247040 hlog.py:32] train/00149/eval_val/78 
I1203 00:59:19.408737 139917320247040 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 00:59:19.408827 139917320247040 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 00:59:19.408920 139917320247040 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( south carolina ) ) ) )
I1203 00:59:19.409007 139917320247040 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 00:59:19.409083 139917320247040 hlog.py:32] train/00149/eval_val/79/corr False
I1203 00:59:19.409155 139917320247040 hlog.py:32] train/00149/eval_val/79 
I1203 00:59:19.409225 139917320247040 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 00:59:19.409313 139917320247040 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 00:59:19.409406 139917320247040 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1203 00:59:19.409493 139917320247040 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.409569 139917320247040 hlog.py:32] train/00149/eval_val/80/corr False
I1203 00:59:19.409639 139917320247040 hlog.py:32] train/00149/eval_val/80 
I1203 00:59:19.409709 139917320247040 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 00:59:19.409794 139917320247040 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 00:59:19.409886 139917320247040 hlog.py:32] train/00149/eval_val/81/pred ( A , _sum ( C , _state ( C ) , _area ( C ) , A ) )
I1203 00:59:19.409973 139917320247040 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.410049 139917320247040 hlog.py:32] train/00149/eval_val/81/corr False
I1203 00:59:19.410120 139917320247040 hlog.py:32] train/00149/eval_val/81 
I1203 00:59:19.410190 139917320247040 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 00:59:19.410274 139917320247040 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 00:59:19.410368 139917320247040 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1203 00:59:19.410455 139917320247040 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 00:59:19.410531 139917320247040 hlog.py:32] train/00149/eval_val/82/corr False
I1203 00:59:19.410602 139917320247040 hlog.py:32] train/00149/eval_val/82 
I1203 00:59:19.410672 139917320247040 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 00:59:19.410759 139917320247040 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 00:59:19.410852 139917320247040 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( B , A ) , _state ( B ) ) ) )
I1203 00:59:19.410944 139917320247040 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 00:59:19.411021 139917320247040 hlog.py:32] train/00149/eval_val/83/corr False
I1203 00:59:19.411092 139917320247040 hlog.py:32] train/00149/eval_val/83 
I1203 00:59:19.411162 139917320247040 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 00:59:19.411251 139917320247040 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 00:59:19.411345 139917320247040 hlog.py:32] train/00149/eval_val/84/pred ( A , _smallest ( B , ( _population ( B , A ) , _state ( B ) ) ) )
I1203 00:59:19.411466 139917320247040 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 00:59:19.411547 139917320247040 hlog.py:32] train/00149/eval_val/84/corr False
I1203 00:59:19.411621 139917320247040 hlog.py:32] train/00149/eval_val/84 
I1203 00:59:19.411693 139917320247040 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 00:59:19.411783 139917320247040 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 00:59:19.411885 139917320247040 hlog.py:32] train/00149/eval_val/85/pred ( A , _smallest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.411975 139917320247040 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 00:59:19.412055 139917320247040 hlog.py:32] train/00149/eval_val/85/corr False
I1203 00:59:19.412128 139917320247040 hlog.py:32] train/00149/eval_val/85 
I1203 00:59:19.412200 139917320247040 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 00:59:19.412291 139917320247040 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 00:59:19.412405 139917320247040 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _cityid ( a , _ ) ) ) ) )
I1203 00:59:19.412501 139917320247040 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 00:59:19.412581 139917320247040 hlog.py:32] train/00149/eval_val/86/corr False
I1203 00:59:19.412654 139917320247040 hlog.py:32] train/00149/eval_val/86 
I1203 00:59:19.412727 139917320247040 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 00:59:19.412817 139917320247040 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 00:59:19.412928 139917320247040 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) ) )
I1203 00:59:19.413027 139917320247040 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 00:59:19.413106 139917320247040 hlog.py:32] train/00149/eval_val/87/corr False
I1203 00:59:19.413180 139917320247040 hlog.py:32] train/00149/eval_val/87 
I1203 00:59:19.413251 139917320247040 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 00:59:19.413356 139917320247040 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 00:59:19.413452 139917320247040 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 00:59:19.413540 139917320247040 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 00:59:19.413616 139917320247040 hlog.py:32] train/00149/eval_val/88/corr True
I1203 00:59:19.413687 139917320247040 hlog.py:32] train/00149/eval_val/88 
I1203 00:59:19.413756 139917320247040 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 00:59:19.413856 139917320247040 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 00:59:19.413960 139917320247040 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 00:59:19.414053 139917320247040 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 00:59:19.414129 139917320247040 hlog.py:32] train/00149/eval_val/89/corr True
I1203 00:59:19.414201 139917320247040 hlog.py:32] train/00149/eval_val/89 
I1203 00:59:19.414270 139917320247040 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 00:59:19.414357 139917320247040 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 00:59:19.414459 139917320247040 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) )
I1203 00:59:19.414554 139917320247040 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 00:59:19.414631 139917320247040 hlog.py:32] train/00149/eval_val/90/corr False
I1203 00:59:19.414701 139917320247040 hlog.py:32] train/00149/eval_val/90 
I1203 00:59:19.414771 139917320247040 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 00:59:19.414863 139917320247040 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 00:59:19.414962 139917320247040 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.415055 139917320247040 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.415131 139917320247040 hlog.py:32] train/00149/eval_val/91/corr True
I1203 00:59:19.415202 139917320247040 hlog.py:32] train/00149/eval_val/91 
I1203 00:59:19.415272 139917320247040 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 00:59:19.415363 139917320247040 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 00:59:19.415486 139917320247040 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.415580 139917320247040 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.415673 139917320247040 hlog.py:32] train/00149/eval_val/92/corr True
I1203 00:59:19.415812 139917320247040 hlog.py:32] train/00149/eval_val/92 
I1203 00:59:19.415895 139917320247040 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 00:59:19.415988 139917320247040 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 00:59:19.416087 139917320247040 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.416177 139917320247040 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.416254 139917320247040 hlog.py:32] train/00149/eval_val/93/corr True
I1203 00:59:19.416325 139917320247040 hlog.py:32] train/00149/eval_val/93 
I1203 00:59:19.416395 139917320247040 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 00:59:19.416481 139917320247040 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 00:59:19.416583 139917320247040 hlog.py:32] train/00149/eval_val/94/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 00:59:19.416681 139917320247040 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.416758 139917320247040 hlog.py:32] train/00149/eval_val/94/corr False
I1203 00:59:19.416830 139917320247040 hlog.py:32] train/00149/eval_val/94 
I1203 00:59:19.416900 139917320247040 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 00:59:19.416989 139917320247040 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 00:59:19.417087 139917320247040 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.417177 139917320247040 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.417253 139917320247040 hlog.py:32] train/00149/eval_val/95/corr False
I1203 00:59:19.417324 139917320247040 hlog.py:32] train/00149/eval_val/95 
I1203 00:59:19.417394 139917320247040 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 00:59:19.417488 139917320247040 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 00:59:19.417592 139917320247040 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 00:59:19.417684 139917320247040 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 00:59:19.417760 139917320247040 hlog.py:32] train/00149/eval_val/96/corr True
I1203 00:59:19.417831 139917320247040 hlog.py:32] train/00149/eval_val/96 
I1203 00:59:19.417901 139917320247040 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 00:59:19.417999 139917320247040 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 00:59:19.418234 139917320247040 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 00:59:19.418342 139917320247040 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 00:59:19.418420 139917320247040 hlog.py:32] train/00149/eval_val/97/corr True
I1203 00:59:19.418491 139917320247040 hlog.py:32] train/00149/eval_val/97 
I1203 00:59:19.418561 139917320247040 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 00:59:19.418654 139917320247040 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 00:59:19.418755 139917320247040 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 00:59:19.418846 139917320247040 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 00:59:19.418922 139917320247040 hlog.py:32] train/00149/eval_val/98/corr True
I1203 00:59:19.418993 139917320247040 hlog.py:32] train/00149/eval_val/98 
I1203 00:59:19.419063 139917320247040 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 00:59:19.419156 139917320247040 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 00:59:19.419257 139917320247040 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 00:59:19.419348 139917320247040 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 00:59:19.419453 139917320247040 hlog.py:32] train/00149/eval_val/99/corr True
I1203 00:59:19.419529 139917320247040 hlog.py:32] train/00149/eval_val/99 
I1203 00:59:19.419602 139917320247040 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 00:59:19.419708 139917320247040 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 00:59:19.419811 139917320247040 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1203 00:59:19.419903 139917320247040 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 00:59:19.419979 139917320247040 hlog.py:32] train/00149/eval_val/100/corr False
I1203 00:59:19.420050 139917320247040 hlog.py:32] train/00149/eval_val/100 
I1203 00:59:19.420120 139917320247040 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 00:59:19.420207 139917320247040 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 00:59:19.420314 139917320247040 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , \+ ( _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 00:59:19.420406 139917320247040 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 00:59:19.420483 139917320247040 hlog.py:32] train/00149/eval_val/101/corr False
I1203 00:59:19.420554 139917320247040 hlog.py:32] train/00149/eval_val/101 
I1203 00:59:19.420624 139917320247040 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 00:59:19.420710 139917320247040 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 00:59:19.420808 139917320247040 hlog.py:32] train/00149/eval_val/102/pred ( A , _longest ( A , ( _state ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1203 00:59:19.420897 139917320247040 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 00:59:19.420974 139917320247040 hlog.py:32] train/00149/eval_val/102/corr False
I1203 00:59:19.421045 139917320247040 hlog.py:32] train/00149/eval_val/102 
I1203 00:59:19.421115 139917320247040 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 00:59:19.421206 139917320247040 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 00:59:19.421302 139917320247040 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 00:59:19.421390 139917320247040 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 00:59:19.421466 139917320247040 hlog.py:32] train/00149/eval_val/103/corr True
I1203 00:59:19.421538 139917320247040 hlog.py:32] train/00149/eval_val/103 
I1203 00:59:19.421607 139917320247040 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 00:59:19.421697 139917320247040 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 00:59:19.421792 139917320247040 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.421880 139917320247040 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.421957 139917320247040 hlog.py:32] train/00149/eval_val/104/corr True
I1203 00:59:19.422028 139917320247040 hlog.py:32] train/00149/eval_val/104 
I1203 00:59:19.422097 139917320247040 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 00:59:19.422188 139917320247040 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 00:59:19.422283 139917320247040 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 00:59:19.422378 139917320247040 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 00:59:19.422455 139917320247040 hlog.py:32] train/00149/eval_val/105/corr True
I1203 00:59:19.422526 139917320247040 hlog.py:32] train/00149/eval_val/105 
I1203 00:59:19.422596 139917320247040 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 00:59:19.422686 139917320247040 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 00:59:19.422781 139917320247040 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 00:59:19.422869 139917320247040 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 00:59:19.422945 139917320247040 hlog.py:32] train/00149/eval_val/106/corr True
I1203 00:59:19.423017 139917320247040 hlog.py:32] train/00149/eval_val/106 
I1203 00:59:19.423086 139917320247040 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 00:59:19.423176 139917320247040 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 00:59:19.423271 139917320247040 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.423360 139917320247040 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.423461 139917320247040 hlog.py:32] train/00149/eval_val/107/corr True
I1203 00:59:19.423535 139917320247040 hlog.py:32] train/00149/eval_val/107 
I1203 00:59:19.423607 139917320247040 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 00:59:19.423718 139917320247040 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 00:59:19.423813 139917320247040 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 00:59:19.423902 139917320247040 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 00:59:19.423978 139917320247040 hlog.py:32] train/00149/eval_val/108/corr True
I1203 00:59:19.424049 139917320247040 hlog.py:32] train/00149/eval_val/108 
I1203 00:59:19.424119 139917320247040 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 00:59:19.424209 139917320247040 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 00:59:19.424304 139917320247040 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 00:59:19.424392 139917320247040 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 00:59:19.424469 139917320247040 hlog.py:32] train/00149/eval_val/109/corr True
I1203 00:59:19.424540 139917320247040 hlog.py:32] train/00149/eval_val/109 
I1203 00:59:19.424610 139917320247040 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 00:59:19.424700 139917320247040 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 00:59:19.424795 139917320247040 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.424883 139917320247040 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 00:59:19.424959 139917320247040 hlog.py:32] train/00149/eval_val/110/corr True
I1203 00:59:19.425030 139917320247040 hlog.py:32] train/00149/eval_val/110 
I1203 00:59:19.425100 139917320247040 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 00:59:19.425190 139917320247040 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 00:59:19.425286 139917320247040 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 00:59:19.425380 139917320247040 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 00:59:19.425457 139917320247040 hlog.py:32] train/00149/eval_val/111/corr True
I1203 00:59:19.425528 139917320247040 hlog.py:32] train/00149/eval_val/111 
I1203 00:59:19.425598 139917320247040 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 00:59:19.425688 139917320247040 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 00:59:19.425784 139917320247040 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 00:59:19.425872 139917320247040 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 00:59:19.425948 139917320247040 hlog.py:32] train/00149/eval_val/112/corr True
I1203 00:59:19.426019 139917320247040 hlog.py:32] train/00149/eval_val/112 
I1203 00:59:19.426089 139917320247040 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 00:59:19.426180 139917320247040 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 00:59:19.426276 139917320247040 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 00:59:19.426365 139917320247040 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 00:59:19.426442 139917320247040 hlog.py:32] train/00149/eval_val/113/corr True
I1203 00:59:19.426513 139917320247040 hlog.py:32] train/00149/eval_val/113 
I1203 00:59:19.426582 139917320247040 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 00:59:19.426672 139917320247040 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 00:59:19.426768 139917320247040 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.426856 139917320247040 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 00:59:19.426933 139917320247040 hlog.py:32] train/00149/eval_val/114/corr True
I1203 00:59:19.427004 139917320247040 hlog.py:32] train/00149/eval_val/114 
I1203 00:59:19.427073 139917320247040 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 00:59:19.427158 139917320247040 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 00:59:19.427254 139917320247040 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west ) ) ) )
I1203 00:59:19.427343 139917320247040 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 00:59:19.427443 139917320247040 hlog.py:32] train/00149/eval_val/115/corr False
I1203 00:59:19.427518 139917320247040 hlog.py:32] train/00149/eval_val/115 
I1203 00:59:19.427590 139917320247040 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 00:59:19.427696 139917320247040 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 00:59:19.427792 139917320247040 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.427880 139917320247040 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 00:59:19.427957 139917320247040 hlog.py:32] train/00149/eval_val/116/corr True
I1203 00:59:19.428028 139917320247040 hlog.py:32] train/00149/eval_val/116 
I1203 00:59:19.428098 139917320247040 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 00:59:19.428190 139917320247040 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 00:59:19.428288 139917320247040 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.428385 139917320247040 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.428462 139917320247040 hlog.py:32] train/00149/eval_val/117/corr True
I1203 00:59:19.428534 139917320247040 hlog.py:32] train/00149/eval_val/117 
I1203 00:59:19.428604 139917320247040 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 00:59:19.428696 139917320247040 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 00:59:19.428794 139917320247040 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.428884 139917320247040 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.428960 139917320247040 hlog.py:32] train/00149/eval_val/118/corr True
I1203 00:59:19.429031 139917320247040 hlog.py:32] train/00149/eval_val/118 
I1203 00:59:19.429101 139917320247040 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 00:59:19.429193 139917320247040 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 00:59:19.429291 139917320247040 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.429381 139917320247040 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 00:59:19.429457 139917320247040 hlog.py:32] train/00149/eval_val/119/corr True
I1203 00:59:19.429528 139917320247040 hlog.py:32] train/00149/eval_val/119 
I1203 00:59:19.429598 139917320247040 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 00:59:19.429687 139917320247040 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 00:59:19.429776 139917320247040 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 00:59:19.429859 139917320247040 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 00:59:19.429936 139917320247040 hlog.py:32] train/00149/eval_val/120/corr True
I1203 00:59:19.430006 139917320247040 hlog.py:32] train/00149/eval_val/120 
I1203 00:59:19.430076 139917320247040 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 00:59:19.430165 139917320247040 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 00:59:19.430253 139917320247040 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 00:59:19.430336 139917320247040 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 00:59:19.430413 139917320247040 hlog.py:32] train/00149/eval_val/121/corr True
I1203 00:59:19.430484 139917320247040 hlog.py:32] train/00149/eval_val/121 
I1203 00:59:19.430553 139917320247040 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 00:59:19.430644 139917320247040 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 00:59:19.430743 139917320247040 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 00:59:19.430832 139917320247040 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 00:59:19.430909 139917320247040 hlog.py:32] train/00149/eval_val/122/corr True
I1203 00:59:19.430980 139917320247040 hlog.py:32] train/00149/eval_val/122 
I1203 00:59:19.431049 139917320247040 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 00:59:19.431141 139917320247040 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 00:59:19.431239 139917320247040 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 00:59:19.431334 139917320247040 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 00:59:19.431432 139917320247040 hlog.py:32] train/00149/eval_val/123/corr True
I1203 00:59:19.431508 139917320247040 hlog.py:32] train/00149/eval_val/123 
I1203 00:59:19.431580 139917320247040 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 00:59:19.431674 139917320247040 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 00:59:19.431787 139917320247040 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 00:59:19.431877 139917320247040 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 00:59:19.431953 139917320247040 hlog.py:32] train/00149/eval_val/124/corr True
I1203 00:59:19.432024 139917320247040 hlog.py:32] train/00149/eval_val/124 
I1203 00:59:19.432094 139917320247040 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 00:59:19.432185 139917320247040 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 00:59:19.432284 139917320247040 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 00:59:19.432374 139917320247040 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 00:59:19.432450 139917320247040 hlog.py:32] train/00149/eval_val/125/corr True
I1203 00:59:19.432521 139917320247040 hlog.py:32] train/00149/eval_val/125 
I1203 00:59:19.432590 139917320247040 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 00:59:19.432681 139917320247040 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 00:59:19.432774 139917320247040 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.432860 139917320247040 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.432937 139917320247040 hlog.py:32] train/00149/eval_val/126/corr True
I1203 00:59:19.433008 139917320247040 hlog.py:32] train/00149/eval_val/126 
I1203 00:59:19.433077 139917320247040 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 00:59:19.433168 139917320247040 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 00:59:19.433261 139917320247040 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.433348 139917320247040 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.433423 139917320247040 hlog.py:32] train/00149/eval_val/127/corr True
I1203 00:59:19.433494 139917320247040 hlog.py:32] train/00149/eval_val/127 
I1203 00:59:19.433564 139917320247040 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 00:59:19.563053 139917320247040 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 00:59:19.563193 139917320247040 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.563290 139917320247040 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.563372 139917320247040 hlog.py:32] train/00149/eval_val/128/corr True
I1203 00:59:19.563474 139917320247040 hlog.py:32] train/00149/eval_val/128 
I1203 00:59:19.563550 139917320247040 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 00:59:19.563647 139917320247040 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 00:59:19.563759 139917320247040 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.563856 139917320247040 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.563934 139917320247040 hlog.py:32] train/00149/eval_val/129/corr True
I1203 00:59:19.564006 139917320247040 hlog.py:32] train/00149/eval_val/129 
I1203 00:59:19.564077 139917320247040 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 00:59:19.564163 139917320247040 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 00:59:19.564259 139917320247040 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 00:59:19.564346 139917320247040 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.564423 139917320247040 hlog.py:32] train/00149/eval_val/130/corr False
I1203 00:59:19.564494 139917320247040 hlog.py:32] train/00149/eval_val/130 
I1203 00:59:19.564564 139917320247040 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 00:59:19.564655 139917320247040 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 00:59:19.564748 139917320247040 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.564834 139917320247040 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.564911 139917320247040 hlog.py:32] train/00149/eval_val/131/corr True
I1203 00:59:19.564983 139917320247040 hlog.py:32] train/00149/eval_val/131 
I1203 00:59:19.565052 139917320247040 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 00:59:19.565137 139917320247040 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 00:59:19.565233 139917320247040 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _loc ( B , A ) , _city ( B ) ) ) )
I1203 00:59:19.565319 139917320247040 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 00:59:19.565396 139917320247040 hlog.py:32] train/00149/eval_val/132/corr False
I1203 00:59:19.565467 139917320247040 hlog.py:32] train/00149/eval_val/132 
I1203 00:59:19.565537 139917320247040 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 00:59:19.565623 139917320247040 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 00:59:19.565727 139917320247040 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 00:59:19.565814 139917320247040 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 00:59:19.565890 139917320247040 hlog.py:32] train/00149/eval_val/133/corr False
I1203 00:59:19.565962 139917320247040 hlog.py:32] train/00149/eval_val/133 
I1203 00:59:19.566032 139917320247040 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 00:59:19.566118 139917320247040 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 00:59:19.566215 139917320247040 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.566307 139917320247040 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 00:59:19.566384 139917320247040 hlog.py:32] train/00149/eval_val/134/corr False
I1203 00:59:19.566455 139917320247040 hlog.py:32] train/00149/eval_val/134 
I1203 00:59:19.566525 139917320247040 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 00:59:19.566619 139917320247040 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 00:59:19.566722 139917320247040 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 00:59:19.566821 139917320247040 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 00:59:19.566899 139917320247040 hlog.py:32] train/00149/eval_val/135/corr True
I1203 00:59:19.566970 139917320247040 hlog.py:32] train/00149/eval_val/135 
I1203 00:59:19.567040 139917320247040 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 00:59:19.567125 139917320247040 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 00:59:19.567218 139917320247040 hlog.py:32] train/00149/eval_val/136/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.567306 139917320247040 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.567396 139917320247040 hlog.py:32] train/00149/eval_val/136/corr False
I1203 00:59:19.567492 139917320247040 hlog.py:32] train/00149/eval_val/136 
I1203 00:59:19.567564 139917320247040 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 00:59:19.567659 139917320247040 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 00:59:19.567777 139917320247040 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.567866 139917320247040 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.567943 139917320247040 hlog.py:32] train/00149/eval_val/137/corr True
I1203 00:59:19.568015 139917320247040 hlog.py:32] train/00149/eval_val/137 
I1203 00:59:19.568084 139917320247040 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 00:59:19.568175 139917320247040 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 00:59:19.568272 139917320247040 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.568361 139917320247040 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.568437 139917320247040 hlog.py:32] train/00149/eval_val/138/corr True
I1203 00:59:19.568508 139917320247040 hlog.py:32] train/00149/eval_val/138 
I1203 00:59:19.568578 139917320247040 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 00:59:19.568669 139917320247040 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 00:59:19.568765 139917320247040 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.568855 139917320247040 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 00:59:19.568931 139917320247040 hlog.py:32] train/00149/eval_val/139/corr True
I1203 00:59:19.569003 139917320247040 hlog.py:32] train/00149/eval_val/139 
I1203 00:59:19.569072 139917320247040 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 00:59:19.569166 139917320247040 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 00:59:19.569269 139917320247040 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 00:59:19.569361 139917320247040 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 00:59:19.569438 139917320247040 hlog.py:32] train/00149/eval_val/140/corr True
I1203 00:59:19.569509 139917320247040 hlog.py:32] train/00149/eval_val/140 
I1203 00:59:19.569579 139917320247040 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 00:59:19.569673 139917320247040 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 00:59:19.569782 139917320247040 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 00:59:19.569875 139917320247040 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 00:59:19.569951 139917320247040 hlog.py:32] train/00149/eval_val/141/corr True
I1203 00:59:19.570023 139917320247040 hlog.py:32] train/00149/eval_val/141 
I1203 00:59:19.570092 139917320247040 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 00:59:19.570177 139917320247040 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 00:59:19.570272 139917320247040 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 00:59:19.570359 139917320247040 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 00:59:19.570436 139917320247040 hlog.py:32] train/00149/eval_val/142/corr False
I1203 00:59:19.570507 139917320247040 hlog.py:32] train/00149/eval_val/142 
I1203 00:59:19.570577 139917320247040 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 00:59:19.570661 139917320247040 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 00:59:19.570756 139917320247040 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 00:59:19.570843 139917320247040 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 00:59:19.570919 139917320247040 hlog.py:32] train/00149/eval_val/143/corr False
I1203 00:59:19.570991 139917320247040 hlog.py:32] train/00149/eval_val/143 
I1203 00:59:19.571060 139917320247040 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 00:59:19.571145 139917320247040 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 00:59:19.571233 139917320247040 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 00:59:19.571320 139917320247040 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 00:59:19.571397 139917320247040 hlog.py:32] train/00149/eval_val/144/corr False
I1203 00:59:19.571478 139917320247040 hlog.py:32] train/00149/eval_val/144 
I1203 00:59:19.571548 139917320247040 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 00:59:19.571633 139917320247040 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 00:59:19.571729 139917320247040 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _major ( B ) , _city ( B ) ) )
I1203 00:59:19.571816 139917320247040 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 00:59:19.571893 139917320247040 hlog.py:32] train/00149/eval_val/145/corr False
I1203 00:59:19.571964 139917320247040 hlog.py:32] train/00149/eval_val/145 
I1203 00:59:19.572034 139917320247040 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 00:59:19.572122 139917320247040 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 00:59:19.572229 139917320247040 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) , _traverse ( C , B ) ) ) ) )
I1203 00:59:19.572325 139917320247040 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 00:59:19.572402 139917320247040 hlog.py:32] train/00149/eval_val/146/corr False
I1203 00:59:19.572474 139917320247040 hlog.py:32] train/00149/eval_val/146 
I1203 00:59:19.572551 139917320247040 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 00:59:19.572644 139917320247040 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 00:59:19.572743 139917320247040 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 00:59:19.572833 139917320247040 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 00:59:19.572910 139917320247040 hlog.py:32] train/00149/eval_val/147/corr True
I1203 00:59:19.572981 139917320247040 hlog.py:32] train/00149/eval_val/147 
I1203 00:59:19.573051 139917320247040 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 00:59:19.573129 139917320247040 hlog.py:32] train/00149/eval_val/acc 0.5878
I1203 00:59:19.604779 139917320247040 hlog.py:18] train/00149{16.04s}
I1203 00:59:19.606767 139917320247040 hlog.py:18] train{2528.76s}
