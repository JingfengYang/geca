I1216 02:37:27.733752 139843838646016 hlog.py:24] # --noTEST
I1216 02:37:27.734106 139843838646016 hlog.py:24] # --seed=9
I1216 02:37:27.734193 139843838646016 hlog.py:24] # --dataset=semparse
I1216 02:37:27.734275 139843838646016 hlog.py:24] # --model_dir=model
I1216 02:37:27.734352 139843838646016 hlog.py:24] # --n_checkpoint=10
I1216 02:37:27.734429 139843838646016 hlog.py:24] # --device=cuda:0
I1216 02:37:27.734504 139843838646016 hlog.py:24] # --nologtostderr
I1216 02:37:27.734577 139843838646016 hlog.py:24] # --noalsologtostderr
I1216 02:37:27.734649 139843838646016 hlog.py:24] # --log_dir=
I1216 02:37:27.734721 139843838646016 hlog.py:24] # --verbosity=0
I1216 02:37:27.734793 139843838646016 hlog.py:24] # --verbosity=0
I1216 02:37:27.734864 139843838646016 hlog.py:24] # --stderrthreshold=fatal
I1216 02:37:27.734935 139843838646016 hlog.py:24] # --showprefixforinfo
I1216 02:37:27.735007 139843838646016 hlog.py:24] # --nodedup
I1216 02:37:27.735078 139843838646016 hlog.py:24] # --wug_size=4
I1216 02:37:27.735150 139843838646016 hlog.py:24] # --nobuild_comp_table
I1216 02:37:27.735221 139843838646016 hlog.py:24] # --semparse_split=query
I1216 02:37:27.735293 139843838646016 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1216 02:37:27.735365 139843838646016 hlog.py:24] # --semparse_mrl=logic
I1216 02:37:27.735455 139843838646016 hlog.py:24] # --val_fold=8
I1216 02:37:27.735529 139843838646016 hlog.py:24] # --test_fold=9
I1216 02:37:27.735601 139843838646016 hlog.py:24] # --n_emb=64
I1216 02:37:27.735672 139843838646016 hlog.py:24] # --n_enc=512
I1216 02:37:27.735744 139843838646016 hlog.py:24] # --dropout=0.5
I1216 02:37:27.735815 139843838646016 hlog.py:24] # --copy_sup
I1216 02:37:27.735887 139843838646016 hlog.py:24] # --n_epochs=150
I1216 02:37:27.735957 139843838646016 hlog.py:24] # --n_epoch_batches=32
I1216 02:37:27.736028 139843838646016 hlog.py:24] # --n_batch=64
I1216 02:37:27.736099 139843838646016 hlog.py:24] # --lr=0.001
I1216 02:37:27.736171 139843838646016 hlog.py:24] # --clip=1.0
I1216 02:37:27.736243 139843838646016 hlog.py:24] # --sched_factor=0.5
I1216 02:37:27.736314 139843838646016 hlog.py:24] # --norun_with_pdb
I1216 02:37:27.736385 139843838646016 hlog.py:24] # --nopdb_post_mortem
I1216 02:37:27.736456 139843838646016 hlog.py:24] # --norun_with_profiling
I1216 02:37:27.736527 139843838646016 hlog.py:24] # --use_cprofile_for_profiling
I1216 02:37:27.736599 139843838646016 hlog.py:24] # --noonly_check_args
I1216 02:37:27.736670 139843838646016 hlog.py:24] # --augment=composed.val9.json
I1216 02:37:27.736741 139843838646016 hlog.py:24] # --aug_ratio=0.3
I1216 02:37:27.736812 139843838646016 hlog.py:24] # --noinvert
I1216 02:37:27.736883 139843838646016 hlog.py:24] # --nohelp
I1216 02:37:27.736954 139843838646016 hlog.py:24] # --nohelp
I1216 02:37:27.737024 139843838646016 hlog.py:24] # --nohelpshort
I1216 02:37:27.737095 139843838646016 hlog.py:24] # --nohelpfull
I1216 02:37:27.737166 139843838646016 hlog.py:24] # --nohelpxml
I1216 02:37:27.737237 139843838646016 hlog.py:24] # 
I1216 02:37:27.772919 139843838646016 hlog.py:32] train 543
I1216 02:37:27.773092 139843838646016 hlog.py:32] aug 616
I1216 02:37:43.435394 139843838646016 hlog.py:32] train/00000/loss 4.0180
I1216 02:37:50.783870 139843838646016 hlog.py:32] train/00000/eval_train/acc 0.0000
I1216 02:37:52.163656 139843838646016 hlog.py:32] train/00000/eval_val/acc 0.0000
I1216 02:37:52.164598 139843838646016 hlog.py:18] train/00000{20.62s}
I1216 02:38:03.713462 139843838646016 hlog.py:32] train/00001/loss 1.3358
I1216 02:38:10.365469 139843838646016 hlog.py:32] train/00001/eval_train/acc 0.0000
I1216 02:38:11.346910 139843838646016 hlog.py:32] train/00001/eval_val/acc 0.0000
I1216 02:38:11.347432 139843838646016 hlog.py:18] train/00001{19.18s}
I1216 02:38:23.492318 139843838646016 hlog.py:32] train/00002/loss 0.8103
I1216 02:38:26.005329 139843838646016 hlog.py:32] train/00002/eval_train/acc 0.0000
I1216 02:38:26.422560 139843838646016 hlog.py:32] train/00002/eval_val/acc 0.0000
I1216 02:38:26.423075 139843838646016 hlog.py:18] train/00002{15.08s}
I1216 02:38:37.497695 139843838646016 hlog.py:32] train/00003/loss 0.6170
I1216 02:38:41.224530 139843838646016 hlog.py:32] train/00003/eval_train/acc 0.0710
I1216 02:38:41.755969 139843838646016 hlog.py:32] train/00003/eval_val/acc 0.0000
I1216 02:38:41.756490 139843838646016 hlog.py:18] train/00003{15.33s}
I1216 02:38:53.234123 139843838646016 hlog.py:32] train/00004/loss 0.4870
I1216 02:38:59.109462 139843838646016 hlog.py:32] train/00004/eval_train/acc 0.0730
I1216 02:39:00.168172 139843838646016 hlog.py:32] train/00004/eval_val/acc 0.0000
I1216 02:39:00.168705 139843838646016 hlog.py:18] train/00004{18.41s}
I1216 02:39:12.211917 139843838646016 hlog.py:32] train/00005/loss 0.4402
I1216 02:39:15.302162 139843838646016 hlog.py:32] train/00005/eval_train/acc 0.1660
I1216 02:39:16.106038 139843838646016 hlog.py:32] train/00005/eval_val/acc 0.0000
I1216 02:39:16.106739 139843838646016 hlog.py:18] train/00005{15.94s}
I1216 02:39:27.113328 139843838646016 hlog.py:32] train/00006/loss 0.3526
I1216 02:39:34.475043 139843838646016 hlog.py:32] train/00006/eval_train/acc 0.2280
I1216 02:39:35.726270 139843838646016 hlog.py:32] train/00006/eval_val/acc 0.0473
I1216 02:39:35.726793 139843838646016 hlog.py:18] train/00006{19.62s}
I1216 02:39:47.133132 139843838646016 hlog.py:32] train/00007/loss 0.3081
I1216 02:39:52.978962 139843838646016 hlog.py:32] train/00007/eval_train/acc 0.2870
I1216 02:39:53.670763 139843838646016 hlog.py:32] train/00007/eval_val/acc 0.0473
I1216 02:39:53.671295 139843838646016 hlog.py:18] train/00007{17.94s}
I1216 02:40:06.546638 139843838646016 hlog.py:32] train/00008/loss 0.2770
I1216 02:40:11.161352 139843838646016 hlog.py:32] train/00008/eval_train/acc 0.3810
I1216 02:40:11.978744 139843838646016 hlog.py:32] train/00008/eval_val/acc 0.0405
I1216 02:40:11.979302 139843838646016 hlog.py:18] train/00008{18.31s}
I1216 02:40:24.949158 139843838646016 hlog.py:32] train/00009/loss 0.2735
I1216 02:40:29.584289 139843838646016 hlog.py:32] train/00009/eval_train/acc 0.3700
I1216 02:40:30.127386 139843838646016 hlog.py:32] train/00009/eval_val/acc 0.0878
I1216 02:40:30.248120 139843838646016 hlog.py:18] train/00009{18.27s}
I1216 02:40:42.293158 139843838646016 hlog.py:32] train/00010/loss 0.2557
I1216 02:40:46.151102 139843838646016 hlog.py:32] train/00010/eval_train/acc 0.4340
I1216 02:40:46.782057 139843838646016 hlog.py:32] train/00010/eval_val/acc 0.1351
I1216 02:40:46.782558 139843838646016 hlog.py:18] train/00010{16.53s}
I1216 02:40:59.693452 139843838646016 hlog.py:32] train/00011/loss 0.2026
I1216 02:41:04.388518 139843838646016 hlog.py:32] train/00011/eval_train/acc 0.4960
I1216 02:41:04.961570 139843838646016 hlog.py:32] train/00011/eval_val/acc 0.1824
I1216 02:41:04.962073 139843838646016 hlog.py:18] train/00011{18.18s}
I1216 02:41:16.863501 139843838646016 hlog.py:32] train/00012/loss 0.1686
I1216 02:41:20.617916 139843838646016 hlog.py:32] train/00012/eval_train/acc 0.5600
I1216 02:41:21.166455 139843838646016 hlog.py:32] train/00012/eval_val/acc 0.1757
I1216 02:41:21.166989 139843838646016 hlog.py:18] train/00012{16.20s}
I1216 02:41:34.738223 139843838646016 hlog.py:32] train/00013/loss 0.1562
I1216 02:41:38.832271 139843838646016 hlog.py:32] train/00013/eval_train/acc 0.5810
I1216 02:41:39.428828 139843838646016 hlog.py:32] train/00013/eval_val/acc 0.1757
I1216 02:41:39.429547 139843838646016 hlog.py:18] train/00013{18.26s}
I1216 02:41:51.711511 139843838646016 hlog.py:32] train/00014/loss 0.1367
I1216 02:41:55.852332 139843838646016 hlog.py:32] train/00014/eval_train/acc 0.6630
I1216 02:41:56.460495 139843838646016 hlog.py:32] train/00014/eval_val/acc 0.2770
I1216 02:41:56.461208 139843838646016 hlog.py:18] train/00014{17.03s}
I1216 02:42:09.032241 139843838646016 hlog.py:32] train/00015/loss 0.1138
I1216 02:42:13.724890 139843838646016 hlog.py:32] train/00015/eval_train/acc 0.7140
I1216 02:42:14.364402 139843838646016 hlog.py:32] train/00015/eval_val/acc 0.2635
I1216 02:42:14.364909 139843838646016 hlog.py:18] train/00015{17.90s}
I1216 02:42:26.983869 139843838646016 hlog.py:32] train/00016/loss 0.1004
I1216 02:42:30.963817 139843838646016 hlog.py:32] train/00016/eval_train/acc 0.7550
I1216 02:42:31.581902 139843838646016 hlog.py:32] train/00016/eval_val/acc 0.2027
I1216 02:42:31.582596 139843838646016 hlog.py:18] train/00016{17.22s}
I1216 02:42:43.335865 139843838646016 hlog.py:32] train/00017/loss 0.0895
I1216 02:42:47.214236 139843838646016 hlog.py:32] train/00017/eval_train/acc 0.7760
I1216 02:42:47.804136 139843838646016 hlog.py:32] train/00017/eval_val/acc 0.3581
I1216 02:42:47.804688 139843838646016 hlog.py:18] train/00017{16.22s}
I1216 02:42:59.970977 139843838646016 hlog.py:32] train/00018/loss 0.0916
I1216 02:43:04.083705 139843838646016 hlog.py:32] train/00018/eval_train/acc 0.6760
I1216 02:43:04.702808 139843838646016 hlog.py:32] train/00018/eval_val/acc 0.2568
I1216 02:43:04.703343 139843838646016 hlog.py:18] train/00018{16.90s}
I1216 02:43:17.315081 139843838646016 hlog.py:32] train/00019/loss 0.0968
I1216 02:43:22.089563 139843838646016 hlog.py:32] train/00019/eval_train/acc 0.7460
I1216 02:43:22.868552 139843838646016 hlog.py:32] train/00019/eval_val/acc 0.3176
I1216 02:43:22.898860 139843838646016 hlog.py:18] train/00019{18.20s}
I1216 02:43:35.025147 139843838646016 hlog.py:32] train/00020/loss 0.0825
I1216 02:43:39.084393 139843838646016 hlog.py:32] train/00020/eval_train/acc 0.8030
I1216 02:43:39.643639 139843838646016 hlog.py:32] train/00020/eval_val/acc 0.2838
I1216 02:43:39.644268 139843838646016 hlog.py:18] train/00020{16.75s}
I1216 02:43:51.500054 139843838646016 hlog.py:32] train/00021/loss 0.0666
I1216 02:43:55.220259 139843838646016 hlog.py:32] train/00021/eval_train/acc 0.8450
I1216 02:43:55.790082 139843838646016 hlog.py:32] train/00021/eval_val/acc 0.4189
I1216 02:43:55.790621 139843838646016 hlog.py:18] train/00021{16.15s}
I1216 02:44:07.414602 139843838646016 hlog.py:32] train/00022/loss 0.0594
I1216 02:44:11.324152 139843838646016 hlog.py:32] train/00022/eval_train/acc 0.8370
I1216 02:44:11.904909 139843838646016 hlog.py:32] train/00022/eval_val/acc 0.3108
I1216 02:44:11.905379 139843838646016 hlog.py:18] train/00022{16.11s}
I1216 02:44:24.295377 139843838646016 hlog.py:32] train/00023/loss 0.0733
I1216 02:44:27.988879 139843838646016 hlog.py:32] train/00023/eval_train/acc 0.7970
I1216 02:44:28.575206 139843838646016 hlog.py:32] train/00023/eval_val/acc 0.3243
I1216 02:44:28.575689 139843838646016 hlog.py:18] train/00023{16.67s}
I1216 02:44:39.797816 139843838646016 hlog.py:32] train/00024/loss 0.0596
I1216 02:44:43.678227 139843838646016 hlog.py:32] train/00024/eval_train/acc 0.8760
I1216 02:44:44.243820 139843838646016 hlog.py:32] train/00024/eval_val/acc 0.4122
I1216 02:44:44.244319 139843838646016 hlog.py:18] train/00024{15.67s}
I1216 02:44:56.419025 139843838646016 hlog.py:32] train/00025/loss 0.0581
I1216 02:45:00.280343 139843838646016 hlog.py:32] train/00025/eval_train/acc 0.8410
I1216 02:45:00.854607 139843838646016 hlog.py:32] train/00025/eval_val/acc 0.3311
I1216 02:45:00.855384 139843838646016 hlog.py:18] train/00025{16.61s}
I1216 02:45:13.158081 139843838646016 hlog.py:32] train/00026/loss 0.0516
I1216 02:45:17.180281 139843838646016 hlog.py:32] train/00026/eval_train/acc 0.9050
I1216 02:45:17.766522 139843838646016 hlog.py:32] train/00026/eval_val/acc 0.3986
I1216 02:45:17.767065 139843838646016 hlog.py:18] train/00026{16.91s}
I1216 02:45:30.494609 139843838646016 hlog.py:32] train/00027/loss 0.0527
I1216 02:45:34.857784 139843838646016 hlog.py:32] train/00027/eval_train/acc 0.8840
I1216 02:45:35.446321 139843838646016 hlog.py:32] train/00027/eval_val/acc 0.3378
I1216 02:45:35.446859 139843838646016 hlog.py:18] train/00027{17.68s}
I1216 02:45:47.588307 139843838646016 hlog.py:32] train/00028/loss 0.0482
I1216 02:45:51.383207 139843838646016 hlog.py:32] train/00028/eval_train/acc 0.8920
I1216 02:45:51.961328 139843838646016 hlog.py:32] train/00028/eval_val/acc 0.3176
I1216 02:45:51.961864 139843838646016 hlog.py:18] train/00028{16.51s}
I1216 02:46:04.064306 139843838646016 hlog.py:32] train/00029/loss 0.0627
I1216 02:46:08.062655 139843838646016 hlog.py:32] train/00029/eval_train/acc 0.8730
I1216 02:46:08.635467 139843838646016 hlog.py:32] train/00029/eval_val/acc 0.4257
I1216 02:46:08.666325 139843838646016 hlog.py:18] train/00029{16.70s}
I1216 02:46:20.571985 139843838646016 hlog.py:32] train/00030/loss 0.0549
I1216 02:46:24.146850 139843838646016 hlog.py:32] train/00030/eval_train/acc 0.9040
I1216 02:46:24.702657 139843838646016 hlog.py:32] train/00030/eval_val/acc 0.4122
I1216 02:46:24.703216 139843838646016 hlog.py:18] train/00030{16.04s}
I1216 02:46:36.682271 139843838646016 hlog.py:32] train/00031/loss 0.0534
I1216 02:46:40.583729 139843838646016 hlog.py:32] train/00031/eval_train/acc 0.8010
I1216 02:46:41.181866 139843838646016 hlog.py:32] train/00031/eval_val/acc 0.3108
I1216 02:46:41.182327 139843838646016 hlog.py:18] train/00031{16.48s}
I1216 02:46:54.175088 139843838646016 hlog.py:32] train/00032/loss 0.0739
I1216 02:46:58.348893 139843838646016 hlog.py:32] train/00032/eval_train/acc 0.8920
I1216 02:46:58.948134 139843838646016 hlog.py:32] train/00032/eval_val/acc 0.3243
I1216 02:46:58.948637 139843838646016 hlog.py:18] train/00032{17.77s}
I1216 02:47:12.085889 139843838646016 hlog.py:32] train/00033/loss 0.0633
I1216 02:47:16.037919 139843838646016 hlog.py:32] train/00033/eval_train/acc 0.8960
I1216 02:47:16.577761 139843838646016 hlog.py:32] train/00033/eval_val/acc 0.2905
I1216 02:47:16.578261 139843838646016 hlog.py:18] train/00033{17.63s}
I1216 02:47:28.751548 139843838646016 hlog.py:32] train/00034/loss 0.0679
I1216 02:47:32.529511 139843838646016 hlog.py:32] train/00034/eval_train/acc 0.9020
I1216 02:47:33.080011 139843838646016 hlog.py:32] train/00034/eval_val/acc 0.3446
I1216 02:47:33.080630 139843838646016 hlog.py:18] train/00034{16.50s}
I1216 02:47:45.597248 139843838646016 hlog.py:32] train/00035/loss 0.0623
I1216 02:47:49.490308 139843838646016 hlog.py:32] train/00035/eval_train/acc 0.8990
I1216 02:47:50.078138 139843838646016 hlog.py:32] train/00035/eval_val/acc 0.3851
I1216 02:47:50.078837 139843838646016 hlog.py:18] train/00035{17.00s}
I1216 02:48:01.573159 139843838646016 hlog.py:32] train/00036/loss 0.0489
I1216 02:48:05.362659 139843838646016 hlog.py:32] train/00036/eval_train/acc 0.9130
I1216 02:48:05.900269 139843838646016 hlog.py:32] train/00036/eval_val/acc 0.3851
I1216 02:48:05.900770 139843838646016 hlog.py:18] train/00036{15.82s}
I1216 02:48:18.241190 139843838646016 hlog.py:32] train/00037/loss 0.0368
I1216 02:48:22.096274 139843838646016 hlog.py:32] train/00037/eval_train/acc 0.9400
I1216 02:48:22.705777 139843838646016 hlog.py:32] train/00037/eval_val/acc 0.3784
I1216 02:48:22.706318 139843838646016 hlog.py:18] train/00037{16.81s}
I1216 02:48:33.991521 139843838646016 hlog.py:32] train/00038/loss 0.0343
I1216 02:48:37.651055 139843838646016 hlog.py:32] train/00038/eval_train/acc 0.8870
I1216 02:48:38.221928 139843838646016 hlog.py:32] train/00038/eval_val/acc 0.3446
I1216 02:48:38.222464 139843838646016 hlog.py:18] train/00038{15.52s}
I1216 02:48:51.519911 139843838646016 hlog.py:32] train/00039/loss 0.0463
I1216 02:48:55.197140 139843838646016 hlog.py:32] train/00039/eval_train/acc 0.9030
I1216 02:48:55.778642 139843838646016 hlog.py:32] train/00039/eval_val/acc 0.2973
I1216 02:48:55.808387 139843838646016 hlog.py:18] train/00039{17.59s}
I1216 02:49:06.879522 139843838646016 hlog.py:32] train/00040/loss 0.0624
I1216 02:49:10.650981 139843838646016 hlog.py:32] train/00040/eval_train/acc 0.9070
I1216 02:49:11.261780 139843838646016 hlog.py:32] train/00040/eval_val/acc 0.3919
I1216 02:49:11.262382 139843838646016 hlog.py:18] train/00040{15.45s}
I1216 02:49:22.626181 139843838646016 hlog.py:32] train/00041/loss 0.0416
I1216 02:49:26.414741 139843838646016 hlog.py:32] train/00041/eval_train/acc 0.9540
I1216 02:49:26.989977 139843838646016 hlog.py:32] train/00041/eval_val/acc 0.4595
I1216 02:49:26.990485 139843838646016 hlog.py:18] train/00041{15.73s}
I1216 02:49:38.785530 139843838646016 hlog.py:32] train/00042/loss 0.0305
I1216 02:49:42.564341 139843838646016 hlog.py:32] train/00042/eval_train/acc 0.9730
I1216 02:49:43.167438 139843838646016 hlog.py:32] train/00042/eval_val/acc 0.4122
I1216 02:49:43.168272 139843838646016 hlog.py:18] train/00042{16.18s}
I1216 02:49:54.793969 139843838646016 hlog.py:32] train/00043/loss 0.0279
I1216 02:49:58.450632 139843838646016 hlog.py:32] train/00043/eval_train/acc 0.9800
I1216 02:49:59.055754 139843838646016 hlog.py:32] train/00043/eval_val/acc 0.3851
I1216 02:49:59.056378 139843838646016 hlog.py:18] train/00043{15.89s}
I1216 02:50:11.310680 139843838646016 hlog.py:32] train/00044/loss 0.0281
I1216 02:50:15.305916 139843838646016 hlog.py:32] train/00044/eval_train/acc 0.9730
I1216 02:50:15.927888 139843838646016 hlog.py:32] train/00044/eval_val/acc 0.4054
I1216 02:50:15.928731 139843838646016 hlog.py:18] train/00044{16.87s}
I1216 02:50:28.783954 139843838646016 hlog.py:32] train/00045/loss 0.0241
I1216 02:50:32.798380 139843838646016 hlog.py:32] train/00045/eval_train/acc 0.9640
I1216 02:50:33.383169 139843838646016 hlog.py:32] train/00045/eval_val/acc 0.3986
I1216 02:50:33.383737 139843838646016 hlog.py:18] train/00045{17.45s}
I1216 02:50:46.238968 139843838646016 hlog.py:32] train/00046/loss 0.0224
I1216 02:50:50.218853 139843838646016 hlog.py:32] train/00046/eval_train/acc 0.9770
I1216 02:50:50.808786 139843838646016 hlog.py:32] train/00046/eval_val/acc 0.3784
I1216 02:50:50.809460 139843838646016 hlog.py:18] train/00046{17.43s}
I1216 02:51:02.111169 139843838646016 hlog.py:32] train/00047/loss 0.0198
I1216 02:51:05.917812 139843838646016 hlog.py:32] train/00047/eval_train/acc 0.9800
I1216 02:51:06.457697 139843838646016 hlog.py:32] train/00047/eval_val/acc 0.3919
I1216 02:51:06.458348 139843838646016 hlog.py:18] train/00047{15.65s}
I1216 02:51:18.620975 139843838646016 hlog.py:32] train/00048/loss 0.0179
I1216 02:51:22.541752 139843838646016 hlog.py:32] train/00048/eval_train/acc 0.9810
I1216 02:51:23.106247 139843838646016 hlog.py:32] train/00048/eval_val/acc 0.4730
I1216 02:51:23.106898 139843838646016 hlog.py:18] train/00048{16.65s}
I1216 02:51:34.960090 139843838646016 hlog.py:32] train/00049/loss 0.0159
I1216 02:51:39.006994 139843838646016 hlog.py:32] train/00049/eval_train/acc 0.9830
I1216 02:51:39.611046 139843838646016 hlog.py:32] train/00049/eval_val/acc 0.4189
I1216 02:51:39.778695 139843838646016 hlog.py:18] train/00049{16.67s}
I1216 02:51:51.255281 139843838646016 hlog.py:32] train/00050/loss 0.0142
I1216 02:51:55.097326 139843838646016 hlog.py:32] train/00050/eval_train/acc 0.9940
I1216 02:51:55.680733 139843838646016 hlog.py:32] train/00050/eval_val/acc 0.4392
I1216 02:51:55.681274 139843838646016 hlog.py:18] train/00050{15.90s}
I1216 02:52:08.090425 139843838646016 hlog.py:32] train/00051/loss 0.0155
I1216 02:52:12.176918 139843838646016 hlog.py:32] train/00051/eval_train/acc 0.9780
I1216 02:52:12.792110 139843838646016 hlog.py:32] train/00051/eval_val/acc 0.3986
I1216 02:52:12.792841 139843838646016 hlog.py:18] train/00051{17.11s}
I1216 02:52:24.661962 139843838646016 hlog.py:32] train/00052/loss 0.0146
I1216 02:52:28.547658 139843838646016 hlog.py:32] train/00052/eval_train/acc 0.9810
I1216 02:52:29.118410 139843838646016 hlog.py:32] train/00052/eval_val/acc 0.4662
I1216 02:52:29.118973 139843838646016 hlog.py:18] train/00052{16.33s}
I1216 02:52:42.103120 139843838646016 hlog.py:32] train/00053/loss 0.0140
I1216 02:52:46.075763 139843838646016 hlog.py:32] train/00053/eval_train/acc 0.9870
I1216 02:52:46.655595 139843838646016 hlog.py:32] train/00053/eval_val/acc 0.4730
I1216 02:52:46.656271 139843838646016 hlog.py:18] train/00053{17.54s}
I1216 02:52:58.926116 139843838646016 hlog.py:32] train/00054/loss 0.0131
I1216 02:53:02.750046 139843838646016 hlog.py:32] train/00054/eval_train/acc 0.9940
I1216 02:53:03.298217 139843838646016 hlog.py:32] train/00054/eval_val/acc 0.4527
I1216 02:53:03.298798 139843838646016 hlog.py:18] train/00054{16.64s}
I1216 02:53:16.253098 139843838646016 hlog.py:32] train/00055/loss 0.0133
I1216 02:53:19.840664 139843838646016 hlog.py:32] train/00055/eval_train/acc 0.9860
I1216 02:53:20.396800 139843838646016 hlog.py:32] train/00055/eval_val/acc 0.4459
I1216 02:53:20.397343 139843838646016 hlog.py:18] train/00055{17.10s}
I1216 02:53:32.954601 139843838646016 hlog.py:32] train/00056/loss 0.0125
I1216 02:53:37.206888 139843838646016 hlog.py:32] train/00056/eval_train/acc 0.9910
I1216 02:53:37.770723 139843838646016 hlog.py:32] train/00056/eval_val/acc 0.4459
I1216 02:53:37.771279 139843838646016 hlog.py:18] train/00056{17.37s}
I1216 02:53:50.976339 139843838646016 hlog.py:32] train/00057/loss 0.0138
I1216 02:53:54.770455 139843838646016 hlog.py:32] train/00057/eval_train/acc 0.9900
I1216 02:53:55.363178 139843838646016 hlog.py:32] train/00057/eval_val/acc 0.4459
I1216 02:53:55.363758 139843838646016 hlog.py:18] train/00057{17.59s}
I1216 02:54:07.872123 139843838646016 hlog.py:32] train/00058/loss 0.0114
I1216 02:54:11.541716 139843838646016 hlog.py:32] train/00058/eval_train/acc 0.9930
I1216 02:54:12.133994 139843838646016 hlog.py:32] train/00058/eval_val/acc 0.4324
I1216 02:54:12.134542 139843838646016 hlog.py:18] train/00058{16.77s}
I1216 02:54:24.020653 139843838646016 hlog.py:32] train/00059/loss 0.0104
I1216 02:54:28.192716 139843838646016 hlog.py:32] train/00059/eval_train/acc 0.9920
I1216 02:54:28.803688 139843838646016 hlog.py:32] train/00059/eval_val/acc 0.4459
I1216 02:54:28.835294 139843838646016 hlog.py:18] train/00059{16.70s}
I1216 02:54:41.512553 139843838646016 hlog.py:32] train/00060/loss 0.0100
I1216 02:54:45.529309 139843838646016 hlog.py:32] train/00060/eval_train/acc 0.9930
I1216 02:54:46.110950 139843838646016 hlog.py:32] train/00060/eval_val/acc 0.4595
I1216 02:54:46.111487 139843838646016 hlog.py:18] train/00060{17.28s}
I1216 02:54:58.774199 139843838646016 hlog.py:32] train/00061/loss 0.0102
I1216 02:55:02.827878 139843838646016 hlog.py:32] train/00061/eval_train/acc 0.9870
I1216 02:55:03.422911 139843838646016 hlog.py:32] train/00061/eval_val/acc 0.4595
I1216 02:55:03.423411 139843838646016 hlog.py:18] train/00061{17.31s}
I1216 02:55:16.270524 139843838646016 hlog.py:32] train/00062/loss 0.0095
I1216 02:55:20.296092 139843838646016 hlog.py:32] train/00062/eval_train/acc 0.9940
I1216 02:55:20.949472 139843838646016 hlog.py:32] train/00062/eval_val/acc 0.4865
I1216 02:55:20.950127 139843838646016 hlog.py:18] train/00062{17.53s}
I1216 02:55:33.956212 139843838646016 hlog.py:32] train/00063/loss 0.0090
I1216 02:55:37.701160 139843838646016 hlog.py:32] train/00063/eval_train/acc 0.9890
I1216 02:55:38.296489 139843838646016 hlog.py:32] train/00063/eval_val/acc 0.4730
I1216 02:55:38.297053 139843838646016 hlog.py:18] train/00063{17.35s}
I1216 02:55:50.011080 139843838646016 hlog.py:32] train/00064/loss 0.0082
I1216 02:55:53.874102 139843838646016 hlog.py:32] train/00064/eval_train/acc 0.9910
I1216 02:55:54.468019 139843838646016 hlog.py:32] train/00064/eval_val/acc 0.4797
I1216 02:55:54.468567 139843838646016 hlog.py:18] train/00064{16.17s}
I1216 02:56:06.670833 139843838646016 hlog.py:32] train/00065/loss 0.0098
I1216 02:56:10.782798 139843838646016 hlog.py:32] train/00065/eval_train/acc 0.9940
I1216 02:56:11.380851 139843838646016 hlog.py:32] train/00065/eval_val/acc 0.4730
I1216 02:56:11.381504 139843838646016 hlog.py:18] train/00065{16.91s}
I1216 02:56:23.287436 139843838646016 hlog.py:32] train/00066/loss 0.0077
I1216 02:56:26.983401 139843838646016 hlog.py:32] train/00066/eval_train/acc 0.9910
I1216 02:56:27.575397 139843838646016 hlog.py:32] train/00066/eval_val/acc 0.4527
I1216 02:56:27.575943 139843838646016 hlog.py:18] train/00066{16.19s}
I1216 02:56:38.974303 139843838646016 hlog.py:32] train/00067/loss 0.0067
I1216 02:56:43.009501 139843838646016 hlog.py:32] train/00067/eval_train/acc 0.9930
I1216 02:56:43.592229 139843838646016 hlog.py:32] train/00067/eval_val/acc 0.4527
I1216 02:56:43.592924 139843838646016 hlog.py:18] train/00067{16.02s}
I1216 02:56:55.466313 139843838646016 hlog.py:32] train/00068/loss 0.0075
I1216 02:56:59.299403 139843838646016 hlog.py:32] train/00068/eval_train/acc 0.9960
I1216 02:56:59.903782 139843838646016 hlog.py:32] train/00068/eval_val/acc 0.4797
I1216 02:56:59.904438 139843838646016 hlog.py:18] train/00068{16.31s}
I1216 02:57:12.139152 139843838646016 hlog.py:32] train/00069/loss 0.0075
I1216 02:57:16.016562 139843838646016 hlog.py:32] train/00069/eval_train/acc 0.9950
I1216 02:57:16.588060 139843838646016 hlog.py:32] train/00069/eval_val/acc 0.4730
I1216 02:57:16.621777 139843838646016 hlog.py:18] train/00069{16.72s}
I1216 02:57:28.978654 139843838646016 hlog.py:32] train/00070/loss 0.0065
I1216 02:57:32.906023 139843838646016 hlog.py:32] train/00070/eval_train/acc 0.9960
I1216 02:57:33.491970 139843838646016 hlog.py:32] train/00070/eval_val/acc 0.4662
I1216 02:57:33.492510 139843838646016 hlog.py:18] train/00070{16.87s}
I1216 02:57:45.597843 139843838646016 hlog.py:32] train/00071/loss 0.0070
I1216 02:57:49.662119 139843838646016 hlog.py:32] train/00071/eval_train/acc 0.9970
I1216 02:57:50.213460 139843838646016 hlog.py:32] train/00071/eval_val/acc 0.4595
I1216 02:57:50.213996 139843838646016 hlog.py:18] train/00071{16.72s}
I1216 02:58:02.184788 139843838646016 hlog.py:32] train/00072/loss 0.0073
I1216 02:58:05.903519 139843838646016 hlog.py:32] train/00072/eval_train/acc 0.9980
I1216 02:58:06.467909 139843838646016 hlog.py:32] train/00072/eval_val/acc 0.4865
I1216 02:58:06.468501 139843838646016 hlog.py:18] train/00072{16.25s}
I1216 02:58:18.530876 139843838646016 hlog.py:32] train/00073/loss 0.0069
I1216 02:58:22.748258 139843838646016 hlog.py:32] train/00073/eval_train/acc 0.9930
I1216 02:58:23.323112 139843838646016 hlog.py:32] train/00073/eval_val/acc 0.4662
I1216 02:58:23.323748 139843838646016 hlog.py:18] train/00073{16.86s}
I1216 02:58:35.822090 139843838646016 hlog.py:32] train/00074/loss 0.0075
I1216 02:58:39.744028 139843838646016 hlog.py:32] train/00074/eval_train/acc 0.9970
I1216 02:58:40.338764 139843838646016 hlog.py:32] train/00074/eval_val/acc 0.4730
I1216 02:58:40.339489 139843838646016 hlog.py:18] train/00074{17.02s}
I1216 02:58:52.438139 139843838646016 hlog.py:32] train/00075/loss 0.0059
I1216 02:58:56.243378 139843838646016 hlog.py:32] train/00075/eval_train/acc 1.0000
I1216 02:58:56.827672 139843838646016 hlog.py:32] train/00075/eval_val/acc 0.4865
I1216 02:58:56.828219 139843838646016 hlog.py:18] train/00075{16.49s}
I1216 02:59:08.886718 139843838646016 hlog.py:32] train/00076/loss 0.0061
I1216 02:59:12.629419 139843838646016 hlog.py:32] train/00076/eval_train/acc 0.9950
I1216 02:59:13.206536 139843838646016 hlog.py:32] train/00076/eval_val/acc 0.4797
I1216 02:59:13.207220 139843838646016 hlog.py:18] train/00076{16.38s}
I1216 02:59:25.700968 139843838646016 hlog.py:32] train/00077/loss 0.0062
I1216 02:59:29.540157 139843838646016 hlog.py:32] train/00077/eval_train/acc 0.9990
I1216 02:59:30.147248 139843838646016 hlog.py:32] train/00077/eval_val/acc 0.4932
I1216 02:59:30.148024 139843838646016 hlog.py:18] train/00077{16.94s}
I1216 02:59:41.958927 139843838646016 hlog.py:32] train/00078/loss 0.0058
I1216 02:59:45.960676 139843838646016 hlog.py:32] train/00078/eval_train/acc 0.9970
I1216 02:59:46.554324 139843838646016 hlog.py:32] train/00078/eval_val/acc 0.4595
I1216 02:59:46.554879 139843838646016 hlog.py:18] train/00078{16.41s}
I1216 02:59:58.509624 139843838646016 hlog.py:32] train/00079/loss 0.0054
I1216 03:00:02.478780 139843838646016 hlog.py:32] train/00079/eval_train/acc 0.9990
I1216 03:00:03.086932 139843838646016 hlog.py:32] train/00079/eval_val/acc 0.4865
I1216 03:00:03.117896 139843838646016 hlog.py:18] train/00079{16.56s}
I1216 03:00:15.221318 139843838646016 hlog.py:32] train/00080/loss 0.0059
I1216 03:00:19.471010 139843838646016 hlog.py:32] train/00080/eval_train/acc 0.9990
I1216 03:00:20.013763 139843838646016 hlog.py:32] train/00080/eval_val/acc 0.4662
I1216 03:00:20.014271 139843838646016 hlog.py:18] train/00080{16.90s}
I1216 03:00:32.624409 139843838646016 hlog.py:32] train/00081/loss 0.0059
I1216 03:00:36.441481 139843838646016 hlog.py:32] train/00081/eval_train/acc 0.9970
I1216 03:00:37.003229 139843838646016 hlog.py:32] train/00081/eval_val/acc 0.4865
I1216 03:00:37.003901 139843838646016 hlog.py:18] train/00081{16.99s}
I1216 03:00:49.360081 139843838646016 hlog.py:32] train/00082/loss 0.0060
I1216 03:00:53.026544 139843838646016 hlog.py:32] train/00082/eval_train/acc 0.9970
I1216 03:00:53.569160 139843838646016 hlog.py:32] train/00082/eval_val/acc 0.4730
I1216 03:00:53.569837 139843838646016 hlog.py:18] train/00082{16.57s}
I1216 03:01:05.898193 139843838646016 hlog.py:32] train/00083/loss 0.0056
I1216 03:01:09.967714 139843838646016 hlog.py:32] train/00083/eval_train/acc 0.9900
I1216 03:01:10.544747 139843838646016 hlog.py:32] train/00083/eval_val/acc 0.4865
I1216 03:01:10.545333 139843838646016 hlog.py:18] train/00083{16.98s}
I1216 03:01:23.385586 139843838646016 hlog.py:32] train/00084/loss 0.0059
I1216 03:01:27.394113 139843838646016 hlog.py:32] train/00084/eval_train/acc 0.9970
I1216 03:01:27.960696 139843838646016 hlog.py:32] train/00084/eval_val/acc 0.5135
I1216 03:01:27.961205 139843838646016 hlog.py:18] train/00084{17.42s}
I1216 03:01:39.918469 139843838646016 hlog.py:32] train/00085/loss 0.0060
I1216 03:01:44.250184 139843838646016 hlog.py:32] train/00085/eval_train/acc 0.9930
I1216 03:01:44.801926 139843838646016 hlog.py:32] train/00085/eval_val/acc 0.5270
I1216 03:01:44.802421 139843838646016 hlog.py:18] train/00085{16.84s}
I1216 03:01:58.055115 139843838646016 hlog.py:32] train/00086/loss 0.0060
I1216 03:02:01.662323 139843838646016 hlog.py:32] train/00086/eval_train/acc 0.9980
I1216 03:02:02.215572 139843838646016 hlog.py:32] train/00086/eval_val/acc 0.4730
I1216 03:02:02.216163 139843838646016 hlog.py:18] train/00086{17.41s}
I1216 03:02:14.298877 139843838646016 hlog.py:32] train/00087/loss 0.0057
I1216 03:02:18.482194 139843838646016 hlog.py:32] train/00087/eval_train/acc 0.9930
I1216 03:02:19.035212 139843838646016 hlog.py:32] train/00087/eval_val/acc 0.4662
I1216 03:02:19.035738 139843838646016 hlog.py:18] train/00087{16.82s}
I1216 03:02:31.182780 139843838646016 hlog.py:32] train/00088/loss 0.0050
I1216 03:02:35.225409 139843838646016 hlog.py:32] train/00088/eval_train/acc 0.9910
I1216 03:02:35.777454 139843838646016 hlog.py:32] train/00088/eval_val/acc 0.4527
I1216 03:02:35.778039 139843838646016 hlog.py:18] train/00088{16.74s}
I1216 03:02:48.639904 139843838646016 hlog.py:32] train/00089/loss 0.0049
I1216 03:02:52.263381 139843838646016 hlog.py:32] train/00089/eval_train/acc 0.9960
I1216 03:02:52.842632 139843838646016 hlog.py:32] train/00089/eval_val/acc 0.4662
I1216 03:02:52.943523 139843838646016 hlog.py:18] train/00089{17.17s}
I1216 03:03:05.507541 139843838646016 hlog.py:32] train/00090/loss 0.0052
I1216 03:03:09.258756 139843838646016 hlog.py:32] train/00090/eval_train/acc 0.9960
I1216 03:03:09.821515 139843838646016 hlog.py:32] train/00090/eval_val/acc 0.4662
I1216 03:03:09.822007 139843838646016 hlog.py:18] train/00090{16.88s}
I1216 03:03:22.832397 139843838646016 hlog.py:32] train/00091/loss 0.0073
I1216 03:03:26.861333 139843838646016 hlog.py:32] train/00091/eval_train/acc 0.9960
I1216 03:03:27.438904 139843838646016 hlog.py:32] train/00091/eval_val/acc 0.4662
I1216 03:03:27.439449 139843838646016 hlog.py:18] train/00091{17.62s}
I1216 03:03:38.668612 139843838646016 hlog.py:32] train/00092/loss 0.0051
I1216 03:03:42.814230 139843838646016 hlog.py:32] train/00092/eval_train/acc 0.9980
I1216 03:03:43.374246 139843838646016 hlog.py:32] train/00092/eval_val/acc 0.4730
I1216 03:03:43.374740 139843838646016 hlog.py:18] train/00092{15.94s}
I1216 03:03:55.043874 139843838646016 hlog.py:32] train/00093/loss 0.0053
I1216 03:03:58.897514 139843838646016 hlog.py:32] train/00093/eval_train/acc 0.9940
I1216 03:03:59.512519 139843838646016 hlog.py:32] train/00093/eval_val/acc 0.4527
I1216 03:03:59.513046 139843838646016 hlog.py:18] train/00093{16.14s}
I1216 03:04:12.078426 139843838646016 hlog.py:32] train/00094/loss 0.0052
I1216 03:04:15.903601 139843838646016 hlog.py:32] train/00094/eval_train/acc 0.9930
I1216 03:04:16.510056 139843838646016 hlog.py:32] train/00094/eval_val/acc 0.4595
I1216 03:04:16.510558 139843838646016 hlog.py:18] train/00094{17.00s}
I1216 03:04:29.629984 139843838646016 hlog.py:32] train/00095/loss 0.0052
I1216 03:04:33.558885 139843838646016 hlog.py:32] train/00095/eval_train/acc 0.9930
I1216 03:04:34.136038 139843838646016 hlog.py:32] train/00095/eval_val/acc 0.4459
I1216 03:04:34.136516 139843838646016 hlog.py:18] train/00095{17.63s}
I1216 03:04:47.353640 139843838646016 hlog.py:32] train/00096/loss 0.0052
I1216 03:04:51.243556 139843838646016 hlog.py:32] train/00096/eval_train/acc 0.9950
I1216 03:04:51.791128 139843838646016 hlog.py:32] train/00096/eval_val/acc 0.4797
I1216 03:04:51.791667 139843838646016 hlog.py:18] train/00096{17.66s}
I1216 03:05:03.188318 139843838646016 hlog.py:32] train/00097/loss 0.0049
I1216 03:05:06.915760 139843838646016 hlog.py:32] train/00097/eval_train/acc 0.9970
I1216 03:05:07.468666 139843838646016 hlog.py:32] train/00097/eval_val/acc 0.4865
I1216 03:05:07.469164 139843838646016 hlog.py:18] train/00097{15.68s}
I1216 03:05:19.205774 139843838646016 hlog.py:32] train/00098/loss 0.0074
I1216 03:05:23.339102 139843838646016 hlog.py:32] train/00098/eval_train/acc 0.9950
I1216 03:05:23.908999 139843838646016 hlog.py:32] train/00098/eval_val/acc 0.4662
I1216 03:05:23.909672 139843838646016 hlog.py:18] train/00098{16.44s}
I1216 03:05:36.595788 139843838646016 hlog.py:32] train/00099/loss 0.0052
I1216 03:05:40.213933 139843838646016 hlog.py:32] train/00099/eval_train/acc 0.9970
I1216 03:05:40.774541 139843838646016 hlog.py:32] train/00099/eval_val/acc 0.4730
I1216 03:05:40.805096 139843838646016 hlog.py:18] train/00099{16.90s}
I1216 03:05:53.069092 139843838646016 hlog.py:32] train/00100/loss 0.0050
I1216 03:05:56.902293 139843838646016 hlog.py:32] train/00100/eval_train/acc 0.9970
I1216 03:05:57.460615 139843838646016 hlog.py:32] train/00100/eval_val/acc 0.4865
I1216 03:05:57.461121 139843838646016 hlog.py:18] train/00100{16.66s}
I1216 03:06:09.479529 139843838646016 hlog.py:32] train/00101/loss 0.0041
I1216 03:06:13.342776 139843838646016 hlog.py:32] train/00101/eval_train/acc 0.9970
I1216 03:06:13.876320 139843838646016 hlog.py:32] train/00101/eval_val/acc 0.4730
I1216 03:06:13.876822 139843838646016 hlog.py:18] train/00101{16.42s}
I1216 03:06:26.251318 139843838646016 hlog.py:32] train/00102/loss 0.0054
I1216 03:06:29.944624 139843838646016 hlog.py:32] train/00102/eval_train/acc 0.9970
I1216 03:06:30.481173 139843838646016 hlog.py:32] train/00102/eval_val/acc 0.4527
I1216 03:06:30.481655 139843838646016 hlog.py:18] train/00102{16.60s}
I1216 03:06:42.895033 139843838646016 hlog.py:32] train/00103/loss 0.0047
I1216 03:06:47.043454 139843838646016 hlog.py:32] train/00103/eval_train/acc 0.9940
I1216 03:06:47.587684 139843838646016 hlog.py:32] train/00103/eval_val/acc 0.4595
I1216 03:06:47.588192 139843838646016 hlog.py:18] train/00103{17.11s}
I1216 03:06:59.280095 139843838646016 hlog.py:32] train/00104/loss 0.0049
I1216 03:07:02.903291 139843838646016 hlog.py:32] train/00104/eval_train/acc 1.0000
I1216 03:07:03.450624 139843838646016 hlog.py:32] train/00104/eval_val/acc 0.4662
I1216 03:07:03.451183 139843838646016 hlog.py:18] train/00104{15.86s}
I1216 03:07:15.581817 139843838646016 hlog.py:32] train/00105/loss 0.0051
I1216 03:07:19.438423 139843838646016 hlog.py:32] train/00105/eval_train/acc 0.9980
I1216 03:07:19.992225 139843838646016 hlog.py:32] train/00105/eval_val/acc 0.4527
I1216 03:07:19.992947 139843838646016 hlog.py:18] train/00105{16.54s}
I1216 03:07:31.691928 139843838646016 hlog.py:32] train/00106/loss 0.0043
I1216 03:07:35.463865 139843838646016 hlog.py:32] train/00106/eval_train/acc 1.0000
I1216 03:07:36.027675 139843838646016 hlog.py:32] train/00106/eval_val/acc 0.4527
I1216 03:07:36.028217 139843838646016 hlog.py:18] train/00106{16.04s}
I1216 03:07:48.155227 139843838646016 hlog.py:32] train/00107/loss 0.0042
I1216 03:07:51.779702 139843838646016 hlog.py:32] train/00107/eval_train/acc 1.0000
I1216 03:07:52.326756 139843838646016 hlog.py:32] train/00107/eval_val/acc 0.4595
I1216 03:07:52.327286 139843838646016 hlog.py:18] train/00107{16.30s}
I1216 03:08:05.227910 139843838646016 hlog.py:32] train/00108/loss 0.0045
I1216 03:08:09.115917 139843838646016 hlog.py:32] train/00108/eval_train/acc 1.0000
I1216 03:08:09.663210 139843838646016 hlog.py:32] train/00108/eval_val/acc 0.4595
I1216 03:08:09.663771 139843838646016 hlog.py:18] train/00108{17.34s}
I1216 03:08:21.231084 139843838646016 hlog.py:32] train/00109/loss 0.0043
I1216 03:08:25.245205 139843838646016 hlog.py:32] train/00109/eval_train/acc 0.9970
I1216 03:08:25.813839 139843838646016 hlog.py:32] train/00109/eval_val/acc 0.4527
I1216 03:08:25.844095 139843838646016 hlog.py:18] train/00109{16.18s}
I1216 03:08:37.684422 139843838646016 hlog.py:32] train/00110/loss 0.0042
I1216 03:08:41.478127 139843838646016 hlog.py:32] train/00110/eval_train/acc 0.9990
I1216 03:08:42.044873 139843838646016 hlog.py:32] train/00110/eval_val/acc 0.4595
I1216 03:08:42.045491 139843838646016 hlog.py:18] train/00110{16.20s}
I1216 03:08:54.292699 139843838646016 hlog.py:32] train/00111/loss 0.0044
I1216 03:08:58.625296 139843838646016 hlog.py:32] train/00111/eval_train/acc 0.9950
I1216 03:08:59.189118 139843838646016 hlog.py:32] train/00111/eval_val/acc 0.4527
I1216 03:08:59.189798 139843838646016 hlog.py:18] train/00111{17.14s}
I1216 03:09:10.344674 139843838646016 hlog.py:32] train/00112/loss 0.0044
I1216 03:09:14.156509 139843838646016 hlog.py:32] train/00112/eval_train/acc 0.9980
I1216 03:09:14.715900 139843838646016 hlog.py:32] train/00112/eval_val/acc 0.4459
I1216 03:09:14.716397 139843838646016 hlog.py:18] train/00112{15.53s}
I1216 03:09:26.441302 139843838646016 hlog.py:32] train/00113/loss 0.0039
I1216 03:09:30.313714 139843838646016 hlog.py:32] train/00113/eval_train/acc 0.9950
I1216 03:09:30.858557 139843838646016 hlog.py:32] train/00113/eval_val/acc 0.4730
I1216 03:09:30.859045 139843838646016 hlog.py:18] train/00113{16.14s}
I1216 03:09:43.958781 139843838646016 hlog.py:32] train/00114/loss 0.0048
I1216 03:09:47.846927 139843838646016 hlog.py:32] train/00114/eval_train/acc 0.9950
I1216 03:09:48.377511 139843838646016 hlog.py:32] train/00114/eval_val/acc 0.4662
I1216 03:09:48.377974 139843838646016 hlog.py:18] train/00114{17.52s}
I1216 03:10:01.042556 139843838646016 hlog.py:32] train/00115/loss 0.0045
I1216 03:10:04.920732 139843838646016 hlog.py:32] train/00115/eval_train/acc 0.9990
I1216 03:10:05.471969 139843838646016 hlog.py:32] train/00115/eval_val/acc 0.4527
I1216 03:10:05.472643 139843838646016 hlog.py:18] train/00115{17.09s}
I1216 03:10:17.028800 139843838646016 hlog.py:32] train/00116/loss 0.0038
I1216 03:10:20.693690 139843838646016 hlog.py:32] train/00116/eval_train/acc 1.0000
I1216 03:10:21.255771 139843838646016 hlog.py:32] train/00116/eval_val/acc 0.4459
I1216 03:10:21.256279 139843838646016 hlog.py:18] train/00116{15.78s}
I1216 03:10:33.398192 139843838646016 hlog.py:32] train/00117/loss 0.0045
I1216 03:10:37.230770 139843838646016 hlog.py:32] train/00117/eval_train/acc 1.0000
I1216 03:10:37.782347 139843838646016 hlog.py:32] train/00117/eval_val/acc 0.4459
I1216 03:10:37.783026 139843838646016 hlog.py:18] train/00117{16.53s}
I1216 03:10:49.664343 139843838646016 hlog.py:32] train/00118/loss 0.0038
I1216 03:10:53.465490 139843838646016 hlog.py:32] train/00118/eval_train/acc 0.9990
I1216 03:10:54.011871 139843838646016 hlog.py:32] train/00118/eval_val/acc 0.4662
I1216 03:10:54.012424 139843838646016 hlog.py:18] train/00118{16.23s}
I1216 03:11:06.373747 139843838646016 hlog.py:32] train/00119/loss 0.0042
I1216 03:11:10.124138 139843838646016 hlog.py:32] train/00119/eval_train/acc 0.9980
I1216 03:11:10.679616 139843838646016 hlog.py:32] train/00119/eval_val/acc 0.4595
I1216 03:11:10.856664 139843838646016 hlog.py:18] train/00119{16.84s}
I1216 03:11:22.490415 139843838646016 hlog.py:32] train/00120/loss 0.0041
I1216 03:11:26.338956 139843838646016 hlog.py:32] train/00120/eval_train/acc 1.0000
I1216 03:11:26.873367 139843838646016 hlog.py:32] train/00120/eval_val/acc 0.4595
I1216 03:11:26.873854 139843838646016 hlog.py:18] train/00120{16.02s}
I1216 03:11:39.622395 139843838646016 hlog.py:32] train/00121/loss 0.0044
I1216 03:11:43.450753 139843838646016 hlog.py:32] train/00121/eval_train/acc 0.9960
I1216 03:11:43.994951 139843838646016 hlog.py:32] train/00121/eval_val/acc 0.4662
I1216 03:11:43.995469 139843838646016 hlog.py:18] train/00121{17.12s}
I1216 03:11:55.411109 139843838646016 hlog.py:32] train/00122/loss 0.0037
I1216 03:11:59.305810 139843838646016 hlog.py:32] train/00122/eval_train/acc 1.0000
I1216 03:11:59.853546 139843838646016 hlog.py:32] train/00122/eval_val/acc 0.4662
I1216 03:11:59.854055 139843838646016 hlog.py:18] train/00122{15.86s}
I1216 03:12:11.528692 139843838646016 hlog.py:32] train/00123/loss 0.0038
I1216 03:12:15.376698 139843838646016 hlog.py:32] train/00123/eval_train/acc 0.9990
I1216 03:12:15.923483 139843838646016 hlog.py:32] train/00123/eval_val/acc 0.4595
I1216 03:12:15.924000 139843838646016 hlog.py:18] train/00123{16.07s}
I1216 03:12:28.396470 139843838646016 hlog.py:32] train/00124/loss 0.0039
I1216 03:12:32.405685 139843838646016 hlog.py:32] train/00124/eval_train/acc 0.9920
I1216 03:12:32.955088 139843838646016 hlog.py:32] train/00124/eval_val/acc 0.4730
I1216 03:12:32.955616 139843838646016 hlog.py:18] train/00124{17.03s}
I1216 03:12:44.964451 139843838646016 hlog.py:32] train/00125/loss 0.0041
I1216 03:12:48.609225 139843838646016 hlog.py:32] train/00125/eval_train/acc 1.0000
I1216 03:12:49.165934 139843838646016 hlog.py:32] train/00125/eval_val/acc 0.4662
I1216 03:12:49.166443 139843838646016 hlog.py:18] train/00125{16.21s}
I1216 03:13:00.889763 139843838646016 hlog.py:32] train/00126/loss 0.0039
I1216 03:13:04.651088 139843838646016 hlog.py:32] train/00126/eval_train/acc 0.9980
I1216 03:13:05.188412 139843838646016 hlog.py:32] train/00126/eval_val/acc 0.4662
I1216 03:13:05.188891 139843838646016 hlog.py:18] train/00126{16.02s}
I1216 03:13:16.099537 139843838646016 hlog.py:32] train/00127/loss 0.0034
I1216 03:13:19.978671 139843838646016 hlog.py:32] train/00127/eval_train/acc 1.0000
I1216 03:13:20.517643 139843838646016 hlog.py:32] train/00127/eval_val/acc 0.4595
I1216 03:13:20.518157 139843838646016 hlog.py:18] train/00127{15.33s}
I1216 03:13:32.839320 139843838646016 hlog.py:32] train/00128/loss 0.0038
I1216 03:13:36.890599 139843838646016 hlog.py:32] train/00128/eval_train/acc 0.9970
I1216 03:13:37.435562 139843838646016 hlog.py:32] train/00128/eval_val/acc 0.4595
I1216 03:13:37.436109 139843838646016 hlog.py:18] train/00128{16.92s}
I1216 03:13:49.641281 139843838646016 hlog.py:32] train/00129/loss 0.0039
I1216 03:13:53.583489 139843838646016 hlog.py:32] train/00129/eval_train/acc 1.0000
I1216 03:13:54.127626 139843838646016 hlog.py:32] train/00129/eval_val/acc 0.4459
I1216 03:13:54.159059 139843838646016 hlog.py:18] train/00129{16.72s}
I1216 03:14:07.366886 139843838646016 hlog.py:32] train/00130/loss 0.0046
I1216 03:14:11.268517 139843838646016 hlog.py:32] train/00130/eval_train/acc 1.0000
I1216 03:14:11.815955 139843838646016 hlog.py:32] train/00130/eval_val/acc 0.4459
I1216 03:14:11.816457 139843838646016 hlog.py:18] train/00130{17.66s}
I1216 03:14:23.846831 139843838646016 hlog.py:32] train/00131/loss 0.0037
I1216 03:14:27.516900 139843838646016 hlog.py:32] train/00131/eval_train/acc 1.0000
I1216 03:14:28.070302 139843838646016 hlog.py:32] train/00131/eval_val/acc 0.4459
I1216 03:14:28.070948 139843838646016 hlog.py:18] train/00131{16.25s}
I1216 03:14:40.845993 139843838646016 hlog.py:32] train/00132/loss 0.0041
I1216 03:14:44.609477 139843838646016 hlog.py:32] train/00132/eval_train/acc 0.9980
I1216 03:14:45.177603 139843838646016 hlog.py:32] train/00132/eval_val/acc 0.4459
I1216 03:14:45.178292 139843838646016 hlog.py:18] train/00132{17.11s}
I1216 03:14:57.376360 139843838646016 hlog.py:32] train/00133/loss 0.0041
I1216 03:15:01.156407 139843838646016 hlog.py:32] train/00133/eval_train/acc 0.9990
I1216 03:15:01.713362 139843838646016 hlog.py:32] train/00133/eval_val/acc 0.4459
I1216 03:15:01.713955 139843838646016 hlog.py:18] train/00133{16.54s}
I1216 03:15:13.887930 139843838646016 hlog.py:32] train/00134/loss 0.0039
I1216 03:15:17.842971 139843838646016 hlog.py:32] train/00134/eval_train/acc 0.9980
I1216 03:15:18.404841 139843838646016 hlog.py:32] train/00134/eval_val/acc 0.4527
I1216 03:15:18.405383 139843838646016 hlog.py:18] train/00134{16.69s}
I1216 03:15:30.571332 139843838646016 hlog.py:32] train/00135/loss 0.0046
I1216 03:15:34.531421 139843838646016 hlog.py:32] train/00135/eval_train/acc 0.9970
I1216 03:15:35.078210 139843838646016 hlog.py:32] train/00135/eval_val/acc 0.4459
I1216 03:15:35.078713 139843838646016 hlog.py:18] train/00135{16.67s}
I1216 03:15:47.270986 139843838646016 hlog.py:32] train/00136/loss 0.0037
I1216 03:15:51.183854 139843838646016 hlog.py:32] train/00136/eval_train/acc 1.0000
I1216 03:15:51.739266 139843838646016 hlog.py:32] train/00136/eval_val/acc 0.4527
I1216 03:15:51.739830 139843838646016 hlog.py:18] train/00136{16.66s}
I1216 03:16:04.978766 139843838646016 hlog.py:32] train/00137/loss 0.0043
I1216 03:16:08.685601 139843838646016 hlog.py:32] train/00137/eval_train/acc 0.9990
I1216 03:16:09.247092 139843838646016 hlog.py:32] train/00137/eval_val/acc 0.4595
I1216 03:16:09.247787 139843838646016 hlog.py:18] train/00137{17.51s}
I1216 03:16:21.124632 139843838646016 hlog.py:32] train/00138/loss 0.0038
I1216 03:16:25.029360 139843838646016 hlog.py:32] train/00138/eval_train/acc 0.9950
I1216 03:16:25.582675 139843838646016 hlog.py:32] train/00138/eval_val/acc 0.4527
I1216 03:16:25.583198 139843838646016 hlog.py:18] train/00138{16.34s}
I1216 03:16:37.322718 139843838646016 hlog.py:32] train/00139/loss 0.0037
I1216 03:16:41.087346 139843838646016 hlog.py:32] train/00139/eval_train/acc 0.9950
I1216 03:16:41.643373 139843838646016 hlog.py:32] train/00139/eval_val/acc 0.4595
I1216 03:16:41.674086 139843838646016 hlog.py:18] train/00139{16.09s}
I1216 03:16:53.317022 139843838646016 hlog.py:32] train/00140/loss 0.0038
I1216 03:16:56.993941 139843838646016 hlog.py:32] train/00140/eval_train/acc 1.0000
I1216 03:16:57.532456 139843838646016 hlog.py:32] train/00140/eval_val/acc 0.4662
I1216 03:16:57.533096 139843838646016 hlog.py:18] train/00140{15.86s}
I1216 03:17:09.920178 139843838646016 hlog.py:32] train/00141/loss 0.0039
I1216 03:17:14.076309 139843838646016 hlog.py:32] train/00141/eval_train/acc 1.0000
I1216 03:17:14.627828 139843838646016 hlog.py:32] train/00141/eval_val/acc 0.4662
I1216 03:17:14.628371 139843838646016 hlog.py:18] train/00141{17.10s}
I1216 03:17:26.779312 139843838646016 hlog.py:32] train/00142/loss 0.0047
I1216 03:17:30.386420 139843838646016 hlog.py:32] train/00142/eval_train/acc 1.0000
I1216 03:17:30.960388 139843838646016 hlog.py:32] train/00142/eval_val/acc 0.4662
I1216 03:17:30.960857 139843838646016 hlog.py:18] train/00142{16.33s}
I1216 03:17:42.445750 139843838646016 hlog.py:32] train/00143/loss 0.0033
I1216 03:17:46.090726 139843838646016 hlog.py:32] train/00143/eval_train/acc 1.0000
I1216 03:17:46.642451 139843838646016 hlog.py:32] train/00143/eval_val/acc 0.4662
I1216 03:17:46.642961 139843838646016 hlog.py:18] train/00143{15.68s}
I1216 03:17:59.752103 139843838646016 hlog.py:32] train/00144/loss 0.0043
I1216 03:18:03.489723 139843838646016 hlog.py:32] train/00144/eval_train/acc 0.9990
I1216 03:18:04.040402 139843838646016 hlog.py:32] train/00144/eval_val/acc 0.4662
I1216 03:18:04.041005 139843838646016 hlog.py:18] train/00144{17.40s}
I1216 03:18:16.068612 139843838646016 hlog.py:32] train/00145/loss 0.0039
I1216 03:18:19.870575 139843838646016 hlog.py:32] train/00145/eval_train/acc 0.9990
I1216 03:18:20.426589 139843838646016 hlog.py:32] train/00145/eval_val/acc 0.4595
I1216 03:18:20.427077 139843838646016 hlog.py:18] train/00145{16.39s}
I1216 03:18:32.595880 139843838646016 hlog.py:32] train/00146/loss 0.0039
I1216 03:18:36.548054 139843838646016 hlog.py:32] train/00146/eval_train/acc 0.9970
I1216 03:18:37.094736 139843838646016 hlog.py:32] train/00146/eval_val/acc 0.4662
I1216 03:18:37.095261 139843838646016 hlog.py:18] train/00146{16.67s}
I1216 03:18:49.867988 139843838646016 hlog.py:32] train/00147/loss 0.0044
I1216 03:18:53.824486 139843838646016 hlog.py:32] train/00147/eval_train/acc 0.9930
I1216 03:18:54.361504 139843838646016 hlog.py:32] train/00147/eval_val/acc 0.4662
I1216 03:18:54.361993 139843838646016 hlog.py:18] train/00147{17.27s}
I1216 03:19:06.647355 139843838646016 hlog.py:32] train/00148/loss 0.0043
I1216 03:19:10.414928 139843838646016 hlog.py:32] train/00148/eval_train/acc 0.9990
I1216 03:19:10.961990 139843838646016 hlog.py:32] train/00148/eval_val/acc 0.4662
I1216 03:19:10.962486 139843838646016 hlog.py:18] train/00148{16.60s}
I1216 03:19:23.466389 139843838646016 hlog.py:32] train/00149/loss 0.0042
I1216 03:19:27.404925 139843838646016 hlog.py:32] train/00149/eval_train/acc 0.9960
I1216 03:19:27.602299 139843838646016 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1216 03:19:27.602502 139843838646016 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:27.602601 139843838646016 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:27.602683 139843838646016 hlog.py:32] train/00149/eval_val/0/corr True
I1216 03:19:27.602756 139843838646016 hlog.py:32] train/00149/eval_val/0 
I1216 03:19:27.602832 139843838646016 hlog.py:18] train/00149/eval_val/0{0.00s}
I1216 03:19:27.602921 139843838646016 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1216 03:19:27.603014 139843838646016 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1216 03:19:27.603101 139843838646016 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.603198 139843838646016 hlog.py:32] train/00149/eval_val/1/corr False
I1216 03:19:27.603271 139843838646016 hlog.py:32] train/00149/eval_val/1 
I1216 03:19:27.603339 139843838646016 hlog.py:18] train/00149/eval_val/1{0.00s}
I1216 03:19:27.603445 139843838646016 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1216 03:19:27.603538 139843838646016 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( massachusetts ) ) ) )
I1216 03:19:27.603623 139843838646016 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1216 03:19:27.603698 139843838646016 hlog.py:32] train/00149/eval_val/2/corr False
I1216 03:19:27.603766 139843838646016 hlog.py:32] train/00149/eval_val/2 
I1216 03:19:27.603834 139843838646016 hlog.py:18] train/00149/eval_val/2{0.00s}
I1216 03:19:27.603919 139843838646016 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1216 03:19:27.604009 139843838646016 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( new mexico ) ) ) )
I1216 03:19:27.604094 139843838646016 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 03:19:27.604169 139843838646016 hlog.py:32] train/00149/eval_val/3/corr False
I1216 03:19:27.604238 139843838646016 hlog.py:32] train/00149/eval_val/3 
I1216 03:19:27.604305 139843838646016 hlog.py:18] train/00149/eval_val/3{0.00s}
I1216 03:19:27.604390 139843838646016 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1216 03:19:27.604480 139843838646016 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( north dakota ) ) ) )
I1216 03:19:27.604565 139843838646016 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1216 03:19:27.604639 139843838646016 hlog.py:32] train/00149/eval_val/4/corr False
I1216 03:19:27.604708 139843838646016 hlog.py:32] train/00149/eval_val/4 
I1216 03:19:27.604775 139843838646016 hlog.py:18] train/00149/eval_val/4{0.00s}
I1216 03:19:27.604860 139843838646016 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1216 03:19:27.604949 139843838646016 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1216 03:19:27.605033 139843838646016 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.605108 139843838646016 hlog.py:32] train/00149/eval_val/5/corr False
I1216 03:19:27.605176 139843838646016 hlog.py:32] train/00149/eval_val/5 
I1216 03:19:27.605255 139843838646016 hlog.py:18] train/00149/eval_val/5{0.00s}
I1216 03:19:27.605341 139843838646016 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1216 03:19:27.605430 139843838646016 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( alaska ) ) ) )
I1216 03:19:27.605515 139843838646016 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.605588 139843838646016 hlog.py:32] train/00149/eval_val/6/corr False
I1216 03:19:27.605657 139843838646016 hlog.py:32] train/00149/eval_val/6 
I1216 03:19:27.605724 139843838646016 hlog.py:18] train/00149/eval_val/6{0.00s}
I1216 03:19:27.605808 139843838646016 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1216 03:19:27.605896 139843838646016 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1216 03:19:27.605981 139843838646016 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.606055 139843838646016 hlog.py:32] train/00149/eval_val/7/corr False
I1216 03:19:27.606123 139843838646016 hlog.py:32] train/00149/eval_val/7 
I1216 03:19:27.606190 139843838646016 hlog.py:18] train/00149/eval_val/7{0.00s}
I1216 03:19:27.606273 139843838646016 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1216 03:19:27.606363 139843838646016 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1216 03:19:27.606447 139843838646016 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 03:19:27.606521 139843838646016 hlog.py:32] train/00149/eval_val/8/corr False
I1216 03:19:27.606589 139843838646016 hlog.py:32] train/00149/eval_val/8 
I1216 03:19:27.606656 139843838646016 hlog.py:18] train/00149/eval_val/8{0.00s}
I1216 03:19:27.606739 139843838646016 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1216 03:19:27.606829 139843838646016 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1216 03:19:27.606913 139843838646016 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 03:19:27.606987 139843838646016 hlog.py:32] train/00149/eval_val/9/corr False
I1216 03:19:27.607055 139843838646016 hlog.py:32] train/00149/eval_val/9 
I1216 03:19:27.607123 139843838646016 hlog.py:18] train/00149/eval_val/9{0.00s}
I1216 03:19:27.607204 139843838646016 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1216 03:19:27.607295 139843838646016 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1216 03:19:27.607378 139843838646016 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.607460 139843838646016 hlog.py:32] train/00149/eval_val/10/corr False
I1216 03:19:27.607529 139843838646016 hlog.py:32] train/00149/eval_val/10 
I1216 03:19:27.607597 139843838646016 hlog.py:18] train/00149/eval_val/10{0.00s}
I1216 03:19:27.607687 139843838646016 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1216 03:19:27.607787 139843838646016 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 03:19:27.607877 139843838646016 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 03:19:27.607951 139843838646016 hlog.py:32] train/00149/eval_val/11/corr True
I1216 03:19:27.608020 139843838646016 hlog.py:32] train/00149/eval_val/11 
I1216 03:19:27.608087 139843838646016 hlog.py:18] train/00149/eval_val/11{0.00s}
I1216 03:19:27.608176 139843838646016 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1216 03:19:27.608281 139843838646016 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1216 03:19:27.608371 139843838646016 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1216 03:19:27.608445 139843838646016 hlog.py:32] train/00149/eval_val/12/corr True
I1216 03:19:27.608513 139843838646016 hlog.py:32] train/00149/eval_val/12 
I1216 03:19:27.608580 139843838646016 hlog.py:18] train/00149/eval_val/12{0.00s}
I1216 03:19:27.608669 139843838646016 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1216 03:19:27.608767 139843838646016 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1216 03:19:27.608857 139843838646016 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1216 03:19:27.608931 139843838646016 hlog.py:32] train/00149/eval_val/13/corr True
I1216 03:19:27.608999 139843838646016 hlog.py:32] train/00149/eval_val/13 
I1216 03:19:27.609066 139843838646016 hlog.py:18] train/00149/eval_val/13{0.00s}
I1216 03:19:27.609156 139843838646016 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1216 03:19:27.609254 139843838646016 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1216 03:19:27.609343 139843838646016 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1216 03:19:27.609417 139843838646016 hlog.py:32] train/00149/eval_val/14/corr True
I1216 03:19:27.609485 139843838646016 hlog.py:32] train/00149/eval_val/14 
I1216 03:19:27.609552 139843838646016 hlog.py:18] train/00149/eval_val/14{0.00s}
I1216 03:19:27.609641 139843838646016 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1216 03:19:27.609739 139843838646016 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1216 03:19:27.609829 139843838646016 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1216 03:19:27.609902 139843838646016 hlog.py:32] train/00149/eval_val/15/corr True
I1216 03:19:27.609971 139843838646016 hlog.py:32] train/00149/eval_val/15 
I1216 03:19:27.610038 139843838646016 hlog.py:18] train/00149/eval_val/15{0.00s}
I1216 03:19:27.610127 139843838646016 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1216 03:19:27.610224 139843838646016 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 03:19:27.610314 139843838646016 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1216 03:19:27.610388 139843838646016 hlog.py:32] train/00149/eval_val/16/corr True
I1216 03:19:27.610455 139843838646016 hlog.py:32] train/00149/eval_val/16 
I1216 03:19:27.610522 139843838646016 hlog.py:18] train/00149/eval_val/16{0.00s}
I1216 03:19:27.610605 139843838646016 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1216 03:19:27.610698 139843838646016 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1216 03:19:27.610798 139843838646016 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1216 03:19:27.610873 139843838646016 hlog.py:32] train/00149/eval_val/17/corr False
I1216 03:19:27.610942 139843838646016 hlog.py:32] train/00149/eval_val/17 
I1216 03:19:27.611009 139843838646016 hlog.py:18] train/00149/eval_val/17{0.00s}
I1216 03:19:27.611092 139843838646016 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1216 03:19:27.611186 139843838646016 hlog.py:32] train/00149/eval_val/18/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( south carolina ) ) ) ) )
I1216 03:19:27.611276 139843838646016 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1216 03:19:27.611350 139843838646016 hlog.py:32] train/00149/eval_val/18/corr False
I1216 03:19:27.611424 139843838646016 hlog.py:32] train/00149/eval_val/18 
I1216 03:19:27.611493 139843838646016 hlog.py:18] train/00149/eval_val/18{0.00s}
I1216 03:19:27.611576 139843838646016 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1216 03:19:27.611669 139843838646016 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 03:19:27.611759 139843838646016 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1216 03:19:27.611833 139843838646016 hlog.py:32] train/00149/eval_val/19/corr False
I1216 03:19:27.611901 139843838646016 hlog.py:32] train/00149/eval_val/19 
I1216 03:19:27.611968 139843838646016 hlog.py:18] train/00149/eval_val/19{0.00s}
I1216 03:19:27.612052 139843838646016 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1216 03:19:27.612146 139843838646016 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1216 03:19:27.612235 139843838646016 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1216 03:19:27.612309 139843838646016 hlog.py:32] train/00149/eval_val/20/corr False
I1216 03:19:27.612378 139843838646016 hlog.py:32] train/00149/eval_val/20 
I1216 03:19:27.612445 139843838646016 hlog.py:18] train/00149/eval_val/20{0.00s}
I1216 03:19:27.612534 139843838646016 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1216 03:19:27.612632 139843838646016 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1216 03:19:27.612721 139843838646016 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1216 03:19:27.612795 139843838646016 hlog.py:32] train/00149/eval_val/21/corr True
I1216 03:19:27.612863 139843838646016 hlog.py:32] train/00149/eval_val/21 
I1216 03:19:27.612931 139843838646016 hlog.py:18] train/00149/eval_val/21{0.00s}
I1216 03:19:27.613016 139843838646016 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1216 03:19:27.613106 139843838646016 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _placeid ( rio grande ) ) ) )
I1216 03:19:27.613190 139843838646016 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1216 03:19:27.613264 139843838646016 hlog.py:32] train/00149/eval_val/22/corr False
I1216 03:19:27.613333 139843838646016 hlog.py:32] train/00149/eval_val/22 
I1216 03:19:27.613400 139843838646016 hlog.py:18] train/00149/eval_val/22{0.00s}
I1216 03:19:27.613492 139843838646016 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1216 03:19:27.613581 139843838646016 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1216 03:19:27.613666 139843838646016 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1216 03:19:27.613739 139843838646016 hlog.py:32] train/00149/eval_val/23/corr False
I1216 03:19:27.613808 139843838646016 hlog.py:32] train/00149/eval_val/23 
I1216 03:19:27.613875 139843838646016 hlog.py:18] train/00149/eval_val/23{0.00s}
I1216 03:19:27.613957 139843838646016 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1216 03:19:27.614048 139843838646016 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1216 03:19:27.614133 139843838646016 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1216 03:19:27.614207 139843838646016 hlog.py:32] train/00149/eval_val/24/corr False
I1216 03:19:27.614276 139843838646016 hlog.py:32] train/00149/eval_val/24 
I1216 03:19:27.614343 139843838646016 hlog.py:18] train/00149/eval_val/24{0.00s}
I1216 03:19:27.614431 139843838646016 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1216 03:19:27.614523 139843838646016 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 03:19:27.614609 139843838646016 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 03:19:27.614682 139843838646016 hlog.py:32] train/00149/eval_val/25/corr True
I1216 03:19:27.614751 139843838646016 hlog.py:32] train/00149/eval_val/25 
I1216 03:19:27.614818 139843838646016 hlog.py:18] train/00149/eval_val/25{0.00s}
I1216 03:19:27.614905 139843838646016 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1216 03:19:27.614997 139843838646016 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1216 03:19:27.615083 139843838646016 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1216 03:19:27.615157 139843838646016 hlog.py:32] train/00149/eval_val/26/corr True
I1216 03:19:27.615226 139843838646016 hlog.py:32] train/00149/eval_val/26 
I1216 03:19:27.615293 139843838646016 hlog.py:18] train/00149/eval_val/26{0.00s}
I1216 03:19:27.615376 139843838646016 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1216 03:19:27.615484 139843838646016 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) )
I1216 03:19:27.615571 139843838646016 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 03:19:27.615645 139843838646016 hlog.py:32] train/00149/eval_val/27/corr False
I1216 03:19:27.615714 139843838646016 hlog.py:32] train/00149/eval_val/27 
I1216 03:19:27.615780 139843838646016 hlog.py:18] train/00149/eval_val/27{0.00s}
I1216 03:19:27.615868 139843838646016 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1216 03:19:27.615960 139843838646016 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 03:19:27.616046 139843838646016 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 03:19:27.616119 139843838646016 hlog.py:32] train/00149/eval_val/28/corr True
I1216 03:19:27.616188 139843838646016 hlog.py:32] train/00149/eval_val/28 
I1216 03:19:27.616255 139843838646016 hlog.py:18] train/00149/eval_val/28{0.00s}
I1216 03:19:27.616342 139843838646016 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1216 03:19:27.616440 139843838646016 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1216 03:19:27.616527 139843838646016 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1216 03:19:27.616600 139843838646016 hlog.py:32] train/00149/eval_val/29/corr True
I1216 03:19:27.616669 139843838646016 hlog.py:32] train/00149/eval_val/29 
I1216 03:19:27.616736 139843838646016 hlog.py:18] train/00149/eval_val/29{0.00s}
I1216 03:19:27.616824 139843838646016 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1216 03:19:27.616915 139843838646016 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1216 03:19:27.617002 139843838646016 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1216 03:19:27.617076 139843838646016 hlog.py:32] train/00149/eval_val/30/corr True
I1216 03:19:27.617144 139843838646016 hlog.py:32] train/00149/eval_val/30 
I1216 03:19:27.617212 139843838646016 hlog.py:18] train/00149/eval_val/30{0.00s}
I1216 03:19:27.617298 139843838646016 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1216 03:19:27.617390 139843838646016 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1216 03:19:27.617476 139843838646016 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1216 03:19:27.617549 139843838646016 hlog.py:32] train/00149/eval_val/31/corr True
I1216 03:19:27.617617 139843838646016 hlog.py:32] train/00149/eval_val/31 
I1216 03:19:27.617685 139843838646016 hlog.py:18] train/00149/eval_val/31{0.00s}
I1216 03:19:27.617768 139843838646016 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1216 03:19:27.617857 139843838646016 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1216 03:19:27.617943 139843838646016 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1216 03:19:27.618017 139843838646016 hlog.py:32] train/00149/eval_val/32/corr False
I1216 03:19:27.618086 139843838646016 hlog.py:32] train/00149/eval_val/32 
I1216 03:19:27.618153 139843838646016 hlog.py:18] train/00149/eval_val/32{0.00s}
I1216 03:19:27.618240 139843838646016 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1216 03:19:27.618349 139843838646016 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 03:19:27.618437 139843838646016 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1216 03:19:27.618514 139843838646016 hlog.py:32] train/00149/eval_val/33/corr True
I1216 03:19:27.618597 139843838646016 hlog.py:32] train/00149/eval_val/33 
I1216 03:19:27.618664 139843838646016 hlog.py:18] train/00149/eval_val/33{0.00s}
I1216 03:19:27.618752 139843838646016 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1216 03:19:27.618844 139843838646016 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 03:19:27.618930 139843838646016 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1216 03:19:27.619004 139843838646016 hlog.py:32] train/00149/eval_val/34/corr True
I1216 03:19:27.619072 139843838646016 hlog.py:32] train/00149/eval_val/34 
I1216 03:19:27.619139 139843838646016 hlog.py:18] train/00149/eval_val/34{0.00s}
I1216 03:19:27.619228 139843838646016 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1216 03:19:27.619328 139843838646016 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.619433 139843838646016 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.619509 139843838646016 hlog.py:32] train/00149/eval_val/35/corr True
I1216 03:19:27.619578 139843838646016 hlog.py:32] train/00149/eval_val/35 
I1216 03:19:27.619646 139843838646016 hlog.py:18] train/00149/eval_val/35{0.00s}
I1216 03:19:27.619734 139843838646016 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1216 03:19:27.619829 139843838646016 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.619917 139843838646016 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.619991 139843838646016 hlog.py:32] train/00149/eval_val/36/corr True
I1216 03:19:27.620059 139843838646016 hlog.py:32] train/00149/eval_val/36 
I1216 03:19:27.620126 139843838646016 hlog.py:18] train/00149/eval_val/36{0.00s}
I1216 03:19:27.620214 139843838646016 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1216 03:19:27.620308 139843838646016 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1216 03:19:27.620396 139843838646016 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.620470 139843838646016 hlog.py:32] train/00149/eval_val/37/corr False
I1216 03:19:27.620538 139843838646016 hlog.py:32] train/00149/eval_val/37 
I1216 03:19:27.620605 139843838646016 hlog.py:18] train/00149/eval_val/37{0.00s}
I1216 03:19:27.620693 139843838646016 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1216 03:19:27.620788 139843838646016 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.620875 139843838646016 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.620949 139843838646016 hlog.py:32] train/00149/eval_val/38/corr True
I1216 03:19:27.621018 139843838646016 hlog.py:32] train/00149/eval_val/38 
I1216 03:19:27.621085 139843838646016 hlog.py:18] train/00149/eval_val/38{0.00s}
I1216 03:19:27.621173 139843838646016 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1216 03:19:27.621267 139843838646016 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.621354 139843838646016 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1216 03:19:27.621428 139843838646016 hlog.py:32] train/00149/eval_val/39/corr True
I1216 03:19:27.621497 139843838646016 hlog.py:32] train/00149/eval_val/39 
I1216 03:19:27.621564 139843838646016 hlog.py:18] train/00149/eval_val/39{0.00s}
I1216 03:19:27.621646 139843838646016 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1216 03:19:27.621740 139843838646016 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( are ) ) ) , A ) )
I1216 03:19:27.621825 139843838646016 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1216 03:19:27.621899 139843838646016 hlog.py:32] train/00149/eval_val/40/corr False
I1216 03:19:27.621967 139843838646016 hlog.py:32] train/00149/eval_val/40 
I1216 03:19:27.622033 139843838646016 hlog.py:18] train/00149/eval_val/40{0.00s}
I1216 03:19:27.622122 139843838646016 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1216 03:19:27.622217 139843838646016 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1216 03:19:27.622303 139843838646016 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1216 03:19:27.622377 139843838646016 hlog.py:32] train/00149/eval_val/41/corr False
I1216 03:19:27.622446 139843838646016 hlog.py:32] train/00149/eval_val/41 
I1216 03:19:27.622513 139843838646016 hlog.py:18] train/00149/eval_val/41{0.00s}
I1216 03:19:27.622595 139843838646016 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1216 03:19:27.622691 139843838646016 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1216 03:19:27.622776 139843838646016 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1216 03:19:27.622850 139843838646016 hlog.py:32] train/00149/eval_val/42/corr False
I1216 03:19:27.622918 139843838646016 hlog.py:32] train/00149/eval_val/42 
I1216 03:19:27.622985 139843838646016 hlog.py:18] train/00149/eval_val/42{0.00s}
I1216 03:19:27.623069 139843838646016 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1216 03:19:27.623168 139843838646016 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1216 03:19:27.623259 139843838646016 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1216 03:19:27.623333 139843838646016 hlog.py:32] train/00149/eval_val/43/corr False
I1216 03:19:27.623402 139843838646016 hlog.py:32] train/00149/eval_val/43 
I1216 03:19:27.623478 139843838646016 hlog.py:18] train/00149/eval_val/43{0.00s}
I1216 03:19:27.623569 139843838646016 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1216 03:19:27.623669 139843838646016 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1216 03:19:27.623759 139843838646016 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1216 03:19:27.623833 139843838646016 hlog.py:32] train/00149/eval_val/44/corr True
I1216 03:19:27.623902 139843838646016 hlog.py:32] train/00149/eval_val/44 
I1216 03:19:27.623969 139843838646016 hlog.py:18] train/00149/eval_val/44{0.00s}
I1216 03:19:27.624055 139843838646016 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1216 03:19:27.624149 139843838646016 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1216 03:19:27.624236 139843838646016 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1216 03:19:27.624310 139843838646016 hlog.py:32] train/00149/eval_val/45/corr False
I1216 03:19:27.624378 139843838646016 hlog.py:32] train/00149/eval_val/45 
I1216 03:19:27.624445 139843838646016 hlog.py:18] train/00149/eval_val/45{0.00s}
I1216 03:19:27.624533 139843838646016 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1216 03:19:27.624627 139843838646016 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1216 03:19:27.624715 139843838646016 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1216 03:19:27.624795 139843838646016 hlog.py:32] train/00149/eval_val/46/corr True
I1216 03:19:27.624864 139843838646016 hlog.py:32] train/00149/eval_val/46 
I1216 03:19:27.624932 139843838646016 hlog.py:18] train/00149/eval_val/46{0.00s}
I1216 03:19:27.625020 139843838646016 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1216 03:19:27.625116 139843838646016 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( B ) ) , A ) )
I1216 03:19:27.625206 139843838646016 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1216 03:19:27.625280 139843838646016 hlog.py:32] train/00149/eval_val/47/corr False
I1216 03:19:27.625348 139843838646016 hlog.py:32] train/00149/eval_val/47 
I1216 03:19:27.625416 139843838646016 hlog.py:18] train/00149/eval_val/47{0.00s}
I1216 03:19:27.625499 139843838646016 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1216 03:19:27.625598 139843838646016 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _city ( C ) , _const ( D , _cityid ( rochester , _ ) ) ) , A ) )
I1216 03:19:27.625688 139843838646016 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1216 03:19:27.625762 139843838646016 hlog.py:32] train/00149/eval_val/48/corr False
I1216 03:19:27.625831 139843838646016 hlog.py:32] train/00149/eval_val/48 
I1216 03:19:27.625898 139843838646016 hlog.py:18] train/00149/eval_val/48{0.00s}
I1216 03:19:27.625986 139843838646016 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1216 03:19:27.626083 139843838646016 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1216 03:19:27.626173 139843838646016 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 03:19:27.626247 139843838646016 hlog.py:32] train/00149/eval_val/49/corr False
I1216 03:19:27.626316 139843838646016 hlog.py:32] train/00149/eval_val/49 
I1216 03:19:27.626383 139843838646016 hlog.py:18] train/00149/eval_val/49{0.00s}
I1216 03:19:27.626472 139843838646016 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1216 03:19:27.626569 139843838646016 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1216 03:19:27.626658 139843838646016 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1216 03:19:27.626732 139843838646016 hlog.py:32] train/00149/eval_val/50/corr True
I1216 03:19:27.626800 139843838646016 hlog.py:32] train/00149/eval_val/50 
I1216 03:19:27.626867 139843838646016 hlog.py:18] train/00149/eval_val/50{0.00s}
I1216 03:19:27.626955 139843838646016 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1216 03:19:27.627052 139843838646016 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1216 03:19:27.627142 139843838646016 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1216 03:19:27.627216 139843838646016 hlog.py:32] train/00149/eval_val/51/corr False
I1216 03:19:27.627285 139843838646016 hlog.py:32] train/00149/eval_val/51 
I1216 03:19:27.627358 139843838646016 hlog.py:18] train/00149/eval_val/51{0.00s}
I1216 03:19:27.627448 139843838646016 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1216 03:19:27.627542 139843838646016 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1216 03:19:27.627629 139843838646016 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1216 03:19:27.627704 139843838646016 hlog.py:32] train/00149/eval_val/52/corr False
I1216 03:19:27.627772 139843838646016 hlog.py:32] train/00149/eval_val/52 
I1216 03:19:27.627839 139843838646016 hlog.py:18] train/00149/eval_val/52{0.00s}
I1216 03:19:27.627920 139843838646016 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1216 03:19:27.628013 139843838646016 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1216 03:19:27.628099 139843838646016 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1216 03:19:27.628173 139843838646016 hlog.py:32] train/00149/eval_val/53/corr False
I1216 03:19:27.628242 139843838646016 hlog.py:32] train/00149/eval_val/53 
I1216 03:19:27.628309 139843838646016 hlog.py:18] train/00149/eval_val/53{0.00s}
I1216 03:19:27.628396 139843838646016 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1216 03:19:27.628487 139843838646016 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 03:19:27.628572 139843838646016 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 03:19:27.628646 139843838646016 hlog.py:32] train/00149/eval_val/54/corr True
I1216 03:19:27.628715 139843838646016 hlog.py:32] train/00149/eval_val/54 
I1216 03:19:27.628782 139843838646016 hlog.py:18] train/00149/eval_val/54{0.00s}
I1216 03:19:27.628869 139843838646016 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1216 03:19:27.628960 139843838646016 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1216 03:19:27.629046 139843838646016 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1216 03:19:27.629120 139843838646016 hlog.py:32] train/00149/eval_val/55/corr True
I1216 03:19:27.629189 139843838646016 hlog.py:32] train/00149/eval_val/55 
I1216 03:19:27.629256 139843838646016 hlog.py:18] train/00149/eval_val/55{0.00s}
I1216 03:19:27.629343 139843838646016 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1216 03:19:27.629434 139843838646016 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 03:19:27.629520 139843838646016 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 03:19:27.629594 139843838646016 hlog.py:32] train/00149/eval_val/56/corr True
I1216 03:19:27.629662 139843838646016 hlog.py:32] train/00149/eval_val/56 
I1216 03:19:27.629729 139843838646016 hlog.py:18] train/00149/eval_val/56{0.00s}
I1216 03:19:27.629817 139843838646016 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1216 03:19:27.629908 139843838646016 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.629993 139843838646016 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.630066 139843838646016 hlog.py:32] train/00149/eval_val/57/corr True
I1216 03:19:27.630135 139843838646016 hlog.py:32] train/00149/eval_val/57 
I1216 03:19:27.630202 139843838646016 hlog.py:18] train/00149/eval_val/57{0.00s}
I1216 03:19:27.630292 139843838646016 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1216 03:19:27.630389 139843838646016 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.630475 139843838646016 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.630549 139843838646016 hlog.py:32] train/00149/eval_val/58/corr False
I1216 03:19:27.630618 139843838646016 hlog.py:32] train/00149/eval_val/58 
I1216 03:19:27.630685 139843838646016 hlog.py:18] train/00149/eval_val/58{0.00s}
I1216 03:19:27.630766 139843838646016 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1216 03:19:27.630856 139843838646016 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _population ( B , A ) , _const ( B , _placeid ( montana ) ) ) )
I1216 03:19:27.630941 139843838646016 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1216 03:19:27.631016 139843838646016 hlog.py:32] train/00149/eval_val/59/corr False
I1216 03:19:27.631084 139843838646016 hlog.py:32] train/00149/eval_val/59 
I1216 03:19:27.631151 139843838646016 hlog.py:18] train/00149/eval_val/59{0.00s}
I1216 03:19:27.631238 139843838646016 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1216 03:19:27.631329 139843838646016 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1216 03:19:27.631421 139843838646016 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1216 03:19:27.631496 139843838646016 hlog.py:32] train/00149/eval_val/60/corr True
I1216 03:19:27.631565 139843838646016 hlog.py:32] train/00149/eval_val/60 
I1216 03:19:27.631632 139843838646016 hlog.py:18] train/00149/eval_val/60{0.00s}
I1216 03:19:27.631720 139843838646016 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1216 03:19:27.631812 139843838646016 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 03:19:27.631898 139843838646016 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 03:19:27.631972 139843838646016 hlog.py:32] train/00149/eval_val/61/corr True
I1216 03:19:27.632040 139843838646016 hlog.py:32] train/00149/eval_val/61 
I1216 03:19:27.632107 139843838646016 hlog.py:18] train/00149/eval_val/61{0.00s}
I1216 03:19:27.632194 139843838646016 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1216 03:19:27.632285 139843838646016 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1216 03:19:27.632371 139843838646016 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1216 03:19:27.632445 139843838646016 hlog.py:32] train/00149/eval_val/62/corr True
I1216 03:19:27.632514 139843838646016 hlog.py:32] train/00149/eval_val/62 
I1216 03:19:27.632581 139843838646016 hlog.py:18] train/00149/eval_val/62{0.00s}
I1216 03:19:27.632668 139843838646016 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1216 03:19:27.632759 139843838646016 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.632845 139843838646016 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.632918 139843838646016 hlog.py:32] train/00149/eval_val/63/corr True
I1216 03:19:27.632987 139843838646016 hlog.py:32] train/00149/eval_val/63 
I1216 03:19:27.633054 139843838646016 hlog.py:18] train/00149/eval_val/63{0.00s}
I1216 03:19:27.842603 139843838646016 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1216 03:19:27.842812 139843838646016 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1216 03:19:27.842911 139843838646016 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1216 03:19:27.842992 139843838646016 hlog.py:32] train/00149/eval_val/64/corr True
I1216 03:19:27.843065 139843838646016 hlog.py:32] train/00149/eval_val/64 
I1216 03:19:27.843141 139843838646016 hlog.py:18] train/00149/eval_val/64{0.00s}
I1216 03:19:27.843233 139843838646016 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1216 03:19:27.843327 139843838646016 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.843431 139843838646016 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.843508 139843838646016 hlog.py:32] train/00149/eval_val/65/corr True
I1216 03:19:27.843578 139843838646016 hlog.py:32] train/00149/eval_val/65 
I1216 03:19:27.843647 139843838646016 hlog.py:18] train/00149/eval_val/65{0.00s}
I1216 03:19:27.843738 139843838646016 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1216 03:19:27.843831 139843838646016 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.843917 139843838646016 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.843991 139843838646016 hlog.py:32] train/00149/eval_val/66/corr True
I1216 03:19:27.844060 139843838646016 hlog.py:32] train/00149/eval_val/66 
I1216 03:19:27.844129 139843838646016 hlog.py:18] train/00149/eval_val/66{0.00s}
I1216 03:19:27.844213 139843838646016 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1216 03:19:27.844313 139843838646016 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 03:19:27.844399 139843838646016 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1216 03:19:27.844474 139843838646016 hlog.py:32] train/00149/eval_val/67/corr False
I1216 03:19:27.844543 139843838646016 hlog.py:32] train/00149/eval_val/67 
I1216 03:19:27.844610 139843838646016 hlog.py:18] train/00149/eval_val/67{0.00s}
I1216 03:19:27.844696 139843838646016 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1216 03:19:27.844791 139843838646016 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1216 03:19:27.844879 139843838646016 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1216 03:19:27.844953 139843838646016 hlog.py:32] train/00149/eval_val/68/corr False
I1216 03:19:27.845021 139843838646016 hlog.py:32] train/00149/eval_val/68 
I1216 03:19:27.845089 139843838646016 hlog.py:18] train/00149/eval_val/68{0.00s}
I1216 03:19:27.845175 139843838646016 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1216 03:19:27.845269 139843838646016 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _lake ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.845356 139843838646016 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.845430 139843838646016 hlog.py:32] train/00149/eval_val/69/corr False
I1216 03:19:27.845498 139843838646016 hlog.py:32] train/00149/eval_val/69 
I1216 03:19:27.845566 139843838646016 hlog.py:18] train/00149/eval_val/69{0.00s}
I1216 03:19:27.845649 139843838646016 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1216 03:19:27.845746 139843838646016 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( alaska , _ ) ) ) )
I1216 03:19:27.845831 139843838646016 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.845906 139843838646016 hlog.py:32] train/00149/eval_val/70/corr False
I1216 03:19:27.845975 139843838646016 hlog.py:32] train/00149/eval_val/70 
I1216 03:19:27.846042 139843838646016 hlog.py:18] train/00149/eval_val/70{0.00s}
I1216 03:19:27.846125 139843838646016 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1216 03:19:27.846214 139843838646016 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( california , _ ) ) ) )
I1216 03:19:27.846298 139843838646016 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1216 03:19:27.846372 139843838646016 hlog.py:32] train/00149/eval_val/71/corr False
I1216 03:19:27.846441 139843838646016 hlog.py:32] train/00149/eval_val/71 
I1216 03:19:27.846508 139843838646016 hlog.py:18] train/00149/eval_val/71{0.00s}
I1216 03:19:27.846590 139843838646016 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1216 03:19:27.846680 139843838646016 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( florida , _ ) ) ) )
I1216 03:19:27.846764 139843838646016 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1216 03:19:27.846838 139843838646016 hlog.py:32] train/00149/eval_val/72/corr False
I1216 03:19:27.846906 139843838646016 hlog.py:32] train/00149/eval_val/72 
I1216 03:19:27.846973 139843838646016 hlog.py:18] train/00149/eval_val/72{0.00s}
I1216 03:19:27.847056 139843838646016 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1216 03:19:27.847145 139843838646016 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( idaho , _ ) ) ) )
I1216 03:19:27.847229 139843838646016 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1216 03:19:27.847303 139843838646016 hlog.py:32] train/00149/eval_val/73/corr False
I1216 03:19:27.847371 139843838646016 hlog.py:32] train/00149/eval_val/73 
I1216 03:19:27.847450 139843838646016 hlog.py:18] train/00149/eval_val/73{0.00s}
I1216 03:19:27.847534 139843838646016 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1216 03:19:27.847624 139843838646016 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maine , _ ) ) ) )
I1216 03:19:27.847708 139843838646016 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1216 03:19:27.847782 139843838646016 hlog.py:32] train/00149/eval_val/74/corr False
I1216 03:19:27.847851 139843838646016 hlog.py:32] train/00149/eval_val/74 
I1216 03:19:27.847918 139843838646016 hlog.py:18] train/00149/eval_val/74{0.00s}
I1216 03:19:27.848001 139843838646016 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1216 03:19:27.848091 139843838646016 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( maryland , kilometers ) ) ) )
I1216 03:19:27.848176 139843838646016 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1216 03:19:27.848250 139843838646016 hlog.py:32] train/00149/eval_val/75/corr False
I1216 03:19:27.848318 139843838646016 hlog.py:32] train/00149/eval_val/75 
I1216 03:19:27.848386 139843838646016 hlog.py:18] train/00149/eval_val/75{0.00s}
I1216 03:19:27.848468 139843838646016 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1216 03:19:27.848558 139843838646016 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( new mexico , _ ) ) ) )
I1216 03:19:27.848649 139843838646016 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1216 03:19:27.848724 139843838646016 hlog.py:32] train/00149/eval_val/76/corr False
I1216 03:19:27.848793 139843838646016 hlog.py:32] train/00149/eval_val/76 
I1216 03:19:27.848860 139843838646016 hlog.py:18] train/00149/eval_val/76{0.00s}
I1216 03:19:27.848943 139843838646016 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1216 03:19:27.849033 139843838646016 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( ohio , _ ) ) ) )
I1216 03:19:27.849117 139843838646016 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 03:19:27.849191 139843838646016 hlog.py:32] train/00149/eval_val/77/corr False
I1216 03:19:27.849260 139843838646016 hlog.py:32] train/00149/eval_val/77 
I1216 03:19:27.849327 139843838646016 hlog.py:18] train/00149/eval_val/77{0.00s}
I1216 03:19:27.849409 139843838646016 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1216 03:19:27.849499 139843838646016 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( washington , _ ) ) ) )
I1216 03:19:27.849583 139843838646016 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1216 03:19:27.849657 139843838646016 hlog.py:32] train/00149/eval_val/78/corr False
I1216 03:19:27.849726 139843838646016 hlog.py:32] train/00149/eval_val/78 
I1216 03:19:27.849793 139843838646016 hlog.py:18] train/00149/eval_val/78{0.00s}
I1216 03:19:27.849876 139843838646016 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1216 03:19:27.849966 139843838646016 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( south carolina , _ ) ) ) )
I1216 03:19:27.850050 139843838646016 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1216 03:19:27.850124 139843838646016 hlog.py:32] train/00149/eval_val/79/corr False
I1216 03:19:27.850193 139843838646016 hlog.py:32] train/00149/eval_val/79 
I1216 03:19:27.850260 139843838646016 hlog.py:18] train/00149/eval_val/79{0.00s}
I1216 03:19:27.850342 139843838646016 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1216 03:19:27.850431 139843838646016 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( texas , _ ) ) ) )
I1216 03:19:27.850516 139843838646016 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.850590 139843838646016 hlog.py:32] train/00149/eval_val/80/corr False
I1216 03:19:27.850658 139843838646016 hlog.py:32] train/00149/eval_val/80 
I1216 03:19:27.850725 139843838646016 hlog.py:18] train/00149/eval_val/80{0.00s}
I1216 03:19:27.850812 139843838646016 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1216 03:19:27.850901 139843838646016 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _placeid ( texas ) ) ) )
I1216 03:19:27.850986 139843838646016 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.851059 139843838646016 hlog.py:32] train/00149/eval_val/81/corr False
I1216 03:19:27.851128 139843838646016 hlog.py:32] train/00149/eval_val/81 
I1216 03:19:27.851195 139843838646016 hlog.py:18] train/00149/eval_val/81{0.00s}
I1216 03:19:27.851277 139843838646016 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1216 03:19:27.851367 139843838646016 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _cityid ( wisconsin , _ ) ) ) )
I1216 03:19:27.851460 139843838646016 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1216 03:19:27.851535 139843838646016 hlog.py:32] train/00149/eval_val/82/corr False
I1216 03:19:27.851609 139843838646016 hlog.py:32] train/00149/eval_val/82 
I1216 03:19:27.851678 139843838646016 hlog.py:18] train/00149/eval_val/82{0.00s}
I1216 03:19:27.851765 139843838646016 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1216 03:19:27.851854 139843838646016 hlog.py:32] train/00149/eval_val/83/pred ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1216 03:19:27.851938 139843838646016 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1216 03:19:27.852011 139843838646016 hlog.py:32] train/00149/eval_val/83/corr True
I1216 03:19:27.852080 139843838646016 hlog.py:32] train/00149/eval_val/83 
I1216 03:19:27.852147 139843838646016 hlog.py:18] train/00149/eval_val/83{0.00s}
I1216 03:19:27.852231 139843838646016 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1216 03:19:27.852325 139843838646016 hlog.py:32] train/00149/eval_val/84/pred ( A , _highest ( A , ( _state ( A ) , _loc ( A , B ) , _smallest ( B , _state ( B ) ) ) ) )
I1216 03:19:27.852409 139843838646016 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:27.852483 139843838646016 hlog.py:32] train/00149/eval_val/84/corr False
I1216 03:19:27.852551 139843838646016 hlog.py:32] train/00149/eval_val/84 
I1216 03:19:27.852618 139843838646016 hlog.py:18] train/00149/eval_val/84{0.00s}
I1216 03:19:27.852702 139843838646016 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1216 03:19:27.852795 139843838646016 hlog.py:32] train/00149/eval_val/85/pred ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.852880 139843838646016 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:27.852953 139843838646016 hlog.py:32] train/00149/eval_val/85/corr False
I1216 03:19:27.853021 139843838646016 hlog.py:32] train/00149/eval_val/85 
I1216 03:19:27.853089 139843838646016 hlog.py:18] train/00149/eval_val/85{0.00s}
I1216 03:19:27.853174 139843838646016 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1216 03:19:27.853276 139843838646016 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _capital ( C ) , _const ( C , _riverid ( river ) ) ) ) ) )
I1216 03:19:27.853365 139843838646016 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1216 03:19:27.853439 139843838646016 hlog.py:32] train/00149/eval_val/86/corr False
I1216 03:19:27.853508 139843838646016 hlog.py:32] train/00149/eval_val/86 
I1216 03:19:27.853575 139843838646016 hlog.py:18] train/00149/eval_val/86{0.00s}
I1216 03:19:27.853659 139843838646016 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1216 03:19:27.853758 139843838646016 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 03:19:27.853852 139843838646016 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 03:19:27.853926 139843838646016 hlog.py:32] train/00149/eval_val/87/corr False
I1216 03:19:27.853994 139843838646016 hlog.py:32] train/00149/eval_val/87 
I1216 03:19:27.854062 139843838646016 hlog.py:18] train/00149/eval_val/87{0.00s}
I1216 03:19:27.854150 139843838646016 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1216 03:19:27.854241 139843838646016 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1216 03:19:27.854326 139843838646016 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1216 03:19:27.854406 139843838646016 hlog.py:32] train/00149/eval_val/88/corr True
I1216 03:19:27.854475 139843838646016 hlog.py:32] train/00149/eval_val/88 
I1216 03:19:27.854542 139843838646016 hlog.py:18] train/00149/eval_val/88{0.00s}
I1216 03:19:27.854634 139843838646016 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1216 03:19:27.854732 139843838646016 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 03:19:27.854822 139843838646016 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 03:19:27.854896 139843838646016 hlog.py:32] train/00149/eval_val/89/corr True
I1216 03:19:27.854964 139843838646016 hlog.py:32] train/00149/eval_val/89 
I1216 03:19:27.855031 139843838646016 hlog.py:18] train/00149/eval_val/89{0.00s}
I1216 03:19:27.855116 139843838646016 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1216 03:19:27.855212 139843838646016 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _stateid ( texas ) ) ) )
I1216 03:19:27.855305 139843838646016 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1216 03:19:27.855379 139843838646016 hlog.py:32] train/00149/eval_val/90/corr False
I1216 03:19:27.855457 139843838646016 hlog.py:32] train/00149/eval_val/90 
I1216 03:19:27.855525 139843838646016 hlog.py:18] train/00149/eval_val/90{0.00s}
I1216 03:19:27.855614 139843838646016 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1216 03:19:27.855708 139843838646016 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.855795 139843838646016 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.855869 139843838646016 hlog.py:32] train/00149/eval_val/91/corr True
I1216 03:19:27.855939 139843838646016 hlog.py:32] train/00149/eval_val/91 
I1216 03:19:27.856006 139843838646016 hlog.py:18] train/00149/eval_val/91{0.00s}
I1216 03:19:27.856095 139843838646016 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1216 03:19:27.856188 139843838646016 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.856276 139843838646016 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.856350 139843838646016 hlog.py:32] train/00149/eval_val/92/corr True
I1216 03:19:27.856419 139843838646016 hlog.py:32] train/00149/eval_val/92 
I1216 03:19:27.856485 139843838646016 hlog.py:18] train/00149/eval_val/92{0.00s}
I1216 03:19:27.856569 139843838646016 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1216 03:19:27.856660 139843838646016 hlog.py:32] train/00149/eval_val/93/pred ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:27.856747 139843838646016 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.856821 139843838646016 hlog.py:32] train/00149/eval_val/93/corr False
I1216 03:19:27.856890 139843838646016 hlog.py:32] train/00149/eval_val/93 
I1216 03:19:27.856957 139843838646016 hlog.py:18] train/00149/eval_val/93{0.00s}
I1216 03:19:27.857049 139843838646016 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1216 03:19:27.857144 139843838646016 hlog.py:32] train/00149/eval_val/94/pred ( A , _longest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.857231 139843838646016 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.857305 139843838646016 hlog.py:32] train/00149/eval_val/94/corr False
I1216 03:19:27.857373 139843838646016 hlog.py:32] train/00149/eval_val/94 
I1216 03:19:27.857441 139843838646016 hlog.py:18] train/00149/eval_val/94{0.00s}
I1216 03:19:27.857530 139843838646016 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1216 03:19:27.857624 139843838646016 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.857711 139843838646016 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.857785 139843838646016 hlog.py:32] train/00149/eval_val/95/corr True
I1216 03:19:27.857854 139843838646016 hlog.py:32] train/00149/eval_val/95 
I1216 03:19:27.857921 139843838646016 hlog.py:18] train/00149/eval_val/95{0.00s}
I1216 03:19:27.858012 139843838646016 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1216 03:19:27.858110 139843838646016 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1216 03:19:27.858200 139843838646016 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1216 03:19:27.858273 139843838646016 hlog.py:32] train/00149/eval_val/96/corr True
I1216 03:19:27.858342 139843838646016 hlog.py:32] train/00149/eval_val/96 
I1216 03:19:27.858409 139843838646016 hlog.py:18] train/00149/eval_val/96{0.00s}
I1216 03:19:27.858495 139843838646016 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1216 03:19:27.858595 139843838646016 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) ) )
I1216 03:19:27.858711 139843838646016 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1216 03:19:27.858787 139843838646016 hlog.py:32] train/00149/eval_val/97/corr False
I1216 03:19:27.858855 139843838646016 hlog.py:32] train/00149/eval_val/97 
I1216 03:19:27.858922 139843838646016 hlog.py:18] train/00149/eval_val/97{0.00s}
I1216 03:19:27.859013 139843838646016 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1216 03:19:27.859108 139843838646016 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1216 03:19:27.859196 139843838646016 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1216 03:19:27.859270 139843838646016 hlog.py:32] train/00149/eval_val/98/corr True
I1216 03:19:27.859339 139843838646016 hlog.py:32] train/00149/eval_val/98 
I1216 03:19:27.859412 139843838646016 hlog.py:18] train/00149/eval_val/98{0.00s}
I1216 03:19:27.859505 139843838646016 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1216 03:19:27.859601 139843838646016 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 03:19:27.859696 139843838646016 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 03:19:27.859770 139843838646016 hlog.py:32] train/00149/eval_val/99/corr True
I1216 03:19:27.859838 139843838646016 hlog.py:32] train/00149/eval_val/99 
I1216 03:19:27.859906 139843838646016 hlog.py:18] train/00149/eval_val/99{0.00s}
I1216 03:19:27.859989 139843838646016 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1216 03:19:27.860082 139843838646016 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 03:19:27.860171 139843838646016 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 03:19:27.860246 139843838646016 hlog.py:32] train/00149/eval_val/100/corr False
I1216 03:19:27.860314 139843838646016 hlog.py:32] train/00149/eval_val/100 
I1216 03:19:27.860382 139843838646016 hlog.py:18] train/00149/eval_val/100{0.00s}
I1216 03:19:27.860466 139843838646016 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1216 03:19:27.860565 139843838646016 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _mountain ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 03:19:27.860654 139843838646016 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1216 03:19:27.860728 139843838646016 hlog.py:32] train/00149/eval_val/101/corr False
I1216 03:19:27.860797 139843838646016 hlog.py:32] train/00149/eval_val/101 
I1216 03:19:27.860864 139843838646016 hlog.py:18] train/00149/eval_val/101{0.00s}
I1216 03:19:27.860948 139843838646016 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1216 03:19:27.861040 139843838646016 hlog.py:32] train/00149/eval_val/102/pred ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1216 03:19:27.861126 139843838646016 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1216 03:19:27.861200 139843838646016 hlog.py:32] train/00149/eval_val/102/corr False
I1216 03:19:27.861268 139843838646016 hlog.py:32] train/00149/eval_val/102 
I1216 03:19:27.861335 139843838646016 hlog.py:18] train/00149/eval_val/102{0.00s}
I1216 03:19:27.861423 139843838646016 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1216 03:19:27.861514 139843838646016 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1216 03:19:27.861599 139843838646016 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1216 03:19:27.861674 139843838646016 hlog.py:32] train/00149/eval_val/103/corr True
I1216 03:19:27.861742 139843838646016 hlog.py:32] train/00149/eval_val/103 
I1216 03:19:27.861808 139843838646016 hlog.py:18] train/00149/eval_val/103{0.00s}
I1216 03:19:27.861895 139843838646016 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1216 03:19:27.861986 139843838646016 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.862071 139843838646016 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.862144 139843838646016 hlog.py:32] train/00149/eval_val/104/corr True
I1216 03:19:27.862213 139843838646016 hlog.py:32] train/00149/eval_val/104 
I1216 03:19:27.862280 139843838646016 hlog.py:18] train/00149/eval_val/104{0.00s}
I1216 03:19:27.862373 139843838646016 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1216 03:19:27.862465 139843838646016 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1216 03:19:27.862550 139843838646016 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1216 03:19:27.862624 139843838646016 hlog.py:32] train/00149/eval_val/105/corr True
I1216 03:19:27.862693 139843838646016 hlog.py:32] train/00149/eval_val/105 
I1216 03:19:27.862760 139843838646016 hlog.py:18] train/00149/eval_val/105{0.00s}
I1216 03:19:27.862847 139843838646016 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1216 03:19:27.862937 139843838646016 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1216 03:19:27.863024 139843838646016 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1216 03:19:27.863098 139843838646016 hlog.py:32] train/00149/eval_val/106/corr True
I1216 03:19:27.863166 139843838646016 hlog.py:32] train/00149/eval_val/106 
I1216 03:19:27.863233 139843838646016 hlog.py:18] train/00149/eval_val/106{0.00s}
I1216 03:19:27.863320 139843838646016 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1216 03:19:27.863421 139843838646016 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 03:19:27.863509 139843838646016 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 03:19:27.863583 139843838646016 hlog.py:32] train/00149/eval_val/107/corr True
I1216 03:19:27.863652 139843838646016 hlog.py:32] train/00149/eval_val/107 
I1216 03:19:27.863719 139843838646016 hlog.py:18] train/00149/eval_val/107{0.00s}
I1216 03:19:27.863801 139843838646016 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1216 03:19:27.863893 139843838646016 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) ) )
I1216 03:19:27.863979 139843838646016 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1216 03:19:27.864053 139843838646016 hlog.py:32] train/00149/eval_val/108/corr False
I1216 03:19:27.864122 139843838646016 hlog.py:32] train/00149/eval_val/108 
I1216 03:19:27.864189 139843838646016 hlog.py:18] train/00149/eval_val/108{0.00s}
I1216 03:19:27.864271 139843838646016 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1216 03:19:27.864363 139843838646016 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) ) )
I1216 03:19:27.864449 139843838646016 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1216 03:19:27.864523 139843838646016 hlog.py:32] train/00149/eval_val/109/corr False
I1216 03:19:27.864592 139843838646016 hlog.py:32] train/00149/eval_val/109 
I1216 03:19:27.864658 139843838646016 hlog.py:18] train/00149/eval_val/109{0.00s}
I1216 03:19:27.864740 139843838646016 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1216 03:19:27.864832 139843838646016 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) ) )
I1216 03:19:27.864918 139843838646016 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1216 03:19:27.864992 139843838646016 hlog.py:32] train/00149/eval_val/110/corr False
I1216 03:19:27.865061 139843838646016 hlog.py:32] train/00149/eval_val/110 
I1216 03:19:27.865133 139843838646016 hlog.py:18] train/00149/eval_val/110{0.00s}
I1216 03:19:27.865216 139843838646016 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1216 03:19:27.865309 139843838646016 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) ) )
I1216 03:19:27.865394 139843838646016 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1216 03:19:27.865468 139843838646016 hlog.py:32] train/00149/eval_val/111/corr False
I1216 03:19:27.865537 139843838646016 hlog.py:32] train/00149/eval_val/111 
I1216 03:19:27.865604 139843838646016 hlog.py:18] train/00149/eval_val/111{0.00s}
I1216 03:19:27.865686 139843838646016 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1216 03:19:27.865778 139843838646016 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) ) )
I1216 03:19:27.865864 139843838646016 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1216 03:19:27.865938 139843838646016 hlog.py:32] train/00149/eval_val/112/corr False
I1216 03:19:27.866007 139843838646016 hlog.py:32] train/00149/eval_val/112 
I1216 03:19:27.866074 139843838646016 hlog.py:18] train/00149/eval_val/112{0.00s}
I1216 03:19:27.866156 139843838646016 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1216 03:19:27.866248 139843838646016 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) ) )
I1216 03:19:27.866335 139843838646016 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1216 03:19:27.866409 139843838646016 hlog.py:32] train/00149/eval_val/113/corr False
I1216 03:19:27.866477 139843838646016 hlog.py:32] train/00149/eval_val/113 
I1216 03:19:27.866543 139843838646016 hlog.py:18] train/00149/eval_val/113{0.00s}
I1216 03:19:27.866625 139843838646016 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1216 03:19:27.866717 139843838646016 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1216 03:19:27.866803 139843838646016 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1216 03:19:27.866876 139843838646016 hlog.py:32] train/00149/eval_val/114/corr False
I1216 03:19:27.866945 139843838646016 hlog.py:32] train/00149/eval_val/114 
I1216 03:19:27.867011 139843838646016 hlog.py:18] train/00149/eval_val/114{0.00s}
I1216 03:19:27.867110 139843838646016 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1216 03:19:27.867205 139843838646016 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) ) )
I1216 03:19:27.867294 139843838646016 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1216 03:19:27.867371 139843838646016 hlog.py:32] train/00149/eval_val/115/corr False
I1216 03:19:27.867463 139843838646016 hlog.py:32] train/00149/eval_val/115 
I1216 03:19:27.867532 139843838646016 hlog.py:18] train/00149/eval_val/115{0.00s}
I1216 03:19:27.867614 139843838646016 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1216 03:19:27.867707 139843838646016 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , \+ ( _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1216 03:19:27.867792 139843838646016 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1216 03:19:27.867866 139843838646016 hlog.py:32] train/00149/eval_val/116/corr False
I1216 03:19:27.867941 139843838646016 hlog.py:32] train/00149/eval_val/116 
I1216 03:19:27.868009 139843838646016 hlog.py:18] train/00149/eval_val/116{0.00s}
I1216 03:19:27.868098 139843838646016 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1216 03:19:27.868191 139843838646016 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.868279 139843838646016 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.868353 139843838646016 hlog.py:32] train/00149/eval_val/117/corr True
I1216 03:19:27.868421 139843838646016 hlog.py:32] train/00149/eval_val/117 
I1216 03:19:27.868489 139843838646016 hlog.py:18] train/00149/eval_val/117{0.00s}
I1216 03:19:27.868577 139843838646016 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1216 03:19:27.868671 139843838646016 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.868758 139843838646016 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.868832 139843838646016 hlog.py:32] train/00149/eval_val/118/corr True
I1216 03:19:27.868900 139843838646016 hlog.py:32] train/00149/eval_val/118 
I1216 03:19:27.868967 139843838646016 hlog.py:18] train/00149/eval_val/118{0.00s}
I1216 03:19:27.869055 139843838646016 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1216 03:19:27.869149 139843838646016 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.869236 139843838646016 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1216 03:19:27.869309 139843838646016 hlog.py:32] train/00149/eval_val/119/corr True
I1216 03:19:27.869378 139843838646016 hlog.py:32] train/00149/eval_val/119 
I1216 03:19:27.869445 139843838646016 hlog.py:18] train/00149/eval_val/119{0.00s}
I1216 03:19:27.869530 139843838646016 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1216 03:19:27.869615 139843838646016 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1216 03:19:27.869697 139843838646016 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1216 03:19:27.869770 139843838646016 hlog.py:32] train/00149/eval_val/120/corr True
I1216 03:19:27.869838 139843838646016 hlog.py:32] train/00149/eval_val/120 
I1216 03:19:27.869905 139843838646016 hlog.py:18] train/00149/eval_val/120{0.00s}
I1216 03:19:27.869990 139843838646016 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1216 03:19:27.870075 139843838646016 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1216 03:19:27.870156 139843838646016 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1216 03:19:27.870230 139843838646016 hlog.py:32] train/00149/eval_val/121/corr True
I1216 03:19:27.870298 139843838646016 hlog.py:32] train/00149/eval_val/121 
I1216 03:19:27.870365 139843838646016 hlog.py:18] train/00149/eval_val/121{0.00s}
I1216 03:19:27.870453 139843838646016 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1216 03:19:27.870547 139843838646016 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1216 03:19:27.870634 139843838646016 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1216 03:19:27.870708 139843838646016 hlog.py:32] train/00149/eval_val/122/corr True
I1216 03:19:27.870776 139843838646016 hlog.py:32] train/00149/eval_val/122 
I1216 03:19:27.870849 139843838646016 hlog.py:18] train/00149/eval_val/122{0.00s}
I1216 03:19:27.870939 139843838646016 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1216 03:19:27.871033 139843838646016 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1216 03:19:27.871120 139843838646016 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1216 03:19:27.871194 139843838646016 hlog.py:32] train/00149/eval_val/123/corr True
I1216 03:19:27.871262 139843838646016 hlog.py:32] train/00149/eval_val/123 
I1216 03:19:27.871329 139843838646016 hlog.py:18] train/00149/eval_val/123{0.00s}
I1216 03:19:27.871423 139843838646016 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1216 03:19:27.871519 139843838646016 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1216 03:19:27.871607 139843838646016 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1216 03:19:27.871681 139843838646016 hlog.py:32] train/00149/eval_val/124/corr True
I1216 03:19:27.871749 139843838646016 hlog.py:32] train/00149/eval_val/124 
I1216 03:19:27.871817 139843838646016 hlog.py:18] train/00149/eval_val/124{0.00s}
I1216 03:19:27.871905 139843838646016 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1216 03:19:27.871999 139843838646016 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1216 03:19:27.872086 139843838646016 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1216 03:19:27.872160 139843838646016 hlog.py:32] train/00149/eval_val/125/corr True
I1216 03:19:27.872229 139843838646016 hlog.py:32] train/00149/eval_val/125 
I1216 03:19:27.872297 139843838646016 hlog.py:18] train/00149/eval_val/125{0.00s}
I1216 03:19:27.872384 139843838646016 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1216 03:19:27.872473 139843838646016 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:27.872557 139843838646016 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:27.872631 139843838646016 hlog.py:32] train/00149/eval_val/126/corr True
I1216 03:19:27.872699 139843838646016 hlog.py:32] train/00149/eval_val/126 
I1216 03:19:27.872767 139843838646016 hlog.py:18] train/00149/eval_val/126{0.00s}
I1216 03:19:27.872854 139843838646016 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1216 03:19:27.872943 139843838646016 hlog.py:32] train/00149/eval_val/127/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:27.873027 139843838646016 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:27.873101 139843838646016 hlog.py:32] train/00149/eval_val/127/corr True
I1216 03:19:27.873170 139843838646016 hlog.py:32] train/00149/eval_val/127 
I1216 03:19:27.873237 139843838646016 hlog.py:18] train/00149/eval_val/127{0.00s}
I1216 03:19:28.002075 139843838646016 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1216 03:19:28.002198 139843838646016 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.002293 139843838646016 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.002373 139843838646016 hlog.py:32] train/00149/eval_val/128/corr True
I1216 03:19:28.002446 139843838646016 hlog.py:32] train/00149/eval_val/128 
I1216 03:19:28.002526 139843838646016 hlog.py:18] train/00149/eval_val/128{0.00s}
I1216 03:19:28.002618 139843838646016 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1216 03:19:28.002709 139843838646016 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.002794 139843838646016 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.002869 139843838646016 hlog.py:32] train/00149/eval_val/129/corr True
I1216 03:19:28.002938 139843838646016 hlog.py:32] train/00149/eval_val/129 
I1216 03:19:28.003006 139843838646016 hlog.py:18] train/00149/eval_val/129{0.00s}
I1216 03:19:28.003094 139843838646016 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1216 03:19:28.003183 139843838646016 hlog.py:32] train/00149/eval_val/130/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.003267 139843838646016 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.003341 139843838646016 hlog.py:32] train/00149/eval_val/130/corr True
I1216 03:19:28.003419 139843838646016 hlog.py:32] train/00149/eval_val/130 
I1216 03:19:28.003491 139843838646016 hlog.py:18] train/00149/eval_val/130{0.00s}
I1216 03:19:28.003578 139843838646016 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1216 03:19:28.003667 139843838646016 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.003751 139843838646016 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.003825 139843838646016 hlog.py:32] train/00149/eval_val/131/corr True
I1216 03:19:28.003893 139843838646016 hlog.py:32] train/00149/eval_val/131 
I1216 03:19:28.003961 139843838646016 hlog.py:18] train/00149/eval_val/131{0.00s}
I1216 03:19:28.004049 139843838646016 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1216 03:19:28.004138 139843838646016 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.004223 139843838646016 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1216 03:19:28.004297 139843838646016 hlog.py:32] train/00149/eval_val/132/corr True
I1216 03:19:28.004366 139843838646016 hlog.py:32] train/00149/eval_val/132 
I1216 03:19:28.004433 139843838646016 hlog.py:18] train/00149/eval_val/132{0.00s}
I1216 03:19:28.004518 139843838646016 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1216 03:19:28.004606 139843838646016 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _len ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1216 03:19:28.004690 139843838646016 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1216 03:19:28.004764 139843838646016 hlog.py:32] train/00149/eval_val/133/corr False
I1216 03:19:28.004832 139843838646016 hlog.py:32] train/00149/eval_val/133 
I1216 03:19:28.004899 139843838646016 hlog.py:18] train/00149/eval_val/133{0.00s}
I1216 03:19:28.004983 139843838646016 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1216 03:19:28.005084 139843838646016 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) ) )
I1216 03:19:28.005174 139843838646016 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 03:19:28.005248 139843838646016 hlog.py:32] train/00149/eval_val/134/corr False
I1216 03:19:28.005317 139843838646016 hlog.py:32] train/00149/eval_val/134 
I1216 03:19:28.005392 139843838646016 hlog.py:18] train/00149/eval_val/134{0.00s}
I1216 03:19:28.005484 139843838646016 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1216 03:19:28.005582 139843838646016 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 03:19:28.005672 139843838646016 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1216 03:19:28.005746 139843838646016 hlog.py:32] train/00149/eval_val/135/corr True
I1216 03:19:28.005814 139843838646016 hlog.py:32] train/00149/eval_val/135 
I1216 03:19:28.005882 139843838646016 hlog.py:18] train/00149/eval_val/135{0.00s}
I1216 03:19:28.005964 139843838646016 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1216 03:19:28.006056 139843838646016 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , \+ ( _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.006143 139843838646016 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.006217 139843838646016 hlog.py:32] train/00149/eval_val/136/corr False
I1216 03:19:28.006285 139843838646016 hlog.py:32] train/00149/eval_val/136 
I1216 03:19:28.006353 139843838646016 hlog.py:18] train/00149/eval_val/136{0.00s}
I1216 03:19:28.006440 139843838646016 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1216 03:19:28.006531 139843838646016 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.006617 139843838646016 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.006690 139843838646016 hlog.py:32] train/00149/eval_val/137/corr True
I1216 03:19:28.006759 139843838646016 hlog.py:32] train/00149/eval_val/137 
I1216 03:19:28.006827 139843838646016 hlog.py:18] train/00149/eval_val/137{0.00s}
I1216 03:19:28.006914 139843838646016 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1216 03:19:28.007006 139843838646016 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.007092 139843838646016 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.007166 139843838646016 hlog.py:32] train/00149/eval_val/138/corr True
I1216 03:19:28.007235 139843838646016 hlog.py:32] train/00149/eval_val/138 
I1216 03:19:28.007302 139843838646016 hlog.py:18] train/00149/eval_val/138{0.00s}
I1216 03:19:28.007390 139843838646016 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1216 03:19:28.007492 139843838646016 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.007578 139843838646016 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1216 03:19:28.007652 139843838646016 hlog.py:32] train/00149/eval_val/139/corr True
I1216 03:19:28.007720 139843838646016 hlog.py:32] train/00149/eval_val/139 
I1216 03:19:28.007788 139843838646016 hlog.py:18] train/00149/eval_val/139{0.00s}
I1216 03:19:28.007872 139843838646016 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1216 03:19:28.007967 139843838646016 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 03:19:28.008057 139843838646016 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 03:19:28.008137 139843838646016 hlog.py:32] train/00149/eval_val/140/corr False
I1216 03:19:28.008206 139843838646016 hlog.py:32] train/00149/eval_val/140 
I1216 03:19:28.008274 139843838646016 hlog.py:18] train/00149/eval_val/140{0.00s}
I1216 03:19:28.008358 139843838646016 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1216 03:19:28.008453 139843838646016 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 03:19:28.008543 139843838646016 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1216 03:19:28.008616 139843838646016 hlog.py:32] train/00149/eval_val/141/corr False
I1216 03:19:28.008685 139843838646016 hlog.py:32] train/00149/eval_val/141 
I1216 03:19:28.008752 139843838646016 hlog.py:18] train/00149/eval_val/141{0.00s}
I1216 03:19:28.008834 139843838646016 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1216 03:19:28.008925 139843838646016 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1216 03:19:28.009009 139843838646016 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1216 03:19:28.009083 139843838646016 hlog.py:32] train/00149/eval_val/142/corr False
I1216 03:19:28.009152 139843838646016 hlog.py:32] train/00149/eval_val/142 
I1216 03:19:28.009219 139843838646016 hlog.py:18] train/00149/eval_val/142{0.00s}
I1216 03:19:28.009300 139843838646016 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1216 03:19:28.009391 139843838646016 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1216 03:19:28.009476 139843838646016 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1216 03:19:28.009550 139843838646016 hlog.py:32] train/00149/eval_val/143/corr False
I1216 03:19:28.009618 139843838646016 hlog.py:32] train/00149/eval_val/143 
I1216 03:19:28.009685 139843838646016 hlog.py:18] train/00149/eval_val/143{0.00s}
I1216 03:19:28.009767 139843838646016 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1216 03:19:28.009852 139843838646016 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1216 03:19:28.009936 139843838646016 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1216 03:19:28.010010 139843838646016 hlog.py:32] train/00149/eval_val/144/corr False
I1216 03:19:28.010078 139843838646016 hlog.py:32] train/00149/eval_val/144 
I1216 03:19:28.010145 139843838646016 hlog.py:18] train/00149/eval_val/144{0.00s}
I1216 03:19:28.010227 139843838646016 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1216 03:19:28.010319 139843838646016 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , \+ ( _loc ( A , B ) , _major ( B ) , _city ( B ) ) ) )
I1216 03:19:28.010404 139843838646016 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1216 03:19:28.010477 139843838646016 hlog.py:32] train/00149/eval_val/145/corr False
I1216 03:19:28.010546 139843838646016 hlog.py:32] train/00149/eval_val/145 
I1216 03:19:28.010613 139843838646016 hlog.py:18] train/00149/eval_val/145{0.00s}
I1216 03:19:28.010699 139843838646016 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1216 03:19:28.010797 139843838646016 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _elevation ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1216 03:19:28.010891 139843838646016 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1216 03:19:28.010971 139843838646016 hlog.py:32] train/00149/eval_val/146/corr False
I1216 03:19:28.011040 139843838646016 hlog.py:32] train/00149/eval_val/146 
I1216 03:19:28.011108 139843838646016 hlog.py:18] train/00149/eval_val/146{0.00s}
I1216 03:19:28.011197 139843838646016 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1216 03:19:28.011291 139843838646016 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1216 03:19:28.011378 139843838646016 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1216 03:19:28.011463 139843838646016 hlog.py:32] train/00149/eval_val/147/corr True
I1216 03:19:28.011532 139843838646016 hlog.py:32] train/00149/eval_val/147 
I1216 03:19:28.011600 139843838646016 hlog.py:18] train/00149/eval_val/147{0.00s}
I1216 03:19:28.011675 139843838646016 hlog.py:32] train/00149/eval_val/acc 0.4662
I1216 03:19:28.183212 139843838646016 hlog.py:18] train/00149{17.22s}
I1216 03:19:28.186140 139843838646016 hlog.py:18] train{2516.64s}
