I1203 08:54:03.113083 140129923290880 hlog.py:24] # --noTEST
I1203 08:54:03.113472 140129923290880 hlog.py:24] # --seed=4
I1203 08:54:03.113559 140129923290880 hlog.py:24] # --dataset=semparse
I1203 08:54:03.113639 140129923290880 hlog.py:24] # --model_dir=model
I1203 08:54:03.113716 140129923290880 hlog.py:24] # --n_checkpoint=10
I1203 08:54:03.113792 140129923290880 hlog.py:24] # --nologtostderr
I1203 08:54:03.113867 140129923290880 hlog.py:24] # --noalsologtostderr
I1203 08:54:03.113942 140129923290880 hlog.py:24] # --log_dir=
I1203 08:54:03.114017 140129923290880 hlog.py:24] # --verbosity=0
I1203 08:54:03.114090 140129923290880 hlog.py:24] # --verbosity=0
I1203 08:54:03.114165 140129923290880 hlog.py:24] # --stderrthreshold=fatal
I1203 08:54:03.114238 140129923290880 hlog.py:24] # --showprefixforinfo
I1203 08:54:03.114311 140129923290880 hlog.py:24] # --nodedup
I1203 08:54:03.114384 140129923290880 hlog.py:24] # --nobuild_comp_table
I1203 08:54:03.114457 140129923290880 hlog.py:24] # --semparse_split=query
I1203 08:54:03.114530 140129923290880 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 08:54:03.114603 140129923290880 hlog.py:24] # --semparse_mrl=logic
I1203 08:54:03.114675 140129923290880 hlog.py:24] # --val_fold=8
I1203 08:54:03.114748 140129923290880 hlog.py:24] # --test_fold=9
I1203 08:54:03.114821 140129923290880 hlog.py:24] # --n_emb=64
I1203 08:54:03.114893 140129923290880 hlog.py:24] # --n_enc=512
I1203 08:54:03.114966 140129923290880 hlog.py:24] # --dropout=0.5
I1203 08:54:03.115039 140129923290880 hlog.py:24] # --copy_sup
I1203 08:54:03.115111 140129923290880 hlog.py:24] # --n_epochs=150
I1203 08:54:03.115184 140129923290880 hlog.py:24] # --n_epoch_batches=32
I1203 08:54:03.115256 140129923290880 hlog.py:24] # --n_batch=64
I1203 08:54:03.115329 140129923290880 hlog.py:24] # --lr=0.001
I1203 08:54:03.115401 140129923290880 hlog.py:24] # --clip=1.0
I1203 08:54:03.115652 140129923290880 hlog.py:24] # --sched_factor=0.5
I1203 08:54:03.115802 140129923290880 hlog.py:24] # --norun_with_pdb
I1203 08:54:03.115881 140129923290880 hlog.py:24] # --nopdb_post_mortem
I1203 08:54:03.115955 140129923290880 hlog.py:24] # --norun_with_profiling
I1203 08:54:03.116028 140129923290880 hlog.py:24] # --use_cprofile_for_profiling
I1203 08:54:03.116101 140129923290880 hlog.py:24] # --noonly_check_args
I1203 08:54:03.116173 140129923290880 hlog.py:24] # --augment=composed.val4.json
I1203 08:54:03.116244 140129923290880 hlog.py:24] # --aug_ratio=0.3
I1203 08:54:03.116315 140129923290880 hlog.py:24] # --noinvert
I1203 08:54:03.116386 140129923290880 hlog.py:24] # --nohelp
I1203 08:54:03.116456 140129923290880 hlog.py:24] # --nohelp
I1203 08:54:03.116527 140129923290880 hlog.py:24] # --nohelpshort
I1203 08:54:03.116598 140129923290880 hlog.py:24] # --nohelpfull
I1203 08:54:03.116669 140129923290880 hlog.py:24] # --nohelpxml
I1203 08:54:03.116739 140129923290880 hlog.py:24] # 
I1203 08:54:03.155818 140129923290880 hlog.py:32] train 543
I1203 08:54:03.155986 140129923290880 hlog.py:32] aug 1000
I1203 08:54:17.820779 140129923290880 hlog.py:32] train/00000/loss 3.2367
I1203 08:54:27.823637 140129923290880 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 08:54:29.508001 140129923290880 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 08:54:29.508690 140129923290880 hlog.py:18] train/00000{22.68s}
I1203 08:54:41.840641 140129923290880 hlog.py:32] train/00001/loss 1.1699
I1203 08:54:49.706296 140129923290880 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 08:54:51.073009 140129923290880 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 08:54:51.073463 140129923290880 hlog.py:18] train/00001{21.56s}
I1203 08:55:02.962469 140129923290880 hlog.py:32] train/00002/loss 0.7690
I1203 08:55:05.954355 140129923290880 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 08:55:06.425851 140129923290880 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 08:55:06.426383 140129923290880 hlog.py:18] train/00002{15.35s}
I1203 08:55:18.181958 140129923290880 hlog.py:32] train/00003/loss 0.5780
I1203 08:55:23.689548 140129923290880 hlog.py:32] train/00003/eval_train/acc 0.0600
I1203 08:55:24.691082 140129923290880 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 08:55:24.691610 140129923290880 hlog.py:18] train/00003{18.27s}
I1203 08:55:37.160560 140129923290880 hlog.py:32] train/00004/loss 0.4776
I1203 08:55:40.593627 140129923290880 hlog.py:32] train/00004/eval_train/acc 0.0770
I1203 08:55:41.402999 140129923290880 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 08:55:41.403506 140129923290880 hlog.py:18] train/00004{16.71s}
I1203 08:55:53.744859 140129923290880 hlog.py:32] train/00005/loss 0.4068
I1203 08:55:57.384488 140129923290880 hlog.py:32] train/00005/eval_train/acc 0.1680
I1203 08:55:58.373036 140129923290880 hlog.py:32] train/00005/eval_val/acc 0.0000
I1203 08:55:58.373525 140129923290880 hlog.py:18] train/00005{16.97s}
I1203 08:56:09.377080 140129923290880 hlog.py:32] train/00006/loss 0.3388
I1203 08:56:12.758452 140129923290880 hlog.py:32] train/00006/eval_train/acc 0.2570
I1203 08:56:13.557075 140129923290880 hlog.py:32] train/00006/eval_val/acc 0.0270
I1203 08:56:13.557532 140129923290880 hlog.py:18] train/00006{15.18s}
I1203 08:56:24.903915 140129923290880 hlog.py:32] train/00007/loss 0.2828
I1203 08:56:31.453342 140129923290880 hlog.py:32] train/00007/eval_train/acc 0.3010
I1203 08:56:32.497260 140129923290880 hlog.py:32] train/00007/eval_val/acc 0.0338
I1203 08:56:32.497733 140129923290880 hlog.py:18] train/00007{18.94s}
I1203 08:56:44.023480 140129923290880 hlog.py:32] train/00008/loss 0.2223
I1203 08:56:49.501226 140129923290880 hlog.py:32] train/00008/eval_train/acc 0.3760
I1203 08:56:50.336686 140129923290880 hlog.py:32] train/00008/eval_val/acc 0.1554
I1203 08:56:50.337179 140129923290880 hlog.py:18] train/00008{17.84s}
I1203 08:57:01.713489 140129923290880 hlog.py:32] train/00009/loss 0.1948
I1203 08:57:06.731770 140129923290880 hlog.py:32] train/00009/eval_train/acc 0.3890
I1203 08:57:07.524972 140129923290880 hlog.py:32] train/00009/eval_val/acc 0.1689
I1203 08:57:07.642928 140129923290880 hlog.py:18] train/00009{17.31s}
I1203 08:57:18.975454 140129923290880 hlog.py:32] train/00010/loss 0.2146
I1203 08:57:25.057578 140129923290880 hlog.py:32] train/00010/eval_train/acc 0.3820
I1203 08:57:25.800450 140129923290880 hlog.py:32] train/00010/eval_val/acc 0.2635
I1203 08:57:25.800942 140129923290880 hlog.py:18] train/00010{18.16s}
I1203 08:57:37.342831 140129923290880 hlog.py:32] train/00011/loss 0.1943
I1203 08:57:43.209224 140129923290880 hlog.py:32] train/00011/eval_train/acc 0.5120
I1203 08:57:43.976733 140129923290880 hlog.py:32] train/00011/eval_val/acc 0.3649
I1203 08:57:43.977211 140129923290880 hlog.py:18] train/00011{18.18s}
I1203 08:57:56.141757 140129923290880 hlog.py:32] train/00012/loss 0.1590
I1203 08:57:59.998614 140129923290880 hlog.py:32] train/00012/eval_train/acc 0.5460
I1203 08:58:00.629626 140129923290880 hlog.py:32] train/00012/eval_val/acc 0.3581
I1203 08:58:00.630099 140129923290880 hlog.py:18] train/00012{16.65s}
I1203 08:58:12.240230 140129923290880 hlog.py:32] train/00013/loss 0.1344
I1203 08:58:16.609581 140129923290880 hlog.py:32] train/00013/eval_train/acc 0.6490
I1203 08:58:17.256936 140129923290880 hlog.py:32] train/00013/eval_val/acc 0.4527
I1203 08:58:17.257429 140129923290880 hlog.py:18] train/00013{16.63s}
I1203 08:58:29.090406 140129923290880 hlog.py:32] train/00014/loss 0.1245
I1203 08:58:33.780238 140129923290880 hlog.py:32] train/00014/eval_train/acc 0.5670
I1203 08:58:34.592205 140129923290880 hlog.py:32] train/00014/eval_val/acc 0.3446
I1203 08:58:34.592701 140129923290880 hlog.py:18] train/00014{17.34s}
I1203 08:58:45.885956 140129923290880 hlog.py:32] train/00015/loss 0.1250
I1203 08:58:49.670800 140129923290880 hlog.py:32] train/00015/eval_train/acc 0.6760
I1203 08:58:50.305532 140129923290880 hlog.py:32] train/00015/eval_val/acc 0.3919
I1203 08:58:50.306022 140129923290880 hlog.py:18] train/00015{15.71s}
I1203 08:59:01.697559 140129923290880 hlog.py:32] train/00016/loss 0.1243
I1203 08:59:05.682792 140129923290880 hlog.py:32] train/00016/eval_train/acc 0.7170
I1203 08:59:06.280930 140129923290880 hlog.py:32] train/00016/eval_val/acc 0.4662
I1203 08:59:06.281440 140129923290880 hlog.py:18] train/00016{15.98s}
I1203 08:59:18.104645 140129923290880 hlog.py:32] train/00017/loss 0.1098
I1203 08:59:22.324641 140129923290880 hlog.py:32] train/00017/eval_train/acc 0.7110
I1203 08:59:22.896924 140129923290880 hlog.py:32] train/00017/eval_val/acc 0.5135
I1203 08:59:22.897444 140129923290880 hlog.py:18] train/00017{16.62s}
I1203 08:59:34.569883 140129923290880 hlog.py:32] train/00018/loss 0.0935
I1203 08:59:38.498078 140129923290880 hlog.py:32] train/00018/eval_train/acc 0.7540
I1203 08:59:39.107442 140129923290880 hlog.py:32] train/00018/eval_val/acc 0.4730
I1203 08:59:39.108107 140129923290880 hlog.py:18] train/00018{16.21s}
I1203 08:59:50.378034 140129923290880 hlog.py:32] train/00019/loss 0.0894
I1203 08:59:54.473664 140129923290880 hlog.py:32] train/00019/eval_train/acc 0.7440
I1203 08:59:55.005213 140129923290880 hlog.py:32] train/00019/eval_val/acc 0.5068
I1203 08:59:55.036428 140129923290880 hlog.py:18] train/00019{15.93s}
I1203 09:00:06.353661 140129923290880 hlog.py:32] train/00020/loss 0.0825
I1203 09:00:10.694008 140129923290880 hlog.py:32] train/00020/eval_train/acc 0.7830
I1203 09:00:11.236652 140129923290880 hlog.py:32] train/00020/eval_val/acc 0.4865
I1203 09:00:11.237244 140129923290880 hlog.py:18] train/00020{16.20s}
I1203 09:00:22.626805 140129923290880 hlog.py:32] train/00021/loss 0.0918
I1203 09:00:27.195325 140129923290880 hlog.py:32] train/00021/eval_train/acc 0.7660
I1203 09:00:27.810680 140129923290880 hlog.py:32] train/00021/eval_val/acc 0.5541
I1203 09:00:27.811159 140129923290880 hlog.py:18] train/00021{16.57s}
I1203 09:00:38.631810 140129923290880 hlog.py:32] train/00022/loss 0.0672
I1203 09:00:43.127324 140129923290880 hlog.py:32] train/00022/eval_train/acc 0.7850
I1203 09:00:43.708867 140129923290880 hlog.py:32] train/00022/eval_val/acc 0.5338
I1203 09:00:43.709350 140129923290880 hlog.py:18] train/00022{15.90s}
I1203 09:00:55.189236 140129923290880 hlog.py:32] train/00023/loss 0.0586
I1203 09:00:59.231216 140129923290880 hlog.py:32] train/00023/eval_train/acc 0.8230
I1203 09:00:59.815976 140129923290880 hlog.py:32] train/00023/eval_val/acc 0.5946
I1203 09:00:59.816664 140129923290880 hlog.py:18] train/00023{16.11s}
I1203 09:01:11.644385 140129923290880 hlog.py:32] train/00024/loss 0.0528
I1203 09:01:15.395929 140129923290880 hlog.py:32] train/00024/eval_train/acc 0.8650
I1203 09:01:15.933203 140129923290880 hlog.py:32] train/00024/eval_val/acc 0.6351
I1203 09:01:15.933787 140129923290880 hlog.py:18] train/00024{16.12s}
I1203 09:01:27.096776 140129923290880 hlog.py:32] train/00025/loss 0.0584
I1203 09:01:31.150361 140129923290880 hlog.py:32] train/00025/eval_train/acc 0.8270
I1203 09:01:31.704393 140129923290880 hlog.py:32] train/00025/eval_val/acc 0.5676
I1203 09:01:31.704865 140129923290880 hlog.py:18] train/00025{15.77s}
I1203 09:01:42.900302 140129923290880 hlog.py:32] train/00026/loss 0.0584
I1203 09:01:47.005890 140129923290880 hlog.py:32] train/00026/eval_train/acc 0.8720
I1203 09:01:47.749750 140129923290880 hlog.py:32] train/00026/eval_val/acc 0.5676
I1203 09:01:47.750428 140129923290880 hlog.py:18] train/00026{16.05s}
I1203 09:01:59.608381 140129923290880 hlog.py:32] train/00027/loss 0.0527
I1203 09:02:04.104099 140129923290880 hlog.py:32] train/00027/eval_train/acc 0.8870
I1203 09:02:04.672373 140129923290880 hlog.py:32] train/00027/eval_val/acc 0.6351
I1203 09:02:04.672847 140129923290880 hlog.py:18] train/00027{16.92s}
I1203 09:02:15.469022 140129923290880 hlog.py:32] train/00028/loss 0.0496
I1203 09:02:19.290008 140129923290880 hlog.py:32] train/00028/eval_train/acc 0.8980
I1203 09:02:19.880172 140129923290880 hlog.py:32] train/00028/eval_val/acc 0.5743
I1203 09:02:19.880649 140129923290880 hlog.py:18] train/00028{15.21s}
I1203 09:02:31.456641 140129923290880 hlog.py:32] train/00029/loss 0.0583
I1203 09:02:35.232320 140129923290880 hlog.py:32] train/00029/eval_train/acc 0.8290
I1203 09:02:35.813808 140129923290880 hlog.py:32] train/00029/eval_val/acc 0.5541
I1203 09:02:35.843676 140129923290880 hlog.py:18] train/00029{15.96s}
I1203 09:02:48.117801 140129923290880 hlog.py:32] train/00030/loss 0.0686
I1203 09:02:51.846873 140129923290880 hlog.py:32] train/00030/eval_train/acc 0.8210
I1203 09:02:52.425746 140129923290880 hlog.py:32] train/00030/eval_val/acc 0.5405
I1203 09:02:52.426163 140129923290880 hlog.py:18] train/00030{16.58s}
I1203 09:03:04.321856 140129923290880 hlog.py:32] train/00031/loss 0.0748
I1203 09:03:08.111991 140129923290880 hlog.py:32] train/00031/eval_train/acc 0.8700
I1203 09:03:08.640032 140129923290880 hlog.py:32] train/00031/eval_val/acc 0.5811
I1203 09:03:08.640499 140129923290880 hlog.py:18] train/00031{16.21s}
I1203 09:03:20.351907 140129923290880 hlog.py:32] train/00032/loss 0.0506
I1203 09:03:24.191740 140129923290880 hlog.py:32] train/00032/eval_train/acc 0.8870
I1203 09:03:24.789923 140129923290880 hlog.py:32] train/00032/eval_val/acc 0.6081
I1203 09:03:24.790387 140129923290880 hlog.py:18] train/00032{16.15s}
I1203 09:03:35.992414 140129923290880 hlog.py:32] train/00033/loss 0.0383
I1203 09:03:39.642845 140129923290880 hlog.py:32] train/00033/eval_train/acc 0.8930
I1203 09:03:40.203989 140129923290880 hlog.py:32] train/00033/eval_val/acc 0.5946
I1203 09:03:40.204384 140129923290880 hlog.py:18] train/00033{15.41s}
I1203 09:03:52.253529 140129923290880 hlog.py:32] train/00034/loss 0.0448
I1203 09:03:56.600385 140129923290880 hlog.py:32] train/00034/eval_train/acc 0.8950
I1203 09:03:57.175441 140129923290880 hlog.py:32] train/00034/eval_val/acc 0.5946
I1203 09:03:57.175921 140129923290880 hlog.py:18] train/00034{16.97s}
I1203 09:04:08.139878 140129923290880 hlog.py:32] train/00035/loss 0.0497
I1203 09:04:11.890627 140129923290880 hlog.py:32] train/00035/eval_train/acc 0.8900
I1203 09:04:12.470314 140129923290880 hlog.py:32] train/00035/eval_val/acc 0.6284
I1203 09:04:12.470855 140129923290880 hlog.py:18] train/00035{15.29s}
I1203 09:04:24.824419 140129923290880 hlog.py:32] train/00036/loss 0.0369
I1203 09:04:28.933110 140129923290880 hlog.py:32] train/00036/eval_train/acc 0.9530
I1203 09:04:29.525493 140129923290880 hlog.py:32] train/00036/eval_val/acc 0.6149
I1203 09:04:29.525982 140129923290880 hlog.py:18] train/00036{17.06s}
I1203 09:04:40.637189 140129923290880 hlog.py:32] train/00037/loss 0.0275
I1203 09:04:44.545524 140129923290880 hlog.py:32] train/00037/eval_train/acc 0.9440
I1203 09:04:45.097868 140129923290880 hlog.py:32] train/00037/eval_val/acc 0.6081
I1203 09:04:45.098349 140129923290880 hlog.py:18] train/00037{15.57s}
I1203 09:04:57.227021 140129923290880 hlog.py:32] train/00038/loss 0.0236
I1203 09:05:01.129221 140129923290880 hlog.py:32] train/00038/eval_train/acc 0.9630
I1203 09:05:01.705398 140129923290880 hlog.py:32] train/00038/eval_val/acc 0.6284
I1203 09:05:01.706095 140129923290880 hlog.py:18] train/00038{16.61s}
I1203 09:05:13.404775 140129923290880 hlog.py:32] train/00039/loss 0.0277
I1203 09:05:17.142598 140129923290880 hlog.py:32] train/00039/eval_train/acc 0.9660
I1203 09:05:17.663136 140129923290880 hlog.py:32] train/00039/eval_val/acc 0.6014
I1203 09:05:17.692239 140129923290880 hlog.py:18] train/00039{15.99s}
I1203 09:05:29.006380 140129923290880 hlog.py:32] train/00040/loss 0.0231
I1203 09:05:32.820374 140129923290880 hlog.py:32] train/00040/eval_train/acc 0.9720
I1203 09:05:33.406577 140129923290880 hlog.py:32] train/00040/eval_val/acc 0.6351
I1203 09:05:33.407252 140129923290880 hlog.py:18] train/00040{15.71s}
I1203 09:05:44.791638 140129923290880 hlog.py:32] train/00041/loss 0.0230
I1203 09:05:48.493666 140129923290880 hlog.py:32] train/00041/eval_train/acc 0.9710
I1203 09:05:49.155925 140129923290880 hlog.py:32] train/00041/eval_val/acc 0.6149
I1203 09:05:49.156612 140129923290880 hlog.py:18] train/00041{15.75s}
I1203 09:06:00.578614 140129923290880 hlog.py:32] train/00042/loss 0.0192
I1203 09:06:04.361643 140129923290880 hlog.py:32] train/00042/eval_train/acc 0.9830
I1203 09:06:04.934122 140129923290880 hlog.py:32] train/00042/eval_val/acc 0.6419
I1203 09:06:04.934863 140129923290880 hlog.py:18] train/00042{15.78s}
I1203 09:06:16.930284 140129923290880 hlog.py:32] train/00043/loss 0.0199
I1203 09:06:20.599373 140129923290880 hlog.py:32] train/00043/eval_train/acc 0.9790
I1203 09:06:21.157769 140129923290880 hlog.py:32] train/00043/eval_val/acc 0.6622
I1203 09:06:21.158229 140129923290880 hlog.py:18] train/00043{16.22s}
I1203 09:06:33.346575 140129923290880 hlog.py:32] train/00044/loss 0.0217
I1203 09:06:37.183803 140129923290880 hlog.py:32] train/00044/eval_train/acc 0.9850
I1203 09:06:37.715540 140129923290880 hlog.py:32] train/00044/eval_val/acc 0.6622
I1203 09:06:37.716134 140129923290880 hlog.py:18] train/00044{16.56s}
I1203 09:06:49.020197 140129923290880 hlog.py:32] train/00045/loss 0.0189
I1203 09:06:53.060950 140129923290880 hlog.py:32] train/00045/eval_train/acc 0.9750
I1203 09:06:53.627713 140129923290880 hlog.py:32] train/00045/eval_val/acc 0.6554
I1203 09:06:53.628405 140129923290880 hlog.py:18] train/00045{15.91s}
I1203 09:07:04.788556 140129923290880 hlog.py:32] train/00046/loss 0.0194
I1203 09:07:09.214525 140129923290880 hlog.py:32] train/00046/eval_train/acc 0.9770
I1203 09:07:09.751830 140129923290880 hlog.py:32] train/00046/eval_val/acc 0.6419
I1203 09:07:09.752509 140129923290880 hlog.py:18] train/00046{16.12s}
I1203 09:07:20.630675 140129923290880 hlog.py:32] train/00047/loss 0.0152
I1203 09:07:24.341480 140129923290880 hlog.py:32] train/00047/eval_train/acc 0.9930
I1203 09:07:24.906357 140129923290880 hlog.py:32] train/00047/eval_val/acc 0.6554
I1203 09:07:24.906798 140129923290880 hlog.py:18] train/00047{15.15s}
I1203 09:07:36.481118 140129923290880 hlog.py:32] train/00048/loss 0.0147
I1203 09:07:40.971849 140129923290880 hlog.py:32] train/00048/eval_train/acc 0.9860
I1203 09:07:41.561603 140129923290880 hlog.py:32] train/00048/eval_val/acc 0.6757
I1203 09:07:41.562142 140129923290880 hlog.py:18] train/00048{16.66s}
I1203 09:07:53.293449 140129923290880 hlog.py:32] train/00049/loss 0.0122
I1203 09:07:57.090066 140129923290880 hlog.py:32] train/00049/eval_train/acc 0.9960
I1203 09:07:57.652048 140129923290880 hlog.py:32] train/00049/eval_val/acc 0.6622
I1203 09:07:57.682799 140129923290880 hlog.py:18] train/00049{16.12s}
I1203 09:08:09.742915 140129923290880 hlog.py:32] train/00050/loss 0.0139
I1203 09:08:13.406424 140129923290880 hlog.py:32] train/00050/eval_train/acc 0.9860
I1203 09:08:13.982915 140129923290880 hlog.py:32] train/00050/eval_val/acc 0.6351
I1203 09:08:13.983514 140129923290880 hlog.py:18] train/00050{16.30s}
I1203 09:08:25.345701 140129923290880 hlog.py:32] train/00051/loss 0.0116
I1203 09:08:30.398017 140129923290880 hlog.py:32] train/00051/eval_train/acc 0.9810
I1203 09:08:30.964335 140129923290880 hlog.py:32] train/00051/eval_val/acc 0.6959
I1203 09:08:30.964948 140129923290880 hlog.py:18] train/00051{16.98s}
I1203 09:08:42.420662 140129923290880 hlog.py:32] train/00052/loss 0.0118
I1203 09:08:46.450723 140129923290880 hlog.py:32] train/00052/eval_train/acc 0.9920
I1203 09:08:47.061613 140129923290880 hlog.py:32] train/00052/eval_val/acc 0.6622
I1203 09:08:47.062299 140129923290880 hlog.py:18] train/00052{16.10s}
I1203 09:08:57.832894 140129923290880 hlog.py:32] train/00053/loss 0.0112
I1203 09:09:01.580705 140129923290880 hlog.py:32] train/00053/eval_train/acc 0.9890
I1203 09:09:02.170795 140129923290880 hlog.py:32] train/00053/eval_val/acc 0.6419
I1203 09:09:02.171301 140129923290880 hlog.py:18] train/00053{15.11s}
I1203 09:09:14.042690 140129923290880 hlog.py:32] train/00054/loss 0.0135
I1203 09:09:17.952307 140129923290880 hlog.py:32] train/00054/eval_train/acc 0.9960
I1203 09:09:18.520021 140129923290880 hlog.py:32] train/00054/eval_val/acc 0.6554
I1203 09:09:18.520510 140129923290880 hlog.py:18] train/00054{16.35s}
I1203 09:09:30.047307 140129923290880 hlog.py:32] train/00055/loss 0.0121
I1203 09:09:34.305289 140129923290880 hlog.py:32] train/00055/eval_train/acc 0.9870
I1203 09:09:34.871100 140129923290880 hlog.py:32] train/00055/eval_val/acc 0.6622
I1203 09:09:34.871590 140129923290880 hlog.py:18] train/00055{16.35s}
I1203 09:09:46.042273 140129923290880 hlog.py:32] train/00056/loss 0.0107
I1203 09:09:49.866030 140129923290880 hlog.py:32] train/00056/eval_train/acc 0.9940
I1203 09:09:50.447805 140129923290880 hlog.py:32] train/00056/eval_val/acc 0.6486
I1203 09:09:50.448299 140129923290880 hlog.py:18] train/00056{15.58s}
I1203 09:10:02.612812 140129923290880 hlog.py:32] train/00057/loss 0.0133
I1203 09:10:06.488556 140129923290880 hlog.py:32] train/00057/eval_train/acc 0.9910
I1203 09:10:07.076741 140129923290880 hlog.py:32] train/00057/eval_val/acc 0.6284
I1203 09:10:07.077214 140129923290880 hlog.py:18] train/00057{16.63s}
I1203 09:10:18.203459 140129923290880 hlog.py:32] train/00058/loss 0.0099
I1203 09:10:21.982446 140129923290880 hlog.py:32] train/00058/eval_train/acc 0.9910
I1203 09:10:22.594134 140129923290880 hlog.py:32] train/00058/eval_val/acc 0.6284
I1203 09:10:22.594806 140129923290880 hlog.py:18] train/00058{15.52s}
I1203 09:10:33.825942 140129923290880 hlog.py:32] train/00059/loss 0.0107
I1203 09:10:37.638887 140129923290880 hlog.py:32] train/00059/eval_train/acc 0.9820
I1203 09:10:38.252140 140129923290880 hlog.py:32] train/00059/eval_val/acc 0.6689
I1203 09:10:38.285151 140129923290880 hlog.py:18] train/00059{15.69s}
I1203 09:10:49.644675 140129923290880 hlog.py:32] train/00060/loss 0.0119
I1203 09:10:53.736068 140129923290880 hlog.py:32] train/00060/eval_train/acc 0.9880
I1203 09:10:54.329710 140129923290880 hlog.py:32] train/00060/eval_val/acc 0.6486
I1203 09:10:54.330133 140129923290880 hlog.py:18] train/00060{16.04s}
I1203 09:11:06.414008 140129923290880 hlog.py:32] train/00061/loss 0.0102
I1203 09:11:10.572553 140129923290880 hlog.py:32] train/00061/eval_train/acc 0.9960
I1203 09:11:11.150720 140129923290880 hlog.py:32] train/00061/eval_val/acc 0.6824
I1203 09:11:11.151195 140129923290880 hlog.py:18] train/00061{16.82s}
I1203 09:11:23.233624 140129923290880 hlog.py:32] train/00062/loss 0.0108
I1203 09:11:27.338477 140129923290880 hlog.py:32] train/00062/eval_train/acc 0.9810
I1203 09:11:27.933081 140129923290880 hlog.py:32] train/00062/eval_val/acc 0.6622
I1203 09:11:27.933627 140129923290880 hlog.py:18] train/00062{16.78s}
I1203 09:11:39.607476 140129923290880 hlog.py:32] train/00063/loss 0.0100
I1203 09:11:43.669148 140129923290880 hlog.py:32] train/00063/eval_train/acc 0.9890
I1203 09:11:44.266833 140129923290880 hlog.py:32] train/00063/eval_val/acc 0.6824
I1203 09:11:44.267311 140129923290880 hlog.py:18] train/00063{16.33s}
I1203 09:11:55.969438 140129923290880 hlog.py:32] train/00064/loss 0.0081
I1203 09:11:59.924236 140129923290880 hlog.py:32] train/00064/eval_train/acc 0.9970
I1203 09:12:00.515068 140129923290880 hlog.py:32] train/00064/eval_val/acc 0.6554
I1203 09:12:00.515573 140129923290880 hlog.py:18] train/00064{16.25s}
I1203 09:12:12.448390 140129923290880 hlog.py:32] train/00065/loss 0.0076
I1203 09:12:16.265758 140129923290880 hlog.py:32] train/00065/eval_train/acc 0.9920
I1203 09:12:16.876947 140129923290880 hlog.py:32] train/00065/eval_val/acc 0.6419
I1203 09:12:16.877632 140129923290880 hlog.py:18] train/00065{16.36s}
I1203 09:12:29.127202 140129923290880 hlog.py:32] train/00066/loss 0.0076
I1203 09:12:33.117932 140129923290880 hlog.py:32] train/00066/eval_train/acc 0.9960
I1203 09:12:33.729298 140129923290880 hlog.py:32] train/00066/eval_val/acc 0.6622
I1203 09:12:33.729810 140129923290880 hlog.py:18] train/00066{16.85s}
I1203 09:12:45.557612 140129923290880 hlog.py:32] train/00067/loss 0.0070
I1203 09:12:49.943489 140129923290880 hlog.py:32] train/00067/eval_train/acc 0.9840
I1203 09:12:50.554135 140129923290880 hlog.py:32] train/00067/eval_val/acc 0.6351
I1203 09:12:50.554622 140129923290880 hlog.py:18] train/00067{16.82s}
I1203 09:13:01.654087 140129923290880 hlog.py:32] train/00068/loss 0.0063
I1203 09:13:05.593556 140129923290880 hlog.py:32] train/00068/eval_train/acc 0.9960
I1203 09:13:06.129013 140129923290880 hlog.py:32] train/00068/eval_val/acc 0.6689
I1203 09:13:06.129486 140129923290880 hlog.py:18] train/00068{15.57s}
I1203 09:13:18.121546 140129923290880 hlog.py:32] train/00069/loss 0.0072
I1203 09:13:21.898307 140129923290880 hlog.py:32] train/00069/eval_train/acc 0.9990
I1203 09:13:22.447683 140129923290880 hlog.py:32] train/00069/eval_val/acc 0.6622
I1203 09:13:22.477132 140129923290880 hlog.py:18] train/00069{16.35s}
I1203 09:13:34.419146 140129923290880 hlog.py:32] train/00070/loss 0.0071
I1203 09:13:38.418521 140129923290880 hlog.py:32] train/00070/eval_train/acc 0.9990
I1203 09:13:39.006781 140129923290880 hlog.py:32] train/00070/eval_val/acc 0.6554
I1203 09:13:39.007340 140129923290880 hlog.py:18] train/00070{16.53s}
I1203 09:13:50.987000 140129923290880 hlog.py:32] train/00071/loss 0.0065
I1203 09:13:54.708860 140129923290880 hlog.py:32] train/00071/eval_train/acc 0.9960
I1203 09:13:55.318669 140129923290880 hlog.py:32] train/00071/eval_val/acc 0.6689
I1203 09:13:55.319237 140129923290880 hlog.py:18] train/00071{16.31s}
I1203 09:14:07.190289 140129923290880 hlog.py:32] train/00072/loss 0.0068
I1203 09:14:11.217763 140129923290880 hlog.py:32] train/00072/eval_train/acc 0.9950
I1203 09:14:11.818329 140129923290880 hlog.py:32] train/00072/eval_val/acc 0.6622
I1203 09:14:11.818841 140129923290880 hlog.py:18] train/00072{16.50s}
I1203 09:14:23.087351 140129923290880 hlog.py:32] train/00073/loss 0.0059
I1203 09:14:27.153893 140129923290880 hlog.py:32] train/00073/eval_train/acc 0.9990
I1203 09:14:27.822706 140129923290880 hlog.py:32] train/00073/eval_val/acc 0.6689
I1203 09:14:27.823369 140129923290880 hlog.py:18] train/00073{16.00s}
I1203 09:14:40.043197 140129923290880 hlog.py:32] train/00074/loss 0.0063
I1203 09:14:43.909759 140129923290880 hlog.py:32] train/00074/eval_train/acc 0.9960
I1203 09:14:44.501278 140129923290880 hlog.py:32] train/00074/eval_val/acc 0.6757
I1203 09:14:44.501768 140129923290880 hlog.py:18] train/00074{16.68s}
I1203 09:14:56.521944 140129923290880 hlog.py:32] train/00075/loss 0.0062
I1203 09:15:00.236860 140129923290880 hlog.py:32] train/00075/eval_train/acc 0.9970
I1203 09:15:00.837589 140129923290880 hlog.py:32] train/00075/eval_val/acc 0.6824
I1203 09:15:00.838143 140129923290880 hlog.py:18] train/00075{16.34s}
I1203 09:15:11.743042 140129923290880 hlog.py:32] train/00076/loss 0.0048
I1203 09:15:15.825216 140129923290880 hlog.py:32] train/00076/eval_train/acc 0.9980
I1203 09:15:16.417446 140129923290880 hlog.py:32] train/00076/eval_val/acc 0.6689
I1203 09:15:16.417918 140129923290880 hlog.py:18] train/00076{15.58s}
I1203 09:15:27.462614 140129923290880 hlog.py:32] train/00077/loss 0.0050
I1203 09:15:31.595694 140129923290880 hlog.py:32] train/00077/eval_train/acc 0.9980
I1203 09:15:32.203491 140129923290880 hlog.py:32] train/00077/eval_val/acc 0.6824
I1203 09:15:32.204172 140129923290880 hlog.py:18] train/00077{15.79s}
I1203 09:15:43.667840 140129923290880 hlog.py:32] train/00078/loss 0.0053
I1203 09:15:47.565416 140129923290880 hlog.py:32] train/00078/eval_train/acc 0.9970
I1203 09:15:48.186244 140129923290880 hlog.py:32] train/00078/eval_val/acc 0.6824
I1203 09:15:48.186741 140129923290880 hlog.py:18] train/00078{15.98s}
I1203 09:16:00.398214 140129923290880 hlog.py:32] train/00079/loss 0.0057
I1203 09:16:04.510773 140129923290880 hlog.py:32] train/00079/eval_train/acc 0.9980
I1203 09:16:05.082090 140129923290880 hlog.py:32] train/00079/eval_val/acc 0.6824
I1203 09:16:05.114076 140129923290880 hlog.py:18] train/00079{16.93s}
I1203 09:16:17.382004 140129923290880 hlog.py:32] train/00080/loss 0.0055
I1203 09:16:21.103634 140129923290880 hlog.py:32] train/00080/eval_train/acc 1.0000
I1203 09:16:21.665561 140129923290880 hlog.py:32] train/00080/eval_val/acc 0.6757
I1203 09:16:21.666026 140129923290880 hlog.py:18] train/00080{16.55s}
I1203 09:16:36.371126 140129923290880 hlog.py:32] train/00081/loss 0.0065
I1203 09:16:40.602086 140129923290880 hlog.py:32] train/00081/eval_train/acc 1.0000
I1203 09:16:41.192250 140129923290880 hlog.py:32] train/00081/eval_val/acc 0.6689
I1203 09:16:41.192717 140129923290880 hlog.py:18] train/00081{19.53s}
I1203 09:16:52.872040 140129923290880 hlog.py:32] train/00082/loss 0.0053
I1203 09:16:56.634494 140129923290880 hlog.py:32] train/00082/eval_train/acc 0.9950
I1203 09:16:57.213109 140129923290880 hlog.py:32] train/00082/eval_val/acc 0.6757
I1203 09:16:57.213641 140129923290880 hlog.py:18] train/00082{16.02s}
I1203 09:17:09.198499 140129923290880 hlog.py:32] train/00083/loss 0.0051
I1203 09:17:13.477154 140129923290880 hlog.py:32] train/00083/eval_train/acc 0.9970
I1203 09:17:14.064124 140129923290880 hlog.py:32] train/00083/eval_val/acc 0.6554
I1203 09:17:14.064603 140129923290880 hlog.py:18] train/00083{16.85s}
I1203 09:17:26.034174 140129923290880 hlog.py:32] train/00084/loss 0.0045
I1203 09:17:30.330281 140129923290880 hlog.py:32] train/00084/eval_train/acc 0.9960
I1203 09:17:30.995346 140129923290880 hlog.py:32] train/00084/eval_val/acc 0.6554
I1203 09:17:30.995953 140129923290880 hlog.py:18] train/00084{16.93s}
I1203 09:17:43.069783 140129923290880 hlog.py:32] train/00085/loss 0.0060
I1203 09:17:46.992424 140129923290880 hlog.py:32] train/00085/eval_train/acc 0.9960
I1203 09:17:47.566195 140129923290880 hlog.py:32] train/00085/eval_val/acc 0.6622
I1203 09:17:47.566672 140129923290880 hlog.py:18] train/00085{16.57s}
I1203 09:17:59.645235 140129923290880 hlog.py:32] train/00086/loss 0.0062
I1203 09:18:03.459461 140129923290880 hlog.py:32] train/00086/eval_train/acc 0.9970
I1203 09:18:04.029088 140129923290880 hlog.py:32] train/00086/eval_val/acc 0.6757
I1203 09:18:04.029566 140129923290880 hlog.py:18] train/00086{16.46s}
I1203 09:18:15.819260 140129923290880 hlog.py:32] train/00087/loss 0.0043
I1203 09:18:19.593559 140129923290880 hlog.py:32] train/00087/eval_train/acc 0.9990
I1203 09:18:20.178525 140129923290880 hlog.py:32] train/00087/eval_val/acc 0.6622
I1203 09:18:20.178990 140129923290880 hlog.py:18] train/00087{16.15s}
I1203 09:18:31.643259 140129923290880 hlog.py:32] train/00088/loss 0.0048
I1203 09:18:35.272519 140129923290880 hlog.py:32] train/00088/eval_train/acc 0.9950
I1203 09:18:35.869817 140129923290880 hlog.py:32] train/00088/eval_val/acc 0.6689
I1203 09:18:35.870327 140129923290880 hlog.py:18] train/00088{15.69s}
I1203 09:18:47.484999 140129923290880 hlog.py:32] train/00089/loss 0.0042
I1203 09:18:51.455093 140129923290880 hlog.py:32] train/00089/eval_train/acc 0.9990
I1203 09:18:52.118556 140129923290880 hlog.py:32] train/00089/eval_val/acc 0.6689
I1203 09:18:52.282114 140129923290880 hlog.py:18] train/00089{16.41s}
I1203 09:19:03.969563 140129923290880 hlog.py:32] train/00090/loss 0.0057
I1203 09:19:08.132125 140129923290880 hlog.py:32] train/00090/eval_train/acc 0.9990
I1203 09:19:08.723836 140129923290880 hlog.py:32] train/00090/eval_val/acc 0.6622
I1203 09:19:08.724409 140129923290880 hlog.py:18] train/00090{16.44s}
I1203 09:19:19.641314 140129923290880 hlog.py:32] train/00091/loss 0.0045
I1203 09:19:23.673980 140129923290880 hlog.py:32] train/00091/eval_train/acc 0.9990
I1203 09:19:24.276832 140129923290880 hlog.py:32] train/00091/eval_val/acc 0.6622
I1203 09:19:24.277345 140129923290880 hlog.py:18] train/00091{15.55s}
I1203 09:19:35.691986 140129923290880 hlog.py:32] train/00092/loss 0.0042
I1203 09:19:40.002145 140129923290880 hlog.py:32] train/00092/eval_train/acc 0.9980
I1203 09:19:40.611327 140129923290880 hlog.py:32] train/00092/eval_val/acc 0.6689
I1203 09:19:40.611892 140129923290880 hlog.py:18] train/00092{16.33s}
I1203 09:19:52.517615 140129923290880 hlog.py:32] train/00093/loss 0.0044
I1203 09:19:56.279938 140129923290880 hlog.py:32] train/00093/eval_train/acc 0.9970
I1203 09:19:56.877016 140129923290880 hlog.py:32] train/00093/eval_val/acc 0.6689
I1203 09:19:56.877532 140129923290880 hlog.py:18] train/00093{16.27s}
I1203 09:20:09.161363 140129923290880 hlog.py:32] train/00094/loss 0.0051
I1203 09:20:13.109884 140129923290880 hlog.py:32] train/00094/eval_train/acc 0.9990
I1203 09:20:13.730855 140129923290880 hlog.py:32] train/00094/eval_val/acc 0.6824
I1203 09:20:13.731301 140129923290880 hlog.py:18] train/00094{16.85s}
I1203 09:20:25.204743 140129923290880 hlog.py:32] train/00095/loss 0.0044
I1203 09:20:28.915918 140129923290880 hlog.py:32] train/00095/eval_train/acc 0.9980
I1203 09:20:29.520297 140129923290880 hlog.py:32] train/00095/eval_val/acc 0.6757
I1203 09:20:29.520830 140129923290880 hlog.py:18] train/00095{15.79s}
I1203 09:20:41.203342 140129923290880 hlog.py:32] train/00096/loss 0.0044
I1203 09:20:44.990592 140129923290880 hlog.py:32] train/00096/eval_train/acc 1.0000
I1203 09:20:45.581441 140129923290880 hlog.py:32] train/00096/eval_val/acc 0.6757
I1203 09:20:45.581919 140129923290880 hlog.py:18] train/00096{16.06s}
I1203 09:20:56.329229 140129923290880 hlog.py:32] train/00097/loss 0.0040
I1203 09:21:00.363808 140129923290880 hlog.py:32] train/00097/eval_train/acc 0.9950
I1203 09:21:00.972618 140129923290880 hlog.py:32] train/00097/eval_val/acc 0.6689
I1203 09:21:00.973136 140129923290880 hlog.py:18] train/00097{15.39s}
I1203 09:21:12.318808 140129923290880 hlog.py:32] train/00098/loss 0.0044
I1203 09:21:15.884695 140129923290880 hlog.py:32] train/00098/eval_train/acc 1.0000
I1203 09:21:16.492053 140129923290880 hlog.py:32] train/00098/eval_val/acc 0.6689
I1203 09:21:16.492522 140129923290880 hlog.py:18] train/00098{15.52s}
I1203 09:21:28.610410 140129923290880 hlog.py:32] train/00099/loss 0.0042
I1203 09:21:32.423553 140129923290880 hlog.py:32] train/00099/eval_train/acc 0.9990
I1203 09:21:33.013406 140129923290880 hlog.py:32] train/00099/eval_val/acc 0.6689
I1203 09:21:33.044757 140129923290880 hlog.py:18] train/00099{16.55s}
I1203 09:21:44.369816 140129923290880 hlog.py:32] train/00100/loss 0.0043
I1203 09:21:48.315358 140129923290880 hlog.py:32] train/00100/eval_train/acc 0.9980
I1203 09:21:48.902747 140129923290880 hlog.py:32] train/00100/eval_val/acc 0.6757
I1203 09:21:48.903247 140129923290880 hlog.py:18] train/00100{15.86s}
I1203 09:22:00.746404 140129923290880 hlog.py:32] train/00101/loss 0.0045
I1203 09:22:04.498922 140129923290880 hlog.py:32] train/00101/eval_train/acc 0.9990
I1203 09:22:05.140438 140129923290880 hlog.py:32] train/00101/eval_val/acc 0.6757
I1203 09:22:05.140939 140129923290880 hlog.py:18] train/00101{16.24s}
I1203 09:22:16.322111 140129923290880 hlog.py:32] train/00102/loss 0.0042
I1203 09:22:20.014071 140129923290880 hlog.py:32] train/00102/eval_train/acc 0.9970
I1203 09:22:20.601719 140129923290880 hlog.py:32] train/00102/eval_val/acc 0.6757
I1203 09:22:20.602143 140129923290880 hlog.py:18] train/00102{15.46s}
I1203 09:22:33.725367 140129923290880 hlog.py:32] train/00103/loss 0.0055
I1203 09:22:37.651768 140129923290880 hlog.py:32] train/00103/eval_train/acc 0.9980
I1203 09:22:38.232643 140129923290880 hlog.py:32] train/00103/eval_val/acc 0.6757
I1203 09:22:38.233142 140129923290880 hlog.py:18] train/00103{17.63s}
I1203 09:22:49.682243 140129923290880 hlog.py:32] train/00104/loss 0.0041
I1203 09:22:53.353892 140129923290880 hlog.py:32] train/00104/eval_train/acc 1.0000
I1203 09:22:53.956701 140129923290880 hlog.py:32] train/00104/eval_val/acc 0.6757
I1203 09:22:53.957169 140129923290880 hlog.py:18] train/00104{15.72s}
I1203 09:23:05.843251 140129923290880 hlog.py:32] train/00105/loss 0.0043
I1203 09:23:09.484293 140129923290880 hlog.py:32] train/00105/eval_train/acc 1.0000
I1203 09:23:10.076913 140129923290880 hlog.py:32] train/00105/eval_val/acc 0.6757
I1203 09:23:10.077395 140129923290880 hlog.py:18] train/00105{16.12s}
I1203 09:23:20.607858 140129923290880 hlog.py:32] train/00106/loss 0.0034
I1203 09:23:24.415025 140129923290880 hlog.py:32] train/00106/eval_train/acc 0.9990
I1203 09:23:25.006374 140129923290880 hlog.py:32] train/00106/eval_val/acc 0.6689
I1203 09:23:25.006884 140129923290880 hlog.py:18] train/00106{14.93s}
I1203 09:23:36.997226 140129923290880 hlog.py:32] train/00107/loss 0.0045
I1203 09:23:40.742420 140129923290880 hlog.py:32] train/00107/eval_train/acc 0.9950
I1203 09:23:41.336994 140129923290880 hlog.py:32] train/00107/eval_val/acc 0.6689
I1203 09:23:41.337495 140129923290880 hlog.py:18] train/00107{16.33s}
I1203 09:23:52.828660 140129923290880 hlog.py:32] train/00108/loss 0.0036
I1203 09:23:56.640428 140129923290880 hlog.py:32] train/00108/eval_train/acc 0.9950
I1203 09:23:57.246088 140129923290880 hlog.py:32] train/00108/eval_val/acc 0.6689
I1203 09:23:57.246557 140129923290880 hlog.py:18] train/00108{15.91s}
I1203 09:24:08.288619 140129923290880 hlog.py:32] train/00109/loss 0.0037
I1203 09:24:12.313078 140129923290880 hlog.py:32] train/00109/eval_train/acc 0.9950
I1203 09:24:12.901626 140129923290880 hlog.py:32] train/00109/eval_val/acc 0.6757
I1203 09:24:12.932772 140129923290880 hlog.py:18] train/00109{15.69s}
I1203 09:24:24.820201 140129923290880 hlog.py:32] train/00110/loss 0.0042
I1203 09:24:28.673839 140129923290880 hlog.py:32] train/00110/eval_train/acc 1.0000
I1203 09:24:29.269229 140129923290880 hlog.py:32] train/00110/eval_val/acc 0.6757
I1203 09:24:29.269728 140129923290880 hlog.py:18] train/00110{16.34s}
I1203 09:24:41.321339 140129923290880 hlog.py:32] train/00111/loss 0.0039
I1203 09:24:45.315954 140129923290880 hlog.py:32] train/00111/eval_train/acc 1.0000
I1203 09:24:45.921591 140129923290880 hlog.py:32] train/00111/eval_val/acc 0.6757
I1203 09:24:45.922090 140129923290880 hlog.py:18] train/00111{16.65s}
I1203 09:24:59.210602 140129923290880 hlog.py:32] train/00112/loss 0.0045
I1203 09:25:03.187049 140129923290880 hlog.py:32] train/00112/eval_train/acc 0.9960
I1203 09:25:03.792480 140129923290880 hlog.py:32] train/00112/eval_val/acc 0.6689
I1203 09:25:03.792986 140129923290880 hlog.py:18] train/00112{17.87s}
I1203 09:25:15.412379 140129923290880 hlog.py:32] train/00113/loss 0.0038
I1203 09:25:19.225699 140129923290880 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 09:25:19.834236 140129923290880 hlog.py:32] train/00113/eval_val/acc 0.6757
I1203 09:25:19.834745 140129923290880 hlog.py:18] train/00113{16.04s}
I1203 09:25:32.468713 140129923290880 hlog.py:32] train/00114/loss 0.0040
I1203 09:25:36.226095 140129923290880 hlog.py:32] train/00114/eval_train/acc 1.0000
I1203 09:25:36.816809 140129923290880 hlog.py:32] train/00114/eval_val/acc 0.6757
I1203 09:25:36.817260 140129923290880 hlog.py:18] train/00114{16.98s}
I1203 09:25:48.662796 140129923290880 hlog.py:32] train/00115/loss 0.0039
I1203 09:25:52.371458 140129923290880 hlog.py:32] train/00115/eval_train/acc 0.9960
I1203 09:25:52.956948 140129923290880 hlog.py:32] train/00115/eval_val/acc 0.6689
I1203 09:25:52.957422 140129923290880 hlog.py:18] train/00115{16.14s}
I1203 09:26:04.422496 140129923290880 hlog.py:32] train/00116/loss 0.0034
I1203 09:26:08.188758 140129923290880 hlog.py:32] train/00116/eval_train/acc 0.9990
I1203 09:26:08.805561 140129923290880 hlog.py:32] train/00116/eval_val/acc 0.6689
I1203 09:26:08.806054 140129923290880 hlog.py:18] train/00116{15.85s}
I1203 09:26:21.005530 140129923290880 hlog.py:32] train/00117/loss 0.0037
I1203 09:26:25.156294 140129923290880 hlog.py:32] train/00117/eval_train/acc 0.9990
I1203 09:26:25.745492 140129923290880 hlog.py:32] train/00117/eval_val/acc 0.6757
I1203 09:26:25.746054 140129923290880 hlog.py:18] train/00117{16.94s}
I1203 09:26:37.464547 140129923290880 hlog.py:32] train/00118/loss 0.0041
I1203 09:26:41.259248 140129923290880 hlog.py:32] train/00118/eval_train/acc 1.0000
I1203 09:26:41.876349 140129923290880 hlog.py:32] train/00118/eval_val/acc 0.6757
I1203 09:26:41.876800 140129923290880 hlog.py:18] train/00118{16.13s}
I1203 09:26:54.730718 140129923290880 hlog.py:32] train/00119/loss 0.0043
I1203 09:26:58.684190 140129923290880 hlog.py:32] train/00119/eval_train/acc 0.9980
I1203 09:26:59.272528 140129923290880 hlog.py:32] train/00119/eval_val/acc 0.6757
I1203 09:26:59.303383 140129923290880 hlog.py:18] train/00119{17.43s}
I1203 09:27:11.207261 140129923290880 hlog.py:32] train/00120/loss 0.0034
I1203 09:27:15.009889 140129923290880 hlog.py:32] train/00120/eval_train/acc 0.9990
I1203 09:27:15.621599 140129923290880 hlog.py:32] train/00120/eval_val/acc 0.6757
I1203 09:27:15.622131 140129923290880 hlog.py:18] train/00120{16.32s}
I1203 09:27:26.921397 140129923290880 hlog.py:32] train/00121/loss 0.0038
I1203 09:27:31.093163 140129923290880 hlog.py:32] train/00121/eval_train/acc 0.9970
I1203 09:27:31.695920 140129923290880 hlog.py:32] train/00121/eval_val/acc 0.6757
I1203 09:27:31.696411 140129923290880 hlog.py:18] train/00121{16.07s}
I1203 09:27:43.426054 140129923290880 hlog.py:32] train/00122/loss 0.0044
I1203 09:27:47.918997 140129923290880 hlog.py:32] train/00122/eval_train/acc 0.9990
I1203 09:27:48.521119 140129923290880 hlog.py:32] train/00122/eval_val/acc 0.6757
I1203 09:27:48.521644 140129923290880 hlog.py:18] train/00122{16.83s}
I1203 09:28:00.640443 140129923290880 hlog.py:32] train/00123/loss 0.0039
I1203 09:28:04.706864 140129923290880 hlog.py:32] train/00123/eval_train/acc 0.9990
I1203 09:28:05.294895 140129923290880 hlog.py:32] train/00123/eval_val/acc 0.6689
I1203 09:28:05.295379 140129923290880 hlog.py:18] train/00123{16.77s}
I1203 09:28:17.384318 140129923290880 hlog.py:32] train/00124/loss 0.0035
I1203 09:28:21.591196 140129923290880 hlog.py:32] train/00124/eval_train/acc 0.9990
I1203 09:28:22.168918 140129923290880 hlog.py:32] train/00124/eval_val/acc 0.6689
I1203 09:28:22.169414 140129923290880 hlog.py:18] train/00124{16.87s}
I1203 09:28:34.633828 140129923290880 hlog.py:32] train/00125/loss 0.0040
I1203 09:28:38.498152 140129923290880 hlog.py:32] train/00125/eval_train/acc 0.9990
I1203 09:28:39.106877 140129923290880 hlog.py:32] train/00125/eval_val/acc 0.6689
I1203 09:28:39.107365 140129923290880 hlog.py:18] train/00125{16.94s}
I1203 09:28:51.003730 140129923290880 hlog.py:32] train/00126/loss 0.0035
I1203 09:28:54.814364 140129923290880 hlog.py:32] train/00126/eval_train/acc 1.0000
I1203 09:28:55.394443 140129923290880 hlog.py:32] train/00126/eval_val/acc 0.6689
I1203 09:28:55.394949 140129923290880 hlog.py:18] train/00126{16.29s}
I1203 09:29:07.067189 140129923290880 hlog.py:32] train/00127/loss 0.0039
I1203 09:29:10.865383 140129923290880 hlog.py:32] train/00127/eval_train/acc 0.9990
I1203 09:29:11.452844 140129923290880 hlog.py:32] train/00127/eval_val/acc 0.6689
I1203 09:29:11.453294 140129923290880 hlog.py:18] train/00127{16.06s}
I1203 09:29:23.031017 140129923290880 hlog.py:32] train/00128/loss 0.0035
I1203 09:29:26.542554 140129923290880 hlog.py:32] train/00128/eval_train/acc 0.9980
I1203 09:29:27.127058 140129923290880 hlog.py:32] train/00128/eval_val/acc 0.6757
I1203 09:29:27.127610 140129923290880 hlog.py:18] train/00128{15.67s}
I1203 09:29:39.382909 140129923290880 hlog.py:32] train/00129/loss 0.0040
I1203 09:29:43.393248 140129923290880 hlog.py:32] train/00129/eval_train/acc 0.9990
I1203 09:29:43.979157 140129923290880 hlog.py:32] train/00129/eval_val/acc 0.6689
I1203 09:29:44.011910 140129923290880 hlog.py:18] train/00129{16.88s}
I1203 09:29:54.973739 140129923290880 hlog.py:32] train/00130/loss 0.0039
I1203 09:29:58.710244 140129923290880 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 09:29:59.312677 140129923290880 hlog.py:32] train/00130/eval_val/acc 0.6689
I1203 09:29:59.313163 140129923290880 hlog.py:18] train/00130{15.30s}
I1203 09:30:10.768139 140129923290880 hlog.py:32] train/00131/loss 0.0033
I1203 09:30:14.820682 140129923290880 hlog.py:32] train/00131/eval_train/acc 0.9980
I1203 09:30:15.424938 140129923290880 hlog.py:32] train/00131/eval_val/acc 0.6689
I1203 09:30:15.425358 140129923290880 hlog.py:18] train/00131{16.11s}
I1203 09:30:26.999940 140129923290880 hlog.py:32] train/00132/loss 0.0038
I1203 09:30:30.771993 140129923290880 hlog.py:32] train/00132/eval_train/acc 0.9980
I1203 09:30:31.403948 140129923290880 hlog.py:32] train/00132/eval_val/acc 0.6689
I1203 09:30:31.404445 140129923290880 hlog.py:18] train/00132{15.98s}
I1203 09:30:43.559618 140129923290880 hlog.py:32] train/00133/loss 0.0041
I1203 09:30:47.325081 140129923290880 hlog.py:32] train/00133/eval_train/acc 1.0000
I1203 09:30:47.928477 140129923290880 hlog.py:32] train/00133/eval_val/acc 0.6689
I1203 09:30:47.928973 140129923290880 hlog.py:18] train/00133{16.52s}
I1203 09:31:00.981518 140129923290880 hlog.py:32] train/00134/loss 0.0037
I1203 09:31:04.908616 140129923290880 hlog.py:32] train/00134/eval_train/acc 0.9970
I1203 09:31:05.499402 140129923290880 hlog.py:32] train/00134/eval_val/acc 0.6689
I1203 09:31:05.499948 140129923290880 hlog.py:18] train/00134{17.57s}
I1203 09:31:17.224975 140129923290880 hlog.py:32] train/00135/loss 0.0036
I1203 09:31:21.168918 140129923290880 hlog.py:32] train/00135/eval_train/acc 1.0000
I1203 09:31:21.760292 140129923290880 hlog.py:32] train/00135/eval_val/acc 0.6689
I1203 09:31:21.760771 140129923290880 hlog.py:18] train/00135{16.26s}
I1203 09:31:34.088460 140129923290880 hlog.py:32] train/00136/loss 0.0040
I1203 09:31:37.862507 140129923290880 hlog.py:32] train/00136/eval_train/acc 0.9980
I1203 09:31:38.465954 140129923290880 hlog.py:32] train/00136/eval_val/acc 0.6689
I1203 09:31:38.466425 140129923290880 hlog.py:18] train/00136{16.71s}
I1203 09:31:50.057064 140129923290880 hlog.py:32] train/00137/loss 0.0035
I1203 09:31:53.957216 140129923290880 hlog.py:32] train/00137/eval_train/acc 0.9990
I1203 09:31:54.545401 140129923290880 hlog.py:32] train/00137/eval_val/acc 0.6689
I1203 09:31:54.545798 140129923290880 hlog.py:18] train/00137{16.08s}
I1203 09:32:05.660114 140129923290880 hlog.py:32] train/00138/loss 0.0036
I1203 09:32:09.542720 140129923290880 hlog.py:32] train/00138/eval_train/acc 0.9980
I1203 09:32:10.163162 140129923290880 hlog.py:32] train/00138/eval_val/acc 0.6689
I1203 09:32:10.163703 140129923290880 hlog.py:18] train/00138{15.62s}
I1203 09:32:21.787465 140129923290880 hlog.py:32] train/00139/loss 0.0041
I1203 09:32:25.446606 140129923290880 hlog.py:32] train/00139/eval_train/acc 0.9960
I1203 09:32:26.033190 140129923290880 hlog.py:32] train/00139/eval_val/acc 0.6689
I1203 09:32:26.065351 140129923290880 hlog.py:18] train/00139{15.90s}
I1203 09:32:38.155092 140129923290880 hlog.py:32] train/00140/loss 0.0039
I1203 09:32:42.016545 140129923290880 hlog.py:32] train/00140/eval_train/acc 0.9980
I1203 09:32:42.604281 140129923290880 hlog.py:32] train/00140/eval_val/acc 0.6689
I1203 09:32:42.604767 140129923290880 hlog.py:18] train/00140{16.54s}
I1203 09:32:53.625829 140129923290880 hlog.py:32] train/00141/loss 0.0036
I1203 09:32:57.737814 140129923290880 hlog.py:32] train/00141/eval_train/acc 0.9990
I1203 09:32:58.339121 140129923290880 hlog.py:32] train/00141/eval_val/acc 0.6689
I1203 09:32:58.339648 140129923290880 hlog.py:18] train/00141{15.73s}
I1203 09:33:09.828103 140129923290880 hlog.py:32] train/00142/loss 0.0033
I1203 09:33:13.848355 140129923290880 hlog.py:32] train/00142/eval_train/acc 0.9980
I1203 09:33:14.465732 140129923290880 hlog.py:32] train/00142/eval_val/acc 0.6689
I1203 09:33:14.466226 140129923290880 hlog.py:18] train/00142{16.13s}
I1203 09:33:26.279978 140129923290880 hlog.py:32] train/00143/loss 0.0036
I1203 09:33:29.982308 140129923290880 hlog.py:32] train/00143/eval_train/acc 0.9970
I1203 09:33:30.594351 140129923290880 hlog.py:32] train/00143/eval_val/acc 0.6689
I1203 09:33:30.594854 140129923290880 hlog.py:18] train/00143{16.13s}
I1203 09:33:42.354437 140129923290880 hlog.py:32] train/00144/loss 0.0040
I1203 09:33:46.192887 140129923290880 hlog.py:32] train/00144/eval_train/acc 0.9990
I1203 09:33:46.794632 140129923290880 hlog.py:32] train/00144/eval_val/acc 0.6689
I1203 09:33:46.795112 140129923290880 hlog.py:18] train/00144{16.20s}
I1203 09:33:57.713205 140129923290880 hlog.py:32] train/00145/loss 0.0035
I1203 09:34:01.494350 140129923290880 hlog.py:32] train/00145/eval_train/acc 0.9970
I1203 09:34:02.086343 140129923290880 hlog.py:32] train/00145/eval_val/acc 0.6689
I1203 09:34:02.086830 140129923290880 hlog.py:18] train/00145{15.29s}
I1203 09:34:13.716577 140129923290880 hlog.py:32] train/00146/loss 0.0032
I1203 09:34:17.525931 140129923290880 hlog.py:32] train/00146/eval_train/acc 1.0000
I1203 09:34:18.098934 140129923290880 hlog.py:32] train/00146/eval_val/acc 0.6689
I1203 09:34:18.099429 140129923290880 hlog.py:18] train/00146{16.01s}
I1203 09:34:30.536076 140129923290880 hlog.py:32] train/00147/loss 0.0038
I1203 09:34:34.394094 140129923290880 hlog.py:32] train/00147/eval_train/acc 1.0000
I1203 09:34:34.983583 140129923290880 hlog.py:32] train/00147/eval_val/acc 0.6689
I1203 09:34:34.984103 140129923290880 hlog.py:18] train/00147{16.88s}
I1203 09:34:46.448590 140129923290880 hlog.py:32] train/00148/loss 0.0037
I1203 09:34:50.189327 140129923290880 hlog.py:32] train/00148/eval_train/acc 0.9990
I1203 09:34:50.804210 140129923290880 hlog.py:32] train/00148/eval_val/acc 0.6689
I1203 09:34:50.804704 140129923290880 hlog.py:18] train/00148{15.82s}
I1203 09:35:02.144158 140129923290880 hlog.py:32] train/00149/loss 0.0041
I1203 09:35:06.126266 140129923290880 hlog.py:32] train/00149/eval_train/acc 0.9960
I1203 09:35:06.331979 140129923290880 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 09:35:06.332182 140129923290880 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.332284 140129923290880 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.332369 140129923290880 hlog.py:32] train/00149/eval_val/0/corr True
I1203 09:35:06.332445 140129923290880 hlog.py:32] train/00149/eval_val/0 
I1203 09:35:06.332525 140129923290880 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 09:35:06.332622 140129923290880 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 09:35:06.332719 140129923290880 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.332810 140129923290880 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.332895 140129923290880 hlog.py:32] train/00149/eval_val/1/corr False
I1203 09:35:06.332969 140129923290880 hlog.py:32] train/00149/eval_val/1 
I1203 09:35:06.333041 140129923290880 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 09:35:06.333132 140129923290880 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 09:35:06.333226 140129923290880 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _population ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 09:35:06.333315 140129923290880 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 09:35:06.333394 140129923290880 hlog.py:32] train/00149/eval_val/2/corr False
I1203 09:35:06.333467 140129923290880 hlog.py:32] train/00149/eval_val/2 
I1203 09:35:06.333538 140129923290880 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 09:35:06.333627 140129923290880 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 09:35:06.333721 140129923290880 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.333810 140129923290880 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.333889 140129923290880 hlog.py:32] train/00149/eval_val/3/corr False
I1203 09:35:06.333961 140129923290880 hlog.py:32] train/00149/eval_val/3 
I1203 09:35:06.334033 140129923290880 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 09:35:06.334121 140129923290880 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 09:35:06.334215 140129923290880 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 09:35:06.334304 140129923290880 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 09:35:06.334382 140129923290880 hlog.py:32] train/00149/eval_val/4/corr False
I1203 09:35:06.334454 140129923290880 hlog.py:32] train/00149/eval_val/4 
I1203 09:35:06.334525 140129923290880 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 09:35:06.334613 140129923290880 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 09:35:06.334707 140129923290880 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _loc ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.334794 140129923290880 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.334872 140129923290880 hlog.py:32] train/00149/eval_val/5/corr False
I1203 09:35:06.334944 140129923290880 hlog.py:32] train/00149/eval_val/5 
I1203 09:35:06.335016 140129923290880 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 09:35:06.335104 140129923290880 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 09:35:06.335212 140129923290880 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.335301 140129923290880 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.335379 140129923290880 hlog.py:32] train/00149/eval_val/6/corr False
I1203 09:35:06.335478 140129923290880 hlog.py:32] train/00149/eval_val/6 
I1203 09:35:06.335552 140129923290880 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 09:35:06.335643 140129923290880 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 09:35:06.335752 140129923290880 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _elevation ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.335840 140129923290880 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.335918 140129923290880 hlog.py:32] train/00149/eval_val/7/corr False
I1203 09:35:06.335990 140129923290880 hlog.py:32] train/00149/eval_val/7 
I1203 09:35:06.336061 140129923290880 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 09:35:06.336152 140129923290880 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 09:35:06.336245 140129923290880 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 09:35:06.336333 140129923290880 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 09:35:06.336411 140129923290880 hlog.py:32] train/00149/eval_val/8/corr True
I1203 09:35:06.336483 140129923290880 hlog.py:32] train/00149/eval_val/8 
I1203 09:35:06.336553 140129923290880 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 09:35:06.336644 140129923290880 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 09:35:06.336737 140129923290880 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 09:35:06.336825 140129923290880 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 09:35:06.336902 140129923290880 hlog.py:32] train/00149/eval_val/9/corr True
I1203 09:35:06.336974 140129923290880 hlog.py:32] train/00149/eval_val/9 
I1203 09:35:06.337045 140129923290880 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 09:35:06.337136 140129923290880 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 09:35:06.337229 140129923290880 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.337317 140129923290880 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.337395 140129923290880 hlog.py:32] train/00149/eval_val/10/corr True
I1203 09:35:06.337467 140129923290880 hlog.py:32] train/00149/eval_val/10 
I1203 09:35:06.337537 140129923290880 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 09:35:06.337631 140129923290880 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 09:35:06.337733 140129923290880 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 09:35:06.337827 140129923290880 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 09:35:06.337905 140129923290880 hlog.py:32] train/00149/eval_val/11/corr True
I1203 09:35:06.337977 140129923290880 hlog.py:32] train/00149/eval_val/11 
I1203 09:35:06.338047 140129923290880 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 09:35:06.338142 140129923290880 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 09:35:06.338243 140129923290880 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 09:35:06.338342 140129923290880 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 09:35:06.338421 140129923290880 hlog.py:32] train/00149/eval_val/12/corr True
I1203 09:35:06.338492 140129923290880 hlog.py:32] train/00149/eval_val/12 
I1203 09:35:06.338563 140129923290880 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 09:35:06.338657 140129923290880 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 09:35:06.338759 140129923290880 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 09:35:06.338852 140129923290880 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 09:35:06.338929 140129923290880 hlog.py:32] train/00149/eval_val/13/corr True
I1203 09:35:06.339001 140129923290880 hlog.py:32] train/00149/eval_val/13 
I1203 09:35:06.339072 140129923290880 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 09:35:06.339166 140129923290880 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 09:35:06.339267 140129923290880 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 09:35:06.339360 140129923290880 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 09:35:06.339460 140129923290880 hlog.py:32] train/00149/eval_val/14/corr True
I1203 09:35:06.339536 140129923290880 hlog.py:32] train/00149/eval_val/14 
I1203 09:35:06.339609 140129923290880 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 09:35:06.339707 140129923290880 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 09:35:06.339822 140129923290880 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 09:35:06.339915 140129923290880 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 09:35:06.339993 140129923290880 hlog.py:32] train/00149/eval_val/15/corr True
I1203 09:35:06.340065 140129923290880 hlog.py:32] train/00149/eval_val/15 
I1203 09:35:06.340136 140129923290880 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 09:35:06.340229 140129923290880 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 09:35:06.340331 140129923290880 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 09:35:06.340425 140129923290880 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 09:35:06.340502 140129923290880 hlog.py:32] train/00149/eval_val/16/corr True
I1203 09:35:06.340574 140129923290880 hlog.py:32] train/00149/eval_val/16 
I1203 09:35:06.340645 140129923290880 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 09:35:06.340732 140129923290880 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 09:35:06.340829 140129923290880 hlog.py:32] train/00149/eval_val/17/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) ) )
I1203 09:35:06.340923 140129923290880 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 09:35:06.341007 140129923290880 hlog.py:32] train/00149/eval_val/17/corr False
I1203 09:35:06.341080 140129923290880 hlog.py:32] train/00149/eval_val/17 
I1203 09:35:06.341151 140129923290880 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 09:35:06.341245 140129923290880 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 09:35:06.341347 140129923290880 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 09:35:06.341441 140129923290880 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 09:35:06.341519 140129923290880 hlog.py:32] train/00149/eval_val/18/corr True
I1203 09:35:06.341591 140129923290880 hlog.py:32] train/00149/eval_val/18 
I1203 09:35:06.341661 140129923290880 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 09:35:06.341748 140129923290880 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 09:35:06.341845 140129923290880 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 09:35:06.341939 140129923290880 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 09:35:06.342017 140129923290880 hlog.py:32] train/00149/eval_val/19/corr False
I1203 09:35:06.342090 140129923290880 hlog.py:32] train/00149/eval_val/19 
I1203 09:35:06.342161 140129923290880 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 09:35:06.342248 140129923290880 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 09:35:06.342345 140129923290880 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 09:35:06.342439 140129923290880 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 09:35:06.342516 140129923290880 hlog.py:32] train/00149/eval_val/20/corr False
I1203 09:35:06.342588 140129923290880 hlog.py:32] train/00149/eval_val/20 
I1203 09:35:06.342659 140129923290880 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 09:35:06.342754 140129923290880 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 09:35:06.342854 140129923290880 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 09:35:06.342948 140129923290880 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 09:35:06.343026 140129923290880 hlog.py:32] train/00149/eval_val/21/corr True
I1203 09:35:06.343098 140129923290880 hlog.py:32] train/00149/eval_val/21 
I1203 09:35:06.343169 140129923290880 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 09:35:06.343255 140129923290880 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 09:35:06.343349 140129923290880 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _elevation ( B , A ) , _const ( B , _cityid ( rio grande , _ ) ) ) )
I1203 09:35:06.343460 140129923290880 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 09:35:06.343542 140129923290880 hlog.py:32] train/00149/eval_val/22/corr False
I1203 09:35:06.343617 140129923290880 hlog.py:32] train/00149/eval_val/22 
I1203 09:35:06.343690 140129923290880 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 09:35:06.343793 140129923290880 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 09:35:06.343887 140129923290880 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 09:35:06.343981 140129923290880 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 09:35:06.344059 140129923290880 hlog.py:32] train/00149/eval_val/23/corr False
I1203 09:35:06.344130 140129923290880 hlog.py:32] train/00149/eval_val/23 
I1203 09:35:06.344202 140129923290880 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 09:35:06.344304 140129923290880 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 09:35:06.344403 140129923290880 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _stateid ( mississippi ) ) ) )
I1203 09:35:06.344494 140129923290880 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 09:35:06.344574 140129923290880 hlog.py:32] train/00149/eval_val/24/corr False
I1203 09:35:06.344649 140129923290880 hlog.py:32] train/00149/eval_val/24 
I1203 09:35:06.344734 140129923290880 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 09:35:06.344823 140129923290880 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 09:35:06.344918 140129923290880 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 09:35:06.345009 140129923290880 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 09:35:06.345086 140129923290880 hlog.py:32] train/00149/eval_val/25/corr False
I1203 09:35:06.345158 140129923290880 hlog.py:32] train/00149/eval_val/25 
I1203 09:35:06.345229 140129923290880 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 09:35:06.345318 140129923290880 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 09:35:06.345413 140129923290880 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 09:35:06.345502 140129923290880 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 09:35:06.345580 140129923290880 hlog.py:32] train/00149/eval_val/26/corr False
I1203 09:35:06.345651 140129923290880 hlog.py:32] train/00149/eval_val/26 
I1203 09:35:06.345722 140129923290880 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 09:35:06.345809 140129923290880 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 09:35:06.345912 140129923290880 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) )
I1203 09:35:06.346003 140129923290880 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 09:35:06.346080 140129923290880 hlog.py:32] train/00149/eval_val/27/corr False
I1203 09:35:06.346153 140129923290880 hlog.py:32] train/00149/eval_val/27 
I1203 09:35:06.346223 140129923290880 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 09:35:06.346314 140129923290880 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 09:35:06.346410 140129923290880 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 09:35:06.346500 140129923290880 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 09:35:06.346577 140129923290880 hlog.py:32] train/00149/eval_val/28/corr True
I1203 09:35:06.346650 140129923290880 hlog.py:32] train/00149/eval_val/28 
I1203 09:35:06.346720 140129923290880 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 09:35:06.346811 140129923290880 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 09:35:06.346907 140129923290880 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 09:35:06.347002 140129923290880 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 09:35:06.347080 140129923290880 hlog.py:32] train/00149/eval_val/29/corr True
I1203 09:35:06.347152 140129923290880 hlog.py:32] train/00149/eval_val/29 
I1203 09:35:06.347223 140129923290880 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 09:35:06.347312 140129923290880 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 09:35:06.347429 140129923290880 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 09:35:06.347526 140129923290880 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 09:35:06.347607 140129923290880 hlog.py:32] train/00149/eval_val/30/corr False
I1203 09:35:06.347681 140129923290880 hlog.py:32] train/00149/eval_val/30 
I1203 09:35:06.347766 140129923290880 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 09:35:06.347854 140129923290880 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 09:35:06.347949 140129923290880 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 09:35:06.348039 140129923290880 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 09:35:06.348117 140129923290880 hlog.py:32] train/00149/eval_val/31/corr False
I1203 09:35:06.348189 140129923290880 hlog.py:32] train/00149/eval_val/31 
I1203 09:35:06.348260 140129923290880 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 09:35:06.348349 140129923290880 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 09:35:06.348444 140129923290880 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 09:35:06.348534 140129923290880 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 09:35:06.348611 140129923290880 hlog.py:32] train/00149/eval_val/32/corr False
I1203 09:35:06.348683 140129923290880 hlog.py:32] train/00149/eval_val/32 
I1203 09:35:06.348754 140129923290880 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 09:35:06.348841 140129923290880 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 09:35:06.348939 140129923290880 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) , _traverse ( B , A ) ) )
I1203 09:35:06.349028 140129923290880 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 09:35:06.349106 140129923290880 hlog.py:32] train/00149/eval_val/33/corr False
I1203 09:35:06.349178 140129923290880 hlog.py:32] train/00149/eval_val/33 
I1203 09:35:06.349248 140129923290880 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 09:35:06.349340 140129923290880 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 09:35:06.349436 140129923290880 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 09:35:06.349525 140129923290880 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 09:35:06.349603 140129923290880 hlog.py:32] train/00149/eval_val/34/corr True
I1203 09:35:06.349675 140129923290880 hlog.py:32] train/00149/eval_val/34 
I1203 09:35:06.349745 140129923290880 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 09:35:06.349839 140129923290880 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 09:35:06.349943 140129923290880 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.350036 140129923290880 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.350115 140129923290880 hlog.py:32] train/00149/eval_val/35/corr True
I1203 09:35:06.350187 140129923290880 hlog.py:32] train/00149/eval_val/35 
I1203 09:35:06.350257 140129923290880 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 09:35:06.350351 140129923290880 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 09:35:06.350450 140129923290880 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.350541 140129923290880 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.350619 140129923290880 hlog.py:32] train/00149/eval_val/36/corr True
I1203 09:35:06.350691 140129923290880 hlog.py:32] train/00149/eval_val/36 
I1203 09:35:06.350761 140129923290880 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 09:35:06.350853 140129923290880 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 09:35:06.350951 140129923290880 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( us ) ) ) , A ) )
I1203 09:35:06.351043 140129923290880 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.351121 140129923290880 hlog.py:32] train/00149/eval_val/37/corr False
I1203 09:35:06.351193 140129923290880 hlog.py:32] train/00149/eval_val/37 
I1203 09:35:06.351264 140129923290880 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 09:35:06.351356 140129923290880 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 09:35:06.351478 140129923290880 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.351575 140129923290880 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.351655 140129923290880 hlog.py:32] train/00149/eval_val/38/corr True
I1203 09:35:06.351742 140129923290880 hlog.py:32] train/00149/eval_val/38 
I1203 09:35:06.351814 140129923290880 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 09:35:06.351907 140129923290880 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 09:35:06.352005 140129923290880 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.352096 140129923290880 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 09:35:06.352174 140129923290880 hlog.py:32] train/00149/eval_val/39/corr True
I1203 09:35:06.352246 140129923290880 hlog.py:32] train/00149/eval_val/39 
I1203 09:35:06.352317 140129923290880 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 09:35:06.352404 140129923290880 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 09:35:06.352502 140129923290880 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 09:35:06.352591 140129923290880 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 09:35:06.352669 140129923290880 hlog.py:32] train/00149/eval_val/40/corr False
I1203 09:35:06.352741 140129923290880 hlog.py:32] train/00149/eval_val/40 
I1203 09:35:06.352812 140129923290880 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 09:35:06.352903 140129923290880 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 09:35:06.353001 140129923290880 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 09:35:06.353091 140129923290880 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 09:35:06.353169 140129923290880 hlog.py:32] train/00149/eval_val/41/corr False
I1203 09:35:06.353241 140129923290880 hlog.py:32] train/00149/eval_val/41 
I1203 09:35:06.353312 140129923290880 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 09:35:06.353398 140129923290880 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 09:35:06.353497 140129923290880 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 09:35:06.353586 140129923290880 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 09:35:06.353663 140129923290880 hlog.py:32] train/00149/eval_val/42/corr False
I1203 09:35:06.353735 140129923290880 hlog.py:32] train/00149/eval_val/42 
I1203 09:35:06.353806 140129923290880 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 09:35:06.353895 140129923290880 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 09:35:06.353999 140129923290880 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) ) , A ) )
I1203 09:35:06.354093 140129923290880 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 09:35:06.354171 140129923290880 hlog.py:32] train/00149/eval_val/43/corr False
I1203 09:35:06.354258 140129923290880 hlog.py:32] train/00149/eval_val/43 
I1203 09:35:06.354332 140129923290880 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 09:35:06.354430 140129923290880 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 09:35:06.354537 140129923290880 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 09:35:06.354635 140129923290880 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 09:35:06.354727 140129923290880 hlog.py:32] train/00149/eval_val/44/corr True
I1203 09:35:06.354799 140129923290880 hlog.py:32] train/00149/eval_val/44 
I1203 09:35:06.354870 140129923290880 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 09:35:06.354960 140129923290880 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 09:35:06.355058 140129923290880 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 09:35:06.355149 140129923290880 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 09:35:06.355226 140129923290880 hlog.py:32] train/00149/eval_val/45/corr False
I1203 09:35:06.355298 140129923290880 hlog.py:32] train/00149/eval_val/45 
I1203 09:35:06.355369 140129923290880 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 09:35:06.355485 140129923290880 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 09:35:06.355587 140129923290880 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 09:35:06.355682 140129923290880 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 09:35:06.355782 140129923290880 hlog.py:32] train/00149/eval_val/46/corr True
I1203 09:35:06.355855 140129923290880 hlog.py:32] train/00149/eval_val/46 
I1203 09:35:06.355925 140129923290880 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 09:35:06.356012 140129923290880 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 09:35:06.356111 140129923290880 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) , A ) )
I1203 09:35:06.356204 140129923290880 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 09:35:06.356282 140129923290880 hlog.py:32] train/00149/eval_val/47/corr False
I1203 09:35:06.356354 140129923290880 hlog.py:32] train/00149/eval_val/47 
I1203 09:35:06.356425 140129923290880 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 09:35:06.356519 140129923290880 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 09:35:06.356621 140129923290880 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 09:35:06.356714 140129923290880 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 09:35:06.356792 140129923290880 hlog.py:32] train/00149/eval_val/48/corr True
I1203 09:35:06.356864 140129923290880 hlog.py:32] train/00149/eval_val/48 
I1203 09:35:06.356934 140129923290880 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 09:35:06.357026 140129923290880 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 09:35:06.357127 140129923290880 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 09:35:06.357220 140129923290880 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 09:35:06.357298 140129923290880 hlog.py:32] train/00149/eval_val/49/corr False
I1203 09:35:06.357370 140129923290880 hlog.py:32] train/00149/eval_val/49 
I1203 09:35:06.357440 140129923290880 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 09:35:06.357530 140129923290880 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 09:35:06.357631 140129923290880 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 09:35:06.357725 140129923290880 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 09:35:06.357803 140129923290880 hlog.py:32] train/00149/eval_val/50/corr False
I1203 09:35:06.357875 140129923290880 hlog.py:32] train/00149/eval_val/50 
I1203 09:35:06.357946 140129923290880 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 09:35:06.358034 140129923290880 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 09:35:06.358138 140129923290880 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _const ( D , _cityid ( springfield , _ ) ) ) , A ) )
I1203 09:35:06.358231 140129923290880 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 09:35:06.358309 140129923290880 hlog.py:32] train/00149/eval_val/51/corr False
I1203 09:35:06.358381 140129923290880 hlog.py:32] train/00149/eval_val/51 
I1203 09:35:06.358452 140129923290880 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 09:35:06.358544 140129923290880 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 09:35:06.358641 140129923290880 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 09:35:06.358731 140129923290880 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 09:35:06.358808 140129923290880 hlog.py:32] train/00149/eval_val/52/corr False
I1203 09:35:06.358880 140129923290880 hlog.py:32] train/00149/eval_val/52 
I1203 09:35:06.358950 140129923290880 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 09:35:06.359036 140129923290880 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 09:35:06.359132 140129923290880 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 09:35:06.359223 140129923290880 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 09:35:06.359300 140129923290880 hlog.py:32] train/00149/eval_val/53/corr False
I1203 09:35:06.359372 140129923290880 hlog.py:32] train/00149/eval_val/53 
I1203 09:35:06.359466 140129923290880 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 09:35:06.359562 140129923290880 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 09:35:06.359661 140129923290880 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.359766 140129923290880 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.359844 140129923290880 hlog.py:32] train/00149/eval_val/54/corr True
I1203 09:35:06.359916 140129923290880 hlog.py:32] train/00149/eval_val/54 
I1203 09:35:06.359986 140129923290880 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 09:35:06.360077 140129923290880 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 09:35:06.360172 140129923290880 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 09:35:06.360262 140129923290880 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 09:35:06.360339 140129923290880 hlog.py:32] train/00149/eval_val/55/corr True
I1203 09:35:06.360411 140129923290880 hlog.py:32] train/00149/eval_val/55 
I1203 09:35:06.360481 140129923290880 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 09:35:06.360572 140129923290880 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 09:35:06.360669 140129923290880 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 09:35:06.360759 140129923290880 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 09:35:06.360836 140129923290880 hlog.py:32] train/00149/eval_val/56/corr True
I1203 09:35:06.360908 140129923290880 hlog.py:32] train/00149/eval_val/56 
I1203 09:35:06.360979 140129923290880 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 09:35:06.361071 140129923290880 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 09:35:06.361166 140129923290880 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.361255 140129923290880 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.361333 140129923290880 hlog.py:32] train/00149/eval_val/57/corr True
I1203 09:35:06.361404 140129923290880 hlog.py:32] train/00149/eval_val/57 
I1203 09:35:06.361475 140129923290880 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 09:35:06.361572 140129923290880 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 09:35:06.361667 140129923290880 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.361757 140129923290880 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.361834 140129923290880 hlog.py:32] train/00149/eval_val/58/corr True
I1203 09:35:06.361906 140129923290880 hlog.py:32] train/00149/eval_val/58 
I1203 09:35:06.361977 140129923290880 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 09:35:06.362068 140129923290880 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 09:35:06.362163 140129923290880 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 09:35:06.362252 140129923290880 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 09:35:06.362330 140129923290880 hlog.py:32] train/00149/eval_val/59/corr True
I1203 09:35:06.362402 140129923290880 hlog.py:32] train/00149/eval_val/59 
I1203 09:35:06.362473 140129923290880 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 09:35:06.362564 140129923290880 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 09:35:06.362659 140129923290880 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 09:35:06.362748 140129923290880 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 09:35:06.362826 140129923290880 hlog.py:32] train/00149/eval_val/60/corr True
I1203 09:35:06.362898 140129923290880 hlog.py:32] train/00149/eval_val/60 
I1203 09:35:06.362968 140129923290880 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 09:35:06.363060 140129923290880 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 09:35:06.363155 140129923290880 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.363245 140129923290880 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.363323 140129923290880 hlog.py:32] train/00149/eval_val/61/corr True
I1203 09:35:06.363394 140129923290880 hlog.py:32] train/00149/eval_val/61 
I1203 09:35:06.363493 140129923290880 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 09:35:06.363587 140129923290880 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 09:35:06.363686 140129923290880 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 09:35:06.363789 140129923290880 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 09:35:06.363867 140129923290880 hlog.py:32] train/00149/eval_val/62/corr True
I1203 09:35:06.363939 140129923290880 hlog.py:32] train/00149/eval_val/62 
I1203 09:35:06.364009 140129923290880 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 09:35:06.364100 140129923290880 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 09:35:06.364195 140129923290880 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.364284 140129923290880 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.364361 140129923290880 hlog.py:32] train/00149/eval_val/63/corr True
I1203 09:35:06.364433 140129923290880 hlog.py:32] train/00149/eval_val/63 
I1203 09:35:06.364504 140129923290880 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 09:35:06.599372 140129923290880 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 09:35:06.599600 140129923290880 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 09:35:06.599720 140129923290880 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 09:35:06.599807 140129923290880 hlog.py:32] train/00149/eval_val/64/corr True
I1203 09:35:06.599884 140129923290880 hlog.py:32] train/00149/eval_val/64 
I1203 09:35:06.599961 140129923290880 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 09:35:06.600056 140129923290880 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 09:35:06.600154 140129923290880 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.600245 140129923290880 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.600323 140129923290880 hlog.py:32] train/00149/eval_val/65/corr True
I1203 09:35:06.600396 140129923290880 hlog.py:32] train/00149/eval_val/65 
I1203 09:35:06.600467 140129923290880 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 09:35:06.600560 140129923290880 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 09:35:06.600656 140129923290880 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.600747 140129923290880 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.600824 140129923290880 hlog.py:32] train/00149/eval_val/66/corr True
I1203 09:35:06.600897 140129923290880 hlog.py:32] train/00149/eval_val/66 
I1203 09:35:06.600967 140129923290880 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 09:35:06.601056 140129923290880 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 09:35:06.601159 140129923290880 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _const ( C , _countryid ( states ) ) ) ) )
I1203 09:35:06.601249 140129923290880 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.601327 140129923290880 hlog.py:32] train/00149/eval_val/67/corr False
I1203 09:35:06.601399 140129923290880 hlog.py:32] train/00149/eval_val/67 
I1203 09:35:06.601469 140129923290880 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 09:35:06.601563 140129923290880 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 09:35:06.601661 140129923290880 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 09:35:06.601752 140129923290880 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 09:35:06.601830 140129923290880 hlog.py:32] train/00149/eval_val/68/corr True
I1203 09:35:06.601902 140129923290880 hlog.py:32] train/00149/eval_val/68 
I1203 09:35:06.601973 140129923290880 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 09:35:06.602066 140129923290880 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 09:35:06.602168 140129923290880 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.602259 140129923290880 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.602336 140129923290880 hlog.py:32] train/00149/eval_val/69/corr True
I1203 09:35:06.602408 140129923290880 hlog.py:32] train/00149/eval_val/69 
I1203 09:35:06.602479 140129923290880 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 09:35:06.602571 140129923290880 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 09:35:06.602670 140129923290880 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.602759 140129923290880 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.602837 140129923290880 hlog.py:32] train/00149/eval_val/70/corr True
I1203 09:35:06.602908 140129923290880 hlog.py:32] train/00149/eval_val/70 
I1203 09:35:06.602979 140129923290880 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 09:35:06.603070 140129923290880 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 09:35:06.603163 140129923290880 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 09:35:06.603252 140129923290880 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 09:35:06.603329 140129923290880 hlog.py:32] train/00149/eval_val/71/corr True
I1203 09:35:06.603423 140129923290880 hlog.py:32] train/00149/eval_val/71 
I1203 09:35:06.603499 140129923290880 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 09:35:06.603594 140129923290880 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 09:35:06.603691 140129923290880 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 09:35:06.603792 140129923290880 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 09:35:06.603870 140129923290880 hlog.py:32] train/00149/eval_val/72/corr True
I1203 09:35:06.603942 140129923290880 hlog.py:32] train/00149/eval_val/72 
I1203 09:35:06.604012 140129923290880 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 09:35:06.604104 140129923290880 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 09:35:06.604197 140129923290880 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 09:35:06.604285 140129923290880 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 09:35:06.604362 140129923290880 hlog.py:32] train/00149/eval_val/73/corr True
I1203 09:35:06.604434 140129923290880 hlog.py:32] train/00149/eval_val/73 
I1203 09:35:06.604504 140129923290880 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 09:35:06.604595 140129923290880 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 09:35:06.604688 140129923290880 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 09:35:06.604775 140129923290880 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 09:35:06.604852 140129923290880 hlog.py:32] train/00149/eval_val/74/corr True
I1203 09:35:06.604925 140129923290880 hlog.py:32] train/00149/eval_val/74 
I1203 09:35:06.604995 140129923290880 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 09:35:06.605087 140129923290880 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 09:35:06.605181 140129923290880 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 09:35:06.605268 140129923290880 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 09:35:06.605346 140129923290880 hlog.py:32] train/00149/eval_val/75/corr True
I1203 09:35:06.605418 140129923290880 hlog.py:32] train/00149/eval_val/75 
I1203 09:35:06.605488 140129923290880 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 09:35:06.605579 140129923290880 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 09:35:06.605673 140129923290880 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.605761 140129923290880 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 09:35:06.605844 140129923290880 hlog.py:32] train/00149/eval_val/76/corr True
I1203 09:35:06.605917 140129923290880 hlog.py:32] train/00149/eval_val/76 
I1203 09:35:06.605987 140129923290880 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 09:35:06.606078 140129923290880 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 09:35:06.606171 140129923290880 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 09:35:06.606259 140129923290880 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 09:35:06.606337 140129923290880 hlog.py:32] train/00149/eval_val/77/corr True
I1203 09:35:06.606409 140129923290880 hlog.py:32] train/00149/eval_val/77 
I1203 09:35:06.606479 140129923290880 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 09:35:06.606570 140129923290880 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 09:35:06.606663 140129923290880 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 09:35:06.606751 140129923290880 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 09:35:06.606828 140129923290880 hlog.py:32] train/00149/eval_val/78/corr True
I1203 09:35:06.606900 140129923290880 hlog.py:32] train/00149/eval_val/78 
I1203 09:35:06.606971 140129923290880 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 09:35:06.607063 140129923290880 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 09:35:06.607156 140129923290880 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 09:35:06.607244 140129923290880 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 09:35:06.607322 140129923290880 hlog.py:32] train/00149/eval_val/79/corr True
I1203 09:35:06.607393 140129923290880 hlog.py:32] train/00149/eval_val/79 
I1203 09:35:06.607488 140129923290880 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 09:35:06.607583 140129923290880 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 09:35:06.607679 140129923290880 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.607782 140129923290880 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.607860 140129923290880 hlog.py:32] train/00149/eval_val/80/corr True
I1203 09:35:06.607932 140129923290880 hlog.py:32] train/00149/eval_val/80 
I1203 09:35:06.608002 140129923290880 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 09:35:06.608093 140129923290880 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 09:35:06.608186 140129923290880 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _countryid ( texas ) ) ) )
I1203 09:35:06.608273 140129923290880 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.608350 140129923290880 hlog.py:32] train/00149/eval_val/81/corr False
I1203 09:35:06.608423 140129923290880 hlog.py:32] train/00149/eval_val/81 
I1203 09:35:06.608494 140129923290880 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 09:35:06.608584 140129923290880 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 09:35:06.608677 140129923290880 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 09:35:06.608766 140129923290880 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 09:35:06.608843 140129923290880 hlog.py:32] train/00149/eval_val/82/corr True
I1203 09:35:06.608916 140129923290880 hlog.py:32] train/00149/eval_val/82 
I1203 09:35:06.608992 140129923290880 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 09:35:06.609080 140129923290880 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 09:35:06.609169 140129923290880 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , _state ( A ) ) )
I1203 09:35:06.609257 140129923290880 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 09:35:06.609334 140129923290880 hlog.py:32] train/00149/eval_val/83/corr False
I1203 09:35:06.609407 140129923290880 hlog.py:32] train/00149/eval_val/83 
I1203 09:35:06.609477 140129923290880 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 09:35:06.609568 140129923290880 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 09:35:06.609661 140129923290880 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _population ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 09:35:06.609749 140129923290880 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.609827 140129923290880 hlog.py:32] train/00149/eval_val/84/corr False
I1203 09:35:06.609899 140129923290880 hlog.py:32] train/00149/eval_val/84 
I1203 09:35:06.609969 140129923290880 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 09:35:06.610061 140129923290880 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 09:35:06.610154 140129923290880 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.610242 140129923290880 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.610320 140129923290880 hlog.py:32] train/00149/eval_val/85/corr True
I1203 09:35:06.610392 140129923290880 hlog.py:32] train/00149/eval_val/85 
I1203 09:35:06.610462 140129923290880 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 09:35:06.610550 140129923290880 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 09:35:06.610654 140129923290880 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _state ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _const ( C , _cityid ( river , _ ) ) ) ) )
I1203 09:35:06.610747 140129923290880 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 09:35:06.610825 140129923290880 hlog.py:32] train/00149/eval_val/86/corr False
I1203 09:35:06.610897 140129923290880 hlog.py:32] train/00149/eval_val/86 
I1203 09:35:06.610967 140129923290880 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 09:35:06.611063 140129923290880 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 09:35:06.611170 140129923290880 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 09:35:06.611268 140129923290880 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 09:35:06.611345 140129923290880 hlog.py:32] train/00149/eval_val/87/corr True
I1203 09:35:06.611437 140129923290880 hlog.py:32] train/00149/eval_val/87 
I1203 09:35:06.611513 140129923290880 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 09:35:06.611609 140129923290880 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 09:35:06.611707 140129923290880 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 09:35:06.611811 140129923290880 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 09:35:06.611888 140129923290880 hlog.py:32] train/00149/eval_val/88/corr True
I1203 09:35:06.611965 140129923290880 hlog.py:32] train/00149/eval_val/88 
I1203 09:35:06.612036 140129923290880 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 09:35:06.612132 140129923290880 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 09:35:06.612235 140129923290880 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.612329 140129923290880 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.612407 140129923290880 hlog.py:32] train/00149/eval_val/89/corr True
I1203 09:35:06.612479 140129923290880 hlog.py:32] train/00149/eval_val/89 
I1203 09:35:06.612550 140129923290880 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 09:35:06.612647 140129923290880 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 09:35:06.612753 140129923290880 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 09:35:06.612849 140129923290880 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 09:35:06.612927 140129923290880 hlog.py:32] train/00149/eval_val/90/corr True
I1203 09:35:06.612999 140129923290880 hlog.py:32] train/00149/eval_val/90 
I1203 09:35:06.613069 140129923290880 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 09:35:06.613162 140129923290880 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 09:35:06.613259 140129923290880 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.613350 140129923290880 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.613428 140129923290880 hlog.py:32] train/00149/eval_val/91/corr True
I1203 09:35:06.613500 140129923290880 hlog.py:32] train/00149/eval_val/91 
I1203 09:35:06.613570 140129923290880 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 09:35:06.613662 140129923290880 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 09:35:06.613760 140129923290880 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.613851 140129923290880 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.613928 140129923290880 hlog.py:32] train/00149/eval_val/92/corr True
I1203 09:35:06.614000 140129923290880 hlog.py:32] train/00149/eval_val/92 
I1203 09:35:06.614071 140129923290880 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 09:35:06.614163 140129923290880 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 09:35:06.614261 140129923290880 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.614352 140129923290880 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.614428 140129923290880 hlog.py:32] train/00149/eval_val/93/corr True
I1203 09:35:06.614501 140129923290880 hlog.py:32] train/00149/eval_val/93 
I1203 09:35:06.614571 140129923290880 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 09:35:06.614664 140129923290880 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 09:35:06.614767 140129923290880 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.614859 140129923290880 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.614936 140129923290880 hlog.py:32] train/00149/eval_val/94/corr True
I1203 09:35:06.615009 140129923290880 hlog.py:32] train/00149/eval_val/94 
I1203 09:35:06.615079 140129923290880 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 09:35:06.615172 140129923290880 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 09:35:06.615270 140129923290880 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.615361 140129923290880 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.615460 140129923290880 hlog.py:32] train/00149/eval_val/95/corr True
I1203 09:35:06.615536 140129923290880 hlog.py:32] train/00149/eval_val/95 
I1203 09:35:06.615610 140129923290880 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 09:35:06.615708 140129923290880 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 09:35:06.615823 140129923290880 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 09:35:06.615917 140129923290880 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 09:35:06.615994 140129923290880 hlog.py:32] train/00149/eval_val/96/corr True
I1203 09:35:06.616066 140129923290880 hlog.py:32] train/00149/eval_val/96 
I1203 09:35:06.616137 140129923290880 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 09:35:06.616236 140129923290880 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 09:35:06.616392 140129923290880 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 09:35:06.616533 140129923290880 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 09:35:06.616612 140129923290880 hlog.py:32] train/00149/eval_val/97/corr True
I1203 09:35:06.616685 140129923290880 hlog.py:32] train/00149/eval_val/97 
I1203 09:35:06.616756 140129923290880 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 09:35:06.616850 140129923290880 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 09:35:06.616950 140129923290880 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 09:35:06.617043 140129923290880 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 09:35:06.617120 140129923290880 hlog.py:32] train/00149/eval_val/98/corr True
I1203 09:35:06.617192 140129923290880 hlog.py:32] train/00149/eval_val/98 
I1203 09:35:06.617262 140129923290880 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 09:35:06.617356 140129923290880 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 09:35:06.617455 140129923290880 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 09:35:06.617553 140129923290880 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 09:35:06.617630 140129923290880 hlog.py:32] train/00149/eval_val/99/corr True
I1203 09:35:06.617703 140129923290880 hlog.py:32] train/00149/eval_val/99 
I1203 09:35:06.617773 140129923290880 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 09:35:06.617864 140129923290880 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 09:35:06.617964 140129923290880 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1203 09:35:06.618057 140129923290880 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 09:35:06.618134 140129923290880 hlog.py:32] train/00149/eval_val/100/corr False
I1203 09:35:06.618206 140129923290880 hlog.py:32] train/00149/eval_val/100 
I1203 09:35:06.618277 140129923290880 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 09:35:06.618368 140129923290880 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 09:35:06.618468 140129923290880 hlog.py:32] train/00149/eval_val/101/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1203 09:35:06.618561 140129923290880 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 09:35:06.618638 140129923290880 hlog.py:32] train/00149/eval_val/101/corr False
I1203 09:35:06.618710 140129923290880 hlog.py:32] train/00149/eval_val/101 
I1203 09:35:06.618781 140129923290880 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 09:35:06.618868 140129923290880 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 09:35:06.618965 140129923290880 hlog.py:32] train/00149/eval_val/102/pred ( A , _longest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( ohio ) ) ) ) )
I1203 09:35:06.619056 140129923290880 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 09:35:06.619133 140129923290880 hlog.py:32] train/00149/eval_val/102/corr False
I1203 09:35:06.619205 140129923290880 hlog.py:32] train/00149/eval_val/102 
I1203 09:35:06.619276 140129923290880 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 09:35:06.619367 140129923290880 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 09:35:06.619487 140129923290880 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 09:35:06.619581 140129923290880 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 09:35:06.619661 140129923290880 hlog.py:32] train/00149/eval_val/103/corr True
I1203 09:35:06.619748 140129923290880 hlog.py:32] train/00149/eval_val/103 
I1203 09:35:06.619818 140129923290880 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 09:35:06.619910 140129923290880 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 09:35:06.620005 140129923290880 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.620095 140129923290880 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.620172 140129923290880 hlog.py:32] train/00149/eval_val/104/corr True
I1203 09:35:06.620245 140129923290880 hlog.py:32] train/00149/eval_val/104 
I1203 09:35:06.620316 140129923290880 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 09:35:06.620407 140129923290880 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 09:35:06.620508 140129923290880 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 09:35:06.620598 140129923290880 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 09:35:06.620676 140129923290880 hlog.py:32] train/00149/eval_val/105/corr True
I1203 09:35:06.620748 140129923290880 hlog.py:32] train/00149/eval_val/105 
I1203 09:35:06.620818 140129923290880 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 09:35:06.620910 140129923290880 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 09:35:06.621005 140129923290880 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 09:35:06.621094 140129923290880 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 09:35:06.621172 140129923290880 hlog.py:32] train/00149/eval_val/106/corr True
I1203 09:35:06.621243 140129923290880 hlog.py:32] train/00149/eval_val/106 
I1203 09:35:06.621314 140129923290880 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 09:35:06.621405 140129923290880 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 09:35:06.621500 140129923290880 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.621590 140129923290880 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.621667 140129923290880 hlog.py:32] train/00149/eval_val/107/corr True
I1203 09:35:06.621739 140129923290880 hlog.py:32] train/00149/eval_val/107 
I1203 09:35:06.621810 140129923290880 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 09:35:06.621901 140129923290880 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 09:35:06.621996 140129923290880 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 09:35:06.622086 140129923290880 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 09:35:06.622163 140129923290880 hlog.py:32] train/00149/eval_val/108/corr True
I1203 09:35:06.622235 140129923290880 hlog.py:32] train/00149/eval_val/108 
I1203 09:35:06.622306 140129923290880 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 09:35:06.622397 140129923290880 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 09:35:06.622493 140129923290880 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 09:35:06.622582 140129923290880 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 09:35:06.622659 140129923290880 hlog.py:32] train/00149/eval_val/109/corr True
I1203 09:35:06.622731 140129923290880 hlog.py:32] train/00149/eval_val/109 
I1203 09:35:06.622802 140129923290880 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 09:35:06.622893 140129923290880 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 09:35:06.622988 140129923290880 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.623077 140129923290880 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 09:35:06.623154 140129923290880 hlog.py:32] train/00149/eval_val/110/corr True
I1203 09:35:06.623227 140129923290880 hlog.py:32] train/00149/eval_val/110 
I1203 09:35:06.623297 140129923290880 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 09:35:06.623389 140129923290880 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 09:35:06.623515 140129923290880 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 09:35:06.623609 140129923290880 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 09:35:06.623688 140129923290880 hlog.py:32] train/00149/eval_val/111/corr True
I1203 09:35:06.623774 140129923290880 hlog.py:32] train/00149/eval_val/111 
I1203 09:35:06.623845 140129923290880 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 09:35:06.623936 140129923290880 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 09:35:06.624032 140129923290880 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 09:35:06.624121 140129923290880 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 09:35:06.624199 140129923290880 hlog.py:32] train/00149/eval_val/112/corr True
I1203 09:35:06.624271 140129923290880 hlog.py:32] train/00149/eval_val/112 
I1203 09:35:06.624341 140129923290880 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 09:35:06.624433 140129923290880 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 09:35:06.624529 140129923290880 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 09:35:06.624619 140129923290880 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 09:35:06.624696 140129923290880 hlog.py:32] train/00149/eval_val/113/corr True
I1203 09:35:06.624768 140129923290880 hlog.py:32] train/00149/eval_val/113 
I1203 09:35:06.624838 140129923290880 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 09:35:06.624929 140129923290880 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 09:35:06.625024 140129923290880 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.625113 140129923290880 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 09:35:06.625191 140129923290880 hlog.py:32] train/00149/eval_val/114/corr True
I1203 09:35:06.625263 140129923290880 hlog.py:32] train/00149/eval_val/114 
I1203 09:35:06.625334 140129923290880 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 09:35:06.625424 140129923290880 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 09:35:06.625520 140129923290880 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 09:35:06.625610 140129923290880 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 09:35:06.625688 140129923290880 hlog.py:32] train/00149/eval_val/115/corr True
I1203 09:35:06.625760 140129923290880 hlog.py:32] train/00149/eval_val/115 
I1203 09:35:06.625831 140129923290880 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 09:35:06.625921 140129923290880 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 09:35:06.626017 140129923290880 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.626106 140129923290880 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 09:35:06.626184 140129923290880 hlog.py:32] train/00149/eval_val/116/corr True
I1203 09:35:06.626255 140129923290880 hlog.py:32] train/00149/eval_val/116 
I1203 09:35:06.626326 140129923290880 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 09:35:06.626425 140129923290880 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 09:35:06.626522 140129923290880 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.626614 140129923290880 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.626691 140129923290880 hlog.py:32] train/00149/eval_val/117/corr True
I1203 09:35:06.626763 140129923290880 hlog.py:32] train/00149/eval_val/117 
I1203 09:35:06.626833 140129923290880 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 09:35:06.626926 140129923290880 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 09:35:06.627023 140129923290880 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.627114 140129923290880 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.627191 140129923290880 hlog.py:32] train/00149/eval_val/118/corr True
I1203 09:35:06.627263 140129923290880 hlog.py:32] train/00149/eval_val/118 
I1203 09:35:06.627334 140129923290880 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 09:35:06.627450 140129923290880 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 09:35:06.627553 140129923290880 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.627646 140129923290880 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 09:35:06.627740 140129923290880 hlog.py:32] train/00149/eval_val/119/corr True
I1203 09:35:06.627812 140129923290880 hlog.py:32] train/00149/eval_val/119 
I1203 09:35:06.627882 140129923290880 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 09:35:06.627972 140129923290880 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 09:35:06.628060 140129923290880 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 09:35:06.628146 140129923290880 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 09:35:06.628222 140129923290880 hlog.py:32] train/00149/eval_val/120/corr True
I1203 09:35:06.628295 140129923290880 hlog.py:32] train/00149/eval_val/120 
I1203 09:35:06.628365 140129923290880 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 09:35:06.628454 140129923290880 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 09:35:06.628543 140129923290880 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 09:35:06.628628 140129923290880 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 09:35:06.628706 140129923290880 hlog.py:32] train/00149/eval_val/121/corr True
I1203 09:35:06.628777 140129923290880 hlog.py:32] train/00149/eval_val/121 
I1203 09:35:06.628848 140129923290880 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 09:35:06.628941 140129923290880 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 09:35:06.629038 140129923290880 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 09:35:06.629129 140129923290880 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 09:35:06.629206 140129923290880 hlog.py:32] train/00149/eval_val/122/corr True
I1203 09:35:06.629278 140129923290880 hlog.py:32] train/00149/eval_val/122 
I1203 09:35:06.629348 140129923290880 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 09:35:06.629441 140129923290880 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 09:35:06.629543 140129923290880 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 09:35:06.629635 140129923290880 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 09:35:06.629712 140129923290880 hlog.py:32] train/00149/eval_val/123/corr True
I1203 09:35:06.629784 140129923290880 hlog.py:32] train/00149/eval_val/123 
I1203 09:35:06.629854 140129923290880 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 09:35:06.629947 140129923290880 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 09:35:06.630044 140129923290880 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 09:35:06.630135 140129923290880 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 09:35:06.630212 140129923290880 hlog.py:32] train/00149/eval_val/124/corr True
I1203 09:35:06.630284 140129923290880 hlog.py:32] train/00149/eval_val/124 
I1203 09:35:06.630354 140129923290880 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 09:35:06.630447 140129923290880 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 09:35:06.630544 140129923290880 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 09:35:06.630635 140129923290880 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 09:35:06.630712 140129923290880 hlog.py:32] train/00149/eval_val/125/corr True
I1203 09:35:06.630784 140129923290880 hlog.py:32] train/00149/eval_val/125 
I1203 09:35:06.630856 140129923290880 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 09:35:06.630947 140129923290880 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 09:35:06.631040 140129923290880 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.631127 140129923290880 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.631204 140129923290880 hlog.py:32] train/00149/eval_val/126/corr True
I1203 09:35:06.631276 140129923290880 hlog.py:32] train/00149/eval_val/126 
I1203 09:35:06.631346 140129923290880 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 09:35:06.631458 140129923290880 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 09:35:06.631556 140129923290880 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.631647 140129923290880 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.631740 140129923290880 hlog.py:32] train/00149/eval_val/127/corr False
I1203 09:35:06.631813 140129923290880 hlog.py:32] train/00149/eval_val/127 
I1203 09:35:06.631883 140129923290880 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 09:35:06.780522 140129923290880 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 09:35:06.780669 140129923290880 hlog.py:32] train/00149/eval_val/128/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.780771 140129923290880 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.780856 140129923290880 hlog.py:32] train/00149/eval_val/128/corr True
I1203 09:35:06.780933 140129923290880 hlog.py:32] train/00149/eval_val/128 
I1203 09:35:06.781008 140129923290880 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 09:35:06.781113 140129923290880 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 09:35:06.781210 140129923290880 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.781300 140129923290880 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.781378 140129923290880 hlog.py:32] train/00149/eval_val/129/corr True
I1203 09:35:06.781451 140129923290880 hlog.py:32] train/00149/eval_val/129 
I1203 09:35:06.781523 140129923290880 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 09:35:06.781614 140129923290880 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 09:35:06.781708 140129923290880 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.781796 140129923290880 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.781873 140129923290880 hlog.py:32] train/00149/eval_val/130/corr False
I1203 09:35:06.781946 140129923290880 hlog.py:32] train/00149/eval_val/130 
I1203 09:35:06.782016 140129923290880 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 09:35:06.782108 140129923290880 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 09:35:06.782201 140129923290880 hlog.py:32] train/00149/eval_val/131/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.782288 140129923290880 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.782366 140129923290880 hlog.py:32] train/00149/eval_val/131/corr True
I1203 09:35:06.782438 140129923290880 hlog.py:32] train/00149/eval_val/131 
I1203 09:35:06.782509 140129923290880 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 09:35:06.782599 140129923290880 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 09:35:06.782692 140129923290880 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.782780 140129923290880 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 09:35:06.782857 140129923290880 hlog.py:32] train/00149/eval_val/132/corr True
I1203 09:35:06.782929 140129923290880 hlog.py:32] train/00149/eval_val/132 
I1203 09:35:06.782999 140129923290880 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 09:35:06.783088 140129923290880 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 09:35:06.783181 140129923290880 hlog.py:32] train/00149/eval_val/133/pred ( A , ( _len ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 09:35:06.783269 140129923290880 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 09:35:06.783346 140129923290880 hlog.py:32] train/00149/eval_val/133/corr False
I1203 09:35:06.783441 140129923290880 hlog.py:32] train/00149/eval_val/133 
I1203 09:35:06.783516 140129923290880 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 09:35:06.783615 140129923290880 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 09:35:06.783740 140129923290880 hlog.py:32] train/00149/eval_val/134/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.783835 140129923290880 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.783912 140129923290880 hlog.py:32] train/00149/eval_val/134/corr True
I1203 09:35:06.783984 140129923290880 hlog.py:32] train/00149/eval_val/134 
I1203 09:35:06.784055 140129923290880 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 09:35:06.784150 140129923290880 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 09:35:06.784259 140129923290880 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.784353 140129923290880 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 09:35:06.784431 140129923290880 hlog.py:32] train/00149/eval_val/135/corr True
I1203 09:35:06.784504 140129923290880 hlog.py:32] train/00149/eval_val/135 
I1203 09:35:06.784574 140129923290880 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 09:35:06.784663 140129923290880 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 09:35:06.784759 140129923290880 hlog.py:32] train/00149/eval_val/136/pred ( A , _fewest ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.784850 140129923290880 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.784927 140129923290880 hlog.py:32] train/00149/eval_val/136/corr False
I1203 09:35:06.785000 140129923290880 hlog.py:32] train/00149/eval_val/136 
I1203 09:35:06.785071 140129923290880 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 09:35:06.785163 140129923290880 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 09:35:06.785259 140129923290880 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.785365 140129923290880 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.785445 140129923290880 hlog.py:32] train/00149/eval_val/137/corr True
I1203 09:35:06.785520 140129923290880 hlog.py:32] train/00149/eval_val/137 
I1203 09:35:06.785593 140129923290880 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 09:35:06.785699 140129923290880 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 09:35:06.785796 140129923290880 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.785886 140129923290880 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.785963 140129923290880 hlog.py:32] train/00149/eval_val/138/corr True
I1203 09:35:06.786035 140129923290880 hlog.py:32] train/00149/eval_val/138 
I1203 09:35:06.786105 140129923290880 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 09:35:06.786197 140129923290880 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 09:35:06.786293 140129923290880 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.786384 140129923290880 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 09:35:06.786461 140129923290880 hlog.py:32] train/00149/eval_val/139/corr True
I1203 09:35:06.786533 140129923290880 hlog.py:32] train/00149/eval_val/139 
I1203 09:35:06.786603 140129923290880 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 09:35:06.786699 140129923290880 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 09:35:06.786800 140129923290880 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 09:35:06.786894 140129923290880 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 09:35:06.786971 140129923290880 hlog.py:32] train/00149/eval_val/140/corr True
I1203 09:35:06.787044 140129923290880 hlog.py:32] train/00149/eval_val/140 
I1203 09:35:06.787120 140129923290880 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 09:35:06.787215 140129923290880 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 09:35:06.787317 140129923290880 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 09:35:06.787433 140129923290880 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 09:35:06.787515 140129923290880 hlog.py:32] train/00149/eval_val/141/corr True
I1203 09:35:06.787590 140129923290880 hlog.py:32] train/00149/eval_val/141 
I1203 09:35:06.787663 140129923290880 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 09:35:06.787764 140129923290880 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 09:35:06.787858 140129923290880 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 09:35:06.787961 140129923290880 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 09:35:06.788042 140129923290880 hlog.py:32] train/00149/eval_val/142/corr False
I1203 09:35:06.788116 140129923290880 hlog.py:32] train/00149/eval_val/142 
I1203 09:35:06.788190 140129923290880 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 09:35:06.788290 140129923290880 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 09:35:06.788393 140129923290880 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 09:35:06.788481 140129923290880 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 09:35:06.788559 140129923290880 hlog.py:32] train/00149/eval_val/143/corr False
I1203 09:35:06.788631 140129923290880 hlog.py:32] train/00149/eval_val/143 
I1203 09:35:06.788702 140129923290880 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 09:35:06.788788 140129923290880 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 09:35:06.788877 140129923290880 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 09:35:06.788965 140129923290880 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 09:35:06.789042 140129923290880 hlog.py:32] train/00149/eval_val/144/corr False
I1203 09:35:06.789114 140129923290880 hlog.py:32] train/00149/eval_val/144 
I1203 09:35:06.789185 140129923290880 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 09:35:06.789271 140129923290880 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 09:35:06.789366 140129923290880 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _stateid ( cities ) ) ) )
I1203 09:35:06.789455 140129923290880 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 09:35:06.789532 140129923290880 hlog.py:32] train/00149/eval_val/145/corr False
I1203 09:35:06.789604 140129923290880 hlog.py:32] train/00149/eval_val/145 
I1203 09:35:06.789675 140129923290880 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 09:35:06.789765 140129923290880 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 09:35:06.789894 140129923290880 hlog.py:32] train/00149/eval_val/146/pred ( B , ( _elevation ( B , A ) , _largest ( C , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _const ( D , _riverid ( united ) ) , _river ( D ) , _traverse ( D , C ) ) ) ) )
I1203 09:35:06.789993 140129923290880 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 09:35:06.790077 140129923290880 hlog.py:32] train/00149/eval_val/146/corr False
I1203 09:35:06.790149 140129923290880 hlog.py:32] train/00149/eval_val/146 
I1203 09:35:06.790220 140129923290880 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 09:35:06.790313 140129923290880 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 09:35:06.790412 140129923290880 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 09:35:06.790504 140129923290880 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 09:35:06.790581 140129923290880 hlog.py:32] train/00149/eval_val/147/corr True
I1203 09:35:06.790653 140129923290880 hlog.py:32] train/00149/eval_val/147 
I1203 09:35:06.790724 140129923290880 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 09:35:06.790804 140129923290880 hlog.py:32] train/00149/eval_val/acc 0.6689
I1203 09:35:06.821609 140129923290880 hlog.py:18] train/00149{16.02s}
I1203 09:35:06.823485 140129923290880 hlog.py:18] train{2460.00s}
