I1203 10:16:45.771437 139628478494464 hlog.py:24] # --noTEST
I1203 10:16:45.771816 139628478494464 hlog.py:24] # --seed=6
I1203 10:16:45.771902 139628478494464 hlog.py:24] # --dataset=semparse
I1203 10:16:45.771982 139628478494464 hlog.py:24] # --model_dir=model
I1203 10:16:45.772059 139628478494464 hlog.py:24] # --n_checkpoint=10
I1203 10:16:45.772135 139628478494464 hlog.py:24] # --nologtostderr
I1203 10:16:45.772210 139628478494464 hlog.py:24] # --noalsologtostderr
I1203 10:16:45.772284 139628478494464 hlog.py:24] # --log_dir=
I1203 10:16:45.772358 139628478494464 hlog.py:24] # --verbosity=0
I1203 10:16:45.772430 139628478494464 hlog.py:24] # --verbosity=0
I1203 10:16:45.772502 139628478494464 hlog.py:24] # --stderrthreshold=fatal
I1203 10:16:45.772573 139628478494464 hlog.py:24] # --showprefixforinfo
I1203 10:16:45.772645 139628478494464 hlog.py:24] # --nodedup
I1203 10:16:45.772716 139628478494464 hlog.py:24] # --nobuild_comp_table
I1203 10:16:45.772788 139628478494464 hlog.py:24] # --semparse_split=query
I1203 10:16:45.772859 139628478494464 hlog.py:24] # --semparse_dataset=geography-logic.txt
I1203 10:16:45.772932 139628478494464 hlog.py:24] # --semparse_mrl=logic
I1203 10:16:45.773003 139628478494464 hlog.py:24] # --val_fold=8
I1203 10:16:45.773075 139628478494464 hlog.py:24] # --test_fold=9
I1203 10:16:45.773146 139628478494464 hlog.py:24] # --n_emb=64
I1203 10:16:45.773218 139628478494464 hlog.py:24] # --n_enc=512
I1203 10:16:45.773289 139628478494464 hlog.py:24] # --dropout=0.5
I1203 10:16:45.773360 139628478494464 hlog.py:24] # --copy_sup
I1203 10:16:45.773432 139628478494464 hlog.py:24] # --n_epochs=150
I1203 10:16:45.773503 139628478494464 hlog.py:24] # --n_epoch_batches=32
I1203 10:16:45.773575 139628478494464 hlog.py:24] # --n_batch=64
I1203 10:16:45.773646 139628478494464 hlog.py:24] # --lr=0.001
I1203 10:16:45.773717 139628478494464 hlog.py:24] # --clip=1.0
I1203 10:16:45.773788 139628478494464 hlog.py:24] # --sched_factor=0.5
I1203 10:16:45.773859 139628478494464 hlog.py:24] # --norun_with_pdb
I1203 10:16:45.773930 139628478494464 hlog.py:24] # --nopdb_post_mortem
I1203 10:16:45.774001 139628478494464 hlog.py:24] # --norun_with_profiling
I1203 10:16:45.774072 139628478494464 hlog.py:24] # --use_cprofile_for_profiling
I1203 10:16:45.774144 139628478494464 hlog.py:24] # --noonly_check_args
I1203 10:16:45.774215 139628478494464 hlog.py:24] # --augment=composed.val6.json
I1203 10:16:45.774286 139628478494464 hlog.py:24] # --aug_ratio=0.3
I1203 10:16:45.774357 139628478494464 hlog.py:24] # --noinvert
I1203 10:16:45.774429 139628478494464 hlog.py:24] # --nohelp
I1203 10:16:45.774499 139628478494464 hlog.py:24] # --nohelp
I1203 10:16:45.774570 139628478494464 hlog.py:24] # --nohelpshort
I1203 10:16:45.774641 139628478494464 hlog.py:24] # --nohelpfull
I1203 10:16:45.774712 139628478494464 hlog.py:24] # --nohelpxml
I1203 10:16:45.774783 139628478494464 hlog.py:24] # 
I1203 10:16:45.812625 139628478494464 hlog.py:32] train 543
I1203 10:16:45.812791 139628478494464 hlog.py:32] aug 1000
I1203 10:17:01.160641 139628478494464 hlog.py:32] train/00000/loss 3.5983
I1203 10:17:13.044282 139628478494464 hlog.py:32] train/00000/eval_train/acc 0.0000
I1203 10:17:14.968918 139628478494464 hlog.py:32] train/00000/eval_val/acc 0.0000
I1203 10:17:14.969542 139628478494464 hlog.py:18] train/00000{25.30s}
I1203 10:17:27.542196 139628478494464 hlog.py:32] train/00001/loss 1.1692
I1203 10:17:30.231341 139628478494464 hlog.py:32] train/00001/eval_train/acc 0.0000
I1203 10:17:30.699839 139628478494464 hlog.py:32] train/00001/eval_val/acc 0.0000
I1203 10:17:30.700588 139628478494464 hlog.py:18] train/00001{15.73s}
I1203 10:17:42.259401 139628478494464 hlog.py:32] train/00002/loss 0.6890
I1203 10:17:45.344754 139628478494464 hlog.py:32] train/00002/eval_train/acc 0.0000
I1203 10:17:45.842447 139628478494464 hlog.py:32] train/00002/eval_val/acc 0.0000
I1203 10:17:45.843034 139628478494464 hlog.py:18] train/00002{15.14s}
I1203 10:17:57.971020 139628478494464 hlog.py:32] train/00003/loss 0.5487
I1203 10:18:01.873591 139628478494464 hlog.py:32] train/00003/eval_train/acc 0.0250
I1203 10:18:02.658398 139628478494464 hlog.py:32] train/00003/eval_val/acc 0.0000
I1203 10:18:02.658910 139628478494464 hlog.py:18] train/00003{16.82s}
I1203 10:18:13.822880 139628478494464 hlog.py:32] train/00004/loss 0.4309
I1203 10:18:17.234960 139628478494464 hlog.py:32] train/00004/eval_train/acc 0.0500
I1203 10:18:18.028803 139628478494464 hlog.py:32] train/00004/eval_val/acc 0.0000
I1203 10:18:18.029387 139628478494464 hlog.py:18] train/00004{15.37s}
I1203 10:18:29.232891 139628478494464 hlog.py:32] train/00005/loss 0.4135
I1203 10:18:32.424647 139628478494464 hlog.py:32] train/00005/eval_train/acc 0.1100
I1203 10:18:32.971033 139628478494464 hlog.py:32] train/00005/eval_val/acc 0.0135
I1203 10:18:32.971561 139628478494464 hlog.py:18] train/00005{14.94s}
I1203 10:18:44.249684 139628478494464 hlog.py:32] train/00006/loss 0.3511
I1203 10:18:48.425535 139628478494464 hlog.py:32] train/00006/eval_train/acc 0.1920
I1203 10:18:48.982394 139628478494464 hlog.py:32] train/00006/eval_val/acc 0.0743
I1203 10:18:48.982873 139628478494464 hlog.py:18] train/00006{16.01s}
I1203 10:19:00.756139 139628478494464 hlog.py:32] train/00007/loss 0.3326
I1203 10:19:04.480257 139628478494464 hlog.py:32] train/00007/eval_train/acc 0.1640
I1203 10:19:05.241898 139628478494464 hlog.py:32] train/00007/eval_val/acc 0.0878
I1203 10:19:05.242330 139628478494464 hlog.py:18] train/00007{16.26s}
I1203 10:19:17.191524 139628478494464 hlog.py:32] train/00008/loss 0.2800
I1203 10:19:20.507127 139628478494464 hlog.py:32] train/00008/eval_train/acc 0.2760
I1203 10:19:21.078259 139628478494464 hlog.py:32] train/00008/eval_val/acc 0.1824
I1203 10:19:21.078751 139628478494464 hlog.py:18] train/00008{15.84s}
I1203 10:19:32.973917 139628478494464 hlog.py:32] train/00009/loss 0.2374
I1203 10:19:36.347895 139628478494464 hlog.py:32] train/00009/eval_train/acc 0.2780
I1203 10:19:36.899944 139628478494464 hlog.py:32] train/00009/eval_val/acc 0.2230
I1203 10:19:37.012932 139628478494464 hlog.py:18] train/00009{15.93s}
I1203 10:19:48.610943 139628478494464 hlog.py:32] train/00010/loss 0.1988
I1203 10:19:53.362445 139628478494464 hlog.py:32] train/00010/eval_train/acc 0.4220
I1203 10:19:53.996952 139628478494464 hlog.py:32] train/00010/eval_val/acc 0.2703
I1203 10:19:53.997619 139628478494464 hlog.py:18] train/00010{16.98s}
I1203 10:20:05.786969 139628478494464 hlog.py:32] train/00011/loss 0.1949
I1203 10:20:10.434399 139628478494464 hlog.py:32] train/00011/eval_train/acc 0.4380
I1203 10:20:11.066373 139628478494464 hlog.py:32] train/00011/eval_val/acc 0.2703
I1203 10:20:11.066853 139628478494464 hlog.py:18] train/00011{17.07s}
I1203 10:20:23.069853 139628478494464 hlog.py:32] train/00012/loss 0.1841
I1203 10:20:26.704094 139628478494464 hlog.py:32] train/00012/eval_train/acc 0.5060
I1203 10:20:27.317111 139628478494464 hlog.py:32] train/00012/eval_val/acc 0.3378
I1203 10:20:27.317570 139628478494464 hlog.py:18] train/00012{16.25s}
I1203 10:20:39.395581 139628478494464 hlog.py:32] train/00013/loss 0.1740
I1203 10:20:43.326586 139628478494464 hlog.py:32] train/00013/eval_train/acc 0.4830
I1203 10:20:43.891738 139628478494464 hlog.py:32] train/00013/eval_val/acc 0.3851
I1203 10:20:43.892219 139628478494464 hlog.py:18] train/00013{16.57s}
I1203 10:20:56.507418 139628478494464 hlog.py:32] train/00014/loss 0.1611
I1203 10:21:00.440207 139628478494464 hlog.py:32] train/00014/eval_train/acc 0.5200
I1203 10:21:01.035170 139628478494464 hlog.py:32] train/00014/eval_val/acc 0.2838
I1203 10:21:01.035670 139628478494464 hlog.py:18] train/00014{17.14s}
I1203 10:21:12.583876 139628478494464 hlog.py:32] train/00015/loss 0.1421
I1203 10:21:16.198880 139628478494464 hlog.py:32] train/00015/eval_train/acc 0.5800
I1203 10:21:16.737360 139628478494464 hlog.py:32] train/00015/eval_val/acc 0.3649
I1203 10:21:16.737841 139628478494464 hlog.py:18] train/00015{15.70s}
I1203 10:21:27.766403 139628478494464 hlog.py:32] train/00016/loss 0.1470
I1203 10:21:31.693488 139628478494464 hlog.py:32] train/00016/eval_train/acc 0.5560
I1203 10:21:32.283825 139628478494464 hlog.py:32] train/00016/eval_val/acc 0.4189
I1203 10:21:32.284324 139628478494464 hlog.py:18] train/00016{15.55s}
I1203 10:21:43.949036 139628478494464 hlog.py:32] train/00017/loss 0.1208
I1203 10:21:48.181082 139628478494464 hlog.py:32] train/00017/eval_train/acc 0.5780
I1203 10:21:48.812363 139628478494464 hlog.py:32] train/00017/eval_val/acc 0.4527
I1203 10:21:48.812875 139628478494464 hlog.py:18] train/00017{16.53s}
I1203 10:21:59.680280 139628478494464 hlog.py:32] train/00018/loss 0.1036
I1203 10:22:03.468773 139628478494464 hlog.py:32] train/00018/eval_train/acc 0.6660
I1203 10:22:04.083149 139628478494464 hlog.py:32] train/00018/eval_val/acc 0.5405
I1203 10:22:04.083681 139628478494464 hlog.py:18] train/00018{15.27s}
I1203 10:22:15.864147 139628478494464 hlog.py:32] train/00019/loss 0.0898
I1203 10:22:19.797398 139628478494464 hlog.py:32] train/00019/eval_train/acc 0.6920
I1203 10:22:20.382647 139628478494464 hlog.py:32] train/00019/eval_val/acc 0.4932
I1203 10:22:20.540029 139628478494464 hlog.py:18] train/00019{16.46s}
I1203 10:22:33.297720 139628478494464 hlog.py:32] train/00020/loss 0.0840
I1203 10:22:37.276179 139628478494464 hlog.py:32] train/00020/eval_train/acc 0.7260
I1203 10:22:37.887836 139628478494464 hlog.py:32] train/00020/eval_val/acc 0.5270
I1203 10:22:37.888345 139628478494464 hlog.py:18] train/00020{17.35s}
I1203 10:22:49.280853 139628478494464 hlog.py:32] train/00021/loss 0.0734
I1203 10:22:53.034736 139628478494464 hlog.py:32] train/00021/eval_train/acc 0.7480
I1203 10:22:53.593987 139628478494464 hlog.py:32] train/00021/eval_val/acc 0.5338
I1203 10:22:53.594509 139628478494464 hlog.py:18] train/00021{15.71s}
I1203 10:23:04.794591 139628478494464 hlog.py:32] train/00022/loss 0.0732
I1203 10:23:08.409760 139628478494464 hlog.py:32] train/00022/eval_train/acc 0.7830
I1203 10:23:08.975833 139628478494464 hlog.py:32] train/00022/eval_val/acc 0.5878
I1203 10:23:08.976303 139628478494464 hlog.py:18] train/00022{15.38s}
I1203 10:23:20.154218 139628478494464 hlog.py:32] train/00023/loss 0.0836
I1203 10:23:23.835154 139628478494464 hlog.py:32] train/00023/eval_train/acc 0.7570
I1203 10:23:24.392700 139628478494464 hlog.py:32] train/00023/eval_val/acc 0.5608
I1203 10:23:24.393176 139628478494464 hlog.py:18] train/00023{15.42s}
I1203 10:23:35.125062 139628478494464 hlog.py:32] train/00024/loss 0.0835
I1203 10:23:39.538016 139628478494464 hlog.py:32] train/00024/eval_train/acc 0.7100
I1203 10:23:40.180459 139628478494464 hlog.py:32] train/00024/eval_val/acc 0.5541
I1203 10:23:40.181124 139628478494464 hlog.py:18] train/00024{15.79s}
I1203 10:23:51.532799 139628478494464 hlog.py:32] train/00025/loss 0.0849
I1203 10:23:55.203853 139628478494464 hlog.py:32] train/00025/eval_train/acc 0.7180
I1203 10:23:55.761826 139628478494464 hlog.py:32] train/00025/eval_val/acc 0.5135
I1203 10:23:55.762300 139628478494464 hlog.py:18] train/00025{15.58s}
I1203 10:24:07.172178 139628478494464 hlog.py:32] train/00026/loss 0.0919
I1203 10:24:11.236920 139628478494464 hlog.py:32] train/00026/eval_train/acc 0.7640
I1203 10:24:11.844423 139628478494464 hlog.py:32] train/00026/eval_val/acc 0.5676
I1203 10:24:11.845154 139628478494464 hlog.py:18] train/00026{16.08s}
I1203 10:24:23.524161 139628478494464 hlog.py:32] train/00027/loss 0.0769
I1203 10:24:27.262064 139628478494464 hlog.py:32] train/00027/eval_train/acc 0.7780
I1203 10:24:27.790501 139628478494464 hlog.py:32] train/00027/eval_val/acc 0.5541
I1203 10:24:27.790976 139628478494464 hlog.py:18] train/00027{15.95s}
I1203 10:24:40.203775 139628478494464 hlog.py:32] train/00028/loss 0.0669
I1203 10:24:44.073511 139628478494464 hlog.py:32] train/00028/eval_train/acc 0.7900
I1203 10:24:44.656419 139628478494464 hlog.py:32] train/00028/eval_val/acc 0.6351
I1203 10:24:44.656901 139628478494464 hlog.py:18] train/00028{16.87s}
I1203 10:24:55.504230 139628478494464 hlog.py:32] train/00029/loss 0.0547
I1203 10:24:59.596459 139628478494464 hlog.py:32] train/00029/eval_train/acc 0.8060
I1203 10:25:00.169753 139628478494464 hlog.py:32] train/00029/eval_val/acc 0.6622
I1203 10:25:00.202053 139628478494464 hlog.py:18] train/00029{15.55s}
I1203 10:25:12.444052 139628478494464 hlog.py:32] train/00030/loss 0.0478
I1203 10:25:16.160765 139628478494464 hlog.py:32] train/00030/eval_train/acc 0.8570
I1203 10:25:16.722962 139628478494464 hlog.py:32] train/00030/eval_val/acc 0.6149
I1203 10:25:16.723418 139628478494464 hlog.py:18] train/00030{16.52s}
I1203 10:25:27.954477 139628478494464 hlog.py:32] train/00031/loss 0.0428
I1203 10:25:31.623950 139628478494464 hlog.py:32] train/00031/eval_train/acc 0.8870
I1203 10:25:32.192933 139628478494464 hlog.py:32] train/00031/eval_val/acc 0.6486
I1203 10:25:32.193599 139628478494464 hlog.py:18] train/00031{15.47s}
I1203 10:25:43.853300 139628478494464 hlog.py:32] train/00032/loss 0.0428
I1203 10:25:47.777801 139628478494464 hlog.py:32] train/00032/eval_train/acc 0.8780
I1203 10:25:48.347487 139628478494464 hlog.py:32] train/00032/eval_val/acc 0.7162
I1203 10:25:48.348211 139628478494464 hlog.py:18] train/00032{16.15s}
I1203 10:25:59.588272 139628478494464 hlog.py:32] train/00033/loss 0.0401
I1203 10:26:03.182892 139628478494464 hlog.py:32] train/00033/eval_train/acc 0.8990
I1203 10:26:03.762013 139628478494464 hlog.py:32] train/00033/eval_val/acc 0.6486
I1203 10:26:03.762514 139628478494464 hlog.py:18] train/00033{15.41s}
I1203 10:26:15.160518 139628478494464 hlog.py:32] train/00034/loss 0.0348
I1203 10:26:19.014326 139628478494464 hlog.py:32] train/00034/eval_train/acc 0.9070
I1203 10:26:19.573660 139628478494464 hlog.py:32] train/00034/eval_val/acc 0.6689
I1203 10:26:19.574249 139628478494464 hlog.py:18] train/00034{15.81s}
I1203 10:26:30.934535 139628478494464 hlog.py:32] train/00035/loss 0.0380
I1203 10:26:34.799105 139628478494464 hlog.py:32] train/00035/eval_train/acc 0.8920
I1203 10:26:35.391507 139628478494464 hlog.py:32] train/00035/eval_val/acc 0.6622
I1203 10:26:35.391984 139628478494464 hlog.py:18] train/00035{15.82s}
I1203 10:26:47.670037 139628478494464 hlog.py:32] train/00036/loss 0.0368
I1203 10:26:51.606005 139628478494464 hlog.py:32] train/00036/eval_train/acc 0.9080
I1203 10:26:52.157656 139628478494464 hlog.py:32] train/00036/eval_val/acc 0.6689
I1203 10:26:52.158192 139628478494464 hlog.py:18] train/00036{16.77s}
I1203 10:27:04.218847 139628478494464 hlog.py:32] train/00037/loss 0.0466
I1203 10:27:08.293668 139628478494464 hlog.py:32] train/00037/eval_train/acc 0.9100
I1203 10:27:08.856312 139628478494464 hlog.py:32] train/00037/eval_val/acc 0.6149
I1203 10:27:08.856843 139628478494464 hlog.py:18] train/00037{16.70s}
I1203 10:27:19.965098 139628478494464 hlog.py:32] train/00038/loss 0.0372
I1203 10:27:24.630339 139628478494464 hlog.py:32] train/00038/eval_train/acc 0.9170
I1203 10:27:25.173315 139628478494464 hlog.py:32] train/00038/eval_val/acc 0.6419
I1203 10:27:25.173911 139628478494464 hlog.py:18] train/00038{16.32s}
I1203 10:27:36.762290 139628478494464 hlog.py:32] train/00039/loss 0.0374
I1203 10:27:40.605916 139628478494464 hlog.py:32] train/00039/eval_train/acc 0.9350
I1203 10:27:41.181976 139628478494464 hlog.py:32] train/00039/eval_val/acc 0.6689
I1203 10:27:41.341801 139628478494464 hlog.py:18] train/00039{16.17s}
I1203 10:27:52.815483 139628478494464 hlog.py:32] train/00040/loss 0.0430
I1203 10:27:56.958981 139628478494464 hlog.py:32] train/00040/eval_train/acc 0.8980
I1203 10:27:57.565007 139628478494464 hlog.py:32] train/00040/eval_val/acc 0.6081
I1203 10:27:57.565487 139628478494464 hlog.py:18] train/00040{16.22s}
I1203 10:28:08.859581 139628478494464 hlog.py:32] train/00041/loss 0.0588
I1203 10:28:13.308636 139628478494464 hlog.py:32] train/00041/eval_train/acc 0.8960
I1203 10:28:13.880973 139628478494464 hlog.py:32] train/00041/eval_val/acc 0.6284
I1203 10:28:13.881510 139628478494464 hlog.py:18] train/00041{16.32s}
I1203 10:28:25.765137 139628478494464 hlog.py:32] train/00042/loss 0.0512
I1203 10:28:30.076684 139628478494464 hlog.py:32] train/00042/eval_train/acc 0.8920
I1203 10:28:30.686791 139628478494464 hlog.py:32] train/00042/eval_val/acc 0.6554
I1203 10:28:30.687294 139628478494464 hlog.py:18] train/00042{16.81s}
I1203 10:28:43.526805 139628478494464 hlog.py:32] train/00043/loss 0.0478
I1203 10:28:47.268185 139628478494464 hlog.py:32] train/00043/eval_train/acc 0.9270
I1203 10:28:47.817046 139628478494464 hlog.py:32] train/00043/eval_val/acc 0.6216
I1203 10:28:47.817627 139628478494464 hlog.py:18] train/00043{17.13s}
I1203 10:28:58.532927 139628478494464 hlog.py:32] train/00044/loss 0.0335
I1203 10:29:02.540565 139628478494464 hlog.py:32] train/00044/eval_train/acc 0.9330
I1203 10:29:03.110924 139628478494464 hlog.py:32] train/00044/eval_val/acc 0.6554
I1203 10:29:03.111497 139628478494464 hlog.py:18] train/00044{15.29s}
I1203 10:29:14.038954 139628478494464 hlog.py:32] train/00045/loss 0.0323
I1203 10:29:17.835941 139628478494464 hlog.py:32] train/00045/eval_train/acc 0.9430
I1203 10:29:18.404400 139628478494464 hlog.py:32] train/00045/eval_val/acc 0.6622
I1203 10:29:18.404873 139628478494464 hlog.py:18] train/00045{15.29s}
I1203 10:29:30.472883 139628478494464 hlog.py:32] train/00046/loss 0.0294
I1203 10:29:34.149846 139628478494464 hlog.py:32] train/00046/eval_train/acc 0.9640
I1203 10:29:34.678528 139628478494464 hlog.py:32] train/00046/eval_val/acc 0.6622
I1203 10:29:34.679031 139628478494464 hlog.py:18] train/00046{16.27s}
I1203 10:29:46.863646 139628478494464 hlog.py:32] train/00047/loss 0.0246
I1203 10:29:50.592810 139628478494464 hlog.py:32] train/00047/eval_train/acc 0.9730
I1203 10:29:51.190791 139628478494464 hlog.py:32] train/00047/eval_val/acc 0.7027
I1203 10:29:51.191289 139628478494464 hlog.py:18] train/00047{16.51s}
I1203 10:30:02.566987 139628478494464 hlog.py:32] train/00048/loss 0.0202
I1203 10:30:06.167276 139628478494464 hlog.py:32] train/00048/eval_train/acc 0.9780
I1203 10:30:06.753427 139628478494464 hlog.py:32] train/00048/eval_val/acc 0.6892
I1203 10:30:06.753953 139628478494464 hlog.py:18] train/00048{15.56s}
I1203 10:30:18.160033 139628478494464 hlog.py:32] train/00049/loss 0.0174
I1203 10:30:22.126543 139628478494464 hlog.py:32] train/00049/eval_train/acc 0.9800
I1203 10:30:22.647266 139628478494464 hlog.py:32] train/00049/eval_val/acc 0.6892
I1203 10:30:22.676223 139628478494464 hlog.py:18] train/00049{15.92s}
I1203 10:30:34.991770 139628478494464 hlog.py:32] train/00050/loss 0.0184
I1203 10:30:39.067551 139628478494464 hlog.py:32] train/00050/eval_train/acc 0.9820
I1203 10:30:39.651045 139628478494464 hlog.py:32] train/00050/eval_val/acc 0.6824
I1203 10:30:39.651571 139628478494464 hlog.py:18] train/00050{16.98s}
I1203 10:30:50.685026 139628478494464 hlog.py:32] train/00051/loss 0.0186
I1203 10:30:54.471182 139628478494464 hlog.py:32] train/00051/eval_train/acc 0.9740
I1203 10:30:55.016982 139628478494464 hlog.py:32] train/00051/eval_val/acc 0.6959
I1203 10:30:55.017463 139628478494464 hlog.py:18] train/00051{15.37s}
I1203 10:31:06.354319 139628478494464 hlog.py:32] train/00052/loss 0.0234
I1203 10:31:10.338484 139628478494464 hlog.py:32] train/00052/eval_train/acc 0.9840
I1203 10:31:10.927250 139628478494464 hlog.py:32] train/00052/eval_val/acc 0.6824
I1203 10:31:10.927929 139628478494464 hlog.py:18] train/00052{15.91s}
I1203 10:31:22.907866 139628478494464 hlog.py:32] train/00053/loss 0.0163
I1203 10:31:26.663305 139628478494464 hlog.py:32] train/00053/eval_train/acc 0.9840
I1203 10:31:27.225684 139628478494464 hlog.py:32] train/00053/eval_val/acc 0.6824
I1203 10:31:27.226165 139628478494464 hlog.py:18] train/00053{16.30s}
I1203 10:31:38.383687 139628478494464 hlog.py:32] train/00054/loss 0.0157
I1203 10:31:42.457400 139628478494464 hlog.py:32] train/00054/eval_train/acc 0.9800
I1203 10:31:43.065813 139628478494464 hlog.py:32] train/00054/eval_val/acc 0.6486
I1203 10:31:43.066376 139628478494464 hlog.py:18] train/00054{15.84s}
I1203 10:31:55.260502 139628478494464 hlog.py:32] train/00055/loss 0.0144
I1203 10:31:59.322822 139628478494464 hlog.py:32] train/00055/eval_train/acc 0.9890
I1203 10:31:59.882315 139628478494464 hlog.py:32] train/00055/eval_val/acc 0.6689
I1203 10:31:59.882790 139628478494464 hlog.py:18] train/00055{16.82s}
I1203 10:32:11.807589 139628478494464 hlog.py:32] train/00056/loss 0.0123
I1203 10:32:15.605756 139628478494464 hlog.py:32] train/00056/eval_train/acc 0.9890
I1203 10:32:16.185341 139628478494464 hlog.py:32] train/00056/eval_val/acc 0.7162
I1203 10:32:16.185833 139628478494464 hlog.py:18] train/00056{16.30s}
I1203 10:32:27.989003 139628478494464 hlog.py:32] train/00057/loss 0.0132
I1203 10:32:32.047837 139628478494464 hlog.py:32] train/00057/eval_train/acc 0.9880
I1203 10:32:32.605307 139628478494464 hlog.py:32] train/00057/eval_val/acc 0.7297
I1203 10:32:32.605817 139628478494464 hlog.py:18] train/00057{16.42s}
I1203 10:32:44.645750 139628478494464 hlog.py:32] train/00058/loss 0.0121
I1203 10:32:48.534825 139628478494464 hlog.py:32] train/00058/eval_train/acc 0.9820
I1203 10:32:49.081548 139628478494464 hlog.py:32] train/00058/eval_val/acc 0.6824
I1203 10:32:49.082056 139628478494464 hlog.py:18] train/00058{16.48s}
I1203 10:33:01.167907 139628478494464 hlog.py:32] train/00059/loss 0.0130
I1203 10:33:05.043250 139628478494464 hlog.py:32] train/00059/eval_train/acc 0.9860
I1203 10:33:05.581493 139628478494464 hlog.py:32] train/00059/eval_val/acc 0.6757
I1203 10:33:05.738058 139628478494464 hlog.py:18] train/00059{16.66s}
I1203 10:33:17.886740 139628478494464 hlog.py:32] train/00060/loss 0.0113
I1203 10:33:21.656485 139628478494464 hlog.py:32] train/00060/eval_train/acc 0.9930
I1203 10:33:22.180740 139628478494464 hlog.py:32] train/00060/eval_val/acc 0.7230
I1203 10:33:22.181201 139628478494464 hlog.py:18] train/00060{16.44s}
I1203 10:33:34.250556 139628478494464 hlog.py:32] train/00061/loss 0.0115
I1203 10:33:38.130412 139628478494464 hlog.py:32] train/00061/eval_train/acc 0.9970
I1203 10:33:38.689833 139628478494464 hlog.py:32] train/00061/eval_val/acc 0.7162
I1203 10:33:38.690509 139628478494464 hlog.py:18] train/00061{16.51s}
I1203 10:33:50.933251 139628478494464 hlog.py:32] train/00062/loss 0.0111
I1203 10:33:54.871735 139628478494464 hlog.py:32] train/00062/eval_train/acc 0.9890
I1203 10:33:55.411325 139628478494464 hlog.py:32] train/00062/eval_val/acc 0.6959
I1203 10:33:55.411821 139628478494464 hlog.py:18] train/00062{16.72s}
I1203 10:34:06.115692 139628478494464 hlog.py:32] train/00063/loss 0.0094
I1203 10:34:10.162007 139628478494464 hlog.py:32] train/00063/eval_train/acc 0.9880
I1203 10:34:10.723026 139628478494464 hlog.py:32] train/00063/eval_val/acc 0.6959
I1203 10:34:10.723579 139628478494464 hlog.py:18] train/00063{15.31s}
I1203 10:34:22.326413 139628478494464 hlog.py:32] train/00064/loss 0.0107
I1203 10:34:26.466799 139628478494464 hlog.py:32] train/00064/eval_train/acc 0.9920
I1203 10:34:26.995837 139628478494464 hlog.py:32] train/00064/eval_val/acc 0.7230
I1203 10:34:26.996331 139628478494464 hlog.py:18] train/00064{16.27s}
I1203 10:34:38.681903 139628478494464 hlog.py:32] train/00065/loss 0.0096
I1203 10:34:42.574586 139628478494464 hlog.py:32] train/00065/eval_train/acc 0.9940
I1203 10:34:43.127630 139628478494464 hlog.py:32] train/00065/eval_val/acc 0.7027
I1203 10:34:43.128196 139628478494464 hlog.py:18] train/00065{16.13s}
I1203 10:34:54.377300 139628478494464 hlog.py:32] train/00066/loss 0.0091
I1203 10:34:58.096514 139628478494464 hlog.py:32] train/00066/eval_train/acc 0.9960
I1203 10:34:58.682249 139628478494464 hlog.py:32] train/00066/eval_val/acc 0.7095
I1203 10:34:58.682762 139628478494464 hlog.py:18] train/00066{15.55s}
I1203 10:35:10.264016 139628478494464 hlog.py:32] train/00067/loss 0.0090
I1203 10:35:13.991285 139628478494464 hlog.py:32] train/00067/eval_train/acc 0.9970
I1203 10:35:14.539583 139628478494464 hlog.py:32] train/00067/eval_val/acc 0.7230
I1203 10:35:14.540146 139628478494464 hlog.py:18] train/00067{15.86s}
I1203 10:35:25.955602 139628478494464 hlog.py:32] train/00068/loss 0.0085
I1203 10:35:29.759470 139628478494464 hlog.py:32] train/00068/eval_train/acc 0.9980
I1203 10:35:30.338894 139628478494464 hlog.py:32] train/00068/eval_val/acc 0.7027
I1203 10:35:30.339496 139628478494464 hlog.py:18] train/00068{15.80s}
I1203 10:35:42.031516 139628478494464 hlog.py:32] train/00069/loss 0.0095
I1203 10:35:45.708793 139628478494464 hlog.py:32] train/00069/eval_train/acc 0.9910
I1203 10:35:46.295875 139628478494464 hlog.py:32] train/00069/eval_val/acc 0.7095
I1203 10:35:46.325727 139628478494464 hlog.py:18] train/00069{15.99s}
I1203 10:35:58.028273 139628478494464 hlog.py:32] train/00070/loss 0.0089
I1203 10:36:01.923975 139628478494464 hlog.py:32] train/00070/eval_train/acc 0.9970
I1203 10:36:02.480296 139628478494464 hlog.py:32] train/00070/eval_val/acc 0.7297
I1203 10:36:02.480772 139628478494464 hlog.py:18] train/00070{16.15s}
I1203 10:36:14.149035 139628478494464 hlog.py:32] train/00071/loss 0.0085
I1203 10:36:17.747585 139628478494464 hlog.py:32] train/00071/eval_train/acc 0.9980
I1203 10:36:18.267969 139628478494464 hlog.py:32] train/00071/eval_val/acc 0.7230
I1203 10:36:18.268461 139628478494464 hlog.py:18] train/00071{15.79s}
I1203 10:36:30.588405 139628478494464 hlog.py:32] train/00072/loss 0.0077
I1203 10:36:34.332473 139628478494464 hlog.py:32] train/00072/eval_train/acc 0.9940
I1203 10:36:34.896240 139628478494464 hlog.py:32] train/00072/eval_val/acc 0.7230
I1203 10:36:34.896721 139628478494464 hlog.py:18] train/00072{16.63s}
I1203 10:36:45.839281 139628478494464 hlog.py:32] train/00073/loss 0.0112
I1203 10:36:49.751610 139628478494464 hlog.py:32] train/00073/eval_train/acc 1.0000
I1203 10:36:50.286068 139628478494464 hlog.py:32] train/00073/eval_val/acc 0.6959
I1203 10:36:50.286552 139628478494464 hlog.py:18] train/00073{15.39s}
I1203 10:37:02.524135 139628478494464 hlog.py:32] train/00074/loss 0.0088
I1203 10:37:06.304138 139628478494464 hlog.py:32] train/00074/eval_train/acc 0.9950
I1203 10:37:06.862115 139628478494464 hlog.py:32] train/00074/eval_val/acc 0.6959
I1203 10:37:06.862597 139628478494464 hlog.py:18] train/00074{16.58s}
I1203 10:37:18.778274 139628478494464 hlog.py:32] train/00075/loss 0.0080
I1203 10:37:22.724578 139628478494464 hlog.py:32] train/00075/eval_train/acc 0.9990
I1203 10:37:23.323950 139628478494464 hlog.py:32] train/00075/eval_val/acc 0.7162
I1203 10:37:23.324461 139628478494464 hlog.py:18] train/00075{16.46s}
I1203 10:37:35.191612 139628478494464 hlog.py:32] train/00076/loss 0.0077
I1203 10:37:39.140361 139628478494464 hlog.py:32] train/00076/eval_train/acc 0.9940
I1203 10:37:39.696365 139628478494464 hlog.py:32] train/00076/eval_val/acc 0.7230
I1203 10:37:39.696849 139628478494464 hlog.py:18] train/00076{16.37s}
I1203 10:37:50.846398 139628478494464 hlog.py:32] train/00077/loss 0.0075
I1203 10:37:55.061592 139628478494464 hlog.py:32] train/00077/eval_train/acc 0.9940
I1203 10:37:55.618707 139628478494464 hlog.py:32] train/00077/eval_val/acc 0.7230
I1203 10:37:55.619373 139628478494464 hlog.py:18] train/00077{15.92s}
I1203 10:38:08.271159 139628478494464 hlog.py:32] train/00078/loss 0.0093
I1203 10:38:11.978534 139628478494464 hlog.py:32] train/00078/eval_train/acc 0.9950
I1203 10:38:12.526370 139628478494464 hlog.py:32] train/00078/eval_val/acc 0.7297
I1203 10:38:12.526860 139628478494464 hlog.py:18] train/00078{16.91s}
I1203 10:38:24.085161 139628478494464 hlog.py:32] train/00079/loss 0.0078
I1203 10:38:27.902816 139628478494464 hlog.py:32] train/00079/eval_train/acc 1.0000
I1203 10:38:28.463898 139628478494464 hlog.py:32] train/00079/eval_val/acc 0.7162
I1203 10:38:28.683546 139628478494464 hlog.py:18] train/00079{16.16s}
I1203 10:38:40.477129 139628478494464 hlog.py:32] train/00080/loss 0.0082
I1203 10:38:44.271226 139628478494464 hlog.py:32] train/00080/eval_train/acc 0.9990
I1203 10:38:44.809067 139628478494464 hlog.py:32] train/00080/eval_val/acc 0.7230
I1203 10:38:44.809556 139628478494464 hlog.py:18] train/00080{16.13s}
I1203 10:38:57.109561 139628478494464 hlog.py:32] train/00081/loss 0.0088
I1203 10:39:01.055844 139628478494464 hlog.py:32] train/00081/eval_train/acc 1.0000
I1203 10:39:01.595216 139628478494464 hlog.py:32] train/00081/eval_val/acc 0.7162
I1203 10:39:01.595718 139628478494464 hlog.py:18] train/00081{16.79s}
I1203 10:39:13.527105 139628478494464 hlog.py:32] train/00082/loss 0.0077
I1203 10:39:17.000684 139628478494464 hlog.py:32] train/00082/eval_train/acc 0.9990
I1203 10:39:17.549272 139628478494464 hlog.py:32] train/00082/eval_val/acc 0.7297
I1203 10:39:17.549751 139628478494464 hlog.py:18] train/00082{15.95s}
I1203 10:39:29.589994 139628478494464 hlog.py:32] train/00083/loss 0.0068
I1203 10:39:33.462804 139628478494464 hlog.py:32] train/00083/eval_train/acc 0.9980
I1203 10:39:34.000868 139628478494464 hlog.py:32] train/00083/eval_val/acc 0.7365
I1203 10:39:34.001356 139628478494464 hlog.py:18] train/00083{16.45s}
I1203 10:39:46.015118 139628478494464 hlog.py:32] train/00084/loss 0.0074
I1203 10:39:49.768289 139628478494464 hlog.py:32] train/00084/eval_train/acc 0.9980
I1203 10:39:50.290545 139628478494464 hlog.py:32] train/00084/eval_val/acc 0.7162
I1203 10:39:50.291042 139628478494464 hlog.py:18] train/00084{16.29s}
I1203 10:40:02.213075 139628478494464 hlog.py:32] train/00085/loss 0.0076
I1203 10:40:06.287986 139628478494464 hlog.py:32] train/00085/eval_train/acc 0.9920
I1203 10:40:06.842190 139628478494464 hlog.py:32] train/00085/eval_val/acc 0.7297
I1203 10:40:06.842672 139628478494464 hlog.py:18] train/00085{16.55s}
I1203 10:40:18.727277 139628478494464 hlog.py:32] train/00086/loss 0.0069
I1203 10:40:22.751384 139628478494464 hlog.py:32] train/00086/eval_train/acc 0.9960
I1203 10:40:23.308049 139628478494464 hlog.py:32] train/00086/eval_val/acc 0.7230
I1203 10:40:23.308721 139628478494464 hlog.py:18] train/00086{16.47s}
I1203 10:40:34.607970 139628478494464 hlog.py:32] train/00087/loss 0.0066
I1203 10:40:38.543917 139628478494464 hlog.py:32] train/00087/eval_train/acc 0.9980
I1203 10:40:39.079675 139628478494464 hlog.py:32] train/00087/eval_val/acc 0.7230
I1203 10:40:39.080175 139628478494464 hlog.py:18] train/00087{15.77s}
I1203 10:40:51.337239 139628478494464 hlog.py:32] train/00088/loss 0.0068
I1203 10:40:55.221468 139628478494464 hlog.py:32] train/00088/eval_train/acc 0.9930
I1203 10:40:55.766988 139628478494464 hlog.py:32] train/00088/eval_val/acc 0.7297
I1203 10:40:55.767661 139628478494464 hlog.py:18] train/00088{16.69s}
I1203 10:41:07.756088 139628478494464 hlog.py:32] train/00089/loss 0.0068
I1203 10:41:11.619098 139628478494464 hlog.py:32] train/00089/eval_train/acc 0.9990
I1203 10:41:12.139269 139628478494464 hlog.py:32] train/00089/eval_val/acc 0.7432
I1203 10:41:12.167745 139628478494464 hlog.py:18] train/00089{16.40s}
I1203 10:41:24.201218 139628478494464 hlog.py:32] train/00090/loss 0.0072
I1203 10:41:28.645523 139628478494464 hlog.py:32] train/00090/eval_train/acc 0.9980
I1203 10:41:29.184639 139628478494464 hlog.py:32] train/00090/eval_val/acc 0.7365
I1203 10:41:29.185161 139628478494464 hlog.py:18] train/00090{17.02s}
I1203 10:41:40.143621 139628478494464 hlog.py:32] train/00091/loss 0.0069
I1203 10:41:43.971364 139628478494464 hlog.py:32] train/00091/eval_train/acc 0.9980
I1203 10:41:44.513761 139628478494464 hlog.py:32] train/00091/eval_val/acc 0.7297
I1203 10:41:44.514278 139628478494464 hlog.py:18] train/00091{15.33s}
I1203 10:41:57.083864 139628478494464 hlog.py:32] train/00092/loss 0.0073
I1203 10:42:00.936035 139628478494464 hlog.py:32] train/00092/eval_train/acc 0.9990
I1203 10:42:01.495463 139628478494464 hlog.py:32] train/00092/eval_val/acc 0.7230
I1203 10:42:01.495970 139628478494464 hlog.py:18] train/00092{16.98s}
I1203 10:42:12.894131 139628478494464 hlog.py:32] train/00093/loss 0.0068
I1203 10:42:16.950659 139628478494464 hlog.py:32] train/00093/eval_train/acc 0.9990
I1203 10:42:17.483130 139628478494464 hlog.py:32] train/00093/eval_val/acc 0.7297
I1203 10:42:17.483897 139628478494464 hlog.py:18] train/00093{15.99s}
I1203 10:42:28.274905 139628478494464 hlog.py:32] train/00094/loss 0.0062
I1203 10:42:32.629623 139628478494464 hlog.py:32] train/00094/eval_train/acc 0.9990
I1203 10:42:33.158271 139628478494464 hlog.py:32] train/00094/eval_val/acc 0.7230
I1203 10:42:33.158746 139628478494464 hlog.py:18] train/00094{15.67s}
I1203 10:42:45.313610 139628478494464 hlog.py:32] train/00095/loss 0.0066
I1203 10:42:49.305575 139628478494464 hlog.py:32] train/00095/eval_train/acc 0.9940
I1203 10:42:49.859225 139628478494464 hlog.py:32] train/00095/eval_val/acc 0.7297
I1203 10:42:49.859950 139628478494464 hlog.py:18] train/00095{16.70s}
I1203 10:43:01.097126 139628478494464 hlog.py:32] train/00096/loss 0.0062
I1203 10:43:05.109983 139628478494464 hlog.py:32] train/00096/eval_train/acc 0.9950
I1203 10:43:05.642812 139628478494464 hlog.py:32] train/00096/eval_val/acc 0.7365
I1203 10:43:05.643345 139628478494464 hlog.py:18] train/00096{15.78s}
I1203 10:43:16.872563 139628478494464 hlog.py:32] train/00097/loss 0.0058
I1203 10:43:20.788258 139628478494464 hlog.py:32] train/00097/eval_train/acc 0.9970
I1203 10:43:21.316142 139628478494464 hlog.py:32] train/00097/eval_val/acc 0.7365
I1203 10:43:21.316628 139628478494464 hlog.py:18] train/00097{15.67s}
I1203 10:43:32.656878 139628478494464 hlog.py:32] train/00098/loss 0.0049
I1203 10:43:36.321319 139628478494464 hlog.py:32] train/00098/eval_train/acc 0.9990
I1203 10:43:36.876026 139628478494464 hlog.py:32] train/00098/eval_val/acc 0.7365
I1203 10:43:36.876517 139628478494464 hlog.py:18] train/00098{15.56s}
I1203 10:43:48.300358 139628478494464 hlog.py:32] train/00099/loss 0.0059
I1203 10:43:52.429642 139628478494464 hlog.py:32] train/00099/eval_train/acc 1.0000
I1203 10:43:52.992447 139628478494464 hlog.py:32] train/00099/eval_val/acc 0.7297
I1203 10:43:53.024065 139628478494464 hlog.py:18] train/00099{16.15s}
I1203 10:44:05.021655 139628478494464 hlog.py:32] train/00100/loss 0.0067
I1203 10:44:09.164537 139628478494464 hlog.py:32] train/00100/eval_train/acc 0.9970
I1203 10:44:09.731704 139628478494464 hlog.py:32] train/00100/eval_val/acc 0.7230
I1203 10:44:09.732464 139628478494464 hlog.py:18] train/00100{16.71s}
I1203 10:44:21.200529 139628478494464 hlog.py:32] train/00101/loss 0.0077
I1203 10:44:25.222433 139628478494464 hlog.py:32] train/00101/eval_train/acc 0.9980
I1203 10:44:25.793879 139628478494464 hlog.py:32] train/00101/eval_val/acc 0.7365
I1203 10:44:25.794398 139628478494464 hlog.py:18] train/00101{16.06s}
I1203 10:44:37.398979 139628478494464 hlog.py:32] train/00102/loss 0.0065
I1203 10:44:41.141132 139628478494464 hlog.py:32] train/00102/eval_train/acc 1.0000
I1203 10:44:41.679663 139628478494464 hlog.py:32] train/00102/eval_val/acc 0.7297
I1203 10:44:41.680150 139628478494464 hlog.py:18] train/00102{15.89s}
I1203 10:44:53.128302 139628478494464 hlog.py:32] train/00103/loss 0.0059
I1203 10:44:57.050734 139628478494464 hlog.py:32] train/00103/eval_train/acc 0.9980
I1203 10:44:57.602526 139628478494464 hlog.py:32] train/00103/eval_val/acc 0.7230
I1203 10:44:57.603029 139628478494464 hlog.py:18] train/00103{15.92s}
I1203 10:45:08.775709 139628478494464 hlog.py:32] train/00104/loss 0.0065
I1203 10:45:12.753600 139628478494464 hlog.py:32] train/00104/eval_train/acc 0.9980
I1203 10:45:13.292668 139628478494464 hlog.py:32] train/00104/eval_val/acc 0.7230
I1203 10:45:13.293127 139628478494464 hlog.py:18] train/00104{15.69s}
I1203 10:45:25.156181 139628478494464 hlog.py:32] train/00105/loss 0.0059
I1203 10:45:29.218529 139628478494464 hlog.py:32] train/00105/eval_train/acc 0.9940
I1203 10:45:29.756860 139628478494464 hlog.py:32] train/00105/eval_val/acc 0.7230
I1203 10:45:29.757356 139628478494464 hlog.py:18] train/00105{16.46s}
I1203 10:45:41.536690 139628478494464 hlog.py:32] train/00106/loss 0.0052
I1203 10:45:45.397019 139628478494464 hlog.py:32] train/00106/eval_train/acc 0.9970
I1203 10:45:45.933600 139628478494464 hlog.py:32] train/00106/eval_val/acc 0.7230
I1203 10:45:45.934095 139628478494464 hlog.py:18] train/00106{16.18s}
I1203 10:45:57.032826 139628478494464 hlog.py:32] train/00107/loss 0.0057
I1203 10:46:00.830026 139628478494464 hlog.py:32] train/00107/eval_train/acc 0.9970
I1203 10:46:01.364681 139628478494464 hlog.py:32] train/00107/eval_val/acc 0.7297
I1203 10:46:01.365195 139628478494464 hlog.py:18] train/00107{15.43s}
I1203 10:46:12.743573 139628478494464 hlog.py:32] train/00108/loss 0.0055
I1203 10:46:16.457769 139628478494464 hlog.py:32] train/00108/eval_train/acc 0.9990
I1203 10:46:16.996421 139628478494464 hlog.py:32] train/00108/eval_val/acc 0.7365
I1203 10:46:16.996920 139628478494464 hlog.py:18] train/00108{15.63s}
I1203 10:46:29.100369 139628478494464 hlog.py:32] train/00109/loss 0.0059
I1203 10:46:32.794208 139628478494464 hlog.py:32] train/00109/eval_train/acc 0.9980
I1203 10:46:33.371415 139628478494464 hlog.py:32] train/00109/eval_val/acc 0.7365
I1203 10:46:33.400372 139628478494464 hlog.py:18] train/00109{16.40s}
I1203 10:46:44.612210 139628478494464 hlog.py:32] train/00110/loss 0.0056
I1203 10:46:48.275768 139628478494464 hlog.py:32] train/00110/eval_train/acc 0.9990
I1203 10:46:48.816519 139628478494464 hlog.py:32] train/00110/eval_val/acc 0.7365
I1203 10:46:48.817012 139628478494464 hlog.py:18] train/00110{15.42s}
I1203 10:47:01.057091 139628478494464 hlog.py:32] train/00111/loss 0.0064
I1203 10:47:05.057281 139628478494464 hlog.py:32] train/00111/eval_train/acc 0.9990
I1203 10:47:05.613784 139628478494464 hlog.py:32] train/00111/eval_val/acc 0.7432
I1203 10:47:05.614373 139628478494464 hlog.py:18] train/00111{16.80s}
I1203 10:47:16.973174 139628478494464 hlog.py:32] train/00112/loss 0.0064
I1203 10:47:20.756923 139628478494464 hlog.py:32] train/00112/eval_train/acc 0.9950
I1203 10:47:21.330659 139628478494464 hlog.py:32] train/00112/eval_val/acc 0.7432
I1203 10:47:21.331329 139628478494464 hlog.py:18] train/00112{15.72s}
I1203 10:47:32.916871 139628478494464 hlog.py:32] train/00113/loss 0.0056
I1203 10:47:36.620441 139628478494464 hlog.py:32] train/00113/eval_train/acc 1.0000
I1203 10:47:37.167161 139628478494464 hlog.py:32] train/00113/eval_val/acc 0.7432
I1203 10:47:37.167865 139628478494464 hlog.py:18] train/00113{15.84s}
I1203 10:47:49.495471 139628478494464 hlog.py:32] train/00114/loss 0.0065
I1203 10:47:53.100740 139628478494464 hlog.py:32] train/00114/eval_train/acc 0.9990
I1203 10:47:53.638634 139628478494464 hlog.py:32] train/00114/eval_val/acc 0.7365
I1203 10:47:53.639088 139628478494464 hlog.py:18] train/00114{16.47s}
I1203 10:48:05.314490 139628478494464 hlog.py:32] train/00115/loss 0.0054
I1203 10:48:09.093555 139628478494464 hlog.py:32] train/00115/eval_train/acc 0.9950
I1203 10:48:09.635067 139628478494464 hlog.py:32] train/00115/eval_val/acc 0.7365
I1203 10:48:09.635623 139628478494464 hlog.py:18] train/00115{16.00s}
I1203 10:48:21.595904 139628478494464 hlog.py:32] train/00116/loss 0.0062
I1203 10:48:25.302620 139628478494464 hlog.py:32] train/00116/eval_train/acc 0.9970
I1203 10:48:25.889813 139628478494464 hlog.py:32] train/00116/eval_val/acc 0.7432
I1203 10:48:25.890487 139628478494464 hlog.py:18] train/00116{16.25s}
I1203 10:48:37.871319 139628478494464 hlog.py:32] train/00117/loss 0.0063
I1203 10:48:41.587017 139628478494464 hlog.py:32] train/00117/eval_train/acc 0.9970
I1203 10:48:42.155013 139628478494464 hlog.py:32] train/00117/eval_val/acc 0.7432
I1203 10:48:42.155583 139628478494464 hlog.py:18] train/00117{16.26s}
I1203 10:48:54.214918 139628478494464 hlog.py:32] train/00118/loss 0.0060
I1203 10:48:57.812894 139628478494464 hlog.py:32] train/00118/eval_train/acc 0.9960
I1203 10:48:58.349232 139628478494464 hlog.py:32] train/00118/eval_val/acc 0.7432
I1203 10:48:58.349720 139628478494464 hlog.py:18] train/00118{16.19s}
I1203 10:49:10.849579 139628478494464 hlog.py:32] train/00119/loss 0.0060
I1203 10:49:14.678560 139628478494464 hlog.py:32] train/00119/eval_train/acc 0.9960
I1203 10:49:15.277493 139628478494464 hlog.py:32] train/00119/eval_val/acc 0.7365
I1203 10:49:15.308007 139628478494464 hlog.py:18] train/00119{16.96s}
I1203 10:49:26.596330 139628478494464 hlog.py:32] train/00120/loss 0.0056
I1203 10:49:30.468605 139628478494464 hlog.py:32] train/00120/eval_train/acc 1.0000
I1203 10:49:31.006927 139628478494464 hlog.py:32] train/00120/eval_val/acc 0.7432
I1203 10:49:31.007445 139628478494464 hlog.py:18] train/00120{15.70s}
I1203 10:49:42.180024 139628478494464 hlog.py:32] train/00121/loss 0.0057
I1203 10:49:46.250016 139628478494464 hlog.py:32] train/00121/eval_train/acc 0.9990
I1203 10:49:46.799800 139628478494464 hlog.py:32] train/00121/eval_val/acc 0.7432
I1203 10:49:46.800324 139628478494464 hlog.py:18] train/00121{15.79s}
I1203 10:49:58.825656 139628478494464 hlog.py:32] train/00122/loss 0.0059
I1203 10:50:02.934650 139628478494464 hlog.py:32] train/00122/eval_train/acc 0.9980
I1203 10:50:03.474406 139628478494464 hlog.py:32] train/00122/eval_val/acc 0.7432
I1203 10:50:03.474951 139628478494464 hlog.py:18] train/00122{16.67s}
I1203 10:50:15.746487 139628478494464 hlog.py:32] train/00123/loss 0.0060
I1203 10:50:19.458050 139628478494464 hlog.py:32] train/00123/eval_train/acc 1.0000
I1203 10:50:20.031148 139628478494464 hlog.py:32] train/00123/eval_val/acc 0.7432
I1203 10:50:20.032173 139628478494464 hlog.py:18] train/00123{16.56s}
I1203 10:50:31.572639 139628478494464 hlog.py:32] train/00124/loss 0.0054
I1203 10:50:35.310321 139628478494464 hlog.py:32] train/00124/eval_train/acc 0.9980
I1203 10:50:35.847729 139628478494464 hlog.py:32] train/00124/eval_val/acc 0.7432
I1203 10:50:35.848185 139628478494464 hlog.py:18] train/00124{15.82s}
I1203 10:50:47.330515 139628478494464 hlog.py:32] train/00125/loss 0.0055
I1203 10:50:51.106827 139628478494464 hlog.py:32] train/00125/eval_train/acc 0.9990
I1203 10:50:51.661036 139628478494464 hlog.py:32] train/00125/eval_val/acc 0.7432
I1203 10:50:51.661548 139628478494464 hlog.py:18] train/00125{15.81s}
I1203 10:51:05.477452 139628478494464 hlog.py:32] train/00126/loss 0.0060
I1203 10:51:09.442567 139628478494464 hlog.py:32] train/00126/eval_train/acc 0.9990
I1203 10:51:10.024823 139628478494464 hlog.py:32] train/00126/eval_val/acc 0.7432
I1203 10:51:10.025356 139628478494464 hlog.py:18] train/00126{18.36s}
I1203 10:51:22.500148 139628478494464 hlog.py:32] train/00127/loss 0.0055
I1203 10:51:26.228509 139628478494464 hlog.py:32] train/00127/eval_train/acc 0.9970
I1203 10:51:26.772244 139628478494464 hlog.py:32] train/00127/eval_val/acc 0.7432
I1203 10:51:26.772737 139628478494464 hlog.py:18] train/00127{16.75s}
I1203 10:51:37.730332 139628478494464 hlog.py:32] train/00128/loss 0.0055
I1203 10:51:41.912053 139628478494464 hlog.py:32] train/00128/eval_train/acc 0.9980
I1203 10:51:42.462168 139628478494464 hlog.py:32] train/00128/eval_val/acc 0.7432
I1203 10:51:42.462674 139628478494464 hlog.py:18] train/00128{15.69s}
I1203 10:51:55.470168 139628478494464 hlog.py:32] train/00129/loss 0.0064
I1203 10:51:59.516955 139628478494464 hlog.py:32] train/00129/eval_train/acc 1.0000
I1203 10:52:00.076674 139628478494464 hlog.py:32] train/00129/eval_val/acc 0.7432
I1203 10:52:00.106658 139628478494464 hlog.py:18] train/00129{17.64s}
I1203 10:52:12.176604 139628478494464 hlog.py:32] train/00130/loss 0.0054
I1203 10:52:16.248234 139628478494464 hlog.py:32] train/00130/eval_train/acc 1.0000
I1203 10:52:16.825659 139628478494464 hlog.py:32] train/00130/eval_val/acc 0.7432
I1203 10:52:16.826332 139628478494464 hlog.py:18] train/00130{16.72s}
I1203 10:52:28.705492 139628478494464 hlog.py:32] train/00131/loss 0.0053
I1203 10:52:32.424245 139628478494464 hlog.py:32] train/00131/eval_train/acc 0.9940
I1203 10:52:32.984451 139628478494464 hlog.py:32] train/00131/eval_val/acc 0.7432
I1203 10:52:32.984996 139628478494464 hlog.py:18] train/00131{16.16s}
I1203 10:52:45.002201 139628478494464 hlog.py:32] train/00132/loss 0.0057
I1203 10:52:49.170226 139628478494464 hlog.py:32] train/00132/eval_train/acc 0.9980
I1203 10:52:49.717177 139628478494464 hlog.py:32] train/00132/eval_val/acc 0.7432
I1203 10:52:49.717674 139628478494464 hlog.py:18] train/00132{16.73s}
I1203 10:53:01.714375 139628478494464 hlog.py:32] train/00133/loss 0.0061
I1203 10:53:05.755897 139628478494464 hlog.py:32] train/00133/eval_train/acc 0.9960
I1203 10:53:06.342685 139628478494464 hlog.py:32] train/00133/eval_val/acc 0.7365
I1203 10:53:06.343475 139628478494464 hlog.py:18] train/00133{16.63s}
I1203 10:53:17.983346 139628478494464 hlog.py:32] train/00134/loss 0.0055
I1203 10:53:21.883751 139628478494464 hlog.py:32] train/00134/eval_train/acc 0.9950
I1203 10:53:22.421206 139628478494464 hlog.py:32] train/00134/eval_val/acc 0.7432
I1203 10:53:22.421680 139628478494464 hlog.py:18] train/00134{16.08s}
I1203 10:53:34.119541 139628478494464 hlog.py:32] train/00135/loss 0.0051
I1203 10:53:37.990361 139628478494464 hlog.py:32] train/00135/eval_train/acc 0.9950
I1203 10:53:38.530762 139628478494464 hlog.py:32] train/00135/eval_val/acc 0.7432
I1203 10:53:38.531243 139628478494464 hlog.py:18] train/00135{16.11s}
I1203 10:53:49.993432 139628478494464 hlog.py:32] train/00136/loss 0.0049
I1203 10:53:53.892767 139628478494464 hlog.py:32] train/00136/eval_train/acc 0.9970
I1203 10:53:54.467224 139628478494464 hlog.py:32] train/00136/eval_val/acc 0.7365
I1203 10:53:54.467771 139628478494464 hlog.py:18] train/00136{15.94s}
I1203 10:54:06.781868 139628478494464 hlog.py:32] train/00137/loss 0.0064
I1203 10:54:10.722563 139628478494464 hlog.py:32] train/00137/eval_train/acc 0.9940
I1203 10:54:11.290011 139628478494464 hlog.py:32] train/00137/eval_val/acc 0.7365
I1203 10:54:11.290619 139628478494464 hlog.py:18] train/00137{16.82s}
I1203 10:54:22.694103 139628478494464 hlog.py:32] train/00138/loss 0.0055
I1203 10:54:26.354343 139628478494464 hlog.py:32] train/00138/eval_train/acc 1.0000
I1203 10:54:26.894924 139628478494464 hlog.py:32] train/00138/eval_val/acc 0.7365
I1203 10:54:26.895431 139628478494464 hlog.py:18] train/00138{15.60s}
I1203 10:54:38.030779 139628478494464 hlog.py:32] train/00139/loss 0.0068
I1203 10:54:42.036501 139628478494464 hlog.py:32] train/00139/eval_train/acc 0.9990
I1203 10:54:42.602141 139628478494464 hlog.py:32] train/00139/eval_val/acc 0.7365
I1203 10:54:42.640486 139628478494464 hlog.py:18] train/00139{15.74s}
I1203 10:54:55.512373 139628478494464 hlog.py:32] train/00140/loss 0.0060
I1203 10:54:59.647212 139628478494464 hlog.py:32] train/00140/eval_train/acc 0.9990
I1203 10:55:00.183642 139628478494464 hlog.py:32] train/00140/eval_val/acc 0.7365
I1203 10:55:00.184128 139628478494464 hlog.py:18] train/00140{17.54s}
I1203 10:55:11.800942 139628478494464 hlog.py:32] train/00141/loss 0.0059
I1203 10:55:15.610584 139628478494464 hlog.py:32] train/00141/eval_train/acc 0.9980
I1203 10:55:16.172152 139628478494464 hlog.py:32] train/00141/eval_val/acc 0.7365
I1203 10:55:16.172830 139628478494464 hlog.py:18] train/00141{15.99s}
I1203 10:55:27.313742 139628478494464 hlog.py:32] train/00142/loss 0.0050
I1203 10:55:31.102341 139628478494464 hlog.py:32] train/00142/eval_train/acc 0.9980
I1203 10:55:31.639484 139628478494464 hlog.py:32] train/00142/eval_val/acc 0.7365
I1203 10:55:31.639975 139628478494464 hlog.py:18] train/00142{15.47s}
I1203 10:55:43.054502 139628478494464 hlog.py:32] train/00143/loss 0.0062
I1203 10:55:46.869652 139628478494464 hlog.py:32] train/00143/eval_train/acc 0.9970
I1203 10:55:47.439819 139628478494464 hlog.py:32] train/00143/eval_val/acc 0.7432
I1203 10:55:47.440322 139628478494464 hlog.py:18] train/00143{15.80s}
I1203 10:55:58.167031 139628478494464 hlog.py:32] train/00144/loss 0.0055
I1203 10:56:02.120005 139628478494464 hlog.py:32] train/00144/eval_train/acc 0.9990
I1203 10:56:02.691379 139628478494464 hlog.py:32] train/00144/eval_val/acc 0.7365
I1203 10:56:02.692079 139628478494464 hlog.py:18] train/00144{15.25s}
I1203 10:56:13.493450 139628478494464 hlog.py:32] train/00145/loss 0.0055
I1203 10:56:17.430795 139628478494464 hlog.py:32] train/00145/eval_train/acc 0.9990
I1203 10:56:17.989960 139628478494464 hlog.py:32] train/00145/eval_val/acc 0.7365
I1203 10:56:17.990520 139628478494464 hlog.py:18] train/00145{15.30s}
I1203 10:56:29.647248 139628478494464 hlog.py:32] train/00146/loss 0.0050
I1203 10:56:33.635627 139628478494464 hlog.py:32] train/00146/eval_train/acc 0.9950
I1203 10:56:34.214021 139628478494464 hlog.py:32] train/00146/eval_val/acc 0.7365
I1203 10:56:34.214541 139628478494464 hlog.py:18] train/00146{16.22s}
I1203 10:56:45.678022 139628478494464 hlog.py:32] train/00147/loss 0.0053
I1203 10:56:49.258854 139628478494464 hlog.py:32] train/00147/eval_train/acc 0.9970
I1203 10:56:49.800596 139628478494464 hlog.py:32] train/00147/eval_val/acc 0.7365
I1203 10:56:49.801083 139628478494464 hlog.py:18] train/00147{15.59s}
I1203 10:57:02.074329 139628478494464 hlog.py:32] train/00148/loss 0.0059
I1203 10:57:05.997098 139628478494464 hlog.py:32] train/00148/eval_train/acc 0.9980
I1203 10:57:06.545374 139628478494464 hlog.py:32] train/00148/eval_val/acc 0.7365
I1203 10:57:06.545887 139628478494464 hlog.py:18] train/00148{16.74s}
I1203 10:57:18.122709 139628478494464 hlog.py:32] train/00149/loss 0.0059
I1203 10:57:21.859499 139628478494464 hlog.py:32] train/00149/eval_train/acc 0.9970
I1203 10:57:22.083411 139628478494464 hlog.py:32] train/00149/eval_val/0/input give me the cities in usa
I1203 10:57:22.083631 139628478494464 hlog.py:32] train/00149/eval_val/0/pred ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.083734 139628478494464 hlog.py:32] train/00149/eval_val/0/gold ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.083822 139628478494464 hlog.py:32] train/00149/eval_val/0/corr True
I1203 10:57:22.083900 139628478494464 hlog.py:32] train/00149/eval_val/0 
I1203 10:57:22.083979 139628478494464 hlog.py:18] train/00149/eval_val/0{0.00s}
I1203 10:57:22.084076 139628478494464 hlog.py:32] train/00149/eval_val/1/input how big is alaska
I1203 10:57:22.084175 139628478494464 hlog.py:32] train/00149/eval_val/1/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.084267 139628478494464 hlog.py:32] train/00149/eval_val/1/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.084347 139628478494464 hlog.py:32] train/00149/eval_val/1/corr True
I1203 10:57:22.084423 139628478494464 hlog.py:32] train/00149/eval_val/1 
I1203 10:57:22.084496 139628478494464 hlog.py:18] train/00149/eval_val/1{0.00s}
I1203 10:57:22.084604 139628478494464 hlog.py:32] train/00149/eval_val/2/input how big is massachusetts
I1203 10:57:22.084703 139628478494464 hlog.py:32] train/00149/eval_val/2/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 10:57:22.084794 139628478494464 hlog.py:32] train/00149/eval_val/2/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( massachusetts ) ) ) )
I1203 10:57:22.084874 139628478494464 hlog.py:32] train/00149/eval_val/2/corr True
I1203 10:57:22.084949 139628478494464 hlog.py:32] train/00149/eval_val/2 
I1203 10:57:22.085022 139628478494464 hlog.py:18] train/00149/eval_val/2{0.00s}
I1203 10:57:22.085115 139628478494464 hlog.py:32] train/00149/eval_val/3/input how big is new mexico
I1203 10:57:22.085211 139628478494464 hlog.py:32] train/00149/eval_val/3/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.085301 139628478494464 hlog.py:32] train/00149/eval_val/3/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.085380 139628478494464 hlog.py:32] train/00149/eval_val/3/corr True
I1203 10:57:22.085455 139628478494464 hlog.py:32] train/00149/eval_val/3 
I1203 10:57:22.085528 139628478494464 hlog.py:18] train/00149/eval_val/3{0.00s}
I1203 10:57:22.085620 139628478494464 hlog.py:32] train/00149/eval_val/4/input how big is north dakota
I1203 10:57:22.085715 139628478494464 hlog.py:32] train/00149/eval_val/4/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 10:57:22.085806 139628478494464 hlog.py:32] train/00149/eval_val/4/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( north dakota ) ) ) )
I1203 10:57:22.085886 139628478494464 hlog.py:32] train/00149/eval_val/4/corr True
I1203 10:57:22.085960 139628478494464 hlog.py:32] train/00149/eval_val/4 
I1203 10:57:22.086033 139628478494464 hlog.py:18] train/00149/eval_val/4{0.00s}
I1203 10:57:22.086124 139628478494464 hlog.py:32] train/00149/eval_val/5/input how big is texas
I1203 10:57:22.086219 139628478494464 hlog.py:32] train/00149/eval_val/5/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.086309 139628478494464 hlog.py:32] train/00149/eval_val/5/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.086388 139628478494464 hlog.py:32] train/00149/eval_val/5/corr True
I1203 10:57:22.086462 139628478494464 hlog.py:32] train/00149/eval_val/5 
I1203 10:57:22.086534 139628478494464 hlog.py:18] train/00149/eval_val/5{0.00s}
I1203 10:57:22.086626 139628478494464 hlog.py:32] train/00149/eval_val/6/input how large is alaska
I1203 10:57:22.086735 139628478494464 hlog.py:32] train/00149/eval_val/6/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.086825 139628478494464 hlog.py:32] train/00149/eval_val/6/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.086905 139628478494464 hlog.py:32] train/00149/eval_val/6/corr True
I1203 10:57:22.086978 139628478494464 hlog.py:32] train/00149/eval_val/6 
I1203 10:57:22.087050 139628478494464 hlog.py:18] train/00149/eval_val/6{0.00s}
I1203 10:57:22.087141 139628478494464 hlog.py:32] train/00149/eval_val/7/input how large is texas
I1203 10:57:22.087236 139628478494464 hlog.py:32] train/00149/eval_val/7/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.087325 139628478494464 hlog.py:32] train/00149/eval_val/7/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.087411 139628478494464 hlog.py:32] train/00149/eval_val/7/corr True
I1203 10:57:22.087486 139628478494464 hlog.py:32] train/00149/eval_val/7 
I1203 10:57:22.087558 139628478494464 hlog.py:18] train/00149/eval_val/7{0.00s}
I1203 10:57:22.087651 139628478494464 hlog.py:32] train/00149/eval_val/8/input what is the size of california
I1203 10:57:22.087745 139628478494464 hlog.py:32] train/00149/eval_val/8/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 10:57:22.087834 139628478494464 hlog.py:32] train/00149/eval_val/8/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 10:57:22.087913 139628478494464 hlog.py:32] train/00149/eval_val/8/corr True
I1203 10:57:22.087987 139628478494464 hlog.py:32] train/00149/eval_val/8 
I1203 10:57:22.088059 139628478494464 hlog.py:18] train/00149/eval_val/8{0.00s}
I1203 10:57:22.088151 139628478494464 hlog.py:32] train/00149/eval_val/9/input what is the size of florida
I1203 10:57:22.088246 139628478494464 hlog.py:32] train/00149/eval_val/9/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 10:57:22.088335 139628478494464 hlog.py:32] train/00149/eval_val/9/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 10:57:22.088414 139628478494464 hlog.py:32] train/00149/eval_val/9/corr True
I1203 10:57:22.088488 139628478494464 hlog.py:32] train/00149/eval_val/9 
I1203 10:57:22.088560 139628478494464 hlog.py:18] train/00149/eval_val/9{0.00s}
I1203 10:57:22.088652 139628478494464 hlog.py:32] train/00149/eval_val/10/input what is the size of texas
I1203 10:57:22.088746 139628478494464 hlog.py:32] train/00149/eval_val/10/pred ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.088835 139628478494464 hlog.py:32] train/00149/eval_val/10/gold ( A , ( _size ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.088915 139628478494464 hlog.py:32] train/00149/eval_val/10/corr True
I1203 10:57:22.088988 139628478494464 hlog.py:32] train/00149/eval_val/10 
I1203 10:57:22.089060 139628478494464 hlog.py:18] train/00149/eval_val/10{0.00s}
I1203 10:57:22.089154 139628478494464 hlog.py:32] train/00149/eval_val/11/input how high is the highest point in montana
I1203 10:57:22.089258 139628478494464 hlog.py:32] train/00149/eval_val/11/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 10:57:22.089354 139628478494464 hlog.py:32] train/00149/eval_val/11/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 10:57:22.089433 139628478494464 hlog.py:32] train/00149/eval_val/11/corr True
I1203 10:57:22.089507 139628478494464 hlog.py:32] train/00149/eval_val/11 
I1203 10:57:22.089578 139628478494464 hlog.py:18] train/00149/eval_val/11{0.00s}
I1203 10:57:22.089673 139628478494464 hlog.py:32] train/00149/eval_val/12/input how high is the highest point of alabama
I1203 10:57:22.089776 139628478494464 hlog.py:32] train/00149/eval_val/12/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 10:57:22.089876 139628478494464 hlog.py:32] train/00149/eval_val/12/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( alabama ) ) ) ) ) )
I1203 10:57:22.089956 139628478494464 hlog.py:32] train/00149/eval_val/12/corr True
I1203 10:57:22.090031 139628478494464 hlog.py:32] train/00149/eval_val/12 
I1203 10:57:22.090103 139628478494464 hlog.py:18] train/00149/eval_val/12{0.00s}
I1203 10:57:22.090197 139628478494464 hlog.py:32] train/00149/eval_val/13/input how high is the highest point of delaware
I1203 10:57:22.090301 139628478494464 hlog.py:32] train/00149/eval_val/13/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 10:57:22.090395 139628478494464 hlog.py:32] train/00149/eval_val/13/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( delaware ) ) ) ) ) )
I1203 10:57:22.090475 139628478494464 hlog.py:32] train/00149/eval_val/13/corr True
I1203 10:57:22.090548 139628478494464 hlog.py:32] train/00149/eval_val/13 
I1203 10:57:22.090620 139628478494464 hlog.py:18] train/00149/eval_val/13{0.00s}
I1203 10:57:22.090715 139628478494464 hlog.py:32] train/00149/eval_val/14/input how high is the highest point of florida
I1203 10:57:22.090819 139628478494464 hlog.py:32] train/00149/eval_val/14/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 10:57:22.090913 139628478494464 hlog.py:32] train/00149/eval_val/14/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( florida ) ) ) ) ) )
I1203 10:57:22.090992 139628478494464 hlog.py:32] train/00149/eval_val/14/corr True
I1203 10:57:22.091066 139628478494464 hlog.py:32] train/00149/eval_val/14 
I1203 10:57:22.091138 139628478494464 hlog.py:18] train/00149/eval_val/14{0.00s}
I1203 10:57:22.091233 139628478494464 hlog.py:32] train/00149/eval_val/15/input how high is the highest point of louisiana
I1203 10:57:22.091336 139628478494464 hlog.py:32] train/00149/eval_val/15/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 10:57:22.091437 139628478494464 hlog.py:32] train/00149/eval_val/15/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( louisiana ) ) ) ) ) )
I1203 10:57:22.091518 139628478494464 hlog.py:32] train/00149/eval_val/15/corr True
I1203 10:57:22.091592 139628478494464 hlog.py:32] train/00149/eval_val/15 
I1203 10:57:22.091663 139628478494464 hlog.py:18] train/00149/eval_val/15{0.00s}
I1203 10:57:22.091758 139628478494464 hlog.py:32] train/00149/eval_val/16/input how tall is the highest point in montana
I1203 10:57:22.091861 139628478494464 hlog.py:32] train/00149/eval_val/16/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 10:57:22.091956 139628478494464 hlog.py:32] train/00149/eval_val/16/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( montana ) ) ) ) ) )
I1203 10:57:22.092035 139628478494464 hlog.py:32] train/00149/eval_val/16/corr True
I1203 10:57:22.092109 139628478494464 hlog.py:32] train/00149/eval_val/16 
I1203 10:57:22.092180 139628478494464 hlog.py:18] train/00149/eval_val/16{0.00s}
I1203 10:57:22.092275 139628478494464 hlog.py:32] train/00149/eval_val/17/input what is the highest elevation in new mexico
I1203 10:57:22.092378 139628478494464 hlog.py:32] train/00149/eval_val/17/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 10:57:22.092473 139628478494464 hlog.py:32] train/00149/eval_val/17/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( new mexico ) ) ) ) ) )
I1203 10:57:22.092558 139628478494464 hlog.py:32] train/00149/eval_val/17/corr True
I1203 10:57:22.092633 139628478494464 hlog.py:32] train/00149/eval_val/17 
I1203 10:57:22.092705 139628478494464 hlog.py:18] train/00149/eval_val/17{0.00s}
I1203 10:57:22.092800 139628478494464 hlog.py:32] train/00149/eval_val/18/input what is the highest elevation in south carolina
I1203 10:57:22.092903 139628478494464 hlog.py:32] train/00149/eval_val/18/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 10:57:22.092998 139628478494464 hlog.py:32] train/00149/eval_val/18/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( south carolina ) ) ) ) ) )
I1203 10:57:22.093078 139628478494464 hlog.py:32] train/00149/eval_val/18/corr True
I1203 10:57:22.093152 139628478494464 hlog.py:32] train/00149/eval_val/18 
I1203 10:57:22.093224 139628478494464 hlog.py:18] train/00149/eval_val/18{0.00s}
I1203 10:57:22.093311 139628478494464 hlog.py:32] train/00149/eval_val/19/input what is the highest elevation in texas
I1203 10:57:22.093409 139628478494464 hlog.py:32] train/00149/eval_val/19/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 10:57:22.093504 139628478494464 hlog.py:32] train/00149/eval_val/19/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( texas ) ) ) ) ) )
I1203 10:57:22.093590 139628478494464 hlog.py:32] train/00149/eval_val/19/corr False
I1203 10:57:22.093664 139628478494464 hlog.py:32] train/00149/eval_val/19 
I1203 10:57:22.093736 139628478494464 hlog.py:18] train/00149/eval_val/19{0.00s}
I1203 10:57:22.093824 139628478494464 hlog.py:32] train/00149/eval_val/20/input what is the highest point in nevada in meters
I1203 10:57:22.093923 139628478494464 hlog.py:32] train/00149/eval_val/20/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) ) )
I1203 10:57:22.094018 139628478494464 hlog.py:32] train/00149/eval_val/20/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _const ( C , _stateid ( nevada ) ) ) ) ) )
I1203 10:57:22.094097 139628478494464 hlog.py:32] train/00149/eval_val/20/corr False
I1203 10:57:22.094172 139628478494464 hlog.py:32] train/00149/eval_val/20 
I1203 10:57:22.094243 139628478494464 hlog.py:18] train/00149/eval_val/20{0.00s}
I1203 10:57:22.094338 139628478494464 hlog.py:32] train/00149/eval_val/21/input how high is the highest point in the largest state
I1203 10:57:22.094441 139628478494464 hlog.py:32] train/00149/eval_val/21/pred ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 10:57:22.094536 139628478494464 hlog.py:32] train/00149/eval_val/21/gold ( A , ( _elevation ( B , A ) , _highest ( B , ( _place ( B ) , _loc ( B , C ) , _largest ( C , _state ( C ) ) ) ) ) )
I1203 10:57:22.094614 139628478494464 hlog.py:32] train/00149/eval_val/21/corr True
I1203 10:57:22.094688 139628478494464 hlog.py:32] train/00149/eval_val/21 
I1203 10:57:22.094759 139628478494464 hlog.py:18] train/00149/eval_val/21{0.00s}
I1203 10:57:22.094849 139628478494464 hlog.py:32] train/00149/eval_val/22/input how long is rio grande
I1203 10:57:22.094944 139628478494464 hlog.py:32] train/00149/eval_val/22/pred ( A , ( _population ( B , A ) , _const ( B , _stateid ( rio grande ) ) ) )
I1203 10:57:22.095034 139628478494464 hlog.py:32] train/00149/eval_val/22/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) ) )
I1203 10:57:22.095113 139628478494464 hlog.py:32] train/00149/eval_val/22/corr False
I1203 10:57:22.095187 139628478494464 hlog.py:32] train/00149/eval_val/22 
I1203 10:57:22.095259 139628478494464 hlog.py:18] train/00149/eval_val/22{0.00s}
I1203 10:57:22.095346 139628478494464 hlog.py:32] train/00149/eval_val/23/input how long is the mississippi
I1203 10:57:22.095451 139628478494464 hlog.py:32] train/00149/eval_val/23/pred ( A , ( _size ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _traverse ( B , A ) ) )
I1203 10:57:22.095549 139628478494464 hlog.py:32] train/00149/eval_val/23/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 10:57:22.095629 139628478494464 hlog.py:32] train/00149/eval_val/23/corr False
I1203 10:57:22.095702 139628478494464 hlog.py:32] train/00149/eval_val/23 
I1203 10:57:22.095774 139628478494464 hlog.py:18] train/00149/eval_val/23{0.00s}
I1203 10:57:22.095861 139628478494464 hlog.py:32] train/00149/eval_val/24/input what length is the mississippi
I1203 10:57:22.095958 139628478494464 hlog.py:32] train/00149/eval_val/24/pred ( A , ( _state ( A ) , _next_to ( A , B ) , _const ( B , _stateid ( mississippi ) ) ) )
I1203 10:57:22.096048 139628478494464 hlog.py:32] train/00149/eval_val/24/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) ) )
I1203 10:57:22.096127 139628478494464 hlog.py:32] train/00149/eval_val/24/corr False
I1203 10:57:22.096201 139628478494464 hlog.py:32] train/00149/eval_val/24 
I1203 10:57:22.096273 139628478494464 hlog.py:18] train/00149/eval_val/24{0.00s}
I1203 10:57:22.096365 139628478494464 hlog.py:32] train/00149/eval_val/25/input how long is the colorado river
I1203 10:57:22.096462 139628478494464 hlog.py:32] train/00149/eval_val/25/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 10:57:22.096553 139628478494464 hlog.py:32] train/00149/eval_val/25/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 10:57:22.096633 139628478494464 hlog.py:32] train/00149/eval_val/25/corr True
I1203 10:57:22.096707 139628478494464 hlog.py:32] train/00149/eval_val/25 
I1203 10:57:22.096778 139628478494464 hlog.py:18] train/00149/eval_val/25{0.00s}
I1203 10:57:22.096868 139628478494464 hlog.py:32] train/00149/eval_val/26/input how long is the delaware river
I1203 10:57:22.096965 139628478494464 hlog.py:32] train/00149/eval_val/26/pred ( A , ( _elevation ( B , A ) , _const ( B , _countryid ( delaware ) ) , _river ( B ) ) )
I1203 10:57:22.097056 139628478494464 hlog.py:32] train/00149/eval_val/26/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( delaware ) ) , _river ( B ) ) )
I1203 10:57:22.097135 139628478494464 hlog.py:32] train/00149/eval_val/26/corr False
I1203 10:57:22.097208 139628478494464 hlog.py:32] train/00149/eval_val/26 
I1203 10:57:22.097280 139628478494464 hlog.py:18] train/00149/eval_val/26{0.00s}
I1203 10:57:22.097368 139628478494464 hlog.py:32] train/00149/eval_val/27/input how long is the mississippi river in miles
I1203 10:57:22.097471 139628478494464 hlog.py:32] train/00149/eval_val/27/pred ( A , ( _len ( B , A ) , _longest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( miles ) ) ) ) ) )
I1203 10:57:22.097563 139628478494464 hlog.py:32] train/00149/eval_val/27/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 10:57:22.097642 139628478494464 hlog.py:32] train/00149/eval_val/27/corr False
I1203 10:57:22.097716 139628478494464 hlog.py:32] train/00149/eval_val/27 
I1203 10:57:22.097788 139628478494464 hlog.py:18] train/00149/eval_val/27{0.00s}
I1203 10:57:22.097877 139628478494464 hlog.py:32] train/00149/eval_val/28/input how long is the mississippi river
I1203 10:57:22.097974 139628478494464 hlog.py:32] train/00149/eval_val/28/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 10:57:22.098065 139628478494464 hlog.py:32] train/00149/eval_val/28/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 10:57:22.098144 139628478494464 hlog.py:32] train/00149/eval_val/28/corr False
I1203 10:57:22.098218 139628478494464 hlog.py:32] train/00149/eval_val/28 
I1203 10:57:22.098290 139628478494464 hlog.py:18] train/00149/eval_val/28{0.00s}
I1203 10:57:22.098380 139628478494464 hlog.py:32] train/00149/eval_val/29/input how long is the missouri river
I1203 10:57:22.098476 139628478494464 hlog.py:32] train/00149/eval_val/29/pred ( A , ( _elevation ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 10:57:22.098573 139628478494464 hlog.py:32] train/00149/eval_val/29/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( missouri ) ) , _river ( B ) ) )
I1203 10:57:22.098654 139628478494464 hlog.py:32] train/00149/eval_val/29/corr False
I1203 10:57:22.098727 139628478494464 hlog.py:32] train/00149/eval_val/29 
I1203 10:57:22.098800 139628478494464 hlog.py:18] train/00149/eval_val/29{0.00s}
I1203 10:57:22.098887 139628478494464 hlog.py:32] train/00149/eval_val/30/input how long is the north platte river
I1203 10:57:22.098985 139628478494464 hlog.py:32] train/00149/eval_val/30/pred ( A , ( _len ( B , A ) , _longest ( B , _river ( B ) ) , _traverse ( B , C ) ) ) )
I1203 10:57:22.099076 139628478494464 hlog.py:32] train/00149/eval_val/30/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( north platte ) ) , _river ( B ) ) )
I1203 10:57:22.099155 139628478494464 hlog.py:32] train/00149/eval_val/30/corr False
I1203 10:57:22.099229 139628478494464 hlog.py:32] train/00149/eval_val/30 
I1203 10:57:22.099300 139628478494464 hlog.py:18] train/00149/eval_val/30{0.00s}
I1203 10:57:22.099393 139628478494464 hlog.py:32] train/00149/eval_val/31/input how long is the ohio river
I1203 10:57:22.099499 139628478494464 hlog.py:32] train/00149/eval_val/31/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 10:57:22.099591 139628478494464 hlog.py:32] train/00149/eval_val/31/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( ohio ) ) , _river ( B ) ) )
I1203 10:57:22.099670 139628478494464 hlog.py:32] train/00149/eval_val/31/corr True
I1203 10:57:22.099744 139628478494464 hlog.py:32] train/00149/eval_val/31 
I1203 10:57:22.099815 139628478494464 hlog.py:18] train/00149/eval_val/31{0.00s}
I1203 10:57:22.099909 139628478494464 hlog.py:32] train/00149/eval_val/32/input how long is the rio grande river
I1203 10:57:22.100006 139628478494464 hlog.py:32] train/00149/eval_val/32/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 10:57:22.100098 139628478494464 hlog.py:32] train/00149/eval_val/32/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( rio grande ) ) , _river ( B ) ) )
I1203 10:57:22.100176 139628478494464 hlog.py:32] train/00149/eval_val/32/corr True
I1203 10:57:22.100249 139628478494464 hlog.py:32] train/00149/eval_val/32 
I1203 10:57:22.100321 139628478494464 hlog.py:18] train/00149/eval_val/32{0.00s}
I1203 10:57:22.100414 139628478494464 hlog.py:32] train/00149/eval_val/33/input what is the length of the colorado river
I1203 10:57:22.100511 139628478494464 hlog.py:32] train/00149/eval_val/33/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 10:57:22.100602 139628478494464 hlog.py:32] train/00149/eval_val/33/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( colorado ) ) , _river ( B ) ) )
I1203 10:57:22.100681 139628478494464 hlog.py:32] train/00149/eval_val/33/corr True
I1203 10:57:22.100755 139628478494464 hlog.py:32] train/00149/eval_val/33 
I1203 10:57:22.100826 139628478494464 hlog.py:18] train/00149/eval_val/33{0.00s}
I1203 10:57:22.100919 139628478494464 hlog.py:32] train/00149/eval_val/34/input what is the length of the mississippi river
I1203 10:57:22.101016 139628478494464 hlog.py:32] train/00149/eval_val/34/pred ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 10:57:22.101107 139628478494464 hlog.py:32] train/00149/eval_val/34/gold ( A , ( _len ( B , A ) , _const ( B , _riverid ( mississippi ) ) , _river ( B ) ) )
I1203 10:57:22.101186 139628478494464 hlog.py:32] train/00149/eval_val/34/corr True
I1203 10:57:22.101259 139628478494464 hlog.py:32] train/00149/eval_val/34 
I1203 10:57:22.101331 139628478494464 hlog.py:18] train/00149/eval_val/34{0.00s}
I1203 10:57:22.101425 139628478494464 hlog.py:32] train/00149/eval_val/35/input how many cities are there in the united states
I1203 10:57:22.101526 139628478494464 hlog.py:32] train/00149/eval_val/35/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.101626 139628478494464 hlog.py:32] train/00149/eval_val/35/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.101705 139628478494464 hlog.py:32] train/00149/eval_val/35/corr True
I1203 10:57:22.101779 139628478494464 hlog.py:32] train/00149/eval_val/35 
I1203 10:57:22.101851 139628478494464 hlog.py:18] train/00149/eval_val/35{0.00s}
I1203 10:57:22.101945 139628478494464 hlog.py:32] train/00149/eval_val/36/input how many cities are there in the us
I1203 10:57:22.102045 139628478494464 hlog.py:32] train/00149/eval_val/36/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.102138 139628478494464 hlog.py:32] train/00149/eval_val/36/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.102217 139628478494464 hlog.py:32] train/00149/eval_val/36/corr True
I1203 10:57:22.102291 139628478494464 hlog.py:32] train/00149/eval_val/36 
I1203 10:57:22.102362 139628478494464 hlog.py:18] train/00149/eval_val/36{0.00s}
I1203 10:57:22.102456 139628478494464 hlog.py:32] train/00149/eval_val/37/input how many cities are there in us
I1203 10:57:22.102556 139628478494464 hlog.py:32] train/00149/eval_val/37/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.102649 139628478494464 hlog.py:32] train/00149/eval_val/37/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.102728 139628478494464 hlog.py:32] train/00149/eval_val/37/corr True
I1203 10:57:22.102802 139628478494464 hlog.py:32] train/00149/eval_val/37 
I1203 10:57:22.102874 139628478494464 hlog.py:18] train/00149/eval_val/37{0.00s}
I1203 10:57:22.102968 139628478494464 hlog.py:32] train/00149/eval_val/38/input how many cities are there in usa
I1203 10:57:22.103067 139628478494464 hlog.py:32] train/00149/eval_val/38/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.103161 139628478494464 hlog.py:32] train/00149/eval_val/38/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.103240 139628478494464 hlog.py:32] train/00149/eval_val/38/corr True
I1203 10:57:22.103313 139628478494464 hlog.py:32] train/00149/eval_val/38 
I1203 10:57:22.103385 139628478494464 hlog.py:18] train/00149/eval_val/38{0.00s}
I1203 10:57:22.103487 139628478494464 hlog.py:32] train/00149/eval_val/39/input how many cities does the usa have
I1203 10:57:22.103587 139628478494464 hlog.py:32] train/00149/eval_val/39/pred ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.103680 139628478494464 hlog.py:32] train/00149/eval_val/39/gold ( A , _count ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.103759 139628478494464 hlog.py:32] train/00149/eval_val/39/corr True
I1203 10:57:22.103833 139628478494464 hlog.py:32] train/00149/eval_val/39 
I1203 10:57:22.103904 139628478494464 hlog.py:18] train/00149/eval_val/39{0.00s}
I1203 10:57:22.103991 139628478494464 hlog.py:32] train/00149/eval_val/40/input how many colorado rivers are there
I1203 10:57:22.104091 139628478494464 hlog.py:32] train/00149/eval_val/40/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 10:57:22.104183 139628478494464 hlog.py:32] train/00149/eval_val/40/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 10:57:22.104262 139628478494464 hlog.py:32] train/00149/eval_val/40/corr False
I1203 10:57:22.104335 139628478494464 hlog.py:32] train/00149/eval_val/40 
I1203 10:57:22.104407 139628478494464 hlog.py:18] train/00149/eval_val/40{0.00s}
I1203 10:57:22.104494 139628478494464 hlog.py:32] train/00149/eval_val/41/input how many rivers are called colorado
I1203 10:57:22.104600 139628478494464 hlog.py:32] train/00149/eval_val/41/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _stateid ( colorado ) ) ) , A ) )
I1203 10:57:22.104691 139628478494464 hlog.py:32] train/00149/eval_val/41/gold ( A , _count ( B , ( _const ( B , _riverid ( colorado ) ) , _river ( B ) ) , A ) )
I1203 10:57:22.104771 139628478494464 hlog.py:32] train/00149/eval_val/41/corr False
I1203 10:57:22.104844 139628478494464 hlog.py:32] train/00149/eval_val/41 
I1203 10:57:22.104917 139628478494464 hlog.py:18] train/00149/eval_val/41{0.00s}
I1203 10:57:22.105004 139628478494464 hlog.py:32] train/00149/eval_val/42/input how many major cities are there
I1203 10:57:22.105106 139628478494464 hlog.py:32] train/00149/eval_val/42/pred ( A , _count ( B , ( _major ( B ) , _city ( B ) , _loc ( B , C ) , _const ( C , _stateid ( there ) ) ) , A ) )
I1203 10:57:22.105195 139628478494464 hlog.py:32] train/00149/eval_val/42/gold ( A , _count ( B , ( _major ( B ) , _city ( B ) ) , A ) )
I1203 10:57:22.105274 139628478494464 hlog.py:32] train/00149/eval_val/42/corr False
I1203 10:57:22.105348 139628478494464 hlog.py:32] train/00149/eval_val/42 
I1203 10:57:22.105419 139628478494464 hlog.py:18] train/00149/eval_val/42{0.00s}
I1203 10:57:22.105508 139628478494464 hlog.py:32] train/00149/eval_val/43/input how many rivers are in the state with the highest point
I1203 10:57:22.105616 139628478494464 hlog.py:32] train/00149/eval_val/43/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _capital ( D ) , _const ( D , _cityid ( highest , _ ) ) ) ) , A ) )
I1203 10:57:22.105713 139628478494464 hlog.py:32] train/00149/eval_val/43/gold ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _loc ( D , C ) , _highest ( D , _place ( D ) ) ) , A ) )
I1203 10:57:22.105793 139628478494464 hlog.py:32] train/00149/eval_val/43/corr False
I1203 10:57:22.105866 139628478494464 hlog.py:32] train/00149/eval_val/43 
I1203 10:57:22.105938 139628478494464 hlog.py:18] train/00149/eval_val/43{0.00s}
I1203 10:57:22.106030 139628478494464 hlog.py:32] train/00149/eval_val/44/input how many rivers run through the states bordering colorado
I1203 10:57:22.106135 139628478494464 hlog.py:32] train/00149/eval_val/44/pred ( A , _count ( B , ( _river ( B ) , _loc ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 10:57:22.106232 139628478494464 hlog.py:32] train/00149/eval_val/44/gold ( A , _count ( B , ( _river ( B ) , _traverse ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( colorado ) ) ) , A ) )
I1203 10:57:22.106311 139628478494464 hlog.py:32] train/00149/eval_val/44/corr False
I1203 10:57:22.106385 139628478494464 hlog.py:32] train/00149/eval_val/44 
I1203 10:57:22.106457 139628478494464 hlog.py:18] train/00149/eval_val/44{0.00s}
I1203 10:57:22.106548 139628478494464 hlog.py:32] train/00149/eval_val/45/input how many states are next to major rivers
I1203 10:57:22.106648 139628478494464 hlog.py:32] train/00149/eval_val/45/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 10:57:22.106741 139628478494464 hlog.py:32] train/00149/eval_val/45/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _major ( C ) , _river ( C ) ) , A ) )
I1203 10:57:22.106820 139628478494464 hlog.py:32] train/00149/eval_val/45/corr False
I1203 10:57:22.106894 139628478494464 hlog.py:32] train/00149/eval_val/45 
I1203 10:57:22.106965 139628478494464 hlog.py:18] train/00149/eval_val/45{0.00s}
I1203 10:57:22.107057 139628478494464 hlog.py:32] train/00149/eval_val/46/input how many states border the largest state
I1203 10:57:22.107157 139628478494464 hlog.py:32] train/00149/eval_val/46/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( D , _state ( C ) ) ) , A ) )
I1203 10:57:22.107249 139628478494464 hlog.py:32] train/00149/eval_val/46/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _largest ( C , _state ( C ) ) ) , A ) )
I1203 10:57:22.107334 139628478494464 hlog.py:32] train/00149/eval_val/46/corr False
I1203 10:57:22.107414 139628478494464 hlog.py:32] train/00149/eval_val/46 
I1203 10:57:22.107489 139628478494464 hlog.py:18] train/00149/eval_val/46{0.00s}
I1203 10:57:22.107584 139628478494464 hlog.py:32] train/00149/eval_val/47/input how many states border the mississippi river
I1203 10:57:22.107686 139628478494464 hlog.py:32] train/00149/eval_val/47/pred ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 10:57:22.107781 139628478494464 hlog.py:32] train/00149/eval_val/47/gold ( A , _count ( B , ( _state ( B ) , _next_to ( B , C ) , _const ( C , _riverid ( mississippi ) ) , _river ( C ) ) , A ) )
I1203 10:57:22.107860 139628478494464 hlog.py:32] train/00149/eval_val/47/corr True
I1203 10:57:22.107934 139628478494464 hlog.py:32] train/00149/eval_val/47 
I1203 10:57:22.108006 139628478494464 hlog.py:18] train/00149/eval_val/47{0.00s}
I1203 10:57:22.108100 139628478494464 hlog.py:32] train/00149/eval_val/48/input how many states have a city called rochester
I1203 10:57:22.108203 139628478494464 hlog.py:32] train/00149/eval_val/48/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 10:57:22.108298 139628478494464 hlog.py:32] train/00149/eval_val/48/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( rochester , _ ) ) ) , A ) )
I1203 10:57:22.108377 139628478494464 hlog.py:32] train/00149/eval_val/48/corr True
I1203 10:57:22.108451 139628478494464 hlog.py:32] train/00149/eval_val/48 
I1203 10:57:22.108523 139628478494464 hlog.py:18] train/00149/eval_val/48{0.00s}
I1203 10:57:22.108618 139628478494464 hlog.py:32] train/00149/eval_val/49/input how many states have a city named springfield
I1203 10:57:22.108721 139628478494464 hlog.py:32] train/00149/eval_val/49/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 10:57:22.108816 139628478494464 hlog.py:32] train/00149/eval_val/49/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 10:57:22.108895 139628478494464 hlog.py:32] train/00149/eval_val/49/corr True
I1203 10:57:22.108968 139628478494464 hlog.py:32] train/00149/eval_val/49 
I1203 10:57:22.109040 139628478494464 hlog.py:18] train/00149/eval_val/49{0.00s}
I1203 10:57:22.109128 139628478494464 hlog.py:32] train/00149/eval_val/50/input how many states have cities named austin
I1203 10:57:22.109229 139628478494464 hlog.py:32] train/00149/eval_val/50/pred ( A , _count ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 10:57:22.109323 139628478494464 hlog.py:32] train/00149/eval_val/50/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( austin , _ ) ) ) , A ) )
I1203 10:57:22.109402 139628478494464 hlog.py:32] train/00149/eval_val/50/corr False
I1203 10:57:22.109476 139628478494464 hlog.py:32] train/00149/eval_val/50 
I1203 10:57:22.109548 139628478494464 hlog.py:18] train/00149/eval_val/50{0.00s}
I1203 10:57:22.109643 139628478494464 hlog.py:32] train/00149/eval_val/51/input how many states have cities or towns named springfield
I1203 10:57:22.109745 139628478494464 hlog.py:32] train/00149/eval_val/51/pred ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 10:57:22.109840 139628478494464 hlog.py:32] train/00149/eval_val/51/gold ( A , _count ( B , ( _state ( B ) , _loc ( C , B ) , _city ( C ) , _const ( C , _cityid ( springfield , _ ) ) ) , A ) )
I1203 10:57:22.109919 139628478494464 hlog.py:32] train/00149/eval_val/51/corr True
I1203 10:57:22.109993 139628478494464 hlog.py:32] train/00149/eval_val/51 
I1203 10:57:22.110065 139628478494464 hlog.py:18] train/00149/eval_val/51{0.00s}
I1203 10:57:22.110161 139628478494464 hlog.py:32] train/00149/eval_val/52/input in what state is mount mckinley
I1203 10:57:22.110260 139628478494464 hlog.py:32] train/00149/eval_val/52/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 10:57:22.110352 139628478494464 hlog.py:32] train/00149/eval_val/52/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 10:57:22.110431 139628478494464 hlog.py:32] train/00149/eval_val/52/corr False
I1203 10:57:22.110505 139628478494464 hlog.py:32] train/00149/eval_val/52 
I1203 10:57:22.110576 139628478494464 hlog.py:18] train/00149/eval_val/52{0.00s}
I1203 10:57:22.110663 139628478494464 hlog.py:32] train/00149/eval_val/53/input which state is mount mckinley in
I1203 10:57:22.110761 139628478494464 hlog.py:32] train/00149/eval_val/53/pred ( A , ( _state ( A ) , _const ( B , _cityid ( mount mckinley , _ ) ) , _loc ( B , A ) ) )
I1203 10:57:22.110852 139628478494464 hlog.py:32] train/00149/eval_val/53/gold ( A , ( _state ( A ) , _const ( B , _placeid ( mount mckinley ) ) , _loc ( B , A ) ) )
I1203 10:57:22.110931 139628478494464 hlog.py:32] train/00149/eval_val/53/corr False
I1203 10:57:22.111005 139628478494464 hlog.py:32] train/00149/eval_val/53 
I1203 10:57:22.111076 139628478494464 hlog.py:18] train/00149/eval_val/53{0.00s}
I1203 10:57:22.111168 139628478494464 hlog.py:32] train/00149/eval_val/54/input name all the rivers in colorado
I1203 10:57:22.111265 139628478494464 hlog.py:32] train/00149/eval_val/54/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.111356 139628478494464 hlog.py:32] train/00149/eval_val/54/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.111458 139628478494464 hlog.py:32] train/00149/eval_val/54/corr True
I1203 10:57:22.111534 139628478494464 hlog.py:32] train/00149/eval_val/54 
I1203 10:57:22.111608 139628478494464 hlog.py:18] train/00149/eval_val/54{0.00s}
I1203 10:57:22.111717 139628478494464 hlog.py:32] train/00149/eval_val/55/input name the rivers in arkansas
I1203 10:57:22.111814 139628478494464 hlog.py:32] train/00149/eval_val/55/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 10:57:22.111905 139628478494464 hlog.py:32] train/00149/eval_val/55/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) )
I1203 10:57:22.111984 139628478494464 hlog.py:32] train/00149/eval_val/55/corr True
I1203 10:57:22.112057 139628478494464 hlog.py:32] train/00149/eval_val/55 
I1203 10:57:22.112129 139628478494464 hlog.py:18] train/00149/eval_val/55{0.00s}
I1203 10:57:22.112221 139628478494464 hlog.py:32] train/00149/eval_val/56/input rivers in new york
I1203 10:57:22.112317 139628478494464 hlog.py:32] train/00149/eval_val/56/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 10:57:22.112408 139628478494464 hlog.py:32] train/00149/eval_val/56/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 10:57:22.112488 139628478494464 hlog.py:32] train/00149/eval_val/56/corr True
I1203 10:57:22.112561 139628478494464 hlog.py:32] train/00149/eval_val/56 
I1203 10:57:22.112633 139628478494464 hlog.py:18] train/00149/eval_val/56{0.00s}
I1203 10:57:22.112725 139628478494464 hlog.py:32] train/00149/eval_val/57/input what are all the rivers in texas
I1203 10:57:22.112823 139628478494464 hlog.py:32] train/00149/eval_val/57/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.112913 139628478494464 hlog.py:32] train/00149/eval_val/57/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.112992 139628478494464 hlog.py:32] train/00149/eval_val/57/corr True
I1203 10:57:22.113066 139628478494464 hlog.py:32] train/00149/eval_val/57 
I1203 10:57:22.113138 139628478494464 hlog.py:18] train/00149/eval_val/57{0.00s}
I1203 10:57:22.113230 139628478494464 hlog.py:32] train/00149/eval_val/58/input what are the rivers in alaska
I1203 10:57:22.113332 139628478494464 hlog.py:32] train/00149/eval_val/58/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.113424 139628478494464 hlog.py:32] train/00149/eval_val/58/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.113503 139628478494464 hlog.py:32] train/00149/eval_val/58/corr True
I1203 10:57:22.113576 139628478494464 hlog.py:32] train/00149/eval_val/58 
I1203 10:57:22.113648 139628478494464 hlog.py:18] train/00149/eval_val/58{0.00s}
I1203 10:57:22.113741 139628478494464 hlog.py:32] train/00149/eval_val/59/input what are the rivers of montana
I1203 10:57:22.113837 139628478494464 hlog.py:32] train/00149/eval_val/59/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 10:57:22.113928 139628478494464 hlog.py:32] train/00149/eval_val/59/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( montana ) ) ) )
I1203 10:57:22.114006 139628478494464 hlog.py:32] train/00149/eval_val/59/corr True
I1203 10:57:22.114080 139628478494464 hlog.py:32] train/00149/eval_val/59 
I1203 10:57:22.114152 139628478494464 hlog.py:18] train/00149/eval_val/59{0.00s}
I1203 10:57:22.114243 139628478494464 hlog.py:32] train/00149/eval_val/60/input what rivers are in nevada
I1203 10:57:22.114340 139628478494464 hlog.py:32] train/00149/eval_val/60/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 10:57:22.114431 139628478494464 hlog.py:32] train/00149/eval_val/60/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( nevada ) ) ) )
I1203 10:57:22.114510 139628478494464 hlog.py:32] train/00149/eval_val/60/corr True
I1203 10:57:22.114584 139628478494464 hlog.py:32] train/00149/eval_val/60 
I1203 10:57:22.114655 139628478494464 hlog.py:18] train/00149/eval_val/60{0.00s}
I1203 10:57:22.114748 139628478494464 hlog.py:32] train/00149/eval_val/61/input what rivers are in new mexico
I1203 10:57:22.114845 139628478494464 hlog.py:32] train/00149/eval_val/61/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.114936 139628478494464 hlog.py:32] train/00149/eval_val/61/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.115015 139628478494464 hlog.py:32] train/00149/eval_val/61/corr True
I1203 10:57:22.115088 139628478494464 hlog.py:32] train/00149/eval_val/61 
I1203 10:57:22.115160 139628478494464 hlog.py:18] train/00149/eval_val/61{0.00s}
I1203 10:57:22.115252 139628478494464 hlog.py:32] train/00149/eval_val/62/input what rivers are in oregon
I1203 10:57:22.115349 139628478494464 hlog.py:32] train/00149/eval_val/62/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 10:57:22.115445 139628478494464 hlog.py:32] train/00149/eval_val/62/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( oregon ) ) ) )
I1203 10:57:22.115526 139628478494464 hlog.py:32] train/00149/eval_val/62/corr True
I1203 10:57:22.115599 139628478494464 hlog.py:32] train/00149/eval_val/62 
I1203 10:57:22.115671 139628478494464 hlog.py:18] train/00149/eval_val/62{0.00s}
I1203 10:57:22.115763 139628478494464 hlog.py:32] train/00149/eval_val/63/input what rivers are in texas
I1203 10:57:22.115860 139628478494464 hlog.py:32] train/00149/eval_val/63/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.115951 139628478494464 hlog.py:32] train/00149/eval_val/63/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.116029 139628478494464 hlog.py:32] train/00149/eval_val/63/corr True
I1203 10:57:22.116103 139628478494464 hlog.py:32] train/00149/eval_val/63 
I1203 10:57:22.116174 139628478494464 hlog.py:18] train/00149/eval_val/63{0.00s}
I1203 10:57:22.336884 139628478494464 hlog.py:32] train/00149/eval_val/64/input what rivers are in utah
I1203 10:57:22.337089 139628478494464 hlog.py:32] train/00149/eval_val/64/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 10:57:22.337205 139628478494464 hlog.py:32] train/00149/eval_val/64/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( utah ) ) ) )
I1203 10:57:22.337292 139628478494464 hlog.py:32] train/00149/eval_val/64/corr True
I1203 10:57:22.337371 139628478494464 hlog.py:32] train/00149/eval_val/64 
I1203 10:57:22.337450 139628478494464 hlog.py:18] train/00149/eval_val/64{0.00s}
I1203 10:57:22.337547 139628478494464 hlog.py:32] train/00149/eval_val/65/input what rivers are there in texas
I1203 10:57:22.337647 139628478494464 hlog.py:32] train/00149/eval_val/65/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.337740 139628478494464 hlog.py:32] train/00149/eval_val/65/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.337821 139628478494464 hlog.py:32] train/00149/eval_val/65/corr True
I1203 10:57:22.337895 139628478494464 hlog.py:32] train/00149/eval_val/65 
I1203 10:57:22.337982 139628478494464 hlog.py:18] train/00149/eval_val/65{0.00s}
I1203 10:57:22.338080 139628478494464 hlog.py:32] train/00149/eval_val/66/input which rivers are in alaska
I1203 10:57:22.338181 139628478494464 hlog.py:32] train/00149/eval_val/66/pred ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.338288 139628478494464 hlog.py:32] train/00149/eval_val/66/gold ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.338368 139628478494464 hlog.py:32] train/00149/eval_val/66/corr True
I1203 10:57:22.338442 139628478494464 hlog.py:32] train/00149/eval_val/66 
I1203 10:57:22.338515 139628478494464 hlog.py:18] train/00149/eval_val/66{0.00s}
I1203 10:57:22.338610 139628478494464 hlog.py:32] train/00149/eval_val/67/input what are the highest points of all the states
I1203 10:57:22.338708 139628478494464 hlog.py:32] train/00149/eval_val/67/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.338798 139628478494464 hlog.py:32] train/00149/eval_val/67/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.338878 139628478494464 hlog.py:32] train/00149/eval_val/67/corr True
I1203 10:57:22.338951 139628478494464 hlog.py:32] train/00149/eval_val/67 
I1203 10:57:22.339024 139628478494464 hlog.py:18] train/00149/eval_val/67{0.00s}
I1203 10:57:22.339119 139628478494464 hlog.py:32] train/00149/eval_val/68/input what are the rivers in the state of indiana
I1203 10:57:22.339218 139628478494464 hlog.py:32] train/00149/eval_val/68/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 10:57:22.339311 139628478494464 hlog.py:32] train/00149/eval_val/68/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( indiana ) ) ) )
I1203 10:57:22.339390 139628478494464 hlog.py:32] train/00149/eval_val/68/corr True
I1203 10:57:22.339473 139628478494464 hlog.py:32] train/00149/eval_val/68 
I1203 10:57:22.339545 139628478494464 hlog.py:18] train/00149/eval_val/68{0.00s}
I1203 10:57:22.339641 139628478494464 hlog.py:32] train/00149/eval_val/69/input what are the rivers in the state of texas
I1203 10:57:22.339739 139628478494464 hlog.py:32] train/00149/eval_val/69/pred ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.339831 139628478494464 hlog.py:32] train/00149/eval_val/69/gold ( A , ( _river ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.339910 139628478494464 hlog.py:32] train/00149/eval_val/69/corr True
I1203 10:57:22.339984 139628478494464 hlog.py:32] train/00149/eval_val/69 
I1203 10:57:22.340056 139628478494464 hlog.py:18] train/00149/eval_val/69{0.00s}
I1203 10:57:22.340148 139628478494464 hlog.py:32] train/00149/eval_val/70/input what is the area of alaska
I1203 10:57:22.340243 139628478494464 hlog.py:32] train/00149/eval_val/70/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.340339 139628478494464 hlog.py:32] train/00149/eval_val/70/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.340419 139628478494464 hlog.py:32] train/00149/eval_val/70/corr True
I1203 10:57:22.340492 139628478494464 hlog.py:32] train/00149/eval_val/70 
I1203 10:57:22.340565 139628478494464 hlog.py:18] train/00149/eval_val/70{0.00s}
I1203 10:57:22.340658 139628478494464 hlog.py:32] train/00149/eval_val/71/input what is the area of california
I1203 10:57:22.340753 139628478494464 hlog.py:32] train/00149/eval_val/71/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 10:57:22.340842 139628478494464 hlog.py:32] train/00149/eval_val/71/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( california ) ) ) )
I1203 10:57:22.340920 139628478494464 hlog.py:32] train/00149/eval_val/71/corr True
I1203 10:57:22.340994 139628478494464 hlog.py:32] train/00149/eval_val/71 
I1203 10:57:22.341066 139628478494464 hlog.py:18] train/00149/eval_val/71{0.00s}
I1203 10:57:22.341158 139628478494464 hlog.py:32] train/00149/eval_val/72/input what is the area of florida
I1203 10:57:22.341252 139628478494464 hlog.py:32] train/00149/eval_val/72/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 10:57:22.341341 139628478494464 hlog.py:32] train/00149/eval_val/72/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( florida ) ) ) )
I1203 10:57:22.341420 139628478494464 hlog.py:32] train/00149/eval_val/72/corr True
I1203 10:57:22.341493 139628478494464 hlog.py:32] train/00149/eval_val/72 
I1203 10:57:22.341565 139628478494464 hlog.py:18] train/00149/eval_val/72{0.00s}
I1203 10:57:22.341658 139628478494464 hlog.py:32] train/00149/eval_val/73/input what is the area of idaho
I1203 10:57:22.341752 139628478494464 hlog.py:32] train/00149/eval_val/73/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 10:57:22.341842 139628478494464 hlog.py:32] train/00149/eval_val/73/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( idaho ) ) ) )
I1203 10:57:22.341921 139628478494464 hlog.py:32] train/00149/eval_val/73/corr True
I1203 10:57:22.341995 139628478494464 hlog.py:32] train/00149/eval_val/73 
I1203 10:57:22.342067 139628478494464 hlog.py:18] train/00149/eval_val/73{0.00s}
I1203 10:57:22.342159 139628478494464 hlog.py:32] train/00149/eval_val/74/input what is the area of maine
I1203 10:57:22.342253 139628478494464 hlog.py:32] train/00149/eval_val/74/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 10:57:22.342342 139628478494464 hlog.py:32] train/00149/eval_val/74/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maine ) ) ) )
I1203 10:57:22.342421 139628478494464 hlog.py:32] train/00149/eval_val/74/corr True
I1203 10:57:22.342495 139628478494464 hlog.py:32] train/00149/eval_val/74 
I1203 10:57:22.342566 139628478494464 hlog.py:18] train/00149/eval_val/74{0.00s}
I1203 10:57:22.342660 139628478494464 hlog.py:32] train/00149/eval_val/75/input what is the area of maryland in square kilometers
I1203 10:57:22.342755 139628478494464 hlog.py:32] train/00149/eval_val/75/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 10:57:22.342844 139628478494464 hlog.py:32] train/00149/eval_val/75/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( maryland ) ) ) )
I1203 10:57:22.342923 139628478494464 hlog.py:32] train/00149/eval_val/75/corr True
I1203 10:57:22.342997 139628478494464 hlog.py:32] train/00149/eval_val/75 
I1203 10:57:22.343068 139628478494464 hlog.py:18] train/00149/eval_val/75{0.00s}
I1203 10:57:22.343160 139628478494464 hlog.py:32] train/00149/eval_val/76/input what is the area of new mexico
I1203 10:57:22.343255 139628478494464 hlog.py:32] train/00149/eval_val/76/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.343344 139628478494464 hlog.py:32] train/00149/eval_val/76/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( new mexico ) ) ) )
I1203 10:57:22.343429 139628478494464 hlog.py:32] train/00149/eval_val/76/corr True
I1203 10:57:22.343510 139628478494464 hlog.py:32] train/00149/eval_val/76 
I1203 10:57:22.343583 139628478494464 hlog.py:18] train/00149/eval_val/76{0.00s}
I1203 10:57:22.343675 139628478494464 hlog.py:32] train/00149/eval_val/77/input what is the area of ohio
I1203 10:57:22.343770 139628478494464 hlog.py:32] train/00149/eval_val/77/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 10:57:22.343860 139628478494464 hlog.py:32] train/00149/eval_val/77/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 10:57:22.343939 139628478494464 hlog.py:32] train/00149/eval_val/77/corr True
I1203 10:57:22.344013 139628478494464 hlog.py:32] train/00149/eval_val/77 
I1203 10:57:22.344085 139628478494464 hlog.py:18] train/00149/eval_val/77{0.00s}
I1203 10:57:22.344177 139628478494464 hlog.py:32] train/00149/eval_val/78/input what is the area of washington
I1203 10:57:22.344271 139628478494464 hlog.py:32] train/00149/eval_val/78/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 10:57:22.344361 139628478494464 hlog.py:32] train/00149/eval_val/78/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( washington ) ) ) )
I1203 10:57:22.344439 139628478494464 hlog.py:32] train/00149/eval_val/78/corr True
I1203 10:57:22.344513 139628478494464 hlog.py:32] train/00149/eval_val/78 
I1203 10:57:22.344584 139628478494464 hlog.py:18] train/00149/eval_val/78{0.00s}
I1203 10:57:22.344677 139628478494464 hlog.py:32] train/00149/eval_val/79/input what is the area of south carolina
I1203 10:57:22.344771 139628478494464 hlog.py:32] train/00149/eval_val/79/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 10:57:22.344861 139628478494464 hlog.py:32] train/00149/eval_val/79/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( south carolina ) ) ) )
I1203 10:57:22.344939 139628478494464 hlog.py:32] train/00149/eval_val/79/corr True
I1203 10:57:22.345012 139628478494464 hlog.py:32] train/00149/eval_val/79 
I1203 10:57:22.345084 139628478494464 hlog.py:18] train/00149/eval_val/79{0.00s}
I1203 10:57:22.345176 139628478494464 hlog.py:32] train/00149/eval_val/80/input what is the area of texas
I1203 10:57:22.345269 139628478494464 hlog.py:32] train/00149/eval_val/80/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.345359 139628478494464 hlog.py:32] train/00149/eval_val/80/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.345438 139628478494464 hlog.py:32] train/00149/eval_val/80/corr True
I1203 10:57:22.345511 139628478494464 hlog.py:32] train/00149/eval_val/80 
I1203 10:57:22.345583 139628478494464 hlog.py:18] train/00149/eval_val/80{0.00s}
I1203 10:57:22.345671 139628478494464 hlog.py:32] train/00149/eval_val/81/input what is the area of the texas state
I1203 10:57:22.345767 139628478494464 hlog.py:32] train/00149/eval_val/81/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) , _state ( B ) ) )
I1203 10:57:22.345856 139628478494464 hlog.py:32] train/00149/eval_val/81/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.345936 139628478494464 hlog.py:32] train/00149/eval_val/81/corr False
I1203 10:57:22.346009 139628478494464 hlog.py:32] train/00149/eval_val/81 
I1203 10:57:22.346080 139628478494464 hlog.py:18] train/00149/eval_val/81{0.00s}
I1203 10:57:22.346172 139628478494464 hlog.py:32] train/00149/eval_val/82/input what is the area of wisconsin
I1203 10:57:22.346266 139628478494464 hlog.py:32] train/00149/eval_val/82/pred ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 10:57:22.346355 139628478494464 hlog.py:32] train/00149/eval_val/82/gold ( A , ( _area ( B , A ) , _const ( B , _stateid ( wisconsin ) ) ) )
I1203 10:57:22.346434 139628478494464 hlog.py:32] train/00149/eval_val/82/corr True
I1203 10:57:22.346507 139628478494464 hlog.py:32] train/00149/eval_val/82 
I1203 10:57:22.346579 139628478494464 hlog.py:18] train/00149/eval_val/82{0.00s}
I1203 10:57:22.346669 139628478494464 hlog.py:32] train/00149/eval_val/83/input what is the area of the smallest state
I1203 10:57:22.346771 139628478494464 hlog.py:32] train/00149/eval_val/83/pred ( A , _smallest ( B , ( _area ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.346862 139628478494464 hlog.py:32] train/00149/eval_val/83/gold ( A , ( _area ( B , A ) , _smallest ( B , _state ( B ) ) ) )
I1203 10:57:22.346941 139628478494464 hlog.py:32] train/00149/eval_val/83/corr False
I1203 10:57:22.347015 139628478494464 hlog.py:32] train/00149/eval_val/83 
I1203 10:57:22.347086 139628478494464 hlog.py:18] train/00149/eval_val/83{0.00s}
I1203 10:57:22.347178 139628478494464 hlog.py:32] train/00149/eval_val/84/input what is the average population of the us by state
I1203 10:57:22.347273 139628478494464 hlog.py:32] train/00149/eval_val/84/pred ( A , ( _population ( B , A ) , _largest ( B , _state ( B ) ) ) )
I1203 10:57:22.347363 139628478494464 hlog.py:32] train/00149/eval_val/84/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.347451 139628478494464 hlog.py:32] train/00149/eval_val/84/corr False
I1203 10:57:22.347525 139628478494464 hlog.py:32] train/00149/eval_val/84 
I1203 10:57:22.347597 139628478494464 hlog.py:18] train/00149/eval_val/84{0.00s}
I1203 10:57:22.347691 139628478494464 hlog.py:32] train/00149/eval_val/85/input what is the average population per square km in the us
I1203 10:57:22.347785 139628478494464 hlog.py:32] train/00149/eval_val/85/pred ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.347874 139628478494464 hlog.py:32] train/00149/eval_val/85/gold ( A , ( _density ( B , A ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.347953 139628478494464 hlog.py:32] train/00149/eval_val/85/corr True
I1203 10:57:22.348026 139628478494464 hlog.py:32] train/00149/eval_val/85 
I1203 10:57:22.348098 139628478494464 hlog.py:18] train/00149/eval_val/85{0.00s}
I1203 10:57:22.348194 139628478494464 hlog.py:32] train/00149/eval_val/86/input what is the biggest american city in a state with a river
I1203 10:57:22.348296 139628478494464 hlog.py:32] train/00149/eval_val/86/pred ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 10:57:22.348390 139628478494464 hlog.py:32] train/00149/eval_val/86/gold ( A , _largest ( A , ( _city ( A ) , _loc ( A , B ) , _state ( B ) , _loc ( C , B ) , _river ( C ) ) ) )
I1203 10:57:22.348469 139628478494464 hlog.py:32] train/00149/eval_val/86/corr True
I1203 10:57:22.348543 139628478494464 hlog.py:32] train/00149/eval_val/86 
I1203 10:57:22.348614 139628478494464 hlog.py:18] train/00149/eval_val/86{0.00s}
I1203 10:57:22.348712 139628478494464 hlog.py:32] train/00149/eval_val/87/input what is the capital city of the largest state in the us
I1203 10:57:22.348819 139628478494464 hlog.py:32] train/00149/eval_val/87/pred ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 10:57:22.348917 139628478494464 hlog.py:32] train/00149/eval_val/87/gold ( A , ( _capital ( A ) , _city ( A ) , _loc ( A , B ) , _largest ( B , ( _state ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 10:57:22.348996 139628478494464 hlog.py:32] train/00149/eval_val/87/corr True
I1203 10:57:22.349070 139628478494464 hlog.py:32] train/00149/eval_val/87 
I1203 10:57:22.349142 139628478494464 hlog.py:18] train/00149/eval_val/87{0.00s}
I1203 10:57:22.349235 139628478494464 hlog.py:32] train/00149/eval_val/88/input what is the capital of the largest state
I1203 10:57:22.349331 139628478494464 hlog.py:32] train/00149/eval_val/88/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 10:57:22.349422 139628478494464 hlog.py:32] train/00149/eval_val/88/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _largest ( B , _state ( B ) ) ) )
I1203 10:57:22.349501 139628478494464 hlog.py:32] train/00149/eval_val/88/corr True
I1203 10:57:22.349574 139628478494464 hlog.py:32] train/00149/eval_val/88 
I1203 10:57:22.349652 139628478494464 hlog.py:18] train/00149/eval_val/88{0.00s}
I1203 10:57:22.349749 139628478494464 hlog.py:32] train/00149/eval_val/89/input what is the capital of the state that borders the most states
I1203 10:57:22.349853 139628478494464 hlog.py:32] train/00149/eval_val/89/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.349949 139628478494464 hlog.py:32] train/00149/eval_val/89/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.350027 139628478494464 hlog.py:32] train/00149/eval_val/89/corr True
I1203 10:57:22.350101 139628478494464 hlog.py:32] train/00149/eval_val/89 
I1203 10:57:22.350172 139628478494464 hlog.py:18] train/00149/eval_val/89{0.00s}
I1203 10:57:22.350270 139628478494464 hlog.py:32] train/00149/eval_val/90/input what is the capital of the state that borders the state that borders texas
I1203 10:57:22.350377 139628478494464 hlog.py:32] train/00149/eval_val/90/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 10:57:22.350475 139628478494464 hlog.py:32] train/00149/eval_val/90/gold ( A , ( _capital ( A ) , _loc ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) , _next_to ( C , D ) , _const ( D , _stateid ( texas ) ) ) )
I1203 10:57:22.350554 139628478494464 hlog.py:32] train/00149/eval_val/90/corr True
I1203 10:57:22.350628 139628478494464 hlog.py:32] train/00149/eval_val/90 
I1203 10:57:22.350700 139628478494464 hlog.py:18] train/00149/eval_val/90{0.00s}
I1203 10:57:22.350795 139628478494464 hlog.py:32] train/00149/eval_val/91/input what is the highest mountain in the us
I1203 10:57:22.350894 139628478494464 hlog.py:32] train/00149/eval_val/91/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.350986 139628478494464 hlog.py:32] train/00149/eval_val/91/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.351065 139628478494464 hlog.py:32] train/00149/eval_val/91/corr True
I1203 10:57:22.351139 139628478494464 hlog.py:32] train/00149/eval_val/91 
I1203 10:57:22.351210 139628478494464 hlog.py:18] train/00149/eval_val/91{0.00s}
I1203 10:57:22.351303 139628478494464 hlog.py:32] train/00149/eval_val/92/input what is the highest mountain in us
I1203 10:57:22.351402 139628478494464 hlog.py:32] train/00149/eval_val/92/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.351502 139628478494464 hlog.py:32] train/00149/eval_val/92/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.351581 139628478494464 hlog.py:32] train/00149/eval_val/92/corr True
I1203 10:57:22.351655 139628478494464 hlog.py:32] train/00149/eval_val/92 
I1203 10:57:22.351727 139628478494464 hlog.py:18] train/00149/eval_val/92{0.00s}
I1203 10:57:22.351821 139628478494464 hlog.py:32] train/00149/eval_val/93/input what is the tallest mountain in america
I1203 10:57:22.351920 139628478494464 hlog.py:32] train/00149/eval_val/93/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.352013 139628478494464 hlog.py:32] train/00149/eval_val/93/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.352092 139628478494464 hlog.py:32] train/00149/eval_val/93/corr True
I1203 10:57:22.352166 139628478494464 hlog.py:32] train/00149/eval_val/93 
I1203 10:57:22.352237 139628478494464 hlog.py:18] train/00149/eval_val/93{0.00s}
I1203 10:57:22.352331 139628478494464 hlog.py:32] train/00149/eval_val/94/input what is the tallest mountain in the united states
I1203 10:57:22.352430 139628478494464 hlog.py:32] train/00149/eval_val/94/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.352529 139628478494464 hlog.py:32] train/00149/eval_val/94/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.352609 139628478494464 hlog.py:32] train/00149/eval_val/94/corr True
I1203 10:57:22.352682 139628478494464 hlog.py:32] train/00149/eval_val/94 
I1203 10:57:22.352754 139628478494464 hlog.py:18] train/00149/eval_val/94{0.00s}
I1203 10:57:22.352848 139628478494464 hlog.py:32] train/00149/eval_val/95/input where is the highest mountain of the united states
I1203 10:57:22.352947 139628478494464 hlog.py:32] train/00149/eval_val/95/pred ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.353040 139628478494464 hlog.py:32] train/00149/eval_val/95/gold ( A , _highest ( A , ( _mountain ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.353119 139628478494464 hlog.py:32] train/00149/eval_val/95/corr True
I1203 10:57:22.353193 139628478494464 hlog.py:32] train/00149/eval_val/95 
I1203 10:57:22.353264 139628478494464 hlog.py:18] train/00149/eval_val/95{0.00s}
I1203 10:57:22.353361 139628478494464 hlog.py:32] train/00149/eval_val/96/input what is the highest point in the state with the smallest population
I1203 10:57:22.353463 139628478494464 hlog.py:32] train/00149/eval_val/96/pred ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 10:57:22.353558 139628478494464 hlog.py:32] train/00149/eval_val/96/gold ( A , _highest ( A , ( _place ( A ) , _loc ( A , B ) , _smallest ( C , ( _state ( B ) , _population ( B , C ) ) ) ) ) )
I1203 10:57:22.353636 139628478494464 hlog.py:32] train/00149/eval_val/96/corr True
I1203 10:57:22.353710 139628478494464 hlog.py:32] train/00149/eval_val/96 
I1203 10:57:22.353782 139628478494464 hlog.py:18] train/00149/eval_val/96{0.00s}
I1203 10:57:22.353873 139628478494464 hlog.py:32] train/00149/eval_val/97/input what is the longest river that passes the states that border the state that borders the most states
I1203 10:57:22.353976 139628478494464 hlog.py:32] train/00149/eval_val/97/pred ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.354112 139628478494464 hlog.py:32] train/00149/eval_val/97/gold ( A , _longest ( A , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _most ( C , D , ( _state ( C ) , _next_to ( C , D ) , _state ( D ) ) ) ) ) )
I1203 10:57:22.354194 139628478494464 hlog.py:32] train/00149/eval_val/97/corr False
I1203 10:57:22.354267 139628478494464 hlog.py:32] train/00149/eval_val/97 
I1203 10:57:22.354339 139628478494464 hlog.py:18] train/00149/eval_val/97{0.00s}
I1203 10:57:22.354434 139628478494464 hlog.py:32] train/00149/eval_val/98/input what is the lowest point in the state of california
I1203 10:57:22.354535 139628478494464 hlog.py:32] train/00149/eval_val/98/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 10:57:22.354629 139628478494464 hlog.py:32] train/00149/eval_val/98/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( california ) ) ) ) )
I1203 10:57:22.354708 139628478494464 hlog.py:32] train/00149/eval_val/98/corr True
I1203 10:57:22.354782 139628478494464 hlog.py:32] train/00149/eval_val/98 
I1203 10:57:22.354854 139628478494464 hlog.py:18] train/00149/eval_val/98{0.00s}
I1203 10:57:22.354949 139628478494464 hlog.py:32] train/00149/eval_val/99/input what is the lowest point in the state of texas
I1203 10:57:22.355050 139628478494464 hlog.py:32] train/00149/eval_val/99/pred ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 10:57:22.355143 139628478494464 hlog.py:32] train/00149/eval_val/99/gold ( A , _lowest ( A , ( _place ( A ) , _loc ( A , B ) , _state ( B ) , _const ( B , _stateid ( texas ) ) ) ) )
I1203 10:57:22.355229 139628478494464 hlog.py:32] train/00149/eval_val/99/corr True
I1203 10:57:22.355304 139628478494464 hlog.py:32] train/00149/eval_val/99 
I1203 10:57:22.355376 139628478494464 hlog.py:18] train/00149/eval_val/99{0.00s}
I1203 10:57:22.355478 139628478494464 hlog.py:32] train/00149/eval_val/100/input what is the most dense state in the usa
I1203 10:57:22.355581 139628478494464 hlog.py:32] train/00149/eval_val/100/pred ( A , _largest ( B , ( _state ( A ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) , _population ( A , B ) ) ) )
I1203 10:57:22.355676 139628478494464 hlog.py:32] train/00149/eval_val/100/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 10:57:22.355755 139628478494464 hlog.py:32] train/00149/eval_val/100/corr False
I1203 10:57:22.355829 139628478494464 hlog.py:32] train/00149/eval_val/100 
I1203 10:57:22.355901 139628478494464 hlog.py:18] train/00149/eval_val/100{0.00s}
I1203 10:57:22.355989 139628478494464 hlog.py:32] train/00149/eval_val/101/input what is the state with the largest density in usa
I1203 10:57:22.356093 139628478494464 hlog.py:32] train/00149/eval_val/101/pred ( A , ( _state ( A ) , _loc ( B , A ) , _largest ( B , ( _city ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 10:57:22.356187 139628478494464 hlog.py:32] train/00149/eval_val/101/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) , _loc ( A , C ) , _const ( C , _countryid ( usa ) ) ) ) )
I1203 10:57:22.356266 139628478494464 hlog.py:32] train/00149/eval_val/101/corr False
I1203 10:57:22.356340 139628478494464 hlog.py:32] train/00149/eval_val/101 
I1203 10:57:22.356412 139628478494464 hlog.py:18] train/00149/eval_val/101{0.00s}
I1203 10:57:22.356505 139628478494464 hlog.py:32] train/00149/eval_val/102/input what is the river that cross over ohio
I1203 10:57:22.356602 139628478494464 hlog.py:32] train/00149/eval_val/102/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 10:57:22.356693 139628478494464 hlog.py:32] train/00149/eval_val/102/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( ohio ) ) ) )
I1203 10:57:22.356771 139628478494464 hlog.py:32] train/00149/eval_val/102/corr True
I1203 10:57:22.356845 139628478494464 hlog.py:32] train/00149/eval_val/102 
I1203 10:57:22.356917 139628478494464 hlog.py:18] train/00149/eval_val/102{0.00s}
I1203 10:57:22.357009 139628478494464 hlog.py:32] train/00149/eval_val/103/input what river flows through kansas
I1203 10:57:22.357106 139628478494464 hlog.py:32] train/00149/eval_val/103/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 10:57:22.357197 139628478494464 hlog.py:32] train/00149/eval_val/103/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( kansas ) ) ) )
I1203 10:57:22.357275 139628478494464 hlog.py:32] train/00149/eval_val/103/corr True
I1203 10:57:22.357349 139628478494464 hlog.py:32] train/00149/eval_val/103 
I1203 10:57:22.357420 139628478494464 hlog.py:18] train/00149/eval_val/103{0.00s}
I1203 10:57:22.357512 139628478494464 hlog.py:32] train/00149/eval_val/104/input what river flows through texas
I1203 10:57:22.357609 139628478494464 hlog.py:32] train/00149/eval_val/104/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.357701 139628478494464 hlog.py:32] train/00149/eval_val/104/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.357780 139628478494464 hlog.py:32] train/00149/eval_val/104/corr True
I1203 10:57:22.357854 139628478494464 hlog.py:32] train/00149/eval_val/104 
I1203 10:57:22.357925 139628478494464 hlog.py:18] train/00149/eval_val/104{0.00s}
I1203 10:57:22.358018 139628478494464 hlog.py:32] train/00149/eval_val/105/input what river runs through illinois
I1203 10:57:22.358114 139628478494464 hlog.py:32] train/00149/eval_val/105/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 10:57:22.358211 139628478494464 hlog.py:32] train/00149/eval_val/105/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( illinois ) ) ) )
I1203 10:57:22.358290 139628478494464 hlog.py:32] train/00149/eval_val/105/corr True
I1203 10:57:22.358364 139628478494464 hlog.py:32] train/00149/eval_val/105 
I1203 10:57:22.358436 139628478494464 hlog.py:18] train/00149/eval_val/105{0.00s}
I1203 10:57:22.358528 139628478494464 hlog.py:32] train/00149/eval_val/106/input what river runs through virginia
I1203 10:57:22.358624 139628478494464 hlog.py:32] train/00149/eval_val/106/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 10:57:22.358715 139628478494464 hlog.py:32] train/00149/eval_val/106/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( virginia ) ) ) )
I1203 10:57:22.358794 139628478494464 hlog.py:32] train/00149/eval_val/106/corr True
I1203 10:57:22.358867 139628478494464 hlog.py:32] train/00149/eval_val/106 
I1203 10:57:22.358939 139628478494464 hlog.py:18] train/00149/eval_val/106{0.00s}
I1203 10:57:22.359031 139628478494464 hlog.py:32] train/00149/eval_val/107/input what rivers flow through colorado
I1203 10:57:22.359128 139628478494464 hlog.py:32] train/00149/eval_val/107/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.359219 139628478494464 hlog.py:32] train/00149/eval_val/107/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.359298 139628478494464 hlog.py:32] train/00149/eval_val/107/corr True
I1203 10:57:22.359372 139628478494464 hlog.py:32] train/00149/eval_val/107 
I1203 10:57:22.359452 139628478494464 hlog.py:18] train/00149/eval_val/107{0.00s}
I1203 10:57:22.359544 139628478494464 hlog.py:32] train/00149/eval_val/108/input what rivers flow through missouri
I1203 10:57:22.359641 139628478494464 hlog.py:32] train/00149/eval_val/108/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 10:57:22.359733 139628478494464 hlog.py:32] train/00149/eval_val/108/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( missouri ) ) ) )
I1203 10:57:22.359812 139628478494464 hlog.py:32] train/00149/eval_val/108/corr True
I1203 10:57:22.359885 139628478494464 hlog.py:32] train/00149/eval_val/108 
I1203 10:57:22.359956 139628478494464 hlog.py:18] train/00149/eval_val/108{0.00s}
I1203 10:57:22.360049 139628478494464 hlog.py:32] train/00149/eval_val/109/input what rivers run through arizona
I1203 10:57:22.360146 139628478494464 hlog.py:32] train/00149/eval_val/109/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 10:57:22.360237 139628478494464 hlog.py:32] train/00149/eval_val/109/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( arizona ) ) ) )
I1203 10:57:22.360316 139628478494464 hlog.py:32] train/00149/eval_val/109/corr True
I1203 10:57:22.360390 139628478494464 hlog.py:32] train/00149/eval_val/109 
I1203 10:57:22.360461 139628478494464 hlog.py:18] train/00149/eval_val/109{0.00s}
I1203 10:57:22.360553 139628478494464 hlog.py:32] train/00149/eval_val/110/input what rivers run through colorado
I1203 10:57:22.360650 139628478494464 hlog.py:32] train/00149/eval_val/110/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.360741 139628478494464 hlog.py:32] train/00149/eval_val/110/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( colorado ) ) ) )
I1203 10:57:22.360820 139628478494464 hlog.py:32] train/00149/eval_val/110/corr True
I1203 10:57:22.360893 139628478494464 hlog.py:32] train/00149/eval_val/110 
I1203 10:57:22.360964 139628478494464 hlog.py:18] train/00149/eval_val/110{0.00s}
I1203 10:57:22.361074 139628478494464 hlog.py:32] train/00149/eval_val/111/input what rivers run through louisiana
I1203 10:57:22.361175 139628478494464 hlog.py:32] train/00149/eval_val/111/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 10:57:22.361274 139628478494464 hlog.py:32] train/00149/eval_val/111/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( louisiana ) ) ) )
I1203 10:57:22.361357 139628478494464 hlog.py:32] train/00149/eval_val/111/corr True
I1203 10:57:22.361445 139628478494464 hlog.py:32] train/00149/eval_val/111 
I1203 10:57:22.361516 139628478494464 hlog.py:18] train/00149/eval_val/111{0.00s}
I1203 10:57:22.361609 139628478494464 hlog.py:32] train/00149/eval_val/112/input what rivers run through maine
I1203 10:57:22.361706 139628478494464 hlog.py:32] train/00149/eval_val/112/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 10:57:22.361796 139628478494464 hlog.py:32] train/00149/eval_val/112/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( maine ) ) ) )
I1203 10:57:22.361876 139628478494464 hlog.py:32] train/00149/eval_val/112/corr True
I1203 10:57:22.361949 139628478494464 hlog.py:32] train/00149/eval_val/112 
I1203 10:57:22.362021 139628478494464 hlog.py:18] train/00149/eval_val/112{0.00s}
I1203 10:57:22.362114 139628478494464 hlog.py:32] train/00149/eval_val/113/input what rivers run through new york
I1203 10:57:22.362211 139628478494464 hlog.py:32] train/00149/eval_val/113/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 10:57:22.362302 139628478494464 hlog.py:32] train/00149/eval_val/113/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( new york ) ) ) )
I1203 10:57:22.362381 139628478494464 hlog.py:32] train/00149/eval_val/113/corr True
I1203 10:57:22.362455 139628478494464 hlog.py:32] train/00149/eval_val/113 
I1203 10:57:22.362526 139628478494464 hlog.py:18] train/00149/eval_val/113{0.00s}
I1203 10:57:22.362619 139628478494464 hlog.py:32] train/00149/eval_val/114/input what rivers run through texas
I1203 10:57:22.362716 139628478494464 hlog.py:32] train/00149/eval_val/114/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.362806 139628478494464 hlog.py:32] train/00149/eval_val/114/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( texas ) ) ) )
I1203 10:57:22.362885 139628478494464 hlog.py:32] train/00149/eval_val/114/corr True
I1203 10:57:22.362959 139628478494464 hlog.py:32] train/00149/eval_val/114 
I1203 10:57:22.363031 139628478494464 hlog.py:18] train/00149/eval_val/114{0.00s}
I1203 10:57:22.363124 139628478494464 hlog.py:32] train/00149/eval_val/115/input what rivers run through west virginia
I1203 10:57:22.363222 139628478494464 hlog.py:32] train/00149/eval_val/115/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 10:57:22.363313 139628478494464 hlog.py:32] train/00149/eval_val/115/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( west virginia ) ) ) )
I1203 10:57:22.363392 139628478494464 hlog.py:32] train/00149/eval_val/115/corr True
I1203 10:57:22.363473 139628478494464 hlog.py:32] train/00149/eval_val/115 
I1203 10:57:22.363545 139628478494464 hlog.py:18] train/00149/eval_val/115{0.00s}
I1203 10:57:22.363638 139628478494464 hlog.py:32] train/00149/eval_val/116/input which rivers flow through alaska
I1203 10:57:22.363735 139628478494464 hlog.py:32] train/00149/eval_val/116/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.363825 139628478494464 hlog.py:32] train/00149/eval_val/116/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _const ( B , _stateid ( alaska ) ) ) )
I1203 10:57:22.363904 139628478494464 hlog.py:32] train/00149/eval_val/116/corr True
I1203 10:57:22.363978 139628478494464 hlog.py:32] train/00149/eval_val/116 
I1203 10:57:22.364049 139628478494464 hlog.py:18] train/00149/eval_val/116{0.00s}
I1203 10:57:22.364143 139628478494464 hlog.py:32] train/00149/eval_val/117/input what is the shortest river in the united states
I1203 10:57:22.364242 139628478494464 hlog.py:32] train/00149/eval_val/117/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.364340 139628478494464 hlog.py:32] train/00149/eval_val/117/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.364420 139628478494464 hlog.py:32] train/00149/eval_val/117/corr True
I1203 10:57:22.364494 139628478494464 hlog.py:32] train/00149/eval_val/117 
I1203 10:57:22.364566 139628478494464 hlog.py:18] train/00149/eval_val/117{0.00s}
I1203 10:57:22.364660 139628478494464 hlog.py:32] train/00149/eval_val/118/input what is the shortest river in the us
I1203 10:57:22.364759 139628478494464 hlog.py:32] train/00149/eval_val/118/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.364851 139628478494464 hlog.py:32] train/00149/eval_val/118/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.364930 139628478494464 hlog.py:32] train/00149/eval_val/118/corr True
I1203 10:57:22.365004 139628478494464 hlog.py:32] train/00149/eval_val/118 
I1203 10:57:22.365075 139628478494464 hlog.py:18] train/00149/eval_val/118{0.00s}
I1203 10:57:22.365169 139628478494464 hlog.py:32] train/00149/eval_val/119/input what is the shortest river in the usa
I1203 10:57:22.365268 139628478494464 hlog.py:32] train/00149/eval_val/119/pred ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.365360 139628478494464 hlog.py:32] train/00149/eval_val/119/gold ( A , _shortest ( A , ( _river ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) ) )
I1203 10:57:22.365440 139628478494464 hlog.py:32] train/00149/eval_val/119/corr True
I1203 10:57:22.365514 139628478494464 hlog.py:32] train/00149/eval_val/119 
I1203 10:57:22.365585 139628478494464 hlog.py:18] train/00149/eval_val/119{0.00s}
I1203 10:57:22.365675 139628478494464 hlog.py:32] train/00149/eval_val/120/input what is the shortest river
I1203 10:57:22.365766 139628478494464 hlog.py:32] train/00149/eval_val/120/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 10:57:22.365853 139628478494464 hlog.py:32] train/00149/eval_val/120/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 10:57:22.365931 139628478494464 hlog.py:32] train/00149/eval_val/120/corr True
I1203 10:57:22.366005 139628478494464 hlog.py:32] train/00149/eval_val/120 
I1203 10:57:22.366077 139628478494464 hlog.py:18] train/00149/eval_val/120{0.00s}
I1203 10:57:22.366168 139628478494464 hlog.py:32] train/00149/eval_val/121/input which is the shortest river
I1203 10:57:22.366258 139628478494464 hlog.py:32] train/00149/eval_val/121/pred ( A , _shortest ( A , _river ( A ) ) )
I1203 10:57:22.366345 139628478494464 hlog.py:32] train/00149/eval_val/121/gold ( A , _shortest ( A , _river ( A ) ) )
I1203 10:57:22.366423 139628478494464 hlog.py:32] train/00149/eval_val/121/corr True
I1203 10:57:22.366497 139628478494464 hlog.py:32] train/00149/eval_val/121 
I1203 10:57:22.366568 139628478494464 hlog.py:18] train/00149/eval_val/121{0.00s}
I1203 10:57:22.366662 139628478494464 hlog.py:32] train/00149/eval_val/122/input what is the smallest city in alaska
I1203 10:57:22.366760 139628478494464 hlog.py:32] train/00149/eval_val/122/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 10:57:22.366853 139628478494464 hlog.py:32] train/00149/eval_val/122/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( alaska ) ) ) ) )
I1203 10:57:22.366932 139628478494464 hlog.py:32] train/00149/eval_val/122/corr True
I1203 10:57:22.367006 139628478494464 hlog.py:32] train/00149/eval_val/122 
I1203 10:57:22.367078 139628478494464 hlog.py:18] train/00149/eval_val/122{0.00s}
I1203 10:57:22.367172 139628478494464 hlog.py:32] train/00149/eval_val/123/input what is the smallest city in arkansas
I1203 10:57:22.367271 139628478494464 hlog.py:32] train/00149/eval_val/123/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 10:57:22.367369 139628478494464 hlog.py:32] train/00149/eval_val/123/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( arkansas ) ) ) ) )
I1203 10:57:22.367456 139628478494464 hlog.py:32] train/00149/eval_val/123/corr True
I1203 10:57:22.367530 139628478494464 hlog.py:32] train/00149/eval_val/123 
I1203 10:57:22.367602 139628478494464 hlog.py:18] train/00149/eval_val/123{0.00s}
I1203 10:57:22.367696 139628478494464 hlog.py:32] train/00149/eval_val/124/input what is the smallest city in hawaii
I1203 10:57:22.367794 139628478494464 hlog.py:32] train/00149/eval_val/124/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 10:57:22.367887 139628478494464 hlog.py:32] train/00149/eval_val/124/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( hawaii ) ) ) ) )
I1203 10:57:22.367966 139628478494464 hlog.py:32] train/00149/eval_val/124/corr True
I1203 10:57:22.368040 139628478494464 hlog.py:32] train/00149/eval_val/124 
I1203 10:57:22.368112 139628478494464 hlog.py:18] train/00149/eval_val/124{0.00s}
I1203 10:57:22.368206 139628478494464 hlog.py:32] train/00149/eval_val/125/input what is the smallest city in washington
I1203 10:57:22.368304 139628478494464 hlog.py:32] train/00149/eval_val/125/pred ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 10:57:22.368397 139628478494464 hlog.py:32] train/00149/eval_val/125/gold ( A , _smallest ( A , ( _city ( A ) , _loc ( A , B ) , _const ( B , _stateid ( washington ) ) ) ) )
I1203 10:57:22.368476 139628478494464 hlog.py:32] train/00149/eval_val/125/corr True
I1203 10:57:22.368550 139628478494464 hlog.py:32] train/00149/eval_val/125 
I1203 10:57:22.368621 139628478494464 hlog.py:18] train/00149/eval_val/125{0.00s}
I1203 10:57:22.368714 139628478494464 hlog.py:32] train/00149/eval_val/126/input what is the state with the largest population density
I1203 10:57:22.368808 139628478494464 hlog.py:32] train/00149/eval_val/126/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.368898 139628478494464 hlog.py:32] train/00149/eval_val/126/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.368976 139628478494464 hlog.py:32] train/00149/eval_val/126/corr True
I1203 10:57:22.369050 139628478494464 hlog.py:32] train/00149/eval_val/126 
I1203 10:57:22.369122 139628478494464 hlog.py:18] train/00149/eval_val/126{0.00s}
I1203 10:57:22.369212 139628478494464 hlog.py:32] train/00149/eval_val/127/input what state has the greatest population density
I1203 10:57:22.369306 139628478494464 hlog.py:32] train/00149/eval_val/127/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.369396 139628478494464 hlog.py:32] train/00149/eval_val/127/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.369475 139628478494464 hlog.py:32] train/00149/eval_val/127/corr False
I1203 10:57:22.369548 139628478494464 hlog.py:32] train/00149/eval_val/127 
I1203 10:57:22.369620 139628478494464 hlog.py:18] train/00149/eval_val/127{0.00s}
I1203 10:57:22.489152 139628478494464 hlog.py:32] train/00149/eval_val/128/input what state has the highest population density
I1203 10:57:22.489278 139628478494464 hlog.py:32] train/00149/eval_val/128/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.489380 139628478494464 hlog.py:32] train/00149/eval_val/128/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.489467 139628478494464 hlog.py:32] train/00149/eval_val/128/corr False
I1203 10:57:22.489546 139628478494464 hlog.py:32] train/00149/eval_val/128 
I1203 10:57:22.489622 139628478494464 hlog.py:18] train/00149/eval_val/128{0.00s}
I1203 10:57:22.489719 139628478494464 hlog.py:32] train/00149/eval_val/129/input what state has the largest population density
I1203 10:57:22.489816 139628478494464 hlog.py:32] train/00149/eval_val/129/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.489918 139628478494464 hlog.py:32] train/00149/eval_val/129/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.489999 139628478494464 hlog.py:32] train/00149/eval_val/129/corr True
I1203 10:57:22.490074 139628478494464 hlog.py:32] train/00149/eval_val/129 
I1203 10:57:22.490147 139628478494464 hlog.py:18] train/00149/eval_val/129{0.00s}
I1203 10:57:22.490239 139628478494464 hlog.py:32] train/00149/eval_val/130/input which state has the greatest density
I1203 10:57:22.490334 139628478494464 hlog.py:32] train/00149/eval_val/130/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.490423 139628478494464 hlog.py:32] train/00149/eval_val/130/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.490503 139628478494464 hlog.py:32] train/00149/eval_val/130/corr False
I1203 10:57:22.490577 139628478494464 hlog.py:32] train/00149/eval_val/130 
I1203 10:57:22.490650 139628478494464 hlog.py:18] train/00149/eval_val/130{0.00s}
I1203 10:57:22.490741 139628478494464 hlog.py:32] train/00149/eval_val/131/input which state has the highest population density
I1203 10:57:22.490836 139628478494464 hlog.py:32] train/00149/eval_val/131/pred ( A , _smallest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.490926 139628478494464 hlog.py:32] train/00149/eval_val/131/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.491005 139628478494464 hlog.py:32] train/00149/eval_val/131/corr False
I1203 10:57:22.491080 139628478494464 hlog.py:32] train/00149/eval_val/131 
I1203 10:57:22.491152 139628478494464 hlog.py:18] train/00149/eval_val/131{0.00s}
I1203 10:57:22.491244 139628478494464 hlog.py:32] train/00149/eval_val/132/input which state has the largest density
I1203 10:57:22.491339 139628478494464 hlog.py:32] train/00149/eval_val/132/pred ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.491436 139628478494464 hlog.py:32] train/00149/eval_val/132/gold ( A , _largest ( B , ( _state ( A ) , _density ( A , B ) ) ) )
I1203 10:57:22.491518 139628478494464 hlog.py:32] train/00149/eval_val/132/corr True
I1203 10:57:22.491592 139628478494464 hlog.py:32] train/00149/eval_val/132 
I1203 10:57:22.491665 139628478494464 hlog.py:18] train/00149/eval_val/132{0.00s}
I1203 10:57:22.491754 139628478494464 hlog.py:32] train/00149/eval_val/133/input what is the total length of all rivers in the usa
I1203 10:57:22.491855 139628478494464 hlog.py:32] train/00149/eval_val/133/pred ( A , _sum ( C , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) , A ) )
I1203 10:57:22.491945 139628478494464 hlog.py:32] train/00149/eval_val/133/gold ( A , _sum ( C , _river ( C ) , _len ( C ) , A ) )
I1203 10:57:22.492024 139628478494464 hlog.py:32] train/00149/eval_val/133/corr False
I1203 10:57:22.492098 139628478494464 hlog.py:32] train/00149/eval_val/133 
I1203 10:57:22.492170 139628478494464 hlog.py:18] train/00149/eval_val/133{0.00s}
I1203 10:57:22.492259 139628478494464 hlog.py:32] train/00149/eval_val/134/input what river traverses the state which borders the most states
I1203 10:57:22.492362 139628478494464 hlog.py:32] train/00149/eval_val/134/pred ( A , _most ( A , B , ( _river ( A ) , _traverse ( A , B ) , _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.492459 139628478494464 hlog.py:32] train/00149/eval_val/134/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.492538 139628478494464 hlog.py:32] train/00149/eval_val/134/corr False
I1203 10:57:22.492612 139628478494464 hlog.py:32] train/00149/eval_val/134 
I1203 10:57:22.492684 139628478494464 hlog.py:18] train/00149/eval_val/134{0.00s}
I1203 10:57:22.492781 139628478494464 hlog.py:32] train/00149/eval_val/135/input what rivers traverses the state which borders the most states
I1203 10:57:22.492885 139628478494464 hlog.py:32] train/00149/eval_val/135/pred ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.492987 139628478494464 hlog.py:32] train/00149/eval_val/135/gold ( A , ( _river ( A ) , _traverse ( A , B ) , _most ( B , C , ( _state ( B ) , _next_to ( B , C ) , _state ( C ) ) ) ) )
I1203 10:57:22.493067 139628478494464 hlog.py:32] train/00149/eval_val/135/corr True
I1203 10:57:22.493141 139628478494464 hlog.py:32] train/00149/eval_val/135 
I1203 10:57:22.493213 139628478494464 hlog.py:18] train/00149/eval_val/135{0.00s}
I1203 10:57:22.493306 139628478494464 hlog.py:32] train/00149/eval_val/136/input what state borders most other states
I1203 10:57:22.493403 139628478494464 hlog.py:32] train/00149/eval_val/136/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.493494 139628478494464 hlog.py:32] train/00149/eval_val/136/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.493573 139628478494464 hlog.py:32] train/00149/eval_val/136/corr True
I1203 10:57:22.493646 139628478494464 hlog.py:32] train/00149/eval_val/136 
I1203 10:57:22.493718 139628478494464 hlog.py:18] train/00149/eval_val/136{0.00s}
I1203 10:57:22.493811 139628478494464 hlog.py:32] train/00149/eval_val/137/input what state borders the most states
I1203 10:57:22.493908 139628478494464 hlog.py:32] train/00149/eval_val/137/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.494000 139628478494464 hlog.py:32] train/00149/eval_val/137/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.494078 139628478494464 hlog.py:32] train/00149/eval_val/137/corr True
I1203 10:57:22.494152 139628478494464 hlog.py:32] train/00149/eval_val/137 
I1203 10:57:22.494223 139628478494464 hlog.py:18] train/00149/eval_val/137{0.00s}
I1203 10:57:22.494316 139628478494464 hlog.py:32] train/00149/eval_val/138/input which state borders most states
I1203 10:57:22.494413 139628478494464 hlog.py:32] train/00149/eval_val/138/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.494504 139628478494464 hlog.py:32] train/00149/eval_val/138/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.494583 139628478494464 hlog.py:32] train/00149/eval_val/138/corr True
I1203 10:57:22.494657 139628478494464 hlog.py:32] train/00149/eval_val/138 
I1203 10:57:22.494729 139628478494464 hlog.py:18] train/00149/eval_val/138{0.00s}
I1203 10:57:22.494821 139628478494464 hlog.py:32] train/00149/eval_val/139/input which state borders the most states
I1203 10:57:22.494919 139628478494464 hlog.py:32] train/00149/eval_val/139/pred ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.495009 139628478494464 hlog.py:32] train/00149/eval_val/139/gold ( A , _most ( A , B , ( _state ( A ) , _next_to ( A , B ) , _state ( B ) ) ) )
I1203 10:57:22.495088 139628478494464 hlog.py:32] train/00149/eval_val/139/corr True
I1203 10:57:22.495161 139628478494464 hlog.py:32] train/00149/eval_val/139 
I1203 10:57:22.495233 139628478494464 hlog.py:18] train/00149/eval_val/139{0.00s}
I1203 10:57:22.495321 139628478494464 hlog.py:32] train/00149/eval_val/140/input what state has the most major rivers running through it
I1203 10:57:22.495429 139628478494464 hlog.py:32] train/00149/eval_val/140/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 10:57:22.495525 139628478494464 hlog.py:32] train/00149/eval_val/140/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 10:57:22.495605 139628478494464 hlog.py:32] train/00149/eval_val/140/corr False
I1203 10:57:22.495679 139628478494464 hlog.py:32] train/00149/eval_val/140 
I1203 10:57:22.495750 139628478494464 hlog.py:18] train/00149/eval_val/140{0.00s}
I1203 10:57:22.495839 139628478494464 hlog.py:32] train/00149/eval_val/141/input which state has the most major rivers running through it
I1203 10:57:22.495946 139628478494464 hlog.py:32] train/00149/eval_val/141/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 10:57:22.496042 139628478494464 hlog.py:32] train/00149/eval_val/141/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) , _traverse ( B , A ) ) ) )
I1203 10:57:22.496121 139628478494464 hlog.py:32] train/00149/eval_val/141/corr False
I1203 10:57:22.496194 139628478494464 hlog.py:32] train/00149/eval_val/141 
I1203 10:57:22.496265 139628478494464 hlog.py:18] train/00149/eval_val/141{0.00s}
I1203 10:57:22.496352 139628478494464 hlog.py:32] train/00149/eval_val/142/input where is mount whitney located
I1203 10:57:22.496449 139628478494464 hlog.py:32] train/00149/eval_val/142/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 10:57:22.496539 139628478494464 hlog.py:32] train/00149/eval_val/142/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 10:57:22.496618 139628478494464 hlog.py:32] train/00149/eval_val/142/corr False
I1203 10:57:22.496692 139628478494464 hlog.py:32] train/00149/eval_val/142 
I1203 10:57:22.496764 139628478494464 hlog.py:18] train/00149/eval_val/142{0.00s}
I1203 10:57:22.496850 139628478494464 hlog.py:32] train/00149/eval_val/143/input where is mount whitney
I1203 10:57:22.496946 139628478494464 hlog.py:32] train/00149/eval_val/143/pred ( A , ( _loc ( B , A ) , _const ( B , _cityid ( mount whitney , _ ) ) ) )
I1203 10:57:22.497035 139628478494464 hlog.py:32] train/00149/eval_val/143/gold ( A , ( _loc ( B , A ) , _const ( B , _placeid ( mount whitney ) ) ) )
I1203 10:57:22.497115 139628478494464 hlog.py:32] train/00149/eval_val/143/corr False
I1203 10:57:22.497189 139628478494464 hlog.py:32] train/00149/eval_val/143 
I1203 10:57:22.497260 139628478494464 hlog.py:18] train/00149/eval_val/143{0.00s}
I1203 10:57:22.497347 139628478494464 hlog.py:32] train/00149/eval_val/144/input where is the smallest city
I1203 10:57:22.497437 139628478494464 hlog.py:32] train/00149/eval_val/144/pred ( A , _smallest ( A , _city ( A ) ) )
I1203 10:57:22.497527 139628478494464 hlog.py:32] train/00149/eval_val/144/gold ( A , ( _loc ( B , A ) , _smallest ( B , _city ( B ) ) ) )
I1203 10:57:22.497606 139628478494464 hlog.py:32] train/00149/eval_val/144/corr False
I1203 10:57:22.497679 139628478494464 hlog.py:32] train/00149/eval_val/144 
I1203 10:57:22.497751 139628478494464 hlog.py:18] train/00149/eval_val/144{0.00s}
I1203 10:57:22.497840 139628478494464 hlog.py:32] train/00149/eval_val/145/input which capitals are not major cities
I1203 10:57:22.497937 139628478494464 hlog.py:32] train/00149/eval_val/145/pred ( A , ( _capital ( A ) , _loc ( A , B ) , _const ( B , _countryid ( usa ) ) ) )
I1203 10:57:22.498027 139628478494464 hlog.py:32] train/00149/eval_val/145/gold ( A , ( _capital ( A ) , \+ ( _major ( A ) , _city ( A ) ) ) )
I1203 10:57:22.498106 139628478494464 hlog.py:32] train/00149/eval_val/145/corr False
I1203 10:57:22.498179 139628478494464 hlog.py:32] train/00149/eval_val/145 
I1203 10:57:22.498251 139628478494464 hlog.py:18] train/00149/eval_val/145{0.00s}
I1203 10:57:22.498341 139628478494464 hlog.py:32] train/00149/eval_val/146/input which is the density of the state that the largest river in the united states runs through
I1203 10:57:22.498445 139628478494464 hlog.py:32] train/00149/eval_val/146/pred ( A , ( _len ( B , A ) , _largest ( B , ( _river ( B ) , _loc ( B , C ) , _const ( C , _countryid ( usa ) ) ) ) ) )
I1203 10:57:22.498543 139628478494464 hlog.py:32] train/00149/eval_val/146/gold ( A , ( _density ( B , A ) , _state ( B ) , _longest ( C , ( _river ( C ) , _loc ( C , D ) , _const ( D , _countryid ( usa ) ) ) ) , _traverse ( C , B ) ) )
I1203 10:57:22.498623 139628478494464 hlog.py:32] train/00149/eval_val/146/corr False
I1203 10:57:22.498697 139628478494464 hlog.py:32] train/00149/eval_val/146 
I1203 10:57:22.498768 139628478494464 hlog.py:18] train/00149/eval_val/146{0.00s}
I1203 10:57:22.498868 139628478494464 hlog.py:32] train/00149/eval_val/147/input which state has the most major rivers
I1203 10:57:22.498969 139628478494464 hlog.py:32] train/00149/eval_val/147/pred ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 10:57:22.499062 139628478494464 hlog.py:32] train/00149/eval_val/147/gold ( A , _most ( A , B , ( _state ( A ) , _loc ( B , A ) , _major ( B ) , _river ( B ) ) ) )
I1203 10:57:22.499141 139628478494464 hlog.py:32] train/00149/eval_val/147/corr True
I1203 10:57:22.499215 139628478494464 hlog.py:32] train/00149/eval_val/147 
I1203 10:57:22.499287 139628478494464 hlog.py:18] train/00149/eval_val/147{0.00s}
I1203 10:57:22.499366 139628478494464 hlog.py:32] train/00149/eval_val/acc 0.7365
I1203 10:57:22.529348 139628478494464 hlog.py:18] train/00149{15.98s}
I1203 10:57:22.531360 139628478494464 hlog.py:18] train{2432.86s}
